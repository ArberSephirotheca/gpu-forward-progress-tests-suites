#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_4 {
 int _f0;
} ;

struct _GLF_struct_5 {
 _GLF_struct_4 _f0;
 bvec4 _f1;
} ;

struct _GLF_struct_2 {
 uvec2 _f0;
 mat2x4 _f1;
} ;

struct _GLF_struct_3 {
 mat3 _f0;
 uint virtual_gid;
 uvec2 _f1;
 _GLF_struct_2 _f2;
 uvec3 _f3;
 ivec3 _f4;
} ;

struct _GLF_struct_0 {
 uint _f0;
 mat4 _f1;
 int _f2;
} ;

struct _GLF_struct_1 {
 mat4 _f0;
 _GLF_struct_0 _f1;
 bvec4 _f2;
 mat3x4 _f3;
} ;

struct _GLF_struct_6 {
 _GLF_struct_1 _f0;
 _GLF_struct_3 _f1;
 _GLF_struct_5 _f2;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   do
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             barrier();
            }
          }
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     do
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))));
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
      }
     else
      {
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
    }
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 do
  {
   do
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
            }
          }
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 barrier();
                }
              }
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         do
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
          }
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       do
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))));
      }
     barrier();
    }
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 do
  {
   do
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), false))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))).y))))
        barrier();
       do
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
          }
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec3(_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID.x, clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x))) | (_GLF_IDENTITY(gl_WorkGroupID.x, ~ (~ (gl_WorkGroupID.x))))), 1u, 1u)))) * 1u);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  {
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 do
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     do
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   else
    {
    }
  }
 _GLF_struct_6 _GLF_struct_replacement_6 = _GLF_struct_6(_GLF_struct_1(mat4(1.0), _GLF_struct_0(1u, mat4(1.0), 1), bvec4(true), mat3x4(1.0)), _GLF_struct_3(mat3(1.0), workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, _GLF_IDENTITY(uvec2(1u), (uvec2(1u)) / uvec2(1u, 1u)), _GLF_struct_2(uvec2(1u), mat2x4(1.0)), uvec3(_GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1u))), _GLF_IDENTITY(ivec3(1), (_GLF_IDENTITY(_GLF_IDENTITY(ivec3(1), (ivec3(1)) / ivec3(1, 1, 1)), (_GLF_IDENTITY(ivec3(1), (ivec3(1)) / ivec3(1, 1, 1))) * ivec3(1, 1, 1))) | (ivec3(1)))), _GLF_struct_5(_GLF_struct_4(1), bvec4(true)));
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bool(false)))));
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  barrier();
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) | (int(5))), (_GLF_IDENTITY(int(5), (int(5)) | (int(5)))) >> int(_GLF_ZERO(0.0, injectionSwitch.x))))) >> _GLF_IDENTITY(int(5), int(5)))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
      }
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
      }
     else
      {
      }
    }
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = (((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) * 1) | 0) << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) | (_GLF_IDENTITY(int(4), (int(4)) << 0))), _GLF_IDENTITY(_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4))), _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4))), max(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) / 1), (false ? _GLF_FUZZED(-11234) : int(4))), _GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) << 0)), (false ? _GLF_FUZZED(-11234) : int(4))))), 1, 0), ivec3(0, 0, 0) + (ivec3(_GLF_IDENTITY(_GLF_IDENTITY(int(4), _GLF_IDENTITY((false ? _GLF_FUZZED(-11234) : int(4)), clamp((false ? _GLF_FUZZED(-11234) : int(4)), (false ? _GLF_FUZZED(-11234) : int(4)), (false ? _GLF_FUZZED(-11234) : int(4))))), max(_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : _GLF_IDENTITY(int(4), (int(4)) / 1))), _GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4))))), 1, 0))), max(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4))), min(_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4))), _GLF_IDENTITY(_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4))), clamp(_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4))), _GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4))), _GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4))))))), max(_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4))), _GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4))))), 1, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-61250) : 0))), ivec3(0, 0, 0) + (ivec3(_GLF_IDENTITY(_GLF_IDENTITY(int(4), _GLF_IDENTITY((false ? _GLF_FUZZED(-11234) : int(4)), clamp((false ? _GLF_FUZZED(-11234) : int(4)), _GLF_IDENTITY((false ? _GLF_FUZZED(-11234) : int(4)), 0 ^ ((false ? _GLF_FUZZED(-11234) : int(4)))), (false ? _GLF_FUZZED(-11234) : int(4))))), max(_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4))), _GLF_IDENTITY(_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4))), (_GLF_IDENTITY(_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4))), (_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4)))) ^ 0)) * 1))), 1, 0))), ivec3(0, 0, 0) ^ _GLF_IDENTITY((_GLF_IDENTITY(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4))), max(_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : _GLF_IDENTITY(int(4), (int(4)) - 0))), _GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4))))), 1, 0), ivec3(0, 0, 0) + (ivec3(_GLF_IDENTITY(_GLF_IDENTITY(int(4), _GLF_IDENTITY((false ? _GLF_FUZZED(-11234) : int(4)), clamp((false ? _GLF_FUZZED(-11234) : int(4)), (false ? _GLF_FUZZED(-11234) : int(4)), (false ? _GLF_FUZZED(-11234) : int(4))))), max(_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4))), _GLF_IDENTITY(int(4), (false ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-11234, max(-11234, _GLF_IDENTITY(-11234, min(_GLF_IDENTITY(-11234, (-11234) * 1), -11234))))), (_GLF_IDENTITY(_GLF_FUZZED(-11234), clamp(_GLF_IDENTITY(_GLF_FUZZED(-11234), clamp(_GLF_FUZZED(-11234), _GLF_FUZZED(-11234), _GLF_FUZZED(-11234))), _GLF_FUZZED(-11234), _GLF_IDENTITY(_GLF_FUZZED(-11234), (_GLF_FUZZED(-11234)) | (_GLF_FUZZED(-11234)))))) << 0) : int(4))))), 1, 0)))), ((_GLF_IDENTITY(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4))), max(_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4))), _GLF_IDENTITY(int(4), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), bool(bvec2(! (_GLF_IDENTITY(false, bool(bool(false)))), true))))) ? _GLF_FUZZED(-11234) : int(4))))), 1, 0), ivec3(0, 0, 0) + (ivec3(_GLF_IDENTITY(_GLF_IDENTITY(int(4), _GLF_IDENTITY((false ? _GLF_FUZZED(-11234) : int(4)), clamp((false ? _GLF_FUZZED(-11234) : int(4)), (false ? _GLF_FUZZED(-11234) : int(4)), (false ? _GLF_FUZZED(-11234) : int(4))))), max(_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4))), _GLF_IDENTITY(int(4), (false ? _GLF_IDENTITY(_GLF_FUZZED(-11234), (_GLF_IDENTITY(_GLF_FUZZED(-11234), clamp(_GLF_IDENTITY(_GLF_FUZZED(-11234), clamp(_GLF_FUZZED(-11234), _GLF_FUZZED(-11234), _GLF_FUZZED(-11234))), _GLF_FUZZED(-11234), _GLF_IDENTITY(_GLF_FUZZED(-11234), (_GLF_FUZZED(-11234)) | (_GLF_FUZZED(-11234)))))) << 0) : int(4))))), 1, 0))), (_GLF_IDENTITY(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4))), max(_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4))), _GLF_IDENTITY(int(4), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), bool(bvec2(! (_GLF_IDENTITY(false, bool(bool(false)))), true))))) ? _GLF_FUZZED(-11234) : int(4))))), 1, 0), ivec3(0, 0, 0) + (ivec3(_GLF_IDENTITY(_GLF_IDENTITY(int(4), _GLF_IDENTITY((false ? _GLF_FUZZED(-11234) : int(4)), clamp((false ? _GLF_FUZZED(-11234) : int(4)), (false ? _GLF_FUZZED(-11234) : int(4)), (false ? _GLF_FUZZED(-11234) : int(4))))), max(_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4))), _GLF_IDENTITY(int(4), (false ? _GLF_IDENTITY(_GLF_FUZZED(-11234), (_GLF_IDENTITY(_GLF_FUZZED(-11234), clamp(_GLF_IDENTITY(_GLF_FUZZED(-11234), clamp(_GLF_FUZZED(-11234), _GLF_FUZZED(-11234), _GLF_FUZZED(-11234))), _GLF_FUZZED(-11234), _GLF_IDENTITY(_GLF_FUZZED(-11234), (_GLF_FUZZED(-11234)) | (_GLF_FUZZED(-11234)))))) << 0) : int(4))))), 1, 0)))) | (ivec3(0, 0, 0) << _GLF_IDENTITY(ivec3(3), _GLF_IDENTITY(ivec3(3), (ivec3(3)) - ivec3(0, 0, 0))))))) << ivec3(0, 0, 0))), _GLF_IDENTITY(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4))), max(_GLF_IDENTITY(int(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) | 0), 4, 4))), (false ? _GLF_FUZZED(-11234) : int(4))), _GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4))))), 1, 0), ivec3(0, 0, 0) + (ivec3(_GLF_IDENTITY(_GLF_IDENTITY(int(4), _GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-11234), max(_GLF_FUZZED(-11234), _GLF_IDENTITY(_GLF_FUZZED(-11234), (_GLF_FUZZED(-11234)) / 1))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-11234), max(_GLF_FUZZED(-11234), _GLF_IDENTITY(_GLF_FUZZED(-11234), (_GLF_FUZZED(-11234)) / 1))), (_GLF_IDENTITY(_GLF_FUZZED(-11234), max(_GLF_FUZZED(-11234), _GLF_IDENTITY(_GLF_FUZZED(-11234), (_GLF_FUZZED(-11234)) / 1)))) + 0)) / 1) : int(4)), clamp(_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(-11234) : int(4)), min((false ? _GLF_FUZZED(-11234) : int(4)), _GLF_IDENTITY((false ? _GLF_FUZZED(-11234) : int(4)), clamp((false ? _GLF_FUZZED(-11234) : int(4)), (false ? _GLF_FUZZED(-11234) : int(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 1, 0)), ~ (~ (int(ivec3(4, 1, 0)))))), 4)))), (false ? _GLF_FUZZED(-11234) : _GLF_IDENTITY(int(4), min(int(4), int(4)))))))), (_GLF_IDENTITY(false ? _GLF_FUZZED(-11234) : int(4), 0 ^ (false ? _GLF_FUZZED(-11234) : int(4)))), (false ? _GLF_FUZZED(-11234) : int(4))))), max(_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4))), _GLF_IDENTITY(int(4), (_GLF_IDENTITY(false ? _GLF_FUZZED(-11234) : int(_GLF_IDENTITY(4, (4) ^ 0)), (false ? _GLF_FUZZED(-11234) : _GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) ^ 0)), max(_GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) ^ 0)), (int(_GLF_IDENTITY(4, (4) ^ 0))) >> 0), int(_GLF_IDENTITY(4, (4) ^ 0))))) | (_GLF_IDENTITY(false ? _GLF_FUZZED(-11234) : int(_GLF_IDENTITY(4, (4) ^ 0)), (false ? _GLF_FUZZED(-11234) : int(_GLF_IDENTITY(4, (4) ^ 0))) << _GLF_IDENTITY(0, (0) / 1)))))))), 1, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(0, 0, 0))) | (0)))))))), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (_GLF_IDENTITY(false ? _GLF_FUZZED(-11234) : int(4), (_GLF_IDENTITY(false ? _GLF_FUZZED(-11234) : int(4), (false ? _GLF_FUZZED(-11234) : int(4)) | (false ? _GLF_FUZZED(-11234) : int(4)))) | (false ? _GLF_FUZZED(-11234) : int(4))))), max(_GLF_IDENTITY(int(_GLF_IDENTITY(4, max(4, 4))), (false ? _GLF_FUZZED(-11234) : int(4))), _GLF_IDENTITY(int(4), (_GLF_IDENTITY(false ? _GLF_FUZZED(-11234) : int(4), _GLF_IDENTITY((false ? _GLF_FUZZED(-11234) : int(4)), min(_GLF_IDENTITY((false ? _GLF_FUZZED(-11234) : int(4)), ~ (~ ((false ? _GLF_FUZZED(-11234) : int(4))))), _GLF_IDENTITY((false ? _GLF_FUZZED(-11234) : int(4)), max(_GLF_IDENTITY((false ? _GLF_FUZZED(-11234) : int(4)), (false ? _GLF_FUZZED(7808) : (false ? _GLF_FUZZED(-11234) : int(4)))), (false ? _GLF_FUZZED(-11234) : int(4)))))) << 0))))), 1, 0), ivec3(0, 0, 0) + _GLF_IDENTITY((ivec3(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), 0 | (_GLF_IDENTITY(int(4), int(int(int(4)))))), 0 ^ (_GLF_IDENTITY(int(4), 0 | (_GLF_IDENTITY(int(4), int(int(int(4)))))))), (false ? _GLF_FUZZED(-11234) : int(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(-22485) : _GLF_IDENTITY(4, (4) - 0)))))), _GLF_IDENTITY(_GLF_IDENTITY(int(4), (_GLF_IDENTITY(false ? _GLF_FUZZED(-11234) : int(4), min(false ? _GLF_FUZZED(-11234) : int(4), _GLF_IDENTITY(false ? _GLF_FUZZED(-11234) : int(4), ~ (~ (false ? _GLF_FUZZED(-11234) : int(4)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4))), (_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4)))) ^ 0)) / 1))), 1, 0)), max((ivec3(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), 0 | (_GLF_IDENTITY(int(4), int(int(int(4)))))), 0 ^ (_GLF_IDENTITY(int(4), 0 | (_GLF_IDENTITY(int(4), int(int(int(4)))))))), (false ? _GLF_FUZZED(-11234) : int(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(-22485) : _GLF_IDENTITY(4, (4) - 0)))))), _GLF_IDENTITY(_GLF_IDENTITY(int(4), (_GLF_IDENTITY(false ? _GLF_FUZZED(-11234) : int(4), min(false ? _GLF_FUZZED(-11234) : int(4), _GLF_IDENTITY(false ? _GLF_FUZZED(-11234) : int(4), ~ (~ (false ? _GLF_FUZZED(-11234) : int(4)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4))), (_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4)))) ^ 0)) / 1))), 1, 0)), (ivec3(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), 0 | (_GLF_IDENTITY(int(4), int(int(int(4)))))), 0 ^ (_GLF_IDENTITY(int(4), 0 | (_GLF_IDENTITY(int(4), int(int(int(4)))))))), (false ? _GLF_FUZZED(-11234) : int(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(-22485) : _GLF_IDENTITY(4, (4) - 0)))))), _GLF_IDENTITY(_GLF_IDENTITY(int(4), (_GLF_IDENTITY(false ? _GLF_FUZZED(-11234) : int(4), min(false ? _GLF_FUZZED(-11234) : int(4), _GLF_IDENTITY(false ? _GLF_FUZZED(-11234) : int(4), ~ (~ (false ? _GLF_FUZZED(-11234) : int(4)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4))), (_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4)))) ^ 0)) / 1))), 1, 0)))))), (int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) - _GLF_IDENTITY(0, (0) - 0)), (false ? _GLF_IDENTITY(_GLF_FUZZED(-11234), max(_GLF_FUZZED(-11234), _GLF_IDENTITY(_GLF_FUZZED(-11234), 0 + (_GLF_FUZZED(-11234))))) : int(4))), max(_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4))), _GLF_IDENTITY(_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4))), (_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4)))) << (5326 & int(_GLF_ZERO(0.0, injectionSwitch.x)))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) / 1)), (int(4)) - 0), (false ? _GLF_IDENTITY(_GLF_FUZZED(-11234), max(_GLF_FUZZED(-11234), _GLF_FUZZED(-11234))) : int(4))), max(_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4))), _GLF_IDENTITY(_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4))), (_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(_GLF_IDENTITY(-11234, (-11234) << (0 | 0))) : int(4)))) << (5326 & int(_GLF_ZERO(0.0, injectionSwitch.x)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) - 0), (false ? _GLF_IDENTITY(_GLF_FUZZED(-11234), max(_GLF_FUZZED(-11234), _GLF_FUZZED(-11234))) : int(4))), max(_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4))), _GLF_IDENTITY(_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4))), (_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4)))) << (5326 & int(_GLF_ZERO(0.0, injectionSwitch.x))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), min(_GLF_IDENTITY(int(4), int(ivec3(int(4), 0, 0))), int(4)))) - 0), (false ? _GLF_IDENTITY(_GLF_FUZZED(-11234), max(_GLF_FUZZED(-11234), _GLF_FUZZED(-11234))) : int(4))), max(_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4))), _GLF_IDENTITY(_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(_GLF_IDENTITY(4, (4) >> 0)))), (_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4)))) << (5326 & int(_GLF_ZERO(0.0, injectionSwitch.x)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) - 0), (false ? _GLF_IDENTITY(_GLF_FUZZED(-11234), max(_GLF_FUZZED(-11234), _GLF_FUZZED(-11234))) : int(4))), (_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) - 0), (false ? _GLF_IDENTITY(_GLF_FUZZED(-11234), max(_GLF_FUZZED(-11234), _GLF_FUZZED(-11234))) : int(4)))) / 1), max(_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4))), _GLF_IDENTITY(_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4))), _GLF_IDENTITY((_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4)))), (true ? _GLF_IDENTITY((_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4)))), ((_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(-3625))) << (5326 & int(_GLF_ZERO(0.0, injectionSwitch.x))))))) / 1)))), 0 | (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) - 0), ~ (~ (_GLF_IDENTITY(int(4), (int(4)) - 0)))), (false ? _GLF_IDENTITY(_GLF_FUZZED(-11234), max(_GLF_FUZZED(-11234), _GLF_FUZZED(-11234))) : int(4))), max(_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4))), _GLF_IDENTITY(_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4))), (_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(_GLF_IDENTITY(4, max(4, 4)))))) << (5326 & int(_GLF_ZERO(0.0, injectionSwitch.x)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), _GLF_IDENTITY((int(4)), (_GLF_IDENTITY((int(4)), 0 | ((int(4))))) / 1) - 0), (false ? _GLF_IDENTITY(_GLF_FUZZED(-11234), max(_GLF_FUZZED(-11234), _GLF_IDENTITY(_GLF_FUZZED(-11234), (true ? _GLF_FUZZED(-11234) : _GLF_FUZZED(15234))))) : int(4))), max(_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4))), _GLF_IDENTITY(_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4))), (_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4)))) << (5326 & int(_GLF_ZERO(0.0, injectionSwitch.x))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(4, min(4, 4))), (int(4)) - 0), (false ? _GLF_IDENTITY(_GLF_FUZZED(-11234), max(_GLF_FUZZED(-11234), _GLF_FUZZED(-11234))) : _GLF_IDENTITY(int(4), ~ (~ (_GLF_IDENTITY(int(4), (int(4)) - 0)))))), max(_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4))), _GLF_IDENTITY(_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4))), (_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4)))) << (5326 & int(_GLF_ZERO(0.0, injectionSwitch.x)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) - 0), (false ? _GLF_IDENTITY(_GLF_FUZZED(-11234), max(_GLF_FUZZED(-11234), _GLF_FUZZED(-11234))) : int(4))), max(_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4))), _GLF_IDENTITY(_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4))), (_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4)))) << (5326 & int(_GLF_ZERO(0.0, injectionSwitch.x))))))) / 1)))))))), 1, 0), ivec3(0, 0, 0) + (ivec3(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, min(4, 4)), max(_GLF_IDENTITY(4, min(4, 4)), _GLF_IDENTITY(4, min(4, 4)))), 4, 4))))), max(_GLF_IDENTITY(int(4), (false ? _GLF_IDENTITY(_GLF_FUZZED(-11234), (_GLF_FUZZED(-11234)) | (_GLF_FUZZED(-11234))) : int(4))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) / ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)))), (false ? _GLF_FUZZED(-11234) : int(4))), max(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4))), clamp(_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4))), _GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : _GLF_IDENTITY(int(4), int(ivec2(_GLF_IDENTITY(int(_GLF_IDENTITY(4, int(int(_GLF_IDENTITY(4, (4) << 0))))), ~ (~ (int(4)))), int(_GLF_ZERO(0.0, injectionSwitch.x))))))), _GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4))))), _GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4))))))), 1, 0))))) / 1))), (false ? _GLF_FUZZED(-43963) : (~ (_GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (_GLF_IDENTITY(false ? _GLF_FUZZED(-11234) : int(4), (_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(-11234) : int(4), (false ? _GLF_FUZZED(-11234) : int(4)) | (false ? _GLF_FUZZED(-11234) : int(4))), (true ? _GLF_IDENTITY(false ? _GLF_FUZZED(-11234) : int(4), (false ? _GLF_FUZZED(-11234) : int(4)) | (false ? _GLF_FUZZED(-11234) : int(4))) : _GLF_FUZZED(-3328)))) | (false ? _GLF_FUZZED(-11234) : int(4))))), max(_GLF_IDENTITY(_GLF_IDENTITY(int(4), min(int(4), int(4))), (false ? _GLF_FUZZED(-11234) : _GLF_IDENTITY(int(4), ~ (~ (int(4)))))), _GLF_IDENTITY(int(_GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, min(4, 4)))), 0, 0, ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6)))), clamp(ivec4(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, min(4, 4)))), 0, 0, ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6)))), ivec4(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, min(4, 4)))), 0, 0, ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6)))), ivec4(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, min(4, 4)))), 0, 0, ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))))))))), (_GLF_IDENTITY(false ? _GLF_FUZZED(-11234) : int(4), _GLF_IDENTITY((false ? _GLF_FUZZED(-11234) : int(4)), min(_GLF_IDENTITY((false ? _GLF_FUZZED(-11234) : int(4)), ~ (~ ((false ? _GLF_FUZZED(-11234) : int(4))))), (false ? _GLF_FUZZED(-11234) : int(4)))) << 0))))), 1, 0), ivec3(0, 0, 0) + (ivec3(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), 0 | (_GLF_IDENTITY(int(4), int(int(int(4)))))), 0 ^ (_GLF_IDENTITY(int(4), 0 | (_GLF_IDENTITY(int(4), int(int(int(4)))))))), _GLF_IDENTITY((false ? _GLF_FUZZED(-11234) : int(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(-22485) : _GLF_IDENTITY(4, (4) - 0))))), _GLF_IDENTITY(int(ivec4((false ? _GLF_FUZZED(-11234) : int(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(-22485) : _GLF_IDENTITY(4, (4) - 0))))), 1, 0, (0 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), max(int(5), int(5))))))), max(int(ivec4((false ? _GLF_FUZZED(-11234) : int(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(-22485) : _GLF_IDENTITY(4, (4) - 0))))), 1, 0, (0 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), max(int(5), int(5))))))), int(ivec4((false ? _GLF_FUZZED(-11234) : int(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(-22485) : _GLF_IDENTITY(4, (4) - 0))))), 1, 0, (0 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), max(int(5), int(5))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4))), (_GLF_IDENTITY(_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4))), (_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4)))) ^ 0)) / 1))), 1, 0)))), (int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) - 0), (false ? _GLF_IDENTITY(_GLF_FUZZED(-11234), max(_GLF_FUZZED(-11234), _GLF_FUZZED(-11234))) : int(4))), max(_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4))), _GLF_IDENTITY(_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4))), (_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4)))) << (5326 & int(_GLF_ZERO(0.0, injectionSwitch.x)))))), (0 | 0) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) - 0), (false ? _GLF_IDENTITY(_GLF_FUZZED(-11234), max(_GLF_FUZZED(-11234), _GLF_FUZZED(-11234))) : int(4))), max(_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4))), _GLF_IDENTITY(_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4))), (_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4)))) << (5326 & int(_GLF_ZERO(0.0, injectionSwitch.x)))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) - 0), (false ? _GLF_IDENTITY(_GLF_FUZZED(-11234), max(_GLF_FUZZED(-11234), _GLF_FUZZED(-11234))) : int(4))), max(_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4))), _GLF_IDENTITY(_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4))), (_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4)))) << (5326 & int(_GLF_ZERO(0.0, injectionSwitch.x)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) - 0), (false ? _GLF_IDENTITY(_GLF_FUZZED(-11234), max(_GLF_FUZZED(-11234), _GLF_FUZZED(-11234))) : int(4))), max(_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4))), _GLF_IDENTITY(_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4))), (_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4)))) << (5326 & int(_GLF_ZERO(0.0, injectionSwitch.x))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) - 0), (false ? _GLF_IDENTITY(_GLF_FUZZED(-11234), max(_GLF_FUZZED(-11234), _GLF_FUZZED(-11234))) : int(4))), max(_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4))), _GLF_IDENTITY(_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4))), _GLF_IDENTITY((_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4)))), max((_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4)))), (_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4)))))) << (5326 & int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(_GLF_IDENTITY(vec3(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, abs(0.0)), mix(vec3((vec3(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, abs(0.0)))[0], (vec3(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, abs(0.0)))[1], (vec3(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, abs(0.0)))[2]), vec3(_GLF_FUZZED(float(90395u)), _GLF_FUZZED(float(111441u)), _GLF_FUZZED(35.77)), bvec3(false, false, false)))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) - 0), (false ? _GLF_IDENTITY(_GLF_FUZZED(-11234), max(_GLF_FUZZED(-11234), _GLF_FUZZED(-11234))) : int(4))), max(_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4))), _GLF_IDENTITY(_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4))), (_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4)))) << (5326 & int(_GLF_ZERO(0.0, injectionSwitch.x))))))) / 1)))), 0 | _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) - 0), (false ? _GLF_IDENTITY(_GLF_FUZZED(-11234), max(_GLF_FUZZED(-11234), _GLF_FUZZED(-11234))) : int(4))), max(_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4))), _GLF_IDENTITY(_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4))), (_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4)))) << (5326 & int(_GLF_ZERO(0.0, injectionSwitch.x)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) - 0), (false ? _GLF_IDENTITY(_GLF_FUZZED(-11234), max(_GLF_FUZZED(-11234), _GLF_FUZZED(-11234))) : int(4))), max(_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4))), _GLF_IDENTITY(_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4))), (_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4)))) << (5326 & int(_GLF_ZERO(0.0, injectionSwitch.x))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) - 0), (false ? _GLF_IDENTITY(_GLF_FUZZED(-11234), max(_GLF_FUZZED(-11234), _GLF_FUZZED(-11234))) : int(4))), max(_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4))), _GLF_IDENTITY(_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4))), (_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4)))) << (5326 & int(_GLF_ZERO(0.0, injectionSwitch.x)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) - 0), (false ? _GLF_IDENTITY(_GLF_FUZZED(-11234), max(_GLF_FUZZED(-11234), _GLF_FUZZED(-11234))) : int(4))), max(_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4))), _GLF_IDENTITY(_GLF_IDENTITY(int(4), (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(-11234) : int(4))), (_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4)))) << (5326 & int(_GLF_ZERO(0.0, injectionSwitch.x))))))) / 1))))), clamp(_GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) - 0), (false ? _GLF_IDENTITY(_GLF_FUZZED(-11234), max(_GLF_FUZZED(-11234), _GLF_FUZZED(-11234))) : int(4))), max(_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4))), _GLF_IDENTITY(_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4))), (_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4)))) << (5326 & int(_GLF_ZERO(0.0, injectionSwitch.x)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) - 0), (false ? _GLF_IDENTITY(_GLF_FUZZED(-11234), max(_GLF_FUZZED(-11234), _GLF_FUZZED(-11234))) : int(4))), max(_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4))), _GLF_IDENTITY(_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4))), (_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4)))) << (5326 & int(_GLF_ZERO(0.0, injectionSwitch.x))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) - 0), (false ? _GLF_IDENTITY(_GLF_FUZZED(-11234), max(_GLF_FUZZED(-11234), _GLF_FUZZED(-11234))) : int(4))), max(_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4))), _GLF_IDENTITY(_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4))), (_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4)))) << (5326 & int(_GLF_ZERO(0.0, injectionSwitch.x)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) - 0), (false ? _GLF_IDENTITY(_GLF_FUZZED(-11234), max(_GLF_FUZZED(-11234), _GLF_FUZZED(-11234))) : int(4))), max(_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4))), _GLF_IDENTITY(_GLF_IDENTITY(int(4), (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(-11234) : int(4))), (_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4)))) << (5326 & int(_GLF_ZERO(0.0, injectionSwitch.x))))))) / 1))))), ((~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) - 0), (false ? _GLF_IDENTITY(_GLF_FUZZED(-11234), max(_GLF_FUZZED(-11234), _GLF_FUZZED(-11234))) : int(4))), max(_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4))), _GLF_IDENTITY(_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4))), (_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4)))) << (5326 & int(_GLF_ZERO(0.0, injectionSwitch.x)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) - 0), (false ? _GLF_IDENTITY(_GLF_FUZZED(-11234), max(_GLF_FUZZED(-11234), _GLF_FUZZED(-11234))) : int(4))), max(_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4))), _GLF_IDENTITY(_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4))), (_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4)))) << (5326 & int(_GLF_ZERO(0.0, injectionSwitch.x))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) - 0), (false ? _GLF_IDENTITY(_GLF_FUZZED(-11234), max(_GLF_FUZZED(-11234), _GLF_FUZZED(-11234))) : int(4))), max(_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4))), _GLF_IDENTITY(_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4))), (_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4)))) << (5326 & int(_GLF_ZERO(0.0, injectionSwitch.x)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) - 0), (false ? _GLF_IDENTITY(_GLF_FUZZED(-11234), max(_GLF_FUZZED(-11234), _GLF_FUZZED(-11234))) : int(4))), max(_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4))), _GLF_IDENTITY(_GLF_IDENTITY(int(4), (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(-11234) : int(4))), (_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4)))) << (5326 & int(_GLF_ZERO(0.0, injectionSwitch.x))))))) / 1)))))) | ((~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) - 0), (false ? _GLF_IDENTITY(_GLF_FUZZED(-11234), max(_GLF_FUZZED(-11234), _GLF_FUZZED(-11234))) : int(4))), max(_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4))), _GLF_IDENTITY(_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4))), (_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4)))) << (5326 & int(_GLF_ZERO(0.0, injectionSwitch.x)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) - 0), (false ? _GLF_IDENTITY(_GLF_FUZZED(-11234), max(_GLF_FUZZED(-11234), _GLF_FUZZED(-11234))) : int(4))), max(_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4))), _GLF_IDENTITY(_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4))), (_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4)))) << (5326 & int(_GLF_ZERO(0.0, injectionSwitch.x))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) - 0), (false ? _GLF_IDENTITY(_GLF_FUZZED(-11234), max(_GLF_FUZZED(-11234), _GLF_FUZZED(-11234))) : int(4))), max(_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4))), _GLF_IDENTITY(_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4))), (_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4)))) << (5326 & int(_GLF_ZERO(0.0, injectionSwitch.x)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) - 0), (false ? _GLF_IDENTITY(_GLF_FUZZED(-11234), max(_GLF_FUZZED(-11234), _GLF_FUZZED(-11234))) : int(4))), max(_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4))), _GLF_IDENTITY(_GLF_IDENTITY(int(4), (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(-11234) : int(4))), (_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4)))) << (5326 & int(_GLF_ZERO(0.0, injectionSwitch.x))))))) / 1))))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) - 0), (false ? _GLF_IDENTITY(_GLF_FUZZED(-11234), max(_GLF_FUZZED(-11234), _GLF_FUZZED(-11234))) : int(4))), max(_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4))), _GLF_IDENTITY(_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4))), (_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4)))) << (5326 & int(_GLF_ZERO(0.0, injectionSwitch.x)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) - 0), (false ? _GLF_IDENTITY(_GLF_FUZZED(-11234), max(_GLF_FUZZED(-11234), _GLF_FUZZED(-11234))) : int(4))), max(_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4))), _GLF_IDENTITY(_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4))), (_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4)))) << (5326 & int(_GLF_ZERO(0.0, injectionSwitch.x))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) - 0), (false ? _GLF_IDENTITY(_GLF_FUZZED(-11234), max(_GLF_FUZZED(-11234), _GLF_FUZZED(-11234))) : int(4))), max(_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4))), _GLF_IDENTITY(_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4))), (_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4)))) << (5326 & int(_GLF_ZERO(0.0, injectionSwitch.x)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) - 0), (false ? _GLF_IDENTITY(_GLF_FUZZED(-11234), max(_GLF_FUZZED(-11234), _GLF_FUZZED(-11234))) : int(4))), max(_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4))), _GLF_IDENTITY(_GLF_IDENTITY(int(4), (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(-11234) : int(4))), (_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4)))) << (5326 & int(_GLF_ZERO(0.0, injectionSwitch.x))))))) / 1))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) - 0), (false ? _GLF_IDENTITY(_GLF_FUZZED(-11234), max(_GLF_FUZZED(-11234), _GLF_FUZZED(-11234))) : int(4))), max(_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4))), _GLF_IDENTITY(_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4))), (_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4)))) << (5326 & int(_GLF_ZERO(0.0, injectionSwitch.x)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) - 0), (false ? _GLF_IDENTITY(_GLF_FUZZED(-11234), max(_GLF_FUZZED(-11234), _GLF_FUZZED(-11234))) : int(4))), max(_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4))), _GLF_IDENTITY(_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4))), (_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4)))) << (5326 & int(_GLF_ZERO(0.0, injectionSwitch.x))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) - 0), (false ? _GLF_IDENTITY(_GLF_FUZZED(-11234), max(_GLF_FUZZED(-11234), _GLF_FUZZED(-11234))) : int(4))), max(_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4))), _GLF_IDENTITY(_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4))), (_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4)))) << (5326 & int(_GLF_ZERO(0.0, injectionSwitch.x)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) - 0), (false ? _GLF_IDENTITY(_GLF_FUZZED(-11234), max(_GLF_FUZZED(-11234), _GLF_FUZZED(-11234))) : int(4))), max(_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4))), _GLF_IDENTITY(_GLF_IDENTITY(int(4), (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(-11234) : int(4))), (_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4)))) << (5326 & int(_GLF_ZERO(0.0, injectionSwitch.x))))))) / 1)))))))))), 1, 0), ivec3(0, 0, 0) + (ivec3(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, min(4, 4)), 4, 4))))), max(_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4))), _GLF_IDENTITY(_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4))), max(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4))), clamp(_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4))), _GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : _GLF_IDENTITY(int(4), int(ivec2(_GLF_IDENTITY(int(4), ~ (~ (int(4)))), int(_GLF_ZERO(0.0, injectionSwitch.x))))))), _GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4))))), _GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-11234) : int(4))))))), 1, 0))))) / 1))))))))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > (-78345 & int(_GLF_ZERO(0.0, injectionSwitch.x))), ! (! (_GLF_IDENTITY(_injected_loop_counter > (-78345 & int(_GLF_ZERO(0.0, injectionSwitch.x))), true && (_injected_loop_counter > (-78345 & int(_GLF_ZERO(0.0, injectionSwitch.x))))))))); _injected_loop_counter --)
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-688.426), _GLF_FUZZED((_GLF_IDENTITY(2.4 - -5.3, _GLF_IDENTITY(clamp(2.4 - -5.3, 2.4 - -5.3, 2.4 - -5.3), mix(float(_GLF_FUZZED((6.9 * 0.2))), float(clamp(2.4 - -5.3, 2.4 - -5.3, 2.4 - -5.3)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), bvec2(_GLF_IDENTITY(false, ! (! (false))), false))).y))))
          {
           for(int _injected_loop_counter = (0 | _GLF_IDENTITY(0, (false ? _GLF_FUZZED(52180) : 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
            {
             barrier();
            }
          }
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           barrier();
          }
        }
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
       do
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(false))
                {
                 do
                  {
                   barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))));
                }
              }
             else
              {
              }
            }
           else
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 barrier();
                }
               else
                {
                }
              }
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u) + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec4(subgroup_local_id + 1, 1u, 0u, 0u)))) % subgroup_size), (_GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u), (_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u)) - 0u) + _GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)) * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u), (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base))) ^ 0u)) - 0u) + _GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)) * subgroup_size + ((subgroup_local_id + 1) % subgroup_size)) >> 0u)));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (false)))))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) && true)))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))))
      barrier();
    }
   else
    {
    }
   do
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         do
          {
           do
            {
             barrier();
             for(int _injected_loop_counter = _GLF_IDENTITY(1, (1) - 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
              {
               if(_GLF_DEAD(false))
                {
                 for(int _injected_loop_counter = (0 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                  {
                   do
                    {
                     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                       if(_GLF_DEAD(false))
                        barrier();
                      }
                     barrier();
                    }
                   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(false)), false || (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(false)), ! (! (! (_GLF_WRAPPED_LOOP(false))))))))));
                  }
                }
               if(_GLF_DEAD(false))
                barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))));
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    barrier();
  }
 do
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || false)));
  }
 if(_GLF_DEAD(false))
  {
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), false || (_GLF_WRAPPED_IF_TRUE(true))))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     for(int _injected_loop_counter = (0 | (0 >> _GLF_IDENTITY(int(0), int(0)))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < 1, (_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < 1) && true)) || false)); _injected_loop_counter ++)
      {
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true))))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
            {
             buf[_GLF_struct_replacement_6._f1.virtual_gid] = 1;
            }
          }
         else
          {
          }
         do
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))
              {
               do
                {
                 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec3(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))), (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec3(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))) && true))))
                  {
                  }
                 else
                  {
                   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_WRAPPED_IF_TRUE(true))))
                    {
                     barrier();
                    }
                   else
                    {
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                       barrier();
                      }
                    }
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
               if(_GLF_DEAD(false))
                barrier();
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x4(injectionSwitch.x, _GLF_IDENTITY(1.0, float(mat2x4(1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))), tan(0.0), 1.0, 1.0, 1.0, 0.0, log(sqrt(1.0))), (mat2x4(injectionSwitch.x, _GLF_IDENTITY(1.0, float(mat2x4(1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))), tan(0.0), 1.0, 1.0, 1.0, 0.0, log(sqrt(1.0)))) * mat2(1.0)))), max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-6.4, mix(float(-6.4), float(_GLF_FUZZED(-7645.2333)), bool(false))))), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), injectionSwitch.x)) < injectionSwitch.y)), _GLF_IDENTITY(true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(1), int(1)))); _injected_loop_counter --)
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(0.8, 37.06)))).x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 barrier();
                }
               else
                {
                }
              }
            }
           if(_GLF_DEAD(false))
            barrier();
          }
        }
      }
    }
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
      }
    }
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     do
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         else
          {
          }
         do
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             do
              {
               do
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                  {
                   barrier();
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))));
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   else
    {
    }
  }
 if(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + 1 < subgroup_size)
  {
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < 1, bool(bvec4(_injected_loop_counter < 1, true, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), _GLF_IDENTITY(bvec2(bvec4(bvec2(true, true), true, false)), bvec2(bvec4(bvec2(bvec4(bvec2(true, true), true, false)), true, true)))))), false)))); _injected_loop_counter ++)
        {
         barrier();
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))));
   int i = 0;
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       do
        {
         if(_GLF_DEAD(false))
          barrier();
         atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(2, 0 | (2))), 4, 64, 4);
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     else
      {
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      barrier();
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       do
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))
            {
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     else
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
          }
        }
      }
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), (! (false)) && true)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, false))), _GLF_IDENTITY((! (false)), true && ((! (false)))) && true))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, false))), (! (false)) && true))), true && (((_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, false))), (! (false)) && true))))))), true && (bool(bool(! _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, false))), (! (false)) && true))), true && (((_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, false))), (! (false)) && true))))))))), (bool(bool(! ((_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec3(! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), (_GLF_IDENTITY((false), true && ((false)))) && true)) && true), true, false))), (! (false)) && _GLF_IDENTITY(true, (true) && true))))))) || false)))))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           barrier();
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
          }
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
      }
     else
      {
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         barrier();
        }
      }
    }
   do
    {
     atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
}
