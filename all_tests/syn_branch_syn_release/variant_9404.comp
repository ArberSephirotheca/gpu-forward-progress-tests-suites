#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), true && (bool(_GLF_DEAD(false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(1u, 1u, 1u) * (gl_WorkGroupSize)))))) | (gl_WorkGroupSize)).x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false)), bool(bvec3(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (false))))), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (false))))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (false))))), false), false, false))), true, true)))), true, true))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), 0u ^ (_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id)))));
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), ! (_GLF_IDENTITY(! ((! (_GLF_DEAD(false)))), (! ((! (_GLF_DEAD(false))))) && true)))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(false, bool(bool(false)))) || false)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, min(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, 0u + (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 0u ^ (_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u)))) >> 0u) + subgroup_id * subgroup_size)))) + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size, 1u * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 0u)))) | _GLF_IDENTITY((subgroup_id), (_GLF_IDENTITY((subgroup_id), ((subgroup_id)) | ((subgroup_id)))) + 0u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 0u)))) | (subgroup_id)), min(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_id)), _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))))) | 0u), uint(uvec3(subgroup_id, 0u, 0u)))) | (subgroup_id)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id))) | (_GLF_IDENTITY(0u, (0u) * ((0u >> _GLF_IDENTITY(uint(7u), uint(7u))) ^ 1u)) << _GLF_IDENTITY(uint(6u), uint(6u)))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 0u)))) | (subgroup_id), 0u | (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 0u)))) | (subgroup_id), 0u + ((_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uvec3(subgroup_id, 0u, 0u), (uvec3(subgroup_id, 0u, 0u)) | (_GLF_IDENTITY(uvec3(subgroup_id, 0u, 0u), (uvec3(subgroup_id, 0u, 0u)) + uvec3(0u, 0u, 0u))))))) | (subgroup_id)))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, _GLF_IDENTITY(0u, 0u ^ _GLF_IDENTITY((0u), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ ((0u)), min(~ ((0u)), ~ ((0u))))), (~ (_GLF_IDENTITY(~ ((0u)), min(~ ((0u)), ~ ((0u)))))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))) | (subgroup_id)), min(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 0u)))), max((_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 0u)))), (_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 0u)))))) | (subgroup_id)), _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), uint(uvec3(subgroup_id, 0u, 0u)))) | _GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 0u)))) | (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))))), min(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 0u)))) | (subgroup_id)), _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 0u)))) | _GLF_IDENTITY((subgroup_id), _GLF_IDENTITY(uint(uvec3((subgroup_id), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u)), uint(uvec3(_GLF_IDENTITY(uint(uvec3((subgroup_id), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u)), (uint(uvec3((subgroup_id), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u))) | (uint(uvec3((subgroup_id), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u)))), 1u, 0u))))))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 0u))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 0u))), 0u, 1u, (0u << _GLF_IDENTITY(uint(3u), uint(3u)))), ~ (~ (uvec4(_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 0u))), 0u, 1u, (0u << _GLF_IDENTITY(uint(3u), uint(3u)))))))), clamp(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 0u))), 0u, 1u, (0u << _GLF_IDENTITY(uint(3u), uint(3u)))), ~ (~ (uvec4(_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 0u))), 0u, 1u, (0u << _GLF_IDENTITY(uint(3u), uint(3u)))))))), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 0u))), 0u, 1u, (0u << _GLF_IDENTITY(uint(3u), uint(3u)))), ~ (~ (uvec4(_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 0u))), 0u, 1u, (0u << _GLF_IDENTITY(uint(3u), uint(3u)))))))), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 0u))), 0u, 1u, (0u << _GLF_IDENTITY(uint(3u), uint(3u)))), ~ (~ (uvec4(_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 0u))), 0u, 1u, (0u << _GLF_IDENTITY(uint(3u), uint(3u)))))))))))) | (subgroup_id)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, _GLF_IDENTITY(0u, (0u) | (0u)), 0u)))) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)))), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 0u)))) | (subgroup_id)), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uvec3(subgroup_id, 0u, 0u), uvec3(0u, 0u, 0u) ^ (uvec3(subgroup_id, 0u, 0u)))))) | (subgroup_id))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 0.0)))))))))) ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 0u)))) | (subgroup_id)), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(virtual_gid))), (_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 0u)))) | (subgroup_id))))))) | 0u), _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, uint(uvec3(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))), subgroup_id)), 0u, 0u)))) | (subgroup_id)))))) * subgroup_size))) * 1u)) / 1u, uint(uvec4(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size, 1u * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 0u)))) | _GLF_IDENTITY((subgroup_id), (_GLF_IDENTITY((subgroup_id), ((subgroup_id)) | ((subgroup_id)))) + 0u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 0u)))) | (subgroup_id)), min(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_id)), _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))))) | 0u), uint(uvec3(subgroup_id, 0u, 0u)))) | (subgroup_id)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id))) | (_GLF_IDENTITY(0u, (0u) * ((0u >> _GLF_IDENTITY(uint(7u), uint(7u))) ^ 1u)) << _GLF_IDENTITY(uint(6u), uint(6u)))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 0u)))) | (subgroup_id), 0u | (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 0u)))) | (subgroup_id), 0u + ((_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uvec3(subgroup_id, 0u, 0u), (uvec3(subgroup_id, 0u, 0u)) | (_GLF_IDENTITY(uvec3(subgroup_id, 0u, 0u), (uvec3(subgroup_id, 0u, 0u)) + uvec3(0u, 0u, 0u))))))) | (subgroup_id)))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, _GLF_IDENTITY(0u, 0u ^ _GLF_IDENTITY((0u), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ ((0u)), min(~ ((0u)), ~ ((0u))))), (~ (_GLF_IDENTITY(~ ((0u)), min(~ ((0u)), ~ ((0u)))))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))) | (subgroup_id)), min(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 0u)))), max((_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 0u)))), (_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 0u)))))) | (subgroup_id)), _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), uint(uvec3(subgroup_id, 0u, 0u)))) | _GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 0u)))) | (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))))), min(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 0u)))) | (subgroup_id)), _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 0u)))) | _GLF_IDENTITY((subgroup_id), _GLF_IDENTITY(uint(uvec3((subgroup_id), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u)), uint(uvec3(_GLF_IDENTITY(uint(uvec3((subgroup_id), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u)), (uint(uvec3((subgroup_id), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u))) | (uint(uvec3((subgroup_id), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u)))), 1u, 0u))))))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 0u))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 0u))), 0u, 1u, (0u << _GLF_IDENTITY(uint(3u), uint(3u)))), ~ (~ (uvec4(_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 0u))), 0u, 1u, (0u << _GLF_IDENTITY(uint(3u), uint(3u)))))))), clamp(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 0u))), 0u, 1u, (0u << _GLF_IDENTITY(uint(3u), uint(3u)))), ~ (~ (uvec4(_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 0u))), 0u, 1u, (0u << _GLF_IDENTITY(uint(3u), uint(3u)))))))), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 0u))), 0u, 1u, (0u << _GLF_IDENTITY(uint(3u), uint(3u)))), ~ (~ (uvec4(_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 0u))), 0u, 1u, (0u << _GLF_IDENTITY(uint(3u), uint(3u)))))))), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 0u))), 0u, 1u, (0u << _GLF_IDENTITY(uint(3u), uint(3u)))), ~ (~ (uvec4(_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 0u))), 0u, 1u, (0u << _GLF_IDENTITY(uint(3u), uint(3u)))))))))))) | (subgroup_id)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, _GLF_IDENTITY(0u, (0u) | (0u)), 0u)))) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)))), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 0u)))) | (subgroup_id)), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uvec3(subgroup_id, 0u, 0u), uvec3(0u, 0u, 0u) ^ (uvec3(subgroup_id, 0u, 0u)))))) | (subgroup_id))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 0.0)))))))))) ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 0u)))) | (subgroup_id)), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(virtual_gid))), (_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 0u)))) | (subgroup_id))))))) | 0u), _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, uint(uvec3(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))), subgroup_id)), 0u, 0u)))) | (subgroup_id)))))) * subgroup_size))) * 1u)) / 1u, max((_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size, 1u * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 0u)))) | _GLF_IDENTITY((subgroup_id), (_GLF_IDENTITY((subgroup_id), ((subgroup_id)) | ((subgroup_id)))) + 0u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 0u)))) | (subgroup_id)), min(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_id)), _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))))) | 0u), uint(uvec3(subgroup_id, 0u, 0u)))) | (subgroup_id)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id))) | (_GLF_IDENTITY(0u, (0u) * ((0u >> _GLF_IDENTITY(uint(7u), uint(7u))) ^ 1u)) << _GLF_IDENTITY(uint(6u), uint(6u)))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 0u)))) | (subgroup_id), 0u | (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 0u)))) | (subgroup_id), 0u + ((_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uvec3(subgroup_id, 0u, 0u), (uvec3(subgroup_id, 0u, 0u)) | (_GLF_IDENTITY(uvec3(subgroup_id, 0u, 0u), (uvec3(subgroup_id, 0u, 0u)) + uvec3(0u, 0u, 0u))))))) | (subgroup_id)))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, _GLF_IDENTITY(0u, 0u ^ _GLF_IDENTITY((0u), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ ((0u)), min(~ ((0u)), ~ ((0u))))), (~ (_GLF_IDENTITY(~ ((0u)), min(~ ((0u)), ~ ((0u)))))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))) | (subgroup_id)), min(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 0u)))), max((_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 0u)))), (_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 0u)))))) | (subgroup_id)), _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), uint(uvec3(subgroup_id, 0u, 0u)))) | _GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 0u)))) | (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))))), min(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 0u)))) | (subgroup_id)), _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 0u)))) | _GLF_IDENTITY((subgroup_id), _GLF_IDENTITY(uint(uvec3((subgroup_id), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u)), uint(uvec3(_GLF_IDENTITY(uint(uvec3((subgroup_id), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u)), (uint(uvec3((subgroup_id), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u))) | (uint(uvec3((subgroup_id), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u)))), 1u, 0u))))))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 0u))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 0u))), 0u, 1u, (0u << _GLF_IDENTITY(uint(3u), uint(3u)))), ~ (~ (uvec4(_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 0u))), 0u, 1u, (0u << _GLF_IDENTITY(uint(3u), uint(3u)))))))), clamp(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 0u))), 0u, 1u, (0u << _GLF_IDENTITY(uint(3u), uint(3u)))), ~ (~ (uvec4(_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 0u))), 0u, 1u, (0u << _GLF_IDENTITY(uint(3u), uint(3u)))))))), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 0u))), 0u, 1u, (0u << _GLF_IDENTITY(uint(3u), uint(3u)))), ~ (~ (uvec4(_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 0u))), 0u, 1u, (0u << _GLF_IDENTITY(uint(3u), uint(3u)))))))), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 0u))), 0u, 1u, (0u << _GLF_IDENTITY(uint(3u), uint(3u)))), ~ (~ (uvec4(_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 0u))), 0u, 1u, (0u << _GLF_IDENTITY(uint(3u), uint(3u)))))))))))) | (subgroup_id)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, _GLF_IDENTITY(0u, (0u) | (0u)), 0u)))) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)))), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 0u)))) | (subgroup_id)), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uvec3(subgroup_id, 0u, 0u), uvec3(0u, 0u, 0u) ^ (uvec3(subgroup_id, 0u, 0u)))))) | (subgroup_id))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 0.0)))))))))) ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 0u)))) | (subgroup_id)), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(virtual_gid))), (_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 0u)))) | (subgroup_id))))))) | 0u), _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, uint(uvec3(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))), subgroup_id)), 0u, 0u)))) | (subgroup_id)))))) * subgroup_size))) * 1u)) / 1u, (_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size, 1u * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 0u)))) | _GLF_IDENTITY((subgroup_id), (_GLF_IDENTITY((subgroup_id), ((subgroup_id)) | ((subgroup_id)))) + 0u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 0u)))) | (subgroup_id)), min(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_id)), _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))))) | 0u), uint(uvec3(subgroup_id, 0u, 0u)))) | (subgroup_id)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id))) | (_GLF_IDENTITY(0u, (0u) * ((0u >> _GLF_IDENTITY(uint(7u), uint(7u))) ^ 1u)) << _GLF_IDENTITY(uint(6u), uint(6u)))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 0u)))) | (subgroup_id), 0u | (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 0u)))) | (subgroup_id), 0u + ((_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uvec3(subgroup_id, 0u, 0u), (uvec3(subgroup_id, 0u, 0u)) | (_GLF_IDENTITY(uvec3(subgroup_id, 0u, 0u), (uvec3(subgroup_id, 0u, 0u)) + uvec3(0u, 0u, 0u))))))) | (subgroup_id)))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, _GLF_IDENTITY(0u, 0u ^ _GLF_IDENTITY((0u), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ ((0u)), min(~ ((0u)), ~ ((0u))))), (~ (_GLF_IDENTITY(~ ((0u)), min(~ ((0u)), ~ ((0u)))))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))) | (subgroup_id)), min(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 0u)))), max((_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 0u)))), (_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 0u)))))) | (subgroup_id)), _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), uint(uvec3(subgroup_id, 0u, 0u)))) | _GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 0u)))) | (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))))), min(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 0u)))) | (subgroup_id)), _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 0u)))) | _GLF_IDENTITY((subgroup_id), _GLF_IDENTITY(uint(uvec3((subgroup_id), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u)), uint(uvec3(_GLF_IDENTITY(uint(uvec3((subgroup_id), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u)), (uint(uvec3((subgroup_id), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u))) | (uint(uvec3((subgroup_id), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u)))), 1u, 0u))))))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 0u))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 0u))), 0u, 1u, (0u << _GLF_IDENTITY(uint(3u), uint(3u)))), ~ (~ (uvec4(_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 0u))), 0u, 1u, (0u << _GLF_IDENTITY(uint(3u), uint(3u)))))))), clamp(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 0u))), 0u, 1u, (0u << _GLF_IDENTITY(uint(3u), uint(3u)))), ~ (~ (uvec4(_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 0u))), 0u, 1u, (0u << _GLF_IDENTITY(uint(3u), uint(3u)))))))), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 0u))), 0u, 1u, (0u << _GLF_IDENTITY(uint(3u), uint(3u)))), ~ (~ (uvec4(_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 0u))), 0u, 1u, (0u << _GLF_IDENTITY(uint(3u), uint(3u)))))))), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 0u))), 0u, 1u, (0u << _GLF_IDENTITY(uint(3u), uint(3u)))), ~ (~ (uvec4(_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 0u))), 0u, 1u, (0u << _GLF_IDENTITY(uint(3u), uint(3u)))))))))))) | (subgroup_id)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, _GLF_IDENTITY(0u, (0u) | (0u)), 0u)))) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)))), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 0u)))) | (subgroup_id)), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uvec3(subgroup_id, 0u, 0u), uvec3(0u, 0u, 0u) ^ (uvec3(subgroup_id, 0u, 0u)))))) | (subgroup_id))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 0.0)))))))))) ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 0u)))) | (subgroup_id)), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(virtual_gid))), (_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 0u)))) | (subgroup_id))))))) | 0u), _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, uint(uvec3(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))), subgroup_id)), 0u, 0u)))) | (subgroup_id)))))) * subgroup_size))) * 1u)) / 1u)), _GLF_IDENTITY(1u, (1u) | 0u), 1u, 0u)))) + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | ((subgroup_local_id + 1) % subgroup_size)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec2(! (! (false)), true))))) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 _GLF_IDENTITY(buf[virtual_gid] = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(max(1, 1), 0 | (max(1, 1)))), (_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY((_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), clamp(_GLF_IDENTITY(1, (1) | 0), _GLF_IDENTITY(1, (1) | 0), _GLF_IDENTITY(1, (1) | 0)))) << 0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(53343) : _GLF_IDENTITY((_GLF_IDENTITY(1, (1) | 0)) << 0, ((_GLF_IDENTITY(1, (1) | 0)) << 0) >> 0)))), _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) ^ 0)))))) | (_GLF_IDENTITY(1, max(1, 1))), 0 | ((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec3(1, 0, 0)))) >> (0 << _GLF_IDENTITY(int(0), int(0)))), 1)), (_GLF_IDENTITY(1, max(1, 1))) << 0)) | (_GLF_IDENTITY(1, max(1, 1))))) | (_GLF_IDENTITY(1, max(1, 1))))))) / 1), max(1, 1)), ~ (~ (_GLF_IDENTITY(buf[virtual_gid] = _GLF_IDENTITY(1, ~ (~ (1))), 0u ^ (buf[virtual_gid] = _GLF_IDENTITY(1, ~ (~ (1))))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-81.98)), float(injectionSwitch.x), bool(_GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec3(! (true), false, false))))), (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), (bool(bvec3(false, true, true))) || false)) || (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   int i = 0;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mat2(1.0) * (mat2(1.0) * (injectionSwitch)))).y, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mat2(1.0) * (mat2(1.0) * (injectionSwitch)))).y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mat2(1.0) * (mat2(1.0) * (injectionSwitch)))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mat2(1.0) * (mat2(1.0) * (injectionSwitch)))).y, 1.0 * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mat2(1.0) * (mat2(1.0) * (injectionSwitch)))).y))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false), true))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), true && (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch[0] : _GLF_FUZZED((bvec4(false, true, true, false) , 153.105)))), injectionSwitch[1])).x > injectionSwitch.y))))))), false || ((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 0.0, 0.0, 0.0, length(vec2(0.0, 0.0)), 0.0, 0.0)))) + vec2(0.0, 0.0)).x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), true && (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))), true, false, false)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))), clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0)))) + vec2(0.0, 0.0)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0)))) + vec2(0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0)))) + vec2(0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0)))) + vec2(0.0, 0.0)))) : _GLF_FUZZED((roundEven(vec2(-1.5, -7320.4483)) + 9845.9082)))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))))).y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(sign(2558.0365)) : injectionSwitch.y)), 1.0 * (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(sign(_GLF_IDENTITY(2558.0365, (true ? _GLF_IDENTITY(2558.0365, (_GLF_IDENTITY(2558.0365, mix(float(_GLF_FUZZED(8.1)), float(2558.0365), bool(true)))) - _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), max(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)))))) : _GLF_FUZZED(802.449))))) : injectionSwitch.y))))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4(injectionSwitch.x, 0.0, sqrt(1.0), tan(0.0), 0.0, 1.0, 0.0, sqrt(round(length(normalize(vec3(1.0, 1.0, 1.0))))), 0.0, 1.0, 0.0, tan(0.0), cos(0.0), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))), _GLF_IDENTITY(dot(vec4(1.0, 1.0, log(1.0), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)))), vec4(0.0, 0.0, 1.0, 1.0)), _GLF_IDENTITY(dot(vec4(1.0, 1.0, log(1.0), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)))), vec4(0.0, 0.0, 1.0, 1.0)), min(dot(vec4(1.0, 1.0, log(1.0), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)))), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(1.0, 1.0, log(1.0), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)))), vec4(0.0, 0.0, 1.0, 1.0))))))), clamp(_GLF_IDENTITY(float(mat4(injectionSwitch.x, 0.0, sqrt(1.0), tan(0.0), 0.0, 1.0, 0.0, sqrt(round(length(normalize(vec3(1.0, 1.0, 1.0))))), 0.0, 1.0, 0.0, tan(0.0), cos(0.0), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))), _GLF_IDENTITY(dot(vec4(1.0, 1.0, log(1.0), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)))), vec4(0.0, 0.0, 1.0, 1.0)), _GLF_IDENTITY(dot(vec4(1.0, 1.0, log(1.0), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)))), vec4(0.0, 0.0, 1.0, 1.0)), min(dot(vec4(1.0, 1.0, log(1.0), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)))), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(1.0, 1.0, log(1.0), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)))), vec4(0.0, 0.0, 1.0, 1.0))))))), 0.0 + (float(mat4(injectionSwitch.x, 0.0, sqrt(1.0), tan(0.0), 0.0, 1.0, 0.0, sqrt(round(length(normalize(vec3(1.0, 1.0, 1.0))))), 0.0, 1.0, 0.0, tan(0.0), cos(0.0), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))), _GLF_IDENTITY(dot(vec4(1.0, 1.0, log(1.0), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)))), vec4(0.0, 0.0, 1.0, 1.0)), _GLF_IDENTITY(dot(vec4(1.0, 1.0, log(1.0), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)))), vec4(0.0, 0.0, 1.0, 1.0)), min(dot(vec4(1.0, 1.0, log(1.0), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)))), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(1.0, 1.0, log(1.0), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)))), vec4(0.0, 0.0, 1.0, 1.0))))))))), float(mat4(injectionSwitch.x, 0.0, sqrt(1.0), tan(0.0), 0.0, 1.0, 0.0, sqrt(round(length(normalize(vec3(1.0, 1.0, 1.0))))), 0.0, 1.0, 0.0, tan(0.0), cos(0.0), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))), _GLF_IDENTITY(dot(vec4(1.0, 1.0, log(1.0), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)))), vec4(0.0, 0.0, 1.0, 1.0)), _GLF_IDENTITY(dot(vec4(1.0, 1.0, log(1.0), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)))), vec4(0.0, 0.0, 1.0, 1.0)), min(dot(vec4(1.0, 1.0, log(1.0), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)))), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(1.0, 1.0, log(1.0), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)))), vec4(0.0, 0.0, 1.0, 1.0))))))), float(mat4(injectionSwitch.x, 0.0, sqrt(1.0), tan(0.0), 0.0, 1.0, 0.0, sqrt(round(length(normalize(vec3(1.0, 1.0, 1.0))))), 0.0, 1.0, 0.0, tan(0.0), cos(0.0), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))), _GLF_IDENTITY(dot(vec4(1.0, 1.0, log(1.0), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)))), vec4(0.0, 0.0, 1.0, 1.0)), _GLF_IDENTITY(dot(vec4(1.0, 1.0, log(1.0), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)))), vec4(0.0, 0.0, 1.0, 1.0)), min(dot(vec4(1.0, 1.0, log(1.0), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)))), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(1.0, 1.0, log(1.0), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)))), vec4(0.0, 0.0, 1.0, 1.0)))))))))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y) || false)) && true))) || (false)), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(4.2)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)))))) > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (false ? _GLF_FUZZED(packHalf2x16(step(injectionSwitch, vec2(_GLF_IDENTITY(83.53, (_GLF_IDENTITY(83.53, min(_GLF_IDENTITY(83.53, max(83.53, 83.53)), 83.53))) + 0.0), 98.96)))) : _GLF_IDENTITY(next_virtual_gid, (false ? _GLF_FUZZED(173401u) : next_virtual_gid))))], uint(2), 4, 64, 4);
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
}
