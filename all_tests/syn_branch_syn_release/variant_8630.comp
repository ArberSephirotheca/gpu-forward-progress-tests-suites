#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_38 {
 mat2x3 _f0;
 mat3 _f1;
 uvec2 _f2;
} ;

struct _GLF_struct_37 {
 mat4x2 _f0;
 uvec2 _f1;
 uvec2 _f2;
} ;

struct _GLF_struct_39 {
 int _f0;
 _GLF_struct_37 _f1;
 _GLF_struct_38 _f2;
} ;

struct _GLF_struct_35 {
 bvec2 _f0;
 mat3x2 _f1;
 uvec2 _f2;
 mat4x3 _f3;
} ;

struct _GLF_struct_34 {
 bvec4 _f0;
 uint _f1;
 uvec2 _f2;
 int _f3;
 vec2 _f4;
} ;

struct _GLF_struct_36 {
 _GLF_struct_34 _f0;
 _GLF_struct_35 _f1;
} ;

struct _GLF_struct_32 {
 mat2 _f0;
} ;

struct _GLF_struct_31 {
 mat4x3 _f0;
 uvec3 _f1;
 bvec4 _f2;
 vec3 _f3;
 mat3x2 _f4;
} ;

struct _GLF_struct_33 {
 uvec2 _f0;
 _GLF_struct_31 _f1;
 uvec3 _f2;
 mat3 _f3;
 _GLF_struct_32 _f4;
} ;

struct _GLF_struct_40 {
 _GLF_struct_33 _f0;
 _GLF_struct_36 _f1;
 ivec3 _f2;
 uint subgroup_id;
 _GLF_struct_39 _f3;
 mat4x3 _f4;
} ;

struct _GLF_struct_28 {
 mat2 _f0;
 mat4x3 _f1;
 float _f2;
 mat3x4 _f3;
 mat2x3 _f4;
 uint _f5;
} ;

struct _GLF_struct_27 {
 uvec3 _f0;
} ;

struct _GLF_struct_29 {
 mat3x4 _f0;
 mat3x4 _f1;
 _GLF_struct_27 _f2;
 bvec3 _f3;
 _GLF_struct_28 _f4;
} ;

struct _GLF_struct_26 {
 uvec4 _f0;
 mat4x3 _f1;
} ;

struct _GLF_struct_24 {
 ivec3 _f0;
 float _f1;
 mat2x3 _f2;
 uvec2 _f3;
 mat3x2 _f4;
 uvec2 _f5;
 vec3 _f6;
} ;

struct _GLF_struct_23 {
 mat4 _f0;
} ;

struct _GLF_struct_22 {
 mat3x4 _f0;
 bvec2 _f1;
 vec2 _f2;
 mat4x2 _f3;
 bvec4 _f4;
 float _f5;
 mat3x4 _f6;
} ;

struct _GLF_struct_25 {
 _GLF_struct_22 _f0;
 _GLF_struct_23 _f1;
 _GLF_struct_24 _f2;
} ;

struct _GLF_struct_20 {
 mat3 _f0;
} ;

struct _GLF_struct_19 {
 bool _f0;
 mat3x4 _f1;
 vec2 _f2;
 vec4 _f3;
 mat2x3 _f4;
 vec3 _f5;
} ;

struct _GLF_struct_18 {
 uvec3 _f0;
 vec4 _f1;
 bvec4 _f2;
} ;

struct _GLF_struct_17 {
 mat4x2 _f0;
 float _f1;
 bvec2 _f2;
} ;

struct _GLF_struct_21 {
 uvec3 _f0;
 _GLF_struct_17 _f1;
 bvec2 _f2;
 _GLF_struct_18 _f3;
 _GLF_struct_19 _f4;
 _GLF_struct_20 _f5;
} ;

struct _GLF_struct_30 {
 mat4x3 _f0;
 uint next_virtual_gid;
 _GLF_struct_21 _f1;
 uvec4 _f2;
 _GLF_struct_25 _f3;
 _GLF_struct_26 _f4;
 _GLF_struct_29 _f5;
 bool _f6;
} ;

struct _GLF_struct_14 {
 bvec2 _f0;
 mat2x4 _f1;
 vec2 _f2;
 uvec2 _f3;
 bvec2 _f4;
 uvec4 _f5;
 bvec2 _f6;
} ;

struct _GLF_struct_13 {
 vec2 _f0;
 ivec4 _f1;
} ;

struct _GLF_struct_12 {
 uvec3 _f0;
 float _f1;
 mat4 _f2;
 bvec3 _f3;
 bvec2 _f4;
} ;

struct _GLF_struct_11 {
 ivec4 _f0;
 uvec2 _f1;
 bool _f2;
 mat3x2 _f3;
 mat4 _f4;
 mat2 _f5;
} ;

struct _GLF_struct_10 {
 mat3 _f0;
 mat2x4 _f1;
 bool _f2;
 mat2 _f3;
 int _f4;
} ;

struct _GLF_struct_15 {
 _GLF_struct_10 _f0;
 ivec3 _f1;
 _GLF_struct_11 _f2;
 _GLF_struct_12 _f3;
 _GLF_struct_13 _f4;
 _GLF_struct_14 _f5;
} ;

struct _GLF_struct_8 {
 mat3x4 _f0;
 uint _f1;
 bvec4 _f2;
 vec3 _f3;
 mat3x4 _f4;
 uvec2 _f5;
 mat4x2 _f6;
} ;

struct _GLF_struct_7 {
 uvec3 _f0;
 uvec4 _f1;
 int _f2;
} ;

struct _GLF_struct_6 {
 vec2 _f0;
} ;

struct _GLF_struct_9 {
 _GLF_struct_6 _f0;
 vec4 _f1;
 uint workgroup_id;
 _GLF_struct_7 _f2;
 _GLF_struct_8 _f3;
 mat4 _f4;
 vec2 _f5;
} ;

struct _GLF_struct_4 {
 ivec2 _f0;
 vec2 _f1;
 mat2 _f2;
} ;

struct _GLF_struct_3 {
 mat3x4 _f0;
} ;

struct _GLF_struct_2 {
 ivec2 _f0;
 mat4 _f1;
 mat3x2 _f2;
 mat3 _f3;
} ;

struct _GLF_struct_1 {
 ivec3 _f0;
 float _f1;
} ;

struct _GLF_struct_0 {
 mat2 _f0;
 mat3x4 _f1;
 ivec4 _f2;
 ivec3 _f3;
 bvec2 _f4;
} ;

struct _GLF_struct_5 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 _GLF_struct_2 _f2;
 _GLF_struct_3 _f3;
 _GLF_struct_4 _f4;
} ;

struct _GLF_struct_16 {
 _GLF_struct_5 _f0;
 _GLF_struct_9 _f1;
 _GLF_struct_15 _f2;
 mat4x2 _f3;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (_GLF_IDENTITY(! (! (false)), bool(bool(! (! (false))))))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) && true))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              return;
             return;
            }
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).x > injectionSwitch.y)))) && true))))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true))), (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && (_GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))))
              return;
             return;
            }
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
        }
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) || false))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) + vec2(0.0, 0.0)) - vec2(0.0, 0.0)), max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) + vec2(0.0, 0.0)) - vec2(0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) + vec2(0.0, 0.0)) - vec2(0.0, 0.0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) + vec2(0.0, 0.0)) - vec2(0.0, 0.0)), min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) + vec2(0.0, 0.0)) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) + vec2(0.0, 0.0)) - vec2(0.0, 0.0)))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) + vec2(0.0, 0.0)) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) + vec2(0.0, 0.0)) - vec2(0.0, 0.0)))))).x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y, true, true)))))))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 _GLF_struct_40 _GLF_struct_replacement_40 = _GLF_struct_40(_GLF_struct_33(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (1u) + 0u))), _GLF_IDENTITY(1u, (_GLF_IDENTITY(true ? 1u : _GLF_FUZZED(_GLF_IDENTITY(123101u, clamp(123101u, 123101u, 123101u))), (true ? 1u : _GLF_FUZZED(_GLF_IDENTITY(123101u, clamp(123101u, 123101u, 123101u)))) * 1u))))), 0u | (_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, _GLF_IDENTITY(max(1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) + 0u), ~ (~ (_GLF_IDENTITY(1u, (1u) + 0u))))), clamp(_GLF_IDENTITY(max(1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) + 0u), ~ (~ (_GLF_IDENTITY(1u, (1u) + 0u))))), 0u | (_GLF_IDENTITY(max(1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) + 0u), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1u, (1u) + 0u))), 0u | (~ (~ (_GLF_IDENTITY(1u, (1u) + 0u))))))), (max(1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) + 0u), ~ (~ (_GLF_IDENTITY(1u, (1u) + 0u)))))) | 0u))), max(1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) | 0u)) + 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, (1u) + 0u)), (_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, (1u) + 0u)), max(~ (_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) + (0u | 0u)), (1u) + 0u)), ~ (_GLF_IDENTITY(1u, (1u) + 0u))))) / 1u)))), max(1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) + 0u), ~ (~ (_GLF_IDENTITY(1u, (1u) + 0u)))))))), 1u))))), _GLF_struct_31(mat4x3(1.0), uvec3(1u), bvec4(true), vec3(1.0), mat3x2(1.0)), uvec3(1u), mat3(1.0), _GLF_struct_32(mat2(1.0))), _GLF_struct_36(_GLF_struct_34(bvec4(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (_GLF_IDENTITY(! (true), ! (! (! (true)))))))))), 1u, uvec2(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u))), 1, vec2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0)))))), _GLF_struct_35(bvec2(true), mat3x2(1.0), uvec2(1u), mat4x3(1.0))), ivec3(1), gl_SubgroupID, _GLF_struct_39(1, _GLF_struct_37(mat4x2(1.0), uvec2(1u), uvec2(_GLF_IDENTITY(1u, (1u) | (1u)))), _GLF_struct_38(mat2x3(1.0), mat3(1.0), uvec2(1u))), mat4x3(_GLF_IDENTITY(1.0, float(float(1.0)))));
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), (_GLF_IDENTITY(true ? vec2(injectionSwitch[0], injectionSwitch[1]) : _GLF_FUZZED(injectionSwitch), max(_GLF_IDENTITY(true ? vec2(injectionSwitch[0], injectionSwitch[1]) : _GLF_FUZZED(injectionSwitch), clamp(true ? vec2(injectionSwitch[0], injectionSwitch[1]) : _GLF_FUZZED(injectionSwitch), _GLF_IDENTITY(true ? vec2(injectionSwitch[0], injectionSwitch[1]) : _GLF_FUZZED(injectionSwitch), (true ? true ? vec2(injectionSwitch[0], injectionSwitch[1]) : _GLF_FUZZED(injectionSwitch) : _GLF_FUZZED(vec2(40.55, 4.3)))), _GLF_IDENTITY(true ? vec2(injectionSwitch[0], injectionSwitch[1]) : _GLF_FUZZED(injectionSwitch), (true ? vec2(injectionSwitch[0], injectionSwitch[1]) : _GLF_FUZZED(injectionSwitch)) * mat2(1.0)))), true ? vec2(injectionSwitch[0], injectionSwitch[1]) : _GLF_FUZZED(injectionSwitch)))))), vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(mat4x3(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-5.5)), vec2(_GLF_FUZZED(-85.90), (injectionSwitch)[1]), bvec2(false, true)))) - vec2(0.0, 0.0))))), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - tan(0.0))))))[0], (_GLF_IDENTITY(true ? injectionSwitch[0] : _GLF_FUZZED(0.9), _GLF_IDENTITY((false ? _GLF_FUZZED(ldexp(-1930.9259, 35912)) : _GLF_IDENTITY(_GLF_IDENTITY(true ? injectionSwitch[_GLF_IDENTITY(0, (0) | 0)] : _GLF_IDENTITY(_GLF_FUZZED(0.9), mix(_GLF_IDENTITY(float(_GLF_FUZZED(0.9)), float(vec2(float(_GLF_FUZZED(0.9)), 1.0))), float(_GLF_FUZZED(-3.3)), bool(false))), max(true ? injectionSwitch[_GLF_IDENTITY(0, (0) | 0)] : _GLF_IDENTITY(_GLF_FUZZED(0.9), mix(_GLF_IDENTITY(float(_GLF_FUZZED(0.9)), float(vec2(float(_GLF_FUZZED(0.9)), 1.0))), float(_GLF_FUZZED(-3.3)), bool(false))), true ? injectionSwitch[_GLF_IDENTITY(0, (0) | 0)] : _GLF_IDENTITY(_GLF_FUZZED(0.9), mix(_GLF_IDENTITY(float(_GLF_FUZZED(0.9)), float(vec2(float(_GLF_FUZZED(0.9)), 1.0))), float(_GLF_FUZZED(-3.3)), bool(false))))), clamp(true ? injectionSwitch[0] : _GLF_FUZZED(0.9), _GLF_IDENTITY(true, ! _GLF_IDENTITY((! (_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), false || (! (! (true))))))), ((! (_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), false || (! (! (true)))))))) || _GLF_IDENTITY(false, bool(bvec2(false, false))))) ? injectionSwitch[0] : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(0.9, max(0.9, _GLF_IDENTITY(0.9, float(mat2x3(0.9, 0.0, 1.0, 1.0, 0.0, length(vec3(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, min(0.0, 0.0))), float(_GLF_FUZZED(8064.3511)), bool(false))), 0.0)))))))), min(_GLF_FUZZED(0.9), _GLF_FUZZED(0.9))), true ? injectionSwitch[0] : _GLF_FUZZED(0.9)))), (true ? _GLF_IDENTITY((false ? _GLF_FUZZED(ldexp(-1930.9259, 35912)) : _GLF_IDENTITY(_GLF_IDENTITY(true ? injectionSwitch[_GLF_IDENTITY(0, (0) | 0)] : _GLF_IDENTITY(_GLF_FUZZED(0.9), mix(_GLF_IDENTITY(float(_GLF_FUZZED(0.9)), float(vec2(float(_GLF_FUZZED(0.9)), 1.0))), float(_GLF_FUZZED(-3.3)), bool(false))), max(true ? injectionSwitch[_GLF_IDENTITY(0, (0) | 0)] : _GLF_IDENTITY(_GLF_FUZZED(0.9), mix(_GLF_IDENTITY(float(_GLF_FUZZED(0.9)), float(vec2(float(_GLF_FUZZED(0.9)), 1.0))), float(_GLF_FUZZED(-3.3)), bool(false))), true ? injectionSwitch[_GLF_IDENTITY(0, (0) | 0)] : _GLF_IDENTITY(_GLF_FUZZED(0.9), mix(_GLF_IDENTITY(float(_GLF_FUZZED(0.9)), float(vec2(float(_GLF_FUZZED(0.9)), 1.0))), float(_GLF_FUZZED(-3.3)), bool(false))))), clamp(true ? injectionSwitch[0] : _GLF_FUZZED(0.9), _GLF_IDENTITY(true, ! _GLF_IDENTITY((! (_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), false || (! (! (true))))))), ((! (_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), false || (! (! (true)))))))) || _GLF_IDENTITY(false, bool(bvec2(false, false))))) ? injectionSwitch[0] : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(0.9, max(0.9, _GLF_IDENTITY(0.9, float(mat2x3(0.9, 0.0, 1.0, 1.0, 0.0, length(vec3(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(8064.3511)), bool(false))), 0.0)))))))), min(_GLF_FUZZED(0.9), _GLF_FUZZED(0.9))), true ? injectionSwitch[0] : _GLF_FUZZED(0.9)))), 0.0 + ((false ? _GLF_FUZZED(ldexp(-1930.9259, 35912)) : _GLF_IDENTITY(_GLF_IDENTITY(true ? injectionSwitch[_GLF_IDENTITY(0, (0) | 0)] : _GLF_IDENTITY(_GLF_FUZZED(0.9), mix(_GLF_IDENTITY(float(_GLF_FUZZED(0.9)), float(vec2(float(_GLF_FUZZED(0.9)), 1.0))), float(_GLF_FUZZED(-3.3)), bool(false))), max(true ? injectionSwitch[_GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)), (0) | 0)] : _GLF_IDENTITY(_GLF_FUZZED(0.9), mix(_GLF_IDENTITY(float(_GLF_FUZZED(0.9)), float(vec2(float(_GLF_FUZZED(0.9)), 1.0))), float(_GLF_FUZZED(-3.3)), bool(false))), true ? injectionSwitch[_GLF_IDENTITY(0, (0) | 0)] : _GLF_IDENTITY(_GLF_FUZZED(0.9), mix(_GLF_IDENTITY(float(_GLF_FUZZED(0.9)), float(vec2(float(_GLF_FUZZED(0.9)), 1.0))), float(_GLF_FUZZED(-3.3)), bool(false))))), _GLF_IDENTITY(clamp(true ? injectionSwitch[0] : _GLF_FUZZED(0.9), _GLF_IDENTITY(true, ! _GLF_IDENTITY((! (_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), false || (! (! (true))))))), ((! (_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), false || (! (! (true)))))))) || _GLF_IDENTITY(false, bool(bvec2(false, false))))) ? injectionSwitch[0] : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(0.9, max(0.9, _GLF_IDENTITY(0.9, float(mat2x3(0.9, 0.0, 1.0, 1.0, 0.0, length(vec3(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(8064.3511)), bool(false))), 0.0)))))))), min(_GLF_FUZZED(0.9), _GLF_FUZZED(0.9))), true ? injectionSwitch[0] : _GLF_FUZZED(0.9)), float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(clamp(true ? injectionSwitch[0] : _GLF_FUZZED(0.9), _GLF_IDENTITY(true, ! _GLF_IDENTITY((! (_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), false || (! (! (true))))))), ((! (_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), false || (! (! (true)))))))) || _GLF_IDENTITY(false, bool(bvec2(false, false))))) ? injectionSwitch[0] : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(0.9, max(0.9, _GLF_IDENTITY(0.9, float(mat2x3(0.9, 0.0, 1.0, 1.0, 0.0, length(vec3(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(8064.3511)), bool(false))), 0.0)))))))), min(_GLF_FUZZED(0.9), _GLF_FUZZED(0.9))), true ? injectionSwitch[0] : _GLF_FUZZED(0.9)), max(clamp(true ? injectionSwitch[0] : _GLF_FUZZED(0.9), _GLF_IDENTITY(true, ! _GLF_IDENTITY((! (_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), false || (! (! (true))))))), ((! (_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), false || (! (! (true)))))))) || _GLF_IDENTITY(false, bool(bvec2(false, false))))) ? injectionSwitch[0] : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(0.9, max(0.9, _GLF_IDENTITY(0.9, float(mat2x3(0.9, 0.0, 1.0, 1.0, 0.0, length(vec3(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(8064.3511)), bool(false))), 0.0)))))))), min(_GLF_FUZZED(0.9), _GLF_FUZZED(0.9))), true ? injectionSwitch[0] : _GLF_FUZZED(0.9)), _GLF_IDENTITY(clamp(true ? injectionSwitch[0] : _GLF_FUZZED(0.9), _GLF_IDENTITY(true, ! _GLF_IDENTITY((! (_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), false || (! (! (true))))))), ((! (_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), false || (! (! (true)))))))) || _GLF_IDENTITY(false, bool(bvec2(false, false))))) ? injectionSwitch[0] : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(0.9, max(0.9, _GLF_IDENTITY(0.9, float(mat2x3(0.9, 0.0, 1.0, 1.0, 0.0, length(vec3(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(8064.3511)), bool(false))), 0.0)))))))), min(_GLF_FUZZED(0.9), _GLF_FUZZED(0.9))), true ? injectionSwitch[0] : _GLF_FUZZED(0.9)), clamp(clamp(true ? injectionSwitch[0] : _GLF_FUZZED(0.9), _GLF_IDENTITY(true, ! _GLF_IDENTITY((! (_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), false || (! (! (true))))))), ((! (_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), false || (! (! (true)))))))) || _GLF_IDENTITY(false, bool(bvec2(false, false))))) ? injectionSwitch[0] : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(0.9, max(0.9, _GLF_IDENTITY(0.9, float(mat2x3(0.9, 0.0, 1.0, 1.0, 0.0, length(vec3(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(8064.3511)), bool(false))), 0.0)))))))), min(_GLF_FUZZED(0.9), _GLF_FUZZED(0.9))), true ? injectionSwitch[0] : _GLF_FUZZED(0.9)), clamp(true ? injectionSwitch[0] : _GLF_FUZZED(0.9), _GLF_IDENTITY(true, ! _GLF_IDENTITY((! (_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), false || (! (! (true))))))), ((! (_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), false || (! (! (true)))))))) || _GLF_IDENTITY(false, bool(bvec2(false, false))))) ? injectionSwitch[0] : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(0.9, max(0.9, _GLF_IDENTITY(0.9, float(mat2x3(0.9, 0.0, 1.0, 1.0, 0.0, length(vec3(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(8064.3511)), bool(false))), 0.0)))))))), min(_GLF_FUZZED(0.9), _GLF_FUZZED(0.9))), true ? injectionSwitch[0] : _GLF_FUZZED(0.9)), clamp(true ? injectionSwitch[0] : _GLF_FUZZED(0.9), _GLF_IDENTITY(true, ! _GLF_IDENTITY((! (_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), false || (! (! (true))))))), ((! (_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), false || (! (! (true)))))))) || _GLF_IDENTITY(false, bool(bvec2(false, false))))) ? injectionSwitch[0] : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(0.9, max(0.9, _GLF_IDENTITY(0.9, float(mat2x3(0.9, 0.0, 1.0, 1.0, 0.0, length(vec3(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(8064.3511)), bool(false))), 0.0)))))))), min(_GLF_FUZZED(0.9), _GLF_FUZZED(0.9))), true ? injectionSwitch[0] : _GLF_FUZZED(0.9)))))), 0.0, 1.0, 0.0, 0.0, log(1.0), log(abs(1.0)), 0.0), (true ? mat2x4(_GLF_IDENTITY(clamp(true ? injectionSwitch[0] : _GLF_FUZZED(0.9), _GLF_IDENTITY(true, ! _GLF_IDENTITY((! (_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), false || (! (! (true))))))), ((! (_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), false || (! (! (true)))))))) || _GLF_IDENTITY(false, bool(bvec2(false, false))))) ? injectionSwitch[0] : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(0.9, max(0.9, _GLF_IDENTITY(0.9, float(mat2x3(0.9, 0.0, 1.0, 1.0, 0.0, length(vec3(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(8064.3511)), bool(false))), 0.0)))))))), min(_GLF_FUZZED(0.9), _GLF_FUZZED(0.9))), true ? injectionSwitch[0] : _GLF_FUZZED(0.9)), max(clamp(true ? injectionSwitch[0] : _GLF_FUZZED(0.9), _GLF_IDENTITY(true, ! _GLF_IDENTITY((! (_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), false || (! (! (true))))))), ((! (_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), false || (! (! (true)))))))) || _GLF_IDENTITY(false, bool(bvec2(false, false))))) ? injectionSwitch[0] : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(0.9, max(0.9, _GLF_IDENTITY(0.9, float(mat2x3(0.9, 0.0, 1.0, 1.0, 0.0, length(vec3(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(8064.3511)), bool(false))), 0.0)))))))), min(_GLF_FUZZED(0.9), _GLF_FUZZED(0.9))), true ? injectionSwitch[0] : _GLF_FUZZED(0.9)), _GLF_IDENTITY(clamp(true ? injectionSwitch[0] : _GLF_FUZZED(0.9), _GLF_IDENTITY(true, ! _GLF_IDENTITY((! (_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), false || (! (! (true))))))), ((! (_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), false || (! (! (true)))))))) || _GLF_IDENTITY(false, bool(bvec2(false, false))))) ? injectionSwitch[0] : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(0.9, max(0.9, _GLF_IDENTITY(0.9, float(mat2x3(0.9, 0.0, 1.0, 1.0, 0.0, length(vec3(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(8064.3511)), bool(false))), 0.0)))))))), min(_GLF_FUZZED(0.9), _GLF_FUZZED(0.9))), true ? injectionSwitch[0] : _GLF_FUZZED(0.9)), clamp(clamp(true ? injectionSwitch[0] : _GLF_FUZZED(0.9), _GLF_IDENTITY(true, ! _GLF_IDENTITY((! (_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), false || (! (! (true))))))), ((! (_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), false || (! (! (true)))))))) || _GLF_IDENTITY(false, bool(bvec2(false, false))))) ? injectionSwitch[0] : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(0.9, max(0.9, _GLF_IDENTITY(0.9, float(mat2x3(0.9, 0.0, 1.0, 1.0, 0.0, length(vec3(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(8064.3511)), bool(false))), 0.0)))))))), min(_GLF_FUZZED(0.9), _GLF_FUZZED(0.9))), true ? injectionSwitch[0] : _GLF_FUZZED(0.9)), clamp(true ? injectionSwitch[0] : _GLF_FUZZED(0.9), _GLF_IDENTITY(true, ! _GLF_IDENTITY((! (_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), false || (! (! (true))))))), ((! (_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), false || (! (! (true)))))))) || _GLF_IDENTITY(false, bool(bvec2(false, false))))) ? injectionSwitch[0] : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(0.9, max(0.9, _GLF_IDENTITY(0.9, float(mat2x3(0.9, 0.0, 1.0, 1.0, 0.0, length(vec3(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(8064.3511)), bool(false))), 0.0)))))))), min(_GLF_FUZZED(0.9), _GLF_FUZZED(0.9))), true ? injectionSwitch[0] : _GLF_FUZZED(0.9)), clamp(true ? injectionSwitch[0] : _GLF_FUZZED(0.9), _GLF_IDENTITY(true, ! _GLF_IDENTITY((! (_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), false || (! (! (true))))))), ((! (_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), false || (! (! (true)))))))) || _GLF_IDENTITY(false, bool(bvec2(false, false))))) ? injectionSwitch[0] : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(0.9, max(0.9, _GLF_IDENTITY(0.9, float(mat2x3(0.9, 0.0, 1.0, 1.0, 0.0, length(vec3(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(8064.3511)), bool(false))), 0.0)))))))), min(_GLF_FUZZED(0.9), _GLF_FUZZED(0.9))), true ? injectionSwitch[0] : _GLF_FUZZED(0.9)))))), 0.0, 1.0, 0.0, 0.0, log(1.0), log(abs(1.0)), 0.0) : _GLF_FUZZED(mat2x4(-8807.1347, 0.3, 13.28, -9.3, 3.3, 329.329, 6.1, -8.9)))))))))) : _GLF_FUZZED(intBitsToFloat(ivec2(-19811, -29055)).r)))))), injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).x > injectionSwitch.y))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, _GLF_IDENTITY(bool(bool((false) && true)), (bool(bool((false) && true))) && true)))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) - vec2(0.0, 0.0)).y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (bool(false))))))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((1.1 - vec4(_GLF_IDENTITY(90.09, max(90.09, _GLF_IDENTITY(90.09, (true ? 90.09 : _GLF_FUZZED(-3.0))))), -5807.9531, -742.570, _GLF_IDENTITY(0.9, clamp(0.9, _GLF_IDENTITY(0.9, (false ? _GLF_FUZZED(-4.5) : 0.9)), 0.9)))).w), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(13.59)), bvec2(true, false))).y)), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false)))))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))), false || _GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true), false)))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true), false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true), false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true), false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false)), false))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true), false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)), false, true), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true), false))))))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true), false)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true), false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true), false))))))))))))))), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, false || (false)), true)))))), bool(bvec2((bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) && true) || (false)), true)))))), false)))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 1.0 * _GLF_IDENTITY((injectionSwitch.x), (_GLF_IDENTITY((injectionSwitch.x), (false ? _GLF_FUZZED(log(1.5)) : (injectionSwitch.x)))) - 0.0)))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), false, true))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))))))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            return;
           return;
           if(_GLF_DEAD(false))
            return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 _GLF_struct_16 _GLF_struct_replacement_16 = _GLF_struct_16(_GLF_struct_5(_GLF_struct_0(mat2(1.0), mat3x4(1.0), ivec4(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) << 0)))), ivec3(1), bvec2(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), false || (_GLF_IDENTITY(true, bool(bvec2(true, true))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), false || (_GLF_IDENTITY(true, bool(bvec2(true, true))))))))))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), (bool(bvec2(true, true))) && true)), false || (_GLF_IDENTITY(true, bool(bvec2(true, true)))))))))), false)), false || (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), false || (_GLF_IDENTITY(true, bool(bvec2(true, true))))))))), false || ((! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), false || (_GLF_IDENTITY(true, bool(bvec2(true, true))))))))))), (! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), false || (_GLF_IDENTITY(true, bool(bvec2(true, true)))))))))) && true)), bool(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), false || (_GLF_IDENTITY(true, bool(bvec2(true, true))))))))), false || ((! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), false || (_GLF_IDENTITY(true, bool(bvec2(true, true))))))))))), (! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), false || (_GLF_IDENTITY(true, bool(bvec2(true, true)))))))))) && true))))), false)), (bool(bvec2(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), false || (_GLF_IDENTITY(true, bool(bvec2(true, true)))))))))), false))) && true))))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(28.73) : injectionSwitch.x))), _GLF_IDENTITY(float(mat3((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(28.73) : injectionSwitch.x))), 1.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0)), mix(float(_GLF_FUZZED(465.456)), float(float(mat3((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(28.73) : injectionSwitch.x))), 1.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0))), bool(true)))) + 0.0) < injectionSwitch.y))))), _GLF_struct_1(ivec3(1), 1.0), _GLF_struct_2(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1), ivec2(ivec2(_GLF_IDENTITY(ivec2(1), min(ivec2(1), ivec2(1)))))), ivec2(1, 1) * (ivec2(1))), mat4(1.0), mat3x2(1.0), mat3(1.0)), _GLF_struct_3(mat3x4(1.0)), _GLF_struct_4(ivec2(1), vec2(1.0), mat2(_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(1.0), _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(float(1.0), max(float(1.0), float(1.0))), 1.0, sqrt(1.0))), clamp(float(vec3(_GLF_IDENTITY(float(1.0), max(float(1.0), float(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(392.287)), float(1.0), bool(true)))))), 1.0, sqrt(1.0))), _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(float(1.0), max(float(1.0), float(1.0))), 1.0, sqrt(1.0))), clamp(float(vec3(_GLF_IDENTITY(float(1.0), max(float(1.0), _GLF_IDENTITY(float(1.0), (float(1.0)) / sqrt(1.0)))), 1.0, sqrt(1.0))), float(vec3(_GLF_IDENTITY(float(1.0), max(float(1.0), float(1.0))), 1.0, sqrt(1.0))), float(vec3(_GLF_IDENTITY(float(1.0), max(float(1.0), float(1.0))), 1.0, sqrt(1.0))))), _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), max(float(1.0), _GLF_IDENTITY(float(1.0), (float(1.0)) - 0.0))), 1.0, sqrt(1.0))), mix(float(_GLF_IDENTITY(float(vec3(_GLF_IDENTITY(float(1.0), max(float(1.0), float(1.0))), 1.0, sqrt(1.0))), clamp(float(vec3(_GLF_IDENTITY(float(1.0), max(float(1.0), float(1.0))), 1.0, sqrt(1.0))), float(vec3(_GLF_IDENTITY(float(1.0), max(float(1.0), float(1.0))), 1.0, sqrt(1.0))), float(vec3(_GLF_IDENTITY(float(1.0), max(float(1.0), float(1.0))), 1.0, sqrt(1.0)))))), float(_GLF_FUZZED(-946.525)), bool(false)))))), float(_GLF_FUZZED(895.984)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_struct_9(_GLF_struct_6(vec2(1.0)), vec4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, sin(0.0) + (1.0))))), _GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2]), min(uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2]), uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2])))).x, _GLF_struct_7(uvec3(1u), uvec4(1u), 1), _GLF_struct_8(mat3x4(1.0), 1u, bvec4(true), vec3(1.0), mat3x4(1.0), uvec2(1u), mat4x2(1.0)), mat4(1.0), _GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, 0.0 + (1.0))), (vec2(1.0)) - vec2(0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, 0.0 + (1.0))), (vec2(1.0)) - vec2(0.0, 0.0)), max(_GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, 0.0 + (1.0))), (vec2(1.0)) - vec2(0.0, 0.0)), _GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, 0.0 + (1.0))), (vec2(1.0)) - vec2(0.0, 0.0)))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, 0.0 + (1.0))), (vec2(1.0)) - vec2(0.0, 0.0))))), _GLF_struct_15(_GLF_struct_10(mat3(_GLF_IDENTITY(1.0, log(_GLF_ONE(1.0, injectionSwitch.y)) + (1.0))), mat2x4(1.0), true, mat2(1.0), 1), _GLF_IDENTITY(ivec3(1), max(ivec3(1), ivec3(1))), _GLF_struct_11(ivec4(1), uvec2(1u), true, mat3x2(1.0), mat4(1.0), mat2(1.0)), _GLF_struct_12(_GLF_IDENTITY(uvec3(1u), (true ? _GLF_IDENTITY(uvec3(1u), uvec3(uvec3(uvec3(1u)))) : _GLF_FUZZED(uvec3(61435u, 122896u, 151898u)))), 1.0, mat4(1.0), bvec3(_GLF_IDENTITY(true, (true) || false)), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(_GLF_IDENTITY(bvec2(bvec2(true)), bvec2(bvec4(bvec2(bvec2(true)), false, false))))), bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(true), true, false))), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(true), true, false))), true, true)), bvec2(bvec3(bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(true), true, false))), true, true)), true)))), _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), ! (_GLF_IDENTITY(! _GLF_IDENTITY((true), false || ((true))), true && (! (true)))))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-5.0)), float(injectionSwitch.y), bool(true))))), true)))), _GLF_struct_13(vec2(1.0), ivec4(1)), _GLF_struct_14(bvec2(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), bool(bvec4(_GLF_IDENTITY(bool(true), bool(bool(_GLF_IDENTITY(bool(true), bool(bool(bool(true))))))), false, false, true)))))), mat2x4(1.0), vec2(1.0), uvec2(1u), bvec2(true), uvec4(1u), bvec2(true))), mat4x2(1.0));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) || false)))))
    return;
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 uint workgroup_base = workgroup_size * _GLF_struct_replacement_16._f1.workgroup_id;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))) || false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_40.subgroup_id * subgroup_size, (workgroup_base + _GLF_struct_replacement_40.subgroup_id * subgroup_size) << 0u) + subgroup_local_id, _GLF_IDENTITY((workgroup_base + _GLF_struct_replacement_40.subgroup_id * subgroup_size + subgroup_local_id), ((workgroup_base + _GLF_struct_replacement_40.subgroup_id * subgroup_size + subgroup_local_id)) | 0u) | (workgroup_base + _GLF_struct_replacement_40.subgroup_id * subgroup_size + subgroup_local_id));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 _GLF_struct_30 _GLF_struct_replacement_30 = _GLF_struct_30(mat4x3(_GLF_IDENTITY(1.0, (1.0) * 1.0)), workgroup_base + _GLF_struct_replacement_40.subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + 1) % subgroup_size), _GLF_struct_21(uvec3(1u), _GLF_struct_17(mat4x2(1.0), 1.0, _GLF_IDENTITY(bvec2(true), bvec2(bvec2(bvec2(true))))), bvec2(true), _GLF_struct_18(uvec3(1u), vec4(1.0), bvec4(true)), _GLF_struct_19(_GLF_IDENTITY(true, (true) && _GLF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true)))), (injectionSwitch.x < injectionSwitch.y))), mat3x4(1.0), vec2(1.0), vec4(1.0), mat2x3(1.0), vec3(1.0)), _GLF_struct_20(mat3(1.0))), _GLF_IDENTITY(uvec4(_GLF_IDENTITY(1u, _GLF_IDENTITY((_GLF_IDENTITY(1u, (1u) | (1u))), (true ? (_GLF_IDENTITY(1u, (1u) | (1u))) : _GLF_IDENTITY(_GLF_FUZZED(packSnorm2x16(vec2(-6.1, -73.40))), min(_GLF_FUZZED(packSnorm2x16(vec2(-6.1, -73.40))), _GLF_IDENTITY(_GLF_FUZZED(packSnorm2x16(vec2(-6.1, -73.40))), _GLF_IDENTITY(uint(uvec4(_GLF_FUZZED(packSnorm2x16(vec2(-6.1, -73.40))), 1u, (0u >> _GLF_IDENTITY(uint(2u), uint(2u))), 0u)), (uint(uvec4(_GLF_FUZZED(packSnorm2x16(vec2(-6.1, -73.40))), 1u, (0u >> _GLF_IDENTITY(uint(2u), uint(2u))), 0u))) * 1u)))))) / (1u & uint(_GLF_ONE(1.0, injectionSwitch.y))))), ~ (~ (uvec4(_GLF_IDENTITY(1u, _GLF_IDENTITY((_GLF_IDENTITY(1u, _GLF_IDENTITY((1u) | (1u), _GLF_IDENTITY((_GLF_IDENTITY((1u) | (1u), ((1u) | (1u)) ^ 0u)) ^ 0u, 0u ^ ((_GLF_IDENTITY((1u) | (1u), ((1u) | (1u)) ^ 0u)) ^ 0u))))), (true ? (_GLF_IDENTITY(1u, (1u) | (1u))) : _GLF_FUZZED(packSnorm2x16(vec2(-6.1, -73.40))))) / (_GLF_IDENTITY(1u & uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_IDENTITY(uvec4(1u & uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, 1u, 0u), (uvec4(1u & uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, 1u, 0u)) >> uvec4(0u, 0u, 0u, 0u)))))))))), _GLF_struct_25(_GLF_struct_22(mat3x4(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(47.96)))), bvec2(true), vec2(1.0), mat4x2(1.0), bvec4(true), 1.0, mat3x4(1.0)), _GLF_struct_23(_GLF_IDENTITY(mat4(1.0), (false ? _GLF_FUZZED(mat4(6843.6262, -4539.4182, -8.1, -7.4, _GLF_IDENTITY(-862.364, (false ? _GLF_FUZZED(6.0) : -862.364)), -4.3, -640.509, 0.5, 3.3, 0.2, 1.9, 7.2, _GLF_IDENTITY(_GLF_IDENTITY(-14.86, 0.0 + (-14.86)), (true ? -14.86 : _GLF_FUZZED(551.049))), -1262.4357, 5.9, -5.8)) : mat4(1.0)))), _GLF_struct_24(_GLF_IDENTITY(ivec3(1), (ivec3(1)) << ivec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), 1.0, mat2x3(1.0), uvec2(1u), mat3x2(1.0), _GLF_IDENTITY(uvec2(1u), _GLF_IDENTITY((_GLF_IDENTITY(uvec2(1u), (uvec2(1u)) ^ uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), ((_GLF_IDENTITY(uvec2(1u), (uvec2(1u)) ^ uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))) + uvec2(0u, 0u)) + uvec2(0u, 0u)), vec3(1.0))), _GLF_struct_26(uvec4(1u), mat4x3(1.0)), _GLF_struct_29(mat3x4(1.0), mat3x4(1.0), _GLF_struct_27(uvec3(1u)), bvec3(true), _GLF_struct_28(mat2(1.0), mat4x3(1.0), 1.0, mat3x4(1.0), mat2x3(1.0), 1u)), true);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 buf[virtual_gid] = 1;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)) + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   int i = 0;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   atomicStore(buf[_GLF_struct_replacement_30.next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_IDENTITY(false, (false) && true), false))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_IDENTITY(false, (false) && true), false)))) || false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(atan(-8.4, -6171.4185)) : 0.0)), 0.0))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
          return;
         return;
        }
       return;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bool((false)))))), (_GLF_IDENTITY(false, ! (! (false)))) || false), true, true)))))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(1.0, 1.0), vec2(1.0, 1.0)))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))), bool(bvec4(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[_GLF_struct_replacement_30.next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y)))))) || false)))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec3(bvec2((false), true), true)))))) || false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, false))))
    return;
   return;
  }
}
