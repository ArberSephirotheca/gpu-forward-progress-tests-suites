#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 0) uniform buf0 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) * 1) != (0 << _GLF_IDENTITY(int(0), int(0)))); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-9.7))))), mix(_GLF_IDENTITY(float(_GLF_FUZZED(60.86)), max(float(_GLF_FUZZED(60.86)), float(_GLF_FUZZED(60.86)))), _GLF_IDENTITY(float(injectionSwitch.x), 1.0 * (_GLF_IDENTITY(float(injectionSwitch.x), float(vec2(float(injectionSwitch.x), 0.0))))), _GLF_IDENTITY(bool(true), ! (! (bool(true)))))) > injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec2(false, true)))))
          {
          }
         else
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, 0 | (_injected_loop_counter)), (_injected_loop_counter) << 0) != ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)))); _injected_loop_counter ++)
            {
             barrier();
            }
          }
        }
      }
    }
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec3(_GLF_WRAPPED_IF_FALSE(false), false, false)))) && true))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) || false)))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
     else
      {
      }
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec3(true, true, false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-6.7), _GLF_FUZZED(-30.94)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), injectionSwitch)).x < injectionSwitch.y)) ? 1 : _GLF_FUZZED(_injected_loop_counter)))); _injected_loop_counter ++)
        {
         barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
      }
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((-0.7 - 2.1)) : injectionSwitch.y))))))
  barrier();
 do
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, int(ivec2(_injected_loop_counter, 1))), _injected_loop_counter)) != 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         barrier();
        }
      }
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) >> (0 << _GLF_IDENTITY(int(4), int(4)))))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))
          barrier();
         if(_GLF_DEAD(false))
          {
           do
            {
             do
              {
               for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                {
                 barrier();
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(float(-2668)), _GLF_FUZZED(-7.5)), bvec2(false, false)))))).x > injectionSwitch.y))))
                barrier();
               barrier();
              }
             do
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_DEAD(false))
              barrier();
            }
           while(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, true))))))) || false), true && (false))))), ! (! (false))) || (_GLF_WRAPPED_LOOP(false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), ! (! (false))) || (_GLF_WRAPPED_LOOP(false))), true && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), bool(bvec4(! (_GLF_IDENTITY(false, true && (false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))), ! (! (false))) || (_GLF_WRAPPED_LOOP(false))))))));
          }
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
    }
   else
    {
    }
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true))))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       else
        {
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     do
      {
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true)))))))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          barrier();
        }
       barrier();
      }
    }
  }
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) * 1u)) / uint(_GLF_ONE(1.0, injectionSwitch.y))), max(workgroup_size * _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id)), _GLF_IDENTITY(workgroup_size, min(_GLF_IDENTITY(workgroup_size, uint(uvec4(workgroup_size, 0u, 0u, 0u))), _GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size) ^ 0u, ~ (~ ((workgroup_size) ^ 0u)))))) * workgroup_id));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4((false), false, _GLF_IDENTITY(false, (false) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY(bool(bvec4((false), false, _GLF_IDENTITY(false, (false) && true), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))), false || (bool(bvec4((false), false, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (false) && true)))), _GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))))))) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
      }
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), bool(bool(_GLF_IDENTITY(true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), false || (true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))))), (! ((injectionSwitch.x > injectionSwitch.y))) || false))))))
  {
   do
    {
     if(_GLF_DEAD(false))
      {
       do
        {
         do
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       while(_GLF_WRAPPED_LOOP(false));
       do
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           for(int _injected_loop_counter = _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), ~ (~ (~ (0)))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
            }
           if(_GLF_DEAD(false))
            {
             do
              {
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   barrier();
                  }
                 else
                  {
                  }
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
          }
         else
          {
           if(_GLF_DEAD(false))
            {
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           barrier();
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > ((0 >> _GLF_IDENTITY(int(8), int(8))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) / 1)))); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-33.60) : injectionSwitch[0])), injectionSwitch[_GLF_IDENTITY(1, max(1, 1))])).x > injectionSwitch.y))))
        barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true))), _GLF_IDENTITY(true, (true) && true)), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), false, _GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), ! (! (_GLF_IDENTITY(true, (true) && true)))))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), false, _GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, ! (_GLF_IDENTITY(! ((true) && true), ! _GLF_IDENTITY((! (! ((true) && true))), ((! (! ((true) && true)))) && true)))))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), false, _GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, ! (_GLF_IDENTITY(! ((true) && true), ! (! (! ((true) && _GLF_IDENTITY(true, false || (true))))))))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), false, _GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, ! (_GLF_IDENTITY(! ((true) && true), ! (! (! _GLF_IDENTITY(_GLF_IDENTITY(((true) && true), ! (_GLF_IDENTITY(! (((true) && true)), false || (! (((true) && true)))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))) || (_GLF_IDENTITY(((true) && true), false || (((true) && true))))))))))))))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), determinant(mat3(round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), exp(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, _GLF_IDENTITY(1.0, abs(1.0) * (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-5.6))))), 0.0), vec4(0.0, 0.0, 1.0, 0.0))))), 0.0))) > injectionSwitch.y)), false, _GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, ! (_GLF_IDENTITY(! ((true) && true), ! (! (! ((true) && true))))))))))), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false))))))))), true))))))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), false, _GLF_IDENTITY(true, (true) && true)), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), false, _GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) && true)), (! (_GLF_IDENTITY(true, (true) && true))) && true))))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), false, _GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, ! (_GLF_IDENTITY(! ((true) && true), ! (! (! ((true) && true)))))))))), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), false, _GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, ! (_GLF_IDENTITY(! ((true) && true), ! (! (! ((true) && _GLF_IDENTITY(true, false || (true))))))))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), false, _GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, ! (_GLF_IDENTITY(! ((true) && true), ! (! (! _GLF_IDENTITY(((true) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (((true) && true))))))))))))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x, float(mat4x2(injectionSwitch.x, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), determinant(mat3(round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), exp(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / sqrt(1.0)))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))))), 0.0))) > injectionSwitch.y), false || ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x, float(mat4x2(injectionSwitch.x, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), determinant(mat3(round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), exp(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / sqrt(1.0)))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))))), 0.0))) > injectionSwitch.y)))), false, _GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, ! (_GLF_IDENTITY(! ((true) && true), ! (! (! ((true) && true))))))))))), false))), true)))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), false, _GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, ! (_GLF_IDENTITY(! ((true) && true), ! (! (! ((true) && _GLF_IDENTITY(true, false || (true))))))))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), false, _GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, ! (_GLF_IDENTITY(! ((true) && true), ! (! (! _GLF_IDENTITY(((true) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (((true) && true))))))))))))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x, float(mat4x2(injectionSwitch.x, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), determinant(mat3(round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), exp(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / sqrt(1.0)))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))))), 0.0))) > injectionSwitch.y), false || ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x, float(mat4x2(injectionSwitch.x, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), determinant(mat3(round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), exp(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / sqrt(1.0)))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))))), 0.0))) > injectionSwitch.y)))), false, _GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, ! (_GLF_IDENTITY(! ((true) && true), ! (! (! ((true) && true))))))))))), false))), true)))), false)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), false, _GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, ! (_GLF_IDENTITY(! ((true) && true), ! (! (! ((true) && _GLF_IDENTITY(true, false || (true))))))))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), false, _GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, ! (_GLF_IDENTITY(! ((true) && true), ! (! (! _GLF_IDENTITY(((true) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (((true) && true))))))))))))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x, float(mat4x2(injectionSwitch.x, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), determinant(mat3(round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), exp(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / sqrt(1.0)))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))))), 0.0))) > injectionSwitch.y), false || ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x, float(mat4x2(injectionSwitch.x, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), determinant(mat3(round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), exp(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / sqrt(1.0)))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))))), 0.0))) > injectionSwitch.y)))), false, _GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, ! (_GLF_IDENTITY(! ((true) && true), ! (! (! ((true) && true))))))))))), false))), true)))), false)), false)))))))))))))), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, exp(0.0) * (injectionSwitch.x)), float(vec4(injectionSwitch.x, 1.0, 1.0, 1.0))) > injectionSwitch.y, _GLF_IDENTITY(true && (injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true && (injectionSwitch.x > injectionSwitch.y), (true && (injectionSwitch.x > injectionSwitch.y)) || false)), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(-5.2))), max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)) && (bool(_GLF_IDENTITY(true && (injectionSwitch.x > injectionSwitch.y), (true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y)) || false))))))), false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true))))) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))))), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, (true) || false) && (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED((true ? length(injectionSwitch) : 6570.3312)) : _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * round(length(normalize(1.0)))))), false, _GLF_IDENTITY(true, (true) && true)), bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, true, true))) && (injectionSwitch.x > injectionSwitch.y)), false, _GLF_IDENTITY(true, (true) && true))))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-372.092))) > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, (true) && true) && (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-609.288))) > injectionSwitch.y)))))), false, _GLF_IDENTITY(true, (true) && true)), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true && (injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(true && (injectionSwitch.x > injectionSwitch.y), bool(bvec2(true && (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), false, true, false))))))) || false)), false, _GLF_IDENTITY(true, (true) && true))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(true && (injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(true && (injectionSwitch.x > injectionSwitch.y), bool(bvec2(true && (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), false, true, false))))))) || false), ! (! (_GLF_IDENTITY(true && (injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).y), bool(bvec2(true && (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), false, true, false))))))) || false))))), false, _GLF_IDENTITY(true, (true) && true))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))) && true)))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1]))), vec2(_GLF_FUZZED(-100.497), _GLF_FUZZED(4.0)), bvec2(false, false))) : _GLF_FUZZED(injectionSwitch))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, (injectionSwitch.y) - 0.0), true && (injectionSwitch.x > injectionSwitch.y)), false, _GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), false || (_GLF_IDENTITY(true, (true) && true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0), mat3(_GLF_IDENTITY(mat4(mat3(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), (false ? _GLF_FUZZED(mat4(84.10, 7547.4369, -9.9, 2.4, 145.307, -301.145, 7516.6555, 503.055, 3.6, 5.9, -1037.8244, -35.24, 9577.2410, -2.8, 8.5, -350.913)) : mat4(mat3(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)))))))) : _GLF_FUZZED(0.9))) > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3.1)), float(injectionSwitch.x), bool(true))), mix(float(_GLF_FUZZED(-0.9)), float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3.1)), float(injectionSwitch.x), bool(true)))), bool(true))) > injectionSwitch.y)), false, _GLF_IDENTITY(true, (true) && true))))), true))), false)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((true && (injectionSwitch.x > injectionSwitch.y)) && _GLF_IDENTITY(true, bool(bvec4(true, true, true, true))), ! (! (_GLF_IDENTITY((true && (injectionSwitch.x > injectionSwitch.y)) && _GLF_IDENTITY(true, bool(bvec4(true, true, true, true))), ((true && (injectionSwitch.x > injectionSwitch.y)) && _GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))) && true)))))), false, _GLF_IDENTITY(true, (true) && true)), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)) && true)))) && true), _GLF_IDENTITY(true && (injectionSwitch.x > injectionSwitch.y), ! (! (true && (injectionSwitch.x > injectionSwitch.y))))), false, _GLF_IDENTITY(true, (true) && true))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) && true)))) && true), _GLF_IDENTITY(true && (injectionSwitch.x > injectionSwitch.y), ! (! (true && (injectionSwitch.x > injectionSwitch.y))))), false, _GLF_IDENTITY(true, (true) && true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bool(true)))) && true)), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sin(vec2(0.0, 0.0))).y)), false, _GLF_IDENTITY(true, (true) && true)))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sin(vec2(0.0, 0.0))).y)), false, _GLF_IDENTITY(true, (true) && true)))), true)))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bool(true)))) && true)), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sin(vec2(0.0, 0.0))).y)), false, _GLF_IDENTITY(true, (true) && true)))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sin(vec2(0.0, 0.0))).y)), false, _GLF_IDENTITY(true, (true) && true)))), true)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bool(true)))) && true)), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sin(vec2(0.0, 0.0))).y)), false, _GLF_IDENTITY(true, (true) && true)))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sin(vec2(0.0, 0.0))).y)), false, _GLF_IDENTITY(true, (true) && true)))), true))))))), false)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bool(true)))) && true)), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sin(vec2(0.0, 0.0))).y)), false, _GLF_IDENTITY(true, (true) && true)))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sin(vec2(0.0, 0.0))).y)), false, _GLF_IDENTITY(true, (true) && true)))), true)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bool(true)))) && true)), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sin(vec2(0.0, 0.0))).y)), false, _GLF_IDENTITY(true, (true) && true)))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sin(vec2(0.0, 0.0))).y)), false, _GLF_IDENTITY(true, (true) && true)))), true))))))), false)))))), true))), false))))))))))))))))));
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   else
    {
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     else
      {
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))));
  }
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uint(subgroup_id * subgroup_size))) + ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 buf[virtual_gid] = 1;
 if(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))) / 1u) + _GLF_IDENTITY(1, (1) * 1) < _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) / 1u))), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((uint(uvec2(subgroup_size, uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))), min(_GLF_IDENTITY(_GLF_IDENTITY((uint(uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))))), clamp((uint(uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))))), (uint(uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))))), _GLF_IDENTITY((uint(uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))))), min((uint(uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))))), (uint(uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))))))))), (_GLF_IDENTITY((uint(_GLF_IDENTITY(uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)))) / (uvec2(1u, 1u) & uvec2(1u, 1u))))), clamp((uint(uvec2(subgroup_size, uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0))) - vec2(0.0, 0.0)).y))))), (uint(uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))))), _GLF_IDENTITY((uint(uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))))), min((uint(uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))))), _GLF_IDENTITY((uint(uvec2(subgroup_size, _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) ^ 0u)))), ~ (_GLF_IDENTITY(~ ((uint(uvec2(subgroup_size, _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) ^ 0u))))), max(~ ((uint(uvec2(subgroup_size, _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) ^ 0u))))), ~ ((uint(uvec2(subgroup_size, _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) ^ 0u)))))))))))))) * 1u), (uint(uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))))))), _GLF_IDENTITY(0u, 0u ^ (0u)) | (~ (uint(uvec2(subgroup_size, _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))), (uint(_GLF_ONE(1.0, injectionSwitch.y))) << 0u)) | (uint(_GLF_ONE(1.0, injectionSwitch.y)))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
      }
    }
   int i = _GLF_IDENTITY(0, (_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec4(0, 1, ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))), 1)), max(int(ivec4(0, 1, ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))), 1)), int(ivec4(0, 1, ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) | (int(5))), int(5))) >> _GLF_IDENTITY(int(5), int(5))), 1)))))) >> 0);
   if(_GLF_DEAD(false))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   do
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), ! (! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ! (! ((false)))))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! ((false))))))))))), false || (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (! (! (false)))))) && true), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! ((! (false)))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), _GLF_IDENTITY(! (! ((false))), false || (_GLF_IDENTITY(! (! ((false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(! (! (_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec2((false), false)), (bool(bvec2((false), false))) || false)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(! (! ((false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true && (bool(_GLF_IDENTITY(bvec3(! (! ((false))), false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), bvec3(bvec3(bvec3(! (! ((false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))))), true && (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(! (! ((! (false)))), true && (! (! ((! _GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY((false), false || ((false))), true, true, false))))))))))))))) && true)), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))))))))))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
               else
                {
                }
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 barrier();
                }
              }
            }
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       for(int _injected_loop_counter = ((_GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(i) : 1)) << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), int(ivec2(int(2), 0))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), min(_GLF_IDENTITY(int(2), int(_GLF_IDENTITY(ivec4(int(2), 0, 1, 1), (ivec4(int(2), 0, 1, 1)) | (ivec4(int(2), 0, 1, 1))))), int(2))), _GLF_IDENTITY(int(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (_GLF_IDENTITY(true ? 2 : _GLF_FUZZED(int(true)), (true ? 2 : _GLF_FUZZED(int(true))) | _GLF_IDENTITY((_GLF_IDENTITY(true ? 2 : _GLF_FUZZED(int(true)), (true ? 2 : _GLF_FUZZED(int(_GLF_IDENTITY(true, true && (true))))) | (true ? 2 : _GLF_FUZZED(int(true))))), max((_GLF_IDENTITY(true ? 2 : _GLF_FUZZED(int(true)), (true ? 2 : _GLF_FUZZED(int(_GLF_IDENTITY(true, true && (true))))) | (true ? 2 : _GLF_FUZZED(int(true))))), _GLF_IDENTITY((_GLF_IDENTITY(true ? 2 : _GLF_FUZZED(int(true)), (true ? 2 : _GLF_FUZZED(int(_GLF_IDENTITY(true, true && (true))))) | (true ? 2 : _GLF_FUZZED(int(true))))), max((_GLF_IDENTITY(true ? 2 : _GLF_FUZZED(int(true)), (true ? 2 : _GLF_FUZZED(int(_GLF_IDENTITY(true, true && (true))))) | (true ? 2 : _GLF_FUZZED(int(true))))), (_GLF_IDENTITY(true ? 2 : _GLF_FUZZED(int(true)), (true ? 2 : _GLF_FUZZED(int(_GLF_IDENTITY(true, true && (true))))) | (true ? 2 : _GLF_FUZZED(int(true))))))))))))) ^ 0)), _GLF_IDENTITY((int(2)), ((int(2))) | ((int(2)))) << 0))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))), true && (_GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))))); _GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter --, (false ? _GLF_FUZZED(i) : _injected_loop_counter --)), 0 + (_GLF_IDENTITY(_injected_loop_counter --, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) >> 0)), (_GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) >> 0)), (false ? _GLF_FUZZED(3758) : (_GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) >> 0))))) * 1))))))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           barrier();
          }
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true)))))
    barrier();
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
    }
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), max(int(7), int(7))))) >> _GLF_IDENTITY(int(7), int(7))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         barrier();
        }
      }
    }
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7)))))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
      }
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(1), int(1)))); _injected_loop_counter --)
        {
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
      }
    }
   else
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_TRUE(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, (true) && true)))))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))), _GLF_IDENTITY(true, true && (true)), false)), false || (bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))))))
        {
         atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) ^ 0u), _GLF_IDENTITY(min(next_virtual_gid, next_virtual_gid), ~ (~ (min(next_virtual_gid, next_virtual_gid)))))], uint(2), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) / 1)) ^ (_GLF_IDENTITY(56931, int(_GLF_IDENTITY(ivec4(56931, (0 | 1), 1, _GLF_IDENTITY(1, int(ivec3(1, 1, 0)))), ~ (~ _GLF_IDENTITY((ivec4(56931, (0 | 1), 1, 1)), ((ivec4(56931, (0 | 1), 1, 1))) | (_GLF_IDENTITY((ivec4(56931, (0 | 1), 1, 1)), clamp((ivec4(56931, (0 | 1), 1, 1)), (ivec4(56931, (0 | 1), 1, 1)), (ivec4(56931, (0 | 1), 1, 1)))))))))) & 0)), (false ? _GLF_FUZZED((45352 << _injected_loop_counter)) : _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) / 1)) ^ (_GLF_IDENTITY(56931, int(_GLF_IDENTITY(ivec4(56931, (0 | 1), 1, _GLF_IDENTITY(1, int(ivec3(1, 1, 0)))), ~ (~ _GLF_IDENTITY((ivec4(56931, (0 | 1), 1, 1)), ((ivec4(56931, (0 | 1), 1, 1))) | (_GLF_IDENTITY((ivec4(56931, (0 | 1), 1, 1)), clamp((ivec4(56931, _GLF_IDENTITY((0 | 1), ((0 | 1)) / 1), 1, 1)), (ivec4(56931, (0 | 1), 1, 1)), (ivec4(56931, (0 | 1), 1, 1)))))))))) & 0)))), _GLF_IDENTITY((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) / _GLF_IDENTITY(1, (1) * 1))) ^ (56931 & 0))), _GLF_IDENTITY(((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) / _GLF_IDENTITY(1, (1) * 1))) ^ (56931 & 0)))) - 0, (((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) / _GLF_IDENTITY(1, (1) * 1))) ^ (56931 & 0)))) - 0) << int(_GLF_ZERO(0.0, injectionSwitch.x)))) - 0), min(_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) / 1)) ^ (_GLF_IDENTITY(56931, int(_GLF_IDENTITY(ivec4(56931, (0 | 1), 1, 1), ~ (~ (ivec4(_GLF_IDENTITY(56931, max(_GLF_IDENTITY(56931, (56931) | (56931)), 56931)), (0 | 1), 1, 1)))))) & 0)), _GLF_IDENTITY((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) / _GLF_IDENTITY(1, (1) * 1))) ^ (56931 & 0))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) / _GLF_IDENTITY(1, (1) * 1))) ^ (56931 & 0))), clamp((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) / _GLF_IDENTITY(1, (1) * 1))) ^ (56931 & 0))), (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) / _GLF_IDENTITY(1, (1) * 1))) ^ (56931 & 0))), (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) / _GLF_IDENTITY(1, (1) * 1))) ^ (56931 & 0)))))) - 0, clamp((_GLF_IDENTITY((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) / _GLF_IDENTITY(1, (1) * 1))) ^ (56931 & 0))), clamp((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) / _GLF_IDENTITY(1, (1) * 1))) ^ (56931 & 0))), (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) / _GLF_IDENTITY(1, (1) * 1))) ^ (56931 & 0))), (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) / _GLF_IDENTITY(1, (1) * 1))) ^ (56931 & 0)))))) - 0, (_GLF_IDENTITY((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) / _GLF_IDENTITY(1, (1) * 1))) ^ (56931 & 0))), clamp((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) / _GLF_IDENTITY(1, (1) * 1))) ^ (56931 & 0))), (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) / _GLF_IDENTITY(1, (1) * 1))) ^ (56931 & 0))), (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) / _GLF_IDENTITY(1, (1) * 1))) ^ (56931 & 0)))))) - 0, (_GLF_IDENTITY((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) / _GLF_IDENTITY(1, (1) * 1))) ^ (56931 & 0))), clamp((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) / _GLF_IDENTITY(1, (1) * 1))) ^ (56931 & 0))), (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) / _GLF_IDENTITY(1, (1) * 1))) ^ (56931 & 0))), (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) / _GLF_IDENTITY(1, (1) * 1))) ^ (56931 & 0)))))) - 0))) - 0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, _GLF_IDENTITY((4), min((4), _GLF_IDENTITY((4), min((4), _GLF_IDENTITY((4), ((4)) - 0))))) / 1)) ^ (_GLF_IDENTITY(56931, int(_GLF_IDENTITY(ivec4(56931, (0 | 1), 1, 1), _GLF_IDENTITY(~ (~ (ivec4(56931, (0 | 1), 1, 1))), (true ? ~ (~ (ivec4(56931, (0 | 1), 1, 1))) : _GLF_FUZZED(ivec4(-51098, 22811, 86076, 72927))))))) & 0)), _GLF_IDENTITY((_GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, (4) / _GLF_IDENTITY(1, (1) * 1))) ^ (56931 & 0), ((_GLF_IDENTITY(4, (4) / _GLF_IDENTITY(1, (1) * 1))) ^ (56931 & 0)) >> 0))), ((_GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(4, (4) / _GLF_IDENTITY(1, (1) * 1)), int(ivec4(_GLF_IDENTITY(4, (4) / _GLF_IDENTITY(1, (1) * 1)), 1, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0)))) ^ (56931 & 0), ((_GLF_IDENTITY(_GLF_IDENTITY(4, (4) / _GLF_IDENTITY(1, (1) * 1)), int(ivec4(_GLF_IDENTITY(4, (4) / _GLF_IDENTITY(1, (1) * 1)), 1, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0)))) ^ (56931 & 0)) | ((_GLF_IDENTITY(_GLF_IDENTITY(4, (4) / _GLF_IDENTITY(1, (1) * 1)), int(ivec4(_GLF_IDENTITY(4, (4) / _GLF_IDENTITY(1, (1) * 1)), 1, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0)))) ^ (56931 & 0)))))) - 0) - 0), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) / 1)) ^ (_GLF_IDENTITY(56931, int(_GLF_IDENTITY(ivec4(56931, (0 | 1), 1, 1), ~ (~ (ivec4(56931, (0 | 1), 1, _GLF_IDENTITY(1, ~ (~ (1))))))))) & 0)), _GLF_IDENTITY((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) / _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) >> 0)) * 1))) ^ (_GLF_IDENTITY(56931, (true ? 56931 : _GLF_FUZZED((_injected_loop_counter << 19212)))) & _GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, clamp(0, 0, 0))))))), ((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) / _GLF_IDENTITY(1, (1) * 1))) ^ (56931 & 0)))) - 0) - 0), (0 >> _GLF_IDENTITY(int(1), int(1))), 1), ~ (~ (ivec3(_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) / 1)) ^ (_GLF_IDENTITY(56931, int(_GLF_IDENTITY(ivec4(56931, (0 | 1), 1, 1), ~ (~ (ivec4(56931, (0 | 1), 1, 1)))))) & 0)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(int((virtual_gid | subgroup_size))) : _GLF_IDENTITY(4, int(ivec4(4, 0, 1, 1))))), (_GLF_IDENTITY(4, (4) / _GLF_IDENTITY(1, (1) * 1))) ^ (_GLF_IDENTITY(56931, 1 * (56931)) & 0))), ((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) / _GLF_IDENTITY(_GLF_IDENTITY(1, (1) * 1), (_GLF_IDENTITY(1, (1) * 1)) | 0))) ^ (_GLF_IDENTITY(56931, (56931) << 0) & 0)))) - 0) - 0), (0 >> _GLF_IDENTITY(int(1), int(1))), 1))))), (int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) / 1)) ^ (_GLF_IDENTITY(56931, int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(56931, clamp(_GLF_IDENTITY(56931, int(ivec3(56931, 0, 0))), 56931, _GLF_IDENTITY(56931, min(56931, _GLF_IDENTITY(56931, (56931) ^ 0))))), (0 | _GLF_IDENTITY(1, (1) | (1))), 1, 1), ~ (~ (ivec4(56931, (0 | 1), 1, 1)))))) & 0)), _GLF_IDENTITY((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, _GLF_IDENTITY((4), ((4)) >> 0) / _GLF_IDENTITY(1, (1) * _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) | 0)))))) ^ (56931 & 0))), ((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) / _GLF_IDENTITY(1, (1) * 1))) ^ (56931 & 0)))) - 0) - 0), (0 >> _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, 0 ^ (1))))))), 1), ~ (~ (ivec3(_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) / 1)) ^ (_GLF_IDENTITY(56931, int(_GLF_IDENTITY(ivec4(56931, (0 | 1), 1, 1), ~ (~ (ivec4(56931, (_GLF_IDENTITY(0 | 1, (0 | 1) >> 0)), 1, _GLF_IDENTITY(1, (1) / 1))))))) & 0)), _GLF_IDENTITY((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) / _GLF_IDENTITY(1, (1) * 1))) ^ (56931 & 0))), ((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) / _GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec3(_GLF_IDENTITY(1, min(1, 1)), 1, 1))), (1) * 1))) ^ (56931 & 0)))) - 0) - 0), (0 >> _GLF_IDENTITY(int(1), int(1))), 1)))), max(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) / 1)) ^ (_GLF_IDENTITY(56931, int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(56931, clamp(_GLF_IDENTITY(56931, int(ivec3(56931, 0, 0))), 56931, _GLF_IDENTITY(56931, min(56931, _GLF_IDENTITY(56931, (56931) ^ 0))))), (0 | _GLF_IDENTITY(1, (1) | (1))), 1, 1), ~ (~ (ivec4(56931, (0 | 1), 1, 1)))))) & 0)), _GLF_IDENTITY((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, _GLF_IDENTITY((4), ((4)) >> 0) / _GLF_IDENTITY(1, (1) * _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) | 0)))))) ^ (56931 & 0))), ((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) / _GLF_IDENTITY(1, (1) * 1))) ^ (56931 & 0)))) - 0) - 0), (0 >> _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, 0 ^ (1))))))), 1), ~ (~ (ivec3(_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) / 1)) ^ (_GLF_IDENTITY(56931, int(_GLF_IDENTITY(ivec4(56931, (0 | 1), 1, 1), ~ (~ (ivec4(56931, (_GLF_IDENTITY(0 | 1, (0 | 1) >> 0)), 1, _GLF_IDENTITY(1, (1) / 1))))))) & 0)), _GLF_IDENTITY((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) / _GLF_IDENTITY(1, (1) * 1))) ^ (56931 & 0))), ((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) / _GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec3(_GLF_IDENTITY(1, min(1, 1)), 1, 1))), (1) * 1))) ^ (56931 & 0)))) - 0) - 0), (0 >> _GLF_IDENTITY(int(1), int(1))), 1)))), _GLF_IDENTITY(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) / 1)) ^ (_GLF_IDENTITY(56931, int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(56931, clamp(_GLF_IDENTITY(56931, int(ivec3(56931, 0, 0))), 56931, _GLF_IDENTITY(56931, min(56931, _GLF_IDENTITY(56931, (56931) ^ 0))))), (0 | _GLF_IDENTITY(1, (1) | (1))), 1, 1), ~ (~ (ivec4(56931, (0 | 1), 1, 1)))))) & 0)), _GLF_IDENTITY((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, _GLF_IDENTITY((4), ((4)) >> 0) / _GLF_IDENTITY(1, (1) * _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) | 0)))))) ^ (56931 & 0))), ((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) / _GLF_IDENTITY(1, (1) * 1))) ^ (56931 & 0)))) - 0) - 0), (0 >> _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, 0 ^ (1))))))), 1), ~ (~ (ivec3(_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) / 1)) ^ (_GLF_IDENTITY(56931, int(_GLF_IDENTITY(ivec4(56931, (0 | 1), 1, 1), ~ (~ (ivec4(56931, (_GLF_IDENTITY(0 | 1, (0 | 1) >> 0)), 1, _GLF_IDENTITY(1, (1) / 1))))))) & 0)), _GLF_IDENTITY((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) / _GLF_IDENTITY(1, (1) * 1))) ^ (56931 & 0))), ((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) / _GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec3(_GLF_IDENTITY(1, min(1, 1)), 1, 1))), (1) * 1))) ^ (56931 & 0)))) - 0) - 0), (0 >> _GLF_IDENTITY(int(1), int(1))), 1)))), ivec3(0, 0, 0) | (_GLF_IDENTITY(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) / 1)) ^ (_GLF_IDENTITY(56931, int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(56931, clamp(_GLF_IDENTITY(56931, int(ivec3(56931, 0, 0))), 56931, _GLF_IDENTITY(56931, min(56931, _GLF_IDENTITY(56931, (56931) ^ 0))))), (0 | _GLF_IDENTITY(1, (1) | (1))), 1, 1), ~ (~ (ivec4(56931, (0 | 1), 1, 1)))))) & 0)), _GLF_IDENTITY((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, _GLF_IDENTITY((4), ((4)) >> 0) / _GLF_IDENTITY(1, (1) * _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) | 0)))))) ^ (56931 & 0))), ((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) / _GLF_IDENTITY(1, (1) * 1))) ^ (56931 & 0)))) - 0) - 0), (0 >> _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, 0 ^ (1))))))), 1), ~ (~ (ivec3(_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) / 1)) ^ (_GLF_IDENTITY(56931, int(_GLF_IDENTITY(ivec4(56931, (0 | 1), 1, 1), ~ (~ (ivec4(56931, (_GLF_IDENTITY(0 | 1, (0 | 1) >> 0)), 1, _GLF_IDENTITY(1, (1) / 1))))))) & 0)), _GLF_IDENTITY((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) / _GLF_IDENTITY(1, (1) * 1))) ^ (56931 & 0))), ((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) / _GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec3(_GLF_IDENTITY(1, min(1, 1)), 1, 1))), (1) * 1))) ^ (56931 & 0)))) - 0) - 0), (0 >> _GLF_IDENTITY(int(1), int(1))), 1)))))))))) * _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) - 0))))))), 64, 4);
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
       if(_GLF_DEAD(false))
        barrier();
      }
    }
  }
}
