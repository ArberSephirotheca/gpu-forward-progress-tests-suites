#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(float((mat3x4(-451.317, -11.31, -9.9, 4.7, 3048.3202, 21.10, 7658.2069, -3048.0318, 589.925, -736.608, -726.367, 7262.7014) == mat3x4(-6.2, -2.6, -475.372, -8.9, 7.7, 4363.6066, 86.64, -5.7, -867.164, -844.533, -82.58, 48.65)))), _GLF_FUZZED(-0.5)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, float(mat2(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(1884.9479)), bool(false))), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)))))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))))))), (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && _GLF_IDENTITY(true, (true) || false), (_GLF_IDENTITY((false) && true, ((false) && true) && true)) || false))), bool(bool(! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, (_GLF_IDENTITY((false) && true, ((false) && true) && true)) || false)))))))), false, true)))) && true), false, false)), (bool(bvec3(false, false, false))) && true)), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))), false || (bool(bvec2(false, false))))), _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! (_GLF_IDENTITY(true, ! (! (true))))))))), (! (! (! (_GLF_IDENTITY(true, ! (! (true))))))) || false)))), false, false))))), (bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, (_GLF_IDENTITY((false) && true, ((false) && true) && true)) || false))), bool(bool(! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, (_GLF_IDENTITY((false) && true, ((false) && true) && true)) || false)))))))), false, true)))) && true), false, false)), (bool(bvec3(false, false, false))) && true)), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))), false || (bool(bvec2(false, false))))), _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(true, ! (! (true)))))), (! (! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec3(true, true, true)))))))))) || false)))), false, false)))))) && true))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x))), float(_GLF_FUZZED(-2958.5018)), bool(false))) > injectionSwitch.y), true && _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (((injectionSwitch.x > injectionSwitch.y))), ! (! (! (((injectionSwitch.x > injectionSwitch.y))))))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, _GLF_IDENTITY(true, true && (true))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) / 1.0)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(_GLF_IDENTITY(bool(! (_GLF_DEAD(false))), ! (! (bool(! (_GLF_DEAD(false)))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false)))) || _GLF_IDENTITY(false, (false) && true)), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))))) && true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(1.2))) > injectionSwitch.y)) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((8712.6988 / -186.749))), bool(false))))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), false)))))))), ! (! (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), ! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + log(1.0))) - 0.0))))), _GLF_IDENTITY(bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, bool(bool(false)))), ! (! (_GLF_IDENTITY(false, (false) || false))))) && true), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))), ! (! (bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))))))), bool(bvec3((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(55.93) : _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-2845.1586))))), max(injectionSwitch.y, injectionSwitch.y)))))), _GLF_IDENTITY(bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, bool(bool(false)))), ! (! (_GLF_IDENTITY(false, (false) || false))))) && true), (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), _GLF_IDENTITY(true, bool(bvec4(true, false, true, false))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(7.4), _GLF_FUZZED(-62.70)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, 1.0, 1.0))))), _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-8652.7844))), injectionSwitch.y))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), injectionSwitch.x, injectionSwitch.x))) - 0.0) > injectionSwitch.y), true)), (bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))) && true)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (true ? injectionSwitch[0] : _GLF_FUZZED(-9390.0171))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))[1])), 1.0)), (false ? _GLF_FUZZED(vec2(-84.89, -0.5)) : vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0))))).x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-78.51)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)) > injectionSwitch.y)))), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))[1])), 1.0)), (false ? _GLF_FUZZED(vec2(-84.89, -0.5)) : vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0))))).x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-78.51)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-78.51)), float(injectionSwitch.x), bool(true))), tan(0.0), 1.0, 1.0), (_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-78.51)), float(injectionSwitch.x), bool(true))), tan(0.0), 1.0, 1.0), (mat2(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-78.51)), float(injectionSwitch.x), bool(true))), tan(0.0), 1.0, 1.0)) * mat2(1.0))) - mat2(0.0, 0.0, 0.0, 0.0))), (float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-78.51)), float(injectionSwitch.x), bool(true))), tan(0.0), 1.0, 1.0), (_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-78.51)), float(injectionSwitch.x), bool(true))), tan(0.0), 1.0, 1.0), (mat2(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-78.51)), float(injectionSwitch.x), bool(true))), tan(0.0), 1.0, 1.0)) * mat2(1.0))) - mat2(0.0, 0.0, 0.0, 0.0)))) - length(vec4(0.0, 0.0, 0.0, 0.0)))), injectionSwitch.x)) > injectionSwitch.y)))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 1.0, 0.0, 1.0))), mix(vec2((_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 1.0))))[0], (_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, _GLF_IDENTITY(0.0, (0.0) * abs(1.0)), 1.0, 0.0, 1.0))))[1]), vec2(_GLF_FUZZED(-589.817), _GLF_FUZZED(vec3(-7.9, -923.768, 21.91).b)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 0.0))))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(968.598), _GLF_FUZZED(7055.7866)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) / 1.0, min((injectionSwitch.y) / 1.0, _GLF_IDENTITY((injectionSwitch.y) / 1.0, min((injectionSwitch.y) / 1.0, (injectionSwitch.y) / 1.0))))), _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((true ? injectionSwitch.y : _GLF_FUZZED(-0.5)), max((true ? injectionSwitch.y : _GLF_FUZZED(-0.5)), _GLF_IDENTITY((true ? injectionSwitch.y : _GLF_FUZZED(-0.5)), min((true ? injectionSwitch.y : _GLF_FUZZED(-0.5)), (true ? injectionSwitch.y : _GLF_FUZZED(-0.5)))))))), clamp(_GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_IDENTITY(_GLF_FUZZED(-0.5), (_GLF_IDENTITY(_GLF_FUZZED(-0.5), clamp(_GLF_FUZZED(-0.5), _GLF_FUZZED(-0.5), _GLF_IDENTITY(_GLF_FUZZED(-0.5), (true ? _GLF_FUZZED(-0.5) : _GLF_FUZZED(-7.7)))))) - 0.0)))), (false ? _GLF_FUZZED(1.8) : clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-0.5)))))), clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-0.5)))), clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-0.5))))))), _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(5508.1197, max(5508.1197, 5508.1197))) : _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))), _GLF_IDENTITY(_GLF_IDENTITY(((false ? _GLF_FUZZED(5508.1197) : injectionSwitch.y)), _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x4(((false ? _GLF_FUZZED(5508.1197) : injectionSwitch.y)), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), mat4(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), injectionSwitch, injectionSwitch)).y)) * (mat2x4(((false ? _GLF_FUZZED(5508.1197) : _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(5438.7878)), bool(false))))), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))))), float(mat4x3(float(_GLF_IDENTITY(mat2x4(((false ? _GLF_IDENTITY(_GLF_FUZZED(5508.1197), min(_GLF_IDENTITY(_GLF_FUZZED(5508.1197), _GLF_IDENTITY(float(vec4(_GLF_FUZZED(5508.1197), 1.0, sin(0.0), 0.0)), (float(vec4(_GLF_FUZZED(5508.1197), 1.0, sin(0.0), 0.0))) + 0.0)), _GLF_FUZZED(5508.1197))) : injectionSwitch.y)), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-5.7) : injectionSwitch.x)))), mat4(_GLF_ONE(1.0, injectionSwitch.y)) * (mat2x4(((false ? _GLF_FUZZED(5508.1197) : injectionSwitch.y)), 1.0, 1.0, _GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 1.0, determinant(mat3(0.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 1.0, 0.0))), 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(round(length(normalize(vec4(_GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(-1.8))), 1.0, 1.0, 1.0)))), (false ? _GLF_FUZZED(61.86) : _GLF_IDENTITY(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), _GLF_IDENTITY((false ? _GLF_FUZZED(-6021.3781) : _GLF_IDENTITY(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), (round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))) - 0.0)), min((false ? _GLF_FUZZED(-6021.3781) : _GLF_IDENTITY(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), (round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))) - 0.0)), (false ? _GLF_FUZZED(-6021.3781) : _GLF_IDENTITY(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), (round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))) - 0.0))))))), 0.0)))), float(mat2x3(_GLF_IDENTITY(((false ? _GLF_FUZZED(5508.1197) : injectionSwitch.y)), _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x4(((false ? _GLF_FUZZED(5508.1197) : injectionSwitch.y)), 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(661.916) : _GLF_IDENTITY(1.0, (1.0) - 0.0))), 0.0, 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), mat4(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), injectionSwitch, injectionSwitch)).y)) * (mat2x4(((false ? _GLF_FUZZED(5508.1197) : injectionSwitch.y)), 1.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), tan(0.0), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0), (mat4(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), tan(0.0), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), _GLF_ZERO(0.0, injectionSwitch.x))))), float(mat4x3(float(_GLF_IDENTITY(mat2x4(((false ? _GLF_IDENTITY(_GLF_FUZZED(5508.1197), min(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(5508.1197, float(vec4(5508.1197, 0.0, 1.0, 0.0)))), float(vec4(_GLF_IDENTITY(_GLF_FUZZED(5508.1197), (_GLF_IDENTITY(_GLF_FUZZED(5508.1197), max(_GLF_FUZZED(5508.1197), _GLF_FUZZED(5508.1197)))) - 0.0), 1.0, sin(0.0), 0.0))), _GLF_FUZZED(5508.1197))) : injectionSwitch.y)), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), mat4(_GLF_ONE(1.0, injectionSwitch.y)) * (mat2x4(((false ? _GLF_FUZZED(5508.1197) : injectionSwitch.y)), 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, max(1.0, 1.0)))), 1.0, 0.0, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_ZERO(0.0, injectionSwitch.x)), float(_GLF_FUZZED(4.8)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(round(length(normalize(vec4(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(abs(367.843)) : 1.0, (false ? _GLF_FUZZED(abs(367.843)) : 1.0) - _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0)))))), 1.0, 1.0, 1.0)))), (false ? _GLF_FUZZED(61.86) : _GLF_IDENTITY(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), (false ? _GLF_IDENTITY(_GLF_FUZZED(-6021.3781), float(mat2x4(_GLF_FUZZED(-6021.3781), 1.0, sqrt(0.0), determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, sqrt(0.0), exp(0.0))), 1.0, 1.0, 0.0, 0.0))) : _GLF_IDENTITY(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), _GLF_IDENTITY((round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))) - 0.0, ((round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))) - 0.0) / 1.0)))))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(vec4(7.9, -6030.5811, -4.2, 6811.3461).b)), float(0.0), bool(true))))))), _GLF_ZERO(0.0, injectionSwitch.x), tan(0.0), 0.0, 0.0, 0.0))) - 0.0))) / cos(0.0))), mix(float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY((+ -221.186), ((+ -221.186)) / sqrt(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))))))), (_GLF_IDENTITY((+ -221.186), ((+ -221.186)) / sqrt(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)))), vec2(mat4x3(vec2(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(float(1.0)), (float(float(1.0))) - 0.0)), 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)))), 1.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0))))), max(1.0, 1.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) - 0.0, float(mat3((1.0) - 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, log(1.0), 1.0, 0.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)), max(max(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)), max(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))))), mix(float(_GLF_FUZZED(_GLF_IDENTITY(-9.1, max(_GLF_IDENTITY(-9.1, (_GLF_IDENTITY(-9.1, mix(float(_GLF_FUZZED(4362.3428)), float(-9.1), bool(true)))) - 0.0), -9.1)))), float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))), (true ? _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))) : _GLF_FUZZED(659.030)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))) / _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(round(length(normalize(vec4(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0)))), 0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(mat4x3(0.0, sin(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0))))), _GLF_IDENTITY(0.0, (0.0) + 0.0))))))))), float(clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((true ? injectionSwitch.y : _GLF_FUZZED(-0.5)), max((true ? injectionSwitch.y : _GLF_FUZZED(-0.5)), (true ? injectionSwitch.y : _GLF_FUZZED(-0.5))))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x3(injectionSwitch.y, 1.0, 0.0, abs(0.0), 1.0, 1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), 0.0)), max(float(mat4x3(injectionSwitch.y, 1.0, 0.0, abs(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, max(0.0, 0.0)))), float(mat4x3(injectionSwitch.y, 1.0, 0.0, abs(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch), (false ? _GLF_FUZZED(vec2(666.335, 643.833)) : (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))).y), 0.0))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), false || (bool(bvec4(false, false, true, false))))), bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), false || (bool(bvec4(false, false, true, false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))) || false) ? _GLF_FUZZED(5508.1197) : injectionSwitch.y))) / cos(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), ((_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), false || (bool(bvec4(false, false, true, false)))))))) || false) ? _GLF_FUZZED(5508.1197) : injectionSwitch.y, clamp(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), false || (bool(bvec4(false, false, true, false)))))))) || false) ? _GLF_FUZZED(5508.1197) : injectionSwitch.y, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), false || (bool(bvec4(false, false, true, false)))))))) || false) ? _GLF_FUZZED(5508.1197) : injectionSwitch.y, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), false || (bool(bvec4(false, false, true, false)))))))) || false) ? _GLF_FUZZED(5508.1197) : injectionSwitch.y))))) / cos(0.0)) - sqrt(0.0))))), bool(true))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))) && true))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(false, (false) || false)))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) || false))))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))))), bool(bvec4(! (bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))))), false, false, true))))))))))))) && true), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
    {
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))), false, _GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) && true)), (injectionSwitch.x > injectionSwitch.y)), true))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! ((! (false))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, 0u + (workgroup_size)) * _GLF_IDENTITY(workgroup_id, min(workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, 0u ^ (workgroup_id)), _GLF_IDENTITY(max(workgroup_id, workgroup_id), _GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, uint(uvec4(1u, 1u, 1u, _GLF_IDENTITY(1u, (1u) << _GLF_IDENTITY(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(sinh(-2.7)) : 0.0)), injectionSwitch.x)), ((26606u & 0u) | 0u) + (_GLF_IDENTITY(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(sinh(-2.7)) : 0.0)), injectionSwitch.x)), min(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(sinh(-2.7)) : 0.0)), injectionSwitch.x)), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(sinh(-2.7)) : 0.0)), injectionSwitch.x)))))))))), 0u))) * (_GLF_IDENTITY(max(workgroup_id, workgroup_id), min(max(workgroup_id, workgroup_id), max(workgroup_id, workgroup_id))))))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, _GLF_TRUE(_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), ((true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec3(false, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true)))))) || false)), _GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_IDENTITY(injectionSwitch[0], 1.0 * (injectionSwitch[0]))), float(_GLF_FUZZED(0.4)), bool(false))), injectionSwitch[1])).x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(false, false || (false)) || (true)), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y)), true)), (bool(bvec2(_GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y)), true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && (_GLF_IDENTITY(false, bool(bool(false))))))), bool(bool(bool(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(! _GLF_IDENTITY((! (! _GLF_IDENTITY((false), false || ((false))))), ! (! ((! (! _GLF_IDENTITY((false), false || ((false)))))))), ! (! (_GLF_IDENTITY(! (! (! (false))), true && (_GLF_IDENTITY(! (! _GLF_IDENTITY((! (false)), true && ((! (false))))), false || (! (! (! (false))))))))))))), (false) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, true && (true)), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(true, true && (true)), false), false, false))))), false))), (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(bool(false))))), (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-646.436)), bool(false))))) && (_GLF_IDENTITY(false, bool(bool(false)))))) && true)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u))), ~ (~ (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)))))) + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, _GLF_IDENTITY(1u, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | 0u), (1u) ^ 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | 0u), (1u) ^ 0u), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | 0u), (1u) ^ 0u), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | 0u), (1u) ^ 0u)))))) ^ 0u), _GLF_IDENTITY(1u, (1u) | (1u)))), _GLF_IDENTITY(_GLF_IDENTITY(1u, 1u * (_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uint(1u), (true ? uint(1u) : _GLF_FUZZED(subgroup_size)))))) - 0u), 1u)))), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(1u, 1u * (_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uint(1u), (true ? uint(1u) : _GLF_FUZZED(subgroup_size)))))) - 0u), 1u)))), (0u << _GLF_IDENTITY(uint(0u), uint(0u)))), max(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(1u, 1u * (_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uint(1u), (true ? uint(1u) : _GLF_FUZZED(subgroup_size)))))) - 0u), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) | (1u))) | (1u)))))), 0u + (_GLF_IDENTITY(1u, 1u * (_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uint(1u), (true ? uint(1u) : _GLF_FUZZED(subgroup_size)))))) - 0u), 1u)), min(_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uint(1u), (true ? uint(1u) : _GLF_FUZZED(subgroup_size)))))) - 0u), 1u)), _GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uint(1u), (true ? uint(1u) : _GLF_FUZZED(subgroup_size)))))) - 0u), 1u)), (_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uint(1u), (true ? uint(1u) : _GLF_FUZZED(subgroup_size)))))) - 0u), 1u))) >> (0u << _GLF_IDENTITY(uint(0u), uint(0u)))))))))), (0u << _GLF_IDENTITY(uint(0u), uint(0u)))), uvec2(_GLF_IDENTITY(1u, 1u * (_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uint(1u), (true ? uint(1u) : _GLF_FUZZED(subgroup_size)))))) - _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(0u)), clamp(_GLF_IDENTITY(uint(uint(0u)), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(uint(uint(0u)), (uint(uint(0u))) >> 0u))), uint(uint(0u)), uint(uint(0u)))))), 1u)))), (0u << _GLF_IDENTITY(uint(0u), uint(0u)))))))), 0u))), (_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(subgroup_id, 1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(1u * (_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY((1u) - 0u, 1u * ((1u) - 0u))), 1u))), (1u * (_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY((1u) - 0u, 1u * ((1u) - 0u))), 1u)))) | (1u * (_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY((1u) - 0u, 1u * ((1u) - 0u))), 1u)))))), 0u), (uvec4(subgroup_id, 1u, _GLF_IDENTITY(1u, 1u * (_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (1u) - 0u)))) - 0u, ((1u) - 0u) >> 0u), 1u * ((1u) - 0u))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (1u) - 0u)))) - 0u, ((1u) - 0u) >> 0u), 1u * ((1u) - 0u))), (_GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (1u) - 0u)))) - 0u, ((1u) - 0u) >> 0u), 1u * ((1u) - 0u)))) >> 0u)))), 1u)))), _GLF_IDENTITY(0u, (0u) - 0u))) | uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(uvec4(subgroup_id, 1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, 1u * (_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY((1u) - 0u, 1u * ((1u) - 0u))), 1u)))), 1u * (_GLF_IDENTITY(1u, 1u * (_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY((1u) - 0u, 1u * (_GLF_IDENTITY((1u) - 0u, clamp((1u) - 0u, (1u) - 0u, (1u) - 0u))))), 1u)))))), 0u), (uvec4(subgroup_id, _GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(0u | 0u, (0u | 0u) - 0u))), _GLF_IDENTITY(1u, _GLF_IDENTITY(1u, (1u) | (1u)) * (_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY((1u) - _GLF_IDENTITY(0u, (0u) / 1u), min((1u) - _GLF_IDENTITY(0u, (0u) / 1u), (1u) - _GLF_IDENTITY(0u, (0u) / 1u))), 1u * ((1u) - 0u))), 1u)))), _GLF_IDENTITY(0u, (0u) - 0u))) | _GLF_IDENTITY(uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), clamp(uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), uvec4(0u, 0u, 0u, 0u) | (uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))))) >> uvec4(0u, 0u, 0u, 0u))))) / (0u | _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, min(1u, 1u)), 0u, 1u), clamp(uvec3(1u, 0u, 1u), uvec3(1u, 0u, _GLF_IDENTITY(1u, (1u) << 0u)), uvec3(1u, 0u, 1u)))))) - 0u))) * subgroup_size + _GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))), 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u), ~ (~ (subgroup_local_id))) + 1) % subgroup_size, ((_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1) % subgroup_size) + 0u)), _GLF_IDENTITY((((_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1) % subgroup_size)), clamp(((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1), (false ? _GLF_FUZZED((num_workgroup % workgroup_size)) : (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1))) % subgroup_size)), _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1), ((_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1)) >> 0u) % subgroup_size, ((_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1) % subgroup_size) / 1u))), ((((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), ~ (~ (subgroup_local_id))) + 1) % subgroup_size))) / 1u), (((_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))))))) | (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) / uint(_GLF_ONE(1.0, injectionSwitch.y)))) - (1u ^ 1u))), clamp(((_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1) % subgroup_size), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1) % subgroup_size), 0u ^ ((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))))) + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))))) + 1) / 1u)) % subgroup_size, min((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))))) + 1) % subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(~ (~ (subgroup_local_id)), (~ (~ (subgroup_local_id))) | (~ (~ (subgroup_local_id))))), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))))) + 1) % subgroup_size))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), ~ (~ (subgroup_local_id))) + 1), ((_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1)) | (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1), ((_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1)) | (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1), _GLF_IDENTITY(uint(uvec4((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), 1u * (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))))) + 1), _GLF_IDENTITY((150080u & 0u), uint(uvec3((150080u & 0u), ((0u ^ 1u) ^ 1u), 0u))), 1u, _GLF_IDENTITY(1u, min(1u, 1u)))), ~ (~ (uint(uvec4((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), 1u * (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))))) + 1), _GLF_IDENTITY((150080u & 0u), uint(uvec3((150080u & 0u), ((0u ^ 1u) ^ 1u), 0u))), 1u, _GLF_IDENTITY(1u, min(1u, 1u)))))))))), uint(uint((_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1)))))) % subgroup_size)))))));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec2(_GLF_IDENTITY(false, true && (false)), true))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec2(_GLF_IDENTITY(false, true && (false)), true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec2(_GLF_IDENTITY(false, true && (false)), true)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_IDENTITY(false, true && (false))))), false, true, true)), bool(bvec4(bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), false, true, true)), false, false, true)))), (false) || false)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 buf[virtual_gid] = _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, min(1, 1))), ((_GLF_IDENTITY(1, min(1, 1)))) | ((_GLF_IDENTITY(1, min(1, 1))))) - 0), _GLF_IDENTITY(0, (0) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (0) | (0)), _GLF_IDENTITY(0, ~ (~ (0))))) << _GLF_IDENTITY(int(5), int(5)), ~ (~ (_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (0) | (0)), _GLF_IDENTITY(0, ~ (~ (0))))) << _GLF_IDENTITY(int(5), int(5))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (0) | (0)), _GLF_IDENTITY(0, ~ (~ (0))))), min(_GLF_IDENTITY(_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (0) | (0)), _GLF_IDENTITY(0, ~ (~ (0))))), max(_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (0) | (0)), _GLF_IDENTITY(0, ~ (~ (0))))), _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (0) | (0)), _GLF_IDENTITY(0, ~ (~ (0))))))), _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (0) | (0)), _GLF_IDENTITY(0, ~ (~ (0))))))) << _GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (0) | (0)), _GLF_IDENTITY(0, ~ (~ (0))))) << _GLF_IDENTITY(int(5), int(5))) | (_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (0) | (0)), _GLF_IDENTITY(0, ~ (~ (0))))) << _GLF_IDENTITY(int(5), int(5))))) - 0)), max((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), clamp(int(5), int(5), int(5))), int(5))), _GLF_IDENTITY(_GLF_IDENTITY((0 << _GLF_IDENTITY(int(5), int(5))), (0 << _GLF_IDENTITY(int(2), int(2))) ^ ((0 << _GLF_IDENTITY(int(5), int(5))))), min(_GLF_IDENTITY(_GLF_IDENTITY((0 << _GLF_IDENTITY(int(5), int(5))), (0 << _GLF_IDENTITY(int(2), int(2))) ^ ((0 << _GLF_IDENTITY(int(5), int(5))))), (_GLF_IDENTITY((0 << _GLF_IDENTITY(int(5), int(5))), (0 << _GLF_IDENTITY(int(2), int(2))) ^ ((0 << _GLF_IDENTITY(int(5), int(5)))))) ^ 0), _GLF_IDENTITY((0 << _GLF_IDENTITY(int(5), int(5))), (0 << _GLF_IDENTITY(int(2), int(2))) ^ ((0 << _GLF_IDENTITY(int(5), int(5)))))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) ^ 0))), _GLF_IDENTITY((1), 0 ^ ((1))) | (1))));
 if(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + 1, ~ (_GLF_IDENTITY(~ (subgroup_local_id + 1), 0u ^ (~ (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u)))))) < subgroup_size)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)), mix(float(_GLF_FUZZED(-7.9)), float(0.0), bool(true))), 0.0)))), 0.0, _GLF_ONE(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-8.6) : 1.0)), 1.0, 1.0)), injectionSwitch.y), 0.0))), mix(float(_GLF_FUZZED(2852.4989)), float(_GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(7.2) : injectionSwitch.y)), 1.0, 1.0, 1.0, 1.0, 1.0))), injectionSwitch.y, injectionSwitch.y))), 0.0)))), bool(true)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   int i = 0;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, 1.0, 1.0), (true ? mat2(injectionSwitch, 1.0, 1.0) : _GLF_FUZZED(mat2(1992.1213, 61.13, -7.2, _GLF_IDENTITY(-60.94, float(_GLF_IDENTITY(mat3x4(-60.94, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, sqrt(0.0)), mat3x4(mat4(mat3x4(-60.94, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, sqrt(0.0))))))))))))).y, float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, 1.0, 1.0), (true ? mat2(injectionSwitch, 1.0, 1.0) : _GLF_FUZZED(mat2(1992.1213, 61.13, -7.2, -60.94)))))).y, clamp(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, 1.0, 1.0), (true ? mat2(injectionSwitch, 1.0, 1.0) : _GLF_FUZZED(mat2(1992.1213, 61.13, -7.2, -60.94)))))).y, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, 1.0, 1.0), (true ? mat2(injectionSwitch, 1.0, 1.0) : _GLF_FUZZED(mat2(1992.1213, 61.13, -7.2, -60.94)))))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, 1.0, 1.0), (true ? mat2(injectionSwitch, 1.0, 1.0) : _GLF_FUZZED(mat2(1992.1213, 61.13, -7.2, -60.94)))))).y, min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, 1.0, 1.0), (true ? mat2(injectionSwitch, 1.0, 1.0) : _GLF_FUZZED(mat2(1992.1213, 61.13, -7.2, -60.94)))))).y, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, 1.0, 1.0), (true ? mat2(injectionSwitch, 1.0, 1.0) : _GLF_FUZZED(mat2(1992.1213, 61.13, -7.2, -60.94)))))).y)))), 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)), dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0))), sqrt(1.0), _GLF_IDENTITY(0.0, float(mat3x4(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, abs(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0, determinant(mat4(0.0, 0.0, 1.0, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))), 1.0))), 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))))))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-97.06))) > injectionSwitch.y))), false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-97.06))) > injectionSwitch.y))), false, false))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-97.06))) > injectionSwitch.y))), false, false)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-97.06))) > injectionSwitch.y))), false, false)))), true)))))))))), (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))) > injectionSwitch.y))), false, false)))))) && true)))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (true))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true)))), false || (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true))))))), bool(bool(! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true)))), false || (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), _GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))), mix(vec2(_GLF_FUZZED(9255.2140), (mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))))[1]), vec2((mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))))[0], _GLF_FUZZED(-854.037)), bvec2(true, false)))).y), false, true))))))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(56.63)), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), bool(bvec2(bool(_GLF_IDENTITY(true, false || (true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), true))), bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, false, true))), ! (! (false)))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_IDENTITY(injectionSwitch[0], 1.0 * (injectionSwitch[0]))), float(_GLF_FUZZED(_GLF_IDENTITY(0.8, 1.0 * (_GLF_IDENTITY(0.8, mix(float(0.8), float(_GLF_FUZZED(6635.4382)), bool(false))))))), bool(false))), injectionSwitch[1])).y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (false), false), bvec2(bvec2(bvec2(! (false), false))))), (bool(_GLF_IDENTITY(bvec2(! (false), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! (false), (! (false)) || false), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(false, true && (false)))))))) || false)), true && _GLF_IDENTITY((_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), (! (false)) && true))))) && true)), ((_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), true && (! (false))), (! (false)) && true))))) && true))) && true))), _GLF_IDENTITY(_GLF_IDENTITY(! (! ((_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (false), false), bvec2(bvec2(bvec2(! (false), false))))), (bool(_GLF_IDENTITY(bvec2(! (false), false), bvec2(bvec2(bvec2(! (false), false)))))) || false)), true && (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), (! ((false))) && true))), ! (! (_GLF_IDENTITY(! (false), (! (false)) && true))))) && true)))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (! ((_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (false), false), bvec2(bvec2(bvec2(! (false), false))))), (bool(_GLF_IDENTITY(bvec2(! (false), false), bvec2(bvec2(bvec2(! (false), false)))))) || false)), true && (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), (! (false)) && true))))) && true)))))), ! (! (! (! ((_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (false), false), bvec2(bvec2(bvec2(! (false), false))))), (bool(_GLF_IDENTITY(bvec2(! (false), false), bvec2(bvec2(bvec2(! (false), false)))))) || false)), true && (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)) && true, _GLF_IDENTITY(bool(bvec2((! (false)) && true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec4(bool(bvec2((! (false)) && true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false, true)), true && (bool(bvec4(bool(bvec2((! (false)) && true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false, true))))))))))) && true))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-7191.1305))), injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)))), (bool(bvec3(! (! ((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (false), false), bvec2(bvec2(bvec2(! (false), false))))), (bool(_GLF_IDENTITY(bvec2(! (false), false), bvec2(bvec2(bvec2(! (false), false)))))) || false)), true && _GLF_IDENTITY((_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), (! (false)) && true))))) && true)), false || ((_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), (! (false)) && true))))) && true)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)), (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (false), false), bvec2(bvec2(bvec2(! (false), false))))), (bool(_GLF_IDENTITY(bvec2(! (false), false), bvec2(bvec2(bvec2(! (false), false)))))) || false)), true && (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), (! ((false))) && true))), ! (! (_GLF_IDENTITY(! (false), (! (false)) && true))))) && true))))), true && (! ((_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(! _GLF_IDENTITY((false), ! (! ((false)))), false), bvec2(bvec3(bvec2(! _GLF_IDENTITY((false), ! (! ((false)))), false), true))), bvec2(bvec2(bvec2(! (false), false))))), (bool(_GLF_IDENTITY(bvec2(! _GLF_IDENTITY((false), bool(bool(_GLF_IDENTITY((false), bool(bvec3((false), true, true)))))), false), bvec2(bvec2(bvec2(! (false), false)))))) || false)), true && (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), (! ((false))) && true))), ! (! (_GLF_IDENTITY(! (false), (! (false)) && true))))) && true)))))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (! ((_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (false), false), bvec2(bvec2(bvec2(! (false), false))))), (bool(_GLF_IDENTITY(bvec2(! (false), false), bvec2(bvec2(bvec2(! (false), false)))))) || false)), true && (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), (! (false)) && true))))) && true)))))), ! (! (! (! ((_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (false), false), bvec2(bvec2(bvec2(! (false), false))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (false), false), bvec2(bvec2(bvec2(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))), false))))), ! (! (bool(_GLF_IDENTITY(bvec2(! (false), false), bvec2(bvec2(bvec2(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))), false))))))))) || false)), true && (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)) && true, _GLF_IDENTITY(bool(bvec2((! (_GLF_IDENTITY(false, ! (! (false))))) && true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(bool(bvec2((! (false)) && true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false, true)), ! (! (bool(bvec4(bool(bvec2((! (false)) && true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false, true))))), true && (bool(bvec4(bool(bvec2((! (false)) && true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false, true))))))))))) && true))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-7191.1305))), injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)))), (bool(bvec3(! (! ((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((false), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3((false), false, true)), bvec3(bvec3(bvec3(bvec3((false), false, true)))))))), ! (! (bool(_GLF_IDENTITY(bvec3((false), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3((false), false, true)), bvec3(bvec3(bvec3(bvec3((false), false, true)))))))))))), false), bvec2(bvec2(bvec2(! (false), false))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(! (false), false), bvec2(bvec2(bvec2(! (false), false)))), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(! (false), false), bvec2(bvec2(bvec2(! (false), false)))), bvec2(bvec3(_GLF_IDENTITY(bvec2(! (false), false), bvec2(bvec2(bvec2(! (false), false)))), true))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(! (false), false), bvec2(bvec2(bvec2(! (false), false)))), bvec2(bvec3(_GLF_IDENTITY(bvec2(! (false), false), bvec2(bvec2(bvec2(! (false), false)))), true))), true)))))))) || false)), true && _GLF_IDENTITY((_GLF_IDENTITY(! (false), _GLF_IDENTITY((_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (! (_GLF_IDENTITY(! (false), (! (false)) && true))), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(! (false), (! (false)) && true)))), bool(bvec4(! (! (! (_GLF_IDENTITY(! (false), (! (false)) && true)))), false, false, true))))))), ((_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (! (_GLF_IDENTITY(! (false), (! (false)) && true))), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(! (false), (! (false)) && true)))), bool(bvec4(! (! (! (_GLF_IDENTITY(! (false), (! (false)) && true)))), false, false, true)))))))) && true) && true)), false || ((_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), (! (false)) && true))))) && true)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y))))) || false))) && true))), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-794.007), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((+ -29.12))), bvec2(true, false))), injectionSwitch, injectionSwitch))[1])).x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, 0.0)))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, length(vec2(0.0, 0.0)), 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), (float(mat2x3(injectionSwitch.x, length(vec2(0.0, 0.0)), 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0))) - 0.0)) > injectionSwitch.y))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(2), _GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, clamp(4, 4, 4))) * 1, 0 + ((_GLF_IDENTITY(4, clamp(4, 4, 4))) * 1))))), 64, 4);
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
}
