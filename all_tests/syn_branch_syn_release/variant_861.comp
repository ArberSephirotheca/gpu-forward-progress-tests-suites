#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_15 {
 mat3x2 _f0;
 bvec3 _f1;
 vec3 _f2;
 ivec2 _f3;
 float _f4;
} ;

struct _GLF_struct_16 {
 mat4 _f0;
 _GLF_struct_15 _f1;
 mat3x4 _f2;
} ;

struct _GLF_struct_13 {
 mat3 _f0;
 ivec3 _f1;
 mat4x2 _f2;
 mat3x2 _f3;
 uvec2 _f4;
 uint workgroup_size;
 mat2x4 _f5;
} ;

struct _GLF_struct_12 {
 mat2x3 _f0;
 mat4x2 _f1;
 mat2x4 _f2;
 mat4x2 _f3;
 int _f4;
 ivec3 _f5;
} ;

struct _GLF_struct_14 {
 _GLF_struct_12 _f0;
 _GLF_struct_13 _f1;
} ;

struct _GLF_struct_10 {
 bvec2 _f0;
 uvec2 _f1;
 bvec4 _f2;
} ;

struct _GLF_struct_11 {
 _GLF_struct_10 _f0;
 int _f1;
} ;

struct _GLF_struct_17 {
 _GLF_struct_11 _f0;
 _GLF_struct_14 _f1;
 _GLF_struct_16 _f2;
 uvec3 _f3;
 float _f4;
 mat2x4 _f5;
 mat3 _f6;
} ;

struct _GLF_struct_7 {
 mat4x2 _f0;
 uvec2 _f1;
 ivec4 _f2;
 int _f3;
 ivec4 _f4;
 float _f5;
} ;

struct _GLF_struct_8 {
 mat2x3 _f0;
 mat3x4 _f1;
 mat2x3 _f2;
 _GLF_struct_7 _f3;
 bvec4 _f4;
} ;

struct _GLF_struct_5 {
 mat3 _f0;
} ;

struct _GLF_struct_4 {
 mat3x2 _f0;
 mat3x4 _f1;
} ;

struct _GLF_struct_6 {
 _GLF_struct_4 _f0;
 _GLF_struct_5 _f1;
 bvec3 _f2;
 bvec3 _f3;
 bvec2 _f4;
} ;

struct _GLF_struct_2 {
 bool _f0;
 vec2 _f1;
 uvec3 _f2;
 bvec4 _f3;
 uint _f4;
 ivec4 _f5;
} ;

struct _GLF_struct_1 {
 mat2x3 _f0;
 int _f1;
 vec4 _f2;
 vec3 _f3;
} ;

struct _GLF_struct_0 {
 ivec3 _f0;
 int _f1;
 ivec3 _f2;
 mat3x2 _f3;
 mat3 _f4;
 uvec3 _f5;
 bool _f6;
} ;

struct _GLF_struct_3 {
 bvec4 _f0;
 _GLF_struct_0 _f1;
 _GLF_struct_1 _f2;
 _GLF_struct_2 _f3;
} ;

struct _GLF_struct_9 {
 _GLF_struct_3 _f0;
 vec4 _f1;
 ivec4 _f2;
 float _f3;
 uint subgroup_local_id;
 _GLF_struct_6 _f4;
 _GLF_struct_8 _f5;
 uvec4 _f6;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(506.151))), injectionSwitch.y, injectionSwitch.y))))))
    barrier();
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), _GLF_IDENTITY(true, false || (true)) && _GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), ! (! (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))), bool(bool((bool(bvec2(false, false)))))))))), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false)))), bool(bvec3(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) && true))), false, false))) || (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(bool(bvec2(false, false)), true && (bool(bvec2(false, false))))))), (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(! (! (! (false))), bool(bvec4(! (! (! (false))), true, false, true))))))) || (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(bool(bvec2(false, false)), true && (bool(bvec2(false, false))))))), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || _GLF_IDENTITY(false, ! (! (false)))) || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(bool(bvec2(false, false)), true && (_GLF_IDENTITY(bool(bvec2(false, false)), ! (_GLF_IDENTITY(! (bool(bvec2(false, false))), ! (! (! (bool(bvec2(false, false))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(bool(bvec2(false, false)), true && (bool(bvec2(false, false)))))) || false))), (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x : _GLF_FUZZED(-6.6))) > injectionSwitch.y))))))) && true)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), bool(_GLF_IDENTITY(bool(bool(bvec2(false, false))), true && (bool(bool(bvec2(false, false)))))))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! _GLF_IDENTITY((bool(bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(bool(bvec4((bool(bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))), true, false, false)), true && (bool(bvec4((bool(bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))), true, false, false))))))), (bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(3053.3366), _GLF_FUZZED(7.1)), bvec2(false, false)), mat2(1.0) * (mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(3053.3366), _GLF_FUZZED(7.1)), bvec2(false, false))))).x > injectionSwitch.y))))) || false))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(vec2(0.0, 0.0))).y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(vec2(0.0, 0.0))).y), false, false)), false || (bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(vec2(0.0, 0.0))).y), false, false))))))))
  return;
 _GLF_struct_9 _GLF_struct_replacement_9 = _GLF_struct_9(_GLF_struct_3(bvec4(true), _GLF_struct_0(ivec3(1), 1, ivec3(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 | (1))) * 1)), mat3x2(1.0), mat3(_GLF_IDENTITY(1.0, max(1.0, 1.0))), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (_GLF_FUZZED(subgroup_id)) ^ 0u) : 1u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_id) : 1u)), (_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_id) : 1u))) | (_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_id) : 1u)))), _GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_id) : 1u), ~ (~ ((false ? _GLF_FUZZED(subgroup_id) : 1u)))), ((false ? _GLF_FUZZED(subgroup_id) : 1u)) | ((false ? _GLF_FUZZED(subgroup_id) : 1u)))), (_GLF_IDENTITY(true, false || (true)) ? _GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), (false ? _GLF_FUZZED(subgroup_id) : 1u)) : _GLF_FUZZED(167289u))), _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_id) : 1u))))), true), _GLF_struct_1(mat2x3(1.0), 1, vec4(1.0), vec3(1.0)), _GLF_struct_2(true, vec2(1.0), uvec3(1u), bvec4(true), 1u, ivec4(1))), vec4(1.0), ivec4(1), 1.0, gl_SubgroupInvocationID, _GLF_struct_6(_GLF_struct_4(mat3x2(1.0), mat3x4(1.0)), _GLF_struct_5(mat3(1.0)), _GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(bvec3(bvec3(true))), bvec3(bvec3(bvec3(bvec3(bvec3(true))))))), bvec3(_GLF_IDENTITY(true, ! (! (true)))), bvec2(_GLF_IDENTITY(true, (true) && true))), _GLF_struct_8(mat2x3(1.0), mat3x4(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) * 1.0), min(_GLF_IDENTITY(1.0, (1.0) * 1.0), _GLF_IDENTITY(1.0, (1.0) * 1.0))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) * 1.0), min(_GLF_IDENTITY(1.0, (1.0) * 1.0), _GLF_IDENTITY(1.0, (1.0) * 1.0))), float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) * 1.0), min(_GLF_IDENTITY(1.0, (1.0) * 1.0), _GLF_IDENTITY(1.0, (1.0) * 1.0))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) * 1.0), min(_GLF_IDENTITY(1.0, (1.0) * 1.0), _GLF_IDENTITY(1.0, (1.0) * 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) * 1.0), min(_GLF_IDENTITY(1.0, (1.0) * 1.0), _GLF_IDENTITY(1.0, (1.0) * 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) * 1.0), min(_GLF_IDENTITY(1.0, (1.0) * 1.0), _GLF_IDENTITY(1.0, (1.0) * 1.0))))), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, log(1.0), 1.0)))) * 1.0), 1.0, 1.0))), mat2x3(1.0), _GLF_struct_7(mat4x2(1.0), uvec2(1u), ivec4(1), 1, ivec4(_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, min(1, 1)) : _GLF_FUZZED(-86872)))), 1.0), bvec4(true)), uvec4(1u));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (_GLF_IDENTITY(! (bool(bvec2(false, true))), false || (_GLF_IDENTITY(! (bool(bvec2(false, true))), false || (! (bool(bvec2(false, true))))))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, sqrt(0.0) + (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, sqrt(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) + (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups))).x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 _GLF_struct_17 _GLF_struct_replacement_17 = _GLF_struct_17(_GLF_struct_11(_GLF_struct_10(bvec2(true), uvec2(_GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY(min(_GLF_IDENTITY(1u, max(1u, 1u)), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, min(1u, 1u))) | (1u))), (true ? min(_GLF_IDENTITY(1u, max(1u, 1u)), _GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(1u, 1u), max(_GLF_IDENTITY(uvec2(1u, 1u), ~ (~ (uvec2(1u, 1u)))), uvec2(1u, 1u)))), min(uint(_GLF_IDENTITY(uvec2(1u, 1u), max(_GLF_IDENTITY(uvec2(1u, 1u), ~ (~ (uvec2(1u, 1u)))), uvec2(1u, 1u)))), uint(_GLF_IDENTITY(uvec2(1u, 1u), max(_GLF_IDENTITY(uvec2(1u, 1u), ~ (~ (uvec2(1u, 1u)))), uvec2(1u, 1u))))))), (_GLF_IDENTITY(1u, min(1u, 1u))) | (1u))) : _GLF_FUZZED(123429u)))), ~ (~ (_GLF_IDENTITY(1u, min(_GLF_IDENTITY(_GLF_IDENTITY(1u, uint(uvec2(1u, 1u))), max(1u, 1u)), _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) / ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, 1u)), (_GLF_IDENTITY(1u, min(1u, 1u))) | (_GLF_IDENTITY(1u, min(1u, 1u))))), 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(1u, min(1u, 1u))), max((_GLF_IDENTITY(1u, min(1u, 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) | (1u)), 1u, _GLF_IDENTITY(1u, (1u) | (1u)))), min(1u, 1u))))))) | (1u)))))))), bvec4(_GLF_IDENTITY(true, ! (! (true))))), 1), _GLF_struct_14(_GLF_struct_12(mat2x3(1.0), mat4x2(_GLF_IDENTITY(1.0, 0.0 + (1.0))), mat2x4(1.0), mat4x2(1.0), _GLF_IDENTITY(1, min(1, 1)), ivec3(1)), _GLF_struct_13(_GLF_IDENTITY(mat3(1.0), (_GLF_IDENTITY(mat3(1.0), transpose(transpose(mat3(1.0))))) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(ivec3(1), _GLF_IDENTITY(ivec3(ivec4(_GLF_IDENTITY(ivec3(1), min(ivec3(1), ivec3(1))), 0)), (_GLF_IDENTITY(ivec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) ^ ivec3(1, 1, 1), clamp(ivec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) ^ ivec3(1, 1, 1), ivec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) ^ ivec3(1, 1, 1), _GLF_IDENTITY(ivec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) ^ ivec3(1, 1, 1), (ivec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) ^ ivec3(1, 1, 1)) | ivec3(0, 0, 0))))) * (ivec3(ivec4(_GLF_IDENTITY(ivec3(1), min(ivec3(1), ivec3(1))), 0))))), mat4x2(1.0), mat3x2(1.0), _GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u), uvec2(1u, 1u) * _GLF_IDENTITY((_GLF_IDENTITY(uvec2(1u), clamp(uvec2(1u), uvec2(1u), uvec2(1u)))), uvec2(0u, 0u) ^ ((_GLF_IDENTITY(uvec2(1u), clamp(uvec2(1u), uvec2(1u), uvec2(1u))))))), max(_GLF_IDENTITY(uvec2(1u), uvec2(1u, 1u) * (_GLF_IDENTITY(uvec2(1u), clamp(uvec2(1u), uvec2(1u), uvec2(1u))))), _GLF_IDENTITY(uvec2(1u), uvec2(1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) / 1u)) >> 0u)) * (_GLF_IDENTITY(uvec2(1u), clamp(uvec2(1u), _GLF_IDENTITY(uvec2(1u), max(uvec2(1u), uvec2(1u))), uvec2(1u))))))), _GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))).y)) ? _GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? gl_WorkGroupSize.x : _GLF_FUZZED(uaddCarry(num_workgroup, subgroup_size, num_workgroup)))) : _GLF_IDENTITY(_GLF_FUZZED(packHalf2x16(injectionSwitch)), (_GLF_FUZZED(packHalf2x16(injectionSwitch))) - 0u))), mat2x4(1.0))), _GLF_struct_16(mat4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0) * _GLF_IDENTITY((1.0), max((1.0), _GLF_IDENTITY((1.0), _GLF_IDENTITY((_GLF_IDENTITY((1.0), ((1.0)) - 0.0)) / 1.0, ((_GLF_IDENTITY((1.0), ((1.0)) - 0.0)) / 1.0) * 1.0)))))), _GLF_struct_15(mat3x2(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-1.1)), float(1.0), bool(true))))), 1.0, 1.0))), bvec3(true), _GLF_IDENTITY(vec3(1.0), (vec3(1.0)) * mat3(1.0)), ivec2(1), _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(6.1) : 1.0)), 1.0, round(length(normalize(exp(vec2(0.0, 0.0))))), 0.0), mat4(1.0) * (vec4(1.0, 1.0, round(length(normalize(exp(vec2(0.0, 0.0))))), 0.0))))), mix(float(_GLF_FUZZED((- -3.0))), float(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(6.1) : 1.0)), 1.0, round(length(normalize(exp(vec2(0.0, 0.0))))), 0.0), mat4(1.0) * (vec4(1.0, 1.0, round(length(normalize(exp(vec2(0.0, 0.0))))), 0.0)))))), bool(true))), _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(1.0, 1.0 * (1.0)), abs(1.0), 0.0)), clamp(float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 1.0 * (1.0)), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 1.0 * (1.0)), mix(float(_GLF_IDENTITY(1.0, 1.0 * (1.0))), float(_GLF_FUZZED(4398.6377)), bool(false))), abs(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, _GLF_ONE(1.0, injectionSwitch.y))), dot(vec2(0.0, 1.0), vec2(0.0, _GLF_ONE(1.0, injectionSwitch.y)))), 1.0, length(0.0), 0.0), (false ? _GLF_FUZZED(mat3x2(0.3, -5.8, 7101.8876, 7926.9576, -6920.9672, -1.6)) : _GLF_IDENTITY(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 1.0 * (1.0)), mix(float(_GLF_IDENTITY(1.0, 1.0 * (1.0))), float(_GLF_FUZZED(4398.6377)), bool(false))), abs(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, _GLF_ONE(1.0, injectionSwitch.y))), dot(vec2(0.0, 1.0), vec2(0.0, _GLF_ONE(1.0, injectionSwitch.y)))), 1.0, length(0.0), 0.0), transpose(transpose(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 1.0 * (1.0)), mix(float(_GLF_IDENTITY(1.0, 1.0 * (1.0))), float(_GLF_FUZZED(4398.6377)), bool(false))), abs(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, _GLF_ONE(1.0, injectionSwitch.y))), dot(vec2(0.0, 1.0), vec2(0.0, _GLF_ONE(1.0, injectionSwitch.y)))), 1.0, length(0.0), 0.0))))))), mix(float(float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 1.0 * (1.0)), mix(float(_GLF_IDENTITY(1.0, 1.0 * (1.0))), float(_GLF_FUZZED(4398.6377)), bool(false))), abs(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, _GLF_ONE(1.0, injectionSwitch.y))), dot(vec2(0.0, 1.0), vec2(0.0, _GLF_ONE(1.0, injectionSwitch.y)))), 1.0, length(0.0), 0.0), (false ? _GLF_FUZZED(mat3x2(0.3, -5.8, 7101.8876, 7926.9576, -6920.9672, -1.6)) : _GLF_IDENTITY(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 1.0 * (1.0)), mix(float(_GLF_IDENTITY(1.0, 1.0 * (1.0))), float(_GLF_FUZZED(4398.6377)), bool(false))), abs(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, _GLF_ONE(1.0, injectionSwitch.y))), dot(vec2(0.0, 1.0), vec2(0.0, _GLF_ONE(1.0, injectionSwitch.y)))), 1.0, length(0.0), 0.0), transpose(transpose(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 1.0 * (1.0)), mix(float(_GLF_IDENTITY(1.0, 1.0 * (1.0))), float(_GLF_FUZZED(4398.6377)), bool(false))), abs(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, _GLF_ONE(1.0, injectionSwitch.y))), dot(vec2(0.0, 1.0), vec2(0.0, _GLF_ONE(1.0, injectionSwitch.y)))), 1.0, length(0.0), 0.0)))))))), float(_GLF_FUZZED(300.264)), bool(false)))), _GLF_IDENTITY(abs(1.0), max(abs(1.0), abs(1.0))), 0.0)), float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 1.0 * (1.0)), (_GLF_IDENTITY(1.0, 1.0 * (1.0))) * 1.0), abs(1.0), 0.0)), _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(1.0, 1.0 * (1.0)), abs(1.0), 0.0)), _GLF_IDENTITY(float(vec4(float(vec3(_GLF_IDENTITY(1.0, 1.0 * (1.0)), abs(1.0), 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), max(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), (_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0)))) - 0.0))), 0.0, round(length(normalize(vec2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-8.5) : 1.0)), 1.0)))))), max(float(vec4(float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 1.0 * (1.0)), max(_GLF_IDENTITY(1.0, 1.0 * (1.0)), _GLF_IDENTITY(1.0, 1.0 * (1.0)))), abs(1.0), 0.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(1.0, 0.0), _GLF_IDENTITY((vec2(1.0, 0.0)) * mat2(1.0), min((vec2(1.0, 0.0)) * mat2(1.0), (vec2(1.0, 0.0)) * mat2(1.0))))), dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(1.0, 0.0), _GLF_IDENTITY(vec2(vec3(_GLF_IDENTITY(vec2(1.0, 0.0), (false ? _GLF_FUZZED(vec2(-867.535, 62.59)) : vec2(1.0, 0.0))), 0.0)), min(vec2(vec3(_GLF_IDENTITY(vec2(1.0, 0.0), (false ? _GLF_FUZZED(vec2(-867.535, 62.59)) : vec2(1.0, 0.0))), 0.0)), _GLF_IDENTITY(vec2(vec3(_GLF_IDENTITY(vec2(1.0, 0.0), (false ? _GLF_FUZZED(vec2(-867.535, 62.59)) : vec2(1.0, 0.0))), 0.0)), (vec2(vec3(_GLF_IDENTITY(vec2(1.0, 0.0), (false ? _GLF_FUZZED(vec2(-867.535, 62.59)) : vec2(1.0, 0.0))), 0.0))) + vec2(0.0, 0.0))))))), 0.0, round(length(normalize(vec2(1.0, 1.0)))))), _GLF_IDENTITY(float(vec4(float(vec3(_GLF_IDENTITY(1.0, 1.0 * (1.0)), _GLF_IDENTITY(abs(1.0), (false ? _GLF_FUZZED(28.86) : abs(1.0))), 0.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 0.0, round(length(_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), clamp(_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), mat2(1.0) * (normalize(vec2(1.0, 1.0)))), normalize(vec2(1.0, 1.0)), normalize(vec2(1.0, 1.0)))))))), (float(vec4(float(vec3(_GLF_IDENTITY(1.0, 1.0 * (1.0)), _GLF_IDENTITY(abs(1.0), (false ? _GLF_FUZZED(_GLF_IDENTITY(28.86, (false ? _GLF_FUZZED(-750.143) : 28.86))) : abs(1.0))), 0.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), max(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))))), 0.0, round(length(normalize(vec2(1.0, 1.0))))))) + log(1.0)))))))), 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0 * (1.0), min(1.0 * (1.0), 1.0 * (1.0)))), abs(1.0), 0.0)), clamp(float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, 1.0 * (1.0)), abs(1.0), 0.0), clamp(vec3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, float(vec4(1.0, 1.0, 0.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, sqrt(0.0), 0.0, 0.0, sqrt(0.0)))))) * (1.0)), abs(1.0), 0.0), vec3(_GLF_IDENTITY(1.0, 1.0 * (1.0)), abs(1.0), 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, 1.0 * (1.0)), abs(1.0), 0.0), mix(_GLF_IDENTITY(vec3(_GLF_FUZZED(-47.85), (vec3(_GLF_IDENTITY(1.0, 1.0 * (1.0)), abs(1.0), 0.0))[1], (vec3(_GLF_IDENTITY(1.0, 1.0 * (1.0)), abs(1.0), 0.0))[2]), mix(vec3(_GLF_IDENTITY((vec3(_GLF_FUZZED(-47.85), (vec3(_GLF_IDENTITY(1.0, 1.0 * (1.0)), abs(1.0), 0.0))[1], (vec3(_GLF_IDENTITY(1.0, 1.0 * (1.0)), abs(1.0), 0.0))[2]))[0], (true ? _GLF_IDENTITY((vec3(_GLF_FUZZED(-47.85), (vec3(_GLF_IDENTITY(1.0, 1.0 * (1.0)), abs(1.0), 0.0))[1], (vec3(_GLF_IDENTITY(1.0, 1.0 * (1.0)), abs(1.0), 0.0))[2]))[0], ((vec3(_GLF_FUZZED(-47.85), (vec3(_GLF_IDENTITY(1.0, 1.0 * (1.0)), abs(1.0), 0.0))[1], (vec3(_GLF_IDENTITY(1.0, 1.0 * (1.0)), abs(1.0), 0.0))[2]))[0]) * 1.0) : _GLF_FUZZED(51.36))), (vec3(_GLF_FUZZED(-47.85), (vec3(_GLF_IDENTITY(1.0, 1.0 * (1.0)), abs(1.0), 0.0))[1], (vec3(_GLF_IDENTITY(1.0, 1.0 * (1.0)), abs(1.0), 0.0))[2]))[1], _GLF_FUZZED(-3452.6937)), vec3(_GLF_FUZZED(-7.5), _GLF_FUZZED(-7.3), (vec3(_GLF_FUZZED(-47.85), (vec3(_GLF_IDENTITY(1.0, 1.0 * (1.0)), abs(1.0), 0.0))[1], (vec3(_GLF_IDENTITY(1.0, 1.0 * (1.0)), abs(1.0), 0.0))[2]))[2]), bvec3(false, false, true))), vec3((vec3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_IDENTITY(_GLF_FUZZED(-281.229), float(mat2x4(_GLF_FUZZED(-281.229), 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 0.0, 1.0)))), bool(false))) * (1.0)), _GLF_IDENTITY(abs(1.0), mix(float(_GLF_FUZZED(4.2)), float(_GLF_IDENTITY(abs(1.0), clamp(_GLF_IDENTITY(abs(1.0), max(abs(1.0), abs(1.0))), abs(1.0), abs(1.0)))), bool(true))), 0.0))[_GLF_IDENTITY(0, clamp(0, 0, 0))], _GLF_FUZZED(-7682.7742), _GLF_FUZZED(7.0)), bvec3(true, false, _GLF_IDENTITY(false, (false) && true))))))), float(vec3(_GLF_IDENTITY(1.0, 1.0 * (1.0)), abs(1.0), 0.0)), _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(1.0, 1.0 * (1.0)), abs(1.0), _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4x2(0.0, 0.0, abs(1.0), _GLF_IDENTITY(determinant(mat4(1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, exp(0.0), tan(0.0), 0.0)), dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, exp(0.0), tan(0.0), 0.0))) + (1.0)), 0.0, 1.0, 0.0, 1.0, tan(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), float(mat2x4(determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, tan(_GLF_IDENTITY(0.0, (0.0) + abs(0.0))), 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, float(mat4(0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))))), 1.0)), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0))), tan(0.0), 0.0, 0.0, 0.0), (mat4x2(0.0, 0.0, abs(1.0), determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, tan(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), tan(0.0), 0.0, 0.0, 0.0)) * mat4(1.0)))))), max(_GLF_IDENTITY(float(vec3(_GLF_IDENTITY(1.0, 1.0 * (1.0)), abs(1.0), _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4x2(0.0, 0.0, abs(1.0), _GLF_IDENTITY(determinant(mat4(1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, exp(0.0), tan(0.0), 0.0)), dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, exp(0.0), tan(0.0), 0.0))) + (1.0)), 0.0, 1.0, 0.0, 1.0, tan(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), float(mat2x4(determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, tan(_GLF_IDENTITY(0.0, (0.0) + abs(0.0))), 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, float(mat4(0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))))), 1.0)), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0))), tan(0.0), 0.0, 0.0, 0.0), (mat4x2(0.0, 0.0, abs(1.0), determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, tan(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), tan(0.0), 0.0, 0.0, 0.0)) * mat4(1.0)))))), float(vec3(float(vec3(_GLF_IDENTITY(1.0, 1.0 * (1.0)), abs(1.0), _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4x2(0.0, 0.0, abs(1.0), _GLF_IDENTITY(determinant(mat4(1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, exp(0.0), tan(0.0), 0.0)), dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, exp(0.0), tan(0.0), 0.0))) + (1.0)), 0.0, 1.0, 0.0, 1.0, tan(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), float(mat2x4(determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, tan(_GLF_IDENTITY(0.0, (0.0) + abs(0.0))), 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, float(mat4(0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))))), 1.0)), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0))), tan(0.0), 0.0, 0.0, 0.0), (mat4x2(0.0, 0.0, abs(1.0), determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, tan(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), tan(0.0), 0.0, 0.0, 0.0)) * mat4(1.0)))))), abs(0.0), 1.0))), float(vec3(_GLF_IDENTITY(1.0, 1.0 * (1.0)), abs(1.0), _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4x2(0.0, 0.0, abs(1.0), _GLF_IDENTITY(determinant(mat4(1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, exp(0.0), tan(0.0), 0.0)), dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, exp(0.0), tan(0.0), 0.0))) + (1.0)), 0.0, 1.0, 0.0, 1.0, tan(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), float(mat2x4(determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, tan(_GLF_IDENTITY(0.0, (0.0) + abs(0.0))), 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, float(mat4(0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))))), 1.0)), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0))), tan(0.0), 0.0, 0.0, 0.0), (mat4x2(0.0, 0.0, abs(1.0), determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, tan(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), tan(0.0), 0.0, 0.0, 0.0)) * mat4(1.0))))))))))), 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))), _GLF_IDENTITY((_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0 * (1.0)), abs(_GLF_IDENTITY(1.0, float(mat4(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(5.7)), float(1.0), bool(true))))), sqrt(1.0), 1.0, 0.0, sqrt(0.0), 0.0, 0.0, determinant(mat4(0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(1.8)))) / 1.0), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, length(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, round(_GLF_IDENTITY(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))), (length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))) - 0.0)) * (0.0))) / 1.0), round(length(normalize(vec4(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-74.35)), bool(false))), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, float(mat2x4(1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, sqrt(1.0), 0.0)))), float(_GLF_FUZZED(-443.413)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) - 0.0), 1.0)), min(1.0, 1.0))) - 0.0), 1.0, 1.0)))), 0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(round(length(normalize(vec2(1.0, 1.0)))), 0.0 + (round(length(normalize(_GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) * mat2(1.0))))))), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 0.0)), clamp(float(vec3(_GLF_IDENTITY(1.0, 1.0 * (1.0)), abs(1.0), 0.0)), float(vec3(_GLF_IDENTITY(1.0, 1.0 * _GLF_IDENTITY((1.0), min((1.0), (1.0)))), abs(1.0), 0.0)), float(vec3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(3.9))) * (1.0)), abs(1.0), 0.0))))), 1.0, _GLF_IDENTITY(1.0, (1.0) / _GLF_IDENTITY(1.0, (1.0) - tan(0.0)))))) - 0.0, _GLF_IDENTITY(1.0, float(mat3(1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, exp(0.0), 1.0))) * ((_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0 * (1.0)), abs(_GLF_IDENTITY(1.0, float(mat4(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(5.7)), float(1.0), bool(true))))), sqrt(1.0), 1.0, 0.0, sqrt(0.0), 0.0, 0.0, determinant(mat4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, length(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, round(length(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), clamp(normalize(vec4(1.0, 1.0, 1.0, 1.0)), _GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), max(normalize(vec4(1.0, 1.0, 1.0, 1.0)), normalize(vec4(1.0, 1.0, 1.0, 1.0)))), normalize(vec4(1.0, 1.0, 1.0, 1.0)))))) * (0.0))) / 1.0), round(length(normalize(vec4(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(3.9)), float(1.0), bool(true)))), float(_GLF_FUZZED(-74.35)), bool(false))), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, float(mat2x4(1.0, 0.0, _GLF_ONE(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-2.3) : 1.0))) / 1.0), injectionSwitch.y), 0.0, 0.0, 1.0, sqrt(1.0), 0.0)))), float(_GLF_FUZZED(-443.413)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) - 0.0), _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), 1.0, 1.0)))), min(1.0, 1.0))) - 0.0), 1.0, 1.0)))), 0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(round(length(normalize(vec2(1.0, 1.0)))), 0.0 + (round(length(normalize(_GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) * mat2(1.0))))))), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((- 7.6))), float(0.0), _GLF_IDENTITY(bool(true), true && (bool(true))))), 0.0, 0.0, 0.0)))), 0.0)), clamp(_GLF_IDENTITY(float(vec3(_GLF_IDENTITY(1.0, 1.0 * (1.0)), abs(1.0), 0.0)), clamp(_GLF_IDENTITY(float(vec3(_GLF_IDENTITY(1.0, 1.0 * (1.0)), abs(1.0), 0.0)), (float(vec3(_GLF_IDENTITY(1.0, 1.0 * (1.0)), abs(1.0), 0.0))) - 0.0), float(vec3(_GLF_IDENTITY(1.0, 1.0 * (1.0)), abs(1.0), 0.0)), float(vec3(_GLF_IDENTITY(1.0, 1.0 * (1.0)), abs(1.0), 0.0)))), float(vec3(_GLF_IDENTITY(1.0, 1.0 * _GLF_IDENTITY((1.0), min((1.0), (1.0)))), abs(1.0), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), float(vec3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(3.9))) * (1.0)), abs(1.0), 0.0))))), 1.0, _GLF_IDENTITY(1.0, (1.0) / _GLF_IDENTITY(1.0, (1.0) - tan(0.0)))))) - 0.0))) : _GLF_FUZZED(554.051)))), mat3x4(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) * 1.0)) - _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), _GLF_IDENTITY(float(_GLF_FUZZED(9211.5427)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? float(_GLF_FUZZED(_GLF_IDENTITY(9211.5427, (false ? _GLF_FUZZED(3.6) : 9211.5427)))) : _GLF_FUZZED(refract(-52.06, 7.6, -6.4)))), bool(false))), _GLF_IDENTITY(0.0, min(0.0, 0.0))))))), _GLF_IDENTITY(uvec3(1u), min(uvec3(_GLF_IDENTITY(1u, (1u) | 0u)), uvec3(1u))), 1.0, mat2x4(1.0), mat3(1.0));
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = _GLF_struct_replacement_17._f1._f1.workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) >> 0u, clamp((workgroup_base) >> 0u, _GLF_IDENTITY((workgroup_base) >> 0u, ((workgroup_base) >> 0u) / 1u), _GLF_IDENTITY((workgroup_base) >> 0u, 0u + ((workgroup_base) >> 0u))))) + subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)))), (false ? _GLF_FUZZED(subgroup_size) : clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u))))))) + _GLF_struct_replacement_9.subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u), workgroup_base)), clamp(workgroup_base, workgroup_base, workgroup_base)) + subgroup_id * subgroup_size) << 0u) + _GLF_IDENTITY(((_GLF_struct_replacement_9.subgroup_local_id + _GLF_IDENTITY(1, int(int(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ 0)) << 0), clamp(1, 1, 1)))))) % subgroup_size), (((_GLF_struct_replacement_9.subgroup_local_id + _GLF_IDENTITY(1, int(int(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ 0)) << 0), clamp(1, 1, 1)))))) % subgroup_size)) - 0u);
 _GLF_IDENTITY(buf[virtual_gid] = 1, (buf[virtual_gid] = 1) << 0u);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false)))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_9.subgroup_local_id + 1, (_GLF_struct_replacement_9.subgroup_local_id + 1) + 0u), (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true)), true, false, false))), true && (false)), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))).y, (injectionSwitch.y) / _GLF_IDENTITY(sqrt(1.0), float(_GLF_IDENTITY(vec3(sqrt(1.0), 1.0, tan(0.0)), vec3(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(vec3(sqrt(1.0), 1.0, tan(0.0)), mat3(1.0) * (vec3(sqrt(1.0), 1.0, tan(0.0)))), vec3(mat4x3(vec3(sqrt(1.0), 1.0, tan(0.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0))), 1.0, 0.0, 1.0, 1.0, 1.0)))))))) ? _GLF_FUZZED(169808u) : _GLF_struct_replacement_9.subgroup_local_id + _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(1, 1, 1, 0), (_GLF_IDENTITY(ivec4(1, 1, 1, 0), _GLF_IDENTITY((_GLF_IDENTITY(ivec4(1, 1, 1, 0), (ivec4(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) ^ (0 << _GLF_IDENTITY(int(3), int(3)))), 1, 0)) | ivec4(0, 0, 0, 0))), ((_GLF_IDENTITY(ivec4(1, 1, 1, 0), (ivec4(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) ^ (0 << _GLF_IDENTITY(int(3), int(3)))), 1, 0)) | ivec4(0, 0, 0, 0)))) | ((_GLF_IDENTITY(ivec4(1, 1, 1, 0), (ivec4(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) ^ (0 << _GLF_IDENTITY(int(3), int(3)))), 1, 0)) | ivec4(0, 0, 0, 0))))) / _GLF_IDENTITY(ivec4(1, 1, 1, 1), (ivec4(1, 1, 1, 1)) | ivec4(0, 0, 0, 0)))) ^ (ivec4(0, 0, 0, 0) >> _GLF_IDENTITY(ivec4(7), _GLF_IDENTITY(_GLF_IDENTITY(ivec4(7), (ivec4(7)) | (ivec4(7))), ivec4(0, 0, 0, 0) ^ (ivec4(7)))))))))) < subgroup_size)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, false || (_GLF_IDENTITY((false) && true, ((false) && true) || false))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   int i = 0;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec3(0u, 0u, ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), clamp(_GLF_IDENTITY(uint(3u), max(uint(3u), _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) * 1u), (_GLF_IDENTITY(uint(3u), (uint(_GLF_IDENTITY(3u, clamp(_GLF_IDENTITY(3u, ~ (~ (3u))), _GLF_IDENTITY(3u, uint(uvec4(3u, 1u, 0u, 0u))), 3u)))) * 1u)) + 0u))), uint(3u), uint(3u))), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec3(0u, 0u, ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), clamp(_GLF_IDENTITY(uint(3u), max(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) * 1u))), uint(3u), uint(3u))), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)))), clamp(uvec3(0u, 0u, ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), clamp(_GLF_IDENTITY(uint(3u), max(uint(3u), _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) * 1u), (0u << _GLF_IDENTITY(uint(8u), uint(8u))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) * 1u), (_GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) * 1u), clamp(_GLF_IDENTITY(uint(3u), (uint(3u)) * 1u), _GLF_IDENTITY(uint(3u), (uint(3u)) * 1u), _GLF_IDENTITY(uint(3u), (uint(3u)) * 1u)))) ^ 0u))))), uint(3u), uint(3u))), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)))), _GLF_IDENTITY(uvec3(0u, 0u, ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), clamp(_GLF_IDENTITY(uint(3u), max(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) * 1u))), uint(3u), uint(3u))), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)))), _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (_GLF_IDENTITY(~ (uvec3(0u, 0u, 0u)), max(~ (uvec3(0u, 0u, 0u)), ~ (uvec3(0u, 0u, 0u)))))) ^ (_GLF_IDENTITY(uvec3(0u, 0u, ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), clamp(_GLF_IDENTITY(uint(3u), max(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) * 1u))), uint(3u), uint(3u))), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)))), (uvec3(0u, 0u, ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), clamp(_GLF_IDENTITY(uint(3u), max(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) * 1u))), uint(3u), uint(3u))), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))))) | (uvec3(0u, 0u, ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), clamp(_GLF_IDENTITY(uint(3u), max(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) * 1u))), uint(3u), uint(3u))), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)))))))), uvec3(0u, 0u, ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), clamp(_GLF_IDENTITY(uint(3u), max(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) * 1u))), uint(3u), uint(3u))), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))))))), (~ (_GLF_IDENTITY(uvec3(0u, 0u, _GLF_IDENTITY(((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), clamp(_GLF_IDENTITY(uint(_GLF_IDENTITY(3u, (3u) | 0u)), max(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) * 1u))), uint(3u), uint(3u))), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))), (_GLF_IDENTITY(((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), clamp(_GLF_IDENTITY(uint(_GLF_IDENTITY(3u, (3u) | 0u)), max(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) * 1u))), uint(3u), uint(3u))), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))), ~ (~ (((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), clamp(_GLF_IDENTITY(uint(_GLF_IDENTITY(3u, (3u) | 0u)), max(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) * 1u))), uint(3u), uint(3u))), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))))))) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))), clamp(uvec3(0u, 0u, ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), clamp(_GLF_IDENTITY(uint(3u), max(uint(3u), _GLF_IDENTITY(uint(3u), (_GLF_IDENTITY(uint(3u), (_GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(uvec4(uint(3u), 0u, 0u, 0u), (uvec4(uint(3u), 0u, 0u, 0u)) | (uvec4(uint(3u), 0u, 0u, 0u)))))) | (uint(3u)))) * 1u))), uint(3u), uint(3u))), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)))), _GLF_IDENTITY(uvec3(0u, 0u, _GLF_IDENTITY(((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), clamp(_GLF_IDENTITY(uint(3u), max(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) * 1u))), uint(3u), uint(3u))), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(137999u) : ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), clamp(_GLF_IDENTITY(uint(3u), max(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) * 1u))), uint(3u), uint(3u))), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)))))), uvec3(0u, 0u, 0u) ^ _GLF_IDENTITY((uvec3(0u, 0u, ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), clamp(_GLF_IDENTITY(uint(3u), max(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) * 1u))), uint(3u), uint(3u))), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))))), min((uvec3(0u, 0u, ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), clamp(_GLF_IDENTITY(uint(3u), max(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) * 1u))), uint(3u), uint(3u))), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))))), _GLF_IDENTITY((uvec3(0u, 0u, ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), clamp(_GLF_IDENTITY(uint(3u), max(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) * 1u))), uint(3u), uint(3u))), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))))), ((uvec3(0u, 0u, ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), clamp(_GLF_IDENTITY(uint(3u), max(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) * 1u))), uint(3u), uint(3u))), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)))))) | ((uvec3(0u, 0u, ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), clamp(_GLF_IDENTITY(uint(3u), max(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) * 1u))), uint(3u), uint(3u))), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)))))))))), uvec3(0u, 0u, ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), clamp(_GLF_IDENTITY(uint(3u), max(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) * 1u))), uint(3u), uint(3u))), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)))))))) * uvec3(1u, 1u, 1u))))))) | (_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), ((0u)) | (_GLF_IDENTITY((0u), max((0u), (0u))))) - 0u), 0u))))), (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) | 0u)))) << (_GLF_IDENTITY(0u ^ 0u, clamp(0u ^ 0u, _GLF_IDENTITY(0u ^ 0u, (0u ^ 0u) / (0u | _GLF_IDENTITY(1u, 0u + (1u)))), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) + 0u) ^ 0u, min(0u ^ 0u, _GLF_IDENTITY(0u ^ 0u, (0u ^ 0u) << 0u)))))))], uint(_GLF_IDENTITY(2, int(int(_GLF_IDENTITY(2, (2) | (2)))))), 4, 64, 4);
   if(_GLF_DEAD(false))
    return;
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       break;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      break;
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_IDENTITY(false, true && (false))))))) && true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         continue;
        }
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          continue;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))), true))), false)))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))), bool(bvec4(! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))), false, true, true))), true, false))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), min((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))), injectionSwitch)).y)), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true))), _GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true))), false))))), bool(bvec2(! (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true))), false))))), true)))))), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), true, true))))), ! (! (_GLF_IDENTITY(false, true && (false)))))), true))), false)))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (false))))), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, false || (false)))))))), false, true, true))), true, false))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), min((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))), injectionSwitch)).y)), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, _GLF_IDENTITY(true, ! (! (true)))))), _GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true))), false))))), bool(bvec2(! (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(injectionSwitch.y, length(vec2(0.0, 0.0)), 0.0), (true ? vec3(injectionSwitch.y, length(vec2(0.0, 0.0)), 0.0) : _GLF_FUZZED(vec3(99.36, 5.4, -106.117))))), (float(_GLF_IDENTITY(vec3(injectionSwitch.y, length(vec2(0.0, 0.0)), 0.0), (true ? vec3(injectionSwitch.y, length(vec2(0.0, 0.0)), 0.0) : _GLF_FUZZED(vec3(99.36, 5.4, -106.117)))))) / 1.0)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))), 1.0, 0.0)))) * 1.0))), false), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), false), true))), false))))), true))))))))))), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true, ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true))))), bool(bvec2((_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true))))), false)))))))))), true))), false)))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, (true) && true))) && (_GLF_IDENTITY(false, false || (false))))), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))), false || (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))))), bool(bvec4(! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))), false, true, true))), true, false))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), min((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(592.434, -5.5)))), injectionSwitch))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))), injectionSwitch)).y)), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))))).x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true))), _GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true))), false))))), bool(bvec2(! (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x4(injectionSwitch.y, 1.0, 1.0, sqrt(0.0), 1.0, sqrt(round(length(normalize(vec2(1.0, 1.0))))), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 1.0, 0.0, 0.0, 0.0, 1.0)), mix(float(_GLF_FUZZED((48.35 / -5.8))), float(float(mat3x4(injectionSwitch.y, 1.0, 1.0, sqrt(0.0), 1.0, sqrt(round(length(normalize(vec2(1.0, 1.0))))), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 1.0, 0.0, 0.0, 0.0, 1.0))), bool(true)))))), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true))), false))))), true)))))), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)), injectionSwitch, injectionSwitch)).y))), false), true, true))))), ! (! (_GLF_IDENTITY(false, true && (false)))))), true))), false)))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (false))))), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) || false) && (_GLF_IDENTITY(false, false || (false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true && (_GLF_IDENTITY(false, false || (false)))))))), false, true, true))), true, false))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), min((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (injectionSwitch) * mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_ONE(1.0, injectionSwitch.y)), float(_GLF_FUZZED(0.6)), bool(false))), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))))))), injectionSwitch)).y)), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, _GLF_IDENTITY(true, ! (! (true)))))), _GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true))), false))))), bool(bvec2(! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(injectionSwitch.y, length(vec2(0.0, 0.0)), 0.0), (true ? vec3(injectionSwitch.y, length(vec2(0.0, 0.0)), 0.0) : _GLF_FUZZED(vec3(99.36, 5.4, -106.117))))), (float(_GLF_IDENTITY(vec3(injectionSwitch.y, length(vec2(0.0, 0.0)), 0.0), (true ? vec3(injectionSwitch.y, length(vec2(0.0, 0.0)), 0.0) : _GLF_FUZZED(vec3(99.36, 5.4, -106.117)))))) / 1.0)), false || (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * round(length(normalize(sqrt(vec4(1.0, 1.0, 1.0, 1.0)))))) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(injectionSwitch.y, length(vec2(0.0, 0.0)), 0.0), (true ? vec3(injectionSwitch.y, length(vec2(0.0, 0.0)), 0.0) : _GLF_FUZZED(vec3(99.36, 5.4, -106.117))))), (float(_GLF_IDENTITY(vec3(injectionSwitch.y, length(vec2(0.0, 0.0)), 0.0), (true ? vec3(injectionSwitch.y, length(vec2(0.0, 0.0)), 0.0) : _GLF_FUZZED(vec3(99.36, 5.4, -106.117)))))) / 1.0)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))), 1.0, 0.0)))) * 1.0))), false), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), false), true))), false))))), true))))))))))), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true, ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false))))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))), true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))), true)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))), true)), false)), true))))), false)))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (false || _GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((false)), ! (_GLF_IDENTITY(! (bool((false))), ! (! (! (bool((false))))))))), bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(bool((false)), ! (_GLF_IDENTITY(! (bool((false))), ! (! (! (bool((false))))))))), true), bvec2(bvec2(bvec2(bool(_GLF_IDENTITY(bool((false)), ! (_GLF_IDENTITY(! (bool((false))), ! (! (! (bool((false))))))))), true)))))))) && true))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))), bool(bvec4(! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))), false, true, true))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))), bool(bvec4(! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (false || (false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false, true, true))), true, false), true))))))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), min((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))), injectionSwitch)).y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(1.0, 0.0), (vec2(1.0, 0.0)) / vec2(1.0, 1.0))), min(float(_GLF_IDENTITY(vec2(1.0, 0.0), (vec2(1.0, 0.0)) / vec2(1.0, 1.0))), float(_GLF_IDENTITY(vec2(1.0, 0.0), (vec2(1.0, 0.0)) / vec2(1.0, 1.0)))))), injectionSwitch.y)), min((injectionSwitch) * _GLF_IDENTITY(mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), _GLF_IDENTITY(mat2(mat2x3(mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))), (mat2(mat2x3(mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))) * mat2(1.0))), _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))), injectionSwitch)).y)))), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, true, false, true))), _GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), false))), true))), false))))), bool(bvec2(! (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)) || false), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5559.3630), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-6783.3501)), bvec2(true, false))).x > injectionSwitch.y, true, false, true))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec3(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), false))))))), true))), false))))), true)))))), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), true, true))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true && (false))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), true, true))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true && (false))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || false)))))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), true, true))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true && (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true && (false))))))))))))), true))), false)))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (false))))), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! (! (_GLF_IDENTITY(false || (false), true && (false || (false))))))))))))), false, true, true))), true, false))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), min((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))), injectionSwitch)).y)), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, _GLF_IDENTITY(true, ! (! (true)))))), _GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true))), false))))), bool(bvec2(! (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(injectionSwitch.y, length(vec2(0.0, 0.0)), 0.0), _GLF_IDENTITY((true ? vec3(injectionSwitch.y, length(vec2(0.0, 0.0)), 0.0) : _GLF_FUZZED(vec3(99.36, 5.4, -106.117))), clamp((true ? vec3(injectionSwitch.y, length(vec2(0.0, 0.0)), 0.0) : _GLF_FUZZED(vec3(99.36, 5.4, -106.117))), (true ? vec3(injectionSwitch.y, length(vec2(0.0, 0.0)), 0.0) : _GLF_FUZZED(vec3(99.36, 5.4, -106.117))), _GLF_IDENTITY((true ? vec3(injectionSwitch.y, length(vec2(0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(7.8) : 0.0)), 0.0, 0.0))) : _GLF_FUZZED(vec3(99.36, 5.4, -106.117))), vec3(0.0, 0.0, 0.0) + (_GLF_IDENTITY((true ? vec3(injectionSwitch.y, length(vec2(0.0, 0.0)), 0.0) : _GLF_FUZZED(vec3(99.36, 5.4, -106.117))), max(_GLF_IDENTITY((true ? vec3(injectionSwitch.y, length(vec2(0.0, 0.0)), 0.0) : _GLF_FUZZED(vec3(99.36, 5.4, -106.117))), ((true ? vec3(injectionSwitch.y, length(vec2(0.0, 0.0)), 0.0) : _GLF_FUZZED(vec3(99.36, 5.4, -106.117)))) + sqrt(vec3(0.0, 0.0, 0.0))), (true ? vec3(injectionSwitch.y, length(vec2(0.0, 0.0)), 0.0) : _GLF_FUZZED(vec3(99.36, 5.4, -106.117))))))))))), (float(_GLF_IDENTITY(vec3(injectionSwitch.y, length(vec2(0.0, 0.0)), 0.0), (true ? vec3(injectionSwitch.y, _GLF_IDENTITY(length(vec2(0.0, 0.0)), 0.0 + (length(vec2(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0)), 0.0)))), 0.0) : _GLF_FUZZED(vec3(99.36, 5.4, -106.117)))))) / 1.0)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), ! (! (bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))), bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y)), true, false, true))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-4.5))), 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))))), 1.0, 0.0)))) * 1.0))), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y, _GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), false), true))), false))))), true))))))))))), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true, ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         break;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        break;
       barrier();
      }
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       break;
      }
    }
   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))));
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(acosh(injectionSwitch)) : injectionSwitch)), 0.0, 0.0, 0.0, 1.0, length(vec2(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(determinant((mat4x3(8.1, 3187.0612, 0.1, 3.1, 39.14, -9709.9260, -86.43, 31.43, 4.6, -7052.1554, -5286.6796, -26.39) * mat3x4(4254.9401, 405.796, -87.01, -21.94, -4835.2549, -414.925, -6.1, -1.6, -1038.6702, -456.845, -7.2, -4.7)))) : 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, float(mat3x2(0.0, 1.0, 1.0, 1.0, 0.0, 1.0)))))) / 1.0), 1.0 * (0.0)))), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), 1.0, 0.0, sin(0.0), 0.0))).x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, 0.0, 0.0, 1.0, length(vec2(0.0, 0.0)), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), 1.0, 0.0, sin(0.0), 0.0))).x, max(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, 0.0, 0.0, 1.0, length(vec2(0.0, 0.0)), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), 1.0, 0.0, sin(0.0), 0.0))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, 0.0, 0.0, 1.0, length(vec2(0.0, 0.0)), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), 1.0, 0.0, sin(0.0), 0.0))).x, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, 0.0, 0.0, 1.0, length(vec2(0.0, 0.0)), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), 1.0, 0.0, sin(0.0), 0.0))).x) * 1.0))) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, 0.0, 0.0, 1.0, length(_GLF_IDENTITY(vec2(0.0, 0.0), min(vec2(0.0, 0.0), vec2(0.0, 0.0)))), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))), 1.0, 0.0, sin(0.0), 0.0))).x > injectionSwitch.y)))))) && true, (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, 0.0, 0.0, 1.0, length(vec2(0.0, 0.0)), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), 1.0, 0.0, sin(0.0), 0.0))).x, max(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, 0.0, 0.0, 1.0, length(vec2(0.0, 0.0)), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), 1.0, 0.0, sin(0.0), 0.0))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, 0.0, 0.0, 1.0, length(vec2(0.0, 0.0)), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), 1.0, 0.0, sin(0.0), 0.0))).x, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, 0.0, 0.0, 1.0, length(vec2(0.0, 0.0)), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), 1.0, 0.0, sin(0.0), 0.0))).x) * 1.0))) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, 0.0, 0.0, 1.0, length(_GLF_IDENTITY(vec2(0.0, 0.0), min(vec2(0.0, 0.0), vec2(0.0, 0.0)))), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))), 1.0, 0.0, sin(0.0), 0.0))).x > injectionSwitch.y)))))) && true, ((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, 1.0, length(vec2(0.0, 0.0)), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), 1.0, 0.0, sin(0.0), 0.0))).x, max(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, 0.0, 0.0, 1.0, length(vec2(0.0, 0.0)), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), 1.0, 0.0, sin(0.0), 0.0))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, 0.0, 0.0, 1.0, length(vec2(0.0, 0.0)), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), 1.0, 0.0, sin(0.0), 0.0))).x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), vec2(mat3x4(injectionSwitch, 0.0, 0.0, 0.0, 1.0, length(vec2(0.0, 0.0)), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), 1.0, 0.0, sin(0.0), 0.0))).x) * 1.0))) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, 0.0, 0.0, 1.0, length(_GLF_IDENTITY(vec2(0.0, 0.0), min(vec2(0.0, 0.0), vec2(0.0, 0.0)))), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))), 1.0, 0.0, sin(0.0), 0.0))).x > injectionSwitch.y)))))) && true) && true)) && true))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), true, true, false))))))))) && true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y) && true))), ((! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 0.0, 0.0, 1.0)))), ((_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 0.0, 0.0, 1.0))))) || false) && true)))) || false))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (_GLF_IDENTITY(bool(bool(false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), true && (bool(bvec2(false, true))))))), true, true, false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), true, true, false))), false || (_GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), true, true, false)))))))))))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) || false)))) && true)), ! (! (_GLF_IDENTITY(false, (false) || false))))))), ! (_GLF_IDENTITY(! (false), bool(bvec3(_GLF_IDENTITY(! (false), bool(bvec2(_GLF_IDENTITY(! (false), ! (! (! (_GLF_IDENTITY(false, false || (false)))))), false))), true, true))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))))), _GLF_IDENTITY((bool(bool(false))) && true, false || ((bool(bool(false))) && true))), true && (_GLF_IDENTITY(bool(bool(false)), bool(bvec2(_GLF_IDENTITY(bool(bool(false)), false || (_GLF_IDENTITY(bool(bool(false)), ! (_GLF_IDENTITY(! (bool(bool(false))), true && (! (bool(bool(false))))))))), true)))))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), vec2(injectionSwitch[_GLF_IDENTITY(0, (0) | 0)], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))).y) && true)))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(2.8))) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), bool(bvec2(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), true))))), false))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(sin(vec2(0.0, 0.0)))).x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(bool(bvec2(false, true)), false || (bool(bvec2(false, true))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), bool(bool(bool(bvec4(false, false, true, false))))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))) && true))))))
    barrier();
   for(int _injected_loop_counter = _GLF_IDENTITY(0, (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), _GLF_IDENTITY((_GLF_IDENTITY(0, (0) ^ 0)) ^ 0, (false ? _GLF_FUZZED(bitfieldReverse(82220)) : (_GLF_IDENTITY(0, (0) ^ 0)) ^ 0)))) | 0); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, (1) | (1))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, (1) | (1)))))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      break;
     atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(2), (true ? _GLF_IDENTITY(uint(_GLF_IDENTITY(2, (2) >> 0)), (_GLF_IDENTITY(uint(2), _GLF_IDENTITY((_GLF_IDENTITY(uint(2), (uint(2)) | (uint(2)))), ((uint(2))) | 0u) | (uint(2)))) / (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u)), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (uint(5u)) | (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))), uint(5u)), ((_GLF_IDENTITY(1u, (false ? _GLF_FUZZED((mat2(1074.0003, -32.50, 9.0, -6.2) , packUnorm2x16(vec2(4.6, -4.3)))) : 1u)) << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))) | ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))))), 0u | (~ (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (uint(5u)) | (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))), uint(5u)), ((_GLF_IDENTITY(1u, (false ? _GLF_FUZZED((mat2(1074.0003, -32.50, 9.0, -6.2) , packUnorm2x16(vec2(4.6, -4.3)))) : 1u)) << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))) | ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u)))))))), max((~ (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), _GLF_IDENTITY((uint(5u)), ~ (~ (_GLF_IDENTITY((uint(5u)), ~ (~ ((uint(5u)))))))) | (0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), min(uint(2u), _GLF_IDENTITY(uint(2u), 0u | (uint(2u)))))))), uint(5u)), ((_GLF_IDENTITY(1u, (false ? _GLF_IDENTITY(_GLF_FUZZED((mat2(1074.0003, -32.50, 9.0, -6.2) , packUnorm2x16(vec2(4.6, -4.3)))), min(_GLF_IDENTITY(_GLF_FUZZED((mat2(1074.0003, -32.50, 9.0, -6.2) , packUnorm2x16(vec2(4.6, -4.3)))), uint(uvec2(_GLF_FUZZED((mat2(1074.0003, -32.50, 9.0, -6.2) , packUnorm2x16(vec2(4.6, -4.3)))), 1u))), _GLF_IDENTITY(_GLF_FUZZED((mat2(1074.0003, -32.50, 9.0, -6.2) , packUnorm2x16(vec2(4.6, -4.3)))), (_GLF_FUZZED((mat2(1074.0003, -32.50, 9.0, -6.2) , packUnorm2x16(vec2(4.6, -4.3))))) | (_GLF_FUZZED((mat2(1074.0003, -32.50, 9.0, -6.2) , packUnorm2x16(vec2(4.6, -4.3)))))))) : 1u)) << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), min(uint(5u), _GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), (uint(5u)) | 0u)) / (1u ^ 0u)))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), ~ (~ (_GLF_IDENTITY(uint(5u), uint(5u)))))) | ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u)))))), (~ (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (uint(5u)) | (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(2u), uint(2u)), (0u >> _GLF_IDENTITY(uint(2u), uint(2u))) | (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))))), uint(5u)), ((_GLF_IDENTITY(1u, (false ? _GLF_FUZZED((mat2(1074.0003, -32.50, 9.0, -6.2) , packUnorm2x16(vec2(4.6, -4.3)))) : 1u)) << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (uint(5u)) | (uint(5u))), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))) | ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))))))))))) : _GLF_FUZZED(subgroup_size))), 4, 64, 4);
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
}
