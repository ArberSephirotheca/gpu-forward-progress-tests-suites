#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_8 {
 vec3 _f0;
 uvec4 _f1;
 vec2 _f2;
 uvec2 _f3;
 ivec4 _f4;
 int _f5;
 int _f6;
} ;

struct _GLF_struct_7 {
 vec3 _f0;
 mat4x2 _f1;
 uvec4 _f2;
 mat4x3 _f3;
 bvec3 _f4;
 bvec4 _f5;
} ;

struct _GLF_struct_6 {
 mat2x4 _f0;
 mat4 _f1;
 int _f2;
 mat2 _f3;
 ivec3 _f4;
 float _f5;
} ;

struct _GLF_struct_9 {
 _GLF_struct_6 _f0;
 _GLF_struct_7 _f1;
 _GLF_struct_8 _f2;
 uvec3 _f3;
 bool _f4;
} ;

struct _GLF_struct_10 {
 uint _f0;
 mat4x3 _f1;
 uvec3 _f2;
 int _f3;
 uint workgroup_base;
 _GLF_struct_9 _f4;
} ;

struct _GLF_struct_3 {
 mat3x4 _f0;
 uvec3 _f1;
 vec4 _f2;
 ivec4 _f3;
 float _f4;
 uvec4 _f5;
 ivec4 _f6;
} ;

struct _GLF_struct_2 {
 bvec3 _f0;
} ;

struct _GLF_struct_4 {
 _GLF_struct_2 _f0;
 _GLF_struct_3 _f1;
} ;

struct _GLF_struct_5 {
 _GLF_struct_4 _f0;
 uint workgroup_size;
} ;

struct _GLF_struct_1 {
 ivec3 _f0;
 uint num_workgroup;
 float _f1;
} ;

struct _GLF_struct_0 {
 uint subgroup_local_id;
 vec4 _f0;
 mat3 _f1;
 uvec2 _f2;
 mat3x4 _f3;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true && (bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(64.15) : _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))) > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), true && (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), ! (! _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))), true && ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y))))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-9385.1158)), float(_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, 1.0, 1.0, 0.0, 1.0)))), bool(true)), mix(float(_GLF_IDENTITY(mix(float(_GLF_FUZZED(-9385.1158)), float(_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, 1.0, 1.0, 0.0, 1.0)))), bool(true)), min(mix(float(_GLF_FUZZED(-9385.1158)), float(_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, 1.0, 1.0, 0.0, 1.0)))), bool(true)), _GLF_IDENTITY(mix(float(_GLF_FUZZED(-9385.1158)), float(_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, 1.0, 1.0, 0.0, 1.0)))), bool(true)), (mix(float(_GLF_FUZZED(-9385.1158)), float(_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, 1.0, 1.0, 0.0, 1.0)))), bool(true))) * 1.0)))), float(_GLF_FUZZED(-6.9)), bool(false)))) > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))))) && true)) || false)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_0 _GLF_struct_replacement_0 = _GLF_struct_0(gl_SubgroupInvocationID, vec4(_GLF_IDENTITY(1.0, max(1.0, 1.0))), mat3(1.0), uvec2(1u), mat3x4(1.0));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_1 _GLF_struct_replacement_1 = _GLF_struct_1(ivec3(_GLF_IDENTITY(1, (1) | (1))), gl_NumWorkGroups.x, 1.0);
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (false))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_5 _GLF_struct_replacement_5 = _GLF_struct_5(_GLF_struct_4(_GLF_struct_2(_GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(bvec4(bvec3(true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec4(bvec3(true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true))))), _GLF_struct_3(mat3x4(1.0), uvec3(_GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, (1u) ^ 0u)))), vec4(1.0), ivec4(_GLF_IDENTITY(1, 0 ^ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1, (1) << 0)), int(_GLF_IDENTITY(int(_GLF_IDENTITY((_GLF_IDENTITY(1, (1) << 0)), int(ivec3((_GLF_IDENTITY(1, (1) << 0)), 1, 0)))), (false ? _GLF_FUZZED(bitfieldExtract(57074, 81887, -98244)) : int(_GLF_IDENTITY((_GLF_IDENTITY(1, (1) << 0)), int(ivec3((_GLF_IDENTITY(1, (1) << 0)), 1, 0)))))))), clamp((_GLF_IDENTITY(1, (1) << 0)), (_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (1) << 0)), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) << 0), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) << 0), (false ? _GLF_FUZZED(ivec3(-23752, -35635, -99209).b) : _GLF_IDENTITY(1, (1) << 0)))) * 1)))))), 1.0, _GLF_IDENTITY(uvec4(1u), _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (uvec4(0u, 0u, 0u, 0u)) * uvec4(1u, 1u, 1u, 1u)) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(1u), (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, ! (! (false))))) ? _GLF_FUZZED(uvec4(156867u, 160654u, 101366u, 2495u)) : _GLF_IDENTITY(uvec4(1u), _GLF_IDENTITY((_GLF_IDENTITY(uvec4(1u), clamp(uvec4(1u), uvec4(1u), uvec4(1u)))) | uvec4(0u, 0u, 0u, 0u), clamp((uvec4(1u)) | uvec4(_GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, uint(uvec4(_GLF_IDENTITY(0u, 1u * (0u)), 0u, 0u, 0u))) : _GLF_FUZZED(16581u))), 0u, 0u, 0u), (uvec4(1u)) | uvec4(0u, 0u, 0u, 0u), (uvec4(1u)) | uvec4(0u, 0u, 0u, 0u)))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(1u), (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y))) || false) || (_GLF_IDENTITY(false, ! (! (false))))) ? _GLF_FUZZED(uvec4(156867u, 160654u, _GLF_IDENTITY(_GLF_IDENTITY(101366u, uint(uvec4(101366u, 0u, 1u, 1u))), (_GLF_IDENTITY(101366u, uint(uvec4(101366u, 0u, 1u, 1u)))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), 2495u)) : _GLF_IDENTITY(uvec4(1u), _GLF_IDENTITY((uvec4(1u)) | uvec4(0u, 0u, 0u, 0u), clamp(_GLF_IDENTITY((uvec4(1u)) | uvec4(0u, 0u, 0u, 0u), uvec4(0u, 0u, 0u, 0u) | ((uvec4(1u)) | uvec4(0u, 0u, 0u, 0u))), (uvec4(1u)) | uvec4(0u, 0u, 0u, 0u), (uvec4(1u)) | uvec4(0u, 0u, 0u, 0u)))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec4(1u), (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y))) || false) || (_GLF_IDENTITY(false, ! (! (false))))) ? _GLF_FUZZED(uvec4(156867u, 160654u, _GLF_IDENTITY(_GLF_IDENTITY(101366u, uint(uvec4(101366u, 0u, 1u, 1u))), (_GLF_IDENTITY(101366u, uint(uvec4(101366u, 0u, 1u, 1u)))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), 2495u)) : _GLF_IDENTITY(uvec4(1u), _GLF_IDENTITY((uvec4(1u)) | uvec4(0u, 0u, 0u, 0u), clamp(_GLF_IDENTITY((uvec4(1u)) | uvec4(0u, 0u, 0u, 0u), uvec4(0u, 0u, 0u, 0u) | ((uvec4(1u)) | uvec4(0u, 0u, 0u, 0u))), (uvec4(1u)) | uvec4(0u, 0u, 0u, 0u), (uvec4(1u)) | uvec4(0u, 0u, 0u, 0u))))))), max(~ (_GLF_IDENTITY(uvec4(1u), (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y))) || false) || (_GLF_IDENTITY(false, ! (! (false))))) ? _GLF_FUZZED(uvec4(156867u, 160654u, _GLF_IDENTITY(_GLF_IDENTITY(101366u, uint(uvec4(101366u, 0u, 1u, 1u))), (_GLF_IDENTITY(101366u, uint(uvec4(101366u, 0u, 1u, 1u)))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), 2495u)) : _GLF_IDENTITY(uvec4(1u), _GLF_IDENTITY((uvec4(1u)) | uvec4(0u, 0u, 0u, 0u), clamp(_GLF_IDENTITY((uvec4(1u)) | uvec4(0u, 0u, 0u, 0u), uvec4(0u, 0u, 0u, 0u) | ((uvec4(1u)) | uvec4(0u, 0u, 0u, 0u))), (uvec4(1u)) | uvec4(0u, 0u, 0u, 0u), (uvec4(1u)) | uvec4(0u, 0u, 0u, 0u))))))), ~ (_GLF_IDENTITY(uvec4(1u), (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y))) || false) || (_GLF_IDENTITY(false, ! (! (false))))) ? _GLF_FUZZED(uvec4(156867u, 160654u, _GLF_IDENTITY(_GLF_IDENTITY(101366u, uint(uvec4(101366u, 0u, 1u, 1u))), (_GLF_IDENTITY(101366u, uint(uvec4(101366u, 0u, 1u, 1u)))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), 2495u)) : _GLF_IDENTITY(uvec4(1u), _GLF_IDENTITY((uvec4(1u)) | uvec4(0u, 0u, 0u, 0u), clamp(_GLF_IDENTITY((uvec4(1u)) | uvec4(0u, 0u, 0u, 0u), uvec4(0u, 0u, 0u, 0u) | ((uvec4(1u)) | uvec4(0u, 0u, 0u, 0u))), (uvec4(1u)) | uvec4(0u, 0u, 0u, 0u), (uvec4(1u)) | uvec4(0u, 0u, 0u, 0u)))))))))))))))), _GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, int(ivec4(1, 1, 1, 1)))), ivec4(0, 0, 0, 0) | (ivec4(1))))), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, _GLF_IDENTITY(0u, 0u | (0u)), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY(1u, min(1u, 1u)) * (0u))) ^ 0u)) | (gl_WorkGroupSize)).x);
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)) && (false), false || (_GLF_IDENTITY(true, false || (true)) && (false))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), false, true, _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(false, true && (false)))))), (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), false, true, false)), true && (bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), false, true, false))))) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)), ! (! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false))))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), ! (! (bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))), false, _GLF_IDENTITY(true, bool(bvec4(true, false, true, false))))))) || false), _GLF_IDENTITY(false, false || (false))))))))), _GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), ! (! (bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0)))).y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0)))).y))), false)))))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), ! (! (bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0)))).y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0)))).y))), false)))))))), (_GLF_IDENTITY(! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), ! (! (bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0)))).y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0)))).y))), false)))))))), false || (! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), ! (! (bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0)))).y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0)))).y))), false))))))))))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), ! (! (bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0)))).y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0)))).y))), false)))))))), (_GLF_IDENTITY(! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), ! (! (bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0)))).y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0)))).y))), false)))))))), false || (! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), ! (! (bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0)))).y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0)))).y))), false))))))))))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), ! (! (bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0)))).y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0)))).y))), false)))))))), (_GLF_IDENTITY(! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), ! (! (bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0)))).y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0)))).y))), false)))))))), false || (! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), ! (! (bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0)))).y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0)))).y))), false))))))))))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), true))))), bool(_GLF_IDENTITY(bvec3(! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), ! (! (bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0)))).y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))) * mat2(1.0)))).y))), false)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), ! (! (bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0)))).y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0)))).y))), false)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), true)))))), (! (! (! _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) || false), false || (! ((injectionSwitch.x > injectionSwitch.y) || false))))))), false)), ! (! (bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0)))).y), true && ((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0)))).y))), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, (false) || false))))))))))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), false)), ! (! (bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0)))).y), true && ((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7684.5356), _GLF_FUZZED(4.2)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch)), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * _GLF_IDENTITY(mat2(1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mat2(1.0) : _GLF_FUZZED(mat2(82.24, 54.25, 9.7, -7977.5267)))), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(matrixCompMult(mat2(-6979.8099, -4.4, -11.23, -2.1), mat2(-1752.7980, 8.7, -1.9, -8.2))) : _GLF_IDENTITY(mat2(1.0), mat2(mat2x4(mat2(1.0))))))))).y))), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), bool(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))))))))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, (true) || false))), ! (! (bool(bool(_GLF_IDENTITY(true, (true) || false))))))))) && (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.x > injectionSwitch.y) || false)), false)), ! (! (bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0)))).y), true && ((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0)))).y))), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))))))), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), true)))))))) && true)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), ! (! (bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))), false, _GLF_IDENTITY(true, bool(bvec4(true, false, true, false))))))) || false), _GLF_IDENTITY(false, false || (false))))))))), _GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), ! (! (bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0)))).y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0)))).y))), false)))))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), ! (! (bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0)))).y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0)))).y))), false)))))))), (_GLF_IDENTITY(! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), ! (! (bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0)))).y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0)))).y))), false)))))))), false || (! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), ! (! (bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0)))).y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0)))).y))), false))))))))))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), ! (! (bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0)))).y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0)))).y))), false)))))))), (_GLF_IDENTITY(! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), ! (! (bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0)))).y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0)))).y))), false)))))))), false || (! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), ! (! (bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0)))).y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0)))).y))), false))))))))))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), ! (! (bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0)))).y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0)))).y))), false)))))))), (_GLF_IDENTITY(! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), ! (! (bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0)))).y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0)))).y))), false)))))))), false || (! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), ! (! (bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0)))).y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0)))).y))), false))))))))))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), true))))), bool(_GLF_IDENTITY(bvec3(! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), ! (! (bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0)))).y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))) * mat2(1.0)))).y))), false)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), ! (! (bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0)))).y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0)))).y))), false)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), true)))))), (! (! (! _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) || false), false || (! ((injectionSwitch.x > injectionSwitch.y) || false))))))), false)), ! (! (bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0)))).y), true && ((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0)))).y))), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, (false) || false))))))))))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), false)), ! (! (bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0)))).y), true && ((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7684.5356), _GLF_FUZZED(4.2)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch)), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * _GLF_IDENTITY(mat2(1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mat2(1.0) : _GLF_FUZZED(mat2(82.24, 54.25, 9.7, -7977.5267)))), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(matrixCompMult(mat2(-6979.8099, -4.4, -11.23, -2.1), mat2(-1752.7980, 8.7, -1.9, -8.2))) : _GLF_IDENTITY(mat2(1.0), mat2(mat2x4(mat2(1.0))))))))).y))), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), bool(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))))))))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, (true) || false))), ! (! (bool(bool(_GLF_IDENTITY(true, (true) || false))))))))) && (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.x > injectionSwitch.y) || false)), false)), ! (! (bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0)))).y), true && ((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0)))).y))), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))))))), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), true)))))))) && true))), false || (bool(_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), ! (! (bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))), false, _GLF_IDENTITY(true, bool(bvec4(true, false, true, false))))))) || false), _GLF_IDENTITY(false, false || (false))))))))), _GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), ! (! (bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0)))).y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0)))).y))), false)))))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), ! (! (bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0)))).y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0)))).y))), false)))))))), (_GLF_IDENTITY(! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), ! (! (bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0)))).y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0)))).y))), false)))))))), false || (! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), ! (! (bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0)))).y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0)))).y))), false))))))))))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), ! (! (bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0)))).y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0)))).y))), false)))))))), (_GLF_IDENTITY(! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), ! (! (bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0)))).y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0)))).y))), false)))))))), false || (! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), ! (! (bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0)))).y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0)))).y))), false))))))))))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), ! (! (bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0)))).y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0)))).y))), false)))))))), (_GLF_IDENTITY(! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), ! (! (bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0)))).y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0)))).y))), false)))))))), false || (! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), ! (! (bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0)))).y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0)))).y))), false))))))))))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), true))))), bool(_GLF_IDENTITY(bvec3(! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), ! (! (bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0)))).y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))) * mat2(1.0)))).y))), false)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), ! (! (bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0)))).y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0)))).y))), false)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), true)))))), (! (! (! _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) || false), false || (! ((injectionSwitch.x > injectionSwitch.y) || false))))))), false)), ! (! (bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0)))).y), true && ((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0)))).y))), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, (false) || false))))))))))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), false)), ! (! (bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0)))).y), true && ((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7684.5356), _GLF_FUZZED(4.2)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch)), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * _GLF_IDENTITY(mat2(1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mat2(1.0) : _GLF_FUZZED(mat2(82.24, 54.25, 9.7, -7977.5267)))), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(matrixCompMult(mat2(-6979.8099, -4.4, -11.23, -2.1), mat2(-1752.7980, 8.7, -1.9, -8.2))) : _GLF_IDENTITY(mat2(1.0), mat2(mat2x4(mat2(1.0))))))))).y))), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), bool(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))))))))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, (true) || false))), ! (! (bool(bool(_GLF_IDENTITY(true, (true) || false))))))))) && (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.x > injectionSwitch.y) || false)), false)), ! (! (bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0)))).y), true && ((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0)))).y))), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))))))), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), true)))))))) && true))))))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_10 _GLF_struct_replacement_10 = _GLF_struct_10(1u, mat4x3(1.0), uvec3(1u), 1, _GLF_struct_replacement_5.workgroup_size * workgroup_id, _GLF_struct_9(_GLF_struct_6(mat2x4(_GLF_IDENTITY(1.0, 0.0 + (1.0))), mat4(1.0), 1, mat2(1.0), _GLF_IDENTITY(ivec3(1), (ivec3(1)) >> ivec3(0, 0, 0)), 1.0), _GLF_struct_7(vec3(1.0), mat4x2(1.0), uvec4(1u), mat4x3(1.0), bvec3(true), bvec4(true)), _GLF_struct_8(vec3(1.0), uvec4(1u), vec2(1.0), uvec2(1u), ivec4(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) << 0), 1))), 1, 1), uvec3(1u), true));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, sqrt(1.0) * (injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint virtual_gid = _GLF_struct_replacement_10.workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), (subgroup_id) << 0u) * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))), (uint(uint(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))))) / 1u))) | (subgroup_size)) + _GLF_struct_replacement_0.subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint next_virtual_gid = _GLF_struct_replacement_10.workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_struct_replacement_0.subgroup_local_id + 1), ((_GLF_struct_replacement_0.subgroup_local_id + 1)) + 0u) % subgroup_size, 0u + (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_struct_replacement_0.subgroup_local_id + 1), ((_GLF_struct_replacement_0.subgroup_local_id + 1)) + 0u) % subgroup_size, (0u ^ 0u) | (_GLF_IDENTITY((_GLF_struct_replacement_0.subgroup_local_id + 1), ((_GLF_struct_replacement_0.subgroup_local_id + 1)) + 0u) % subgroup_size)))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 buf[virtual_gid] = 1;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, ! (! (true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bool(_GLF_IDENTITY(true, ! (! (true)))))))) && (true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, ! (! (true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bool(_GLF_IDENTITY(true, ! (! (true)))))))) && (true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, ! (! (true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bool(_GLF_IDENTITY(true, ! (! (true)))))))) && (true))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, ! (! (true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bool(_GLF_IDENTITY(true, ! (! (true)))))))) && (true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, ! (! (true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bool(_GLF_IDENTITY(true, ! (! (true)))))))) && (true)))))))))))), _GLF_IDENTITY(_GLF_IDENTITY((bool(bvec2(false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, true)))))))), false || ((bool(bvec2(false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, true)))))))))), _GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY((bool(bvec2(false, true))), ! (! ((_GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec2(bool(bvec2(false, true)), false)))))))), true && ((_GLF_IDENTITY((bool(bvec2(false, true))), ! (! ((_GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec2(bool(bvec2(false, true)), false))))))))))), false || _GLF_IDENTITY((! (! (_GLF_IDENTITY((bool(bvec2(false, _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! ((bool(bvec2(false, true))))))))), ! (! ((! (! (_GLF_IDENTITY((bool(bvec2(false, true))), ! (! ((bool(bvec2(false, true)))))))))))))) && true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), ((subgroup_size)) | 0u) - 0u), bool(bvec3(_GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), ((subgroup_size)) | 0u) - 0u), ! (! (_GLF_struct_replacement_0.subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), ((subgroup_size)) | 0u) - 0u)))), true, true))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   int i = 0;
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, _GLF_IDENTITY(4, min(4, 4)));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 else
  {
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(2), (uint(2)) | (uint(2))), 4, _GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) | (64))) << 0), _GLF_IDENTITY((64), (_GLF_IDENTITY((_GLF_IDENTITY(64, (64) | (_GLF_IDENTITY(64, (false ? _GLF_FUZZED(78391) : _GLF_IDENTITY(64, (64) | (64))))))), clamp((64), (64), (64)))) - 0) >> (9494 & 0)), _GLF_IDENTITY(4, (4) << 0));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-166.096)), vec2(_GLF_FUZZED(_GLF_IDENTITY(-2.9, max(-2.9, -2.9))), (injectionSwitch)[1]), bvec2(false, true))))).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bool(_GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec2(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_ZERO(0.0, injectionSwitch.x) + (injectionSwitch.y)))))), false), bvec2(bvec4(bvec2(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false), false, false))))), ! (! (_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec2(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false), bvec2(bvec4(bvec2(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false), false, false)))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
}
