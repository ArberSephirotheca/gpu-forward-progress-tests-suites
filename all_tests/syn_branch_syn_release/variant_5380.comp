#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 do
  {
   do
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(0), int(0))), (0 ^ 0) ^ (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(0), int(0))), (false ? _GLF_FUZZED(_injected_loop_counter) : (1 << _GLF_IDENTITY(int(0), int(0))))))) >> _GLF_IDENTITY(int(0), int(0)))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) && true)))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, abs(0.0), 1.0)), float(mat4x2(float(vec3(injectionSwitch.y, abs(0.0), 1.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec4(bvec2(_GLF_DEAD(false), false), true, false)))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))), (! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))) || false)))), bvec2(bvec4(bvec2(_GLF_DEAD(false), false), true, false))), bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true))))), bvec2(bvec4(bvec2(_GLF_DEAD(false), false), true, false))), bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec4(bvec2(_GLF_DEAD(false), false), true, _GLF_IDENTITY(false, (false) || false)))), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec4(bvec2(_GLF_DEAD(false), false), true, false))), false))), _GLF_IDENTITY(true, (true) || false))))))))) || false)))
          barrier();
         barrier();
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           for(int _injected_loop_counter = _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(47273) : 1)), int(ivec2(1, 1))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (int(5)) | (int(5)))))); _injected_loop_counter --)
            {
             barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false))) ? injectionSwitch.y : _GLF_FUZZED(_GLF_IDENTITY(-7766.7775, _GLF_IDENTITY(float(mat4x3(-7766.7775, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(0.0), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), (true ? dot(vec2(0.0, 1.0), vec2(1.0, 0.0)) : _GLF_FUZZED(-2.9))), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0, sqrt(0.0), 0.0, 0.0)), (float(mat4x3(-7766.7775, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(0.0), _GLF_IDENTITY(dot(vec2(0.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), exp(0.0), 0.0, 0.0, 0.0, 1.0), mat2x3(mat4x3(mat2x3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), exp(0.0), 0.0, 0.0, 0.0, 1.0))))))), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0, sqrt(0.0), 0.0, 0.0))) / 1.0))))), (_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))) ? injectionSwitch.y : _GLF_FUZZED(-7766.7775), clamp(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))) ? injectionSwitch.y : _GLF_FUZZED(-7766.7775), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))) ? injectionSwitch.y : _GLF_FUZZED(-7766.7775), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))) ? injectionSwitch.y : _GLF_FUZZED(-7766.7775)))))) / 1.0)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(vec3(-5.1, -776.450, -818.978).p)), bool(false))), injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-7766.7775))))), (_GLF_IDENTITY(bool((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 0.0, 1.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat3x2(299.590, -68.88, -8.3, -34.88, 760.972, -6.5)) : mat3x2(injectionSwitch, 0.0, 1.0, 0.0, 0.0)))))), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-7766.7775))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 0.0, 1.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat3x2(299.590, -68.88, -8.3, -34.88, 760.972, -6.5)) : mat3x2(injectionSwitch, 0.0, 1.0, 0.0, 0.0)))))), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-7766.7775))), false || (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 0.0, 1.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat3x2(299.590, -68.88, -8.3, -34.88, 760.972, -6.5)) : mat3x2(injectionSwitch, 0.0, 1.0, 0.0, 0.0)))))), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-7766.7775))), bool(bool(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 0.0, 1.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat3x2(299.590, -68.88, -8.3, -34.88, 760.972, -6.5)) : mat3x2(injectionSwitch, 0.0, 1.0, 0.0, 0.0)))))), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-7766.7775))))))))) && true))), ! (! (bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y))))))) ? injectionSwitch.y : _GLF_FUZZED(-7766.7775))))))))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)))), _GLF_IDENTITY(true && (bool(_GLF_IDENTITY(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x) + (injectionSwitch.x)))), injectionSwitch.x)) < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-7766.7775))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-800.574), _GLF_FUZZED(-5220.7217)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))) + vec2(0.0, 0.0)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-7766.7775))), (_GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y : _GLF_FUZZED(-7766.7775)))) / 1.0)), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-800.574), _GLF_FUZZED(-5220.7217)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-800.574), _GLF_FUZZED(-5220.7217)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), mix(vec2(_GLF_FUZZED(23.29), _GLF_FUZZED((- -3.2))), vec2((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-800.574), _GLF_FUZZED(-5220.7217)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))[0], (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-800.574), _GLF_FUZZED(-5220.7217)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))[1]), bvec2(true, true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-800.574), _GLF_FUZZED(-5220.7217)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-800.574), _GLF_FUZZED(-5220.7217)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0)))))) + vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-7766.7775)))), ! (! ((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-800.574), _GLF_FUZZED(-5220.7217)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))) + vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-7766.7775)))))))))), ! (! (bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))) ? injectionSwitch.y : _GLF_FUZZED(-7766.7775))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-7766.7775))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-800.574), _GLF_FUZZED(_GLF_IDENTITY(-5220.7217, clamp(-5220.7217, _GLF_IDENTITY(-5220.7217, (true ? -5220.7217 : _GLF_FUZZED(5.9))), -5220.7217)))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))) + _GLF_IDENTITY(vec2(0.0, 0.0), _GLF_IDENTITY(mat2(1.0) * (vec2(0.0, 0.0)), min(mat2(1.0) * (vec2(0.0, 0.0)), _GLF_IDENTITY(mat2(1.0) * (vec2(0.0, 0.0)), max(mat2(1.0) * (vec2(0.0, 0.0)), mat2(1.0) * (vec2(0.0, 0.0)))))))).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-7766.7775)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(-800.574, min(_GLF_IDENTITY(-800.574, 0.0 + (_GLF_IDENTITY(-800.574, float(vec3(-800.574, 1.0, 1.0))))), -800.574))), _GLF_FUZZED(-5220.7217)), vec2(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)))[0], (injectionSwitch)[1]), bvec2(true, true)))) + vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-7766.7775)))), ! (! ((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-800.574), _GLF_FUZZED(-5220.7217)), vec2(_GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(0, (0) - 0)], mix(float(_GLF_FUZZED(2878.9848)), float((injectionSwitch)[_GLF_IDENTITY(0, (0) - 0)]), bool(true))), _GLF_IDENTITY((injectionSwitch)[1], float(_GLF_IDENTITY(mat3x4((injectionSwitch)[1], 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)), determinant(mat3(0.0, 0.0, 0.0, tan(0.0), 0.0, 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), 1.0), mat4(1.0) * (mat3x4((injectionSwitch)[1], 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)), determinant(mat3(0.0, 0.0, 0.0, tan(0.0), 0.0, 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), 1.0)))))), bvec2(true, true)))) + vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-7766.7775)))))))))), ! (! (bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y))), bool(bvec4((injectionSwitch.x < injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))) ? injectionSwitch.y : _GLF_FUZZED(-7766.7775))))))))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (true ? injectionSwitch[0] : _GLF_FUZZED(asinh(-2.0)))), injectionSwitch[1])).x > injectionSwitch.y))), true && (_GLF_IDENTITY(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y : _GLF_FUZZED(-7766.7775))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-800.574), _GLF_FUZZED(-5220.7217)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))) + vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-7766.7775)))), _GLF_IDENTITY(true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(vec2(1.0, 1.0))), mix(vec2(_GLF_FUZZED(-800.574), _GLF_FUZZED(-5220.7217)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))) + vec2(0.0, _GLF_IDENTITY(0.0, abs(0.0) + (_GLF_IDENTITY(0.0, min(0.0, 0.0)))))).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < injectionSwitch.y)))) ? injectionSwitch.y : _GLF_FUZZED(-7766.7775)))), ! (! ((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-800.574), _GLF_FUZZED(-5220.7217)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))) + vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-7766.7775)))))))), (_GLF_IDENTITY(true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(vec2(1.0, 1.0))), mix(vec2(_GLF_FUZZED(-800.574), _GLF_FUZZED(-5220.7217)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))) + vec2(0.0, _GLF_IDENTITY(0.0, abs(0.0) + (_GLF_IDENTITY(0.0, min(0.0, 0.0)))))).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < injectionSwitch.y)))) ? injectionSwitch.y : _GLF_FUZZED(-7766.7775)))), ! (! ((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-800.574), _GLF_FUZZED(-5220.7217)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))) + vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-7766.7775)))))))), (true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(vec2(1.0, 1.0))), mix(vec2(_GLF_FUZZED(-800.574), _GLF_FUZZED(-5220.7217)), vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) | 0)))]), bvec2(true, true)))) + vec2(0.0, _GLF_IDENTITY(0.0, abs(0.0) + (_GLF_IDENTITY(0.0, _GLF_IDENTITY(min(0.0, 0.0), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))) * (min(0.0, 0.0)))))))).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)) && (_GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < injectionSwitch.y)))) ? injectionSwitch.y : _GLF_FUZZED(-7766.7775)))), _GLF_IDENTITY(! (! ((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-800.574), _GLF_FUZZED(-5220.7217)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))) + vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-7766.7775)))))), (_GLF_IDENTITY(! (! ((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-800.574), _GLF_FUZZED(-5220.7217)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))) + vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-7766.7775)))))), (! (! ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(-800.574), _GLF_FUZZED(-5220.7217)), max(vec2(_GLF_FUZZED(-800.574), _GLF_FUZZED(-5220.7217)), vec2(_GLF_FUZZED(-800.574), _GLF_FUZZED(-5220.7217)))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))), vec2(_GLF_IDENTITY(mat2((_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(-800.574), _GLF_FUZZED(-5220.7217)), max(vec2(_GLF_FUZZED(-800.574), _GLF_FUZZED(-5220.7217)), vec2(_GLF_FUZZED(-800.574), _GLF_FUZZED(-5220.7217)))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))), 1.0, 0.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2((_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(-800.574), _GLF_FUZZED(-5220.7217)), max(vec2(_GLF_FUZZED(-800.574), _GLF_FUZZED(-5220.7217)), vec2(_GLF_FUZZED(-800.574), _GLF_FUZZED(-5220.7217)))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))), 1.0, 0.0))))) + vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-7766.7775))))))) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)) && true))), _GLF_IDENTITY(! (! (bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4((injectionSwitch.x < injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))) ? injectionSwitch.y : _GLF_FUZZED(-7766.7775))))))), bool(bool(_GLF_IDENTITY(! (! (bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4((injectionSwitch.x < injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))) ? injectionSwitch.y : _GLF_FUZZED(-7766.7775))))))), (! (! (bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4((injectionSwitch.x < injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))) ? injectionSwitch.y : _GLF_FUZZED(-7766.7775)))))))) && true)))))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * sqrt(vec2(1.0, 1.0))).x > injectionSwitch.y)))))))) && true))))))
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false)))
                  {
                   barrier();
                  }
                 else
                  {
                  }
                }
               barrier();
               if(_GLF_DEAD(false))
                {
                 do
                  {
                   barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
              }
            }
          }
         else
          {
          }
        }
       else
        {
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bool(_GLF_IDENTITY(false, bool(bvec2(false, false))))))))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x))); _injected_loop_counter --)
            {
             barrier();
            }
          }
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 else
  {
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, false)))))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 do
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
      }
     else
      {
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 for(int _injected_loop_counter = _GLF_IDENTITY(0, min(0, 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), true && (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false))))))))))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
     barrier();
    }
  }
 do
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (false))))
    {
    }
   else
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       do
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((false), ((false)) || false), false), bvec2(bvec3(bvec2(_GLF_IDENTITY((false), ((false)) || false), false), false)))))), (! (! _GLF_IDENTITY(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((false), ((false)) || false), false), bvec2(bvec3(bvec2(_GLF_IDENTITY((false), ((false)) || false), false), false))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((false), ((false)) || false), false), bvec2(bvec3(bvec2(_GLF_IDENTITY((false), ((false)) || false), false), false))))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((false), ((false)) || false), false), bvec2(bvec3(bvec2(_GLF_IDENTITY((false), ((false)) || false), false), false))))), false))))), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((false), ((false)) || false), false), bvec2(bvec3(bvec2(_GLF_IDENTITY((false), ((false)) || false), false), false))))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((false), ((false)) || false), false), bvec2(bvec3(bvec2(_GLF_IDENTITY((false), ((false)) || false), false), false))))), false)))))) && true)))) && true), false || _GLF_IDENTITY((! (! (false))), ! (! (_GLF_IDENTITY((! (! (false))), ((! (! (false)))) && true))))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), _GLF_IDENTITY(1.0 * ((injectionSwitch.y)), float(mat4x3(1.0 * ((injectionSwitch.y)), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 0.0, 1.0, tan(0.0), abs(1.0), 1.0, 0.0, 0.0, 1.0)))) - 0.0), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) / determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), ((injectionSwitch.y) / determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))) * 1.0))))))))
            {
            }
           else
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
              barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2(injectionSwitch.x, abs(1.0), 1.0, sqrt(0.0)), (mat2(injectionSwitch.x, abs(1.0), 1.0, sqrt(0.0))) - mat2(0.0, 0.0, 0.0, 0.0)))) > injectionSwitch.y)))))
                  {
                  }
                 else
                  {
                   for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                    {
                     barrier();
                    }
                  }
                }
               barrier();
              }
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               do
                {
                 barrier();
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
              }
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         else
          {
          }
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)))).y)), true))))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2(injectionSwitch.y, 1.0, 1.0, 1.0)), (float(mat2(injectionSwitch.y, 1.0, 1.0, 1.0))) / round(length(normalize(1.0))))), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0)), 0.0, 1.0, 1.0, _GLF_ZERO(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-517.715))), injectionSwitch.x)))).y)))))));
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     do
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
      }
    }
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 1, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_injected_loop_counter != 1, bool(bvec4(_GLF_IDENTITY(_injected_loop_counter != 1, false || (_GLF_IDENTITY(_injected_loop_counter != 1, (_injected_loop_counter != 1) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, false, true))), false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_injected_loop_counter != 1, bool(bvec4(_GLF_IDENTITY(_injected_loop_counter != 1, false || (_GLF_IDENTITY(_injected_loop_counter != 1, (_injected_loop_counter != 1) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, false, true))), false, true))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_injected_loop_counter != 1, bool(bvec4(_GLF_IDENTITY(_injected_loop_counter != 1, false || (_GLF_IDENTITY(_injected_loop_counter != 1, (_injected_loop_counter != 1) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, false, true))), false, true))))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_injected_loop_counter != 1, bool(bvec4(_injected_loop_counter != 1, true, false, true))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false)), ! (! (bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false)))))), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_injected_loop_counter != 1, bool(bvec4(_injected_loop_counter != 1, true, false, true))), false, true), false))))))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_injected_loop_counter != 1, bool(bvec4(_injected_loop_counter != 1, true, false, true))), false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_injected_loop_counter != 1, bool(bvec4(_GLF_IDENTITY(_injected_loop_counter != 1, _GLF_IDENTITY(bool(bool(_injected_loop_counter != 1)), (bool(bool(_injected_loop_counter != 1))) && true)), true, false, true))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter != 1, ! (! (_injected_loop_counter != 1))), _GLF_IDENTITY(bool(bvec4(_injected_loop_counter != 1, true, false, true)), ! (_GLF_IDENTITY(! (bool(bvec4(_injected_loop_counter != 1, true, false, true))), bool(bvec4(_GLF_IDENTITY(! (bool(bvec4(_injected_loop_counter != 1, true, false, true))), (! (bool(bvec4(_injected_loop_counter != 1, true, false, true)))) && true), false, true, true)))))), false, true), false))))))), false, false), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_injected_loop_counter != 1, bool(bvec4(_injected_loop_counter != 1, true, false, true))), false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (false ? _GLF_FUZZED(-87917) : _injected_loop_counter)) != 1, bool(bvec4(_injected_loop_counter != 1, _GLF_IDENTITY(true, _GLF_IDENTITY(true && (_GLF_IDENTITY(true, ! (! (true)))), ! (_GLF_IDENTITY(! (true && (_GLF_IDENTITY(true, ! (! (true))))), true && (! (true && (_GLF_IDENTITY(true, ! (! (true)))))))))), false, true))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_injected_loop_counter != 1, bool(bvec4(_injected_loop_counter != 1, true, false, true))), false, true), false))))))), false, false), _GLF_IDENTITY(true, ! (! (true)))))))))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, true)))) && true)))
      barrier();
    }
   do
    {
     do
      {
       barrier();
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      {
       do
        {
         do
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) || false) && (false)))))));
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), false, true, true))))));
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))
  {
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY((true ? (subgroup_local_id + 1) : _GLF_FUZZED(29937u)), ((true ? (subgroup_local_id + 1) : _GLF_FUZZED(29937u))) | ((true ? (subgroup_local_id + 1) : _GLF_FUZZED(29937u))))) % subgroup_size);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), (! (! (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))) && _GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_IDENTITY(false, bool(bvec3(false, true, false))), true))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))) && true))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), mix(vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))[0], 1.0 * ((_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))[0])), _GLF_FUZZED(-45.97)), vec2(_GLF_FUZZED(4861.6620), (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))[1]), bvec2(false, true))), _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))), vec2(mat3x4(clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), mix(vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))[0], 1.0 * ((_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))[0])), _GLF_FUZZED(-45.97)), vec2(_GLF_FUZZED(4861.6620), (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))[1]), bvec2(false, true))), _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)), vec4(_GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)), vec4(_GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 0.0, determinant(mat4(sqrt(1.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)), 0.0, 0.0, 1.0)))), mix(vec2(_GLF_FUZZED(3507.3337), _GLF_FUZZED(6.2)), vec2(_GLF_IDENTITY((injectionSwitch)[0], max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), vec2(0.0, 0.0) + (_GLF_IDENTITY((injectionSwitch), mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(30.95), _GLF_FUZZED(-64.93)), max(vec2(_GLF_FUZZED(30.95), _GLF_FUZZED(-64.93)), vec2(_GLF_FUZZED(30.95), _GLF_FUZZED(-64.93)))), vec2(((injectionSwitch))[0], _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)))), vec2(mat4x3((_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)))), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, abs(1.0), sqrt(1.0))))[1]), bvec2(true, true))))), clamp(_GLF_IDENTITY((injectionSwitch), vec2(0.0, 0.0) + (_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(30.95), _GLF_FUZZED(-64.93)), vec2(((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0))))[0], ((injectionSwitch))[1]), _GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(bvec2(true, true), false))))))), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(vec2(0.0, 0.0) + (_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(30.95), _GLF_IDENTITY(_GLF_FUZZED(-64.93), mix(float(_GLF_FUZZED(-64.93)), float(_GLF_FUZZED(-34.39)), bool(false)))), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true)))), (vec2(0.0, 0.0) + (_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(30.95), _GLF_IDENTITY(_GLF_FUZZED(-64.93), mix(float(_GLF_FUZZED(-64.93)), float(_GLF_FUZZED(-34.39)), bool(false)))), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))))) - vec2(0.0, 0.0))), mix(vec2((_GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(vec2(0.0, 0.0) + (_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(30.95), _GLF_IDENTITY(_GLF_FUZZED(-64.93), mix(float(_GLF_FUZZED(-64.93)), float(_GLF_FUZZED(-34.39)), bool(false)))), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true)))), (vec2(0.0, 0.0) + (_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(30.95), _GLF_IDENTITY(_GLF_FUZZED(-64.93), mix(float(_GLF_FUZZED(-64.93)), float(_GLF_FUZZED(-34.39)), bool(false)))), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))))) - vec2(0.0, 0.0))))[0], (_GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(vec2(0.0, 0.0) + (_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(30.95), _GLF_IDENTITY(_GLF_FUZZED(-64.93), mix(float(_GLF_FUZZED(-64.93)), float(_GLF_FUZZED(-34.39)), bool(false)))), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true)))), (vec2(0.0, 0.0) + (_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(30.95), _GLF_IDENTITY(_GLF_FUZZED(-64.93), mix(float(_GLF_FUZZED(-64.93)), float(_GLF_FUZZED(-34.39)), bool(false)))), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))))) - vec2(0.0, 0.0))))[1]), vec2(_GLF_FUZZED((+ 56.21)), _GLF_FUZZED(1.4)), bvec2(false, false))), _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) * vec2(1.0, 1.0)) + (_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(30.95), _GLF_FUZZED(-64.93)), vec2(((injectionSwitch))[0], (_GLF_IDENTITY((injectionSwitch), mat2(1.0) * ((injectionSwitch))))[1]), bvec2(true, true)))))))[_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, (0) | (0))), (~ (_GLF_IDENTITY(0, (0) | _GLF_IDENTITY((0), 0 ^ (_GLF_IDENTITY((0), ((0)) | ((0)))))))) - 0)))], mix(float(_GLF_FUZZED(-3945.9668)), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), vec2(0.0, 0.0) + (_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(30.95), _GLF_FUZZED(-64.93)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))))), clamp(_GLF_IDENTITY((injectionSwitch), vec2(0.0, 0.0) + (_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(30.95), _GLF_FUZZED(-64.93)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))))), _GLF_IDENTITY((injectionSwitch), vec2(0.0, 0.0) + (_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(30.95), _GLF_IDENTITY(_GLF_FUZZED(-64.93), mix(float(_GLF_IDENTITY(_GLF_FUZZED(-64.93), (_GLF_IDENTITY(_GLF_FUZZED(-64.93), 0.0 + (_GLF_FUZZED(-64.93)))) - 0.0)), float(_GLF_FUZZED(-34.39)), bool(false)))), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))))), _GLF_IDENTITY((injectionSwitch), vec2(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), min(0.0, 0.0))) + (_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(30.95), _GLF_FUZZED(-64.93)), vec2(((injectionSwitch))[0], (_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(-49.38), ((injectionSwitch))[1]), vec2(((injectionSwitch))[0], _GLF_FUZZED(-5.4)), bvec2(true, false))))[1]), _GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true)))), _GLF_IDENTITY(false, ! (! (false))), false)))))))))[0], (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), vec2(0.0, 0.0) + (_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(30.95), _GLF_FUZZED(-64.93)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), ! (! (bool(bool(true)))))), true))))), clamp(_GLF_IDENTITY((injectionSwitch), vec2(0.0, 0.0) + (_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(30.95), _GLF_FUZZED(-64.93)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))))), _GLF_IDENTITY((injectionSwitch), vec2(0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), min(_GLF_IDENTITY((injectionSwitch), mat2(1.0) * ((injectionSwitch))), (injectionSwitch))), mix(vec2(_GLF_FUZZED(30.95), _GLF_IDENTITY(_GLF_FUZZED(-64.93), mix(_GLF_IDENTITY(float(_GLF_FUZZED(-64.93)), clamp(_GLF_IDENTITY(float(_GLF_FUZZED(-64.93)), clamp(float(_GLF_FUZZED(-64.93)), float(_GLF_FUZZED(-64.93)), float(_GLF_FUZZED(-64.93)))), float(_GLF_FUZZED(-64.93)), float(_GLF_FUZZED(-64.93)))), float(_GLF_FUZZED(-34.39)), bool(false)))), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))))), _GLF_IDENTITY((injectionSwitch), vec2(0.0, 0.0) + (_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(30.95), (false ? _GLF_FUZZED((+ 5.9)) : _GLF_IDENTITY(_GLF_FUZZED(30.95), max(_GLF_FUZZED(30.95), _GLF_FUZZED(30.95))))), _GLF_FUZZED(-64.93)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), _GLF_IDENTITY(bvec2(true, true), _GLF_IDENTITY(bvec2(bvec4(bvec2(true, true), false, false)), bvec2(bvec3(bvec2(bvec4(bvec2(true, true), false, false)), _GLF_IDENTITY(false, false || (false))))))))))))[0]) - _GLF_ZERO(0.0, injectionSwitch.x))), bool(true))), min((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), injectionSwitch.x))))[0], (injectionSwitch)[0])), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))[0])), (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 do
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(true)), (_GLF_IDENTITY(bool(bool(true)), ! (! (bool(bool(true)))))) || false), ! (! (bool(bool(true)))))))))))
    {
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), ! (! ((_GLF_WRAPPED_IF_FALSE(false))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), _GLF_IDENTITY((bool(bvec2(false, true))) || false, ! (! ((bool(bvec2(false, true))) || false)))))))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         barrier();
        }
       do
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         buf[virtual_gid] = 1;
        }
       else
        {
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
          }
        }
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           barrier();
          }
        }
      }
    }
   else
    {
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)));
 do
  {
   if(subgroup_local_id + 1 < subgroup_size)
    {
     int i = 0;
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        {
         for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           barrier();
          }
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
          {
          }
         else
          {
           barrier();
          }
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         do
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))), false, true, false))))
                barrier();
               do
                {
                 barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             else
              {
              }
             do
              {
               if(_GLF_DEAD(false))
                {
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, _GLF_IDENTITY(int(int(_GLF_IDENTITY(0, max(0, 0)))), (int(int(_GLF_IDENTITY(0, max(0, 0))))) << 0))); _injected_loop_counter --)
                  {
                   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                    }
                   else
                    {
                     barrier();
                    }
                  }
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) || false), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) || false), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) || false), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) || false), (injectionSwitch.x > injectionSwitch.y))))))), true)), (bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) || false), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) || false), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) || false), (injectionSwitch.x > injectionSwitch.y))))))), true))) || false)))))))))));
          }
         barrier();
        }
      }
     else
      {
      }
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(0.0 + (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-5309.9824)))), max(0.0 + (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-5309.9824)))), 0.0 + (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-5309.9824))))))) > injectionSwitch.y))))
          {
          }
         else
          {
           barrier();
          }
        }
      }
     for(int _injected_loop_counter = (1 | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 ^ 0)); _injected_loop_counter --)
      {
       atomicStore(buf[next_virtual_gid], uint(2), _GLF_IDENTITY(4, (4) | 0), 64, 4);
      }
    }
   else
    {
     do
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
            barrier();
           barrier();
          }
        }
       else
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), true && (! (false)))), ((_GLF_IDENTITY(! (false), true && (! (false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
                barrier();
               if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(false, (false) || false)))))
                {
                }
               else
                {
                 do
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
                      {
                       for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.6), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(44.20)), bvec2(true, false))).x)), int(ivec2(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.6), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(44.20)), bvec2(true, false))).x)), 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                        {
                         if(_GLF_WRAPPED_IF_TRUE(true))
                          {
                           if(_GLF_WRAPPED_IF_FALSE(false))
                            {
                            }
                           else
                            {
                             do
                              {
                               barrier();
                              }
                             while(_GLF_WRAPPED_LOOP(false));
                            }
                          }
                         else
                          {
                          }
                        }
                      }
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 for(int _injected_loop_counter = int(_GLF_ONE(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(acosh(-1729.0567)))), injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     do
                      {
                       do
                        {
                         if(_GLF_WRAPPED_IF_FALSE(false))
                          {
                          }
                         else
                          {
                           barrier();
                          }
                        }
                       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                      }
                     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), true && (bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))))));
                    }
                   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
                    barrier();
                  }
                }
               else
                {
                }
               if(_GLF_DEAD(false))
                barrier();
              }
            }
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            {
             do
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
             for(int _injected_loop_counter = _GLF_IDENTITY(0, (0) - 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 | 1)); _injected_loop_counter ++)
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 barrier();
                }
               else
                {
                }
               if(_GLF_DEAD(false))
                barrier();
              }
            }
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), bool(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))); _injected_loop_counter --)
        {
         atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(2, ~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (2), (true ? ~ (_GLF_IDENTITY(2, _GLF_IDENTITY((2), ((2)) | ((2))) << 0)) : _GLF_IDENTITY(_GLF_FUZZED(-72558), ~ (~ (_GLF_FUZZED(-72558)))))), min(_GLF_IDENTITY(~ (2), (true ? ~ (_GLF_IDENTITY(2, _GLF_IDENTITY((2), ((2)) | ((2))) << 0)) : _GLF_IDENTITY(_GLF_FUZZED(-72558), ~ (~ (_GLF_FUZZED(-72558)))))), _GLF_IDENTITY(_GLF_IDENTITY(~ (2), (true ? ~ (_GLF_IDENTITY(2, _GLF_IDENTITY((2), ((2)) | ((2))) << 0)) : _GLF_IDENTITY(_GLF_FUZZED(-72558), ~ (~ (_GLF_FUZZED(-72558)))))), int(int(_GLF_IDENTITY(~ (2), (true ? ~ (_GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY((2), ((2)) | ((2))) << 0), clamp(_GLF_IDENTITY(2, _GLF_IDENTITY((2), ((2)) | ((2))) << 0), _GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY((2), ((2)) | ((2))) << 0), 0 ^ (_GLF_IDENTITY(2, _GLF_IDENTITY((2), ((2)) | ((2))) << 0))), _GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY((2), ((2)) | ((2))) << 0), max(_GLF_IDENTITY(2, _GLF_IDENTITY((2), ((2)) | ((2))) << 0), _GLF_IDENTITY(2, _GLF_IDENTITY((2), ((2)) | ((2))) << 0)))))) : _GLF_IDENTITY(_GLF_FUZZED(-72558), ~ (~ (_GLF_FUZZED(-72558)))))))))))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(~ (2), (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false) ? ~ (_GLF_IDENTITY(2, _GLF_IDENTITY((2), ((2)) | ((_GLF_IDENTITY(2, (2) << 0)))) << 0)) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-72558, ~ (~ (_GLF_IDENTITY(-72558, (false ? _GLF_FUZZED(-27825) : -72558)))))), ~ _GLF_IDENTITY((~ (_GLF_FUZZED(-72558))), 0 | ((~ (_GLF_FUZZED(-72558))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(~ (2), (true ? ~ (_GLF_IDENTITY(2, _GLF_IDENTITY((2), ((2)) | ((_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) >> 0)) | (2))))) << 0)) : _GLF_IDENTITY(_GLF_FUZZED(-72558), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_FUZZED(-72558)), ~ (~ (~ (_GLF_FUZZED(-72558)))))), ((_GLF_IDENTITY(~ (_GLF_FUZZED(-72558)), ~ (_GLF_IDENTITY(~ (~ (_GLF_FUZZED(-72558))), ~ (~ (~ (~ (_GLF_FUZZED(-72558)))))))))) + 0))))), max((_GLF_IDENTITY(~ (2), (true ? ~ (_GLF_IDENTITY(2, _GLF_IDENTITY((2), ((2)) | ((2))) << 0)) : _GLF_IDENTITY(_GLF_FUZZED(-72558), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_FUZZED(-72558), (_GLF_FUZZED(-72558)) ^ 0)), min(~ (_GLF_FUZZED(-72558)), ~ (_GLF_FUZZED(-72558))))))))), _GLF_IDENTITY((_GLF_IDENTITY(~ (2), (true ? ~ (_GLF_IDENTITY(2, _GLF_IDENTITY((2), ((2)) | _GLF_IDENTITY(((_GLF_IDENTITY(2, (2) + 0))), min(((_GLF_IDENTITY(2, (2) + 0))), _GLF_IDENTITY(((_GLF_IDENTITY(2, (2) + 0))), ~ (~ (((_GLF_IDENTITY(2, (2) + 0))))))))) << 0)) : _GLF_IDENTITY(_GLF_FUZZED(-72558), ~ (_GLF_IDENTITY(~ (_GLF_FUZZED(-72558)), max(_GLF_IDENTITY(~ (_GLF_FUZZED(_GLF_IDENTITY(-72558, clamp(-72558, -72558, -72558)))), (~ (_GLF_FUZZED(-72558))) >> 0), ~ (_GLF_FUZZED(-72558))))))))), _GLF_IDENTITY((true ? (_GLF_IDENTITY(~ (2), (true ? ~ (_GLF_IDENTITY(2, _GLF_IDENTITY((2), ((2)) | _GLF_IDENTITY(((_GLF_IDENTITY(2, (2) + 0))), min(((_GLF_IDENTITY(2, (2) + 0))), _GLF_IDENTITY(((_GLF_IDENTITY(2, (2) + 0))), _GLF_IDENTITY(~ (~ (((_GLF_IDENTITY(2, (2) + 0))))), int(ivec3(~ (~ (((_GLF_IDENTITY(2, (2) + 0))))), 1, _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) >> 0)))))))) << 0)) : _GLF_IDENTITY(_GLF_FUZZED(-72558), ~ (_GLF_IDENTITY(~ (_GLF_FUZZED(-72558)), max(_GLF_IDENTITY(~ (_GLF_FUZZED(-72558)), (~ (_GLF_FUZZED(-72558))) >> 0), ~ (_GLF_FUZZED(-72558))))))))) : _GLF_FUZZED(_injected_loop_counter)), ~ (~ (_GLF_IDENTITY((true ? (_GLF_IDENTITY(~ (2), (true ? ~ (_GLF_IDENTITY(2, _GLF_IDENTITY((2), ((2)) | _GLF_IDENTITY(((_GLF_IDENTITY(2, (2) + 0))), min(((_GLF_IDENTITY(2, (2) + 0))), _GLF_IDENTITY(((_GLF_IDENTITY(2, (2) + 0))), _GLF_IDENTITY(~ (~ (((_GLF_IDENTITY(2, (2) + 0))))), int(ivec3(~ (~ (((_GLF_IDENTITY(2, (2) + 0))))), 1, _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) >> 0)))))))) << 0)) : _GLF_IDENTITY(_GLF_FUZZED(-72558), ~ (_GLF_IDENTITY(~ (_GLF_FUZZED(-72558)), max(_GLF_IDENTITY(~ (_GLF_FUZZED(-72558)), (~ (_GLF_FUZZED(-72558))) >> 0), ~ (_GLF_FUZZED(-72558))))))))) : _GLF_FUZZED(_injected_loop_counter)), 1 * (_GLF_IDENTITY((true ? (_GLF_IDENTITY(~ (2), (true ? ~ (_GLF_IDENTITY(2, _GLF_IDENTITY((2), ((2)) | _GLF_IDENTITY(((_GLF_IDENTITY(2, (2) + 0))), min(((_GLF_IDENTITY(2, (2) + 0))), _GLF_IDENTITY(((_GLF_IDENTITY(2, (2) + 0))), _GLF_IDENTITY(~ (~ (((_GLF_IDENTITY(2, (2) + 0))))), int(ivec3(~ (~ (((_GLF_IDENTITY(2, (2) + 0))))), 1, _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) >> 0)))))))) << 0)) : _GLF_IDENTITY(_GLF_FUZZED(-72558), ~ (_GLF_IDENTITY(~ (_GLF_FUZZED(-72558)), max(_GLF_IDENTITY(~ (_GLF_FUZZED(-72558)), (~ (_GLF_FUZZED(-72558))) >> 0), ~ (_GLF_FUZZED(-72558))))))))) : _GLF_FUZZED(_injected_loop_counter)), 0 + ((true ? (_GLF_IDENTITY(~ (2), (true ? ~ (_GLF_IDENTITY(2, _GLF_IDENTITY((2), ((2)) | _GLF_IDENTITY(((_GLF_IDENTITY(2, (2) + 0))), min(((_GLF_IDENTITY(2, (2) + 0))), _GLF_IDENTITY(((_GLF_IDENTITY(2, (2) + 0))), _GLF_IDENTITY(~ (~ (((_GLF_IDENTITY(2, (2) + 0))))), int(ivec3(~ (~ (((_GLF_IDENTITY(2, (2) + 0))))), 1, _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) >> 0)))))))) << 0)) : _GLF_IDENTITY(_GLF_FUZZED(-72558), ~ (_GLF_IDENTITY(~ (_GLF_FUZZED(-72558)), max(_GLF_IDENTITY(~ (_GLF_FUZZED(-72558)), (~ (_GLF_FUZZED(-72558))) >> 0), ~ (_GLF_FUZZED(-72558))))))))) : _GLF_FUZZED(_injected_loop_counter))))))))))))) | ((_GLF_IDENTITY(~ (2), (true ? ~ (_GLF_IDENTITY(2, _GLF_IDENTITY((2), ((_GLF_IDENTITY(2, min(2, 2)))) | _GLF_IDENTITY(((2)), clamp(((2)), ((2)), _GLF_IDENTITY(((_GLF_IDENTITY(2, (2) / int(_GLF_ONE(1.0, injectionSwitch.y))))), (((2))) / 1)))) << 0)) : _GLF_IDENTITY(_GLF_FUZZED(-72558), ~ (~ (_GLF_FUZZED(-72558))))))))), (_GLF_IDENTITY(~ (2), (true ? ~ (_GLF_IDENTITY(2, _GLF_IDENTITY((2), ((2)) | ((2))) << 0)) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-72558), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-72558), (_GLF_FUZZED(-72558)) | (_GLF_FUZZED(-72558))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-72558), (_GLF_FUZZED(-72558)) >> 0), (true ? _GLF_IDENTITY(_GLF_FUZZED(-72558), (_GLF_FUZZED(-72558)) >> 0) : _GLF_FUZZED(_injected_loop_counter)))) >> 0), _GLF_IDENTITY(_GLF_FUZZED(-72558), min(_GLF_FUZZED(-72558), _GLF_FUZZED(-72558))), _GLF_FUZZED(-72558))), ~ (~ (_GLF_FUZZED(-72558))))))), (_GLF_IDENTITY(~ (2), (true ? ~ (_GLF_IDENTITY(_GLF_IDENTITY(2, (2) / 1), _GLF_IDENTITY((2), (_GLF_IDENTITY((2), ~ (~ ((2))))) | ((2))) << 0)) : _GLF_IDENTITY(_GLF_FUZZED(-72558), ~ (~ (_GLF_FUZZED(-72558))))))))))), 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, _GLF_IDENTITY((false ? _GLF_FUZZED(-12371) : _GLF_IDENTITY(_GLF_IDENTITY(4, max(4, 4)), (_GLF_IDENTITY(4, max(4, 4))) + 0)), (_GLF_IDENTITY((false ? _GLF_FUZZED(-12371) : _GLF_IDENTITY(4, max(4, 4))), ((false ? _GLF_FUZZED(-12371) : _GLF_IDENTITY(4, max(4, 4)))) | 0)) << (0 << _GLF_IDENTITY(int(0), int(0)))))) | (4)), (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, _GLF_IDENTITY((false ? _GLF_FUZZED(-12371) : _GLF_IDENTITY(_GLF_IDENTITY(4, max(4, 4)), (_GLF_IDENTITY(4, max(4, 4))) + 0)), (_GLF_IDENTITY((false ? _GLF_FUZZED(-12371) : _GLF_IDENTITY(4, max(4, 4))), ((false ? _GLF_FUZZED(-12371) : _GLF_IDENTITY(4, max(4, 4)))) | 0)) << (0 << _GLF_IDENTITY(int(0), int(0)))))) | (4))) | (0 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), int(int(int(0))))))));
        }
      }
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)))) || _GLF_IDENTITY(false, true && (false))), (injectionSwitch.x > injectionSwitch.y))))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false)))))))
          barrier();
        }
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       else
        {
        }
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, (1) | (76542 & 0))); _injected_loop_counter ++)
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
          barrier();
        }
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
}
