#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_21 {
 uvec2 _f0;
 uvec2 _f1;
 int _f2;
 bvec4 _f3;
 mat2x4 _f4;
 vec3 _f5;
} ;

struct _GLF_struct_20 {
 mat2x4 _f0;
} ;

struct _GLF_struct_19 {
 bvec3 _f0;
 vec3 _f1;
 ivec4 _f2;
 vec2 _f3;
 uint virtual_gid;
 bvec4 _f4;
 vec3 _f5;
 int _f6;
} ;

struct _GLF_struct_18 {
 mat3 _f0;
 mat3 _f1;
 mat3x4 _f2;
 ivec4 _f3;
 mat3x4 _f4;
} ;

struct _GLF_struct_17 {
 mat2x3 _f0;
 uvec3 _f1;
 ivec2 _f2;
 mat2 _f3;
 ivec4 _f4;
 uvec2 _f5;
 mat2x3 _f6;
} ;

struct _GLF_struct_22 {
 _GLF_struct_17 _f0;
 _GLF_struct_18 _f1;
 _GLF_struct_19 _f2;
 _GLF_struct_20 _f3;
 float _f4;
 _GLF_struct_21 _f5;
 mat2 _f6;
} ;

struct _GLF_struct_23 {
 _GLF_struct_22 _f0;
} ;

struct _GLF_struct_14 {
 uvec4 _f0;
 ivec2 _f1;
 float _f2;
 ivec3 _f3;
} ;

struct _GLF_struct_13 {
 vec2 _f0;
} ;

struct _GLF_struct_15 {
 _GLF_struct_13 _f0;
 _GLF_struct_14 _f1;
 float _f2;
 uint subgroup_id;
} ;

struct _GLF_struct_16 {
 bvec2 _f0;
 vec3 _f1;
 ivec2 _f2;
 mat2 _f3;
 _GLF_struct_15 _f4;
} ;

struct _GLF_struct_10 {
 bvec3 _f0;
 mat2x3 _f1;
} ;

struct _GLF_struct_9 {
 int _f0;
} ;

struct _GLF_struct_8 {
 int _f0;
} ;

struct _GLF_struct_11 {
 mat3 _f0;
 mat3x4 _f1;
 _GLF_struct_8 _f2;
 int _f3;
 _GLF_struct_9 _f4;
 _GLF_struct_10 _f5;
} ;

struct _GLF_struct_6 {
 mat4 _f0;
} ;

struct _GLF_struct_5 {
 ivec3 _f0;
 bvec4 _f1;
 uint workgroup_base;
 ivec3 _f2;
 mat3x4 _f3;
 mat3x4 _f4;
} ;

struct _GLF_struct_7 {
 _GLF_struct_5 _f0;
 mat2 _f1;
 _GLF_struct_6 _f2;
 ivec4 _f3;
} ;

struct _GLF_struct_12 {
 mat4x3 _f0;
 _GLF_struct_7 _f1;
 _GLF_struct_11 _f2;
 vec2 _f3;
} ;

struct _GLF_struct_2 {
 ivec2 _f0;
 vec4 _f1;
 bvec4 _f2;
 bvec2 _f3;
} ;

struct _GLF_struct_1 {
 uvec4 _f0;
 ivec4 _f1;
 bool _f2;
 bvec3 _f3;
} ;

struct _GLF_struct_3 {
 mat2 _f0;
 _GLF_struct_1 _f1;
 _GLF_struct_2 _f2;
 float _f3;
} ;

struct _GLF_struct_0 {
 bool _f0;
 vec4 _f1;
 vec3 _f2;
 float _f3;
} ;

struct _GLF_struct_4 {
 uint workgroup_size;
 mat2x4 _f0;
 _GLF_struct_0 _f1;
 uint _f2;
 _GLF_struct_3 _f3;
 mat4x2 _f4;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 _GLF_struct_16 _GLF_struct_replacement_16 = _GLF_struct_16(_GLF_IDENTITY(bvec2(true), bvec2(bvec2(_GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(bvec2(bvec4(bvec2(true), false, true)), bvec2(bvec4(bvec2(bvec4(bvec2(true), false, true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))), vec3(1.0), ivec2(1), mat2(1.0), _GLF_struct_15(_GLF_struct_13(vec2(1.0)), _GLF_struct_14(uvec4(1u), ivec2(1), 1.0, ivec3(1)), 1.0, gl_SubgroupID));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y), true && ((injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-2.1), _GLF_FUZZED(9.8)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-2.1), _GLF_FUZZED(9.8)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y, float(vec2(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-2.1), _GLF_FUZZED(9.8)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y, 1.0))) : _GLF_FUZZED(1476.5415)))))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_4 _GLF_struct_replacement_4 = _GLF_struct_4(gl_WorkGroupSize.x, mat2x4(1.0), _GLF_struct_0(true, vec4(1.0), _GLF_IDENTITY(vec3(1.0), max(vec3(1.0), vec3(1.0))), 1.0), 1u, _GLF_struct_3(mat2(1.0), _GLF_struct_1(uvec4(1u), ivec4(1), true, bvec3(true)), _GLF_struct_2(ivec2(1), vec4(1.0), bvec4(true), bvec2(true)), _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, float(mat3x2(1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-0.0)), float(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-354.433) : 0.0))), bool(true))), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(497.475) : 0.0)))))), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), 0.0, 0.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7.0)), float(1.0), bool(true))), (true ? _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)) : _GLF_FUZZED(ldexp(-3121.2450, 35535)))), 1.0))), mat4x2(1.0));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4(bool(injectionSwitch.x > injectionSwitch.y), false, true, false)), bool(bvec3(bool(bvec4(bool(injectionSwitch.x > injectionSwitch.y), false, true, false)), true, false)))))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, true && (false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))) && true), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))) && true), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))) && true), true)))) || false)))))), (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))))))) && true), _GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) || false)), (injectionSwitch.x > injectionSwitch.y))) && true)))))), (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) || false)), (injectionSwitch.x > injectionSwitch.y))) && true)))))), true && (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) || false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))) && true))))))))) && true), (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(-1.2)))))) && true))))))) && true)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(atan(vec2(-81.89, 929.756), vec2(2.2, -28.62))) : injectionSwitch)).y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (true))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec3(bvec2(_GLF_DEAD(false), false), false))), false, true)), bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec3(bvec2(_GLF_DEAD(false), false), false))), false, true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), true && (! (! (injectionSwitch.x > injectionSwitch.y))))))))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)), true && (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y), true))), false, true))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (! (false))))), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, ! (! (false)))))), (! (! (! (_GLF_IDENTITY(false, ! (! (false))))))) && true)))) || ((injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(bool(bool(! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))))), (bool(bool(! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))))) && true))), ((_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(bool(bool(! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))))), (bool(bool(! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))))) && true)))) && true)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (false ? _GLF_FUZZED(vec2(-1457.7086, -799.496)) : mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y))))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false ? _GLF_FUZZED(-97.78) : injectionSwitch.y, float(mat4(false ? _GLF_FUZZED(-97.78) : injectionSwitch.y, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))), mat3(1.0) * (vec3(1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(min(0.0, 0.0), max(min(0.0, 0.0), min(0.0, 0.0))))))), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(log(asin(1.1))))), 0.0, 0.0))), 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, log(1.0))), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, log(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-903.542)), float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), bool(true))))))), 0.0, 1.0, 1.0, 0.0, 0.0)))))), false || (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-97.78) : injectionSwitch.y)))))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           barrier();
          }
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), false || (_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-0.9, 550.784)))).x > injectionSwitch.y)), true)), (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) && true))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, true, false)), (bool(bvec4(_GLF_DEAD(false), false, true, false))) || false))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / _GLF_IDENTITY(dot(vec3(0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)))), _GLF_IDENTITY(float(vec4(injectionSwitch.x, 1.0, 1.0, 1.0)), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(pow(-4568.2248, float(true))))) + (float(vec4(injectionSwitch.x, 1.0, 1.0, 1.0))))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))))).y, clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) / vec2(1.0, 1.0))), mat2(1.0) * (max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) / vec2(1.0, 1.0))))))))).y, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))), (true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))) * _GLF_IDENTITY(mat2(1.0), mat2(mat2x4(mat2(1.0))))))).y, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), mat2(1.0) * (injectionSwitch))))).y))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_IDENTITY(false, false || (false)))))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)))))) && true))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8.7), _GLF_FUZZED(-801.133)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), true, false, false)), (bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false, false))) || false)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, _GLF_IDENTITY(false, true && (false)) || (_GLF_IDENTITY((false) || false, true && ((false) || false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), false)))) && true)) || false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 _GLF_struct_12 _GLF_struct_replacement_12 = _GLF_struct_12(mat4x3(1.0), _GLF_struct_7(_GLF_struct_5(ivec3(1), bvec4(_GLF_IDENTITY(true, ! (! _GLF_IDENTITY(_GLF_IDENTITY((true), ! (_GLF_IDENTITY(! ((true)), (! ((true))) || false))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), true, false, false)), true && (bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), true, false, false)))))) || ((true)))))), _GLF_struct_replacement_4.workgroup_size * workgroup_id, ivec3(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> (0 >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(3)) | 0), (_GLF_IDENTITY(int(3), (int(3)) | 0)) - 0)))), _GLF_IDENTITY((false ? _GLF_FUZZED(23429) : 1), (_GLF_IDENTITY((false ? _GLF_FUZZED(23429) : 1), clamp((false ? _GLF_FUZZED(23429) : 1), (false ? _GLF_FUZZED(23429) : 1), (false ? _GLF_FUZZED(23429) : 1)))) | 0)), _GLF_IDENTITY(1, (1) + 0), 1))), mat3x4(1.0), mat3x4(1.0)), mat2(1.0), _GLF_struct_6(_GLF_IDENTITY(_GLF_IDENTITY(mat4(1.0), _GLF_IDENTITY((true ? mat4(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))))))) : _GLF_FUZZED(mat4(6.9, 9115.2798, 1.8, 8.6, 1.9, -0.6, 3889.4513, 9245.1179, -4.8, _GLF_IDENTITY(4428.9813, clamp(4428.9813, 4428.9813, 4428.9813)), -7274.5736, -6408.3969, 3.3, -318.745, -710.519, 9799.1381))), transpose(transpose((true ? mat4(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))))))) : _GLF_FUZZED(mat4(6.9, 9115.2798, 1.8, 8.6, 1.9, -0.6, 3889.4513, 9245.1179, -4.8, _GLF_IDENTITY(4428.9813, clamp(4428.9813, 4428.9813, 4428.9813)), -7274.5736, -6408.3969, 3.3, -318.745, -710.519, 9799.1381))))))), (_GLF_IDENTITY(mat4(1.0), _GLF_IDENTITY((true ? mat4(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))))))) : _GLF_FUZZED(mat4(6.9, 9115.2798, 1.8, 8.6, 1.9, -0.6, 3889.4513, 9245.1179, -4.8, _GLF_IDENTITY(4428.9813, clamp(4428.9813, 4428.9813, 4428.9813)), -7274.5736, -6408.3969, 3.3, -318.745, -710.519, 9799.1381))), transpose(transpose((true ? mat4(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))))))) : _GLF_FUZZED(mat4(6.9, 9115.2798, 1.8, 8.6, 1.9, -0.6, 3889.4513, 9245.1179, -4.8, _GLF_IDENTITY(4428.9813, clamp(4428.9813, 4428.9813, _GLF_IDENTITY(4428.9813, min(_GLF_IDENTITY(4428.9813, max(4428.9813, 4428.9813)), _GLF_IDENTITY(4428.9813, max(4428.9813, 4428.9813)))))), -7274.5736, -6408.3969, 3.3, -318.745, -710.519, 9799.1381)))))))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(ivec4(1), clamp(_GLF_IDENTITY(ivec4(1), (ivec4(1)) - ivec4(0, 0, 0, 0)), ivec4(1), ivec4(1)))), _GLF_struct_11(mat3(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED((workgroup_id , _GLF_IDENTITY(_GLF_IDENTITY(-0.8, min(-0.8, -0.8)), (-0.8) / 1.0)))))), mat3x4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-3.0) : 1.0))), _GLF_struct_8(1), 1, _GLF_struct_9(1), _GLF_struct_10(bvec3(true), mat2x3(1.0))), vec2(_GLF_IDENTITY(1.0, (1.0) - 0.0)));
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) || false), false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.x > injectionSwitch.y) || false)) || false), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_IDENTITY(false, ! (! (false))))) || false)) && _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)), false))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(344.462)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), injectionSwitch.y)), 1.0 * (injectionSwitch.y))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 _GLF_struct_23 _GLF_struct_replacement_23 = _GLF_struct_23(_GLF_struct_22(_GLF_struct_17(mat2x3(1.0), uvec3(1u), ivec2(1), mat2(1.0), ivec4(1), uvec2(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec4(1u, 1u, 0u, 1u), (_GLF_IDENTITY(uvec4(1u, 1u, 0u, 1u), min(uvec4(1u, 1u, 0u, 1u), _GLF_IDENTITY(uvec4(1u, 1u, 0u, 1u), (uvec4(1u, 1u, 0u, 1u)) | (uvec4(1u, 1u, _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))), _GLF_IDENTITY(1u, (1u) + 0u))))))) | (_GLF_IDENTITY(uvec4(1u, 1u, 0u, _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, max(1u, 1u)), 1u))), uvec4(0u, 0u, 0u, 0u) | (uvec4(1u, 1u, 0u, 1u)))))))) | (1u))), mat2x3(1.0)), _GLF_struct_18(mat3(1.0), mat3(1.0), mat3x4(1.0), ivec4(1), mat3x4(1.0)), _GLF_struct_19(bvec3(true), _GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, 1.0 * (1.0))), (_GLF_IDENTITY(vec3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-3.0))), 1.0, 0.0, round(length(normalize(1.0)))))), 1.0 * (1.0))), vec3(0.0, 0.0, 0.0) + (vec3(_GLF_IDENTITY(1.0, 1.0 * (1.0)))))) * vec3(1.0, 1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, (1) | 0)), (_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, 0 ^ (1))), (ivec4(1)) | ivec4(0, 0, 0, 0))) - ivec4(_GLF_IDENTITY(0, ~ (~ (0))), 0, 0, 0)), (_GLF_IDENTITY(ivec4(1), (_GLF_IDENTITY(ivec4(1), (ivec4(1)) | ivec4(0, 0, 0, 0))) - _GLF_IDENTITY(ivec4(0, 0, 0, 0), max(ivec4(0, 0, 0, 0), ivec4(0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-26069)))) << 0), 0, 0))))) + ivec4(0, 0, 0, 0)), vec2(1.0), _GLF_struct_replacement_12._f1._f0.workgroup_base + _GLF_struct_replacement_16._f4.subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)), bvec4(true), vec3(1.0), 1), _GLF_struct_20(mat2x4(_GLF_IDENTITY(1.0, float(vec2(1.0, 0.0))))), 1.0, _GLF_struct_21(uvec2(1u), uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u ^ (1u)), (_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, (1u) / 1u))))) >> 0u), (_GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, (1u) / 1u))))) >> 0u), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, (1u) / 1u))))) >> 0u), ~ (~ (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, (1u) / 1u))))) >> 0u))))) | 0u, ((_GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, (1u) / 1u))))) >> 0u), ~ (~ (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, (1u) / 1u))))) >> 0u))))) | 0u) | (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, (1u) / 1u))))) >> 0u), ~ (~ (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, (1u) / 1u))))) >> 0u))))) | 0u, ((_GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, (1u) / 1u))))) >> 0u), ~ (~ (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, (1u) / 1u))))) >> 0u))))) | 0u) | 0u))))) ^ 0u)), 1, bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), true))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))) && (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (_GLF_IDENTITY(true, ! (! (true))))), ! (! (! (! (true))))))))), true))), (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (_GLF_IDENTITY(true, ! (! (true))))), ! (! (! (! (true))))))))), true))), ! (! (_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (_GLF_IDENTITY(true, ! (! (true))))), ! (! (! (! (true))))))))), true))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), mat2x4(1.0), vec3(1.0)), mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0)))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, _GLF_IDENTITY(tan(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)))), float(mat2x4(tan(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)))), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))), tan(0.0), 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 0.0, 0.0))), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, cos(0.0), 0.0))).x < injectionSwitch.y)) && (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec4(-4663.4296, -71.94, -1335.2705, -283.364).w), _GLF_FUZZED(-42.38)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec4(-4663.4296, -71.94, -1335.2705, -283.364).w), _GLF_FUZZED(-42.38)), vec2(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(3.5), ((injectionSwitch))[1]), vec2(_GLF_IDENTITY(((injectionSwitch))[0], mix(float(((injectionSwitch))[0]), float(_GLF_FUZZED(-316.672)), bool(false))), _GLF_FUZZED(38.27)), bvec2(true, false)))))[0], (injectionSwitch)[1]), bvec2(true, true))).y))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * abs(sqrt(1.0))) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * abs(sqrt(1.0))) > injectionSwitch.y)))))) && true)) && true))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), (_GLF_IDENTITY(bool(true), ! (! (bool(true))))) || false))), _GLF_IDENTITY(false, bool(bvec3(false, true, true)))))), bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), (_GLF_IDENTITY(bool(true), ! (! (bool(true))))) || false))), _GLF_IDENTITY(false, bool(bvec3(false, true, true))))))))), true, true, false)), false || _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(false, bool(bvec3(false, true, true)))))), true, true, false)), bool(bool(bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))))))))), true, true, false)))))), false || ((_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(false, bool(bvec3(false, true, true)))))), true, true, false)), bool(bool(bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))))))))), true, true, false)))))))))), false, false)))))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, max(_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, min(_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, 0u | (_GLF_struct_replacement_12._f1._f0.workgroup_base)), _GLF_struct_replacement_12._f1._f0.workgroup_base)), _GLF_struct_replacement_12._f1._f0.workgroup_base)), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, max(_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, min(_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, 0u | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, uint(_GLF_IDENTITY(uint(_GLF_struct_replacement_12._f1._f0.workgroup_base), (uint(_GLF_struct_replacement_12._f1._f0.workgroup_base)) | 0u)))), ((_GLF_struct_replacement_12._f1._f0.workgroup_base)) - 0u)), _GLF_struct_replacement_12._f1._f0.workgroup_base)), _GLF_struct_replacement_12._f1._f0.workgroup_base)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, max(_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, min(_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, 0u | (_GLF_struct_replacement_12._f1._f0.workgroup_base)), _GLF_struct_replacement_12._f1._f0.workgroup_base)), _GLF_struct_replacement_12._f1._f0.workgroup_base)), (_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, max(_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, min(_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, 0u | (_GLF_struct_replacement_12._f1._f0.workgroup_base)), _GLF_struct_replacement_12._f1._f0.workgroup_base)), _GLF_struct_replacement_12._f1._f0.workgroup_base))) << 0u), _GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, max(_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, min(_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, 0u | (_GLF_struct_replacement_12._f1._f0.workgroup_base)), _GLF_struct_replacement_12._f1._f0.workgroup_base)), _GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, max(_GLF_struct_replacement_12._f1._f0.workgroup_base, _GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, 0u | (_GLF_struct_replacement_12._f1._f0.workgroup_base)))))), _GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, max(_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, min(_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, 0u | (_GLF_struct_replacement_12._f1._f0.workgroup_base)), _GLF_struct_replacement_12._f1._f0.workgroup_base)), _GLF_struct_replacement_12._f1._f0.workgroup_base)))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, max(_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, min(_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, 0u | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, uint(_GLF_IDENTITY(uint(_GLF_struct_replacement_12._f1._f0.workgroup_base), (uint(_GLF_struct_replacement_12._f1._f0.workgroup_base)) | 0u)))), ((_GLF_struct_replacement_12._f1._f0.workgroup_base)) - 0u)), _GLF_struct_replacement_12._f1._f0.workgroup_base)), _GLF_struct_replacement_12._f1._f0.workgroup_base)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, max(_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, min(_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, 0u | (_GLF_struct_replacement_12._f1._f0.workgroup_base)), _GLF_struct_replacement_12._f1._f0.workgroup_base)), _GLF_struct_replacement_12._f1._f0.workgroup_base)), (_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, max(_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, min(_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, 0u | (_GLF_struct_replacement_12._f1._f0.workgroup_base)), _GLF_struct_replacement_12._f1._f0.workgroup_base)), _GLF_struct_replacement_12._f1._f0.workgroup_base))) << 0u), _GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, max(_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, min(_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, 0u | (_GLF_struct_replacement_12._f1._f0.workgroup_base)), _GLF_struct_replacement_12._f1._f0.workgroup_base)), _GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, max(_GLF_struct_replacement_12._f1._f0.workgroup_base, _GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, 0u | (_GLF_struct_replacement_12._f1._f0.workgroup_base)))))), _GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, max(_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, min(_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, 0u | (_GLF_struct_replacement_12._f1._f0.workgroup_base)), _GLF_struct_replacement_12._f1._f0.workgroup_base)), _GLF_struct_replacement_12._f1._f0.workgroup_base)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, max(_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, min(_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, 0u | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, uint(_GLF_IDENTITY(uint(_GLF_struct_replacement_12._f1._f0.workgroup_base), (uint(_GLF_struct_replacement_12._f1._f0.workgroup_base)) | 0u)))), ((_GLF_struct_replacement_12._f1._f0.workgroup_base)) - 0u)), _GLF_struct_replacement_12._f1._f0.workgroup_base)), _GLF_struct_replacement_12._f1._f0.workgroup_base)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, max(_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, min(_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, 0u | (_GLF_struct_replacement_12._f1._f0.workgroup_base)), _GLF_struct_replacement_12._f1._f0.workgroup_base)), _GLF_struct_replacement_12._f1._f0.workgroup_base)), (_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, max(_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, min(_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, 0u | (_GLF_struct_replacement_12._f1._f0.workgroup_base)), _GLF_struct_replacement_12._f1._f0.workgroup_base)), _GLF_struct_replacement_12._f1._f0.workgroup_base))) << 0u), _GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, max(_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, min(_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, 0u | (_GLF_struct_replacement_12._f1._f0.workgroup_base)), _GLF_struct_replacement_12._f1._f0.workgroup_base)), _GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, max(_GLF_struct_replacement_12._f1._f0.workgroup_base, _GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, 0u | (_GLF_struct_replacement_12._f1._f0.workgroup_base)))))), _GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, max(_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, min(_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, 0u | (_GLF_struct_replacement_12._f1._f0.workgroup_base)), _GLF_struct_replacement_12._f1._f0.workgroup_base)), _GLF_struct_replacement_12._f1._f0.workgroup_base)))))), (_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, max(_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, min(_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, 0u | (_GLF_struct_replacement_12._f1._f0.workgroup_base)), _GLF_struct_replacement_12._f1._f0.workgroup_base)), _GLF_struct_replacement_12._f1._f0.workgroup_base))) >> 0u), 1u, 1u), max(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, max(_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, 0u | (_GLF_struct_replacement_12._f1._f0.workgroup_base)), (_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, 0u | (_GLF_struct_replacement_12._f1._f0.workgroup_base))) ^ 0u), _GLF_struct_replacement_12._f1._f0.workgroup_base)), _GLF_struct_replacement_12._f1._f0.workgroup_base)), (_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, max(_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, 1u * (_GLF_struct_replacement_12._f1._f0.workgroup_base)), 0u | (_GLF_struct_replacement_12._f1._f0.workgroup_base)), _GLF_struct_replacement_12._f1._f0.workgroup_base)), _GLF_struct_replacement_12._f1._f0.workgroup_base))) >> 0u), 1u, 1u), max(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, max(_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, min(_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, 0u | (_GLF_struct_replacement_12._f1._f0.workgroup_base)), _GLF_struct_replacement_12._f1._f0.workgroup_base)), _GLF_struct_replacement_12._f1._f0.workgroup_base)), (_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, (false ? _GLF_IDENTITY(_GLF_FUZZED(189744u), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_FUZZED(189744u), (_GLF_FUZZED(189744u)) - 0u), uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(50.33))))), _GLF_IDENTITY(1u, ~ (~ (1u)))), _GLF_IDENTITY((uvec3(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(189744u, uint(uint(189744u)))), (_GLF_FUZZED(189744u)) - 0u), uint(_GLF_ONE(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), 1u)), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY((uvec3(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(189744u, uint(uint(189744u)))), (_GLF_FUZZED(189744u)) - 0u), uint(_GLF_ONE(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), 1u)), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY((uvec3(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(189744u, uint(uint(189744u)))), (_GLF_FUZZED(189744u)) - 0u), uint(_GLF_ONE(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), 1u)), ((uvec3(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(189744u, uint(uint(189744u)))), (_GLF_FUZZED(189744u)) - 0u), uint(_GLF_ONE(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), 1u))) >> uvec3(0u, 0u, 0u)))))) << uvec3(0u, 0u, 0u)))) : _GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, (_GLF_struct_replacement_12._f1._f0.workgroup_base) ^ 0u))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, 0u | (_GLF_struct_replacement_12._f1._f0.workgroup_base)), max(_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, 0u | (_GLF_struct_replacement_12._f1._f0.workgroup_base)), _GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, 0u | (_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, (_GLF_struct_replacement_12._f1._f0.workgroup_base) | (_GLF_struct_replacement_12._f1._f0.workgroup_base)))))), _GLF_struct_replacement_12._f1._f0.workgroup_base)), _GLF_struct_replacement_12._f1._f0.workgroup_base))) >> _GLF_IDENTITY(0u, (0u) ^ 0u)), 1u, 1u), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, max(_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, min(_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, _GLF_IDENTITY(0u | (_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, (true ? _GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, (_GLF_struct_replacement_12._f1._f0.workgroup_base) | (_GLF_struct_replacement_12._f1._f0.workgroup_base)) : _GLF_FUZZED(num_workgroup)))), 0u | (_GLF_IDENTITY(0u | (_GLF_struct_replacement_12._f1._f0.workgroup_base), (true ? _GLF_IDENTITY(0u | (_GLF_struct_replacement_12._f1._f0.workgroup_base), (0u | (_GLF_struct_replacement_12._f1._f0.workgroup_base)) | (0u | (_GLF_struct_replacement_12._f1._f0.workgroup_base))) : _GLF_FUZZED(floatBitsToUint(0.9))))))), _GLF_struct_replacement_12._f1._f0.workgroup_base)), _GLF_struct_replacement_12._f1._f0.workgroup_base)), (_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, max(_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, min(_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, _GLF_IDENTITY(0u, min(0u, 0u)) | (_GLF_struct_replacement_12._f1._f0.workgroup_base)), _GLF_struct_replacement_12._f1._f0.workgroup_base)), _GLF_struct_replacement_12._f1._f0.workgroup_base))) >> 0u), 1u, 1u))), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, max(_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, max(_GLF_struct_replacement_12._f1._f0.workgroup_base, _GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, ~ (_GLF_IDENTITY(~ (_GLF_struct_replacement_12._f1._f0.workgroup_base), (true ? ~ (_GLF_struct_replacement_12._f1._f0.workgroup_base) : _GLF_FUZZED(workgroup_id))))))), 0u | (_GLF_struct_replacement_12._f1._f0.workgroup_base)), _GLF_struct_replacement_12._f1._f0.workgroup_base)), _GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, 0u ^ (_GLF_struct_replacement_12._f1._f0.workgroup_base)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, max(_GLF_struct_replacement_12._f1._f0.workgroup_base, _GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, (_GLF_struct_replacement_12._f1._f0.workgroup_base) / 1u))), max(_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, min(_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, 0u | (_GLF_struct_replacement_12._f1._f0.workgroup_base)), _GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, min(_GLF_struct_replacement_12._f1._f0.workgroup_base, _GLF_struct_replacement_12._f1._f0.workgroup_base)))), _GLF_struct_replacement_12._f1._f0.workgroup_base))) >> 0u), 1u, 1u))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, max(_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, min(_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, 0u | (_GLF_struct_replacement_12._f1._f0.workgroup_base)), _GLF_struct_replacement_12._f1._f0.workgroup_base)), _GLF_struct_replacement_12._f1._f0.workgroup_base)), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, max(_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, min(_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, 0u | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, uint(_GLF_IDENTITY(uint(_GLF_struct_replacement_12._f1._f0.workgroup_base), (uint(_GLF_struct_replacement_12._f1._f0.workgroup_base)) | 0u)))), ((_GLF_struct_replacement_12._f1._f0.workgroup_base)) - 0u)), _GLF_struct_replacement_12._f1._f0.workgroup_base)), _GLF_struct_replacement_12._f1._f0.workgroup_base)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, max(_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, min(_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, 0u | (_GLF_struct_replacement_12._f1._f0.workgroup_base)), _GLF_struct_replacement_12._f1._f0.workgroup_base)), _GLF_struct_replacement_12._f1._f0.workgroup_base)), (_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, max(_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, min(_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) | (_GLF_struct_replacement_12._f1._f0.workgroup_base)), _GLF_struct_replacement_12._f1._f0.workgroup_base)), _GLF_struct_replacement_12._f1._f0.workgroup_base))) << 0u), _GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, max(_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, min(_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, 0u | (_GLF_struct_replacement_12._f1._f0.workgroup_base)), _GLF_struct_replacement_12._f1._f0.workgroup_base)), _GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, max(_GLF_struct_replacement_12._f1._f0.workgroup_base, _GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, 0u | (_GLF_struct_replacement_12._f1._f0.workgroup_base)))))), _GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, max(_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, min(_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, 0u | (_GLF_struct_replacement_12._f1._f0.workgroup_base)), _GLF_struct_replacement_12._f1._f0.workgroup_base)), _GLF_struct_replacement_12._f1._f0.workgroup_base)))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, max(_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, min(_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, 0u | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, uint(_GLF_IDENTITY(uint(_GLF_struct_replacement_12._f1._f0.workgroup_base), (uint(_GLF_struct_replacement_12._f1._f0.workgroup_base)) | 0u)))), ((_GLF_struct_replacement_12._f1._f0.workgroup_base)) - 0u)), _GLF_struct_replacement_12._f1._f0.workgroup_base)), _GLF_struct_replacement_12._f1._f0.workgroup_base)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, max(_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, min(_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, 0u | (_GLF_struct_replacement_12._f1._f0.workgroup_base)), _GLF_struct_replacement_12._f1._f0.workgroup_base)), _GLF_struct_replacement_12._f1._f0.workgroup_base)), (_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, max(_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, min(_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, 0u | (_GLF_struct_replacement_12._f1._f0.workgroup_base)), _GLF_struct_replacement_12._f1._f0.workgroup_base)), _GLF_struct_replacement_12._f1._f0.workgroup_base))) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, max(_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, min(_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, 0u | (_GLF_struct_replacement_12._f1._f0.workgroup_base)), _GLF_struct_replacement_12._f1._f0.workgroup_base)), _GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, max(_GLF_struct_replacement_12._f1._f0.workgroup_base, _GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, 0u | (_GLF_struct_replacement_12._f1._f0.workgroup_base)))))), (_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, max(_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, min(_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, 0u | (_GLF_struct_replacement_12._f1._f0.workgroup_base)), _GLF_struct_replacement_12._f1._f0.workgroup_base)), _GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, max(_GLF_struct_replacement_12._f1._f0.workgroup_base, _GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, 0u | (_GLF_struct_replacement_12._f1._f0.workgroup_base))))))) << 0u), _GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, max(_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, min(_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, 0u | (_GLF_struct_replacement_12._f1._f0.workgroup_base)), _GLF_struct_replacement_12._f1._f0.workgroup_base)), _GLF_struct_replacement_12._f1._f0.workgroup_base)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, max(_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, min(_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, 0u | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, uint(_GLF_IDENTITY(uint(_GLF_struct_replacement_12._f1._f0.workgroup_base), (uint(_GLF_struct_replacement_12._f1._f0.workgroup_base)) | 0u)))), ((_GLF_struct_replacement_12._f1._f0.workgroup_base)) - 0u)), _GLF_struct_replacement_12._f1._f0.workgroup_base)), _GLF_struct_replacement_12._f1._f0.workgroup_base)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, min(_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, 0u | (_GLF_struct_replacement_12._f1._f0.workgroup_base)), _GLF_struct_replacement_12._f1._f0.workgroup_base)), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, min(_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, 0u | (_GLF_struct_replacement_12._f1._f0.workgroup_base)), _GLF_struct_replacement_12._f1._f0.workgroup_base)), (true ? _GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, min(_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, 0u | (_GLF_struct_replacement_12._f1._f0.workgroup_base)), _GLF_struct_replacement_12._f1._f0.workgroup_base)) : _GLF_FUZZED(workgroup_id))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, min(_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, 0u | (_GLF_struct_replacement_12._f1._f0.workgroup_base)), _GLF_struct_replacement_12._f1._f0.workgroup_base)), min(_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, min(_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, 0u | (_GLF_struct_replacement_12._f1._f0.workgroup_base)), _GLF_struct_replacement_12._f1._f0.workgroup_base)), _GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, min(_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, 0u | (_GLF_struct_replacement_12._f1._f0.workgroup_base)), _GLF_struct_replacement_12._f1._f0.workgroup_base)))))), _GLF_struct_replacement_12._f1._f0.workgroup_base)), (_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, max(_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, min(_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, 0u | (_GLF_struct_replacement_12._f1._f0.workgroup_base)), _GLF_struct_replacement_12._f1._f0.workgroup_base)), _GLF_struct_replacement_12._f1._f0.workgroup_base))) << 0u), _GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, min(_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, 0u | (_GLF_struct_replacement_12._f1._f0.workgroup_base)), _GLF_struct_replacement_12._f1._f0.workgroup_base)), (_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, min(_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, 0u | (_GLF_struct_replacement_12._f1._f0.workgroup_base)), _GLF_struct_replacement_12._f1._f0.workgroup_base))) >> 0u), _GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, max(_GLF_struct_replacement_12._f1._f0.workgroup_base, _GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, 0u | (_GLF_struct_replacement_12._f1._f0.workgroup_base)))))), _GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, max(_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, min(_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, 0u | (_GLF_struct_replacement_12._f1._f0.workgroup_base)), _GLF_struct_replacement_12._f1._f0.workgroup_base)), _GLF_struct_replacement_12._f1._f0.workgroup_base)))))), (_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, max(_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, min(_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, 0u | (_GLF_struct_replacement_12._f1._f0.workgroup_base)), _GLF_struct_replacement_12._f1._f0.workgroup_base)), _GLF_struct_replacement_12._f1._f0.workgroup_base))) >> 0u), 1u, 1u), max(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, max(_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, _GLF_IDENTITY(0u | (_GLF_struct_replacement_12._f1._f0.workgroup_base), (0u | (_GLF_struct_replacement_12._f1._f0.workgroup_base)) + 0u)), (_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, 0u | _GLF_IDENTITY((_GLF_struct_replacement_12._f1._f0.workgroup_base), uint(uint((_GLF_struct_replacement_12._f1._f0.workgroup_base)))))) ^ 0u), _GLF_struct_replacement_12._f1._f0.workgroup_base)), _GLF_struct_replacement_12._f1._f0.workgroup_base)), (_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, max(_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, 1u * (_GLF_struct_replacement_12._f1._f0.workgroup_base)), 0u | (_GLF_struct_replacement_12._f1._f0.workgroup_base)), _GLF_struct_replacement_12._f1._f0.workgroup_base)), _GLF_struct_replacement_12._f1._f0.workgroup_base))) >> 0u), 1u, 1u), max(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, max(_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, min(_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, 0u | (_GLF_struct_replacement_12._f1._f0.workgroup_base)), _GLF_struct_replacement_12._f1._f0.workgroup_base)), _GLF_struct_replacement_12._f1._f0.workgroup_base)), (_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, (false ? _GLF_IDENTITY(_GLF_FUZZED(189744u), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_FUZZED(189744u), (_GLF_FUZZED(189744u)) - 0u), uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(50.33))))), _GLF_IDENTITY(1u, ~ (~ (1u)))), _GLF_IDENTITY((uvec3(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(189744u, uint(uint(189744u)))), (_GLF_FUZZED(189744u)) - 0u), uint(_GLF_ONE(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) * mat2(1.0)))[1])).y)), 1u)), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY((uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(189744u, uint(uint(189744u)))), (_GLF_FUZZED(189744u)) - 0u), max(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(189744u, uint(uint(189744u)))), (_GLF_FUZZED(189744u)) - 0u), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(189744u, uint(uint(189744u)))), (_GLF_FUZZED(189744u)) - 0u))), uint(_GLF_ONE(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), 1u)), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY((uvec3(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(189744u, uint(uint(189744u)))), (_GLF_FUZZED(189744u)) - 0u), uint(_GLF_ONE(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), 1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), 1u)), ((uvec3(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(189744u, uint(uint(189744u)))), (_GLF_FUZZED(189744u)) - 0u), uint(_GLF_ONE(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), 1u))) >> uvec3(0u, 0u, _GLF_IDENTITY(0u, uint(uvec4(0u, 0u, 1u, 1u))))))))) << uvec3(0u, 0u, 0u)))) : _GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, (_GLF_struct_replacement_12._f1._f0.workgroup_base) ^ 0u))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, 0u | _GLF_IDENTITY((_GLF_struct_replacement_12._f1._f0.workgroup_base), ((_GLF_struct_replacement_12._f1._f0.workgroup_base)) + 0u)), max(_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, 0u | (_GLF_struct_replacement_12._f1._f0.workgroup_base)), _GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, 0u | (_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, (_GLF_struct_replacement_12._f1._f0.workgroup_base) | (_GLF_struct_replacement_12._f1._f0.workgroup_base)))))), _GLF_struct_replacement_12._f1._f0.workgroup_base)), _GLF_struct_replacement_12._f1._f0.workgroup_base))) >> _GLF_IDENTITY(0u, (0u) ^ 0u)), 1u, 1u), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, max(_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, min(_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, _GLF_IDENTITY(0u | (_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, (true ? _GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, (_GLF_struct_replacement_12._f1._f0.workgroup_base) | (_GLF_struct_replacement_12._f1._f0.workgroup_base)) : _GLF_FUZZED(num_workgroup)))), 0u | (_GLF_IDENTITY(0u | (_GLF_struct_replacement_12._f1._f0.workgroup_base), (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(0u | (_GLF_struct_replacement_12._f1._f0.workgroup_base), (0u | (_GLF_struct_replacement_12._f1._f0.workgroup_base)) | (0u | (_GLF_struct_replacement_12._f1._f0.workgroup_base))) : _GLF_IDENTITY(_GLF_FUZZED(floatBitsToUint(0.9)), (_GLF_FUZZED(floatBitsToUint(0.9))) | (_GLF_FUZZED(floatBitsToUint(0.9))))))))), _GLF_struct_replacement_12._f1._f0.workgroup_base)), _GLF_struct_replacement_12._f1._f0.workgroup_base)), (_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, max(_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, min(_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, _GLF_IDENTITY(0u, min(0u, 0u)) | (_GLF_struct_replacement_12._f1._f0.workgroup_base)), _GLF_struct_replacement_12._f1._f0.workgroup_base)), _GLF_struct_replacement_12._f1._f0.workgroup_base))) >> 0u), 1u, 1u))), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, max(_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, max(_GLF_struct_replacement_12._f1._f0.workgroup_base, _GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, ~ (_GLF_IDENTITY(~ (_GLF_struct_replacement_12._f1._f0.workgroup_base), (true ? ~ (_GLF_struct_replacement_12._f1._f0.workgroup_base) : _GLF_FUZZED(workgroup_id))))))), 0u | (_GLF_struct_replacement_12._f1._f0.workgroup_base)), _GLF_struct_replacement_12._f1._f0.workgroup_base)), _GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, 0u ^ (_GLF_struct_replacement_12._f1._f0.workgroup_base)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, max(_GLF_struct_replacement_12._f1._f0.workgroup_base, _GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, (_GLF_struct_replacement_12._f1._f0.workgroup_base) / 1u))), max(_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, min(_GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, 0u | (_GLF_struct_replacement_12._f1._f0.workgroup_base)), _GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_base, min(_GLF_struct_replacement_12._f1._f0.workgroup_base, _GLF_struct_replacement_12._f1._f0.workgroup_base)))), _GLF_struct_replacement_12._f1._f0.workgroup_base))) >> 0u), 1u, 1u)))))))) + _GLF_struct_replacement_16._f4.subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(num_workgroup) : 0u)) << _GLF_IDENTITY(uint(0u), uint(0u))), uint(uvec4((_GLF_IDENTITY(0u, _GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : 0u), min((false ? _GLF_FUZZED(num_workgroup) : 0u), (false ? _GLF_FUZZED(num_workgroup) : 0u)))) << _GLF_IDENTITY(uint(0u), uint(0u))), (0u | 0u), _GLF_IDENTITY(1u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_local_id) : 1u)), 1u))) + ((subgroup_local_id + 1)), _GLF_IDENTITY(((0u << _GLF_IDENTITY(uint(0u), uint(0u))) + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1)), max(((subgroup_local_id + 1)), ((subgroup_local_id + 1)))), (((subgroup_local_id + 1))) | (_GLF_IDENTITY(((subgroup_local_id + 1)), (((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)), 0u | (subgroup_local_id + 1))))) | (((subgroup_local_id + 1)))))), (_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1)), max(((subgroup_local_id + 1)), ((subgroup_local_id + 1)))), (((subgroup_local_id + 1))) | (_GLF_IDENTITY(((subgroup_local_id + 1)), (((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id)) + _GLF_IDENTITY(1, (1) | (1)), 0u | (subgroup_local_id + 1))))) | (((subgroup_local_id + 1))))))) / 1u)), clamp(((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (0u << _GLF_IDENTITY(uint(7u), uint(7u))) + (_GLF_IDENTITY(uint(0u), uint(0u)))), min(_GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, min(0u, 0u)))))), _GLF_IDENTITY(uint(0u), uint(0u))))) + ((subgroup_local_id + 1))), ((0u << _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, 1u * (0u))))) + ((subgroup_local_id + 1))), ((0u << _GLF_IDENTITY(uint(0u), uint(0u))) + _GLF_IDENTITY(((subgroup_local_id + 1)), max((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), (true ? (subgroup_local_id + 1) : _GLF_FUZZED(bitfieldReverse(workgroup_id)))), ~ (~ (_GLF_IDENTITY((subgroup_local_id + 1), (true ? (subgroup_local_id + 1) : _GLF_FUZZED(bitfieldReverse(workgroup_id)))))))), ((subgroup_local_id + 1))))))) ^ 0u), ((0u << _GLF_IDENTITY(uint(0u), uint(0u))) + ((subgroup_local_id + 1))) | 0u)) % subgroup_size);
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), true && _GLF_IDENTITY((! (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false, false))))), bool(bvec2((! (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false, false))))), false)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(0.1), _GLF_FUZZED(6.1)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch)).y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec4(false, true, _GLF_IDENTITY(true, (true) || false), true)))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec4(false, true, _GLF_IDENTITY(true, (true) || false), true)))), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec4(false, true, _GLF_IDENTITY(true, (true) || false), true)))), false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) && true))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y))) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))), (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(6.1)), bool(false))), 1.0, exp(0.0), 1.0, 1.0, 0.0, 0.0, 1.0))), mix(float(_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(6.1)), bool(false))), _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-5.6)), bool(false)))))), float(_GLF_FUZZED(-8.1)), bool(false))), exp(0.0), 1.0, 1.0, 0.0, 0.0, 1.0)))), float(_GLF_FUZZED(4.5)), bool(false))), float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(6.1)), bool(false))), 1.0, exp(0.0), 1.0, 1.0, 0.0, 0.0, 1.0))), mix(float(_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(6.1)), bool(false))), _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-5.6)), bool(false)))))), float(_GLF_FUZZED(-8.1)), bool(false))), exp(0.0), 1.0, 1.0, 0.0, 0.0, 1.0)))), float(_GLF_FUZZED(4.5)), bool(false))), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, log(1.0), 0.0, tan(length(vec4(0.0, 0.0, 0.0, 0.0)))))), injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), mix(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), float(_GLF_FUZZED(-98.18)), bool(false)))))))
  barrier();
 buf[_GLF_struct_replacement_23._f0._f2.virtual_gid] = 1;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, (_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + 1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + 1), 0u ^ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + 1))))))) < subgroup_size) || false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (! (false))), ! (! (_GLF_IDENTITY((! (! (false))), ! (! ((! (! (false))))))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_IDENTITY(false, false || (false)), false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(bvec4((false), true, false, false))), false || (_GLF_IDENTITY(! (false), (! (false)) && true)))))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
              barrier();
             barrier();
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))), (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 1.0, sqrt(1.0), 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0), (true ? mat4x3(injectionSwitch.x, 1.0, sqrt(1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0) : _GLF_FUZZED(mat4x3(mat3(95.29, -264.082, 601.196, -2.6, 5053.4929, -4.3, 2.5, 1.7, 2313.8697)))))), min(float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 1.0, sqrt(1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0), (true ? mat4x3(injectionSwitch.x, 1.0, sqrt(1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0) : _GLF_FUZZED(mat4x3(mat3(95.29, -264.082, 601.196, -2.6, 5053.4929, _GLF_IDENTITY(-4.3, 1.0 * (-4.3)), 2.5, 1.7, 2313.8697)))))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 1.0, sqrt(1.0), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-276.030)), bool(false))), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0), (true ? mat4x3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, 1.0, sqrt(1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0) : _GLF_FUZZED(mat4x3(mat3(95.29, -264.082, 601.196, -2.6, 5053.4929, -4.3, 2.5, 1.7, 2313.8697)))))), clamp(float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 1.0, sqrt(1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0), (true ? mat4x3(_GLF_IDENTITY(injectionSwitch.x, float(float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), injectionSwitch.x))))), 1.0, sqrt(1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0) : _GLF_FUZZED(mat4x3(mat3(95.29, -264.082, 601.196, -2.6, 5053.4929, -4.3, 2.5, 1.7, 2313.8697)))))), float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 1.0, sqrt(_GLF_IDENTITY(1.0, min(1.0, 1.0))), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0), (true ? mat4x3(injectionSwitch.x, 1.0, sqrt(1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0) : _GLF_FUZZED(mat4x3(mat3(95.29, -264.082, 601.196, -2.6, 5053.4929, -4.3, 2.5, 1.7, 2313.8697)))))), float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, _GLF_IDENTITY(1.0, (1.0) / 1.0), sqrt(1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0), (true ? mat4x3(injectionSwitch.x, 1.0, sqrt(1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0) : _GLF_FUZZED(mat4x3(mat3(95.29, -264.082, 601.196, _GLF_IDENTITY(-2.6, float(mat3x2(-2.6, 0.0, 0.0, exp(0.0), _GLF_IDENTITY(1.0, (1.0) * 1.0), 0.0))), 5053.4929, -4.3, 2.5, 1.7, 2313.8697))))))))))) > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), injectionSwitch)).x > injectionSwitch.y)), _GLF_IDENTITY(true, _GLF_IDENTITY(false, (false) || false) || (true)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), ! (! (bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(bool(false)))))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, exp(0.0), determinant(mat4(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), sqrt(1.0)))).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   int i = 0;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), (_GLF_DEAD(false)) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, 0.0))) < _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y)) ? _GLF_FUZZED((-90.45 - vec2(9.7, 83.92))) : injectionSwitch)), vec2(injectionSwitch[0], injectionSwitch[1])).y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y)) ? _GLF_FUZZED((-90.45 - vec2(9.7, 83.92))) : injectionSwitch)), vec2(injectionSwitch[0], injectionSwitch[1])).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y)) ? _GLF_FUZZED((-90.45 - vec2(9.7, 83.92))) : injectionSwitch)), vec2(injectionSwitch[0], injectionSwitch[1])).y)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((-90.45 - vec2(9.7, 83.92))) : injectionSwitch)), vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0), _GLF_IDENTITY(mat3x4(mat4(mat3x4(injectionSwitch, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0))), mat3x4(mat3x4(mat3x4(mat4(mat3x4(injectionSwitch, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0)))))))))[1])).y, float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((-90.45 - vec2(9.7, 83.92))) : injectionSwitch)), vec2(injectionSwitch[0], injectionSwitch[1])).y, 1.0, 0.0)))) * cos(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), (false ? _GLF_FUZZED(injectionSwitch) : vec2(vec2(injectionSwitch)))))) * vec2(1.0, 1.0)).x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0), mat3(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mat3(injectionSwitch, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0) : _GLF_FUZZED(mat3(-4799.3150, -1.3, -1.7, 5.3, -2.6, 784.586, 67.92, 2.5, -6.8))))), transpose(transpose(mat3x4(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mat3(injectionSwitch, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0) : _GLF_FUZZED(mat3(-4799.3150, -1.3, -1.7, 5.3, -2.6, 784.586, 67.92, 2.5, -6.8))))))))))), (vec2(mat3(injectionSwitch, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0))) - vec2(0.0, 0.0))), injectionSwitch)).y)))) && true, bool(bvec4((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)), (vec2(mat3(injectionSwitch, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0))) - vec2(0.0, 0.0))), injectionSwitch)).y)))) && true, true, false, true)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, clamp(0, 0, 0))], injectionSwitch[1])), vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, clamp(0, 0, 0))], injectionSwitch[1])))), injectionSwitch)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, clamp(0, 0, 0))], injectionSwitch[1])), injectionSwitch)))).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))) && true))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))), float(vec2(injectionSwitch.x, sin(0.0)))) > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(_GLF_IDENTITY(2, min(2, _GLF_IDENTITY(_GLF_IDENTITY(2, ~ (~ (2))), min(_GLF_IDENTITY(2, ~ (~ (2))), _GLF_IDENTITY(2, ~ (~ (2))))))), (false ? _GLF_FUZZED(_GLF_IDENTITY(i, (0 | 0) + (i))) : 2))), 4, _GLF_IDENTITY(64, int(_GLF_IDENTITY(ivec2(64, 1), (ivec2(64, 1)) ^ ivec2(0, 0)))), 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), _GLF_IDENTITY(uint(2), (uint(2)) + 0u))), 4, 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).x, mix(float(_GLF_FUZZED(81.55)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(3278.3919)), bool(false))))), injectionSwitch.y)), float(mat2(injectionSwitch.y, 1.0, cos(0.0), sin(0.0))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))) > injectionSwitch.y)), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false), bvec3(bvec4(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false), true))), _GLF_IDENTITY(false, ! (! (false))))))), true && (bool(_GLF_IDENTITY(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false), bvec3(bvec4(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, false), true))), _GLF_IDENTITY(false, ! (! (false)))))))))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
}
