#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), true && ((injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false)), bvec2(bvec3(bvec2(bvec4(bvec2(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, false)), false)))))), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(1.0, min(1.0, 1.0))), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)) / 1.0) > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, sqrt(0.0), 0.0, 0.0, 0.0, 1.0, 1.0))).x, _GLF_IDENTITY((injectionSwitch.x) / 1.0, min((injectionSwitch.x) / 1.0, (injectionSwitch.x) / 1.0))) > injectionSwitch.y)))) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(1.0, min(1.0, 1.0))), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)) / 1.0) > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, sqrt(0.0), 0.0, 0.0, 0.0, 1.0, 1.0))).x, _GLF_IDENTITY((injectionSwitch.x) / 1.0, min((injectionSwitch.x) / 1.0, (injectionSwitch.x) / 1.0))) > injectionSwitch.y)))) || false)), ((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(1.0, min(1.0, 1.0))), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)) / 1.0) > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, sqrt(0.0), 0.0, 0.0, 0.0, 1.0, 1.0))).x, _GLF_IDENTITY((injectionSwitch.x) / 1.0, min((injectionSwitch.x) / 1.0, (injectionSwitch.x) / 1.0))) > injectionSwitch.y)))) || false))) && true)) || false) && true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, sqrt(1.0), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0))), injectionSwitch.y, injectionSwitch.y))))))
    return;
   return;
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, ~ (_GLF_IDENTITY(~ (gl_NumWorkGroups.x), (_GLF_IDENTITY(~ (gl_NumWorkGroups.x), max(~ (gl_NumWorkGroups.x), ~ (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) / ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(5u), uvec3(5u))) >> _GLF_IDENTITY(uvec3(5u), uvec3(5u)))) | (gl_NumWorkGroups)), 0u)), (uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) / ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(5u), uvec3(5u))) >> _GLF_IDENTITY(uvec3(5u), uvec3(5u)))) | (gl_NumWorkGroups)), 0u))) / uvec3(1u, 1u, 1u))).x)))) | (~ (gl_NumWorkGroups.x)))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(9.0)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch, injectionSwitch), max(clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), (_GLF_IDENTITY(true, bool(bvec4(true, false, true, true))) ? mat2(1.0) : _GLF_FUZZED(mat2(-5762.9012, 7191.3225, -9.2, 4353.4383)))) * (injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))))), clamp(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch, injectionSwitch)))).y))), (_GLF_IDENTITY(false || (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x))) - 0.0), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-32.12)), vec2(_GLF_FUZZED(83.01), _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) + 0.0)), bvec2(false, true))).y), _GLF_IDENTITY(false || ((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5745.5637), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(float(52957))), bvec2(true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)) || false)))).x)) > injectionSwitch.y)), (false || ((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5745.5637), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(float(52957))), _GLF_IDENTITY(bvec2(true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)) || false)), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)) || false)), false), bvec3(bvec3(bvec3(bvec2(true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)) || false)), false)))))))).x)) > injectionSwitch.y))) && true)))), false || (false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(-458.250))), max(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(-458.250))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), (true ? max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / sqrt(1.0)), injectionSwitch.y) : _GLF_FUZZED(cos(0.8))))) : _GLF_FUZZED(-458.250), min(true ? _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), (true ? max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / sqrt(1.0)), injectionSwitch.y) : _GLF_FUZZED(cos(0.8))))) : _GLF_FUZZED(-458.250), _GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), (true ? max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / sqrt(1.0)), injectionSwitch.y) : _GLF_FUZZED(cos(0.8))))) : _GLF_FUZZED(-458.250), float(_GLF_IDENTITY(vec2(true ? _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), (true ? max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / sqrt(1.0)), injectionSwitch.y) : _GLF_FUZZED(cos(0.8))))) : _GLF_FUZZED(-458.250), 1.0), (false ? _GLF_FUZZED(injectionSwitch) : vec2(true ? _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), (true ? max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / sqrt(1.0)), injectionSwitch.y) : _GLF_FUZZED(cos(0.8))))) : _GLF_FUZZED(-458.250), 1.0))))))))), (_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(-458.250)))) - _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))))))))), false || (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(-458.250))), max(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(-458.250))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), (true ? max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / sqrt(1.0)), injectionSwitch.y) : _GLF_FUZZED(cos(0.8))))) : _GLF_FUZZED(-458.250), min(true ? _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), (true ? max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / sqrt(1.0)), injectionSwitch.y) : _GLF_FUZZED(cos(0.8))))) : _GLF_FUZZED(-458.250), _GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), (true ? max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / sqrt(1.0)), injectionSwitch.y) : _GLF_FUZZED(cos(0.8))))) : _GLF_FUZZED(-458.250), float(_GLF_IDENTITY(vec2(true ? _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), (true ? max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / sqrt(1.0)), injectionSwitch.y) : _GLF_FUZZED(cos(0.8))))) : _GLF_FUZZED(-458.250), 1.0), (false ? _GLF_FUZZED(injectionSwitch) : vec2(true ? _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), (true ? max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / sqrt(1.0)), injectionSwitch.y) : _GLF_FUZZED(cos(0.8))))) : _GLF_FUZZED(-458.250), 1.0))))))))), (_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(-458.250)))) - _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))))))))), ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(-458.250))), max(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(-458.250))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), (true ? max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / sqrt(1.0)), injectionSwitch.y) : _GLF_FUZZED(cos(0.8))))) : _GLF_FUZZED(-458.250), min(true ? _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), (true ? max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / sqrt(1.0)), injectionSwitch.y) : _GLF_FUZZED(cos(0.8))))) : _GLF_FUZZED(-458.250), _GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), (true ? max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / sqrt(1.0)), injectionSwitch.y) : _GLF_FUZZED(cos(0.8))))) : _GLF_FUZZED(-458.250), float(_GLF_IDENTITY(vec2(true ? _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), (true ? max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / sqrt(1.0)), injectionSwitch.y) : _GLF_FUZZED(cos(0.8))))) : _GLF_FUZZED(-458.250), 1.0), (false ? _GLF_FUZZED(injectionSwitch) : vec2(true ? _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), (true ? max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / sqrt(1.0)), injectionSwitch.y) : _GLF_FUZZED(cos(0.8))))) : _GLF_FUZZED(-458.250), 1.0))))))))), (_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(-458.250)))) - _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))))))))) || false))), true && (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false)))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), true, false)), ! (! (bool(bvec3((_GLF_FALSE(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! ((false)))))), (injectionSwitch.x > injectionSwitch.y))), true, false))))))))), ! (! (! (_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-6.6, 7652.3831)))).y))), true && (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(! (! (injectionSwitch.x > injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), true, false)), ! (! _GLF_IDENTITY((bool(bvec3((_GLF_FALSE(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! ((false)))))), (injectionSwitch.x > injectionSwitch.y))), true, false))), ! (! ((bool(bvec3((_GLF_FALSE(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! ((false)))))), (injectionSwitch.x > injectionSwitch.y))), true, false))))))))))))))), true, false, true)), true && (_GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).y))), _GLF_IDENTITY(true, (true) && true) && (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))))).y, (false ? _GLF_FUZZED(-4.9) : injectionSwitch.y))))), true, false))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).y))), _GLF_IDENTITY(true, (true) && true) && (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, log(abs(1.0)), sin(0.0), 0.0, 1.0, log(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)))) + vec2(0.0, 0.0)))))).y, (false ? _GLF_FUZZED(-4.9) : injectionSwitch.y))))), true, false))))), (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).y))), _GLF_IDENTITY(true, (true) && true) && (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))))).y, (false ? _GLF_FUZZED(-4.9) : injectionSwitch.y))))), true, false)))))) && true))))), true, false, true)), (bool(bvec4(! (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-4.9) : injectionSwitch.y))))), true, false)))))), true, false, true))) && true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(-458.250))), max(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(-458.250))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), (true ? max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / sqrt(1.0)), injectionSwitch.y) : _GLF_FUZZED(cos(0.8))))) : _GLF_FUZZED(-458.250), min(true ? _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), (true ? max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / sqrt(1.0)), injectionSwitch.y) : _GLF_FUZZED(cos(0.8))))) : _GLF_FUZZED(-458.250), _GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), (true ? max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / sqrt(1.0)), injectionSwitch.y) : _GLF_FUZZED(cos(0.8))))) : _GLF_FUZZED(-458.250), float(_GLF_IDENTITY(vec2(true ? _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), (true ? max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / sqrt(1.0)), injectionSwitch.y) : _GLF_FUZZED(cos(0.8))))) : _GLF_FUZZED(-458.250), 1.0), (false ? _GLF_FUZZED(injectionSwitch) : vec2(true ? _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), (true ? max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / sqrt(1.0)), injectionSwitch.y) : _GLF_FUZZED(cos(0.8))))) : _GLF_FUZZED(-458.250), 1.0))))))))), (_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(-458.250)))) - _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))))))))), false || (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(-458.250))), max(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(-458.250))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), (true ? max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / sqrt(1.0)), injectionSwitch.y) : _GLF_FUZZED(cos(0.8))))) : _GLF_FUZZED(-458.250), min(true ? _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), (true ? max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / sqrt(1.0)), injectionSwitch.y) : _GLF_FUZZED(cos(0.8))))) : _GLF_FUZZED(-458.250), _GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), (true ? max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / sqrt(1.0)), injectionSwitch.y) : _GLF_FUZZED(cos(0.8))))) : _GLF_FUZZED(-458.250), float(_GLF_IDENTITY(vec2(true ? _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), (true ? max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / sqrt(1.0)), injectionSwitch.y) : _GLF_FUZZED(cos(0.8))))) : _GLF_FUZZED(-458.250), 1.0), (false ? _GLF_FUZZED(injectionSwitch) : vec2(true ? _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), (true ? max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / sqrt(1.0)), injectionSwitch.y) : _GLF_FUZZED(cos(0.8))))) : _GLF_FUZZED(-458.250), 1.0))))))))), (_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(-458.250)))) - _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))))))))), ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(-458.250))), max(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(-458.250))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), (true ? max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / sqrt(1.0)), injectionSwitch.y) : _GLF_FUZZED(cos(0.8))))) : _GLF_FUZZED(-458.250), min(true ? _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), (true ? max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / sqrt(1.0)), injectionSwitch.y) : _GLF_FUZZED(cos(0.8))))) : _GLF_FUZZED(-458.250), _GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), (true ? max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / sqrt(1.0)), injectionSwitch.y) : _GLF_FUZZED(cos(0.8))))) : _GLF_FUZZED(-458.250), float(_GLF_IDENTITY(vec2(true ? _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), (true ? max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / sqrt(1.0)), injectionSwitch.y) : _GLF_FUZZED(cos(0.8))))) : _GLF_FUZZED(-458.250), 1.0), (false ? _GLF_FUZZED(injectionSwitch) : vec2(true ? _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), (true ? max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / sqrt(1.0)), injectionSwitch.y) : _GLF_FUZZED(cos(0.8))))) : _GLF_FUZZED(-458.250), 1.0))))))))), (_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(-458.250)))) - _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))))))))) || false))), true && (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false)))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), true, false)), ! (! (bool(bvec3((_GLF_FALSE(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! ((false)))))), (injectionSwitch.x > injectionSwitch.y))), true, false))))))))), ! (! (! (_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-6.6, 7652.3831)))).y))), true && (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(! (! (injectionSwitch.x > injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), true, false)), ! (! _GLF_IDENTITY((bool(bvec3((_GLF_FALSE(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! ((false)))))), (injectionSwitch.x > injectionSwitch.y))), true, false))), ! (! ((bool(bvec3((_GLF_FALSE(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! ((false)))))), (injectionSwitch.x > injectionSwitch.y))), true, false))))))))))))))), true, false, true)), true && (_GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).y))), _GLF_IDENTITY(true, (true) && true) && (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))))).y, (false ? _GLF_FUZZED(-4.9) : injectionSwitch.y))))), true, false))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).y))), _GLF_IDENTITY(true, (true) && true) && (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, log(abs(1.0)), sin(0.0), 0.0, 1.0, log(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)))) + vec2(0.0, 0.0)))))).y, (false ? _GLF_FUZZED(-4.9) : injectionSwitch.y))))), true, false))))), (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).y))), _GLF_IDENTITY(true, (true) && true) && (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))))).y, (false ? _GLF_FUZZED(-4.9) : injectionSwitch.y))))), true, false)))))) && true))))), true, false, true)), (bool(bvec4(! (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-4.9) : injectionSwitch.y))))), true, false)))))), true, false, true))) && true))))))))))) || false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, float(vec2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0))), _GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(-8.1))))) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), (! ((false))) || false)))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, 0.0, 0.0, cos(0.0)), transpose(transpose(mat3x2(injectionSwitch, 1.0, 0.0, 0.0, cos(0.0)))))), max(vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, 0.0, 0.0, cos(0.0)), transpose(transpose(mat3x2(injectionSwitch, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0)), 1.0, 1.0)))), 0.0, 0.0, cos(0.0)))))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, 0.0, 0.0, cos(0.0)), transpose(transpose(mat3x2(injectionSwitch, 1.0, 0.0, 0.0, cos(0.0)))))), vec2(0.0, 0.0) + (_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, 0.0, 0.0, cos(0.0)), transpose(transpose(mat3x2(injectionSwitch, 1.0, 0.0, _GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, 1.0))), _GLF_IDENTITY(cos(0.0), float(mat2(cos(0.0), 0.0, 0.0, sqrt(0.0))))))))), (vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), cos(0.0)), transpose(transpose(mat3x2(injectionSwitch, 1.0, 0.0, 0.0, cos(0.0))))))) - abs(vec2(0.0, 0.0)))))))).y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, 0.0, 0.0, cos(0.0)), transpose(transpose(mat3x2(injectionSwitch, 1.0, 0.0, 0.0, cos(0.0)))))), max(vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, 0.0, 0.0, cos(0.0)), transpose(transpose(mat3x2(injectionSwitch, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0)), 1.0, 1.0)))), 0.0, 0.0, cos(0.0)))))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, 0.0, 0.0, cos(0.0)), transpose(transpose(mat3x2(injectionSwitch, 1.0, 0.0, 0.0, cos(0.0)))))), vec2(0.0, 0.0) + (_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, 0.0, 0.0, cos(0.0)), transpose(transpose(mat3x2(injectionSwitch, 1.0, 0.0, _GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, 1.0))), _GLF_IDENTITY(cos(0.0), float(mat2(cos(0.0), 0.0, 0.0, sqrt(0.0))))))))), (vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), cos(0.0)), transpose(transpose(mat3x2(injectionSwitch, 1.0, 0.0, 0.0, cos(0.0))))))) - abs(vec2(0.0, 0.0)))))))).y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, 0.0, 0.0, cos(0.0)), transpose(transpose(mat3x2(injectionSwitch, 1.0, 0.0, 0.0, cos(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4x2(0.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0)), max(float(mat4x2(0.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0)), float(mat4x2(0.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0))))))))))), max(vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, 0.0, 0.0, cos(0.0)), transpose(transpose(mat3x2(injectionSwitch, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0)), 1.0, 1.0)))), 0.0, 0.0, cos(0.0)))))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, 0.0, 0.0, cos(0.0)), transpose(transpose(mat3x2(injectionSwitch, 1.0, 0.0, 0.0, cos(0.0)))))), vec2(0.0, 0.0) + (_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, 0.0, 0.0, cos(0.0)), transpose(transpose(mat3x2(injectionSwitch, 1.0, 0.0, _GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, 1.0))), _GLF_IDENTITY(cos(0.0), float(mat2(cos(0.0), 0.0, 0.0, sqrt(0.0))))))))), (vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), cos(0.0)), transpose(transpose(mat3x2(injectionSwitch, 1.0, 0.0, 0.0, cos(0.0))))))) - abs(vec2(0.0, 0.0)))))))).y)))) && true))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(6.6))))) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec3(bool(false), false, false)))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) || false))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), bool(bvec3(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), true, false))))))
          return;
         barrier();
        }
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(-5269.9552))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)))).y))), false)), (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false)), ! (! (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false)))))) || false))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), false)))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bvec2(bool(_GLF_DEAD(false)), false)))) || false), false || (_GLF_IDENTITY(bool(_GLF_DEAD(false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(_GLF_DEAD(false)), true), bvec2(bvec2(bvec2(bool(_GLF_DEAD(false)), true))))), _GLF_IDENTITY(! (! (bool(_GLF_IDENTITY(bvec2(bool(_GLF_DEAD(false)), true), bvec2(bvec2(bvec2(bool(_GLF_DEAD(false)), true))))))), (! (! (bool(_GLF_IDENTITY(bvec2(bool(_GLF_DEAD(false)), true), bvec2(bvec2(bvec2(bool(_GLF_DEAD(false)), true)))))))) && true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(_GLF_DEAD(false)), true), bvec2(bvec2(bvec2(bool(_GLF_DEAD(false)), true))))), _GLF_IDENTITY(! (! (bool(_GLF_IDENTITY(bvec2(bool(_GLF_DEAD(false)), true), bvec2(bvec2(bvec2(bool(_GLF_DEAD(false)), true))))))), (! (! (bool(_GLF_IDENTITY(bvec2(bool(_GLF_DEAD(false)), true), bvec2(bvec2(bvec2(bool(_GLF_DEAD(false)), true)))))))) && true))), (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(_GLF_DEAD(false)), true), bvec2(_GLF_IDENTITY(bvec2(bvec2(bool(_GLF_DEAD(false)), true)), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))))), true)), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(bool(_GLF_DEAD(false)), true))), bvec2(bvec3(bvec2(bvec2(bvec2(bool(_GLF_DEAD(false)), true))), true))))))))))), _GLF_IDENTITY(! _GLF_IDENTITY((! (bool(_GLF_IDENTITY(bvec2(bool(_GLF_DEAD(false)), true), bvec2(bvec2(bvec2(bool(_GLF_DEAD(false)), true))))))), ((! (bool(_GLF_IDENTITY(bvec2(bool(_GLF_DEAD(false)), true), bvec2(bvec2(bvec2(bool(_GLF_DEAD(false)), true)))))))) || false), _GLF_IDENTITY((! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(_GLF_DEAD(false)), true), bvec2(bvec2(bvec2(bool(_GLF_DEAD(false)), true))))), _GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(bvec2(bool(_GLF_DEAD(false)), true), bvec2(bvec2(bvec2(bool(_GLF_DEAD(false)), true))))))), bool(_GLF_IDENTITY(bvec2(bool(bool(bool(_GLF_IDENTITY(bvec2(bool(_GLF_DEAD(false)), true), bvec2(bvec2(bvec2(bool(_GLF_DEAD(false)), true))))))), true), bvec2(bvec4(bvec2(bool(bool(bool(_GLF_IDENTITY(bvec2(bool(_GLF_DEAD(false)), true), bvec2(bvec2(bvec2(bool(_GLF_DEAD(false)), true))))))), true), true, false))))))), bool(bvec4(_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec2(bool(_GLF_DEAD(false)), true), bvec2(bvec2(bvec2(bool(_GLF_DEAD(false)), true)))))), bool(_GLF_IDENTITY(bvec2((bool(_GLF_IDENTITY(bvec2(bool(_GLF_DEAD(false)), true), bvec2(bvec2(bvec2(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), true)))))), false), bvec2(bvec4(bvec2((bool(_GLF_IDENTITY(bvec2(bool(_GLF_DEAD(false)), true), bvec2(bvec2(bvec2(bool(_GLF_DEAD(false)), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true))))))))), false), false, true))))), true, true, false))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((! (! _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec2(bool(_GLF_DEAD(false)), true), bvec2(bvec2(bvec2(bool(_GLF_DEAD(false)), true)))))), bool(bvec4(_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec2(bool(_GLF_DEAD(false)), true), bvec2(bvec2(bvec2(bool(_GLF_DEAD(false)), true)))))), bool(_GLF_IDENTITY(bvec2((bool(_GLF_IDENTITY(bvec2(bool(_GLF_DEAD(false)), true), bvec2(bvec2(bvec2(bool(_GLF_DEAD(false)), true)))))), false), bvec2(bvec4(bvec2((bool(_GLF_IDENTITY(bvec2(bool(_GLF_DEAD(false)), true), bvec2(bvec2(bvec2(bool(_GLF_DEAD(false)), true)))))), false), false, true))))), true, true, false))))), bool(bvec4((! (! _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec2(bool(_GLF_DEAD(false)), true), bvec2(bvec2(bvec2(bool(_GLF_DEAD(false)), true)))))), bool(bvec4(_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec2(bool(_GLF_DEAD(false)), true), bvec2(bvec2(bvec2(bool(_GLF_DEAD(false)), true)))))), bool(_GLF_IDENTITY(bvec2((bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bvec3(bool(_GLF_DEAD(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))), true), bvec2(bvec2(bvec2(bool(_GLF_DEAD(false)), true)))))), false), bvec2(bvec4(_GLF_IDENTITY(bvec2((bool(_GLF_IDENTITY(bvec2(bool(_GLF_DEAD(false)), true), bvec2(bvec2(bvec2(bool(_GLF_DEAD(false)), true)))))), false), bvec2(_GLF_IDENTITY(bvec2(bvec2((bool(_GLF_IDENTITY(bvec2(bool(_GLF_DEAD(false)), true), bvec2(bvec2(bvec2(bool(_GLF_DEAD(false)), true)))))), false)), bvec2(bvec3(bvec2(bvec2((bool(_GLF_IDENTITY(bvec2(bool(_GLF_DEAD(false)), true), bvec2(bvec2(bvec2(bool(_GLF_DEAD(false)), true)))))), false)), true))))), false, true))))), true, true, false))))), false, _GLF_IDENTITY(true, (true) || false), false))))), bool(bvec4(bool(bool(_GLF_IDENTITY((! (! _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec2(bool(_GLF_DEAD(false)), true), bvec2(bvec2(bvec2(bool(_GLF_DEAD(false)), true)))))), bool(bvec4(_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec2(bool(_GLF_DEAD(false)), true), bvec2(_GLF_IDENTITY(bvec2(bvec2(bool(_GLF_DEAD(false)), true)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(bool(_GLF_DEAD(false)), true)), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec2(bool(_GLF_DEAD(false)), true)), false)), bvec2(bvec3(bvec2(bvec3(bvec2(bvec2(bool(_GLF_DEAD(false)), true)), false)), true)))), true, false))))))), bool(_GLF_IDENTITY(bvec2((bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bool(_GLF_DEAD(false)), true), bvec2(bvec4(bvec2(bool(_GLF_DEAD(false)), true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), bvec2(bvec2(bvec2(bool(_GLF_DEAD(false)), true)))))), false), bvec2(bvec4(bvec2((bool(_GLF_IDENTITY(bvec2(bool(_GLF_DEAD(false)), true), bvec2(bvec2(bvec2(bool(_GLF_DEAD(false)), true)))))), false), false, true))))), true, true, false))))), bool(bvec4((! (! _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec2(bool(_GLF_DEAD(false)), true), bvec2(bvec2(bvec2(bool(_GLF_DEAD(false)), true)))))), bool(bvec4(_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec2(bool(_GLF_DEAD(false)), true), bvec2(bvec2(bvec2(bool(_GLF_DEAD(false)), true)))))), bool(_GLF_IDENTITY(bvec2((bool(_GLF_IDENTITY(bvec2(bool(_GLF_DEAD(false)), true), bvec2(bvec2(_GLF_IDENTITY(bvec2(bool(_GLF_DEAD(false)), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(bool(_GLF_DEAD(false)), true), true)), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec3(bvec2(bool(_GLF_DEAD(false)), true), true)), true, false)), bvec2(bvec2(bvec2(bvec4(bvec2(bvec3(bvec2(bool(_GLF_DEAD(false)), true), true)), true, false)))))))))))), false), bvec2(bvec4(bvec2((bool(_GLF_IDENTITY(bvec2(bool(_GLF_DEAD(false)), true), bvec2(bvec2(bvec2(bool(_GLF_DEAD(false)), true)))))), false), false, true))))), true, true, false))))), false, true, false))))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)))) && true)))))), _GLF_IDENTITY(false, ! (! (false))), true, true))))))), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_DEAD(false))))), ! (! (_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bvec4(bool(_GLF_DEAD(false)), false, _GLF_IDENTITY(true, ! (! (true))), true)))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(true, false || (true)) && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))) && true))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))) | (0u >> _GLF_IDENTITY(uint(6u), uint(6u))));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, cos(0.0) * (injectionSwitch.x)))) > injectionSwitch.y) || false)))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y)))))) && true)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))
    barrier();
   return;
  }
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))) + _GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(_GLF_IDENTITY((~ 51285u), uint(uvec4((~ 51285u), 1u, 1u, 0u)))) : subgroup_id)))) * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))) + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(max(subgroup_id, _GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(_GLF_IDENTITY((~ 51285u), uint(uvec4((~ 51285u), 1u, 1u, 0u)))) : subgroup_id))), ~ (~ (_GLF_IDENTITY(max(subgroup_id, _GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(_GLF_IDENTITY((~ 51285u), uint(uvec4((~ 51285u), 1u, 1u, 0u)))) : subgroup_id))), 0u | (max(subgroup_id, _GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(_GLF_IDENTITY((~ 51285u), uint(uvec4((~ 51285u), 1u, 1u, 0u)))) : subgroup_id))))))))) * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))) + _GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(_GLF_IDENTITY((~ 51285u), uint(uvec4((~ 51285u), 1u, 1u, 0u)))) : subgroup_id)))) * subgroup_size + ((subgroup_local_id + 1) % subgroup_size)) << 0u)) - 0u);
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), ! (! (bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (! (_GLF_IDENTITY(false, ! (! (false)))))), ! (! ((! (! (_GLF_IDENTITY(false, ! (! (false)))))))))))))), ! (! ((_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2(injectionSwitch.x, 1.0, 1.0, 0.0)), (float(mat2(injectionSwitch.x, 1.0, 1.0, 0.0))) - 0.0)) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false))))))))))
    return;
  }
 buf[virtual_gid] = 1;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) - 0.0), injectionSwitch[1])), injectionSwitch, injectionSwitch)).y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), max(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), clamp(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))))), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         barrier();
        }
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-7123.1962), _GLF_FUZZED(393.095)), bvec2(false, false))).y), ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-7123.1962), _GLF_FUZZED(393.095)), bvec2(false, false))).y)) && true)), false, true))), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false)))))), false || (false)), (_GLF_IDENTITY(false, false || (false))) || false), false, false), false)))), false || (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, false || (false)), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, false || (false)), false, false), false)))))))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) - vec2(0.0, 0.0)).x > injectionSwitch.y, false, false, true)))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) || false))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) | 0u)) / 1u) ^ 0u) ^ (subgroup_size))) >> 0u))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   int i = 0;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bvec2(false, false))))), (bool(bool(_GLF_IDENTITY(false, bool(bvec2(false, false)))))) || false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec4(! (false), false, false, false)), bool(bvec3(bool(bvec4(! (false), false, _GLF_IDENTITY(false, (false) && true), false)), true, false))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))), ! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))))))))))))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))) && true))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), min(min(injectionSwitch, injectionSwitch), min(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))
        return;
       barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(6.1)), float(injectionSwitch.y), bool(true))), injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-754.116))), _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false) ? _GLF_FUZZED(99.41) : injectionSwitch.y)), injectionSwitch.y), (clamp(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-754.116))), _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, (false) && true))) || false) ? _GLF_FUZZED(99.41) : injectionSwitch.y)), injectionSwitch.y)) - _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, sqrt(1.0))), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, sqrt(1.0))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), false)))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-3748.0038)), bool(false)))) / 1.0)))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y)))))) && true), false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) || false)))), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) || false)))), true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), (! (_GLF_IDENTITY(true, ! (! (true))))) && true))) && (_GLF_IDENTITY(true, (true) || false)))), true)), false)), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), true && (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true)))), (true) || false)))), true)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), true && (_GLF_IDENTITY(true, (true) || false)))), true)), false)), false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) || false), false, _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), true && (_GLF_IDENTITY(true, (true) || false)))), true)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), true && (_GLF_IDENTITY(true, (true) || false)))), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), true && (_GLF_IDENTITY(true, (true) || false)))), true)), bvec3(bvec3(bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), true && (_GLF_IDENTITY(true, (true) || false)))), true)))))), true)), false)), false)))), true)))))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) || false)))), true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), (! (_GLF_IDENTITY(true, ! (! (true))))) && true))) && (_GLF_IDENTITY(true, (true) || false)))), true)), false)), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), true && (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true)))), (true) || false)))), true)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), true && (_GLF_IDENTITY(true, (true) || false)))), true)), false)), false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) || false), false, _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), true && (_GLF_IDENTITY(true, (true) || false)))), true)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), true && (_GLF_IDENTITY(true, (true) || false)))), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), true && (_GLF_IDENTITY(true, (true) || false)))), true)), bvec3(bvec3(bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), true && (_GLF_IDENTITY(true, (true) || false)))), true)))))), true)), false)), false)))), true)))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) || false)))), true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), (! (_GLF_IDENTITY(true, ! (! (true))))) && true))) && (_GLF_IDENTITY(true, (true) || false)))), true)), false)), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), true && (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true)))), (true) || false)))), true)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), true && (_GLF_IDENTITY(true, (true) || false)))), true)), false)), false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) || false), false, _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), true && (_GLF_IDENTITY(true, (true) || false)))), true)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), true && (_GLF_IDENTITY(true, (true) || false)))), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), true && (_GLF_IDENTITY(true, (true) || false)))), true)), bvec3(bvec3(bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), true && (_GLF_IDENTITY(true, (true) || false)))), true)))))), true)), false)), false)))), true)))))), false))))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) || false)))), true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), (! (_GLF_IDENTITY(true, ! (! (true))))) && true))) && (_GLF_IDENTITY(true, (true) || false)))), true)), false)), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), true && (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true)))), (true) || false)))), true)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), true && (_GLF_IDENTITY(true, (true) || false)))), true)), false)), false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) || false), false, _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), true && (_GLF_IDENTITY(true, (true) || false)))), true)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), true && (_GLF_IDENTITY(true, (true) || false)))), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), true && (_GLF_IDENTITY(true, (true) || false)))), true)), bvec3(bvec3(bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), true && (_GLF_IDENTITY(true, (true) || false)))), true)))))), true)), false)), false)))), true)))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) || false)))), true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), (! (_GLF_IDENTITY(true, ! (! (true))))) && true))) && (_GLF_IDENTITY(true, (true) || false)))), true)), false)), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), true && (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true)))), (true) || false)))), true)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), true && (_GLF_IDENTITY(true, (true) || false)))), true)), false)), false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) || false), false, _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), true && (_GLF_IDENTITY(true, (true) || false)))), true)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), true && (_GLF_IDENTITY(true, (true) || false)))), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), true && (_GLF_IDENTITY(true, (true) || false)))), true)), bvec3(bvec3(bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), true && (_GLF_IDENTITY(true, (true) || false)))), true)))))), true)), false)), false)))), true)))))), false))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) || false)))), true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), (! (_GLF_IDENTITY(true, ! (! (true))))) && true))) && (_GLF_IDENTITY(true, (true) || false)))), true)), false)), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), true && (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true)))), (true) || false)))), true)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), true && (_GLF_IDENTITY(true, (true) || false)))), true)), false)), false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) || false), false, _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), true && (_GLF_IDENTITY(true, (true) || false)))), true)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), true && (_GLF_IDENTITY(true, (true) || false)))), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), true && (_GLF_IDENTITY(true, (true) || false)))), true)), bvec3(bvec3(bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), true && (_GLF_IDENTITY(true, (true) || false)))), true)))))), true)), false)), false)))), true)))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) || false)))), true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), (! (_GLF_IDENTITY(true, ! (! (true))))) && true))) && (_GLF_IDENTITY(true, (true) || false)))), true)), false)), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), true && (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true)))), (true) || false)))), true)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), true && (_GLF_IDENTITY(true, (true) || false)))), true)), false)), false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) || false), false, _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), true && (_GLF_IDENTITY(true, (true) || false)))), true)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), true && (_GLF_IDENTITY(true, (true) || false)))), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), true && (_GLF_IDENTITY(true, (true) || false)))), true)), bvec3(bvec3(bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), true && (_GLF_IDENTITY(true, (true) || false)))), true)))))), true)), false)), false)))), true)))))), false))))), false))), false)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) || false)))), true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), (! (_GLF_IDENTITY(true, ! (! (true))))) && true))) && (_GLF_IDENTITY(true, (true) || false)))), true)), false)), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), true && (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true)))), (true) || false)))), true)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), true && (_GLF_IDENTITY(true, (true) || false)))), true)), false)), false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) || false), false, _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), true && (_GLF_IDENTITY(true, (true) || false)))), true)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), true && (_GLF_IDENTITY(true, (true) || false)))), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), true && (_GLF_IDENTITY(true, (true) || false)))), true)), bvec3(bvec3(bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), true && (_GLF_IDENTITY(true, (true) || false)))), true)))))), true)), false)), false)))), true)))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) || false)))), true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), (! (_GLF_IDENTITY(true, ! (! (true))))) && true))) && (_GLF_IDENTITY(true, (true) || false)))), true)), false)), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), true && (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true)))), (true) || false)))), true)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), true && (_GLF_IDENTITY(true, (true) || false)))), true)), false)), false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) || false), false, _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), true && (_GLF_IDENTITY(true, (true) || false)))), true)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), true && (_GLF_IDENTITY(true, (true) || false)))), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), true && (_GLF_IDENTITY(true, (true) || false)))), true)), bvec3(bvec3(bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), true && (_GLF_IDENTITY(true, (true) || false)))), true)))))), true)), false)), false)))), true)))))), false))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) || false)))), true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), (! (_GLF_IDENTITY(true, ! (! (true))))) && true))) && (_GLF_IDENTITY(true, (true) || false)))), true)), false)), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), true && (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true)))), (true) || false)))), true)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), true && (_GLF_IDENTITY(true, (true) || false)))), true)), false)), false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) || false), false, _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), true && (_GLF_IDENTITY(true, (true) || false)))), true)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), true && (_GLF_IDENTITY(true, (true) || false)))), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), true && (_GLF_IDENTITY(true, (true) || false)))), true)), bvec3(bvec3(bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), true && (_GLF_IDENTITY(true, (true) || false)))), true)))))), true)), false)), false)))), true)))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) || false)))), true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), (! (_GLF_IDENTITY(true, ! (! (true))))) && true))) && (_GLF_IDENTITY(true, (true) || false)))), true)), false)), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), true && (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true)))), (true) || false)))), true)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), true && (_GLF_IDENTITY(true, (true) || false)))), true)), false)), false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) || false), false, _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), true && (_GLF_IDENTITY(true, (true) || false)))), true)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), true && (_GLF_IDENTITY(true, (true) || false)))), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), true && (_GLF_IDENTITY(true, (true) || false)))), true)), bvec3(bvec3(bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), true && (_GLF_IDENTITY(true, (true) || false)))), true)))))), true)), false)), false)))), true)))))), false))))), false))), false)), false))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(2), (uint(2)) ^ 0u), 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, true && (false)))), (bool(bool(_GLF_IDENTITY(false, true && (false))))) && true)))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), false || (! ((injectionSwitch.x > injectionSwitch.y)))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) && true))))
            {
             if(_GLF_DEAD(false))
              return;
             return;
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
            {
             if(_GLF_DEAD(false))
              return;
             return;
            }
           return;
          }
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))), false || (! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))))) && true)))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
}
