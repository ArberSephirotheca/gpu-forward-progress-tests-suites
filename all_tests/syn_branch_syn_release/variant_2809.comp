#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       return;
      }
     else
      {
      }
    }
   do
    {
     for(int _injected_loop_counter = (0 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       return;
       if(_GLF_DEAD(false))
        break;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       break;
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      return;
     do
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), false, false, true)), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), false, false, true))))))), _GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false)))))) && true)))), (_GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false)))))) && true)))), ! (! (bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false)))))) && true)))))))) && true)))))
            {
             for(int _injected_loop_counter = (_GLF_IDENTITY((_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (1), (~ (1)) * 1), clamp(~ (1), ~ (1), ~ (1))))) << _GLF_IDENTITY(int(_GLF_IDENTITY(2, min(2, 2))), int(2))), int(ivec2((_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), clamp(~ (1), ~ (1), ~ (1))))) << _GLF_IDENTITY(int(2), int(2))), 1))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), clamp(_GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(int(2), int(2)))), (_GLF_IDENTITY(int(2), int(2))) | (_GLF_IDENTITY(int(2), int(2)))), (_GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), min(int(2), int(2)))), (_GLF_IDENTITY(int(2), int(2))) | (_GLF_IDENTITY(int(_GLF_IDENTITY(2, max(2, 2))), int(2))))) + (0 << _GLF_IDENTITY(int(7), int(7)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), (_GLF_IDENTITY(int(2), int(2))) | (_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), ~ (~ (int(2))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), 0 + (int(2))), int(2)), (_GLF_IDENTITY(int(2), int(2))) | (_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(2, max(2, 2)), int(int(_GLF_IDENTITY(2, max(2, 2)))))), int(2))))) + _GLF_IDENTITY((0 << _GLF_IDENTITY(int(7), int(7))), ((0 << _GLF_IDENTITY(int(7), int(7)))) >> 0)), int(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), (_GLF_IDENTITY(int(2), int(2))) | (_GLF_IDENTITY(int(2), int(2)))), (_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), (_GLF_IDENTITY(int(2), int(2))) | (_GLF_IDENTITY(int(_GLF_IDENTITY(2, max(2, 2))), int(2))))) + (0 << _GLF_IDENTITY(int(7), int(7)))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), (_GLF_IDENTITY(int(2), int(2))) | (_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), ~ (~ (int(2))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), 0 + (int(2))), int(2)), (_GLF_IDENTITY(int(2), int(2))) | (_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(2, max(2, 2)), int(int(_GLF_IDENTITY(2, max(2, 2)))))), int(2))))) + _GLF_IDENTITY((0 << _GLF_IDENTITY(int(7), int(7))), ((0 << _GLF_IDENTITY(int(7), int(7)))) >> 0)), int(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), (_GLF_IDENTITY(int(2), int(2))) | (_GLF_IDENTITY(int(2), int(2)))), (_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), (_GLF_IDENTITY(int(2), int(2))) | (_GLF_IDENTITY(int(_GLF_IDENTITY(2, max(2, 2))), int(2))))) + (0 << _GLF_IDENTITY(int(7), int(7)))))))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), (_GLF_IDENTITY(int(2), int(2))) | (_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), ~ (~ (int(2))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), 0 + (int(2))), int(2)), (_GLF_IDENTITY(int(2), int(2))) | (_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(2, max(2, 2)), int(int(_GLF_IDENTITY(2, max(2, 2)))))), int(2))))) + _GLF_IDENTITY((0 << _GLF_IDENTITY(int(7), int(7))), ((0 << _GLF_IDENTITY(int(7), int(7)))) >> 0)), int(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), (_GLF_IDENTITY(int(2), int(2))) | (_GLF_IDENTITY(int(2), int(2)))), (_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), (_GLF_IDENTITY(int(2), int(2))) | (_GLF_IDENTITY(int(_GLF_IDENTITY(2, max(2, 2))), int(2))))) + (0 << _GLF_IDENTITY(int(7), int(7)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), (_GLF_IDENTITY(int(2), int(2))) | (_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), ~ (~ (int(2))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), 0 + (int(2))), int(2)), (_GLF_IDENTITY(int(2), int(2))) | (_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(2, max(2, 2)), int(int(_GLF_IDENTITY(2, max(2, 2)))))), int(2))))) + _GLF_IDENTITY((0 << _GLF_IDENTITY(int(7), int(7))), ((0 << _GLF_IDENTITY(int(7), int(7)))) >> 0)), int(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), (_GLF_IDENTITY(int(2), int(2))) | (_GLF_IDENTITY(int(2), int(2)))), (_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), (_GLF_IDENTITY(int(2), int(2))) | (_GLF_IDENTITY(int(_GLF_IDENTITY(2, max(2, 2))), int(2))))) + (0 << _GLF_IDENTITY(int(7), int(7)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), (_GLF_IDENTITY(int(2), int(2))) | (_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), ~ (~ (int(2))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), 0 + (int(2))), int(2)), (_GLF_IDENTITY(int(2), int(2))) | (_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(2, max(2, 2)), int(int(_GLF_IDENTITY(2, max(2, 2)))))), int(2))))) + _GLF_IDENTITY((0 << _GLF_IDENTITY(int(7), int(7))), ((0 << _GLF_IDENTITY(int(7), int(7)))) >> 0)), int(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), (_GLF_IDENTITY(int(2), int(2))) | (_GLF_IDENTITY(int(2), int(2)))), (_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), (_GLF_IDENTITY(int(2), int(2))) | (_GLF_IDENTITY(int(_GLF_IDENTITY(2, max(2, 2))), int(2))))) + (0 << _GLF_IDENTITY(int(7), int(7))))))))))) + 0) - 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), clamp(_GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | (int(1))), 1 * (int(1))), _GLF_IDENTITY(int(1), ~ _GLF_IDENTITY((~ (int(1))), (_GLF_IDENTITY((~ (int(1))), max(_GLF_IDENTITY((~ (int(1))), max((~ (int(1))), (~ (int(1))))), (~ (_GLF_IDENTITY(int(1), int(ivec2(int(1), (1 | 0))))))))) - 0)), int(1)))))); _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) - 0))
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false))))
                {
                 return;
                }
               else
                {
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(false))
                    return;
                   break;
                  }
                 if(_GLF_DEAD(false))
                  continue;
                 continue;
                 if(_GLF_DEAD(false))
                  break;
                }
               if(_GLF_DEAD(false))
                break;
              }
            }
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                return;
               return;
              }
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                return;
               return;
              }
             return;
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
              return;
             if(_GLF_DEAD(false))
              return;
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             return;
            }
           for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_DEAD(false))
                  return;
                }
               return;
              }
            }
          }
         if(_GLF_DEAD(false))
          return;
         do
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_DEAD(false))
              return;
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                return;
               return;
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            return;
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
      return;
     return;
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) + 0) < 1); _injected_loop_counter ++)
    {
     for(int _injected_loop_counter = _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) * 1)) ^ 0)) ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, log(1.0), determinant(mat3(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0 * (_GLF_IDENTITY(0.0, min(0.0, 0.0)))))) : _GLF_FUZZED(-3.0))), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(1.4)), float(0.0), bool(true))), 0.0, 0.0, 1.0, 0.0)), 0.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0)), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0))).x))); _injected_loop_counter --)
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true))))))
        return;
       if(_GLF_DEAD(false))
        break;
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, bool(bvec2(true, true))) && (_GLF_DEAD(false))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, abs(tan(0.0)), 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-6.2)), float(1.0), bool(true))), 1.0, cos(0.0), 1.0))).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, abs(tan(0.0)), 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-6.2)), float(1.0), bool(true))), 1.0, cos(0.0), _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(2723.7451)), float(1.0), bool(true)))), float(_GLF_FUZZED(-528.440)), bool(false)))))).x > injectionSwitch.y)))))))
            {
             if(_GLF_DEAD(false))
              continue;
             continue;
            }
           if(_GLF_DEAD(false))
            break;
           return;
          }
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, false || (false)))), false || (bool(bool(_GLF_IDENTITY(false, false || (false)))))))))
          continue;
         return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))) || false)))
              continue;
             break;
            }
           break;
          }
        }
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
      }
    }
  }
 else
  {
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))))) | (gl_WorkGroupSize.x));
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) ^ _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 0u), clamp(_GLF_IDENTITY(uvec3(0u, 0u, 0u), (false ? _GLF_IDENTITY(_GLF_FUZZED(uvec3(129239u, 3397u, 171868u)), uvec3(1u, 1u, 1u) * (_GLF_FUZZED(uvec3(129239u, 3397u, 171868u)))) : uvec3(0u, _GLF_IDENTITY(0u, max(0u, 0u)), 0u))), uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u)))).x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         return;
        }
       else
        {
        }
      }
    }
   else
    {
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! _GLF_IDENTITY((_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(injectionSwitch.x < injectionSwitch.y, false, false))))), bool(_GLF_IDENTITY(bvec2(! ((injectionSwitch.x < injectionSwitch.y)), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(! ((injectionSwitch.x < injectionSwitch.y)), false), bvec2(bvec3(bvec2(! ((injectionSwitch.x < injectionSwitch.y)), false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, true)))))), ! (_GLF_IDENTITY(! ((! ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)), true))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! ((! ((injectionSwitch.x < injectionSwitch.y)))))))))), (_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! _GLF_IDENTITY((_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), bool(bvec2(! _GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), bool(bvec2(((_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(358.175))) < injectionSwitch.y)), false))), false)))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((! ((injectionSwitch.x < injectionSwitch.y)))), (! ((! ((injectionSwitch.x < injectionSwitch.y))))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! ((! ((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(asin(9.9)))), injectionSwitch.x)) < injectionSwitch.y)))))))))), bool(bvec2(_GLF_TRUE(true, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), ! _GLF_IDENTITY((_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), bool(bvec2(! ((injectionSwitch.x < injectionSwitch.y)), false)))), _GLF_IDENTITY(! (_GLF_IDENTITY(! ((! ((injectionSwitch.x < injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! ((! ((injectionSwitch.x < injectionSwitch.y))))))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(! ((! ((injectionSwitch.x < injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! ((! ((injectionSwitch.x < injectionSwitch.y))))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), (bool(bvec4(! (_GLF_IDENTITY(! ((! ((injectionSwitch.x < injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! ((! ((injectionSwitch.x < injectionSwitch.y))))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), ! _GLF_IDENTITY((_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), false || (! ((injectionSwitch.x < injectionSwitch.y)))), false)))), _GLF_IDENTITY(! (_GLF_IDENTITY(! ((! ((injectionSwitch.x < injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! ((! ((injectionSwitch.x < injectionSwitch.y))))))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(! _GLF_IDENTITY(((! ((injectionSwitch.x < injectionSwitch.y)))), true && (((! ((injectionSwitch.x < injectionSwitch.y)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! ((! ((injectionSwitch.x < injectionSwitch.y))))))), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true))), true)), (bool(bvec4(! _GLF_IDENTITY((_GLF_IDENTITY(! ((! _GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), bool(bvec2(((injectionSwitch.x < injectionSwitch.y)), true))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_ZERO(0.0, injectionSwitch.x)) > injectionSwitch.y)) || (! ((! ((injectionSwitch.x < injectionSwitch.y))))))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(! ((! _GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), bool(bvec2(((injectionSwitch.x < injectionSwitch.y)), true))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_ZERO(0.0, injectionSwitch.x)) > injectionSwitch.y)) || (! ((! ((injectionSwitch.x < injectionSwitch.y))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! ((! _GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), bool(bvec2(((injectionSwitch.x < injectionSwitch.y)), true))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_ZERO(0.0, injectionSwitch.x)) > injectionSwitch.y)) || (! ((! ((injectionSwitch.x < injectionSwitch.y))))))), bool(bvec4((_GLF_IDENTITY(! ((! _GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), bool(bvec2(((injectionSwitch.x < injectionSwitch.y)), true))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_ZERO(0.0, injectionSwitch.x)) > injectionSwitch.y)) || (! ((! ((injectionSwitch.x < injectionSwitch.y))))))), false, true, true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))) - 0.0))) > injectionSwitch.y))))))))), true)))) || false)))
  {
   for(int _injected_loop_counter = (int(_GLF_ZERO(0.0, injectionSwitch.x)) | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bool(true)))))
          {
           return;
          }
         else
          {
          }
        }
       return;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
      {
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false)))
            continue;
           continue;
          }
         for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x < injectionSwitch.y, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), ! (_GLF_IDENTITY(! (bool(bvec4(injectionSwitch.x < injectionSwitch.y, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), ! (! (! (bool(bvec4(injectionSwitch.x < injectionSwitch.y, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))))))))
            {
             return;
            }
           else
            {
            }
          }
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               return;
               if(_GLF_DEAD(false))
                return;
              }
             else
              {
              }
            }
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           break;
          }
        }
       while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), false || (_GLF_WRAPPED_LOOP(false))));
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         do
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           do
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  return;
                 break;
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
               return;
              }
             if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
              {
              }
             else
              {
               return;
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
             if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))), (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))) && true))), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y))) || false)))))) && true))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                continue;
               if(_GLF_DEAD(false))
                continue;
               break;
              }
            }
           while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) || false)), _GLF_IDENTITY(true && (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) || false)), false || (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) || false))))), (true && (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))), true && (! (_GLF_IDENTITY(false, bool(bvec3(false, false, true))))))), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))), (! (_GLF_IDENTITY(false, bool(bvec3(false, false, true))))) && true)), ! (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))), (! (_GLF_IDENTITY(false, bool(bvec3(false, false, true))))) && true))))))))))) && true))), (_GLF_WRAPPED_LOOP(false)) || false)), false || (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) || false)))))) || false))), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) || false)), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) || false)), (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), false))))))) || false))) || false)) || false), _GLF_IDENTITY(true && (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) || false)), false || (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) || false))))), (true && (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))), true && (! (_GLF_IDENTITY(false, bool(bvec3(false, false, true))))))))), (_GLF_WRAPPED_LOOP(false)) || false)), false || (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) || false)))))) || false))), true)), bool(bool(bool(bvec2((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) || false)), _GLF_IDENTITY(true && (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) || false)), false || (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) || false))))), (true && (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), (_GLF_IDENTITY(bool(bvec3(false, false, true)), bool(bvec2(bool(bvec3(false, false, true)), true)))) && true))), true && (! (_GLF_IDENTITY(false, bool(bvec3(false, false, true))))))))), (_GLF_WRAPPED_LOOP(false)) || false)), false || (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) || false)))))) || false))), true)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) || false)), _GLF_IDENTITY(true && (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) || false)), false || (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) || false))))), (true && (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))), true && (! (_GLF_IDENTITY(false, bool(bvec3(false, false, true))))))), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))), (! (_GLF_IDENTITY(false, bool(bvec3(false, false, true))))) && true)), ! (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))), (! (_GLF_IDENTITY(false, bool(bvec3(false, false, true))))) && true))))))))))) && true))), (_GLF_WRAPPED_LOOP(false)) || false)), false || (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) || false)))))) || false))), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) || false)), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) || false)), (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), false))))))) || false))) || false)) || false), _GLF_IDENTITY(true && (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) || false)), false || (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) || false))))), (true && (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))), true && (! (_GLF_IDENTITY(false, bool(bvec3(false, false, true))))))))), (_GLF_WRAPPED_LOOP(false)) || false)), false || (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) || false)))))) || false))), true)), bool(bool(bool(bvec2((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) || false)), _GLF_IDENTITY(true && (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) || false)), false || (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) || false))))), (true && (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), (_GLF_IDENTITY(bool(bvec3(false, false, true)), bool(bvec2(bool(bvec3(false, false, true)), true)))) && true))), true && (! (_GLF_IDENTITY(false, bool(bvec3(false, false, true))))))))), (_GLF_WRAPPED_LOOP(false)) || false)), false || (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) || false)))))) || false))), true))))))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) || false)), _GLF_IDENTITY(true && (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) || false)), false || (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) || false))))), (true && (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))), true && (! (_GLF_IDENTITY(false, bool(bvec3(false, false, true))))))), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))), (! (_GLF_IDENTITY(false, bool(bvec3(false, false, true))))) && true)), ! (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))), (! (_GLF_IDENTITY(false, bool(bvec3(false, false, true))))) && true))))))))))) && true))), (_GLF_WRAPPED_LOOP(false)) || false)), false || (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) || false)))))) || false))), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) || false)), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) || false)), (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), false))))))) || false))) || false)) || false), _GLF_IDENTITY(true && (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) || false)), false || (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) || false))))), (true && (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))), true && (! (_GLF_IDENTITY(false, bool(bvec3(false, false, true))))))))), (_GLF_WRAPPED_LOOP(false)) || false)), false || (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) || false)))))) || false))), true)), bool(bool(bool(bvec2((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) || false)), _GLF_IDENTITY(true && (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) || false)), false || (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) || false))))), (true && (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), (_GLF_IDENTITY(bool(bvec3(false, false, true)), bool(bvec2(bool(bvec3(false, false, true)), true)))) && true))), true && (! (_GLF_IDENTITY(false, bool(bvec3(false, false, true))))))))), (_GLF_WRAPPED_LOOP(false)) || false)), false || (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) || false)))))) || false))), true)))))))), bool(bvec2(! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) || false)), _GLF_IDENTITY(true && (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) || false)), false || (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) || false))))), (true && (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))), true && (! (_GLF_IDENTITY(false, bool(bvec3(false, false, true))))))), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))), (! (_GLF_IDENTITY(false, bool(bvec3(false, false, true))))) && true)), ! (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))), (! (_GLF_IDENTITY(false, bool(bvec3(false, false, true))))) && true))))))))))) && true))), (_GLF_WRAPPED_LOOP(false)) || false)), false || (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) || false)))))) || false))), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) || false)), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) || false)), (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), false))))))) || false))) || false)) || false), _GLF_IDENTITY(true && (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) || false)), false || (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) || false))))), (true && (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))), true && (! (_GLF_IDENTITY(false, bool(bvec3(false, false, true))))))))), (_GLF_WRAPPED_LOOP(false)) || false)), false || (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) || false)))))) || false))), true)), bool(bool(bool(bvec2((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) || false)), _GLF_IDENTITY(true && (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) || false)), false || (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) || false))))), (true && (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), (_GLF_IDENTITY(bool(bvec3(false, false, true)), bool(bvec2(bool(bvec3(false, false, true)), true)))) && true))), true && (! (_GLF_IDENTITY(false, bool(bvec3(false, false, true))))))))), (_GLF_WRAPPED_LOOP(false)) || false)), false || (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) || false)))))) || false))), true)))))))), false)))))))));
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, _GLF_IDENTITY(false || (_GLF_IDENTITY((false) || false, bool(bvec3((false) || false, true, false)))), true && (false || (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false, bool(bvec3((false) || false, true, false))))))))));
        }
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), true)))))), true)))))))), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, false, true))) && (_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), false), bvec2(bvec4(bvec2((false), false), false, false))))), bool(bool(! (false))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), false), bvec2(bvec4(bvec2((false), false), false, false))))), bool(bool(! (false))))), _GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), false), bvec2(bvec4(bvec2((false), false), false, false))))), bool(bool(! (false))))), true, true)), ! (! (bool(bvec3(! (_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), false), bvec2(bvec4(bvec2((false), false), false, false))))), bool(bool(! (false))))), true, true)))))))))), bool(bvec3(true && (_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), false), _GLF_IDENTITY(bvec2(bvec4(bvec2((false), false), false, false)), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec4(bvec2((false), false), false, false)), bvec2(bvec3(bvec2(bvec4(bvec2((false), false), false, false)), false))))))))), bool(bool(! (false))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), true, false)))), bvec2(bvec4(bvec2((false), false), false, false))))), bool(bool(! (false))))), _GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), false), bvec2(bvec4(bvec2((false), false), false, false))))), bool(bool(! (false))))), true, true)), ! (! (bool(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), false), bvec2(bvec4(bvec2((false), false), false, false))))), ! (! (! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2((false), false), bvec2(bvec4(bvec2((false), false), true, false))), bvec2(bvec4(bvec2((_GLF_IDENTITY(false, false || (false))), false), false, false)))))))), bool(bool(! (false))))), true, true)))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), false || (false))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), true)))))), true)))))))), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, false, true))) && (_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), false), bvec2(bvec4(bvec2((false), false), false, false))))), bool(bool(! (false))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), false), bvec2(bvec4(bvec2((false), false), false, false))))), bool(bool(! (false))))), _GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), false), bvec2(bvec4(bvec2((false), false), false, false))))), bool(bool(! (false))))), true, true)), ! (! (bool(bvec3(! (_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), false), bvec2(bvec4(bvec2((false), false), false, false))))), bool(bool(! (false))))), true, true)))))))))), bool(bvec3(true && (_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), false), _GLF_IDENTITY(bvec2(bvec4(bvec2((false), false), false, false)), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec4(bvec2((false), false), false, false)), bvec2(bvec3(bvec2(bvec4(bvec2((false), false), false, false)), false))))))))), bool(bool(! (false))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), true, false)))), bvec2(bvec4(bvec2((false), false), false, false))))), bool(bool(! (false))))), _GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), false), bvec2(bvec4(bvec2((false), false), false, false))))), bool(bool(! (false))))), true, true)), ! (! (bool(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), false), bvec2(bvec4(bvec2((false), false), false, false))))), ! (! (! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2((false), false), bvec2(bvec4(bvec2((false), false), true, false))), bvec2(bvec4(bvec2((_GLF_IDENTITY(false, false || (false))), false), false, false)))))))), bool(bool(! (false))))), true, true)))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), false || (false))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), true)))))), true)))))))), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, false, true))) && (_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), false), bvec2(bvec4(bvec2((false), false), false, false))))), bool(bool(! (false))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), false), bvec2(bvec4(bvec2((false), false), false, false))))), bool(bool(! (false))))), _GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), false), bvec2(bvec4(bvec2((false), false), false, false))))), bool(bool(! (false))))), true, true)), ! (! (bool(bvec3(! (_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), false), bvec2(bvec4(bvec2((false), false), false, false))))), bool(bool(! (false))))), true, true)))))))))), bool(bvec3(true && (_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), false), _GLF_IDENTITY(bvec2(bvec4(bvec2((false), false), false, false)), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec4(bvec2((false), false), false, false)), bvec2(bvec3(bvec2(bvec4(bvec2((false), false), false, false)), false))))))))), bool(bool(! (false))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), true, false)))), bvec2(bvec4(bvec2((false), false), false, false))))), bool(bool(! (false))))), _GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), false), bvec2(bvec4(bvec2((false), false), false, false))))), bool(bool(! (false))))), true, true)), ! (! (bool(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), false), bvec2(bvec4(bvec2((false), false), false, false))))), ! (! (! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2((false), false), bvec2(bvec4(bvec2((false), false), true, false))), bvec2(bvec4(bvec2((_GLF_IDENTITY(false, false || (false))), false), false, false)))))))), bool(bool(! (false))))), true, true)))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), false || (false))))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ! (! ((false)))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))) || (false), false || (_GLF_IDENTITY(false, ! (! (false))) || (false))))), (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))) || false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, false || (false)) || (false)))) || false), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))))) || false), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))) || false)) || false)), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))))) || false), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))) || false)) || false))))))))))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)))), (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, true && (false)))), true && (bool(bool(_GLF_IDENTITY(false, true && (false)))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))) || false)) || false))))))))))), (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))) || false))) || false))))))))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     return;
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, (0u >> _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) - 0u))) ^ (workgroup_size * workgroup_id));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u))), min(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u))), _GLF_IDENTITY(workgroup_base, (workgroup_base) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u))))))) + subgroup_id * subgroup_size, _GLF_IDENTITY(max(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, 0u + (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, max(workgroup_base + _GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)) * subgroup_size, workgroup_base + subgroup_id * subgroup_size)))), workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) - 0u)) - 0u)), _GLF_IDENTITY((max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) - 0u), 0u + (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, max(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) + 0u)) >> 0u), workgroup_base + subgroup_id * subgroup_size)))), workgroup_base + _GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 1u, 0u, 0u))) * subgroup_size)) << (0u ^ 0u), (_GLF_IDENTITY((max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) - 0u), 0u + (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, max(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) + 0u)) >> 0u), workgroup_base + subgroup_id * subgroup_size)))), workgroup_base + _GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 1u, 0u, 0u))) * subgroup_size)) << (0u ^ 0u), ((max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) - 0u), 0u + (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, max(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) + 0u)) >> 0u), workgroup_base + subgroup_id * subgroup_size)))), workgroup_base + _GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 1u, 0u, 0u))) * subgroup_size)) << (0u ^ 0u)) * 1u)) ^ 0u))) + subgroup_local_id;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (! (false))))), ((! (_GLF_IDENTITY(false, ! (! (false)))))) || false))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true))), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true)))), false || (_GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true)))), ! (_GLF_IDENTITY(! (false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true))))), bool(bvec2(! (false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true))))), false)))))))), true, false)), _GLF_IDENTITY(true && (bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true))), true, false))), ! (! (true && (bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true))), true, false))))))))), (! (_GLF_DEAD(false))) && true))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          return;
        }
       return;
      }
    }
   else
    {
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec2(injectionSwitch.x < injectionSwitch.y, false))))) && _GLF_IDENTITY((! (! (false))), false || (_GLF_IDENTITY((! (! (false))), ! (! ((! (! (false))))))))))))
  {
   do
    {
     return;
     if(_GLF_DEAD(false))
      break;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   if(_GLF_DEAD(false))
    return;
  }
 do
  {
   if(_GLF_DEAD(false))
    return;
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(0.1) : injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(0.1) : injectionSwitch.y)))), bool(bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(0.1) : injectionSwitch.y)))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(0.1) : injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(0.1) : injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(0.1) : injectionSwitch.y))) * 1.0)) - determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 0.0, round(length(normalize(vec2(1.0, 1.0)))), cos(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))))), bool(bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(0.1) : injectionSwitch.y)))))))), (bool(_GLF_IDENTITY(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(0.1) : injectionSwitch.y)))), bool(_GLF_IDENTITY(bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(0.1) : injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec2(bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(0.1) : injectionSwitch.y))))), true)), (bool(bvec2(bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(0.1) : injectionSwitch.y))))), true))) || false)))))) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))));
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(true && ((_GLF_DEAD(false))), ! (! (true && ((_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))))))))) || _GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, false, true)))), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, false, true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, false, true))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, false, true))), (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(true, true && (true)), false, true)))) && true))))))), true, _GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, sin(0.0)), mat3(mat3(mat3(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, sin(0.0))))))) < injectionSwitch.y)))))))) && true), (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-39.09)), bool(false))) : _GLF_FUZZED(-3336.7845))) > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), mix(vec2(_GLF_FUZZED(-317.450), _GLF_FUZZED(_GLF_IDENTITY(1.7, float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(1.7, min(1.7, 1.7)), _GLF_IDENTITY(mix(float(1.7), float(_GLF_FUZZED((-3123.6277 * -8.9))), bool(false)), (mix(float(1.7), float(_GLF_FUZZED(_GLF_IDENTITY((_GLF_IDENTITY(-3123.6277, (true ? _GLF_IDENTITY(-3123.6277, (-3123.6277) - log(1.0)) : _GLF_FUZZED(-3.1))) * -8.9), mix(float(_GLF_FUZZED(1317.8962)), float((_GLF_IDENTITY(-3123.6277, (true ? _GLF_IDENTITY(-3123.6277, (-3123.6277) - log(1.0)) : _GLF_FUZZED(-3.1))) * -8.9)), bool(true))))), bool(false))) + 0.0)), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, length(0.0), 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat4x3(4.3, -975.905, -717.665, -4.2, 2128.9300, 39.82, 2.0, -9.9, -9868.7738, -58.30, 955.931, -40.32)) : mat4x3(_GLF_IDENTITY(1.7, mix(float(1.7), _GLF_IDENTITY(float(_GLF_FUZZED((-3123.6277 * -8.9))), max(float(_GLF_FUZZED((-3123.6277 * -8.9))), float(_GLF_FUZZED((-3123.6277 * -8.9))))), bool(false))), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, length(0.0), 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0))))))), vec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (injectionSwitch) + vec2(0.0, 0.0)))[0], (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))) + vec2(0.0, 0.0)))[1]), bvec2(true, true))).y, _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), mix(vec2(_GLF_FUZZED(-317.450), _GLF_FUZZED(_GLF_IDENTITY(1.7, float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(1.7, mix(float(1.7), float(_GLF_FUZZED((-3123.6277 * -8.9))), bool(false))), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, length(0.0), 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat4x3(4.3, -975.905, -717.665, -4.2, 2128.9300, 39.82, 2.0, -9.9, -9868.7738, -58.30, 955.931, -40.32)) : mat4x3(_GLF_IDENTITY(1.7, mix(float(1.7), float(_GLF_FUZZED((-3123.6277 * -8.9))), bool(false))), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, length(0.0), 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0))))))), vec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (injectionSwitch) + vec2(0.0, 0.0)))[0], (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))) + vec2(0.0, 0.0)))[1]), bvec2(true, true))).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), mix(vec2(_GLF_FUZZED(-317.450), _GLF_FUZZED(_GLF_IDENTITY(1.7, float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(1.7, mix(float(1.7), float(_GLF_FUZZED((-3123.6277 * -8.9))), bool(false))), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, length(0.0), 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat4x3(4.3, -975.905, -717.665, -4.2, 2128.9300, 39.82, 2.0, -9.9, -9868.7738, -58.30, 955.931, -40.32)) : mat4x3(_GLF_IDENTITY(1.7, mix(float(1.7), float(_GLF_FUZZED((-3123.6277 * -8.9))), bool(false))), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, length(0.0), 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0))))))), vec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (injectionSwitch) + vec2(0.0, 0.0)))[0], (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))) + vec2(0.0, 0.0)))[1]), bvec2(true, true))).y) - determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), mix(vec2(_GLF_FUZZED(-317.450), _GLF_FUZZED(_GLF_IDENTITY(1.7, float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(1.7, mix(float(1.7), float(_GLF_FUZZED((-3123.6277 * -8.9))), bool(false))), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, length(0.0), 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat4x3(4.3, -975.905, -717.665, -4.2, 2128.9300, 39.82, 2.0, -9.9, -9868.7738, -58.30, 955.931, -40.32)) : mat4x3(_GLF_IDENTITY(1.7, mix(float(1.7), float(_GLF_FUZZED((-3123.6277 * -8.9))), bool(false))), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, length(0.0), 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0))))))), vec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (injectionSwitch) + vec2(0.0, 0.0)))[0], (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))) + vec2(0.0, 0.0)))[1]), bvec2(true, true))).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), mix(vec2(_GLF_FUZZED(-317.450), _GLF_FUZZED(_GLF_IDENTITY(1.7, float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(1.7, mix(float(1.7), float(_GLF_FUZZED((-3123.6277 * -8.9))), bool(false))), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, length(0.0), 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat4x3(4.3, -975.905, -717.665, -4.2, 2128.9300, 39.82, 2.0, -9.9, -9868.7738, -58.30, 955.931, -40.32)) : mat4x3(_GLF_IDENTITY(1.7, mix(float(1.7), float(_GLF_FUZZED((-3123.6277 * -8.9))), bool(false))), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, length(0.0), 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0))))))), vec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (injectionSwitch) + vec2(0.0, 0.0)))[0], (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))) + vec2(0.0, 0.0)))[1]), bvec2(true, true))).y) - determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), mix(vec2(_GLF_FUZZED(-317.450), _GLF_FUZZED(_GLF_IDENTITY(1.7, float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(1.7, mix(float(1.7), float(_GLF_FUZZED((-3123.6277 * -8.9))), bool(false))), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, length(0.0), 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat4x3(4.3, -975.905, -717.665, -4.2, 2128.9300, 39.82, 2.0, -9.9, -9868.7738, -58.30, 955.931, -40.32)) : mat4x3(_GLF_IDENTITY(1.7, mix(float(1.7), float(_GLF_FUZZED((-3123.6277 * -8.9))), bool(false))), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, length(0.0), 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0))))))), vec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (injectionSwitch) + vec2(0.0, 0.0)))[0], (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))) + vec2(0.0, 0.0)))[1]), bvec2(true, true))).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), mix(vec2(_GLF_FUZZED(-317.450), _GLF_FUZZED(_GLF_IDENTITY(1.7, float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(1.7, mix(float(1.7), float(_GLF_FUZZED((-3123.6277 * -8.9))), bool(false))), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, length(0.0), 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat4x3(4.3, -975.905, -717.665, -4.2, 2128.9300, 39.82, 2.0, -9.9, -9868.7738, -58.30, 955.931, -40.32)) : mat4x3(_GLF_IDENTITY(1.7, mix(float(1.7), float(_GLF_FUZZED((-3123.6277 * -8.9))), bool(false))), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, length(0.0), 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0))))))), vec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (injectionSwitch) + vec2(0.0, 0.0)))[0], (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))) + vec2(0.0, 0.0)))[1]), bvec2(true, true))).y) - determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), mix(vec2(_GLF_FUZZED(-317.450), _GLF_FUZZED(_GLF_IDENTITY(1.7, float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(1.7, mix(float(1.7), float(_GLF_FUZZED((-3123.6277 * -8.9))), bool(false))), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, length(0.0), 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat4x3(4.3, -975.905, -717.665, -4.2, 2128.9300, 39.82, 2.0, -9.9, -9868.7738, -58.30, 955.931, -40.32)) : mat4x3(_GLF_IDENTITY(1.7, mix(float(1.7), float(_GLF_FUZZED((-3123.6277 * -8.9))), bool(false))), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, length(0.0), 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0))))))), vec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (injectionSwitch) + vec2(0.0, 0.0)))[0], (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))) + vec2(0.0, 0.0)))[1]), bvec2(true, true))).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), mix(vec2(_GLF_FUZZED(-317.450), _GLF_FUZZED(_GLF_IDENTITY(1.7, float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(1.7, mix(float(1.7), float(_GLF_FUZZED((-3123.6277 * -8.9))), bool(false))), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, length(0.0), 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat4x3(4.3, -975.905, -717.665, -4.2, 2128.9300, 39.82, 2.0, -9.9, -9868.7738, -58.30, 955.931, -40.32)) : mat4x3(_GLF_IDENTITY(1.7, mix(float(1.7), float(_GLF_FUZZED((-3123.6277 * -8.9))), bool(false))), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, length(0.0), 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0))))))), vec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (injectionSwitch) + vec2(0.0, 0.0)))[0], (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))) + vec2(0.0, 0.0)))[1]), bvec2(true, true))).y) - determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), mix(vec2(_GLF_FUZZED(-317.450), _GLF_FUZZED(_GLF_IDENTITY(1.7, float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(1.7, mix(float(1.7), float(_GLF_FUZZED((-3123.6277 * -8.9))), bool(false))), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, length(0.0), 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat4x3(4.3, -975.905, -717.665, -4.2, 2128.9300, 39.82, 2.0, -9.9, -9868.7738, -58.30, 955.931, -40.32)) : mat4x3(_GLF_IDENTITY(1.7, mix(float(1.7), float(_GLF_FUZZED((-3123.6277 * -8.9))), bool(false))), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, length(0.0), 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0))))))), vec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (injectionSwitch) + vec2(0.0, 0.0)))[0], (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))) + vec2(0.0, 0.0)))[1]), bvec2(true, true))).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), mix(vec2(_GLF_FUZZED(-317.450), _GLF_FUZZED(_GLF_IDENTITY(1.7, float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(1.7, mix(float(1.7), float(_GLF_FUZZED((-3123.6277 * -8.9))), bool(false))), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, length(0.0), 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat4x3(4.3, -975.905, -717.665, -4.2, 2128.9300, 39.82, 2.0, -9.9, -9868.7738, -58.30, 955.931, -40.32)) : mat4x3(_GLF_IDENTITY(1.7, mix(float(1.7), float(_GLF_FUZZED((-3123.6277 * -8.9))), bool(false))), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, length(0.0), 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0))))))), vec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (injectionSwitch) + vec2(0.0, 0.0)))[0], (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))) + vec2(0.0, 0.0)))[1]), bvec2(true, true))).y) - determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))), 1.0, 1.0, 0.0, 1.0, determinant(mat3(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)))), 1.0, 0.0, 0.0)), clamp(float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), mix(vec2(_GLF_FUZZED(-317.450), _GLF_FUZZED(_GLF_IDENTITY(1.7, float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(1.7, mix(float(1.7), float(_GLF_FUZZED((-3123.6277 * -8.9))), bool(false))), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, length(0.0), 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat4x3(4.3, -975.905, -717.665, -4.2, 2128.9300, 39.82, 2.0, -9.9, -9868.7738, -58.30, 955.931, -40.32)) : mat4x3(_GLF_IDENTITY(1.7, mix(float(1.7), float(_GLF_FUZZED((-3123.6277 * -8.9))), bool(false))), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, length(0.0), 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0))))))), vec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0)))[0], (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))) + vec2(0.0, 0.0)))[1]), bvec2(true, true))).y, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))), mix(vec2(_GLF_FUZZED(-317.450), _GLF_FUZZED(_GLF_IDENTITY(1.7, float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(1.7, mix(_GLF_IDENTITY(float(1.7), clamp(float(1.7), float(1.7), _GLF_IDENTITY(float(1.7), clamp(float(1.7), _GLF_IDENTITY(float(1.7), min(float(1.7), float(1.7))), float(1.7))))), float(_GLF_FUZZED((-3123.6277 * -8.9))), bool(false))), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, length(0.0), 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat4x3(4.3, -975.905, -717.665, -4.2, 2128.9300, 39.82, 2.0, -9.9, -9868.7738, -58.30, 955.931, -40.32)) : mat4x3(_GLF_IDENTITY(1.7, mix(float(1.7), float(_GLF_FUZZED(_GLF_IDENTITY((-3123.6277 * -8.9), (false ? _GLF_FUZZED(asin(-4.5)) : _GLF_IDENTITY((-3123.6277 * -8.9), (false ? _GLF_FUZZED(-9825.5576) : (-3123.6277 * -8.9))))))), bool(false))), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, length(0.0), 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0))))))), vec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), mix(vec2(_GLF_FUZZED((- -6.0)), _GLF_FUZZED(-37.28)), vec2((vec2(injectionSwitch[0], injectionSwitch[1]))[0], (vec2(injectionSwitch[0], injectionSwitch[1]))[1]), bvec2(true, true)))), (injectionSwitch) + vec2(0.0, 0.0)))[0], (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(-749.553)), float(_GLF_ONE(1.0, injectionSwitch.y)), bool(true)))) + 0.0)) - 0.0)) * (injectionSwitch))) + vec2(0.0, 0.0)))[1]), bvec2(true, true))).y) - determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 1.0, 1.0, 0.0, 1.0, determinant(mat3(_GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)))), 1.0, 0.0, 0.0), transpose(transpose(mat4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), mix(vec2(_GLF_FUZZED(-317.450), _GLF_FUZZED(_GLF_IDENTITY(1.7, float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(1.7, mix(float(1.7), float(_GLF_FUZZED((-3123.6277 * -8.9))), bool(false))), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, length(0.0), 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat4x3(4.3, -975.905, -717.665, -4.2, 2128.9300, 39.82, 2.0, -9.9, -9868.7738, -58.30, 955.931, -40.32)) : mat4x3(_GLF_IDENTITY(1.7, mix(float(1.7), float(_GLF_FUZZED((-3123.6277 * -8.9))), bool(false))), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, length(0.0), 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0))))))), vec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0)))[0], (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))) + vec2(0.0, 0.0)))[1]), bvec2(true, true))).y, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))), mix(vec2(_GLF_FUZZED(-317.450), _GLF_FUZZED(_GLF_IDENTITY(1.7, float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(1.7, mix(_GLF_IDENTITY(float(1.7), clamp(float(1.7), float(1.7), _GLF_IDENTITY(float(1.7), clamp(float(1.7), _GLF_IDENTITY(float(1.7), min(float(1.7), float(1.7))), float(1.7))))), float(_GLF_FUZZED((-3123.6277 * -8.9))), bool(false))), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, length(0.0), 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat4x3(4.3, -975.905, -717.665, -4.2, 2128.9300, 39.82, 2.0, -9.9, -9868.7738, -58.30, 955.931, -40.32)) : mat4x3(_GLF_IDENTITY(1.7, mix(float(1.7), float(_GLF_FUZZED(_GLF_IDENTITY((-3123.6277 * -8.9), (false ? _GLF_FUZZED(asin(-4.5)) : _GLF_IDENTITY((-3123.6277 * -8.9), (false ? _GLF_FUZZED(-9825.5576) : (-3123.6277 * -8.9))))))), bool(false))), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, length(0.0), 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0))))))), vec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), mix(vec2(_GLF_FUZZED((- -6.0)), _GLF_FUZZED(-37.28)), vec2((vec2(injectionSwitch[0], injectionSwitch[1]))[0], (vec2(injectionSwitch[0], injectionSwitch[1]))[1]), bvec2(true, true)))), (injectionSwitch) + vec2(0.0, 0.0)))[0], (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(-749.553)), float(_GLF_ONE(1.0, injectionSwitch.y)), bool(true)))) + 0.0)) - 0.0)) * (injectionSwitch))) + vec2(0.0, 0.0)))[1]), bvec2(true, true))).y) - determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 1.0, 1.0, 0.0, 1.0, determinant(mat3(_GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)))), 1.0, 0.0, 0.0))))), float(mat4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), mix(vec2(_GLF_FUZZED(-317.450), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(1.7, float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(1.7, mix(float(1.7), float(_GLF_FUZZED((-3123.6277 * -8.9))), bool(false))), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, length(0.0), 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat4x3(4.3, -975.905, -717.665, -4.2, 2128.9300, 39.82, 2.0, -9.9, -9868.7738, -58.30, 955.931, -40.32)) : mat4x3(_GLF_IDENTITY(1.7, mix(float(1.7), float(_GLF_FUZZED((-3123.6277 * -8.9))), bool(false))), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, length(0.0), 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0)))))), (true ? _GLF_FUZZED(_GLF_IDENTITY(1.7, float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(1.7, mix(float(1.7), float(_GLF_FUZZED((-3123.6277 * -8.9))), bool(false))), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, length(0.0), 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat4x3(4.3, -975.905, -717.665, -4.2, 2128.9300, 39.82, 2.0, -9.9, -9868.7738, -58.30, 955.931, -40.32)) : mat4x3(_GLF_IDENTITY(1.7, mix(float(1.7), float(_GLF_FUZZED((-3123.6277 * -8.9))), _GLF_IDENTITY(bool(false), (bool(false)) || false))), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, length(0.0), 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0)))))) : _GLF_FUZZED(determinant(mat2(5.1, -7.7, 3712.8417, -7.7)))))), vec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (injectionSwitch) + vec2(0.0, 0.0)))[0], (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))) + vec2(0.0, 0.0)))[1]), bvec2(true, true))).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), mix(vec2(_GLF_FUZZED(-317.450), _GLF_FUZZED(_GLF_IDENTITY(1.7, float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(1.7, mix(float(1.7), float(_GLF_FUZZED((-3123.6277 * -8.9))), bool(false))), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, length(0.0), 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat4x3(_GLF_IDENTITY(4.3, mix(float(4.3), float(_GLF_FUZZED(5.3)), bool(false))), -975.905, -717.665, -4.2, 2128.9300, 39.82, 2.0, -9.9, -9868.7738, -58.30, 955.931, -40.32)) : mat4x3(_GLF_IDENTITY(1.7, mix(float(1.7), float(_GLF_FUZZED((-3123.6277 * -8.9))), bool(false))), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, length(0.0), 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0))))))), _GLF_IDENTITY(vec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (injectionSwitch) + vec2(0.0, 0.0)))[0], (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))) + vec2(0.0, 0.0)))[1]), (vec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (injectionSwitch) + vec2(0.0, 0.0)))[0], (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))) + vec2(0.0, 0.0)))[1])) * mat2(1.0)), bvec2(true, true))).y) - determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(386.068) : 0.0)), 0.0))), 1.0, 1.0, 0.0, 1.0, determinant(mat3(_GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(1.0, 1.0, 0.0), (_GLF_IDENTITY(vec3(1.0, 1.0, 0.0), max(vec3(1.0, 1.0, 0.0), vec3(1.0, 1.0, 0.0)))) * vec3(1.0, 1.0, 1.0)), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 0.0), vec3(0.0, 0.0, 1.0))), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(1503.3748) : 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, determinant(mat3(1.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-7802.7621)), bool(false))))), 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0, 1.0)))), 1.0, 0.0, 0.0)), float(mat4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), mix(vec2(_GLF_FUZZED(-317.450), _GLF_FUZZED(_GLF_IDENTITY(1.7, float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(1.7, mix(float(1.7), float(_GLF_FUZZED((-3123.6277 * -8.9))), bool(false))), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, length(0.0), 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat4x3(4.3, -975.905, -717.665, -4.2, 2128.9300, 39.82, 2.0, -9.9, -9868.7738, -58.30, 955.931, -40.32)) : mat4x3(_GLF_IDENTITY(1.7, mix(float(1.7), float(_GLF_FUZZED((-3123.6277 * -8.9))), bool(false))), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, length(0.0), 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0))))))), vec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (injectionSwitch) + vec2(0.0, 0.0)))[0], (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))) + vec2(0.0, 0.0)))[1]), bvec2(true, true))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), mix(vec2(_GLF_FUZZED(-317.450), _GLF_FUZZED(_GLF_IDENTITY(1.7, float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(1.7, mix(float(1.7), float(_GLF_FUZZED((-3123.6277 * -8.9))), bool(false))), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, length(0.0), 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat4x3(4.3, -975.905, -717.665, -4.2, 2128.9300, 39.82, 2.0, -9.9, -9868.7738, -58.30, 955.931, -40.32)) : mat4x3(_GLF_IDENTITY(1.7, mix(float(1.7), float(_GLF_FUZZED((-3123.6277 * -8.9))), bool(false))), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, length(0.0), 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0))))))), vec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (injectionSwitch) + vec2(0.0, 0.0)))[0], (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))) + vec2(0.0, 0.0)))[1]), bvec2(true, true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), mix(vec2(_GLF_FUZZED(-317.450), _GLF_FUZZED(_GLF_IDENTITY(1.7, float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(1.7, mix(float(1.7), float(_GLF_FUZZED((-3123.6277 * -8.9))), bool(false))), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, length(0.0), 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat4x3(4.3, -975.905, -717.665, -4.2, 2128.9300, 39.82, 2.0, -9.9, -9868.7738, -58.30, 955.931, -40.32)) : mat4x3(_GLF_IDENTITY(1.7, mix(float(1.7), float(_GLF_FUZZED((-3123.6277 * -8.9))), bool(false))), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, length(0.0), 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0))))))), vec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (injectionSwitch) + vec2(0.0, 0.0)))[0], (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))) + vec2(0.0, 0.0)))[1]), bvec2(true, true))))).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), mix(vec2(_GLF_FUZZED(-317.450), _GLF_FUZZED(_GLF_IDENTITY(1.7, float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(1.7, mix(float(1.7), float(_GLF_FUZZED((-3123.6277 * -8.9))), bool(false))), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, length(0.0), 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat4x3(4.3, -975.905, -717.665, -4.2, 2128.9300, _GLF_IDENTITY(39.82, (true ? 39.82 : _GLF_FUZZED(1581.7377))), 2.0, -9.9, -9868.7738, -58.30, 955.931, -40.32)) : mat4x3(_GLF_IDENTITY(1.7, mix(float(1.7), float(_GLF_FUZZED((-3123.6277 * -8.9))), bool(false))), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, length(0.0), 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0))))))), vec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (injectionSwitch) + vec2(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-2707.2521) : 0.0)), 0.0, 0.0)), 0.0)))[0], (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))) + vec2(0.0, 0.0)))[1]), bvec2(true, true))).y) - determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 1.0, 1.0, 0.0, 1.0, determinant(mat3(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)))), 1.0, 0.0, 0.0)))))))))
    return;
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
  }
 else
  {
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(subgroup_id, 0u + _GLF_IDENTITY((subgroup_id), uint(uint(_GLF_IDENTITY((subgroup_id), min((subgroup_id), (subgroup_id))))))) * subgroup_size, subgroup_id * subgroup_size)), min(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) * 1u), _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 1u, 1u, 0u)))) | (subgroup_id)) * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) >> 0u))) + (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) ^ 0u) + _GLF_IDENTITY(0u, (0u) | (0u))) + 1)), (_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) ^ 0u) + _GLF_IDENTITY(0u, (0u) | (0u))) + 1))) | 0u)) % subgroup_size, _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) ^ 0u) + _GLF_IDENTITY(0u, (0u) | (0u))) + 1))) % subgroup_size) | ((_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) ^ 0u) + _GLF_IDENTITY(0u, (0u) | (0u))) + 1))) % subgroup_size), (0u ^ 0u) ^ (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) ^ 0u) + _GLF_IDENTITY(0u, (0u) | (0u))) + 1))) % subgroup_size) | ((_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) ^ 0u) + _GLF_IDENTITY(0u, (0u) | (0u))) + 1))) % subgroup_size), 0u + (((_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) ^ 0u) + _GLF_IDENTITY(0u, (0u) | (0u))) + 1))) % subgroup_size) | ((_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) ^ 0u) + _GLF_IDENTITY(0u, (0u) | (0u))) + 1))) % subgroup_size)))))));
 do
  {
   _GLF_IDENTITY(buf[virtual_gid] = 1, (_GLF_IDENTITY(buf[virtual_gid] = _GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), min(1, 1)), int(ivec2(_GLF_IDENTITY(1, min(1, 1)), 0))), _GLF_IDENTITY(1, min(1, 1)))), (buf[virtual_gid] = _GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(1, int(_GLF_ZERO(0.0, injectionSwitch.x)))), max(int(ivec2(1, int(_GLF_ZERO(0.0, injectionSwitch.x)))), int(ivec2(1, int(_GLF_ZERO(0.0, injectionSwitch.x)))))))) / 1u)) * 1u);
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))) < subgroup_size, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(false || (_GLF_IDENTITY(subgroup_local_id + 1, uint(uint(subgroup_local_id + 1))) < subgroup_size), bool(bvec4(false || (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, uint(uint(subgroup_local_id + 1))), (_GLF_IDENTITY(subgroup_local_id + 1, uint(uint(subgroup_local_id + 1)))) >> 0u) < subgroup_size), true, true, false)))), true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, false)), true && (bool(bvec4(false, true, true, false)))))) && true), true)), bool(bool(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, false || (_GLF_IDENTITY(subgroup_local_id + 1, uint(uint(subgroup_local_id + 1))) < subgroup_size)), true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, false)), true && (_GLF_IDENTITY(bool(bvec4(false, true, true, false)), (bool(bvec4(false, true, true, false))) || false))))) && true), _GLF_IDENTITY(true, bool(bvec2(true, _GLF_IDENTITY(false, (false) && true)))))), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(cosh(7.5)) : injectionSwitch.x)) < injectionSwitch.y)) ? subgroup_size : _GLF_FUZZED(workgroup_size))), _GLF_IDENTITY(false, false || (false)) || (_GLF_IDENTITY(subgroup_local_id + 1, uint(uint(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u)) * 1u) + 1))) < subgroup_size)), true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, false)), true && (_GLF_IDENTITY(bool(bvec4(false, true, true, false)), (bool(bvec4(false, true, true, false))) || false))))) && true), true)), true && (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + 1 < subgroup_size, false || (_GLF_IDENTITY(subgroup_local_id + 1, uint(uint(subgroup_local_id + 1))) < subgroup_size)), true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, false)), true && _GLF_IDENTITY((bool(bvec4(false, _GLF_IDENTITY(true, ! (! (true))), true, false))), false || ((bool(bvec4(false, _GLF_IDENTITY(true, ! (! (true))), true, false)))))))) && true), true))))))))))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY((1 & 1), (_GLF_IDENTITY((1 & 1), ~ (~ (_GLF_IDENTITY((1 & 1), ~ (~ ((1 & 1)))))))) >> 0)); _injected_loop_counter ++)
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_DEAD(false))
            return;
          }
         else
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y))))))
              {
               return;
              }
             else
              {
              }
            }
          }
        }
       return;
      }
    }
   else
    {
    }
   int i = 0;
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, false)))))) && true)))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               return;
              }
            }
           else
            {
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         else
          {
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) || false))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            return;
           return;
           if(_GLF_DEAD(false))
            return;
          }
         else
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
            return;
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = (1 | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
            {
             do
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   return;
                  }
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
               return;
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  return;
                 break;
                }
               if(_GLF_DEAD(false))
                return;
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true)))))))
              {
               return;
              }
             else
              {
              }
            }
          }
        }
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), false || (_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))), false))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (! (false)))))))) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (! (false)))))))) || false))))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), false || (_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))), false))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (! (false)))))))) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (! (false)))))))) || false))))) || false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), false || (_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))), false))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (! (false)))))))) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (! (false)))))))) || false))))) || false), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), false || (_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))), false))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (! (false)))))))) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (! (false)))))))) || false))))) || false), false), true, false)))))) || false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < 1) && true)); _injected_loop_counter ++)
          {
           return;
          }
        }
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         do
          {
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) - 0.0), injectionSwitch.y)), clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(0.9)), float(injectionSwitch.y), bool(true)))))))))
            return;
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))));
        }
      }
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, false || (true)), _GLF_IDENTITY(false, (false) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            return;
          }
         else
          {
           return;
           if(_GLF_DEAD(false))
            return;
          }
        }
      }
     else
      {
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     do
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      return;
    }
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, 0u ^ (next_virtual_gid))], uint(2), 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), bool(bool(bool(bvec4(_GLF_DEAD(false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            {
             do
              {
               return;
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
             if(_GLF_DEAD(false))
              return;
            }
          }
         else
          {
          }
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
          return;
         return;
        }
       do
        {
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x3(injectionSwitch.x, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0, 0.0, 0.0, 1.0)), max(float(mat4x3(injectionSwitch.x, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0, 0.0, 0.0, 1.0)), float(mat4x3(injectionSwitch.x, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0, 0.0, 0.0, 1.0))))) > injectionSwitch.y))))
            return;
           continue;
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))))
          continue;
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec3(bvec2(_GLF_DEAD(false), false), false)))), bool(bool(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec3(bvec2(_GLF_DEAD(false), false), false)))))))))
          return;
         return;
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), ! (! (_GLF_DEAD(false)))))
      return;
     for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), true && (_GLF_WRAPPED_LOOP(_injected_loop_counter != 0))); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
       atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, 0u | (next_virtual_gid))], uint(2), 4, 64, 4);
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          break;
         break;
        }
      }
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         return;
        }
      }
    }
   else
    {
    }
  }
 for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), 1 * (int(1))), _GLF_IDENTITY(_GLF_IDENTITY(int(1), clamp(_GLF_IDENTITY(int(1), (int(1)) | (int(1))), int(1), int(1))), (_GLF_IDENTITY(int(1), clamp(_GLF_IDENTITY(int(1), _GLF_IDENTITY((int(1)) | (int(1)), ((int(1)) | (int(1))) - 0)), int(1), int(1)))) / 1))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = (((0 ^ 1) << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), max(_GLF_IDENTITY(int(5), (int(5)) | (int(5))), _GLF_IDENTITY(int(5), (_GLF_IDENTITY(int(5), (int(5)) - 0)) | (int(5))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        break;
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
             return;
            }
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            continue;
          }
         if(_GLF_DEAD(false))
          continue;
        }
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
      continue;
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     return;
    }
  }
}
