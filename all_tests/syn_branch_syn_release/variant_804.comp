#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_11 {
 bvec2 _f0;
 mat3 _f1;
 bvec3 _f2;
 vec4 _f3;
 vec2 _f4;
 uint _f5;
 vec4 _f6;
} ;

struct _GLF_struct_10 {
 bvec2 _f0;
 bvec4 _f1;
 mat4x2 _f2;
 mat4x3 _f3;
 mat2 _f4;
 ivec2 _f5;
 int _f6;
} ;

struct _GLF_struct_9 {
 mat3x4 _f0;
 vec2 _f1;
 bvec2 _f2;
 bool _f3;
 mat4x2 _f4;
 ivec2 _f5;
 uvec4 _f6;
} ;

struct _GLF_struct_12 {
 _GLF_struct_9 _f0;
 _GLF_struct_10 _f1;
 _GLF_struct_11 _f2;
} ;

struct _GLF_struct_8 {
 uint _f0;
} ;

struct _GLF_struct_6 {
 bvec3 _f0;
 uvec3 _f1;
 bvec4 _f2;
} ;

struct _GLF_struct_5 {
 mat3 _f0;
} ;

struct _GLF_struct_4 {
 bvec3 _f0;
 ivec4 _f1;
 mat3 _f2;
} ;

struct _GLF_struct_3 {
 mat4x3 _f0;
 mat2x4 _f1;
} ;

struct _GLF_struct_2 {
 mat4x2 _f0;
 mat3x2 _f1;
 ivec4 _f2;
} ;

struct _GLF_struct_7 {
 uint num_workgroup;
 bool _f0;
 _GLF_struct_2 _f1;
 _GLF_struct_3 _f2;
 _GLF_struct_4 _f3;
 _GLF_struct_5 _f4;
 _GLF_struct_6 _f5;
} ;

struct _GLF_struct_13 {
 _GLF_struct_7 _f0;
 mat4x3 _f1;
 _GLF_struct_8 _f2;
 _GLF_struct_12 _f3;
} ;

struct _GLF_struct_0 {
 bvec4 _f0;
} ;

struct _GLF_struct_1 {
 mat3x4 _f0;
 _GLF_struct_0 _f1;
 uint subgroup_size;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))
    barrier();
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 _GLF_struct_1 _GLF_struct_replacement_1 = _GLF_struct_1(mat3x4(1.0), _GLF_struct_0(bvec4(true)), gl_SubgroupSize);
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))), false, true, true)), ! (! (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, true))))))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) : _GLF_FUZZED(mod(round(-5.9), -151.351)))) > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) : _GLF_FUZZED(mod(round(-5.9), -151.351)))) > injectionSwitch.y))), (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) : _GLF_FUZZED(mod(round(-5.9), -151.351)))) > injectionSwitch.y)))) || false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))).y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))) && true)))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 _GLF_struct_13 _GLF_struct_replacement_13 = _GLF_struct_13(_GLF_struct_7(gl_NumWorkGroups.x, true, _GLF_struct_2(mat4x2(_GLF_IDENTITY(1.0, float(mat2(1.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 0.0)))), mat3x2(1.0), ivec4(1)), _GLF_struct_3(mat4x3(1.0), mat2x4(1.0)), _GLF_struct_4(bvec3(true), ivec4(1), mat3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec2(1.0, exp(0.0))), clamp(float(vec2(1.0, exp(0.0))), _GLF_IDENTITY(_GLF_IDENTITY(float(vec2(1.0, exp(0.0))), (float(vec2(1.0, exp(0.0)))) / 1.0), (_GLF_IDENTITY(float(vec2(1.0, exp(0.0))), (float(vec2(1.0, exp(0.0)))) / 1.0)) / 1.0), float(vec2(1.0, exp(0.0)))))), _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec2(1.0, _GLF_IDENTITY(exp(0.0), min(_GLF_IDENTITY(_GLF_IDENTITY(exp(0.0), max(_GLF_IDENTITY(exp(0.0), float(vec4(exp(0.0), 0.0, 0.0, 1.0))), exp(0.0))), 1.0 * (exp(0.0))), exp(0.0))))), clamp(_GLF_IDENTITY(float(vec2(1.0, exp(_GLF_IDENTITY(0.0, min(0.0, 0.0))))), max(float(vec2(1.0, exp(0.0))), _GLF_IDENTITY(float(vec2(1.0, _GLF_IDENTITY(exp(0.0), (true ? exp(0.0) : _GLF_FUZZED(dot(vec3(-0.1, 7.2, -8.1), vec3(-682.504, -775.186, 4.9))))))), (float(vec2(1.0, exp(0.0)))) / _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), clamp(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))))))), float(vec2(1.0, exp(0.0))), float(_GLF_IDENTITY(vec2(1.0, exp(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) / 1.0)) / 1.0))), max(vec2(1.0, exp(0.0)), _GLF_IDENTITY(vec2(1.0, exp(0.0)), min(vec2(1.0, exp(0.0)), _GLF_IDENTITY(vec2(1.0, exp(0.0)), mix(vec2(_GLF_FUZZED(3.0), _GLF_FUZZED(-5549.3451)), vec2((vec2(1.0, exp(0.0)))[0], (vec2(1.0, exp(0.0)))[1]), bvec2(true, true))))))))))), clamp(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec2(1.0, exp(0.0))), clamp(float(vec2(1.0, exp(0.0))), _GLF_IDENTITY(float(vec2(1.0, exp(0.0))), min(float(vec2(1.0, exp(0.0))), float(vec2(1.0, exp(0.0))))), float(vec2(1.0, exp(0.0)))))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec2(1.0, exp(0.0))), clamp(_GLF_IDENTITY(float(vec2(1.0, _GLF_IDENTITY(exp(0.0), mix(float(exp(0.0)), float(_GLF_FUZZED(vec3(-1.2, -2554.2647, -0.9).z)), bool(false))))), min(_GLF_IDENTITY(float(vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), exp(0.0))), (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(-3.5) : float(vec2(1.0, exp(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec4(0.0, 1.0, abs(0.0), 0.0)), clamp(float(vec4(0.0, 1.0, abs(0.0), 0.0)), _GLF_IDENTITY(float(vec4(0.0, 1.0, abs(0.0), 0.0)), (false ? _GLF_FUZZED(-9425.9078) : float(vec4(0.0, 1.0, abs(0.0), 0.0)))), float(vec4(0.0, 1.0, abs(0.0), 0.0)))))))), mix(float(_GLF_FUZZED(float(false))), float(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(-3.5) : float(vec2(1.0, exp(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec4(0.0, 1.0, abs(0.0), 0.0)), clamp(float(vec4(0.0, 1.0, abs(0.0), 0.0)), _GLF_IDENTITY(float(vec4(0.0, 1.0, abs(0.0), 0.0)), (false ? _GLF_FUZZED(-9425.9078) : float(vec4(0.0, 1.0, abs(0.0), 0.0)))), float(vec4(0.0, 1.0, abs(0.0), 0.0)))))))), mix(float(_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(-3.5) : float(vec2(1.0, exp(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec4(0.0, 1.0, abs(0.0), 0.0)), clamp(float(vec4(0.0, 1.0, abs(0.0), 0.0)), _GLF_IDENTITY(float(vec4(0.0, 1.0, abs(0.0), 0.0)), (false ? _GLF_FUZZED(-9425.9078) : float(vec4(0.0, 1.0, abs(0.0), 0.0)))), float(vec4(0.0, 1.0, abs(0.0), 0.0))))))))), float(_GLF_FUZZED(7.3)), bool(false)))), bool(true))))), float(vec2(1.0, exp(0.0))))), float(vec2(1.0, exp(0.0))), float(vec2(1.0, exp(0.0)))))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(float(vec2(1.0, exp(0.0))), clamp(float(vec2(1.0, exp(0.0))), float(vec2(1.0, exp(0.0))), float(vec2(1.0, exp(0.0))))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(float(vec2(1.0, exp(0.0))), clamp(float(vec2(1.0, exp(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0))))), float(vec2(1.0, exp(0.0))), float(vec2(1.0, exp(0.0))))), 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)))).y)), (mat3x2(_GLF_IDENTITY(float(vec2(1.0, exp(0.0))), clamp(float(vec2(1.0, exp(0.0))), float(vec2(1.0, exp(0.0))), float(vec2(1.0, exp(0.0))))), 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))) - mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), max(_GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(float(vec2(1.0, exp(0.0))), clamp(float(vec2(1.0, exp(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0))))), float(vec2(1.0, exp(0.0))), float(vec2(1.0, exp(_GLF_IDENTITY(0.0, (0.0) - sin(sin(0.0)))))))), 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)))).y)), (mat3x2(_GLF_IDENTITY(float(vec2(1.0, exp(0.0))), clamp(float(vec2(1.0, exp(0.0))), float(vec2(1.0, exp(0.0))), float(vec2(1.0, exp(0.0))))), 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))) - mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 1.0 * (float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(float(vec2(1.0, exp(0.0))), clamp(float(vec2(1.0, exp(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0))))), float(vec2(1.0, exp(0.0))), float(vec2(1.0, exp(0.0))))), 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)))).y)), (mat3x2(_GLF_IDENTITY(float(vec2(1.0, exp(0.0))), clamp(float(vec2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(5614.2262)), float(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(9178.4148)), bool(false)))), bool(true))), exp(0.0))), float(vec2(1.0, exp(0.0))), float(vec2(1.0, exp(0.0))))), 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))) - mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(float(vec2(1.0, exp(0.0))), clamp(float(vec2(1.0, exp(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0))))), float(vec2(1.0, exp(0.0))), float(vec2(1.0, exp(0.0))))), 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)))).y)), (mat3x2(_GLF_IDENTITY(float(vec2(1.0, exp(0.0))), clamp(float(vec2(1.0, exp(0.0))), float(vec2(1.0, exp(0.0))), float(vec2(1.0, exp(0.0))))), 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(5.9)), float(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-1102.0411)), float(0.0), bool(true)))), bool(true))), _GLF_ONE(1.0, injectionSwitch.y))) - mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), float(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(float(vec2(1.0, exp(0.0))), clamp(float(vec2(1.0, exp(0.0))), float(vec2(1.0, exp(0.0))), float(vec2(1.0, exp(0.0))))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(float(vec2(1.0, exp(0.0))), clamp(float(vec2(1.0, exp(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0))))), float(vec2(1.0, exp(0.0))), float(vec2(1.0, exp(0.0))))), 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)))).y)), (mat3x2(_GLF_IDENTITY(float(vec2(1.0, exp(0.0))), clamp(float(vec2(1.0, exp(0.0))), float(vec2(1.0, exp(0.0))), float(vec2(1.0, exp(0.0))))), 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))) - mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), max(_GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(float(vec2(1.0, exp(0.0))), clamp(float(vec2(1.0, exp(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0))))), float(vec2(1.0, exp(0.0))), float(vec2(1.0, exp(_GLF_IDENTITY(0.0, (0.0) - sin(sin(0.0)))))))), 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)))).y)), (mat3x2(_GLF_IDENTITY(float(vec2(1.0, exp(0.0))), clamp(float(vec2(1.0, exp(0.0))), float(vec2(1.0, exp(0.0))), float(vec2(1.0, exp(0.0))))), 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))) - mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 1.0 * (float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(float(vec2(1.0, exp(0.0))), clamp(float(vec2(1.0, exp(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0))))), float(vec2(1.0, exp(0.0))), float(vec2(1.0, exp(0.0))))), 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)))).y)), (mat3x2(_GLF_IDENTITY(float(vec2(1.0, exp(0.0))), clamp(float(vec2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(5614.2262)), float(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(9178.4148)), bool(false)))), bool(true))), exp(0.0))), float(vec2(1.0, exp(0.0))), float(vec2(1.0, exp(0.0))))), 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))) - mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(float(vec2(1.0, exp(0.0))), clamp(float(vec2(1.0, exp(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0))))), float(vec2(1.0, exp(0.0))), float(vec2(1.0, exp(0.0))))), 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)))).y)), (mat3x2(_GLF_IDENTITY(float(vec2(1.0, exp(0.0))), clamp(float(vec2(1.0, exp(0.0))), float(vec2(1.0, exp(0.0))), float(vec2(1.0, exp(0.0))))), 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(5.9)), float(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-1102.0411)), float(0.0), bool(true)))), bool(true))), _GLF_ONE(1.0, injectionSwitch.y))) - mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(float(vec2(1.0, exp(0.0))), clamp(float(vec2(1.0, exp(0.0))), float(vec2(1.0, exp(0.0))), float(vec2(1.0, exp(0.0))))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(float(vec2(1.0, exp(0.0))), clamp(float(vec2(1.0, exp(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0))))), float(vec2(1.0, exp(0.0))), float(vec2(1.0, exp(0.0))))), 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)))).y)), (mat3x2(_GLF_IDENTITY(float(vec2(1.0, exp(0.0))), clamp(float(vec2(1.0, exp(0.0))), float(vec2(1.0, exp(0.0))), float(vec2(1.0, exp(0.0))))), 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))) - mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), max(_GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(float(vec2(1.0, exp(0.0))), clamp(float(vec2(1.0, exp(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0))))), float(vec2(1.0, exp(0.0))), float(vec2(1.0, exp(_GLF_IDENTITY(0.0, (0.0) - sin(sin(0.0)))))))), 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)))).y)), (mat3x2(_GLF_IDENTITY(float(vec2(1.0, exp(0.0))), clamp(float(vec2(1.0, exp(0.0))), float(vec2(1.0, exp(0.0))), float(vec2(1.0, exp(0.0))))), 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))) - mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 1.0 * (float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(float(vec2(1.0, exp(0.0))), clamp(float(vec2(1.0, exp(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0))))), float(vec2(1.0, exp(0.0))), float(vec2(1.0, exp(0.0))))), 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)))).y)), (mat3x2(_GLF_IDENTITY(float(vec2(1.0, exp(0.0))), clamp(float(vec2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(5614.2262)), float(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(9178.4148)), bool(false)))), bool(true))), exp(0.0))), float(vec2(1.0, exp(0.0))), float(vec2(1.0, exp(0.0))))), 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))) - mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(float(vec2(1.0, exp(0.0))), clamp(float(vec2(1.0, exp(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0))))), float(vec2(1.0, exp(0.0))), float(vec2(1.0, exp(0.0))))), 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)))).y)), (mat3x2(_GLF_IDENTITY(float(vec2(1.0, exp(0.0))), clamp(float(vec2(1.0, exp(0.0))), float(vec2(1.0, exp(0.0))), float(vec2(1.0, exp(0.0))))), 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(5.9)), float(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-1102.0411)), float(0.0), bool(true)))), bool(true))), _GLF_ONE(1.0, injectionSwitch.y))) - mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(float(vec2(1.0, exp(0.0))), clamp(float(vec2(1.0, exp(0.0))), float(vec2(1.0, exp(0.0))), float(vec2(1.0, exp(0.0))))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(float(vec2(1.0, exp(0.0))), clamp(float(vec2(1.0, exp(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0))))), float(vec2(1.0, exp(0.0))), float(vec2(1.0, exp(0.0))))), 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)))).y)), (mat3x2(_GLF_IDENTITY(float(vec2(1.0, exp(0.0))), clamp(float(vec2(1.0, exp(0.0))), float(vec2(1.0, exp(0.0))), float(vec2(1.0, exp(0.0))))), 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))) - mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), max(_GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(float(vec2(1.0, exp(0.0))), clamp(float(vec2(1.0, exp(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0))))), float(vec2(1.0, exp(0.0))), float(vec2(1.0, exp(_GLF_IDENTITY(0.0, (0.0) - sin(sin(0.0)))))))), 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)))).y)), (mat3x2(_GLF_IDENTITY(float(vec2(1.0, exp(0.0))), clamp(float(vec2(1.0, exp(0.0))), float(vec2(1.0, exp(0.0))), float(vec2(1.0, exp(0.0))))), 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))) - mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 1.0 * (float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(float(vec2(1.0, exp(0.0))), clamp(float(vec2(1.0, exp(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0))))), float(vec2(1.0, exp(0.0))), float(vec2(1.0, exp(0.0))))), 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)))).y)), (mat3x2(_GLF_IDENTITY(float(vec2(1.0, exp(0.0))), clamp(float(vec2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(5614.2262)), float(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(9178.4148)), bool(false)))), bool(true))), exp(0.0))), float(vec2(1.0, exp(0.0))), float(vec2(1.0, exp(0.0))))), 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))) - mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(float(vec2(1.0, exp(0.0))), clamp(float(vec2(1.0, exp(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0))))), float(vec2(1.0, exp(0.0))), float(vec2(1.0, exp(0.0))))), 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)))).y)), (mat3x2(_GLF_IDENTITY(float(vec2(1.0, exp(0.0))), clamp(float(vec2(1.0, exp(0.0))), float(vec2(1.0, exp(0.0))), float(vec2(1.0, exp(0.0))))), 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(5.9)), float(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-1102.0411)), float(0.0), bool(true)))), bool(true))), _GLF_ONE(1.0, injectionSwitch.y))) - mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(float(vec2(1.0, exp(0.0))), clamp(float(vec2(1.0, exp(0.0))), float(vec2(1.0, exp(0.0))), float(vec2(1.0, exp(0.0))))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(float(vec2(1.0, exp(0.0))), clamp(float(vec2(1.0, exp(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0))))), float(vec2(1.0, exp(0.0))), float(vec2(1.0, exp(0.0))))), 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)))).y)), (mat3x2(_GLF_IDENTITY(float(vec2(1.0, exp(0.0))), clamp(float(vec2(1.0, exp(0.0))), float(vec2(1.0, exp(0.0))), float(vec2(1.0, exp(0.0))))), 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))) - mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), max(_GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(float(vec2(1.0, exp(0.0))), clamp(float(vec2(1.0, exp(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0))))), float(vec2(1.0, exp(0.0))), float(vec2(1.0, exp(_GLF_IDENTITY(0.0, (0.0) - sin(sin(0.0)))))))), 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)))).y)), (mat3x2(_GLF_IDENTITY(float(vec2(1.0, exp(0.0))), clamp(float(vec2(1.0, exp(0.0))), float(vec2(1.0, exp(0.0))), float(vec2(1.0, exp(0.0))))), 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))) - mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 1.0 * (float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(float(vec2(1.0, exp(0.0))), clamp(float(vec2(1.0, exp(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0))))), float(vec2(1.0, exp(0.0))), float(vec2(1.0, exp(0.0))))), 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)))).y)), (mat3x2(_GLF_IDENTITY(float(vec2(1.0, exp(0.0))), clamp(float(vec2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(5614.2262)), float(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(9178.4148)), bool(false)))), bool(true))), exp(0.0))), float(vec2(1.0, exp(0.0))), float(vec2(1.0, exp(0.0))))), 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))) - mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(float(vec2(1.0, exp(0.0))), clamp(float(vec2(1.0, exp(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0))))), float(vec2(1.0, exp(0.0))), float(vec2(1.0, exp(0.0))))), 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)))).y)), (mat3x2(_GLF_IDENTITY(float(vec2(1.0, exp(0.0))), clamp(float(vec2(1.0, exp(0.0))), float(vec2(1.0, exp(0.0))), float(vec2(1.0, exp(0.0))))), 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(5.9)), float(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-1102.0411)), float(0.0), bool(true)))), bool(true))), _GLF_ONE(1.0, injectionSwitch.y))) - mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))))))), min(_GLF_IDENTITY(float(vec2(1.0, exp(0.0))), clamp(_GLF_IDENTITY(float(vec2(1.0, _GLF_IDENTITY(_GLF_IDENTITY(exp(0.0), (exp(0.0)) - 0.0), float(mat3(exp(0.0), 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, 1.0, 1.0))))), max(_GLF_IDENTITY(float(vec2(1.0, _GLF_IDENTITY(exp(0.0), float(mat3(exp(0.0), 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, 1.0, 1.0))))), (float(vec2(1.0, _GLF_IDENTITY(exp(0.0), float(mat3(exp(0.0), 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, 1.0, 1.0)))))) - 0.0), float(vec2(1.0, _GLF_IDENTITY(exp(0.0), float(mat3(exp(0.0), 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, 1.0, 1.0))))))), float(vec2(1.0, exp(0.0))), float(vec2(1.0, _GLF_IDENTITY(exp(_GLF_IDENTITY(0.0, max(0.0, 0.0))), float(mat3x2(exp(_GLF_IDENTITY(0.0, max(0.0, 0.0))), 0.0, 1.0, 0.0, 1.0, 1.0))))))), _GLF_IDENTITY(float(vec2(1.0, exp(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(4689.5803) : 0.0)), (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(4689.5803) : 0.0))) * exp(0.0))))), clamp(float(vec2(1.0, exp(0.0))), float(vec2(1.0, exp(0.0))), float(vec2(1.0, exp(0.0)))))))))), 0.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, 1.0)), mix(float(_GLF_FUZZED(vec4(0.5, 868.353, -41.64, _GLF_IDENTITY(-719.191, clamp(-719.191, -719.191, -719.191))).w)), _GLF_IDENTITY(float(float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec2(1.0, _GLF_IDENTITY(exp(0.0), min(_GLF_IDENTITY(exp(0.0), 1.0 * (exp(0.0))), exp(0.0))))), clamp(_GLF_IDENTITY(float(vec2(1.0, exp(0.0))), max(float(vec2(1.0, exp(0.0))), _GLF_IDENTITY(float(vec2(1.0, _GLF_IDENTITY(_GLF_IDENTITY(exp(0.0), (true ? exp(0.0) : _GLF_IDENTITY(_GLF_FUZZED(dot(vec3(-0.1, 7.2, -8.1), vec3(-682.504, -775.186, 4.9))), float(mat3x2(_GLF_FUZZED(dot(vec3(-0.1, 7.2, -8.1), vec3(-682.504, -775.186, 4.9))), 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0)), dot(vec2(0.0, 1.0), vec2(determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0))), 1.0, 0.0, 0.0))))), (true ? _GLF_IDENTITY(exp(0.0), (true ? exp(0.0) : _GLF_IDENTITY(_GLF_FUZZED(dot(vec3(-0.1, 7.2, -8.1), vec3(-682.504, -775.186, 4.9))), float(mat3x2(_GLF_FUZZED(dot(vec3(-0.1, 7.2, -8.1), vec3(-682.504, -775.186, 4.9))), 0.0, _GLF_IDENTITY(dot(vec2(0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), vec2(determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0)), dot(vec2(0.0, 1.0), vec2(determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0))), 1.0, 0.0, 0.0))))) : _GLF_FUZZED(-58.99))))), (float(vec2(1.0, exp(0.0)))) / _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), clamp(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 0.0), vec2(1.0, 0.0))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), (vec2(1.0, 0.0)) * mat2(1.0)))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))))))), float(vec2(1.0, exp(0.0))), float(vec2(1.0, exp(0.0)))))), clamp(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec2(1.0, exp(0.0))), clamp(float(vec2(1.0, exp(0.0))), _GLF_IDENTITY(float(vec2(1.0, exp(0.0))), min(float(vec2(1.0, exp(0.0))), float(vec2(1.0, exp(0.0))))), float(vec2(1.0, exp(0.0)))))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec2(1.0, exp(0.0))), clamp(_GLF_IDENTITY(float(vec2(1.0, _GLF_IDENTITY(exp(0.0), mix(float(exp(0.0)), float(_GLF_FUZZED(vec3(-1.2, -2554.2647, -0.9).z)), bool(false))))), min(_GLF_IDENTITY(float(vec2(1.0, exp(0.0))), (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(-3.5) : float(vec2(1.0, exp(0.0))))), float(vec2(1.0, exp(0.0))))), float(vec2(1.0, exp(0.0))), float(vec2(1.0, exp(0.0)))))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(float(vec2(1.0, _GLF_IDENTITY(exp(0.0), clamp(exp(0.0), exp(0.0), exp(0.0))))), clamp(float(vec2(1.0, exp(0.0))), float(vec2(1.0, exp(0.0))), float(vec2(1.0, exp(0.0))))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(float(vec2(1.0, exp(0.0))), clamp(float(vec2(1.0, exp(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0))))), float(vec2(1.0, exp(0.0))), float(vec2(1.0, exp(0.0))))), 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)))).y)), (mat3x2(_GLF_IDENTITY(float(vec2(1.0, exp(0.0))), clamp(float(vec2(1.0, exp(0.0))), float(vec2(1.0, exp(0.0))), float(vec2(1.0, exp(0.0))))), 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))) - mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), max(_GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(float(vec2(1.0, exp(0.0))), clamp(float(vec2(1.0, exp(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0))))), float(vec2(1.0, exp(0.0))), float(vec2(1.0, exp(0.0))))), 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)))).y)), (mat3x2(_GLF_IDENTITY(float(vec2(1.0, exp(0.0))), clamp(float(vec2(1.0, exp(0.0))), float(vec2(1.0, exp(0.0))), float(vec2(1.0, _GLF_IDENTITY(exp(0.0), (true ? exp(0.0) : _GLF_FUZZED(50.87))))))), 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))) - mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 1.0 * (float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(float(vec2(1.0, exp(0.0))), clamp(float(vec2(1.0, exp(_GLF_IDENTITY(0.0, _GLF_IDENTITY(clamp(0.0, _GLF_IDENTITY(0.0, 0.0 + _GLF_IDENTITY((0.0), max(_GLF_IDENTITY((0.0), (false ? _GLF_FUZZED(9.8) : (0.0))), (0.0)))), 0.0), float(mat2(_GLF_IDENTITY(clamp(0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0), clamp(clamp(0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0), clamp(0.0, _GLF_IDENTITY(0.0, 0.0 + _GLF_IDENTITY((0.0), min((0.0), _GLF_IDENTITY((0.0), min((0.0), (0.0)))))), 0.0), clamp(0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0))), 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(clamp(injectionSwitch, -0.0, 91.96)) : vec2(1.0, 0.0)))))))))))), float(vec2(1.0, exp(0.0))), float(vec2(1.0, exp(0.0))))), 1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)))).y)), (mat3x2(_GLF_IDENTITY(float(vec2(1.0, exp(0.0))), clamp(float(vec2(1.0, exp(0.0))), float(vec2(1.0, exp(0.0))), float(vec2(1.0, exp(0.0))))), 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))) - mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(float(vec2(1.0, exp(0.0))), clamp(float(vec2(1.0, exp(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0))))), float(vec2(1.0, exp(0.0))), float(vec2(1.0, exp(0.0))))), float(vec4(_GLF_IDENTITY(float(vec2(1.0, exp(0.0))), clamp(float(vec2(1.0, exp(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0))))), float(vec2(1.0, exp(0.0))), float(vec2(1.0, exp(0.0))))), 1.0, 0.0, 1.0))), 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)))).y)), (mat3x2(_GLF_IDENTITY(float(vec2(1.0, exp(0.0))), clamp(float(vec2(1.0, exp(0.0))), float(vec2(1.0, exp(0.0))), float(vec2(1.0, exp(0.0))))), 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))) - mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), min(_GLF_IDENTITY(float(vec2(1.0, exp(0.0))), clamp(float(vec2(1.0, _GLF_IDENTITY(exp(0.0), float(mat3(exp(0.0), 1.0, 1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y), 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0))))), float(vec2(1.0, exp(0.0))), float(vec2(1.0, exp(_GLF_IDENTITY(0.0, max(0.0, 0.0))))))), _GLF_IDENTITY(float(vec2(1.0, exp(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(4689.5803) : 0.0)), (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(4689.5803) : 0.0))) * exp(0.0))))), clamp(float(vec2(1.0, exp(0.0))), float(vec2(1.0, exp(0.0))), float(vec2(1.0, exp(0.0)))))))))), 0.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))))), mix(float(float(float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec2(1.0, _GLF_IDENTITY(exp(0.0), min(_GLF_IDENTITY(exp(0.0), 1.0 * (exp(0.0))), exp(0.0))))), clamp(_GLF_IDENTITY(float(vec2(1.0, exp(0.0))), max(float(vec2(1.0, exp(0.0))), _GLF_IDENTITY(float(vec2(1.0, _GLF_IDENTITY(_GLF_IDENTITY(exp(0.0), (true ? exp(0.0) : _GLF_IDENTITY(_GLF_FUZZED(dot(vec3(-0.1, 7.2, -8.1), vec3(-682.504, -775.186, 4.9))), float(mat3x2(_GLF_FUZZED(dot(vec3(-0.1, 7.2, -8.1), vec3(-682.504, -775.186, 4.9))), 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0)), dot(vec2(0.0, 1.0), vec2(determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0))), 1.0, 0.0, 0.0))))), (true ? _GLF_IDENTITY(exp(0.0), (true ? exp(0.0) : _GLF_IDENTITY(_GLF_FUZZED(dot(vec3(-0.1, 7.2, -8.1), vec3(-682.504, -775.186, 4.9))), float(mat3x2(_GLF_FUZZED(dot(vec3(-0.1, 7.2, -8.1), vec3(-682.504, -775.186, 4.9))), 0.0, _GLF_IDENTITY(dot(vec2(0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), vec2(determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0)), dot(vec2(0.0, 1.0), vec2(determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0))), 1.0, 0.0, 0.0))))) : _GLF_FUZZED(-58.99))))), (float(vec2(1.0, exp(0.0)))) / _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), clamp(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 0.0), vec2(1.0, 0.0))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), (vec2(1.0, 0.0)) * mat2(1.0)))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))))))), float(vec2(1.0, exp(0.0))), float(vec2(1.0, exp(0.0)))))), clamp(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec2(1.0, exp(0.0))), clamp(float(vec2(1.0, exp(0.0))), _GLF_IDENTITY(float(vec2(1.0, exp(0.0))), min(float(vec2(1.0, exp(0.0))), float(vec2(1.0, exp(0.0))))), float(vec2(1.0, exp(0.0)))))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec2(1.0, exp(0.0))), clamp(_GLF_IDENTITY(float(vec2(1.0, _GLF_IDENTITY(exp(0.0), mix(float(exp(0.0)), float(_GLF_FUZZED(vec3(-1.2, -2554.2647, -0.9).z)), bool(false))))), min(_GLF_IDENTITY(float(vec2(1.0, exp(0.0))), (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(-3.5) : float(vec2(1.0, exp(0.0))))), float(vec2(1.0, exp(0.0))))), float(vec2(1.0, exp(0.0))), float(vec2(1.0, exp(0.0)))))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(float(vec2(1.0, _GLF_IDENTITY(exp(0.0), clamp(exp(0.0), exp(0.0), exp(0.0))))), clamp(float(vec2(1.0, exp(0.0))), float(vec2(1.0, exp(0.0))), float(vec2(1.0, exp(0.0))))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(float(vec2(1.0, exp(0.0))), clamp(float(vec2(1.0, exp(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0))))), float(vec2(1.0, exp(0.0))), float(vec2(1.0, exp(0.0))))), 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)))).y)), (mat3x2(_GLF_IDENTITY(float(vec2(1.0, exp(0.0))), clamp(float(vec2(1.0, exp(0.0))), float(vec2(1.0, exp(0.0))), float(vec2(1.0, exp(0.0))))), 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))) - mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), max(_GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(float(vec2(1.0, exp(0.0))), clamp(float(vec2(1.0, exp(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0))))), float(vec2(1.0, exp(0.0))), float(vec2(1.0, exp(0.0))))), 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)))).y)), (mat3x2(_GLF_IDENTITY(float(vec2(1.0, exp(0.0))), clamp(float(vec2(1.0, exp(0.0))), float(vec2(1.0, exp(0.0))), float(vec2(1.0, _GLF_IDENTITY(exp(0.0), (true ? exp(0.0) : _GLF_FUZZED(50.87))))))), 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))) - mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 1.0 * (float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(float(vec2(1.0, exp(0.0))), clamp(float(vec2(1.0, exp(_GLF_IDENTITY(0.0, _GLF_IDENTITY(clamp(0.0, _GLF_IDENTITY(0.0, 0.0 + _GLF_IDENTITY((0.0), max(_GLF_IDENTITY((0.0), (false ? _GLF_FUZZED(9.8) : (0.0))), (0.0)))), 0.0), float(mat2(_GLF_IDENTITY(clamp(0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0), clamp(clamp(0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0), clamp(0.0, _GLF_IDENTITY(0.0, 0.0 + _GLF_IDENTITY((0.0), min((0.0), _GLF_IDENTITY((0.0), min((0.0), (0.0)))))), 0.0), clamp(0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0))), 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(clamp(injectionSwitch, -0.0, 91.96)) : vec2(1.0, 0.0)))))))))))), float(vec2(1.0, exp(0.0))), float(vec2(1.0, exp(0.0))))), 1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)))).y)), (mat3x2(_GLF_IDENTITY(float(vec2(1.0, exp(0.0))), clamp(float(vec2(1.0, exp(0.0))), float(vec2(1.0, exp(0.0))), float(vec2(1.0, exp(0.0))))), 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))) - mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(float(vec2(1.0, exp(0.0))), clamp(float(vec2(1.0, exp(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0))))), float(vec2(1.0, exp(0.0))), float(vec2(1.0, exp(0.0))))), float(vec4(_GLF_IDENTITY(float(vec2(1.0, exp(0.0))), clamp(float(vec2(1.0, exp(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0))))), float(vec2(1.0, exp(0.0))), float(vec2(1.0, exp(0.0))))), 1.0, 0.0, 1.0))), 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)))).y)), (mat3x2(_GLF_IDENTITY(float(vec2(1.0, exp(0.0))), clamp(float(vec2(1.0, exp(0.0))), float(vec2(1.0, exp(0.0))), float(vec2(1.0, exp(0.0))))), 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))) - mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), min(_GLF_IDENTITY(float(vec2(1.0, exp(0.0))), clamp(float(vec2(1.0, _GLF_IDENTITY(exp(0.0), float(mat3(exp(0.0), 1.0, 1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y), 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0))))), float(vec2(1.0, exp(0.0))), float(vec2(1.0, exp(_GLF_IDENTITY(0.0, max(0.0, 0.0))))))), _GLF_IDENTITY(float(vec2(1.0, exp(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(4689.5803) : 0.0)), (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(4689.5803) : 0.0))) * exp(0.0))))), clamp(float(vec2(1.0, exp(0.0))), float(vec2(1.0, exp(0.0))), float(vec2(1.0, exp(0.0)))))))))), 0.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))))), float(_GLF_FUZZED(67.48)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(true)))), (1.0) - _GLF_IDENTITY(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(2.0))), _GLF_IDENTITY(clamp(0.0, 0.0, 0.0), clamp(_GLF_IDENTITY(clamp(0.0, 0.0, 0.0), max(clamp(0.0, 0.0, 0.0), clamp(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((-9.3 - 8.5))), bool(false))), 0.0, 0.0))), clamp(0.0, 0.0, 0.0), clamp(0.0, 0.0, 0.0))))))), _GLF_struct_5(mat3(_GLF_IDENTITY(1.0, (1.0) + _GLF_IDENTITY(dot(vec2(0.0, exp(0.0)), _GLF_IDENTITY(vec2(1.0, 0.0), (vec2(1.0, 0.0)) - vec2(0.0, 0.0))), dot(vec2(0.0, exp(0.0)), vec2(1.0, 0.0)))))), _GLF_struct_6(bvec3(true), uvec3(1u), bvec4(true))), mat4x3(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, float(mat2(_GLF_IDENTITY(1.0, 0.0 + (1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0))), 0.0, 0.0))), 1.0, 1.0))) * 1.0)), _GLF_struct_8(1u), _GLF_struct_12(_GLF_struct_9(mat3x4(1.0), vec2(1.0), bvec2(true), true, mat4x2(1.0), ivec2(1), uvec4(1u)), _GLF_struct_10(bvec2(true), bvec4(_GLF_IDENTITY(true, ! (! (true)))), mat4x2(1.0), mat4x3(1.0), mat2(1.0), ivec2(1), 1), _GLF_struct_11(bvec2(true), _GLF_IDENTITY(mat3(1.0), (mat3(1.0)) * mat3(1.0)), bvec3(true), vec4(1.0), vec2(1.0), 1u, vec4(1.0))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
             if(_GLF_DEAD(false))
              return;
            }
           return;
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4(! (_GLF_IDENTITY(false, ! (! (false)))), false, false, true)))), ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4(! (_GLF_IDENTITY(false, ! (! (false)))), false, false, true))))) && _GLF_IDENTITY(true, true && (true))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(1.5), _GLF_FUZZED(_GLF_IDENTITY(-840.005, min(-840.005, -840.005)))), vec2(_GLF_IDENTITY((injectionSwitch)[0], float(_GLF_IDENTITY(mat4((injectionSwitch)[_GLF_IDENTITY(0, _GLF_IDENTITY(int(int(_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0)))))), (int(int(_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, max(0, 0))))))) / 1))], 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, _GLF_ONE(_GLF_IDENTITY(1.0, (1.0) - 0.0), injectionSwitch.y), _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))) + (1.0))))), transpose(transpose(mat4((injectionSwitch)[0], 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0)))))), (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(true, ! (! (true))), true))).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, log(1.0), 1.0), (true ? mat2(injectionSwitch, log(1.0), 1.0) : _GLF_FUZZED(mat2(-4.6, -4521.1383, 7650.9862, 7540.1998)))))).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-5.1)), bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))) && true))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, min(_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)), gl_WorkGroupSize)).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) || false), false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4(injectionSwitch.x, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(cos(0.0), 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(cos(0.0), 0.0, 0.0))), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, exp(0.0), 1.0), (true ? mat4(injectionSwitch.x, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(cos(0.0), 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(cos(0.0), 0.0, 0.0))), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, exp(0.0), 1.0) : _GLF_FUZZED(mat4(196.040, -526.855, 15.57, -6.9, 13.20, 1016.6819, 64.74, -2.5, -695.577, 6.7, -91.41, 6.0, -840.515, 0.9, -292.899, -6.9)))))) > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4(injectionSwitch.x, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(cos(0.0), 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) / 1.0))), dot(vec3(1.0, 0.0, 0.0), vec3(cos(0.0), 0.0, 0.0))), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, exp(0.0), 1.0), (true ? mat4(injectionSwitch.x, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(cos(0.0), 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(cos(0.0), 0.0, 0.0))), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, exp(0.0), 1.0) : _GLF_FUZZED(mat4(196.040, -526.855, 15.57, -6.9, 13.20, 1016.6819, 64.74, -2.5, -695.577, 6.7, -91.41, 6.0, -840.515, 0.9, -292.899, -6.9)))))) > injectionSwitch.y), true, false, true))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_1.subgroup_size, (true ? _GLF_struct_replacement_1.subgroup_size : _GLF_FUZZED(87238u))), min(_GLF_IDENTITY(_GLF_struct_replacement_1.subgroup_size, (true ? _GLF_struct_replacement_1.subgroup_size : _GLF_FUZZED(87238u))), _GLF_IDENTITY(_GLF_struct_replacement_1.subgroup_size, (true ? _GLF_struct_replacement_1.subgroup_size : _GLF_FUZZED(87238u))))) + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), true))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)) * _GLF_struct_replacement_1.subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(~ (~ (subgroup_local_id + 1)), (~ (~ (subgroup_local_id + 1))) - 0u))) % _GLF_struct_replacement_1.subgroup_size);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 buf[virtual_gid] = 1;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) ^ int(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x), clamp(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + _GLF_IDENTITY(vec2(0.0, 0.0), max(vec2(0.0, 0.0), vec2(0.0, 0.0)))).x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x))))) < _GLF_struct_replacement_1.subgroup_size)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))) && true))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), false, true, false))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))) && true))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(false))
              return;
             return;
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 return;
                }
               barrier();
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           barrier();
          }
         return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(false))
              return;
             return;
            }
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(vec2(-670.922, 9.8))), (false ? _GLF_FUZZED((- vec2(4873.0667, 4.9))) : (true ? injectionSwitch : _GLF_FUZZED(vec2(-670.922, 9.8)))))).y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        return;
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))), bool(bvec2(! (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))), true))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   int i = 0;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(false, (false) || false))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false))))))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false))))))))))))), false || (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), true && (bool(bvec2(false, false))))))))))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false))))))))))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))))))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))))))), false, false, false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (false || (false)) && true))), ((_GLF_IDENTITY(false, false || (false)))) && true)) && true)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec3((false), true, false)), bool(bool(bool(bvec3((false), true, false))))))))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))), true), true)))))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(26.50)), bool(false))) > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 1.0, 0.0))))), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))) > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || (true)))))), ! (! (_GLF_IDENTITY(bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), false || (bool(bvec4(false, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)), true))))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool((false))), (bool(bool((false)))) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (_GLF_DEAD(false)))), true)), ! (! (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true)))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || false) || false), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(true, bool(bvec4(true, true, false, true))), false))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), _GLF_IDENTITY(min(_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), (mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)) * vec2(1.0, 1.0)), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), min(_GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), (mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)) * vec2(1.0, 1.0)), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), mat2(1.0) * (min(_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), (mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)) * vec2(1.0, 1.0)), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)))), max(_GLF_IDENTITY(min(_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), (mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)) * vec2(1.0, 1.0)), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), mat2(1.0) * (min(_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), (mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)) * vec2(1.0, 1.0)), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)))), _GLF_IDENTITY(min(_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), (mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)) * vec2(1.0, 1.0)), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), mat2(1.0) * (min(_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), (mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)) * vec2(1.0, 1.0)), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)))))), min(_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), (mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)))) * vec2(1.0, 1.0)), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)))))).y, 0.0, 0.0, _GLF_IDENTITY(1.0, float(mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), sin(sin(0.0)), 1.0, 1.0))), 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-8.6) : 1.0))))), round(_GLF_IDENTITY(length(normalize(1.0)), (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) || false))) ? length(normalize(1.0)) : _GLF_FUZZED(340.230)))), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(sin(0.0), max(_GLF_IDENTITY(sin(0.0), mix(float(_GLF_FUZZED(-73.62)), float(sin(0.0)), bool(true))), _GLF_IDENTITY(sin(0.0), (true ? sin(0.0) : _GLF_FUZZED(-7861.1361))))), 0.0), _GLF_IDENTITY(vec2(1.0, sqrt(1.0)), (vec2(1.0, sqrt(1.0))) / sqrt(vec2(1.0, 1.0)))), dot(vec2(sin(0.0), 0.0), vec2(1.0, sqrt(1.0)))), determinant(mat4(sqrt(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, tan(0.0))), 0.0, 1.0)), mix(float(_GLF_FUZZED(71.67)), float(float(mat3x2(injectionSwitch.y, round(length(_GLF_IDENTITY(normalize(1.0), 0.0 + (_GLF_IDENTITY(normalize(1.0), clamp(_GLF_IDENTITY(normalize(1.0), (_GLF_IDENTITY(normalize(1.0), mix(float(_GLF_FUZZED(-2682.2294)), float(normalize(1.0)), bool(true)))) - 0.0), normalize(1.0), normalize(1.0))))))), _GLF_IDENTITY(dot(vec2(sin(0.0), 0.0), _GLF_IDENTITY(vec2(1.0, sqrt(1.0)), min(vec2(1.0, sqrt(1.0)), _GLF_IDENTITY(vec2(1.0, sqrt(1.0)), (vec2(1.0, sqrt(1.0))) * mat2(1.0))))), dot(vec2(sin(0.0), 0.0), vec2(1.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(sqrt(1.0), min(sqrt(1.0), _GLF_IDENTITY(sqrt(1.0), max(sqrt(1.0), sqrt(1.0))))), max(sqrt(1.0), sqrt(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) - 0.0)) - 0.0)))), clamp(_GLF_IDENTITY(sqrt(1.0), max(sqrt(1.0), sqrt(1.0))), _GLF_IDENTITY(sqrt(1.0), _GLF_IDENTITY(max(sqrt(1.0), _GLF_IDENTITY(sqrt(1.0), float(vec4(sqrt(1.0), 1.0, 1.0, 1.0)))), 0.0 + (max(sqrt(1.0), sqrt(_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), float(mat2x3(max(1.0, 1.0), 0.0, sqrt(length(vec2(0.0, 0.0))), 0.0, sin(0.0), 0.0))))))))), _GLF_IDENTITY(sqrt(1.0), max(_GLF_IDENTITY(sqrt(1.0), mix(float(sqrt(1.0)), float(_GLF_FUZZED(-64.03)), bool(false))), sqrt(1.0)))))))), determinant(mat4(_GLF_IDENTITY(sqrt(0.0), clamp(_GLF_IDENTITY(sqrt(0.0), clamp(_GLF_IDENTITY(sqrt(0.0), float(mat2(sqrt(0.0), 1.0, 1.0, 0.0))), sqrt(0.0), _GLF_IDENTITY(sqrt(0.0), float(mat3x4(sqrt(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), max(vec3(1.0, 1.0, 1.0), vec3(1.0, 1.0, 1.0))))), 1.0)), 1.0))))), sqrt(0.0), sqrt(0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, tan(0.0))), _GLF_IDENTITY(0.0, _GLF_IDENTITY((_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(31.69)), float(0.0), bool(true)))) - 0.0, (_GLF_IDENTITY((_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(31.69)), float(0.0), bool(true)))) - 0.0, ((_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(31.69)), float(0.0), bool(true)))) - 0.0) / 1.0)) - 0.0)), 1.0))), bool(true))))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), min(_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), (mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)) * vec2(1.0, 1.0)), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)))).y, 0.0, 0.0, _GLF_IDENTITY(1.0, float(mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), sin(sin(0.0)), 1.0, 1.0))), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-8.6) : 1.0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-8.6) : 1.0)), clamp(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-8.6) : 1.0)), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-8.6) : 1.0)), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-8.6) : 1.0)))), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-8.6) : 1.0)), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-8.6) : 1.0))))))), round(_GLF_IDENTITY(length(normalize(1.0)), (true ? length(normalize(1.0)) : _GLF_FUZZED(340.230)))), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(sin(0.0), max(_GLF_IDENTITY(sin(0.0), mix(float(_GLF_FUZZED(-73.62)), float(sin(0.0)), bool(true))), _GLF_IDENTITY(sin(0.0), (true ? sin(0.0) : _GLF_FUZZED(-7861.1361))))), 0.0), vec2(1.0, sqrt(1.0))), dot(vec2(sin(0.0), 0.0), vec2(1.0, sqrt(1.0)))), determinant(mat4(sqrt(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, tan(0.0))), 0.0, 1.0)), mix(float(_GLF_FUZZED(71.67)), float(float(mat3x2(injectionSwitch.y, round(length(_GLF_IDENTITY(normalize(1.0), 0.0 + (_GLF_IDENTITY(normalize(1.0), clamp(normalize(1.0), normalize(1.0), normalize(1.0))))))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(sin(0.0), 0.0), _GLF_IDENTITY(vec2(1.0, sqrt(1.0)), min(vec2(1.0, sqrt(1.0)), _GLF_IDENTITY(vec2(1.0, sqrt(1.0)), (vec2(1.0, sqrt(1.0))) * mat2(1.0))))), 1.0 * (dot(vec2(sin(0.0), 0.0), _GLF_IDENTITY(vec2(1.0, sqrt(1.0)), min(vec2(1.0, sqrt(1.0)), _GLF_IDENTITY(vec2(1.0, sqrt(1.0)), (vec2(1.0, sqrt(1.0))) * mat2(1.0))))))), dot(vec2(sin(0.0), 0.0), vec2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(sqrt(1.0), min(sqrt(1.0), sqrt(1.0))), max(sqrt(1.0), sqrt(1.0))), clamp(_GLF_IDENTITY(sqrt(1.0), max(sqrt(1.0), sqrt(1.0))), _GLF_IDENTITY(_GLF_IDENTITY(sqrt(1.0), 1.0 * (sqrt(1.0))), _GLF_IDENTITY(max(sqrt(1.0), _GLF_IDENTITY(sqrt(1.0), float(vec4(sqrt(1.0), 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))))))), 0.0 + (max(sqrt(1.0), _GLF_IDENTITY(sqrt(1.0), min(_GLF_IDENTITY(sqrt(1.0), mix(float(_GLF_FUZZED(-8212.5535)), float(sqrt(1.0)), bool(true))), sqrt(1.0))))))), _GLF_IDENTITY(sqrt(1.0), max(sqrt(1.0), _GLF_IDENTITY(sqrt(1.0), (sqrt(1.0)) / cos(0.0))))))))), determinant(mat4(_GLF_IDENTITY(sqrt(0.0), clamp(_GLF_IDENTITY(sqrt(0.0), clamp(_GLF_IDENTITY(sqrt(0.0), float(mat2(sqrt(0.0), 1.0, 1.0, 0.0))), sqrt(0.0), _GLF_IDENTITY(sqrt(0.0), float(mat3x4(sqrt(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0))))), sqrt(0.0), sqrt(0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, tan(0.0))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, float(mat3(0.0, 0.0, 1.0, 0.0, 0.0, determinant(mat4(0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), determinant(mat3(1.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0))), (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(31.69)), float(0.0), bool(true)))) - 0.0), 1.0))), bool(true)))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-529.817) : injectionSwitch.y)) : _GLF_FUZZED(-9.9)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_IDENTITY(false, ! (! (false))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, (true) || false) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           return;
          }
         barrier();
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false, ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))), bool(bool(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bvec2((false), false)))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true))))), ! (! (false)))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), bvec3(bvec3(bvec3(_GLF_DEAD(false), true, true))))), bool(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), bvec3(bvec3(bvec3(_GLF_DEAD(false), true, true))))), (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), bvec3(bvec3(bvec3(_GLF_DEAD(false), true, true)))))) && true), false, true)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(2, (0 << _GLF_IDENTITY(int(2), int(2))) ^ (2))), uint(_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(2, (0 << _GLF_IDENTITY(int(2), int(2))) ^ (2)))), min(uint(uint(_GLF_IDENTITY(2, (0 << _GLF_IDENTITY(int(2), int(2))) ^ (2)))), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(2, (0 << _GLF_IDENTITY(int(2), int(2))) ^ (2)))), (uint(uint(_GLF_IDENTITY(2, (0 << _GLF_IDENTITY(int(2), int(2))) ^ (2))))) / 1u))))), 4, 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
}
