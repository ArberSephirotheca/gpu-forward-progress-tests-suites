#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! ((false))))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)))) || (_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! ((false))))))), bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), false)))))))) || _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (false)), true, true))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 for(int _injected_loop_counter = ((0 & ivec2(57366, 14739).t) >> _GLF_IDENTITY(int(7), int(7))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, true)))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
      }
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))))))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), true))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))) || false)))) || false))))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 | 1)); _injected_loop_counter ++)
          {
           barrier();
          }
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
          }
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false)))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) || false)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
  }
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])).x, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) / 1u), 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) / 1u))), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) / 1u), 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) / 1u))), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) / 1u), 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) / 1u)))))) * 1u);
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, (true ? gl_WorkGroupSize : _GLF_FUZZED(uvec3(18909u, 110057u, 21134u)))).x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
    }
   else
    {
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(0.0 + (injectionSwitch.y), float(mat2x3(0.0 + (injectionSwitch.y), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, cos(0.0))), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, cos(0.0)))), 0.0, 1.0, 1.0, exp(0.0))))), injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))).x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(4.6)), vec2(_GLF_FUZZED((-3.1 * -7190.4538)), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))).y)))))) || false))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2((vec2(1.0, 1.0))[0], (vec2(1.0, 1.0))[1]), vec2(_GLF_FUZZED(-0.3), _GLF_FUZZED(8017.3564)), bvec2(false, false))))), 1.0)))) / vec2(1.0, 1.0)), injectionSwitch)).y)), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false))))))) || false)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
      }
     else
      {
      }
    }
   do
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) && true) || false, (_GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) && true) || false, ! (! (_GLF_IDENTITY((false), ((false)) && true) || false)))) || false))))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
              barrier();
             barrier();
            }
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
          barrier();
        }
       do
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(0), min(int(0), int(0))), _GLF_IDENTITY(_GLF_IDENTITY(int(0), (int(0)) << 0), 0 ^ (int(0))))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) - 0))), (((1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(_GLF_IDENTITY(0, _GLF_IDENTITY((0) | (0), clamp((0) | (0), (0) | (0), (0) | (0))))), 0 ^ (int(0))))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) - 0)))) + 0)); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           continue;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             barrier();
            }
           else
            {
            }
          }
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     return;
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        break;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), false || ((false)))))))))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, (true) || false) && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))))), true, true))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 for(int _injected_loop_counter = (0 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(7, max(7, _GLF_IDENTITY(7, min(_GLF_IDENTITY(7, (0 & -43085) | (7)), 7))))), int(7))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(int(7), int(7))) / 1))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), min(int(6), int(6))))) >> _GLF_IDENTITY(int(6), int(6)))); _injected_loop_counter ++)
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) && true)))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
        }
      }
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(max(workgroup_size, _GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size) / _GLF_IDENTITY(1u, (1u) >> (117649u & 0u)), (_GLF_IDENTITY(true, false || (true)) ? _GLF_IDENTITY((workgroup_size) / 1u, 0u | _GLF_IDENTITY(((workgroup_size) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY(((workgroup_size) / _GLF_IDENTITY(1u, uint(uvec2(1u, 0u)))), (false ? _GLF_FUZZED(subgroup_local_id) : ((workgroup_size) / _GLF_IDENTITY(1u, uint(uvec2(1u, 0u)))))), (((workgroup_size) / 1u)) | (((workgroup_size) / 1u)))) | 0u)) : _GLF_FUZZED(packSnorm2x16(exp2(vec2(1257.0517, -7.1)))))))), max(_GLF_IDENTITY(max(workgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY((workgroup_size) / 1u, (_GLF_IDENTITY(true ? _GLF_IDENTITY((workgroup_size) / 1u, 0u | ((workgroup_size) / 1u)) : _GLF_FUZZED(packSnorm2x16(exp2(vec2(1257.0517, -7.1)))), 0u | (true ? _GLF_IDENTITY((workgroup_size) / 1u, 0u | ((workgroup_size) / 1u)) : _GLF_FUZZED(packSnorm2x16(exp2(vec2(1257.0517, -7.1)))))))), uint(uvec2(_GLF_IDENTITY((workgroup_size) / 1u, (true ? _GLF_IDENTITY((workgroup_size) / 1u, 0u | _GLF_IDENTITY(((workgroup_size) / 1u), (((workgroup_size) / 1u)) / 1u)) : _GLF_FUZZED(packSnorm2x16(exp2(vec2(1257.0517, -7.1)))))), 0u))))), uint(uvec3(max(workgroup_size, _GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_size), uint(uvec4((workgroup_size), 0u, 1u, 1u))) / 1u, (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_size), (false ? _GLF_FUZZED(183589u) : (workgroup_size))) / 1u, uint(uvec2((workgroup_size) / 1u, 1u))), _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) / 1u))) | ((workgroup_size) / 1u)) : _GLF_FUZZED(packSnorm2x16(exp2(vec2(1257.0517, _GLF_IDENTITY(-7.1, (false ? _GLF_IDENTITY(_GLF_FUZZED(-8.6), min(_GLF_IDENTITY(_GLF_FUZZED(-8.6), max(_GLF_FUZZED(-8.6), _GLF_FUZZED(-8.6))), _GLF_IDENTITY(_GLF_FUZZED(-8.6), (true ? _GLF_IDENTITY(_GLF_FUZZED(-8.6), float(mat4(_GLF_FUZZED(-8.6), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0))) : _GLF_FUZZED(6.6))))) : -7.1)))))))))), 0u, 0u))), max(workgroup_size, _GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size) / 1u, (true ? _GLF_IDENTITY((workgroup_size) / 1u, 0u | (_GLF_IDENTITY((workgroup_size), min((workgroup_size), (workgroup_size))) / 1u)) : _GLF_FUZZED(packSnorm2x16(_GLF_IDENTITY(exp2(vec2(1257.0517, -7.1)), (exp2(vec2(1257.0517, -7.1))) + vec2(0.0, 0.0))))))))))) * workgroup_id;
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))) + 0u) * subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, 1u * (subgroup_id)))), subgroup_id))) + 0u) * subgroup_size) / 1u) + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x) * 1.0) > injectionSwitch.y))))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u), (false ? _GLF_FUZZED(subgroup_id) : (subgroup_local_id + 1))) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) - 0u));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         barrier();
        }
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 | 1)); _injected_loop_counter ++)
      {
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           barrier();
          }
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(mat4(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-470.315) : injectionSwitch.x)), 1.0, 0.0, 0.0, tan(0.0), 1.0, sqrt(1.0), 0.0, cos(0.0), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0)))) + 0.0) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(7.0, 1.0)) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), mix(vec2(_GLF_FUZZED(float(bool(66378))), (_GLF_FUZZED(injectionSwitch))[1]), vec2(_GLF_IDENTITY((_GLF_FUZZED(injectionSwitch))[0], min((_GLF_FUZZED(injectionSwitch))[0], (_GLF_FUZZED(injectionSwitch))[0])), _GLF_FUZZED(float(52582u))), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))).y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 1.0)))))))).y)), false))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(71.37))) < injectionSwitch.y, false, true, true)), ! (! (bool(bvec4(injectionSwitch.x < injectionSwitch.y, false, true, true))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) && true))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-271.095), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(0, (0) - (0 | 0))])), _GLF_FUZZED(vec4(-590.564, -5.7, -2.8, 8.9).a)), bvec2(true, false))).y), false || (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-271.095), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * vec2(1.0, 1.0))[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(vec4(-590.564, -5.7, -2.8, 8.9).a)), _GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), true, false))))).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-271.095), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) - _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0)))), (injectionSwitch)[0])), _GLF_FUZZED(vec4(-590.564, -5.7, -2.8, 8.9).a)), bvec2(true, false))).y)))))))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               barrier();
              }
             else
              {
              }
            }
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bool(bvec2(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), false || (bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), true)))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((_GLF_IDENTITY(false, ! (! (false))))) || false) && true), _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) && true)), true && (true && (_GLF_IDENTITY(false, (false) && true)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(subgroup_local_id + 1 < _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), ~ (~ (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)))))) << 0u))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      barrier();
     int i = 0;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       if(_GLF_DEAD(false))
        barrier();
       do
        {
         do
          {
           barrier();
           if(_GLF_DEAD(false))
            break;
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_DEAD(false))
      {
       do
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
       do
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
            break;
           for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           continue;
          }
         if(_GLF_DEAD(false))
          barrier();
         do
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         else
          {
           return;
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_DEAD(false)), (false || (_GLF_DEAD(false))) && true)))))
        barrier();
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     else
      {
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), false, _GLF_IDENTITY(true, ! (! (true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), false, _GLF_IDENTITY(true, ! (! (true)))))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
          }
        }
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, false))))
      return;
     atomicStore(buf[next_virtual_gid], uint(2), _GLF_IDENTITY(4, int(ivec3(4, 0, 0))), 64, 4);
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = (0 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY((0 >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), min(int(4), int(4)))) ^ (0 >> _GLF_IDENTITY(int(0), int(0)))), int(4)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), min(int(4), int(4)))) ^ (0 >> _GLF_IDENTITY(int(0), int(0)))), int(4)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), min(int(4), int(4)))) ^ (0 >> _GLF_IDENTITY(int(0), int(0)))), int(4)))))) ^ 0)), ((0 >> _GLF_IDENTITY(int(4), int(4)))) * 1)); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ONE(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (1.0) / 1.0) : _GLF_FUZZED(649.898))), 1.0, 1.0)), injectionSwitch.y)), (_injected_loop_counter != int(_GLF_ONE(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (1.0) / 1.0) : _GLF_FUZZED(649.898))), 1.0, 1.0)), injectionSwitch.y))) && true)); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
            }
           else
            {
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               barrier();
              }
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         barrier();
        }
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       for(int _injected_loop_counter = _GLF_IDENTITY(0, max(0, 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)))); _injected_loop_counter ++)
        {
         for(int _injected_loop_counter = (_GLF_IDENTITY(1 | int(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))))).y)), _GLF_IDENTITY(0, clamp(0, 0, 0)) | (_GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, (1) | 0))) | int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(3, (false ? _GLF_FUZZED(_injected_loop_counter) : 3))), _GLF_IDENTITY(int(3), _GLF_IDENTITY(max(int(3), int(3)), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(max(int(3), int(3)), clamp(max(int(3), int(3)), _GLF_IDENTITY(max(int(3), int(3)), (max(int(3), int(3))) - 0), _GLF_IDENTITY(max(int(3), int(3)), 0 ^ (max(int(3), int(3)))))), 1)), (_GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(max(int(3), int(3)), clamp(max(int(3), int(3)), _GLF_IDENTITY(max(int(3), int(3)), (max(int(3), int(3))) - 0), _GLF_IDENTITY(max(int(3), int(3)), 0 ^ (max(int(3), int(3)))))), 1)), 1 * (int(ivec2(_GLF_IDENTITY(max(int(3), int(3)), clamp(max(int(3), int(3)), _GLF_IDENTITY(max(int(3), int(3)), (max(int(3), int(3))) - 0), _GLF_IDENTITY(max(int(3), int(3)), 0 ^ (max(int(3), int(3)))))), 1))))) | (int(ivec2(_GLF_IDENTITY(max(int(3), int(3)), clamp(max(int(3), int(3)), _GLF_IDENTITY(max(int(3), int(3)), (max(int(3), int(3))) - 0), _GLF_IDENTITY(max(int(3), int(3)), 0 ^ (max(int(3), int(3)))))), 1))))))))); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            {
             for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
              {
               barrier();
              }
            }
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           barrier();
          }
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(clamp(_injected_loop_counter, _injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter))), (_GLF_IDENTITY(clamp(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter), (clamp(_injected_loop_counter, _injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, int(ivec2(_injected_loop_counter, 1))))) | (clamp(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter)))) | (_GLF_IDENTITY(clamp(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter), clamp(clamp(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter), clamp(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter), clamp(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter)), (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter)), (_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(clamp(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter), (clamp(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter)) - 0))) * 1)) << 0)) | 0) != int(_GLF_ZERO(_GLF_IDENTITY(0.0, sin(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)))) + (0.0)), injectionSwitch.x))); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(914.336), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(7.9)), bvec2(true, false))).x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(914.336), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(7.9)), bvec2(true, false))).x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(914.336), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(7.9)), bvec2(true, false))).x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), false || ((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(914.336), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(7.9)), bvec2(true, false))).x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))))) || false))))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             do
              {
               if(_GLF_DEAD(false))
                barrier();
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                {
                 barrier();
                }
               if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(406.383) : injectionSwitch.x)) > injectionSwitch.y))))))
                barrier();
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 continue;
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           else
            {
            }
          }
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))));
     atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, 0u ^ (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) + 0u))), 0u ^ (_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))))) - ((0u & 142141u) >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (_GLF_IDENTITY(uint(1u), ~ (~ (uint(1u))))) >> 0u))))], _GLF_IDENTITY(uint(2), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(uint(2), 0u)), 0u | (_GLF_IDENTITY(uint(uvec2(uint(_GLF_IDENTITY(2, ~ (~ (2)))), 0u)), _GLF_IDENTITY(uint(uvec3(uint(uvec2(uint(_GLF_IDENTITY(2, ~ _GLF_IDENTITY((~ (2)), max(_GLF_IDENTITY((~ (2)), _GLF_IDENTITY(int(int((~ (2)))), (int(int((~ (2))))) >> 0)), (~ (2)))))), 0u)), _GLF_IDENTITY(((0u & 180979u) ^ 1u), 0u | (((0u & 180979u) ^ 1u))), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0))))))), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(workgroup_base)))) ^ 0u) * (_GLF_IDENTITY(uint(uvec3(uint(uvec2(uint(_GLF_IDENTITY(2, ~ (~ (2)))), 0u)), ((0u & 180979u) ^ 1u), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (uint(uvec3(uint(uvec2(_GLF_IDENTITY(uint(_GLF_IDENTITY(2, ~ (~ (2)))), (uint(_GLF_IDENTITY(2, ~ (~ (2))))) << 0u), 0u)), ((0u & 180979u) ^ 1u), uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | (uint(uvec3(uint(uvec2(uint(_GLF_IDENTITY(2, ~ (~ (2)))), 0u)), _GLF_IDENTITY(((0u & 180979u) ^ 1u), (_GLF_IDENTITY(((0u & 180979u) ^ 1u), clamp(((0u & 180979u) ^ 1u), ((0u & 180979u) ^ 1u), ((0u & 180979u) ^ 1u)))) >> (0u | 0u)), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))))))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(true ? uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(uint(2), 0u), (_GLF_IDENTITY(uvec2(uint(2), 0u), max(uvec2(uint(2), 0u), uvec2(uint(2), 0u)))) | uvec2(0u, 0u)), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, 0u ^ (0u)))), 0u), min(_GLF_IDENTITY(uvec2(0u, 0u), ~ (~ (_GLF_IDENTITY(uvec2(0u, 0u), max(uvec2(0u, 0u), uvec2(0u, 0u)))))), uvec2(0u, 0u))) | _GLF_IDENTITY((uvec2(_GLF_IDENTITY(uint(2), (_GLF_IDENTITY(uint(_GLF_IDENTITY(2, (2) - 0)), uint(uvec4(uint(_GLF_IDENTITY(2, (2) - 0)), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, 1u)))) / 1u), 0u)), (_GLF_IDENTITY((uvec2(_GLF_IDENTITY(uint(2), (uint(2)) / 1u), 0u)), ~ (~ ((uvec2(_GLF_IDENTITY(uint(2), (uint(2)) / 1u), 0u)))))) | (_GLF_IDENTITY((uvec2(_GLF_IDENTITY(uint(2), (uint(2)) / 1u), 0u)), max((uvec2(_GLF_IDENTITY(_GLF_IDENTITY(uint(2), (uint(2)) / 1u), (uint(2)) / 1u), 0u)), (uvec2(_GLF_IDENTITY(uint(_GLF_IDENTITY(2, clamp(2, 2, 2))), (uint(2)) / 1u), 0u)))))))) : _GLF_FUZZED(uvec3(_GLF_IDENTITY(196958u, clamp(196958u, 196958u, 196958u)), 104203u, 164721u).p), (_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool((false))), ! (! (bool(bool((false))))))) || false) ? _GLF_FUZZED(subgroup_local_id) : true ? uint(_GLF_IDENTITY(uvec2(uint(2), 0u), uvec2(0u, 0u) | _GLF_IDENTITY((uvec2(uint(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, min(2, 2))) + 0)) | (2))), 0u)), uvec2(0u, 0u) ^ (_GLF_IDENTITY((uvec2(uint(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, min(2, 2))) + 0)) | (2))), 0u)), max((uvec2(uint(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, min(2, 2))) + 0)) | (2))), 0u)), (uvec2(uint(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, min(2, 2))) + 0)) | (2))), 0u)))))))) : _GLF_FUZZED(uvec3(196958u, 104203u, 164721u).p)))), ~ (~ ((_GLF_IDENTITY(true ? uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(uint(2), 0u), (_GLF_IDENTITY(uvec2(uint(2), 0u), max(uvec2(uint(2), 0u), uvec2(uint(2), 0u)))) | uvec2(0u, 0u)), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, 0u ^ (0u)))), 0u), min(_GLF_IDENTITY(uvec2(0u, 0u), ~ (~ (_GLF_IDENTITY(uvec2(0u, 0u), max(uvec2(0u, 0u), uvec2(0u, 0u)))))), uvec2(0u, 0u))) | _GLF_IDENTITY((uvec2(_GLF_IDENTITY(uint(2), (_GLF_IDENTITY(uint(_GLF_IDENTITY(2, (2) - 0)), uint(uvec4(uint(_GLF_IDENTITY(2, (2) - 0)), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, 1u)))) / 1u), 0u)), (_GLF_IDENTITY((uvec2(_GLF_IDENTITY(uint(2), (uint(2)) / 1u), 0u)), ~ (~ ((uvec2(_GLF_IDENTITY(uint(2), (uint(2)) / 1u), 0u)))))) | (_GLF_IDENTITY((uvec2(_GLF_IDENTITY(uint(2), (uint(2)) / 1u), 0u)), max((uvec2(_GLF_IDENTITY(_GLF_IDENTITY(uint(2), (uint(2)) / 1u), (uint(2)) / 1u), 0u)), (uvec2(_GLF_IDENTITY(uint(_GLF_IDENTITY(2, clamp(2, 2, 2))), (uint(2)) / 1u), 0u)))))))) : _GLF_FUZZED(uvec3(_GLF_IDENTITY(196958u, clamp(196958u, 196958u, 196958u)), 104203u, 164721u).p), (_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool((false))), ! (! (bool(bool((false))))))) || false) ? _GLF_FUZZED(subgroup_local_id) : true ? uint(_GLF_IDENTITY(uvec2(uint(2), 0u), uvec2(0u, 0u) | _GLF_IDENTITY((uvec2(uint(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, min(2, 2))) + 0)) | (2))), 0u)), uvec2(0u, 0u) ^ (_GLF_IDENTITY((uvec2(uint(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, min(2, 2))) + 0)) | (2))), 0u)), max((uvec2(uint(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, min(2, 2))) + 0)) | (2))), 0u)), (uvec2(uint(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, min(2, 2))) + 0)) | (2))), 0u)))))))) : _GLF_FUZZED(uvec3(196958u, 104203u, 164721u).p))))))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(true ? uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(uint(2), 0u), (uvec2(uint(2), 0u)) | uvec2(0u, 0u)), _GLF_IDENTITY(uvec2(0u, 0u), min(uvec2(0u, 0u), uvec2(0u, 0u))) | (uvec2(uint(2), 0u)))) : _GLF_FUZZED(uvec3(_GLF_IDENTITY(196958u, clamp(196958u, 196958u, 196958u)), 104203u, 164721u).p), (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(subgroup_local_id) : true ? uint(_GLF_IDENTITY(uvec2(uint(2), 0u), uvec2(0u, 0u) | (uvec2(uint(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, min(2, 2))) + 0)) | (2))), 0u)))) : _GLF_FUZZED(uvec3(196958u, 104203u, 164721u).p)))), uint(_GLF_IDENTITY(uvec3((_GLF_IDENTITY(true ? uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(uint(2), 0u), (uvec2(uint(2), 0u)) | uvec2(0u, 0u)), _GLF_IDENTITY(uvec2(0u, 0u), min(uvec2(_GLF_IDENTITY(0u, (0u) >> 0u), 0u), uvec2(0u, 0u))) | (uvec2(uint(2), 0u)))) : _GLF_FUZZED(uvec3(_GLF_IDENTITY(196958u, clamp(196958u, 196958u, 196958u)), 104203u, 164721u).p), (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(subgroup_local_id) : true ? uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(uint(2), 0u), ~ (~ (uvec2(uint(2), 0u)))), uvec2(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u) | (uvec2(uint(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (_GLF_IDENTITY(_GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) | 0)) ^ 0))), _GLF_IDENTITY(min(2, 2), min(_GLF_IDENTITY(min(2, 2), int(ivec4(min(2, 2), int(_GLF_ZERO(0.0, injectionSwitch.x)), 0, 1))), min(2, 2))))) + 0)) | (2))), 0u)))) : _GLF_FUZZED(uvec3(196958u, 104203u, 164721u).p)))), 0u, 1u), (uvec3((_GLF_IDENTITY(true ? uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(uint(2), 0u), (uvec2(uint(2), 0u)) | uvec2(0u, 0u)), _GLF_IDENTITY(uvec2(0u, 0u), min(uvec2(_GLF_IDENTITY(0u, (0u) >> 0u), 0u), uvec2(0u, 0u))) | (uvec2(uint(2), 0u)))) : _GLF_FUZZED(uvec3(_GLF_IDENTITY(196958u, clamp(196958u, 196958u, 196958u)), 104203u, 164721u).p), (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(subgroup_local_id) : true ? uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(uint(2), 0u), ~ (~ (uvec2(uint(2), 0u)))), uvec2(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u) | (uvec2(uint(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (_GLF_IDENTITY(_GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) | 0)) ^ 0))), _GLF_IDENTITY(min(2, 2), min(_GLF_IDENTITY(min(2, 2), int(ivec4(min(2, 2), int(_GLF_ZERO(0.0, injectionSwitch.x)), 0, 1))), min(2, 2))))) + 0)) | (2))), 0u)))) : _GLF_FUZZED(uvec3(196958u, 104203u, 164721u).p)))), 0u, 1u)) - (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(5u), uvec3(5u)))))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(true ? uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(uint(2), 0u), (uvec2(uint(2), 0u)) | uvec2(0u, 0u)), (true ? _GLF_IDENTITY(uvec2(uint(2), 0u), (uvec2(uint(2), 0u)) | uvec2(0u, 0u)) : _GLF_FUZZED((uvec2(132827u, 11766u) >> uvec2(28310u, 138738u))))), _GLF_IDENTITY(uvec2(0u, 0u), min(uvec2(0u, 0u), uvec2(0u, 0u))) | (uvec2(uint(2), 0u)))) : _GLF_FUZZED(uvec3(_GLF_IDENTITY(196958u, clamp(196958u, 196958u, 196958u)), 104203u, 164721u).p), (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(subgroup_local_id) : true ? uint(_GLF_IDENTITY(uvec2(uint(2), 0u), uvec2(0u, 0u) | (uvec2(uint(_GLF_IDENTITY(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, min(2, 2))) + 0)) | (2)), 0 | (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, min(2, 2))) + 0)) | (2))))), 0u)))) : _GLF_FUZZED(uvec3(196958u, 104203u, 164721u).p)))), min(_GLF_IDENTITY((_GLF_IDENTITY(true ? uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(uint(2), 0u), (uvec2(uint(2), 0u)) | uvec2(0u, 0u)), (true ? _GLF_IDENTITY(uvec2(uint(2), 0u), (uvec2(uint(2), 0u)) | uvec2(0u, 0u)) : _GLF_FUZZED((uvec2(132827u, 11766u) >> uvec2(28310u, 138738u))))), _GLF_IDENTITY(uvec2(0u, 0u), min(uvec2(0u, 0u), uvec2(0u, 0u))) | (uvec2(uint(2), 0u)))) : _GLF_FUZZED(uvec3(_GLF_IDENTITY(196958u, clamp(196958u, 196958u, 196958u)), 104203u, 164721u).p), (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(subgroup_local_id) : true ? uint(_GLF_IDENTITY(uvec2(uint(2), 0u), uvec2(0u, 0u) | (uvec2(uint(_GLF_IDENTITY(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, min(2, 2))) + 0)) | (2)), 0 | (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, min(2, 2))) + 0)) | (2))))), 0u)))) : _GLF_FUZZED(uvec3(196958u, 104203u, 164721u).p)))), max((_GLF_IDENTITY(true ? uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(uint(2), 0u), (uvec2(uint(2), 0u)) | uvec2(0u, 0u)), (true ? _GLF_IDENTITY(uvec2(uint(2), 0u), (uvec2(uint(2), 0u)) | uvec2(0u, 0u)) : _GLF_FUZZED((uvec2(132827u, 11766u) >> uvec2(28310u, 138738u))))), _GLF_IDENTITY(uvec2(0u, 0u), min(uvec2(0u, 0u), uvec2(0u, 0u))) | (uvec2(uint(2), 0u)))) : _GLF_FUZZED(uvec3(_GLF_IDENTITY(196958u, clamp(196958u, 196958u, 196958u)), 104203u, 164721u).p), (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(subgroup_local_id) : true ? uint(_GLF_IDENTITY(uvec2(uint(2), 0u), uvec2(0u, 0u) | (uvec2(uint(_GLF_IDENTITY(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, min(2, 2))) + 0)) | (2)), 0 | (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, min(2, 2))) + 0)) | (2))))), 0u)))) : _GLF_FUZZED(uvec3(196958u, 104203u, 164721u).p)))), (_GLF_IDENTITY(true ? uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(uint(2), 0u), (uvec2(uint(2), 0u)) | uvec2(0u, 0u)), (true ? _GLF_IDENTITY(uvec2(uint(2), 0u), (uvec2(uint(2), 0u)) | uvec2(0u, 0u)) : _GLF_FUZZED((uvec2(132827u, 11766u) >> uvec2(28310u, 138738u))))), _GLF_IDENTITY(uvec2(0u, 0u), min(uvec2(0u, 0u), uvec2(0u, 0u))) | (uvec2(uint(2), 0u)))) : _GLF_FUZZED(uvec3(_GLF_IDENTITY(196958u, clamp(196958u, 196958u, 196958u)), 104203u, 164721u).p), (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(subgroup_local_id) : true ? uint(_GLF_IDENTITY(uvec2(uint(2), 0u), uvec2(0u, 0u) | (uvec2(uint(_GLF_IDENTITY(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, min(2, 2))) + 0)) | (2)), 0 | (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, min(2, 2))) + 0)) | (2))))), 0u)))) : _GLF_FUZZED(uvec3(196958u, 104203u, 164721u).p)))))), _GLF_IDENTITY((_GLF_IDENTITY(true ? uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(uint(2), 0u), (uvec2(uint(2), 0u)) | uvec2(0u, 0u)), (true ? _GLF_IDENTITY(uvec2(uint(2), 0u), (uvec2(uint(2), 0u)) | uvec2(0u, 0u)) : _GLF_FUZZED((uvec2(132827u, 11766u) >> uvec2(28310u, 138738u))))), _GLF_IDENTITY(uvec2(0u, 0u), min(uvec2(0u, 0u), uvec2(0u, 0u))) | (uvec2(uint(2), 0u)))) : _GLF_FUZZED(uvec3(_GLF_IDENTITY(196958u, clamp(196958u, 196958u, 196958u)), 104203u, 164721u).p), (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(subgroup_local_id) : true ? uint(_GLF_IDENTITY(uvec2(uint(2), 0u), uvec2(0u, 0u) | (uvec2(uint(_GLF_IDENTITY(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, min(2, 2))) + 0)) | (2)), 0 | (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, min(2, 2))) + 0)) | (2))))), 0u)))) : _GLF_FUZZED(uvec3(196958u, 104203u, 164721u).p)))), min((_GLF_IDENTITY(true ? uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(uint(2), 0u), (uvec2(uint(2), 0u)) | uvec2(0u, 0u)), (true ? _GLF_IDENTITY(uvec2(uint(2), 0u), (uvec2(uint(2), 0u)) | uvec2(0u, 0u)) : _GLF_FUZZED((uvec2(132827u, 11766u) >> uvec2(28310u, 138738u))))), _GLF_IDENTITY(uvec2(0u, 0u), min(uvec2(0u, 0u), uvec2(0u, 0u))) | (uvec2(uint(2), 0u)))) : _GLF_FUZZED(uvec3(_GLF_IDENTITY(196958u, clamp(196958u, 196958u, 196958u)), 104203u, 164721u).p), (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(subgroup_local_id) : true ? uint(_GLF_IDENTITY(uvec2(uint(2), 0u), uvec2(0u, 0u) | (uvec2(uint(_GLF_IDENTITY(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, min(2, 2))) + 0)) | (2)), 0 | (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, min(2, 2))) + 0)) | (2))))), 0u)))) : _GLF_FUZZED(uvec3(196958u, 104203u, 164721u).p)))), (_GLF_IDENTITY(true ? uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(uint(2), 0u), (uvec2(uint(2), 0u)) | uvec2(0u, 0u)), (true ? _GLF_IDENTITY(uvec2(uint(2), 0u), (uvec2(uint(2), 0u)) | uvec2(0u, 0u)) : _GLF_FUZZED((uvec2(132827u, 11766u) >> uvec2(28310u, 138738u))))), _GLF_IDENTITY(uvec2(0u, 0u), min(uvec2(0u, 0u), uvec2(0u, 0u))) | (uvec2(uint(2), 0u)))) : _GLF_FUZZED(uvec3(_GLF_IDENTITY(196958u, clamp(196958u, 196958u, 196958u)), 104203u, 164721u).p), (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(subgroup_local_id) : true ? uint(_GLF_IDENTITY(uvec2(uint(2), 0u), uvec2(0u, 0u) | (uvec2(uint(_GLF_IDENTITY(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, min(2, 2))) + 0)) | (2)), 0 | (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, min(2, 2))) + 0)) | (2))))), 0u)))) : _GLF_FUZZED(uvec3(196958u, 104203u, 164721u).p)))))))), uint(_GLF_IDENTITY(uvec3((_GLF_IDENTITY(true ? uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(uint(2), 0u), (uvec2(uint(2), 0u)) | uvec2(0u, 0u)), _GLF_IDENTITY(uvec2(0u, 0u), min(uvec2(_GLF_IDENTITY(0u, (0u) >> 0u), 0u), uvec2(0u, 0u))) | (uvec2(uint(2), 0u)))) : _GLF_FUZZED(uvec3(_GLF_IDENTITY(196958u, clamp(196958u, 196958u, 196958u)), 104203u, 164721u).p), (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(subgroup_local_id) : true ? uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(uint(2), 0u), ~ (~ (uvec2(uint(_GLF_IDENTITY(2, int(int(2)))), 0u)))), uvec2(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u) | (_GLF_IDENTITY(uvec2(uint(_GLF_IDENTITY(2, _GLF_IDENTITY((_GLF_IDENTITY(2, (_GLF_IDENTITY(_GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) | 0)) ^ 0))), _GLF_IDENTITY(min(2, 2), min(_GLF_IDENTITY(min(2, 2), int(ivec4(min(2, 2), int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, exp(0.0), 1.0, 0.0, 0.0, 0.0, abs(1.0), 1.0, 1.0, 0.0)), (float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, exp(0.0), 1.0, 0.0, 0.0, 0.0, abs(1.0), 1.0, 1.0, 0.0))) + 0.0)))), 0, 1))), min(2, 2))))) + 0)), int(_GLF_IDENTITY(ivec2((_GLF_IDENTITY(2, (_GLF_IDENTITY(_GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) | 0)) ^ 0))), _GLF_IDENTITY(min(2, 2), min(_GLF_IDENTITY(min(2, 2), int(ivec4(min(2, 2), int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, exp(0.0), 1.0, 0.0, 0.0, 0.0, abs(1.0), 1.0, 1.0, 0.0)), (float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, exp(0.0), 1.0, 0.0, 0.0, 0.0, abs(1.0), 1.0, 1.0, 0.0))) + 0.0)))), 0, 1))), min(2, 2))))) + 0)), 1), max(_GLF_IDENTITY(ivec2((_GLF_IDENTITY(2, (_GLF_IDENTITY(_GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) | 0)) ^ 0))), _GLF_IDENTITY(min(2, 2), min(_GLF_IDENTITY(min(2, 2), int(ivec4(min(2, 2), int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, exp(0.0), 1.0, 0.0, 0.0, 0.0, abs(1.0), 1.0, 1.0, 0.0)), (float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, exp(0.0), 1.0, 0.0, 0.0, 0.0, abs(1.0), 1.0, 1.0, 0.0))) + 0.0)))), 0, 1))), min(2, 2))))) + 0)), 1), (false ? _GLF_FUZZED(ivec2(24570, -55072)) : ivec2((_GLF_IDENTITY(2, (_GLF_IDENTITY(_GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) | 0)) ^ 0))), _GLF_IDENTITY(min(2, 2), min(_GLF_IDENTITY(min(2, 2), int(ivec4(min(2, 2), int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, exp(0.0), 1.0, 0.0, 0.0, 0.0, abs(1.0), 1.0, 1.0, 0.0)), (float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, exp(0.0), 1.0, 0.0, 0.0, 0.0, abs(1.0), 1.0, 1.0, 0.0))) + 0.0)))), 0, 1))), min(2, 2))))) + 0)), 1))), ivec2((_GLF_IDENTITY(2, (_GLF_IDENTITY(_GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) | 0)) ^ 0))), _GLF_IDENTITY(min(2, 2), min(_GLF_IDENTITY(min(2, 2), int(ivec4(min(2, 2), int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, exp(0.0), 1.0, 0.0, 0.0, 0.0, abs(1.0), 1.0, 1.0, 0.0)), (float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, exp(0.0), 1.0, 0.0, 0.0, 0.0, abs(1.0), 1.0, 1.0, 0.0))) + 0.0)))), 0, 1))), min(2, 2))))) + 0)), 1))))) | (2))), 0u), _GLF_IDENTITY(uvec2(uvec2(uvec2(uint(_GLF_IDENTITY(2, _GLF_IDENTITY((_GLF_IDENTITY(2, (_GLF_IDENTITY(_GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) | 0)) ^ 0))), _GLF_IDENTITY(min(2, 2), min(_GLF_IDENTITY(min(2, 2), int(ivec4(min(2, 2), int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, exp(0.0), 1.0, 0.0, 0.0, 0.0, abs(1.0), 1.0, 1.0, 0.0)), (float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, exp(0.0), 1.0, 0.0, 0.0, 0.0, abs(1.0), 1.0, 1.0, 0.0))) + 0.0)))), 0, 1))), min(2, 2))))) + 0)), int(_GLF_IDENTITY(ivec2((_GLF_IDENTITY(2, (_GLF_IDENTITY(_GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) | 0)) ^ 0))), _GLF_IDENTITY(min(2, 2), min(_GLF_IDENTITY(min(2, 2), int(ivec4(min(2, 2), int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, exp(0.0), 1.0, 0.0, 0.0, 0.0, abs(1.0), 1.0, 1.0, 0.0)), (float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, exp(0.0), 1.0, 0.0, 0.0, 0.0, abs(1.0), 1.0, 1.0, 0.0))) + 0.0)))), 0, 1))), min(2, 2))))) + 0)), 1), max(_GLF_IDENTITY(ivec2((_GLF_IDENTITY(2, (_GLF_IDENTITY(_GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) | 0)) ^ 0))), _GLF_IDENTITY(min(2, 2), min(_GLF_IDENTITY(min(2, 2), int(ivec4(min(2, 2), int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, exp(0.0), 1.0, 0.0, 0.0, 0.0, abs(1.0), 1.0, 1.0, 0.0)), (float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, exp(0.0), 1.0, 0.0, 0.0, 0.0, abs(1.0), 1.0, 1.0, 0.0))) + 0.0)))), 0, 1))), min(2, 2))))) + 0)), 1), (false ? _GLF_FUZZED(ivec2(24570, -55072)) : ivec2((_GLF_IDENTITY(2, (_GLF_IDENTITY(_GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) | 0)) ^ 0))), _GLF_IDENTITY(min(2, 2), min(_GLF_IDENTITY(min(2, 2), int(ivec4(min(2, 2), int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, exp(0.0), 1.0, 0.0, 0.0, 0.0, abs(1.0), 1.0, 1.0, 0.0)), (float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, exp(0.0), 1.0, 0.0, 0.0, 0.0, abs(1.0), 1.0, 1.0, 0.0))) + 0.0)))), 0, 1))), min(2, 2))))) + 0)), 1))), ivec2((_GLF_IDENTITY(2, (_GLF_IDENTITY(_GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) | 0)) ^ 0))), _GLF_IDENTITY(min(2, 2), min(_GLF_IDENTITY(min(2, 2), int(ivec4(min(2, 2), int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, exp(0.0), 1.0, 0.0, 0.0, 0.0, abs(1.0), 1.0, 1.0, 0.0)), (float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, exp(0.0), 1.0, 0.0, 0.0, 0.0, abs(1.0), 1.0, 1.0, 0.0))) + 0.0)))), 0, 1))), min(2, 2))))) + 0)), 1))))) | (2))), 0u))), (_GLF_IDENTITY(uvec2(uvec2(uvec2(uint(_GLF_IDENTITY(2, _GLF_IDENTITY((_GLF_IDENTITY(2, (_GLF_IDENTITY(_GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) | 0)) ^ 0))), _GLF_IDENTITY(min(2, 2), min(_GLF_IDENTITY(min(2, 2), int(ivec4(min(2, 2), int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, exp(0.0), 1.0, 0.0, 0.0, 0.0, abs(1.0), 1.0, 1.0, 0.0)), (float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, exp(0.0), 1.0, 0.0, 0.0, 0.0, abs(1.0), 1.0, 1.0, 0.0))) + 0.0)))), 0, 1))), min(2, 2))))) + 0)), int(_GLF_IDENTITY(ivec2((_GLF_IDENTITY(2, (_GLF_IDENTITY(_GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) | 0)) ^ 0))), _GLF_IDENTITY(min(2, 2), min(_GLF_IDENTITY(min(2, 2), int(ivec4(min(2, 2), int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, exp(0.0), 1.0, 0.0, 0.0, 0.0, abs(1.0), 1.0, 1.0, 0.0)), (float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, exp(0.0), 1.0, 0.0, 0.0, 0.0, abs(1.0), 1.0, 1.0, 0.0))) + 0.0)))), 0, 1))), min(2, 2))))) + 0)), 1), max(_GLF_IDENTITY(ivec2((_GLF_IDENTITY(2, (_GLF_IDENTITY(_GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) | 0)) ^ 0))), _GLF_IDENTITY(min(2, 2), min(_GLF_IDENTITY(min(2, 2), int(ivec4(min(2, 2), int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, exp(0.0), 1.0, 0.0, 0.0, 0.0, abs(1.0), 1.0, 1.0, 0.0)), (float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, exp(0.0), 1.0, 0.0, 0.0, 0.0, abs(1.0), 1.0, 1.0, 0.0))) + 0.0)))), 0, 1))), min(2, 2))))) + 0)), 1), (false ? _GLF_FUZZED(ivec2(24570, -55072)) : ivec2((_GLF_IDENTITY(2, (_GLF_IDENTITY(_GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) | 0)) ^ 0))), _GLF_IDENTITY(min(2, 2), min(_GLF_IDENTITY(min(2, 2), int(ivec4(min(2, 2), int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, exp(0.0), 1.0, 0.0, 0.0, 0.0, abs(1.0), 1.0, 1.0, 0.0)), (float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, exp(0.0), 1.0, 0.0, 0.0, 0.0, abs(1.0), 1.0, 1.0, 0.0))) + 0.0)))), 0, 1))), min(2, 2))))) + 0)), 1))), ivec2((_GLF_IDENTITY(2, (_GLF_IDENTITY(_GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) | 0)) ^ 0))), _GLF_IDENTITY(min(2, 2), min(_GLF_IDENTITY(min(2, 2), int(ivec4(min(2, 2), int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, exp(0.0), 1.0, 0.0, 0.0, 0.0, abs(1.0), 1.0, 1.0, 0.0)), (float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, exp(0.0), 1.0, 0.0, 0.0, 0.0, abs(1.0), 1.0, 1.0, 0.0))) + 0.0)))), 0, 1))), min(2, 2))))) + 0)), 1))))) | (2))), 0u))), (uvec2(uvec2(uvec2(uint(_GLF_IDENTITY(2, _GLF_IDENTITY((_GLF_IDENTITY(2, (_GLF_IDENTITY(_GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) | 0)) ^ 0))), _GLF_IDENTITY(min(2, 2), min(_GLF_IDENTITY(min(2, 2), int(ivec4(min(2, 2), int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, exp(0.0), 1.0, 0.0, 0.0, 0.0, abs(1.0), 1.0, 1.0, 0.0)), (float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, exp(0.0), 1.0, 0.0, 0.0, 0.0, abs(1.0), 1.0, 1.0, 0.0))) + 0.0)))), 0, 1))), min(2, 2))))) + 0)), int(_GLF_IDENTITY(ivec2((_GLF_IDENTITY(2, (_GLF_IDENTITY(_GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) | 0)) ^ 0))), _GLF_IDENTITY(min(2, 2), min(_GLF_IDENTITY(min(2, 2), int(ivec4(min(2, 2), int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, exp(0.0), 1.0, 0.0, 0.0, 0.0, abs(1.0), 1.0, 1.0, 0.0)), (float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, exp(0.0), 1.0, 0.0, 0.0, 0.0, abs(1.0), 1.0, 1.0, 0.0))) + 0.0)))), 0, 1))), min(2, 2))))) + 0)), 1), max(_GLF_IDENTITY(ivec2((_GLF_IDENTITY(2, (_GLF_IDENTITY(_GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) | 0)) ^ 0))), _GLF_IDENTITY(min(2, 2), min(_GLF_IDENTITY(min(2, 2), int(ivec4(min(2, 2), int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, exp(0.0), 1.0, 0.0, 0.0, 0.0, abs(1.0), 1.0, 1.0, 0.0)), (float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, exp(0.0), 1.0, 0.0, 0.0, 0.0, abs(1.0), 1.0, 1.0, 0.0))) + 0.0)))), 0, 1))), min(2, 2))))) + 0)), 1), (false ? _GLF_FUZZED(ivec2(24570, -55072)) : ivec2((_GLF_IDENTITY(2, (_GLF_IDENTITY(_GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) | 0)) ^ 0))), _GLF_IDENTITY(min(2, 2), min(_GLF_IDENTITY(min(2, 2), int(ivec4(min(2, 2), int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, exp(0.0), 1.0, 0.0, 0.0, 0.0, abs(1.0), 1.0, 1.0, 0.0)), (float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, exp(0.0), 1.0, 0.0, 0.0, 0.0, abs(1.0), 1.0, 1.0, 0.0))) + 0.0)))), 0, 1))), min(2, 2))))) + 0)), 1))), ivec2((_GLF_IDENTITY(2, (_GLF_IDENTITY(_GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) | 0)) ^ 0))), _GLF_IDENTITY(min(2, 2), min(_GLF_IDENTITY(min(2, 2), int(ivec4(min(2, 2), int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, exp(0.0), 1.0, 0.0, 0.0, 0.0, abs(1.0), 1.0, 1.0, 0.0)), (float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, exp(0.0), 1.0, 0.0, 0.0, 0.0, abs(1.0), 1.0, 1.0, 0.0))) + 0.0)))), 0, 1))), min(2, 2))))) + 0)), 1))))) | (2))), 0u)))) | (uvec2(uvec2(uvec2(uint(_GLF_IDENTITY(2, _GLF_IDENTITY((_GLF_IDENTITY(2, (_GLF_IDENTITY(_GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) | 0)) ^ 0))), _GLF_IDENTITY(min(2, 2), min(_GLF_IDENTITY(min(2, 2), int(ivec4(min(2, 2), int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, exp(0.0), 1.0, 0.0, 0.0, 0.0, abs(1.0), 1.0, 1.0, 0.0)), (float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, exp(0.0), 1.0, 0.0, 0.0, 0.0, abs(1.0), 1.0, 1.0, 0.0))) + 0.0)))), 0, 1))), min(2, 2))))) + 0)), int(_GLF_IDENTITY(ivec2((_GLF_IDENTITY(2, (_GLF_IDENTITY(_GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) | 0)) ^ 0))), _GLF_IDENTITY(min(2, 2), min(_GLF_IDENTITY(min(2, 2), int(ivec4(min(2, 2), int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, exp(0.0), 1.0, 0.0, 0.0, 0.0, abs(1.0), 1.0, 1.0, 0.0)), (float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, exp(0.0), 1.0, 0.0, 0.0, 0.0, abs(1.0), 1.0, 1.0, 0.0))) + 0.0)))), 0, 1))), min(2, 2))))) + 0)), 1), max(_GLF_IDENTITY(ivec2((_GLF_IDENTITY(2, (_GLF_IDENTITY(_GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) | 0)) ^ 0))), _GLF_IDENTITY(min(2, 2), min(_GLF_IDENTITY(min(2, 2), int(ivec4(min(2, 2), int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, exp(0.0), 1.0, 0.0, 0.0, 0.0, abs(1.0), 1.0, 1.0, 0.0)), (float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, exp(0.0), 1.0, 0.0, 0.0, 0.0, abs(1.0), 1.0, 1.0, 0.0))) + 0.0)))), 0, 1))), min(2, 2))))) + 0)), 1), (false ? _GLF_FUZZED(ivec2(24570, -55072)) : ivec2((_GLF_IDENTITY(2, (_GLF_IDENTITY(_GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) | 0)) ^ 0))), _GLF_IDENTITY(min(2, 2), min(_GLF_IDENTITY(min(2, 2), int(ivec4(min(2, 2), int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, exp(0.0), 1.0, 0.0, 0.0, 0.0, abs(1.0), 1.0, 1.0, 0.0)), (float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, exp(0.0), 1.0, 0.0, 0.0, 0.0, abs(1.0), 1.0, 1.0, 0.0))) + 0.0)))), 0, 1))), min(2, 2))))) + 0)), 1))), ivec2((_GLF_IDENTITY(2, (_GLF_IDENTITY(_GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) | 0)) ^ 0))), _GLF_IDENTITY(min(2, 2), min(_GLF_IDENTITY(min(2, 2), int(ivec4(min(2, 2), int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, exp(0.0), 1.0, 0.0, 0.0, 0.0, abs(1.0), 1.0, 1.0, 0.0)), (float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, exp(0.0), 1.0, 0.0, 0.0, 0.0, abs(1.0), 1.0, 1.0, 0.0))) + 0.0)))), 0, 1))), min(2, 2))))) + 0)), 1))))) | (2))), 0u)))))) - uvec2(0u, 0u)))))) : _GLF_FUZZED(uvec3(196958u, 104203u, 164721u).p)))), 0u, 1u), (uvec3((_GLF_IDENTITY(true ? uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(uint(2), 0u), (uvec2(uint(2), 0u)) | uvec2(0u, 0u)), _GLF_IDENTITY(uvec2(0u, 0u), min(uvec2(_GLF_IDENTITY(0u, (0u) >> 0u), 0u), uvec2(0u, 0u))) | (uvec2(uint(2), 0u)))) : _GLF_FUZZED(uvec3(_GLF_IDENTITY(196958u, clamp(196958u, 196958u, 196958u)), 104203u, 164721u).p), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(subgroup_local_id) : true ? uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(uint(2), 0u), ~ (~ (uvec2(uint(2), 0u)))), uvec2(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u) | (uvec2(uint(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (_GLF_IDENTITY(_GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) | 0)) ^ 0))), _GLF_IDENTITY(min(2, 2), min(_GLF_IDENTITY(min(2, 2), int(ivec4(min(2, 2), int(_GLF_ZERO(0.0, injectionSwitch.x)), 0, 1))), min(2, 2))))) + 0)) | (2))), 0u)))) : _GLF_FUZZED(uvec3(196958u, 104203u, 164721u).p), max(_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(subgroup_local_id) : true ? uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(uint(2), 0u), ~ (~ (uvec2(uint(2), 0u)))), uvec2(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u) | (uvec2(uint(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (_GLF_IDENTITY(_GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) | 0)) ^ 0))), _GLF_IDENTITY(min(2, 2), min(_GLF_IDENTITY(min(2, 2), int(ivec4(min(2, 2), int(_GLF_ZERO(0.0, injectionSwitch.x)), 0, 1))), min(2, 2))))) + 0)) | (2))), 0u)))) : _GLF_FUZZED(uvec3(196958u, 104203u, 164721u).p), _GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(subgroup_local_id) : true ? uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(uint(2), 0u), ~ (~ (uvec2(uint(2), 0u)))), uvec2(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u) | (uvec2(uint(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (_GLF_IDENTITY(_GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) | 0)) ^ 0))), _GLF_IDENTITY(min(2, 2), min(_GLF_IDENTITY(min(2, 2), int(ivec4(min(2, 2), int(_GLF_ZERO(0.0, injectionSwitch.x)), 0, 1))), min(2, 2))))) + 0)) | (2))), 0u)))) : _GLF_FUZZED(uvec3(196958u, 104203u, 164721u).p)))))), 0u, 1u)) - (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(5u), uvec3(_GLF_IDENTITY(5u, min(_GLF_IDENTITY(5u, (5u) / 1u), 5u))))))))) - 0u)) | 0u))), _GLF_IDENTITY(4, ~ (~ (4))), 64, _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(_GLF_IDENTITY(4, int(ivec3(4, 1, ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)))))), 0 | (4)))));
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         do
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))
            {
            }
           else
            {
             barrier();
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) >> 0))) >> _GLF_IDENTITY(int(3), int(3))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))); _injected_loop_counter --)
              {
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                {
                 barrier();
                }
              }
            }
           return;
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           do
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 barrier();
                }
               else
                {
                }
              }
            }
           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))));
          }
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-5.9), _GLF_FUZZED(vec2(7152.7738, 349.027).s)), bvec2(false, false))) : _GLF_FUZZED(injectionSwitch))).x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
               barrier();
               if(_GLF_DEAD(false))
                barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
             return;
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
              }
             barrier();
            }
           return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))
            barrier();
          }
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          return;
        }
       else
        {
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           barrier();
          }
         else
          {
          }
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))) && true)))) || false)))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             barrier();
            }
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), true && (! (_GLF_IDENTITY(false, (false) && true)))), false || (_GLF_IDENTITY(! (false), true && (! (false))))))), true, false)))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, true))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true && _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), bool(bvec4((false), true, false, true))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(true && (false), bool(bool(true && (false)))))), bool(bvec2(! (! (_GLF_IDENTITY(true && (false), bool(bool(true && (false)))))), true))))), (_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((false), ((_GLF_IDENTITY(false, bool(bool(false))))) || false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_IDENTITY((false), ((false)) || false)), ! (! _GLF_IDENTITY((bool(_GLF_IDENTITY((false), ((_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, ! (! (false))))))) || false))), true && ((bool(_GLF_IDENTITY((false), ((_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, ! (! (false))))))) || false)))))))), (! (_GLF_IDENTITY(bool(_GLF_IDENTITY((false), ((false)) || false)), ! (! (bool(_GLF_IDENTITY((false), ((false)) || false))))))) || false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((false), ((false)) || false)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_IDENTITY((false), ((false)) || false)), ! (! (bool(_GLF_IDENTITY((false), ((false)) || false)))))), _GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY(bool(_GLF_IDENTITY((false), ((false)) || false)), ! (! (bool(_GLF_IDENTITY((false), ((false)) || false)))))), false, true)), true && (bool(bvec3(! (_GLF_IDENTITY(bool(_GLF_IDENTITY((false), ((false)) || false)), ! (! (bool(_GLF_IDENTITY((false), ((false)) || false)))))), false, true))))), _GLF_IDENTITY((! (_GLF_IDENTITY(bool(_GLF_IDENTITY((false), _GLF_IDENTITY(((false)), (((false))) || false) || false)), ! (! (bool(_GLF_IDENTITY((false), ((false)) || false))))))), false || ((! (_GLF_IDENTITY(bool(_GLF_IDENTITY((false), _GLF_IDENTITY(((false)), (((false))) || false) || false)), ! (! (bool(_GLF_IDENTITY((false), ((false)) || false))))))))) || false)))), false || (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((false), ((false)) || false)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_IDENTITY((false), ((false)) || false)), ! (! (bool(_GLF_IDENTITY((false), ((false)) || false)))))), _GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY(bool(_GLF_IDENTITY((false), ((false)) || false)), ! (! (bool(_GLF_IDENTITY((false), ((false)) || false)))))), false, true)), true && (bool(bvec3(! (_GLF_IDENTITY(bool(_GLF_IDENTITY((false), ((false)) || false)), ! (! (bool(_GLF_IDENTITY((false), ((false)) || false)))))), false, true))))), _GLF_IDENTITY((! (_GLF_IDENTITY(bool(_GLF_IDENTITY((false), _GLF_IDENTITY(((false)), (((false))) || false) || false)), ! (! (bool(_GLF_IDENTITY((false), ((false)) || false))))))), false || ((! (_GLF_IDENTITY(bool(_GLF_IDENTITY((false), _GLF_IDENTITY(((false)), (((false))) || false) || false)), ! (! (bool(_GLF_IDENTITY((false), ((false)) || false))))))))) || false)))))), true && _GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((false), ((false)) || false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_IDENTITY((false), _GLF_IDENTITY(((false)) || false, bool(bool(_GLF_IDENTITY(((false)) || false, (((false)) || false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(! (! (bool(_GLF_IDENTITY((false), ((false)) || false)))), (! (! (bool(_GLF_IDENTITY((false), ((false)) || false))))) && true))), (! (_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ((false)) || false)), ! (! (bool(_GLF_IDENTITY((false), ((false)) || false))))))) || false))))), true && (_GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((false), ((false)) || false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_IDENTITY((false), _GLF_IDENTITY(((false)) || false, bool(bool(_GLF_IDENTITY(((false)) || false, (((false)) || false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(! (! (bool(_GLF_IDENTITY((false), ((false)) || false)))), (! (! (bool(_GLF_IDENTITY((false), ((false)) || false))))) && true))), (! (_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ((false)) || false)), ! (! (bool(_GLF_IDENTITY((false), ((false)) || false))))))) || false))))), bool(bvec4((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((false), ((false)) || false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_IDENTITY((false), _GLF_IDENTITY(((false)) || false, bool(bool(_GLF_IDENTITY(((false)) || false, (((false)) || false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(! (! (bool(_GLF_IDENTITY((false), ((false)) || false)))), (! (! (bool(_GLF_IDENTITY((false), ((false)) || false))))) && true))), (! (_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ((false)) || false)), ! (! (bool(_GLF_IDENTITY((false), ((false)) || false))))))) || false))))), true, false, false)))))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((false), ((false)) || false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_IDENTITY((false), ((false)) || false)), ! (! (bool(_GLF_IDENTITY((false), ((false)) || false)))))), (! (_GLF_IDENTITY(bool(_GLF_IDENTITY((false), ((false)) || false)), ! (! (bool(_GLF_IDENTITY((false), _GLF_IDENTITY(((false)), bool(_GLF_IDENTITY(bool(((false))), ! (! (bool(((false)))))))) || false))))))) || false)))), true && (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((false), ((false)) || false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_IDENTITY((false), ((false)) || _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) || false), (_GLF_IDENTITY((false), ((false)) || false)) && true)), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) || false), (_GLF_IDENTITY((false), ((false)) || false)) && true)))))))))))), (! (_GLF_IDENTITY(bool(_GLF_IDENTITY((false), ((false)) || false)), ! (! (bool(_GLF_IDENTITY((false), ((false)) || false))))))) || false)))))), true), false, true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((false), ((false)) || false)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_IDENTITY((false), ((false)) || false)), ! (! (bool(_GLF_IDENTITY((false), ((false)) || false)))))), _GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY(bool(_GLF_IDENTITY((false), ((false)) || false)), ! (! (bool(_GLF_IDENTITY((false), ((false)) || false)))))), false, true)), true && (bool(bvec3(! (_GLF_IDENTITY(bool(_GLF_IDENTITY((false), ((false)) || false)), ! (! (bool(_GLF_IDENTITY((false), ((false)) || false)))))), false, true))))), _GLF_IDENTITY((! (_GLF_IDENTITY(bool(_GLF_IDENTITY((false), _GLF_IDENTITY(((false)), (((false))) || false) || false)), ! (! (bool(_GLF_IDENTITY((false), ((false)) || false))))))), false || ((! (_GLF_IDENTITY(bool(_GLF_IDENTITY((false), _GLF_IDENTITY(((false)), (((false))) || false) || false)), ! (! (bool(_GLF_IDENTITY((false), ((false)) || false))))))))) || false)))), false || (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((false), ((false)) || false)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_IDENTITY((false), ((false)) || false)), ! (! (bool(_GLF_IDENTITY((false), ((false)) || false)))))), _GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY(bool(_GLF_IDENTITY((false), ((false)) || false)), ! (! (bool(_GLF_IDENTITY((false), ((false)) || false)))))), false, true)), true && (bool(bvec3(! (_GLF_IDENTITY(bool(_GLF_IDENTITY((false), ((false)) || false)), ! (! (bool(_GLF_IDENTITY((false), ((false)) || false)))))), false, true))))), _GLF_IDENTITY((! (_GLF_IDENTITY(bool(_GLF_IDENTITY((false), _GLF_IDENTITY(((false)), (((false))) || false) || false)), ! (! (bool(_GLF_IDENTITY((false), ((false)) || false))))))), false || ((! (_GLF_IDENTITY(bool(_GLF_IDENTITY((false), _GLF_IDENTITY(((false)), (((false))) || false) || false)), ! (! (bool(_GLF_IDENTITY((false), ((false)) || false))))))))) || false)))))), true && _GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((false), ((false)) || false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_IDENTITY((false), _GLF_IDENTITY(((false)) || false, bool(bool(_GLF_IDENTITY(((false)) || false, (((false)) || false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(! (! (bool(_GLF_IDENTITY((false), ((false)) || false)))), (! (! (bool(_GLF_IDENTITY((false), ((false)) || false))))) && true))), (! (_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ((false)) || false)), ! (! (bool(_GLF_IDENTITY((false), ((false)) || false))))))) || false))))), true && (_GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((false), ((false)) || false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_IDENTITY((false), _GLF_IDENTITY(((false)) || false, bool(bool(_GLF_IDENTITY(((false)) || false, (((false)) || false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(! (! (bool(_GLF_IDENTITY((false), ((false)) || false)))), (! (! (bool(_GLF_IDENTITY((false), ((false)) || false))))) && true))), (! (_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ((false)) || false)), ! (! (bool(_GLF_IDENTITY((false), ((false)) || false))))))) || false))))), bool(bvec4((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((false), ((false)) || false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_IDENTITY((false), _GLF_IDENTITY(((false)) || false, bool(bool(_GLF_IDENTITY(((false)) || false, (((false)) || false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(! (! (bool(_GLF_IDENTITY((false), ((false)) || false)))), (! (! (bool(_GLF_IDENTITY((false), ((false)) || false))))) && true))), (! (_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ((false)) || false)), ! (! (bool(_GLF_IDENTITY((false), ((false)) || false))))))) || false))))), true, false, false)))))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((false), ((false)) || false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_IDENTITY((false), ((false)) || false)), ! (! (bool(_GLF_IDENTITY((false), ((false)) || false)))))), (! (_GLF_IDENTITY(bool(_GLF_IDENTITY((false), ((false)) || false)), ! (! (bool(_GLF_IDENTITY((false), _GLF_IDENTITY(((false)), bool(_GLF_IDENTITY(bool(((false))), ! (! (bool(((false)))))))) || false))))))) || false)))), true && (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((false), ((false)) || false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_IDENTITY((false), ((false)) || _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) || false), (_GLF_IDENTITY((false), ((false)) || false)) && true)), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) || false), (_GLF_IDENTITY((false), ((false)) || false)) && true)))))))))))), (! (_GLF_IDENTITY(bool(_GLF_IDENTITY((false), ((false)) || false)), ! (! (bool(_GLF_IDENTITY((false), ((false)) || false))))))) || false)))))), true), false, true)))))))))) || false)))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             barrier();
            }
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          barrier();
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             barrier();
            }
          }
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
      }
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           barrier();
          }
        }
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
      }
    }
  }
 else
  {
  }
}
