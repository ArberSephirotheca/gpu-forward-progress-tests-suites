#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_4 {
 mat3x4 _f0;
} ;

struct _GLF_struct_3 {
 mat2x4 _f0;
} ;

struct _GLF_struct_2 {
 vec3 _f0;
 mat2x4 _f1;
 ivec2 _f2;
 ivec3 _f3;
 bvec3 _f4;
 float _f5;
} ;

struct _GLF_struct_1 {
 uvec3 _f0;
 bvec4 _f1;
} ;

struct _GLF_struct_5 {
 _GLF_struct_1 _f0;
 _GLF_struct_2 _f1;
 _GLF_struct_3 _f2;
 vec3 _f3;
 bool _f4;
 _GLF_struct_4 _f5;
} ;

struct _GLF_struct_0 {
 ivec4 _f0;
 uint subgroup_local_id;
 bvec4 _f1;
} ;

struct _GLF_struct_6 {
 _GLF_struct_0 _f0;
 _GLF_struct_5 _f1;
 vec4 _f2;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, sqrt(0.0), 1.0)), min(vec2(mat4(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, sqrt(0.0), 1.0)), vec2(mat4(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, sqrt(0.0), 1.0)))))[1]))) / vec2(1.0, 1.0)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, sqrt(0.0), 1.0)), min(vec2(mat4(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, sqrt(0.0), 1.0)), vec2(mat4(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, sqrt(0.0), 1.0)))))[1]))) / vec2(1.0, 1.0)))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(-5.5), 0.0 + (_GLF_FUZZED(-5.5))), _GLF_FUZZED(_GLF_IDENTITY(vec2(2.1, -348.799), min(vec2(2.1, -348.799), vec2(2.1, -348.799))).g)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(true, true))).y), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (0) / (1 & 1))], _GLF_IDENTITY(injectionSwitch[1], clamp(_GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) - 0.0), injectionSwitch[1], injectionSwitch[1]))))) / vec2(1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-121.407)), bool(false))), 1.0)))).x, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (0) / (1 & 1))], injectionSwitch[1]))) / vec2(1.0, 1.0)).x, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (0) / (1 & 1))], injectionSwitch[1]))) / vec2(1.0, 1.0)).x)) > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (0) / (1 & 1))], injectionSwitch[1]))) / vec2(1.0, 1.0)).x, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (0) / (1 & 1))], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1]))))) / vec2(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(vec3(-166.830, 742.710, 0.0)[2]) : 1.0)))).x, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (0) / (1 & 1))], injectionSwitch[1]))) / vec2(1.0, 1.0)).x)) > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (0) / (1 & 1))], injectionSwitch[1]))) / vec2(1.0, 1.0)).x, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (0) / (1 & 1))], injectionSwitch[1]))) / vec2(1.0, 1.0)).x, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (0) / (1 & 1))], injectionSwitch[1]))) / vec2(1.0, 1.0)).x)) > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (0) / (1 & 1))], injectionSwitch[1]))) / vec2(1.0, 1.0)).x, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (0) / (1 & 1))], injectionSwitch[1]))) / vec2(1.0, 1.0)).x, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (0) / (1 & 1))], injectionSwitch[_GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1))]))) / vec2(1.0, 1.0)).x)) > injectionSwitch.y)), false, true, false))))))) && true)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(injectionSwitch, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(3.3))), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, sqrt(0.0), 1.0)), min(vec2(mat4(injectionSwitch, 0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-8490.1064)), bool(false))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, sqrt(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(188.378) : _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0))))), 1.0)), vec2(mat4(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, sqrt(0.0), 1.0)))))[1]))) / vec2(1.0, 1.0)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, sqrt(0.0), 1.0)), min(vec2(mat4(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, sqrt(0.0), 1.0)), vec2(mat4(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, sqrt(0.0), 1.0)))))[1]))) / vec2(1.0, 1.0)))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(-5.5), 0.0 + (_GLF_FUZZED(-5.5))), _GLF_FUZZED(_GLF_IDENTITY(vec2(2.1, -348.799), min(vec2(2.1, -348.799), vec2(2.1, -348.799))).g)), vec2((injectionSwitch)[_GLF_IDENTITY(0, 0 | (0))], _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))[1], min(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))[1], _GLF_ZERO(0.0, injectionSwitch.x) + (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))[1], float(mat4x3((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))[1], 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0))))), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))[1])), max((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(true, true))).y), _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (0) / (1 & 1))], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], (_GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1]))) / 1.0), clamp(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, (1) / 1)], (injectionSwitch[1]) - 0.0), injectionSwitch[1], _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))[1]))))) / vec2(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-121.407)), bool(false))), 1.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-121.407)), bool(false))), 1.0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-121.407)), bool(false))), 1.0)), 1.0 * (_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-121.407)), bool(false))), 1.0)))), _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-121.407)), bool(false))), 1.0)), _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-121.407)), bool(false))), 1.0)))), _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-121.407)), bool(false))), 1.0)))))).x, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(_GLF_IDENTITY(0, (0) << 0), (0) / (1 & 1))], injectionSwitch[1]))) / vec2(1.0, 1.0)).x, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (0) / (1 & 1))], injectionSwitch[1]))) / vec2(1.0, 1.0)).x)) > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, _GLF_IDENTITY((0) / (1 & 1), clamp((0) / (1 & 1), (0) / (1 & 1), _GLF_IDENTITY((0) / (1 & 1), (false ? _GLF_FUZZED(51137) : (0) / (1 & 1))))))], injectionSwitch[_GLF_IDENTITY(1, (false ? _GLF_FUZZED(55810) : 1))]))), vec2(vec4((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, _GLF_IDENTITY((0) / (1 & 1), clamp((0) / (1 & 1), (0) / (1 & 1), _GLF_IDENTITY((0) / (1 & 1), (false ? _GLF_FUZZED(51137) : (0) / (1 & 1))))))], injectionSwitch[_GLF_IDENTITY(1, (false ? _GLF_FUZZED(55810) : 1))]))), 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0)))))) / vec2(1.0, 1.0)).x, (true ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, _GLF_IDENTITY((0) / (1 & 1), clamp((0) / (1 & 1), (0) / (1 & 1), _GLF_IDENTITY((0) / (1 & 1), (false ? _GLF_FUZZED(51137) : (0) / (1 & 1))))))], injectionSwitch[_GLF_IDENTITY(1, (false ? _GLF_FUZZED(55810) : 1))]))), vec2(vec4((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, _GLF_IDENTITY((0) / (1 & 1), clamp((0) / (1 & 1), (0) / (1 & 1), _GLF_IDENTITY((0) / (1 & 1), (false ? _GLF_FUZZED(51137) : (0) / (1 & 1))))))], injectionSwitch[_GLF_IDENTITY(1, (false ? _GLF_FUZZED(55810) : 1))]))), 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0)))))) / vec2(1.0, 1.0)).x : _GLF_FUZZED(0.6))), max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (0) / (1 & 1))], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))), vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (0) / (1 & 1))], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))), 0.0, tan(determinant(mat2(0.0, 1.0, 0.0, 0.0))), 1.0, 1.0)))) / vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(vec3(-166.830, 742.710, 0.0)[2]) : 1.0)))).x, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (0) / (1 & 1))], injectionSwitch[1]))) / vec2(1.0, 1.0)).x)) > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (0) / (1 & 1))], injectionSwitch[1]))) / _GLF_IDENTITY(vec2(1.0, 1.0), clamp(vec2(1.0, 1.0), vec2(1.0, 1.0), _GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) - vec2(0.0, 0.0))))).x, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (0) / (1 & 1))], _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[1]))) / vec2(1.0, 1.0)).x, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) / (1 & 1))], injectionSwitch[1]))) / vec2(1.0, 1.0)).x)) > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (0) / (1 & 1))], injectionSwitch[1])), (true ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (0) / (1 & 1))], injectionSwitch[1])) : _GLF_FUZZED(injectionSwitch)))) / vec2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) - _GLF_ZERO(0.0, injectionSwitch.x)), 1.0)).x, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (0) / (1 & 1))], injectionSwitch[1]))) / vec2(1.0, 1.0)).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (0) / (1 & 1))], injectionSwitch[_GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1))]))) / vec2(1.0, 1.0)), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(0, (0) / (1 & 1))], (injectionSwitch[_GLF_IDENTITY(0, (0) / (1 & 1))]) - sin(0.0)), _GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1))], mix(float(injectionSwitch[_GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1))]), float(_GLF_FUZZED(-1.2)), bool(false)))))) / vec2(1.0, 1.0))) - vec2(0.0, 0.0)).x)) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), false, true, false))))))), true && (((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (0) / (1 & 1))], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], (_GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1]))) / 1.0), clamp(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, (1) / 1)], (injectionSwitch[1]) - 0.0), injectionSwitch[1], _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))[1]))))) / vec2(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-121.407)), bool(false))), 1.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-121.407)), bool(false))), 1.0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-121.407)), bool(false))), 1.0)), 1.0 * (_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-121.407)), bool(false))), 1.0)))), _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-121.407)), bool(false))), 1.0)), _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-121.407)), bool(false))), 1.0)))), _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-121.407)), bool(false))), 1.0)))))).x, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(_GLF_IDENTITY(0, (0) << 0), (0) / (1 & 1))], injectionSwitch[1]))) / vec2(1.0, 1.0)).x, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (0) / (1 & 1))], injectionSwitch[1]))) / vec2(1.0, 1.0)).x)) > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, _GLF_IDENTITY((0) / (1 & 1), clamp((0) / (1 & 1), (0) / (1 & 1), _GLF_IDENTITY((0) / (1 & 1), (false ? _GLF_FUZZED(51137) : (0) / (1 & 1))))))], injectionSwitch[_GLF_IDENTITY(1, (false ? _GLF_FUZZED(55810) : 1))]))), vec2(vec4((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, _GLF_IDENTITY((0) / (1 & 1), clamp((0) / (1 & 1), (0) / (1 & 1), _GLF_IDENTITY((0) / (1 & 1), (false ? _GLF_FUZZED(51137) : (0) / (1 & 1))))))], injectionSwitch[_GLF_IDENTITY(1, (false ? _GLF_FUZZED(55810) : 1))]))), 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0)))))) / vec2(1.0, 1.0)).x, (true ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, _GLF_IDENTITY((0) / (1 & 1), clamp((0) / (1 & 1), (0) / (1 & 1), _GLF_IDENTITY((0) / (1 & 1), (false ? _GLF_FUZZED(51137) : (0) / (1 & 1))))))], injectionSwitch[_GLF_IDENTITY(1, (false ? _GLF_FUZZED(55810) : 1))]))), vec2(vec4((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, _GLF_IDENTITY((0) / (1 & 1), clamp((0) / (1 & 1), (0) / (1 & 1), _GLF_IDENTITY((0) / (1 & 1), (false ? _GLF_FUZZED(51137) : (0) / (1 & 1))))))], injectionSwitch[_GLF_IDENTITY(1, (false ? _GLF_FUZZED(55810) : 1))]))), 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0)))))) / vec2(1.0, 1.0)).x : _GLF_FUZZED(0.6))), max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (0) / (1 & 1))], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))), vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (0) / (1 & 1))], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))), 0.0, tan(determinant(mat2(0.0, 1.0, 0.0, 0.0))), 1.0, 1.0)))) / vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(vec3(-166.830, 742.710, 0.0)[2]) : 1.0)))).x, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (0) / (1 & 1))], injectionSwitch[1]))) / vec2(1.0, 1.0)).x)) > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (0) / (1 & 1))], injectionSwitch[1]))) / _GLF_IDENTITY(vec2(1.0, 1.0), clamp(vec2(1.0, 1.0), vec2(1.0, 1.0), _GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) - vec2(0.0, 0.0))))).x, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (0) / (1 & 1))], _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[1]))) / vec2(1.0, 1.0)).x, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) / (1 & 1))], injectionSwitch[1]))) / vec2(1.0, 1.0)).x)) > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (0) / (1 & 1))], injectionSwitch[1])), (true ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (0) / (1 & 1))], injectionSwitch[1])) : _GLF_FUZZED(injectionSwitch)))) / vec2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) - _GLF_ZERO(0.0, injectionSwitch.x)), 1.0)).x, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (0) / (1 & 1))], injectionSwitch[1]))) / vec2(1.0, 1.0)).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (0) / (1 & 1))], injectionSwitch[_GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1))]))) / vec2(1.0, 1.0)), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(0, (0) / (1 & 1))], (injectionSwitch[_GLF_IDENTITY(0, (0) / (1 & 1))]) - sin(0.0)), _GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1))], mix(float(injectionSwitch[_GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1))]), float(_GLF_FUZZED(-1.2)), bool(false)))))) / vec2(1.0, 1.0))) - vec2(0.0, 0.0)).x)) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), false, true, false))))))))) && true)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 _GLF_struct_6 _GLF_struct_replacement_6 = _GLF_struct_6(_GLF_struct_0(ivec4(1), gl_SubgroupInvocationID, bvec4(true)), _GLF_struct_5(_GLF_struct_1(uvec3(1u), bvec4(true)), _GLF_struct_2(vec3(1.0), mat2x4(1.0), ivec2(1), ivec3(1), bvec3(_GLF_IDENTITY(true, (true) && true)), 1.0), _GLF_struct_3(mat2x4(1.0)), vec3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), float(mat4x2(1.0, 1.0, abs(0.0), 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(1.1) : 0.0))) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), (_GLF_IDENTITY(false ? _GLF_FUZZED(659.637) : _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), (false ? _GLF_FUZZED(659.637) : _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0)))) - 0.0))) : _GLF_FUZZED(intBitsToFloat(14226)))), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(25.72)), _GLF_IDENTITY(bool(false), true && (_GLF_IDENTITY(bool(false), bool(bvec3(bool(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))), max(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0))))), _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) / round(length(normalize(vec3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x2(1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, abs(1.0))), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, abs(1.0)))), 1.0, 0.0, 0.0, 0.0)), mix(float(_GLF_FUZZED(27.16)), float(float(mat4x2(1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(4.7)), float(0.0), bool(true))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0), vec3(0.0, 0.0, abs(1.0))), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, abs(_GLF_IDENTITY(1.0, log(1.0) + (1.0)))))), 1.0, 0.0, 0.0, 0.0))), bool(true)))), 1.0, 1.0)))))))), float(_GLF_FUZZED(-0.0)), bool(false))), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-683.076) : 1.0)))))), (_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), float(mat4x2(1.0, 1.0, abs(0.0), 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(1.1) : 0.0))) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2(_GLF_FUZZED(-676.641), _GLF_FUZZED(852.441)), vec2((vec2(1.0, 1.0))[0], (vec2(1.0, 1.0))[1]), bvec2(true, true))), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), (_GLF_IDENTITY(false ? _GLF_FUZZED(659.637) : _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) * vec2(1.0, 1.0)), vec2(0.0, 0.0)), dot(_GLF_IDENTITY(vec2(1.0, 1.0), (true ? _GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) + vec2(0.0, 0.0)) : _GLF_FUZZED(injectionSwitch))), vec2(0.0, 0.0))), (false ? _GLF_FUZZED(659.637) : _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0)))) - 0.0))) : _GLF_FUZZED(intBitsToFloat(14226)))), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(25.72)), _GLF_IDENTITY(bool(false), true && (_GLF_IDENTITY(bool(false), bool(bvec3(bool(false), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)), true))))))), max(_GLF_IDENTITY(1.0, (1.0) - _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(987.073)), float(0.0), bool(true))), 0.0, 0.0))), 1.0))))), _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) / round(length(normalize(vec3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x2(1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) - 0.0)), vec3(0.0, 0.0, abs(1.0))), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, abs(1.0)))), 1.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), 0.0)), mix(float(_GLF_FUZZED(27.16)), float(float(mat4x2(1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY(4.7, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 4.7 : _GLF_FUZZED(-397.042))))), float(0.0), bool(true))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0), vec3(0.0, 0.0, abs(1.0))), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, abs(_GLF_IDENTITY(1.0, log(1.0) + (1.0)))))), 1.0, 0.0, 0.0, 0.0))), bool(true)))), 1.0, 1.0)))))))), float(_GLF_FUZZED(-0.0)), bool(false))), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-683.076) : 1.0))))))) / 1.0)), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), (bool(true)) || false))), _GLF_struct_4(mat3x4(1.0))), vec4(1.0));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), ((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec4(! (true), false, true, false))))), true, true, false))), (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, (_GLF_IDENTITY((_GLF_DEAD(false)) && true, _GLF_IDENTITY(((_GLF_DEAD(false)) && true), ! (! (((_GLF_DEAD(false)) && true)))) || false)) || false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), (! (true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))))) && true)))))))
  return;
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) | (gl_WorkGroupSize)), _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) >> _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) - uvec3(0u, 0u, 0u)), uvec3(1u, 1u, 1u) * (_GLF_IDENTITY((gl_WorkGroupSize) >> _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) - uvec3(0u, 0u, 0u)), (_GLF_IDENTITY((gl_WorkGroupSize) >> _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) - uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) | ((gl_WorkGroupSize) >> _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) - uvec3(0u, 0u, 0u))))) | uvec3(0u, 0u, 0u))))), gl_WorkGroupSize)).x, ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize, clamp(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) | (gl_WorkGroupSize)), _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) >> _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) - uvec3(0u, 0u, 0u)), uvec3(1u, 1u, 1u) * (_GLF_IDENTITY((gl_WorkGroupSize) >> _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) - uvec3(0u, 0u, 0u)), (_GLF_IDENTITY((gl_WorkGroupSize) >> _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) - uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) | ((gl_WorkGroupSize) >> _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) - uvec3(0u, 0u, 0u))))) | uvec3(0u, 0u, 0u))))), gl_WorkGroupSize)).x)));
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID))) - uvec3(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(60.92)), float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))), bool(true)))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)), 0.0)), injectionSwitch.x))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID) | (gl_WorkGroupID), clamp((gl_WorkGroupID) | (gl_WorkGroupID), (gl_WorkGroupID) | (gl_WorkGroupID), (gl_WorkGroupID) | (gl_WorkGroupID))))) - uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-8.1, -37.75)) : injectionSwitch)).x)))), (~ (_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)), uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)), 1u)))) - uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + abs(vec2(0.0, 0.0))).x))))) / uvec3(1u, 1u, 1u)), (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID) | (gl_WorkGroupID), clamp((gl_WorkGroupID) | (gl_WorkGroupID), (gl_WorkGroupID) | (gl_WorkGroupID), (gl_WorkGroupID) | (gl_WorkGroupID))))) - uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-8.1, -37.75)) : injectionSwitch)).x)))), (~ (_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)), uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)), 1u)))) - uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + abs(vec2(0.0, 0.0))).x))))) / uvec3(1u, 1u, 1u))) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID) | (gl_WorkGroupID), clamp((gl_WorkGroupID) | (gl_WorkGroupID), (gl_WorkGroupID) | (gl_WorkGroupID), (gl_WorkGroupID) | (gl_WorkGroupID))))) - uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-8.1, -37.75)) : injectionSwitch)).x)))), (~ (_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)), uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)), 1u)))) - uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + abs(vec2(0.0, 0.0))).x))))) / uvec3(1u, 1u, 1u)))))).x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec2(! (_GLF_DEAD(false)), false))))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), bool(bvec4(_GLF_IDENTITY(bool(bvec2(true, false)), (bool(bvec2(true, false))) && _GLF_IDENTITY(true, false || (true))), false, false, false)))) && (! (! (_GLF_DEAD(false)))))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), false, false))))), false, true)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_size) : subgroup_id * _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), (true ? false ? _GLF_FUZZED(workgroup_size) : subgroup_id * _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)) - 0u))))))) | 0u)) ^ 0u) + _GLF_struct_replacement_6._f0.subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(0.0, 1.0, sin(0.0), 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, sin(0.0), 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, sin(0.0), 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, sin(0.0), 0.0)), (dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, sin(0.0), 0.0))) - 0.0)), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, abs(0.0))))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, true)))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch)))))) - vec2(0.0, 0.0)) * mat2(1.0)))).x > injectionSwitch.y))))))))) && true)) && _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), true && (bool(bvec2(true, true))))), (injectionSwitch.x < injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), bvec3(bvec3(bvec3(_GLF_DEAD(false), true, true)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((_GLF_struct_replacement_6._f0.subgroup_local_id + 1), 1u * (_GLF_IDENTITY((_GLF_struct_replacement_6._f0.subgroup_local_id + 1), (_GLF_IDENTITY((_GLF_struct_replacement_6._f0.subgroup_local_id + 1), (false ? _GLF_FUZZED(subgroup_size) : (_GLF_struct_replacement_6._f0.subgroup_local_id + 1)))) >> 0u))) % subgroup_size);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) * 1.0), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) - vec2(0.0, 0.0)).y, (injectionSwitch.y) / 1.0) : _GLF_FUZZED(-3.2)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) || false) || (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-2.6) : _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(1.6) : injectionSwitch.y)), injectionSwitch.y))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u)], _GLF_IDENTITY(_GLF_IDENTITY(uint(1), (false ? _GLF_FUZZED(num_workgroup) : uint(1))), clamp(_GLF_IDENTITY(uint(1), (false ? _GLF_FUZZED(num_workgroup) : uint(1))), _GLF_IDENTITY(uint(1), (false ? _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, (num_workgroup) ^ 0u)) : uint(1))), _GLF_IDENTITY(_GLF_IDENTITY(uint(1), (false ? _GLF_FUZZED(num_workgroup) : uint(1))), (_GLF_IDENTITY(1u, min(1u, 1u)) ^ 0u) * (_GLF_IDENTITY(uint(1), (false ? _GLF_FUZZED(num_workgroup) : uint(1))))))), _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) / int(_GLF_ONE(1.0, injectionSwitch.y)))) | (4)), 64, 4);
 if(_GLF_IDENTITY(_GLF_struct_replacement_6._f0.subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(bvec2(_GLF_struct_replacement_6._f0.subgroup_local_id + 1 < subgroup_size, false)), false || (bool(bvec2(_GLF_struct_replacement_6._f0.subgroup_local_id + 1 < subgroup_size, false))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   int i = _GLF_IDENTITY(0, (false ? _GLF_FUZZED(bitfieldInsert(-79562, int(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), (bool(true)) || false)), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), (bool(true)) || false)), false || (bool(_GLF_IDENTITY(bool(true), (bool(true)) || false)))))))), 44128, 66036)) : 0));
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, (0u | _GLF_IDENTITY(0u, uint(uvec4(0u, 0u, 0u, 0u)))) ^ (next_virtual_gid))))], _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(2, _GLF_IDENTITY((2) >> 0, max(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) | 0), min(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) | 0), (true ? _GLF_IDENTITY(2, (2) | 0) : _GLF_FUZZED(75835))), _GLF_IDENTITY(2, (2) | 0))), (_GLF_IDENTITY(_GLF_IDENTITY(2, (2) | 0), 0 ^ (_GLF_IDENTITY(2, (2) | 0)))) + _GLF_IDENTITY(0, (0) >> 0))) >> 0, int(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, 0.0)), injectionSwitch.x)) | _GLF_IDENTITY(((_GLF_IDENTITY(2, (2) | 0)) >> 0), (true ? ((_GLF_IDENTITY(2, (2) | 0)) >> 0) : _GLF_FUZZED(i)))), max(_GLF_IDENTITY((2), ((2)) * 1) >> 0, (2) >> 0)), _GLF_IDENTITY((2) >> 0, (_GLF_IDENTITY((2), ~ (~ ((2)))) >> 0) | ((2) >> 0)))))), max(uint(_GLF_IDENTITY(2, _GLF_IDENTITY(_GLF_IDENTITY((2) >> 0, _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(2, (2) | 0)) >> 0, 0 | ((_GLF_IDENTITY(2, (2) | 0)) >> 0)), max((2) >> 0, (2) >> 0)), _GLF_IDENTITY((2) >> 0, (_GLF_IDENTITY((2), ~ (_GLF_IDENTITY(~ ((2)), min(~ ((2)), _GLF_IDENTITY(~ ((2)), (~ ((2))) | 0))))) >> 0) | ((2) >> 0))), (max(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(2, (2) | _GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (0) | (0)))))))) >> _GLF_IDENTITY(0, int(int(0))), 0 | ((_GLF_IDENTITY(2, (2) | 0)) >> 0)), max((_GLF_IDENTITY(2, (2) | 0)) >> 0, (2) >> 0)), _GLF_IDENTITY((2) >> 0, (_GLF_IDENTITY((2), ~ (_GLF_IDENTITY(~ ((2)), min(~ ((2)), _GLF_IDENTITY(~ ((2)), (~ ((2))) | 0))))) >> 0) | ((2) >> 0)))) + 0)), (true ? _GLF_IDENTITY((_GLF_IDENTITY(2, (2) + _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), max(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x)))))) >> _GLF_IDENTITY(0, int(int(0))), max(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(2, (2) | 0), 1 * (_GLF_IDENTITY(2, (2) | 0)))) >> 0, _GLF_IDENTITY(_GLF_IDENTITY(max(_GLF_IDENTITY((2) >> 0, min(_GLF_IDENTITY((2) >> 0, (0 << _GLF_IDENTITY(int(2), int(2))) | ((2) >> 0)), _GLF_IDENTITY((2) >> 0, clamp((2) >> 0, (2) >> 0, (2) >> 0)))), (2) >> 0), ~ (~ (_GLF_IDENTITY(max((2) >> 0, (2) >> 0), (max((2) >> 0, (2) >> 0)) ^ (1 ^ 1))))), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(max((2) >> 0, (2) >> 0), (max((2) >> 0, (2) >> 0)) | (max((2) >> 0, (2) >> 0))), ~ (~ (_GLF_IDENTITY(max((2) >> 0, (2) >> 0), (max((2) >> 0, (2) >> 0)) ^ (1 ^ _GLF_IDENTITY(1, (1) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))))))))))), _GLF_IDENTITY(_GLF_IDENTITY((2), ((2)) - 0) >> 0, ((2) >> 0) | _GLF_IDENTITY(((2) >> 0), clamp(((2) >> 0), _GLF_IDENTITY(((2) >> 0), (_GLF_IDENTITY(((2) >> 0), (_GLF_IDENTITY(((2) >> 0), (((2) >> 0)) / 1)) ^ 0)) | (((2) >> 0))), ((2) >> 0)))))) : _GLF_FUZZED(96905))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(2, _GLF_IDENTITY((2) >> 0, max(_GLF_IDENTITY((_GLF_IDENTITY(2, (2) | 0)) >> 0, max((_GLF_IDENTITY(2, (1 & 1) * (2))) >> 0, (_GLF_IDENTITY(2, 0 + (_GLF_IDENTITY(2, (2) << 0)))) >> 0)), _GLF_IDENTITY((2) >> 0, (_GLF_IDENTITY((2), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY((2), _GLF_IDENTITY(((2)) + 0, int(int(((2)) + 0)))), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY((2), 0 + ((2))), max(_GLF_IDENTITY((2), 0 + ((2))), _GLF_IDENTITY(_GLF_IDENTITY((2), 0 + ((2))), (_GLF_IDENTITY((2), 0 + ((2)))) / 1))), _GLF_IDENTITY(1, (1) | (1))), (ivec2((2), 1)) + ivec2(0, _GLF_IDENTITY(0, 1 * (0))))))), (~ (_GLF_IDENTITY((2), int(_GLF_IDENTITY(ivec2((2), 1), _GLF_IDENTITY((ivec2((2), 1)) + ivec2(0, 0), _GLF_IDENTITY(max((ivec2((2), 1)) + ivec2(0, 0), (ivec2((2), 1)) + ivec2(0, 0)), min(max((ivec2((2), 1)) + ivec2(0, 0), (ivec2((2), 1)) + ivec2(0, 0)), _GLF_IDENTITY(max((ivec2((2), 1)) + ivec2(0, 0), (ivec2((2), 1)) + ivec2(0, 0)), (true ? max((ivec2((2), 1)) + ivec2(0, 0), (ivec2((2), 1)) + ivec2(0, 0)) : _GLF_FUZZED(ivec2(69384, -20547)))))))))))) >> 0))) >> 0) | ((2) >> 0)))))), max(uint(_GLF_IDENTITY(2, _GLF_IDENTITY((2) >> 0, max(_GLF_IDENTITY((_GLF_IDENTITY(2, (2) | _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(0, 0 ^ (0)), (_GLF_IDENTITY(_GLF_IDENTITY(0, 0 ^ (0)), (_GLF_IDENTITY(0, 0 ^ (0))) << 0)) / 1), _GLF_IDENTITY(0, 1 * (_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), (~ (0)) / 1))))), 0)))) >> 0, max((2) >> _GLF_IDENTITY(_GLF_IDENTITY(0, 1 * (0)), (_GLF_IDENTITY(_GLF_IDENTITY(0, 1 * (0)), 0 + (_GLF_IDENTITY(0, 1 * (0))))) / 1), (2) >> 0)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(i))), (true ? _GLF_IDENTITY(2, ~ (~ (2))) : _GLF_FUZZED(-69344)))) >> 0, ((2) >> 0) | ((_GLF_IDENTITY(2, min(2, 2))) >> 0)))))), uint(_GLF_IDENTITY(2, _GLF_IDENTITY((2) >> 0, max(_GLF_IDENTITY((_GLF_IDENTITY(2, (2) | 0)) >> 0, max((2) >> 0, (2) >> 0)), _GLF_IDENTITY((2) >> 0, ((2) >> 0) | _GLF_IDENTITY(((2) >> 0), ~ _GLF_IDENTITY((~ (((2) >> 0))), (false ? _GLF_FUZZED(7683) : (~ (((2) >> 0))))))))))))))), (uint(_GLF_IDENTITY(2, _GLF_IDENTITY(_GLF_IDENTITY((2), (true ? (2) : _GLF_FUZZED(i))) >> 0, max(_GLF_IDENTITY(_GLF_IDENTITY((2) >> 0, max(_GLF_IDENTITY((2), max(_GLF_IDENTITY((2), _GLF_IDENTITY(((2)), clamp(_GLF_IDENTITY(((2)), (((2))) | 0), ((2)), ((2)))) << 0), (2))) >> 0, (2) >> 0)), 1 * (_GLF_IDENTITY((2) >> 0, _GLF_IDENTITY(max((2) >> 0, (_GLF_IDENTITY(2, clamp(2, 2, 2))) >> 0), max(_GLF_IDENTITY(max((2) >> 0, _GLF_IDENTITY((2), ~ (~ ((2)))) >> 0), (max((2) >> 0, (2) >> 0)) | 0), max((2) >> 0, (2) >> 0)))))), _GLF_IDENTITY((2) >> 0, (_GLF_IDENTITY(_GLF_IDENTITY((2), (_GLF_IDENTITY(_GLF_IDENTITY((2), ((2)) << 0), (_GLF_IDENTITY((2), ((2)) << 0)) - 0)) | 0), (_GLF_IDENTITY((2), (_GLF_IDENTITY((2), _GLF_IDENTITY(((2)), (((2))) << 0) << 0)) | 0)) ^ _GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(0, 0, 0))) / (1 & 1))) >> 0) | (_GLF_IDENTITY((2), ((_GLF_IDENTITY(2, (2) | 0))) | 0) >> 0))))))) / (_GLF_IDENTITY((_GLF_IDENTITY(1u, (1u) << (0u ^ 0u)) << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(0u), (uint(0u)) ^ 0u)), clamp(uint(_GLF_IDENTITY(uint(0u), (uint(0u)) ^ 0u)), uint(_GLF_IDENTITY(uint(0u), (uint(0u)) ^ 0u)), uint(_GLF_IDENTITY(uint(0u), (uint(0u)) ^ 0u))))))), max(_GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), min(_GLF_IDENTITY(uint(0u), (uint(0u)) ^ 0u), _GLF_IDENTITY(uint(0u), (uint(0u)) | 0u)))), _GLF_IDENTITY(uint(0u), uint(0u)))), uint(_GLF_IDENTITY(uvec2((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY(max(_GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY(uint(0u), uint(0u))), _GLF_IDENTITY(uint(uvec2(max(_GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY(uint(0u), uint(0u))), 1u)), ~ (~ (uint(uvec2(max(_GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY(uint(0u), uint(0u))), 1u))))))), 0u), (_GLF_IDENTITY(uvec2((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), max(_GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY(uint(0u), uint(0u)))), 0u), (uvec2((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (0u) | (0u))), uint(0u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), max(_GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY(uint(0u), uint(0u)))), 0u)) - uvec2(0u, 0u))) << uvec2(0u, 0u)))))), 4, 64, 4);
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, false)), (_GLF_IDENTITY(bool(bvec4(false, true, true, false)), bool(bvec2(bool(bvec4(false, true, true, false)), true)))) || false))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))) || (false)), (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(vec3(-5439.9390, 203.815, 0.3).z), _GLF_FUZZED((-7.9 * -8.7))), bvec2(false, false))).x > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, _GLF_ONE(1.0, injectionSwitch.y), log(1.0), 1.0, 1.0, 0.0, 1.0), (mat3(injectionSwitch, 1.0, _GLF_ONE(1.0, injectionSwitch.y), log(1.0), 1.0, 1.0, 0.0, 1.0)) * mat3(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)))), 1.0, 1.0)))))).y)) || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, min(_GLF_IDENTITY(next_virtual_gid, 1u * (next_virtual_gid)), next_virtual_gid)), 1u * (_GLF_IDENTITY(next_virtual_gid, min(_GLF_IDENTITY(next_virtual_gid, 1u * _GLF_IDENTITY((next_virtual_gid), max((next_virtual_gid), (next_virtual_gid)))), next_virtual_gid))))], uint(2), 4, 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 0.0, 0.0, length(0.0), 0.0, 0.0))) > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))), false, false, true)), ! (! (bool(bvec4((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, true))))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (false ? _GLF_FUZZED(vec2(3.6, 0.2)) : mat2(1.0) * (injectionSwitch))), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (true ? mat2(1.0) * (injectionSwitch) : _GLF_FUZZED(injectionSwitch)))))).y))))), (injectionSwitch.x > injectionSwitch.y)), false || _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false)), ! (! (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (false ? _GLF_FUZZED(vec2(3.6, 0.2)) : mat2(1.0) * (injectionSwitch))), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (true ? mat2(1.0) * (injectionSwitch) : _GLF_FUZZED(injectionSwitch)))))).y))))), (injectionSwitch.x > injectionSwitch.y)), false || _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec3(false, false, false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
  }
}
