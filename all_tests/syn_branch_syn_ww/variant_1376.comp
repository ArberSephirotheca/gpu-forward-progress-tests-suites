#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false)))))) || false))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), log(1.0), 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)))))).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))) && true), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))) && true), false, true)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))) && true), false, true)), true))))))))
    barrier();
   return;
  }
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))))
    return;
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, ~ (_GLF_IDENTITY(~ (gl_WorkGroupID), clamp(~ (gl_WorkGroupID), ~ (gl_WorkGroupID), ~ (gl_WorkGroupID))))).x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (1u ^ 1u) | (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, ~ (~ (workgroup_base + subgroup_id * subgroup_size))))) + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0, _GLF_IDENTITY(dot(vec2(1.0, sin(0.0)), vec2(1.0, 0.0)), dot(vec2(1.0, sin(0.0)), vec2(1.0, 0.0))), 1.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, length(vec3(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)), 1.0, 0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(clamp(vec2(mat4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0, _GLF_IDENTITY(dot(vec2(1.0, sin(0.0)), vec2(1.0, 0.0)), dot(vec2(1.0, sin(0.0)), vec2(1.0, 0.0))), 1.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 0.0)), vec2(mat4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0, _GLF_IDENTITY(dot(vec2(1.0, sin(0.0)), vec2(1.0, 0.0)), dot(vec2(1.0, sin(0.0)), vec2(1.0, 0.0))), 1.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 0.0)), vec2(mat4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0, _GLF_IDENTITY(dot(vec2(1.0, sin(0.0)), vec2(1.0, 0.0)), dot(vec2(1.0, sin(0.0)), vec2(1.0, 0.0))), 1.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 0.0))), clamp(clamp(vec2(mat4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0, _GLF_IDENTITY(dot(vec2(1.0, sin(0.0)), vec2(1.0, 0.0)), dot(vec2(1.0, sin(0.0)), vec2(1.0, 0.0))), 1.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 0.0)), vec2(mat4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0, _GLF_IDENTITY(dot(vec2(1.0, sin(0.0)), vec2(1.0, 0.0)), dot(vec2(1.0, sin(0.0)), vec2(1.0, 0.0))), 1.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 0.0)), vec2(mat4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0, _GLF_IDENTITY(dot(vec2(1.0, sin(0.0)), vec2(1.0, 0.0)), dot(vec2(1.0, sin(0.0)), vec2(1.0, 0.0))), 1.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 0.0))), clamp(vec2(mat4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0, _GLF_IDENTITY(dot(vec2(1.0, sin(0.0)), vec2(1.0, 0.0)), dot(vec2(1.0, sin(0.0)), vec2(1.0, 0.0))), 1.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 0.0)), vec2(mat4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0, _GLF_IDENTITY(dot(vec2(1.0, sin(0.0)), vec2(1.0, 0.0)), dot(vec2(1.0, sin(0.0)), vec2(1.0, 0.0))), 1.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 0.0)), vec2(mat4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0, _GLF_IDENTITY(dot(vec2(1.0, sin(0.0)), vec2(1.0, 0.0)), dot(vec2(1.0, sin(0.0)), vec2(1.0, 0.0))), 1.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 0.0))), clamp(vec2(mat4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0, _GLF_IDENTITY(dot(vec2(1.0, sin(0.0)), vec2(1.0, 0.0)), dot(vec2(1.0, sin(0.0)), vec2(1.0, 0.0))), 1.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 0.0)), vec2(mat4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0, _GLF_IDENTITY(dot(vec2(1.0, sin(0.0)), vec2(1.0, 0.0)), dot(vec2(1.0, sin(0.0)), vec2(1.0, 0.0))), 1.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 0.0)), vec2(mat4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0, _GLF_IDENTITY(dot(vec2(1.0, sin(0.0)), vec2(1.0, 0.0)), dot(vec2(1.0, sin(0.0)), vec2(1.0, 0.0))), 1.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 0.0))))))).x, mix(float(_GLF_FUZZED(-2426.6085)), float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0, _GLF_IDENTITY(dot(vec2(1.0, sin(0.0)), vec2(1.0, 0.0)), dot(vec2(1.0, sin(0.0)), vec2(1.0, 0.0))), 1.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, length(vec3(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)), 1.0, 0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(clamp(vec2(mat4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0, _GLF_IDENTITY(dot(vec2(1.0, sin(0.0)), vec2(1.0, 0.0)), dot(vec2(1.0, sin(0.0)), vec2(1.0, 0.0))), 1.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 0.0)), vec2(mat4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0, _GLF_IDENTITY(dot(vec2(1.0, sin(0.0)), vec2(1.0, 0.0)), dot(vec2(1.0, sin(0.0)), vec2(1.0, 0.0))), 1.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 0.0)), vec2(mat4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0, _GLF_IDENTITY(dot(vec2(1.0, sin(0.0)), vec2(1.0, 0.0)), dot(vec2(1.0, sin(0.0)), vec2(1.0, 0.0))), 1.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 0.0))), clamp(clamp(vec2(mat4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0, _GLF_IDENTITY(dot(vec2(1.0, sin(0.0)), vec2(1.0, 0.0)), dot(vec2(1.0, sin(0.0)), vec2(1.0, 0.0))), 1.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 0.0)), vec2(mat4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0, _GLF_IDENTITY(dot(vec2(1.0, sin(0.0)), vec2(1.0, 0.0)), dot(vec2(1.0, sin(0.0)), vec2(1.0, 0.0))), 1.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 0.0)), vec2(mat4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0, _GLF_IDENTITY(dot(vec2(1.0, sin(0.0)), vec2(1.0, 0.0)), dot(vec2(1.0, sin(0.0)), vec2(1.0, 0.0))), 1.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 0.0))), clamp(vec2(mat4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0, _GLF_IDENTITY(dot(vec2(1.0, sin(0.0)), vec2(1.0, 0.0)), dot(vec2(1.0, sin(0.0)), vec2(1.0, 0.0))), 1.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 0.0)), vec2(mat4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0, _GLF_IDENTITY(dot(vec2(1.0, sin(0.0)), vec2(1.0, 0.0)), dot(vec2(1.0, sin(0.0)), vec2(1.0, 0.0))), 1.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 0.0)), vec2(mat4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0, _GLF_IDENTITY(dot(vec2(1.0, sin(0.0)), vec2(1.0, 0.0)), dot(vec2(1.0, sin(0.0)), vec2(1.0, 0.0))), 1.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 0.0))), clamp(vec2(mat4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0, _GLF_IDENTITY(dot(vec2(1.0, sin(0.0)), vec2(1.0, 0.0)), dot(vec2(1.0, sin(0.0)), vec2(1.0, 0.0))), 1.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 0.0)), vec2(mat4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0, _GLF_IDENTITY(dot(vec2(1.0, sin(0.0)), vec2(1.0, 0.0)), dot(vec2(1.0, sin(0.0)), vec2(1.0, 0.0))), 1.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 0.0)), vec2(mat4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0, _GLF_IDENTITY(dot(vec2(1.0, sin(0.0)), vec2(1.0, 0.0)), dot(vec2(1.0, sin(0.0)), vec2(1.0, 0.0))), 1.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 0.0))))))).x), bool(true))) > injectionSwitch.y)), _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))) || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-7.8)), bool(false))), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) || false)))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 atomicStore(buf[virtual_gid], uint(1), 4, 64, _GLF_IDENTITY(4, (4) ^ 0));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, (false) || false)))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec2(! (false), false)), bool(_GLF_IDENTITY(bool(bool(bvec2(! (false), false))), (bool(bool(bvec2(! (false), false)))) || false)))))), bool(bvec4(false, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(3611.5120), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(6.1)), bvec2(true, false))).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(868.209)), bool(false)))))) + 0.0))), true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))), false, false)), true && (bool(bvec3(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))), false, false)))))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))) && true)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))) && true))), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))) && true))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + log(1.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))) * vec2(1.0, 1.0)).y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-9.8)))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), sqrt(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 1.0))).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), ! (! (bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), ! (! (bool((injectionSwitch.x > injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (bool((injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(! (! (bool((injectionSwitch.x > injectionSwitch.y)))), false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), ! (! (bool((injectionSwitch.x > injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)))))))), (bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), ! (! (bool((injectionSwitch.x > injectionSwitch.y))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))))) || false)))))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(bvec2(false, true))), bvec2(bvec2(bvec2(bvec2(bvec2(false, true)))))), bvec2(bvec2(bvec2(bvec2(bvec2(false, true)))))))), ! (! (bool(bvec2(false, _GLF_IDENTITY(true, false || (true))))))))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) ^ 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) ^ 0u), (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) ^ 0u)) / 1u), _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), ~ (~ (_GLF_IDENTITY(1, _GLF_IDENTITY(min(1, 1), (min(1, 1)) / int(_GLF_ONE(1.0, injectionSwitch.y)))))))) ^ 0u))) < subgroup_size)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   int i = 0;
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(uint(uint(next_virtual_gid)), 0u ^ (uint(uint(next_virtual_gid)))))], _GLF_IDENTITY(uint(2), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(uint(2), uint(uvec4(uint(2), 1u, 0u, 1u))), max(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(uint(2), uint(uvec4(uint(2), 1u, 0u, 1u))), ~ (~ (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(uint(2), uint(uvec4(uint(2), 1u, 0u, 1u)))))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(uint(2), uint(uvec4(uint(2), 1u, 0u, 1u))), uint(uvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(uint(2), uint(uvec4(uint(2), 1u, 0u, 1u))), 0u, 0u, 1u))))))), 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), true)), true && (bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), min(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0, 0.0, 0.0, 0.0)), min(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-51.96))) : _GLF_FUZZED(21.37))), 0.0, 0.0)), vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)))))) / vec2(1.0, 1.0)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, 0.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), 0.0, 0.0, 0.0, 0.0)), min(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / sqrt(vec2(1.0, 1.0))), _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(7771.3342))), 1.0, 0.0, 0.0, 0.0, 0.0)), min(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)))))) / vec2(1.0, 1.0), ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), min(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)))))) / vec2(1.0, 1.0)) + vec2(0.0, 0.0)))) * vec2(1.0, 1.0)).y, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - _GLF_ZERO(0.0, injectionSwitch.x)))), min(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-4.8)), float(0.0), bool(_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))))), 0.0, _GLF_IDENTITY(0.0, float(vec3(0.0, 0.0, 0.0))), 0.0))))).y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0)), min(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), vec2(mat3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), (_GLF_IDENTITY(0.0, max(0.0, 0.0))) + abs(0.0)), 0.0))))).y))))), _GLF_IDENTITY(true, ! _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, false || (true)))), bool(bvec3(bool(bool(_GLF_IDENTITY(true, false || (true)))), false, false))))), true && ((_GLF_IDENTITY(true, false || (true))))), false || (! (_GLF_IDENTITY(true, false || (true)))))), ! (! ((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(true, false || (true))), true && ((_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true))))))), false || (! (_GLF_IDENTITY(true, false || (true))))))))))), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), min(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), min(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0), mat3(mat4x3(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))))))))) / vec2(1.0, 1.0)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(9.0), _GLF_FUZZED(5673.5600)), vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), bvec2(true, true))), _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(5.0) : 1.0))) * 1.0), 0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 0.0)), min(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), min(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)))))) / vec2(1.0, 1.0), ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), min(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)))))) / vec2(1.0, 1.0)) + vec2(0.0, 0.0)))) * vec2(1.0, 1.0)).y, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-44.34)), bool(false))))), min(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-4.8)), float(0.0), bool(_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))))), 0.0, 0.0, 0.0))))).y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(87.11) : 1.0)), 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0)), min(vec2(mat3(injectionSwitch, 1.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), vec2(mat3(injectionSwitch, _GLF_IDENTITY(1.0, float(mat3x2(1.0, 1.0, 1.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0))))).y))))), _GLF_IDENTITY(true, ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), false || (! (_GLF_IDENTITY(true, _GLF_IDENTITY(false, (false) || false) || (true)))))), true && ((_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), false || (! (_GLF_IDENTITY(true, _GLF_IDENTITY(false, (false) || false) || (true)))))))))), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)), 0.0, 0.0)), (true ? vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(injectionSwitch))), min(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0, 0.0)), min(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)))))) / _GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY(mat2(1.0) * (vec2(1.0, 1.0)), min(mat2(1.0) * (vec2(1.0, 1.0)), mat2(1.0) * (vec2(1.0, 1.0)))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-409.506) : 0.0))), float(_GLF_FUZZED(-8942.2515)), bool(false))), 0.0)), 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), min(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), min(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x2(0.0, 0.0, 1.0, 0.0, 1.0, 0.0), mat3x2(_GLF_IDENTITY(mat4x3(mat3x2(0.0, 0.0, 1.0, 0.0, 1.0, 0.0)), mat3(1.0) * (mat4x3(mat3x2(0.0, 0.0, 1.0, 0.0, 1.0, 0.0)))))))), 0.0, 0.0, 0.0)), vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)))))) / vec2(1.0, 1.0), ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), min(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0), (true ? mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0) : _GLF_FUZZED(mat3(-90.92, 8274.7651, -1.0, -47.16, 1.3, -989.742, 5.3, 8.2, -5.0))))))))) / vec2(1.0, 1.0)) + vec2(0.0, 0.0)))) * vec2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(atanh(4.7)) : 1.0)), 1.0)).y, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), min(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-4.8)), float(_GLF_IDENTITY(0.0, _GLF_IDENTITY(_GLF_IDENTITY(float(mat2x3(0.0, 0.0, sqrt(0.0), 1.0, 1.0, cos(0.0))), min(float(mat2x3(0.0, 0.0, sqrt(0.0), 1.0, 1.0, cos(0.0))), float(mat2x3(0.0, 0.0, sqrt(0.0), 1.0, 1.0, cos(0.0))))), (false ? _GLF_FUZZED(7110.8508) : _GLF_IDENTITY(_GLF_IDENTITY(float(mat2x3(0.0, 0.0, sqrt(0.0), 1.0, 1.0, cos(0.0))), min(float(mat2x3(0.0, 0.0, sqrt(0.0), 1.0, 1.0, cos(0.0))), float(mat2x3(0.0, 0.0, sqrt(0.0), 1.0, 1.0, cos(0.0))))), min(_GLF_IDENTITY(float(mat2x3(0.0, 0.0, sqrt(0.0), 1.0, 1.0, cos(0.0))), min(float(mat2x3(0.0, 0.0, sqrt(0.0), 1.0, 1.0, cos(0.0))), float(mat2x3(0.0, 0.0, sqrt(0.0), 1.0, 1.0, cos(0.0))))), _GLF_IDENTITY(float(mat2x3(0.0, 0.0, sqrt(0.0), 1.0, 1.0, cos(0.0))), min(float(mat2x3(0.0, 0.0, sqrt(0.0), 1.0, 1.0, cos(0.0))), float(mat2x3(0.0, 0.0, sqrt(0.0), 1.0, 1.0, cos(0.0))))))))))), bool(_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))))), 0.0, 0.0, 0.0))))).y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0)), min(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0))))).y))))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), false || (! (_GLF_IDENTITY(true, false || (true))))))))), bvec2(bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), min(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), min(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), vec2(mat3(injectionSwitch, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, float(vec4(1.0, 1.0, 1.0, 1.0))), _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))))), (1.0) + 0.0), 0.0, 0.0, 0.0, 0.0)))))) / vec2(1.0, 1.0)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(min(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))), mix(vec2(_GLF_IDENTITY((min(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)))), min((min(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)))), (min(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))))))[0], (min(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))))[1]), vec2(_GLF_FUZZED(3788.7370), _GLF_FUZZED(9.8)), bvec2(false, false))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), min(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)))))) / vec2(1.0, 1.0), ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), min(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)))))) / vec2(1.0, 1.0)) + vec2(0.0, 0.0)))) * vec2(1.0, 1.0)).y, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), min(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-4.8)), float(0.0), bool(_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))))), 0.0, 0.0, 0.0))))).y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0)), min(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(float(0.0), clamp(float(0.0), float(0.0), float(0.0))))), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0))))).y))))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), false || (! (_GLF_IDENTITY(true, false || (true)))))))))))))), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-203.765)), float(0.0), bool(true))), 0.0, 0.0, 0.0)), min(_GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(mat2(1.0) * (vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))), max(mat2(1.0) * (vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))), mat2(1.0) * (vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)))))), vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) - 0.0)) + 0.0), 0.0, 0.0))))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-9868.6356) : 0.0)))), 0.0, 0.0)), min(_GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), vec2(mat3x4(_GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), clamp(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), (vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))) * mat2(1.0)), vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)))), 1.0, 0.0, 0.0, 1.0, 1.0, log(1.0), 0.0, 1.0, 0.0, 1.0))), vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)))))) / vec2(1.0, 1.0)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), min(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0), transpose(transpose(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0), (true ? mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0) : _GLF_FUZZED(mat3(6.4, -45.27, -85.69, 5.3, -12.98, -4.0, -7.3, 335.460, -6.6))))))))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), min(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)))))) / vec2(1.0, 1.0), ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), min(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)))))) / vec2(1.0, 1.0)) + vec2(0.0, 0.0)))) * vec2(1.0, 1.0)).y, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), min(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-4.8)), float(0.0), bool(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, false, true, false))), bool(bool(_GLF_IDENTITY(true, bool(bvec4(true, false, true, false))))))))), 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0))))).y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0)), min(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), vec2(mat3(injectionSwitch, 1.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0))))).y))))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), false || (! (_GLF_IDENTITY(true, false || (true)))))))), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), min(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), min(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x3(0.0, sin(length(vec4(0.0, 0.0, 0.0, 0.0))), 1.0, 0.0, 1.0, 1.0)), max(float(mat2x3(0.0, sin(length(vec4(0.0, 0.0, 0.0, 0.0))), 1.0, 0.0, 1.0, 1.0)), float(mat2x3(0.0, sin(length(vec4(0.0, 0.0, 0.0, 0.0))), 1.0, 0.0, 1.0, 1.0))))), 0.0)), vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)))))) / vec2(1.0, 1.0)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), min(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), min(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)))))) / vec2(1.0, 1.0), ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), min(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)))))) / vec2(1.0, 1.0)) + vec2(0.0, 0.0)))) * vec2(1.0, 1.0)).y, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), min(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec2(0.0, round(length(normalize(1.0)))), vec2(vec2(vec2(0.0, round(length(normalize(1.0))))))))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))))), 0.0)), vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-4.8)), float(0.0), bool(_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))))), 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-8.9) : 0.0))) - 0.0), 0.0))))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-29.58), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-1181.7188)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0)), min(vec2(mat3(injectionSwitch, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) - 0.0), _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0))), float(_GLF_FUZZED(-9.5)), bool(_GLF_IDENTITY(false, false || (false))))), 1.0, 0.0, 0.0, 0.0, 0.0)), vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0))))).y))))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), false || (! (_GLF_IDENTITY(true, false || (true))))))))), bvec2(bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), min(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), min(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))))), vec2(0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), min(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))))), mix(vec2(_GLF_FUZZED(282.455), _GLF_FUZZED(-39.14)), vec2((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), min(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))))))[0], (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), min(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))))))[1]), bvec2(true, true)))))) / vec2(1.0, 1.0)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), min(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), min(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)))))) / vec2(1.0, 1.0), ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), min(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)))))) / vec2(1.0, 1.0)) + vec2(0.0, 0.0)))) * vec2(1.0, 1.0)).y, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), min(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-4.8)), float(0.0), bool(_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))))), 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0))))).y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0)), min(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0))))).y)))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(6.6)), float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-5.0))), injectionSwitch.x)), mix(float(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-5.0))), injectionSwitch.x))), float(_GLF_FUZZED((-5.4 / -0.3))), bool(false))))) > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), min(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-57.72))), 1.0, 0.0, 0.0, 0.0, 0.0)), min(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)))))) / vec2(1.0, 1.0)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), min(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))))), max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), min(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), min(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))))), min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), min(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), min(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))))))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), min(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)))))) / vec2(1.0, 1.0), ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), min(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)))))) / vec2(1.0, 1.0)) + vec2(0.0, 0.0)))) * vec2(1.0, 1.0)).y, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), min(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-4.8)), float(0.0), bool(_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))))), 0.0, 0.0, 0.0))))).y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0)), min(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0))))).y)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), min(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), min(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)))))) / vec2(1.0, 1.0)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), min(_GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), min(_GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), clamp(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)))), vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)))), vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), min(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)))))) / vec2(1.0, 1.0), ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), min(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)))))) / vec2(1.0, 1.0)) + vec2(0.0, 0.0)))) * vec2(1.0, 1.0)).y, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), min(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-4.8)), float(0.0), bool(_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))))), 0.0, 0.0, 0.0))))).y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 0.0), mix(vec2((vec2(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 0.0))[0], _GLF_FUZZED(3605.2630)), vec2(_GLF_FUZZED(1.3), (vec2(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 0.0))[1]), bvec2(false, true))))), 1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)))), 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x4(0.0, 1.0, tan(tan(0.0)), cos(0.0), 0.0, 0.0, 1.0, 1.0), mat2x4(mat3x4(mat2x4(0.0, 1.0, tan(tan(0.0)), cos(0.0), 0.0, 0.0, 1.0, 1.0)))))))), min(vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0), (true ? _GLF_IDENTITY(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0), transpose(_GLF_IDENTITY(transpose(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), (true ? transpose(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(mat3(-358.093, 224.818, 93.23, -8.6, -6.5, 4363.0989, -3.5, -676.974, 196.304)))))) : _GLF_FUZZED(mat3(-9.0, -0.3, -3762.0353, 1915.4650, -3.8, 860.546, 944.243, -6069.8802, -78.69))))), vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0))))).y)), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), min(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), min(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)))))) / vec2(1.0, 1.0)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), min(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), vec2(mat4x3(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), round(length(normalize(vec2(1.0, 1.0)))), 0.0, determinant(mat4(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))), 0.0, 1.0, cos(0.0), 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0))), min(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)))))) / vec2(1.0, 1.0), ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), min(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(vec2(0.0, cos(0.0)))), 0.0)))))) / vec2(1.0, 1.0)) + vec2(0.0, 0.0)))) * vec2(1.0, 1.0)).y, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), min(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-4.8, (_GLF_IDENTITY(-4.8, max(-4.8, -4.8))) / 1.0))), float(0.0), bool(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, true && (true)), false, true, false)))))), 0.0, 0.0, 0.0))))).y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0)), min(vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0), mat3(mat4x3(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0), (true ? mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0) : _GLF_FUZZED(mat3(78.61, -2073.2777, -150.797, -7.4, -4725.6992, -3211.5989, 59.75, 740.797, -7.6)))))))), vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0))))).y)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), min(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), min(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)))))) / vec2(1.0, 1.0)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), min(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0, 0.0)), vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), min(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)))))) / vec2(1.0, 1.0), ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), min(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)))))) / vec2(1.0, 1.0)) + vec2(0.0, 0.0)))) * vec2(1.0, 1.0)).y, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), min(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-4.8)), float(0.0), bool(_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))))), 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(float(0.0)))) / _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(6.9)), float(1.0), bool(true)))), 0.0))))).y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0)), min(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0))))).y)), float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), min(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), min(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)))))) / vec2(1.0, 1.0)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), min(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0)), vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(intBitsToFloat(-40169))))) * 1.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), min(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)))))) / vec2(1.0, 1.0), ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), min(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)))))) / vec2(1.0, 1.0)) + vec2(0.0, 0.0)))) * vec2(1.0, 1.0)).y, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), min(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-4.8)), float(0.0), bool(_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))))), 0.0, 0.0, 0.0))))).y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0)), min(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0))))).y)), 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(7.0)), float(_GLF_IDENTITY(0.0, (0.0) / 1.0)), bool(true))))))))) - 0.0)))) && true)), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), false || (! (_GLF_IDENTITY(true, false || (true)))))))))))))), false), true)))))))))) || false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, false))))
        return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false)))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  return;
 if(_GLF_DEAD(false))
  return;
}
