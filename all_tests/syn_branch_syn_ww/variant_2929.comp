#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    continue;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)))))))))
        {
         if(_GLF_DEAD(false))
          continue;
         continue;
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     continue;
     if(_GLF_DEAD(false))
      break;
    }
   if(_GLF_DEAD(false))
    break;
   do
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))))
      continue;
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), (injectionSwitch.x) / 1.0) > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) + vec2(0.0, 0.0), ((injectionSwitch) + vec2(0.0, 0.0)) / sqrt(vec2(1.0, 1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), mix(vec2(_GLF_FUZZED(379.219), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))), min((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))))[1]), vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))[0], _GLF_FUZZED(-4.8)), bvec2(true, false))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).x > injectionSwitch.y))))))
      continue;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false)))), (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y))))))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          return;
         break;
        }
       return;
       if(_GLF_DEAD(false))
        break;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) - sin(0.0), max((injectionSwitch.x) - sin(0.0), (injectionSwitch.x) - sin(0.0)))) > injectionSwitch.y) && true), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(0.0)) > injectionSwitch.y) && true)))))), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(refract(-9.2, -0.9, 75.88)))) > injectionSwitch.y)))), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(0.0)) > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(0.0)) > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(0.0)) > injectionSwitch.y), false, true), bvec3(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(0.0)) > injectionSwitch.y), false, true))))))), (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(0.0)) > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(0.0)) > injectionSwitch.y), false, true), bvec3(bvec3(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(0.0)) > injectionSwitch.y, true && _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(0.0)) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(0.0)) > injectionSwitch.y)) && true))), false, true)))))))) || false))) && true))), true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(0.0)) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(0.0)) > injectionSwitch.y)) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(0.0)) > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], 1.0 * ((injectionSwitch)[0])), _GLF_FUZZED(vec3(-6.2, 0.1, 8962.2974).z)), vec2(_GLF_FUZZED(vec4(-3.2, 6.5, -4646.7398, 1.2).g), (injectionSwitch)[1]), bvec2(false, true))).y), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), (injectionSwitch.x) - sin(0.0)) > injectionSwitch.y), false, true), bvec3(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(0.0)) > injectionSwitch.y), false, true))))))), (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(0.0)) > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(0.0)) > injectionSwitch.y), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(0.0)) > injectionSwitch.y), false, true)), bvec3(bvec4(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(0.0)) > injectionSwitch.y), false, true)), false))))))))) || false))) && true))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) - sin(0.0), mix(float((injectionSwitch.x) - sin(0.0)), float(_GLF_FUZZED(-6.5)), bool(false)))) > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(0.0)) > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(0.0)) > injectionSwitch.y), _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true), bvec3(bvec3(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(0.0)) > injectionSwitch.y), false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(0.0)) > injectionSwitch.y), false, true), bvec3(bvec4(bvec3((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(0.0)) > injectionSwitch.y), false, true), false))), false))))))))), (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(vec3(8807.7500, 0.7, 8229.2274).x)), bool(false)))) - sin(0.0)) > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(0.0)) > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(5637.0521)))), false, true), bvec3(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), mix(float(_GLF_FUZZED(-9777.2262)), float(_GLF_IDENTITY((injectionSwitch.x), clamp((injectionSwitch.x), (injectionSwitch.x), (injectionSwitch.x)))), bool(true))) - sin(0.0)) > injectionSwitch.y), false, true)))))))) || false))) && true))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec3(! ((_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(0.0)) > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(0.0)) > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(0.0)) > injectionSwitch.y), false, true), bvec3(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(0.0)) > injectionSwitch.y), false, true))))))), (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) - sin(0.0), ((injectionSwitch.x) - sin(0.0)) / 1.0)) > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), (injectionSwitch.x) - sin(0.0)) > injectionSwitch.y), false, true), bvec3(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(0.0)) > injectionSwitch.y), false, true)))))))) || false))) && true))), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))), false, false))))))))), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))))))) && (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), (false ? _GLF_FUZZED(24.17) : (injectionSwitch.x))) - sin(0.0)) > injectionSwitch.y) && true))), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(refract(-9.2, -0.9, 75.88)))) > injectionSwitch.y)))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(0.0)) > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(0.0)) > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(0.0)) > injectionSwitch.y), false, true), bvec3(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(0.0)) > injectionSwitch.y), false, true))))))), (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(0.0)) > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(0.0)) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-125.467)))))) - 0.0)), false, true), bvec3(bvec3(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(0.0)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(0.0)), float(mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(0.0)), min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(0.0)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(0.0)))), 1.0, round(length(_GLF_IDENTITY(normalize(1.0), (true ? normalize(1.0) : _GLF_FUZZED(856.280))))), 1.0, sqrt(1.0), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, cos(0.0), _GLF_ONE(1.0, injectionSwitch.y), round(length(normalize(1.0))), 0.0)))), float(_GLF_FUZZED(-4.5)), bool(_GLF_IDENTITY(false, (false) || false)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(0.0)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, (injectionSwitch.x) - sin(0.0)), float(mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(0.0)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(0.0)), float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(0.0)), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(0.0))) / 1.0), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0))), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(0.0)))), 1.0, round(length(_GLF_IDENTITY(normalize(1.0), (true ? normalize(1.0) : _GLF_FUZZED(856.280))))), 1.0, sqrt(1.0), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, cos(0.0), _GLF_ONE(1.0, injectionSwitch.y), round(length(normalize(1.0))), 0.0)))), float(_GLF_FUZZED(-4.5)), bool(_GLF_IDENTITY(false, (false) || false))))) * exp(0.0)) > injectionSwitch.y), false, true)))))))) || _GLF_IDENTITY(false, (false) || false)))) && _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
      continue;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), ! (! (! (false))))) && true)))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), false, false, true)), ! (! (bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), false, false, true))))))), bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(true, ! (! (true)))), true))), bvec3(bvec4(bvec3(false, false, true), false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    return;
   return;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, min(workgroup_id, _GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED(workgroup_id) : workgroup_id))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size))) + _GLF_IDENTITY(0u, 0u | (0u))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size))) + _GLF_IDENTITY(0u, 0u | (0u))), min(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), (_GLF_IDENTITY(~ (subgroup_size), min(~ (subgroup_size), ~ (subgroup_size)))) | (~ (subgroup_size))))), (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size))) + _GLF_IDENTITY(0u, 0u | (0u))), _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size))) + _GLF_IDENTITY(_GLF_IDENTITY(0u, 0u | (0u)), (_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u | (0u)), max(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u | (0u)), (_GLF_IDENTITY(0u, 0u | (0u))) | (_GLF_IDENTITY(0u, 0u | (0u)))), _GLF_IDENTITY(0u, 0u | (0u))))) / 1u)))), _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * subgroup_size), 0u + (_GLF_IDENTITY((subgroup_id * subgroup_size), uint(uvec2((subgroup_id * subgroup_size), 1u))))) | (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size))) + _GLF_IDENTITY(0u, 0u | (0u))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size))) + _GLF_IDENTITY(0u, 0u | (0u))), ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size))) + _GLF_IDENTITY(0u, 0u | (0u)))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : subgroup_id * subgroup_size)))) + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(workgroup_id))) * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + 1, clamp(_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1)), subgroup_local_id + 1, subgroup_local_id + 1))) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), ((subgroup_size)) / 1u) ^ 0u));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).x > injectionSwitch.y))))
  return;
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        continue;
       return;
       if(_GLF_DEAD(false))
        continue;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       break;
      }
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (false)), true, true)))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       break;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(false))
        break;
       return;
       if(_GLF_DEAD(false))
        continue;
      }
     break;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(fma(length(vec3(86.78, -688.690, -575.958)), inversesqrt(7.2), -649.219)) : injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, _GLF_IDENTITY(dot(vec4(sqrt(1.0), 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(8.6) : 0.0))), vec4(0.0, 1.0, 1.0, 1.0)), dot(vec4(sqrt(1.0), 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0)))), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(bvec4(bool(injectionSwitch.x < injectionSwitch.y), false, false, true))))))) ? vec3(injectionSwitch, _GLF_IDENTITY(dot(vec4(sqrt(1.0), 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0)), dot(vec4(sqrt(1.0), 0.0, 0.0, 0.0), vec4(0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0)))) : _GLF_FUZZED((vec3(6.0, -7.0, -5.7) * vec3(3.1, -2520.9679, 378.845))))))).x)) > injectionSwitch.y))))
      return;
     break;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      continue;
     continue;
    }
   atomicStore(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u)], uint(1), 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) && true, ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), ! (_GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y) && true)), false || (! (! ((injectionSwitch.x > injectionSwitch.y) && true))))))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) && true, ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), ! (_GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y) && true)), false || (! (! ((injectionSwitch.x > injectionSwitch.y) && true)))))))))) || false), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))) && true), false, true))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), mix(vec2(_GLF_FUZZED(-50.02), (vec2(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))))[0], _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 1.0, 0.0)), clamp(vec2(vec4(injectionSwitch, 1.0, 0.0)), vec2(vec4(injectionSwitch, 1.0, 0.0)), _GLF_IDENTITY(vec2(vec4(injectionSwitch, 1.0, 0.0)), max(vec2(vec4(injectionSwitch, 1.0, 0.0)), vec2(vec4(injectionSwitch, 1.0, 0.0)))))))[1]))[1]), vec2(_GLF_IDENTITY(_GLF_IDENTITY((vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, max(1, 1))]))[0], clamp((vec2(injectionSwitch[0], injectionSwitch[1]))[0], _GLF_IDENTITY((vec2(injectionSwitch[0], injectionSwitch[1]))[0], (false ? _GLF_FUZZED(-1794.0057) : (vec2(injectionSwitch[0], injectionSwitch[1]))[0])), (vec2(injectionSwitch[0], injectionSwitch[1]))[0])), clamp(_GLF_IDENTITY(_GLF_IDENTITY((vec2(injectionSwitch[0], injectionSwitch[1]))[0], clamp((vec2(injectionSwitch[0], injectionSwitch[1]))[0], _GLF_IDENTITY((vec2(injectionSwitch[0], injectionSwitch[1]))[0], (false ? _GLF_FUZZED(-1794.0057) : (vec2(injectionSwitch[0], injectionSwitch[1]))[0])), _GLF_IDENTITY((vec2(injectionSwitch[0], injectionSwitch[1])), ((vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(1.0, 1.0))[0])), (false ? _GLF_FUZZED(882.914) : _GLF_IDENTITY(_GLF_IDENTITY((vec2(injectionSwitch[0], injectionSwitch[1]))[0], clamp((vec2(injectionSwitch[0], injectionSwitch[1]))[0], _GLF_IDENTITY((vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) - sqrt(0.0))))[0], (false ? _GLF_FUZZED(-1794.0057) : (vec2(injectionSwitch[0], injectionSwitch[1]))[0])), (vec2(injectionSwitch[0], injectionSwitch[1]))[0])), float(mat2(_GLF_IDENTITY((vec2(injectionSwitch[0], injectionSwitch[1]))[0], clamp((vec2(injectionSwitch[_GLF_IDENTITY(0, (0) / 1)], injectionSwitch[1]))[0], _GLF_IDENTITY((vec2(injectionSwitch[0], injectionSwitch[1]))[0], (false ? _GLF_FUZZED(-1794.0057) : (vec2(injectionSwitch[0], injectionSwitch[1]))[0])), (vec2(injectionSwitch[0], injectionSwitch[1]))[0])), 0.0, 0.0, 1.0))))), _GLF_IDENTITY((vec2(injectionSwitch[0], injectionSwitch[1]))[0], clamp((vec2(injectionSwitch[0], injectionSwitch[1]))[0], _GLF_IDENTITY((vec2(injectionSwitch[0], injectionSwitch[1]))[0], (false ? _GLF_FUZZED(-1794.0057) : (vec2(injectionSwitch[0], injectionSwitch[1]))[0])), (vec2(injectionSwitch[0], injectionSwitch[1]))[0])), _GLF_IDENTITY(_GLF_IDENTITY((vec2(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(-70.23, 4.8))))[0], injectionSwitch[1]))[0], clamp((vec2(injectionSwitch[0], injectionSwitch[1]))[0], _GLF_IDENTITY((vec2(injectionSwitch[0], injectionSwitch[1]))[0], (false ? _GLF_FUZZED(-1794.0057) : (vec2(injectionSwitch[0], injectionSwitch[1]))[0])), (vec2(injectionSwitch[0], injectionSwitch[1]))[0])), max(_GLF_IDENTITY((vec2(injectionSwitch[0], injectionSwitch[1]))[0], clamp((vec2(injectionSwitch[0], injectionSwitch[1]))[0], _GLF_IDENTITY((vec2(injectionSwitch[0], injectionSwitch[1]))[0], (false ? _GLF_FUZZED(-1794.0057) : (vec2(injectionSwitch[0], injectionSwitch[1]))[0])), (vec2(injectionSwitch[0], injectionSwitch[1]))[0])), _GLF_IDENTITY(_GLF_IDENTITY((vec2(injectionSwitch[0], injectionSwitch[1]))[0], clamp(_GLF_IDENTITY((vec2(injectionSwitch[0], injectionSwitch[1]))[0], ((vec2(injectionSwitch[0], injectionSwitch[1]))[0]) + sin(0.0)), _GLF_IDENTITY((vec2(injectionSwitch[0], injectionSwitch[1]))[0], (false ? _GLF_FUZZED(-1794.0057) : (vec2(injectionSwitch[0], injectionSwitch[1]))[0])), (vec2(injectionSwitch[0], injectionSwitch[1]))[0])), mix(float(_GLF_IDENTITY((vec2(injectionSwitch[0], injectionSwitch[1]))[0], clamp((vec2(injectionSwitch[0], injectionSwitch[1]))[_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, (0) - 0)))))))], _GLF_IDENTITY((vec2(injectionSwitch[_GLF_IDENTITY(0, min(0, 0))], injectionSwitch[1]))[0], (false ? _GLF_FUZZED(-1794.0057) : (vec2(_GLF_IDENTITY(injectionSwitch[0], float(mat2(injectionSwitch[0], 1.0, 0.0, 1.0))), injectionSwitch[1]))[0])), (vec2(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, sin(0.0), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0)))[0], injectionSwitch[1]))[0]))), float(_GLF_FUZZED(8.0)), bool(false))))))), _GLF_FUZZED(-8.1)), _GLF_IDENTITY(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(true, bool(bool(true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), bvec3(bvec3(bvec3(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))))))).y, (injectionSwitch.x > injectionSwitch.y) && true), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), true))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) || false)) && true), false, true))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y))))
      break;
     if(_GLF_DEAD(false))
      continue;
     continue;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      break;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))), 1.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, sqrt(1.0), 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0))).x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))))))), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)))))))) || false))) && (false)))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))))))), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)) && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)))))))) || false))) && (false)))))))), (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))))))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true) || (_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) || false)), false || (bool(_GLF_IDENTITY(true, (true) || false)))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) < injectionSwitch.y)))))), ! (! ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) < injectionSwitch.y)))))))))), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x, min(injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x, min(injectionSwitch.x, injectionSwitch.x))) / 1.0) < injectionSwitch.y)))))))) || false))) && (false))))))))) && true)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   int i = 0;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     return;
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      break;
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      break;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       break;
      }
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       break;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, (false) && true)))))
      return;
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(14.11) : injectionSwitch.y)))) && (false))))))
      break;
     if(_GLF_DEAD(false))
      break;
     for(int _injected_loop_counter = (1 ^ 1); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY((int(_GLF_ONE(1.0, injectionSwitch.y))) - 0, _GLF_IDENTITY(((int(_GLF_ONE(1.0, injectionSwitch.y))) - 0) ^ int(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-8.9 + 6.3)), _GLF_FUZZED(-7.7)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x), (_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), 1.0 * (_GLF_ZERO(0.0, injectionSwitch.x)))) * 1.0)), int(ivec4(((int(_GLF_ONE(1.0, injectionSwitch.y))) - 0) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(0, (0) ^ 0) << _GLF_IDENTITY(int(8), int(8))), ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), clamp(1 << _GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), max(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5))))) - 0), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), max(1 << _GLF_IDENTITY(int(5), int(5)), 1 << _GLF_IDENTITY(int(5), int(5))))))) >> _GLF_IDENTITY(int(5), int(5))), 0))))), (_injected_loop_counter != _GLF_IDENTITY(int(_GLF_ONE(_GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-8.7)), float(1.0), bool(true)), 0.0 + (mix(float(_GLF_IDENTITY(_GLF_FUZZED(-8.7), mix(float(_GLF_FUZZED(-8.7)), float(_GLF_FUZZED(-3.0)), bool(false)))), float(1.0), bool(true))))), injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY((int(_GLF_ONE(1.0, injectionSwitch.y))), 0 | ((int(_GLF_ONE(1.0, injectionSwitch.y))))) - 0, ((int(_GLF_ONE(1.0, injectionSwitch.y))) - 0) ^ int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), cos(0.0) * (_GLF_ZERO(0.0, injectionSwitch.x))))))))) || false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY((int(_GLF_ONE(1.0, injectionSwitch.y))) - 0, _GLF_IDENTITY(((int(_GLF_ONE(1.0, injectionSwitch.y))) - 0) ^ int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), 1.0 * (_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x)))) * 1.0)), int(ivec4(((int(_GLF_ONE(1.0, injectionSwitch.y))) - 0) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(_GLF_IDENTITY(0 << _GLF_IDENTITY(int(8), int(8)), 0 | (0 << _GLF_IDENTITY(int(8), int(8)))), (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(8), int(8)), 0 | (0 << _GLF_IDENTITY(int(8), int(8))))) >> 0)), ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), clamp(1 << _GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), (1 << _GLF_IDENTITY(int(5), int(5))) - 0), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), max(1 << _GLF_IDENTITY(int(5), int(5)), 1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (true ? _GLF_IDENTITY(int(5), (int(5)) | (int(5))) : _GLF_FUZZED((21843 >> _injected_loop_counter)))), int(_GLF_IDENTITY(5, int(_GLF_ONE(1.0, injectionSwitch.y)) * (5))))))))) >> _GLF_IDENTITY(int(5), int(5))), 0))))), (_injected_loop_counter != _GLF_IDENTITY(int(_GLF_ONE(_GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-8.7)), float(1.0), _GLF_IDENTITY(bool(true), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bool(true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bool(true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(bool(true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bool(true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(bool(true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true)))))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bool(true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bool(true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(bool(true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bool(true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(bool(true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true)))))), true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(bool(true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bool(true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(bool(true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bool(true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(bool(true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true)))))), true)), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(bool(true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bool(true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(bool(true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bool(true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(bool(true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true)))))), true)), false)))))))))), 0.0 + (mix(float(_GLF_FUZZED(-8.7)), float(1.0), bool(true))))), injectionSwitch.y)), _GLF_IDENTITY((int(_GLF_ONE(1.0, injectionSwitch.y))) - 0, ((int(_GLF_ONE(1.0, injectionSwitch.y))) - 0) ^ int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), cos(0.0) * (_GLF_ZERO(0.0, injectionSwitch.x))), (false ? _GLF_FUZZED(-5995.2240) : _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), cos(0.0) * _GLF_IDENTITY((_GLF_ZERO(0.0, injectionSwitch.x)), (true ? _GLF_IDENTITY((_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(4352.7794))))), float(vec3((_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 1.0))) : _GLF_FUZZED(750.965)))))))))))) || false)))); _injected_loop_counter ++)
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
        continue;
       atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
      }
    }
   while(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || false)), true, true), bvec3(bvec3(bvec3(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || false)), true, true))))), bool(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) && true)), true, true), bvec3(bvec3(bvec3(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) && true)), true, true)))), bvec3(bvec3(bvec3(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || false)), true, true))))), bool(bvec2(bool(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || false)), true, _GLF_IDENTITY(true, bool(bvec2(true, false)))), bvec3(bvec3(bvec3(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), false), bvec2(bvec3(bvec2((false), false), true))))) || false)), true, true))))), true))), false, true)))), _GLF_IDENTITY((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || false))), ! (! ((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || false)))))) || false));
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, true))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), ! (! (bool(bvec4(false, true, false, true)))))))))))), bool(bvec2(false, false))), false, false, false))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, true))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))))))), bool(bvec2(false, false))), false, false, false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, _GLF_IDENTITY(true, false || (true))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(false, bool(bvec2(false, false))), true))))), ! (! (! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))))))))), bool(bvec2(false, false))), false, false, false)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, true))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), ! (! (bool(bvec4(false, true, false, true)))))))))))), bool(bvec2(false, false))), false, false, false))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, true))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))))))), bool(bvec2(false, false))), false, false, false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, _GLF_IDENTITY(true, false || (true))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))), _GLF_IDENTITY(bool(bvec3(! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec3(! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))))))))), bool(bvec2(false, false))), false, false, false)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, true))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), ! (! (bool(bvec4(false, true, false, true)))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), ! (! (bool(bvec4(false, true, false, true)))))))))))), false || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), ! (! (bool(bvec4(false, true, false, true)))))))), ! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), ! (! (bool(bvec4(false, true, false, true)))))))), (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), ! (! (bool(bvec4(false, true, false, true))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))) || false), bool(bvec2(false, false))), false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), bool(bool(_GLF_IDENTITY(bool(bvec2(false, true)), bool(bool(bool(bvec2(false, true))))))))), false))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, true))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))))))), bool(bvec2(false, false))), false, false, false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, _GLF_IDENTITY(true, false || (true)))))), true && (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, _GLF_IDENTITY(true, false || (true))))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bool(_GLF_IDENTITY(bool(bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), ! (! (bool(bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))))), true))))), ! (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec4(false, true, false, true)))))))))))), bool(bvec2(false, false))), false, false, false)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, true))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), ! (! (bool(bvec4(false, true, false, true)))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), ! (! (bool(bvec4(false, true, false, true)))))))))))), false || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), ! (! (bool(bvec4(false, true, false, true)))))))), ! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), ! (! (bool(bvec4(false, true, false, true)))))))), (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), ! (! (bool(bvec4(false, true, false, true))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))) || false), bool(bvec2(false, false))), false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), bool(bool(_GLF_IDENTITY(bool(bvec2(false, true)), bool(bool(bool(bvec2(false, true))))))))), false))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, true))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))))))), bool(bvec2(false, false))), false, false, false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, _GLF_IDENTITY(true, false || (true)))))), true && (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, _GLF_IDENTITY(true, false || (true))))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bool(_GLF_IDENTITY(bool(bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), ! (! (bool(bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))))), true))))), ! (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec4(false, true, false, true)))))))))))), bool(bvec2(false, false))), false, false, false)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false), false)))))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, true))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), ! (! (bool(bvec4(false, true, false, true)))))))))))), bool(bvec2(false, false))), false, false, false))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, true))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))))))), _GLF_IDENTITY(bool(bvec2(false, false)), false || (bool(bvec2(false, false))))), false, false, false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, _GLF_IDENTITY(true, false || (true))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))), ! (! (! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))))))))), bool(bvec2(false, false))), false, false, false)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, true))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), ! (! (bool(bvec4(false, true, false, true)))))))))), (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), ! _GLF_IDENTITY((! (bool(bvec4(false, true, false, true)))), ((! (bool(bvec4(false, true, false, true))))) && true)))))))) && true))), bool(bvec2(false, false))), false, false, false))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, true))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))))))), bool(bvec2(false, false))), false, false, false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, _GLF_IDENTITY(true, false || (true))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))), bool(bvec4(_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))), ! (! ((! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))))), false, true, true))), _GLF_IDENTITY(! (! (! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))))), (_GLF_IDENTITY(! (! (! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))))), bool(bvec2(! (! (! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))))), false)))) || false)))))), bool(bvec2(false, false))), false, false, false)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false))))))))))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false))), true, true))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(false, false, false)))) || false), true)))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(false))
            return;
           return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-17.02), (injectionSwitch)[1]), vec2((injectionSwitch)[_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, clamp(0, 0, 0))))], _GLF_FUZZED(_GLF_IDENTITY(9.1, (9.1) - 0.0))), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(determinant(mat3(-954.321, -8247.4139, 2.3, 6483.6087, -942.870, -744.799, -5.4, 435.598, -25.37))))) > injectionSwitch.y))))
            return;
           return;
          }
         return;
        }
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
}
