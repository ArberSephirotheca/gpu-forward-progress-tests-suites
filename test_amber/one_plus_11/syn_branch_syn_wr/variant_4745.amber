#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec4 GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_13readsubgroup_basesubgroup_idsubgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uvec4 GLF_merged3_0_2_41_2_1_13_3_1_13GLF_merged2_0_1_4_1_1_13readsubgroup_sizesubgroup_basesubgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uvec2 GLF_merged2_0_1_4_1_1_13readsubgroup_size;
 GLF_merged3_0_2_41_2_1_13_3_1_13GLF_merged2_0_1_4_1_1_13readsubgroup_sizesubgroup_basesubgroup_size.xy = GLF_merged2_0_1_4_1_1_13readsubgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_13readsubgroup_basesubgroup_idsubgroup_size.z = subgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_13readsubgroup_basesubgroup_idsubgroup_size.w = subgroup_size;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged3_0_2_41_2_1_13_3_1_13GLF_merged2_0_1_4_1_1_13readsubgroup_sizesubgroup_basesubgroup_size.w = GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_13readsubgroup_basesubgroup_idsubgroup_size.w;
 _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_41_2_1_13_3_1_13GLF_merged2_0_1_4_1_1_13readsubgroup_sizesubgroup_basesubgroup_size.xy.y = GLF_merged3_0_2_41_2_1_13_3_1_13GLF_merged2_0_1_4_1_1_13readsubgroup_sizesubgroup_basesubgroup_size.w, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(GLF_merged3_0_2_41_2_1_13_3_1_13GLF_merged2_0_1_4_1_1_13readsubgroup_sizesubgroup_basesubgroup_size.w, (_GLF_IDENTITY(GLF_merged3_0_2_41_2_1_13_3_1_13GLF_merged2_0_1_4_1_1_13readsubgroup_sizesubgroup_basesubgroup_size.w, (GLF_merged3_0_2_41_2_1_13_3_1_13GLF_merged2_0_1_4_1_1_13readsubgroup_sizesubgroup_basesubgroup_size.w) | 0u)) | (0u << _GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 2u : _GLF_FUZZED(subgroup_id)))))))) : GLF_merged3_0_2_41_2_1_13_3_1_13GLF_merged2_0_1_4_1_1_13readsubgroup_sizesubgroup_basesubgroup_size.xy.y = GLF_merged3_0_2_41_2_1_13_3_1_13GLF_merged2_0_1_4_1_1_13readsubgroup_sizesubgroup_basesubgroup_size.w), ((false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_41_2_1_13_3_1_13GLF_merged2_0_1_4_1_1_13readsubgroup_sizesubgroup_basesubgroup_size.w, (_GLF_IDENTITY(GLF_merged3_0_2_41_2_1_13_3_1_13GLF_merged2_0_1_4_1_1_13readsubgroup_sizesubgroup_basesubgroup_size.w, (GLF_merged3_0_2_41_2_1_13_3_1_13GLF_merged2_0_1_4_1_1_13readsubgroup_sizesubgroup_basesubgroup_size.w) | (GLF_merged3_0_2_41_2_1_13_3_1_13GLF_merged2_0_1_4_1_1_13readsubgroup_sizesubgroup_basesubgroup_size.w))) | (GLF_merged3_0_2_41_2_1_13_3_1_13GLF_merged2_0_1_4_1_1_13readsubgroup_sizesubgroup_basesubgroup_size.w)), (_GLF_IDENTITY(GLF_merged3_0_2_41_2_1_13_3_1_13GLF_merged2_0_1_4_1_1_13readsubgroup_sizesubgroup_basesubgroup_size.w, (GLF_merged3_0_2_41_2_1_13_3_1_13GLF_merged2_0_1_4_1_1_13readsubgroup_sizesubgroup_basesubgroup_size.w) | 0u)) | (0u << _GLF_IDENTITY(uint(2u), uint(2u))))) : GLF_merged3_0_2_41_2_1_13_3_1_13GLF_merged2_0_1_4_1_1_13readsubgroup_sizesubgroup_basesubgroup_size.xy.y = GLF_merged3_0_2_41_2_1_13_3_1_13GLF_merged2_0_1_4_1_1_13readsubgroup_sizesubgroup_basesubgroup_size.w)) * 1u), (_GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(GLF_merged3_0_2_41_2_1_13_3_1_13GLF_merged2_0_1_4_1_1_13readsubgroup_sizesubgroup_basesubgroup_size.w, (_GLF_IDENTITY(GLF_merged3_0_2_41_2_1_13_3_1_13GLF_merged2_0_1_4_1_1_13readsubgroup_sizesubgroup_basesubgroup_size.w, (GLF_merged3_0_2_41_2_1_13_3_1_13GLF_merged2_0_1_4_1_1_13readsubgroup_sizesubgroup_basesubgroup_size.w) | 0u)) | (0u << _GLF_IDENTITY(uint(2u), uint(2u))))) : GLF_merged3_0_2_41_2_1_13_3_1_13GLF_merged2_0_1_4_1_1_13readsubgroup_sizesubgroup_basesubgroup_size.xy.y = GLF_merged3_0_2_41_2_1_13_3_1_13GLF_merged2_0_1_4_1_1_13readsubgroup_sizesubgroup_basesubgroup_size.w), ((false ? _GLF_FUZZED(_GLF_IDENTITY(GLF_merged3_0_2_41_2_1_13_3_1_13GLF_merged2_0_1_4_1_1_13readsubgroup_sizesubgroup_basesubgroup_size.w, (_GLF_IDENTITY(GLF_merged3_0_2_41_2_1_13_3_1_13GLF_merged2_0_1_4_1_1_13readsubgroup_sizesubgroup_basesubgroup_size.w, (GLF_merged3_0_2_41_2_1_13_3_1_13GLF_merged2_0_1_4_1_1_13readsubgroup_sizesubgroup_basesubgroup_size.w) | 0u)) | (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(uint(2u), uint(2u))) ^ 0u)))) : GLF_merged3_0_2_41_2_1_13_3_1_13GLF_merged2_0_1_4_1_1_13readsubgroup_sizesubgroup_basesubgroup_size.xy.y = GLF_merged3_0_2_41_2_1_13_3_1_13GLF_merged2_0_1_4_1_1_13readsubgroup_sizesubgroup_basesubgroup_size.w)) * 1u), ~ (~ (_GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(GLF_merged3_0_2_41_2_1_13_3_1_13GLF_merged2_0_1_4_1_1_13readsubgroup_sizesubgroup_basesubgroup_size.w, (_GLF_IDENTITY(GLF_merged3_0_2_41_2_1_13_3_1_13GLF_merged2_0_1_4_1_1_13readsubgroup_sizesubgroup_basesubgroup_size.w, (GLF_merged3_0_2_41_2_1_13_3_1_13GLF_merged2_0_1_4_1_1_13readsubgroup_sizesubgroup_basesubgroup_size.w) | 0u)) | (0u << _GLF_IDENTITY(uint(2u), uint(2u))))) : GLF_merged3_0_2_41_2_1_13_3_1_13GLF_merged2_0_1_4_1_1_13readsubgroup_sizesubgroup_basesubgroup_size.xy.y = GLF_merged3_0_2_41_2_1_13_3_1_13GLF_merged2_0_1_4_1_1_13readsubgroup_sizesubgroup_basesubgroup_size.w), ((false ? _GLF_FUZZED(_GLF_IDENTITY(GLF_merged3_0_2_41_2_1_13_3_1_13GLF_merged2_0_1_4_1_1_13readsubgroup_sizesubgroup_basesubgroup_size.w, (_GLF_IDENTITY(GLF_merged3_0_2_41_2_1_13_3_1_13GLF_merged2_0_1_4_1_1_13readsubgroup_sizesubgroup_basesubgroup_size.w, (GLF_merged3_0_2_41_2_1_13_3_1_13GLF_merged2_0_1_4_1_1_13readsubgroup_sizesubgroup_basesubgroup_size.w) | 0u)) | (0u << _GLF_IDENTITY(uint(2u), uint(2u))))) : GLF_merged3_0_2_41_2_1_13_3_1_13GLF_merged2_0_1_4_1_1_13readsubgroup_sizesubgroup_basesubgroup_size.xy.y = GLF_merged3_0_2_41_2_1_13_3_1_13GLF_merged2_0_1_4_1_1_13readsubgroup_sizesubgroup_basesubgroup_size.w)) * 1u))))) ^ 0u), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(GLF_merged3_0_2_41_2_1_13_3_1_13GLF_merged2_0_1_4_1_1_13readsubgroup_sizesubgroup_basesubgroup_size.w, (_GLF_IDENTITY(GLF_merged3_0_2_41_2_1_13_3_1_13GLF_merged2_0_1_4_1_1_13readsubgroup_sizesubgroup_basesubgroup_size.w, (GLF_merged3_0_2_41_2_1_13_3_1_13GLF_merged2_0_1_4_1_1_13readsubgroup_sizesubgroup_basesubgroup_size.w) | 0u)) | (0u << _GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 2u : _GLF_FUZZED(subgroup_id)))))))) : GLF_merged3_0_2_41_2_1_13_3_1_13GLF_merged2_0_1_4_1_1_13readsubgroup_sizesubgroup_basesubgroup_size.xy.y = GLF_merged3_0_2_41_2_1_13_3_1_13GLF_merged2_0_1_4_1_1_13readsubgroup_sizesubgroup_basesubgroup_size.w), ((false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_41_2_1_13_3_1_13GLF_merged2_0_1_4_1_1_13readsubgroup_sizesubgroup_basesubgroup_size.w, (_GLF_IDENTITY(GLF_merged3_0_2_41_2_1_13_3_1_13GLF_merged2_0_1_4_1_1_13readsubgroup_sizesubgroup_basesubgroup_size.w, (GLF_merged3_0_2_41_2_1_13_3_1_13GLF_merged2_0_1_4_1_1_13readsubgroup_sizesubgroup_basesubgroup_size.w) | (GLF_merged3_0_2_41_2_1_13_3_1_13GLF_merged2_0_1_4_1_1_13readsubgroup_sizesubgroup_basesubgroup_size.w))) | (GLF_merged3_0_2_41_2_1_13_3_1_13GLF_merged2_0_1_4_1_1_13readsubgroup_sizesubgroup_basesubgroup_size.w)), (_GLF_IDENTITY(GLF_merged3_0_2_41_2_1_13_3_1_13GLF_merged2_0_1_4_1_1_13readsubgroup_sizesubgroup_basesubgroup_size.w, (GLF_merged3_0_2_41_2_1_13_3_1_13GLF_merged2_0_1_4_1_1_13readsubgroup_sizesubgroup_basesubgroup_size.w) | 0u)) | (0u << _GLF_IDENTITY(uint(2u), uint(2u))))) : GLF_merged3_0_2_41_2_1_13_3_1_13GLF_merged2_0_1_4_1_1_13readsubgroup_sizesubgroup_basesubgroup_size.xy.y = GLF_merged3_0_2_41_2_1_13_3_1_13GLF_merged2_0_1_4_1_1_13readsubgroup_sizesubgroup_basesubgroup_size.w)) * 1u), (_GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(GLF_merged3_0_2_41_2_1_13_3_1_13GLF_merged2_0_1_4_1_1_13readsubgroup_sizesubgroup_basesubgroup_size.w, (_GLF_IDENTITY(GLF_merged3_0_2_41_2_1_13_3_1_13GLF_merged2_0_1_4_1_1_13readsubgroup_sizesubgroup_basesubgroup_size.w, (GLF_merged3_0_2_41_2_1_13_3_1_13GLF_merged2_0_1_4_1_1_13readsubgroup_sizesubgroup_basesubgroup_size.w) | 0u)) | (0u << _GLF_IDENTITY(uint(2u), uint(2u))))) : GLF_merged3_0_2_41_2_1_13_3_1_13GLF_merged2_0_1_4_1_1_13readsubgroup_sizesubgroup_basesubgroup_size.xy.y = GLF_merged3_0_2_41_2_1_13_3_1_13GLF_merged2_0_1_4_1_1_13readsubgroup_sizesubgroup_basesubgroup_size.w), ((false ? _GLF_FUZZED(_GLF_IDENTITY(GLF_merged3_0_2_41_2_1_13_3_1_13GLF_merged2_0_1_4_1_1_13readsubgroup_sizesubgroup_basesubgroup_size.w, (_GLF_IDENTITY(GLF_merged3_0_2_41_2_1_13_3_1_13GLF_merged2_0_1_4_1_1_13readsubgroup_sizesubgroup_basesubgroup_size.w, (GLF_merged3_0_2_41_2_1_13_3_1_13GLF_merged2_0_1_4_1_1_13readsubgroup_sizesubgroup_basesubgroup_size.w) | 0u)) | (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(uint(2u), uint(2u))) ^ 0u)))) : GLF_merged3_0_2_41_2_1_13_3_1_13GLF_merged2_0_1_4_1_1_13readsubgroup_sizesubgroup_basesubgroup_size.xy.y = GLF_merged3_0_2_41_2_1_13_3_1_13GLF_merged2_0_1_4_1_1_13readsubgroup_sizesubgroup_basesubgroup_size.w)) * 1u), ~ (~ (_GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(GLF_merged3_0_2_41_2_1_13_3_1_13GLF_merged2_0_1_4_1_1_13readsubgroup_sizesubgroup_basesubgroup_size.w, (_GLF_IDENTITY(GLF_merged3_0_2_41_2_1_13_3_1_13GLF_merged2_0_1_4_1_1_13readsubgroup_sizesubgroup_basesubgroup_size.w, (GLF_merged3_0_2_41_2_1_13_3_1_13GLF_merged2_0_1_4_1_1_13readsubgroup_sizesubgroup_basesubgroup_size.w) | 0u)) | (0u << _GLF_IDENTITY(uint(2u), uint(2u))))) : GLF_merged3_0_2_41_2_1_13_3_1_13GLF_merged2_0_1_4_1_1_13readsubgroup_sizesubgroup_basesubgroup_size.xy.y = GLF_merged3_0_2_41_2_1_13_3_1_13GLF_merged2_0_1_4_1_1_13readsubgroup_sizesubgroup_basesubgroup_size.w), ((false ? _GLF_FUZZED(_GLF_IDENTITY(GLF_merged3_0_2_41_2_1_13_3_1_13GLF_merged2_0_1_4_1_1_13readsubgroup_sizesubgroup_basesubgroup_size.w, (_GLF_IDENTITY(GLF_merged3_0_2_41_2_1_13_3_1_13GLF_merged2_0_1_4_1_1_13readsubgroup_sizesubgroup_basesubgroup_size.w, (GLF_merged3_0_2_41_2_1_13_3_1_13GLF_merged2_0_1_4_1_1_13readsubgroup_sizesubgroup_basesubgroup_size.w) | 0u)) | (0u << _GLF_IDENTITY(uint(2u), uint(2u))))) : GLF_merged3_0_2_41_2_1_13_3_1_13GLF_merged2_0_1_4_1_1_13readsubgroup_sizesubgroup_basesubgroup_size.xy.y = GLF_merged3_0_2_41_2_1_13_3_1_13GLF_merged2_0_1_4_1_1_13readsubgroup_sizesubgroup_basesubgroup_size.w)) * 1u))))) ^ 0u), (_GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(GLF_merged3_0_2_41_2_1_13_3_1_13GLF_merged2_0_1_4_1_1_13readsubgroup_sizesubgroup_basesubgroup_size.w, (_GLF_IDENTITY(GLF_merged3_0_2_41_2_1_13_3_1_13GLF_merged2_0_1_4_1_1_13readsubgroup_sizesubgroup_basesubgroup_size.w, (GLF_merged3_0_2_41_2_1_13_3_1_13GLF_merged2_0_1_4_1_1_13readsubgroup_sizesubgroup_basesubgroup_size.w) | 0u)) | (0u << _GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 2u : _GLF_FUZZED(subgroup_id)))))))) : GLF_merged3_0_2_41_2_1_13_3_1_13GLF_merged2_0_1_4_1_1_13readsubgroup_sizesubgroup_basesubgroup_size.xy.y = GLF_merged3_0_2_41_2_1_13_3_1_13GLF_merged2_0_1_4_1_1_13readsubgroup_sizesubgroup_basesubgroup_size.w), ((false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_41_2_1_13_3_1_13GLF_merged2_0_1_4_1_1_13readsubgroup_sizesubgroup_basesubgroup_size.w, (_GLF_IDENTITY(GLF_merged3_0_2_41_2_1_13_3_1_13GLF_merged2_0_1_4_1_1_13readsubgroup_sizesubgroup_basesubgroup_size.w, (GLF_merged3_0_2_41_2_1_13_3_1_13GLF_merged2_0_1_4_1_1_13readsubgroup_sizesubgroup_basesubgroup_size.w) | (GLF_merged3_0_2_41_2_1_13_3_1_13GLF_merged2_0_1_4_1_1_13readsubgroup_sizesubgroup_basesubgroup_size.w))) | (GLF_merged3_0_2_41_2_1_13_3_1_13GLF_merged2_0_1_4_1_1_13readsubgroup_sizesubgroup_basesubgroup_size.w)), (_GLF_IDENTITY(GLF_merged3_0_2_41_2_1_13_3_1_13GLF_merged2_0_1_4_1_1_13readsubgroup_sizesubgroup_basesubgroup_size.w, (GLF_merged3_0_2_41_2_1_13_3_1_13GLF_merged2_0_1_4_1_1_13readsubgroup_sizesubgroup_basesubgroup_size.w) | 0u)) | (0u << _GLF_IDENTITY(uint(2u), uint(2u))))) : GLF_merged3_0_2_41_2_1_13_3_1_13GLF_merged2_0_1_4_1_1_13readsubgroup_sizesubgroup_basesubgroup_size.xy.y = GLF_merged3_0_2_41_2_1_13_3_1_13GLF_merged2_0_1_4_1_1_13readsubgroup_sizesubgroup_basesubgroup_size.w)) * 1u), (_GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(GLF_merged3_0_2_41_2_1_13_3_1_13GLF_merged2_0_1_4_1_1_13readsubgroup_sizesubgroup_basesubgroup_size.w, (_GLF_IDENTITY(GLF_merged3_0_2_41_2_1_13_3_1_13GLF_merged2_0_1_4_1_1_13readsubgroup_sizesubgroup_basesubgroup_size.w, (GLF_merged3_0_2_41_2_1_13_3_1_13GLF_merged2_0_1_4_1_1_13readsubgroup_sizesubgroup_basesubgroup_size.w) | 0u)) | (0u << _GLF_IDENTITY(uint(2u), uint(2u))))) : GLF_merged3_0_2_41_2_1_13_3_1_13GLF_merged2_0_1_4_1_1_13readsubgroup_sizesubgroup_basesubgroup_size.xy.y = GLF_merged3_0_2_41_2_1_13_3_1_13GLF_merged2_0_1_4_1_1_13readsubgroup_sizesubgroup_basesubgroup_size.w), ((false ? _GLF_FUZZED(_GLF_IDENTITY(GLF_merged3_0_2_41_2_1_13_3_1_13GLF_merged2_0_1_4_1_1_13readsubgroup_sizesubgroup_basesubgroup_size.w, (_GLF_IDENTITY(GLF_merged3_0_2_41_2_1_13_3_1_13GLF_merged2_0_1_4_1_1_13readsubgroup_sizesubgroup_basesubgroup_size.w, (GLF_merged3_0_2_41_2_1_13_3_1_13GLF_merged2_0_1_4_1_1_13readsubgroup_sizesubgroup_basesubgroup_size.w) | 0u)) | (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(uint(2u), uint(2u))) ^ 0u)))) : GLF_merged3_0_2_41_2_1_13_3_1_13GLF_merged2_0_1_4_1_1_13readsubgroup_sizesubgroup_basesubgroup_size.xy.y = GLF_merged3_0_2_41_2_1_13_3_1_13GLF_merged2_0_1_4_1_1_13readsubgroup_sizesubgroup_basesubgroup_size.w)) * 1u), ~ (~ (_GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(GLF_merged3_0_2_41_2_1_13_3_1_13GLF_merged2_0_1_4_1_1_13readsubgroup_sizesubgroup_basesubgroup_size.w, (_GLF_IDENTITY(GLF_merged3_0_2_41_2_1_13_3_1_13GLF_merged2_0_1_4_1_1_13readsubgroup_sizesubgroup_basesubgroup_size.w, (GLF_merged3_0_2_41_2_1_13_3_1_13GLF_merged2_0_1_4_1_1_13readsubgroup_sizesubgroup_basesubgroup_size.w) | 0u)) | (0u << _GLF_IDENTITY(uint(2u), uint(2u))))) : GLF_merged3_0_2_41_2_1_13_3_1_13GLF_merged2_0_1_4_1_1_13readsubgroup_sizesubgroup_basesubgroup_size.xy.y = GLF_merged3_0_2_41_2_1_13_3_1_13GLF_merged2_0_1_4_1_1_13readsubgroup_sizesubgroup_basesubgroup_size.w), ((false ? _GLF_FUZZED(_GLF_IDENTITY(GLF_merged3_0_2_41_2_1_13_3_1_13GLF_merged2_0_1_4_1_1_13readsubgroup_sizesubgroup_basesubgroup_size.w, (_GLF_IDENTITY(GLF_merged3_0_2_41_2_1_13_3_1_13GLF_merged2_0_1_4_1_1_13readsubgroup_sizesubgroup_basesubgroup_size.w, (GLF_merged3_0_2_41_2_1_13_3_1_13GLF_merged2_0_1_4_1_1_13readsubgroup_sizesubgroup_basesubgroup_size.w) | 0u)) | (0u << _GLF_IDENTITY(uint(2u), uint(2u))))) : GLF_merged3_0_2_41_2_1_13_3_1_13GLF_merged2_0_1_4_1_1_13readsubgroup_sizesubgroup_basesubgroup_size.xy.y = GLF_merged3_0_2_41_2_1_13_3_1_13GLF_merged2_0_1_4_1_1_13readsubgroup_sizesubgroup_basesubgroup_size.w)) * 1u))))) ^ 0u)) / 1u)))), 0u ^ (_GLF_IDENTITY(GLF_merged3_0_2_41_2_1_13_3_1_13GLF_merged2_0_1_4_1_1_13readsubgroup_sizesubgroup_basesubgroup_size.xy.y = GLF_merged3_0_2_41_2_1_13_3_1_13GLF_merged2_0_1_4_1_1_13readsubgroup_sizesubgroup_basesubgroup_size.w, (false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_41_2_1_13_3_1_13GLF_merged2_0_1_4_1_1_13readsubgroup_sizesubgroup_basesubgroup_size, clamp(GLF_merged3_0_2_41_2_1_13_3_1_13GLF_merged2_0_1_4_1_1_13readsubgroup_sizesubgroup_basesubgroup_size, GLF_merged3_0_2_41_2_1_13_3_1_13GLF_merged2_0_1_4_1_1_13readsubgroup_sizesubgroup_basesubgroup_size, GLF_merged3_0_2_41_2_1_13_3_1_13GLF_merged2_0_1_4_1_1_13readsubgroup_sizesubgroup_basesubgroup_size)).w, (_GLF_IDENTITY(GLF_merged3_0_2_41_2_1_13_3_1_13GLF_merged2_0_1_4_1_1_13readsubgroup_sizesubgroup_basesubgroup_size.w, _GLF_IDENTITY((GLF_merged3_0_2_41_2_1_13_3_1_13GLF_merged2_0_1_4_1_1_13readsubgroup_sizesubgroup_basesubgroup_size.w) | 0u, (_GLF_IDENTITY((GLF_merged3_0_2_41_2_1_13_3_1_13GLF_merged2_0_1_4_1_1_13readsubgroup_sizesubgroup_basesubgroup_size.w) | 0u, max((GLF_merged3_0_2_41_2_1_13_3_1_13GLF_merged2_0_1_4_1_1_13readsubgroup_sizesubgroup_basesubgroup_size.w) | 0u, (GLF_merged3_0_2_41_2_1_13_3_1_13GLF_merged2_0_1_4_1_1_13readsubgroup_sizesubgroup_basesubgroup_size.w) | 0u))) << 0u))) | (0u << _GLF_IDENTITY(uint(2u), uint(2u))))) : GLF_merged3_0_2_41_2_1_13_3_1_13GLF_merged2_0_1_4_1_1_13readsubgroup_sizesubgroup_basesubgroup_size.xy.y = _GLF_IDENTITY(GLF_merged3_0_2_41_2_1_13_3_1_13GLF_merged2_0_1_4_1_1_13readsubgroup_sizesubgroup_basesubgroup_size, (GLF_merged3_0_2_41_2_1_13_3_1_13GLF_merged2_0_1_4_1_1_13readsubgroup_sizesubgroup_basesubgroup_size) / ((uvec4(1u, 1u, 1u, 1u) << _GLF_IDENTITY(uvec4(_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, max(1u, 1u))))), uvec4(1u))) >> _GLF_IDENTITY(uvec4(1u), uvec4(1u)))).w))));
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, (true) && true) && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2(injectionSwitch.y, 0.0, 1.0, 1.0)), (true ? float(mat2(injectionSwitch.y, 0.0, 1.0, 1.0)) : _GLF_FUZZED(-1547.5177)))), injectionSwitch.y)))), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], min((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(mat2x3(mat2(1.0) * (injectionSwitch), 1.0, 0.0, 1.0, 0.0)))))[0], (injectionSwitch)[0])), _GLF_FUZZED(1.6)), vec2(_GLF_FUZZED(-99.51), (injectionSwitch)[1]), bvec2(false, true))))).x > injectionSwitch.y)))))))), _GLF_IDENTITY(true, ! (! (true))) && (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))), _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * abs(vec2(1.0, 1.0))), mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], min((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[0], _GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_FUZZED(-46.93)), float((injectionSwitch)[0]), bool(true))))), _GLF_FUZZED(_GLF_IDENTITY(1.6, clamp(1.6, _GLF_IDENTITY(1.6, max(1.6, _GLF_IDENTITY(1.6, clamp(1.6, _GLF_IDENTITY(1.6, determinant(mat2(0.0, 0.0, 0.0, 0.0)) + (1.6)), 1.6)))), 1.6)))), vec2(_GLF_FUZZED(-99.51), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))[1]), bvec2(false, true))))).x > injectionSwitch.y))))), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * abs(vec2(1.0, 1.0))), mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], min((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[0], _GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_FUZZED(-46.93)), float((injectionSwitch)[0]), bool(true))))), _GLF_FUZZED(_GLF_IDENTITY(1.6, clamp(1.6, _GLF_IDENTITY(1.6, max(1.6, _GLF_IDENTITY(1.6, clamp(1.6, _GLF_IDENTITY(1.6, determinant(mat2(0.0, 0.0, 0.0, 0.0)) + (1.6)), 1.6)))), 1.6)))), vec2(_GLF_FUZZED(-99.51), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))[1]), bvec2(false, true))))).x > injectionSwitch.y))))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * abs(vec2(1.0, 1.0))), mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], min((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[0], _GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_FUZZED(-46.93)), float((injectionSwitch)[0]), bool(true))))), _GLF_FUZZED(_GLF_IDENTITY(1.6, clamp(1.6, _GLF_IDENTITY(1.6, max(1.6, _GLF_IDENTITY(1.6, clamp(1.6, _GLF_IDENTITY(1.6, determinant(mat2(0.0, 0.0, 0.0, 0.0)) + (1.6)), 1.6)))), 1.6)))), vec2(_GLF_FUZZED(-99.51), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))[1]), bvec2(false, true))))).x > injectionSwitch.y))))))), false, true)))))), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bool(true)))) || false), false, false))), bool(bvec4(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bool(true)))) || false), false, false))), true, true, true))) && _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y)))))), ! (! ((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y))))))))), (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y)))))), ! (! ((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED((+ -2024.4610)), _GLF_FUZZED(-2.0)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) : injectionSwitch)).x > injectionSwitch.y)))))))))) || false)), true && (! (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y)))))), ! _GLF_IDENTITY((! ((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true))))), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y)))))))), ! (! ((! ((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true))))), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y)))))))))))))))))))))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), false), false)))))), true && _GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (! (bool(bool(injectionSwitch.x > injectionSwitch.y))))))))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)) || false), bool(bvec2(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)) : _GLF_FUZZED(injectionSwitch))).y))), (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)) || false), false)))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), mix(float(float(mat4x2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 1.0, 1.0, 1.0))), float(_GLF_FUZZED(_GLF_IDENTITY(5.3, 0.0 + (_GLF_IDENTITY(5.3, (true ? 5.3 : _GLF_FUZZED(2.6))))))), bool(false)))), min((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)))[0])), _GLF_FUZZED(1.6)), clamp(vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), mix(float(float(mat4x2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 1.0, 1.0, 1.0))), float(_GLF_FUZZED(_GLF_IDENTITY(5.3, 0.0 + (_GLF_IDENTITY(5.3, (true ? 5.3 : _GLF_FUZZED(2.6))))))), bool(false)))), min((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)))[0])), _GLF_FUZZED(1.6)), vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), mix(float(float(mat4x2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 1.0, 1.0, 1.0))), float(_GLF_FUZZED(_GLF_IDENTITY(5.3, 0.0 + (_GLF_IDENTITY(5.3, (true ? 5.3 : _GLF_FUZZED(2.6))))))), bool(false)))), min((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)))[0])), _GLF_FUZZED(1.6)), vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), mix(float(float(mat4x2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 1.0, 1.0, 1.0))), float(_GLF_FUZZED(_GLF_IDENTITY(5.3, 0.0 + (_GLF_IDENTITY(5.3, (true ? 5.3 : _GLF_FUZZED(2.6))))))), bool(false)))), min((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)))[0])), _GLF_FUZZED(1.6)))), vec2(_GLF_FUZZED(-99.51), (injectionSwitch)[1]), bvec2(false, true))))).x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), mix(float(float(mat4x2(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(min((injectionSwitch)[0], (injectionSwitch)[0]), 1.0 * (min((injectionSwitch)[0], (injectionSwitch)[0])))), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0))), float(_GLF_FUZZED(5.3)), bool(false)))), min((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)))[0])), _GLF_FUZZED(1.6)), vec2(_GLF_FUZZED(-99.51), (injectionSwitch)[1]), bvec2(false, true))))).x > injectionSwitch.y)), false)), false || (_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(_GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), float(mat2x4(float(mat4x2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, sqrt(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)))), 1.0, abs(0.0), 1.0))), mix(float(float(mat4x2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0))), float(_GLF_FUZZED(5.3)), bool(false)))), min((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)))[0])), _GLF_FUZZED(1.6)), vec2(_GLF_FUZZED(-99.51), (injectionSwitch)[1]), bvec2(false, true))))).x > injectionSwitch.y)), false)), bool(bvec3(bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), mix(float(float(mat4x2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[_GLF_IDENTITY(0, ~ (~ (0)))], (injectionSwitch)[0])), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0))), float(_GLF_FUZZED(5.3)), bool(false)))), min((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), (injectionSwitch)))[0])), _GLF_IDENTITY(_GLF_FUZZED(1.6), float(mat4(_GLF_IDENTITY(_GLF_FUZZED(1.6), float(mat4x3(_GLF_FUZZED(1.6), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 1.0, 1.0, log(1.0), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, sqrt(0.0), 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, sqrt(0.0), 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), cos(0.0), 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)))), max(_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), mix(float(float(mat4x2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[_GLF_IDENTITY(0, ~ (~ (0)))], (injectionSwitch)[0])), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0))), float(_GLF_FUZZED(5.3)), bool(false)))), min((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), (injectionSwitch)))[0])), _GLF_IDENTITY(_GLF_FUZZED(1.6), float(mat4(_GLF_IDENTITY(_GLF_FUZZED(1.6), float(mat4x3(_GLF_FUZZED(1.6), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 1.0, 1.0, log(1.0), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, sqrt(0.0), 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, sqrt(0.0), 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), cos(0.0), 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)))), max(vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), mix(float(float(mat4x2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[_GLF_IDENTITY(0, ~ (~ (0)))], (injectionSwitch)[0])), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0))), float(_GLF_FUZZED(5.3)), bool(false)))), min((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), (injectionSwitch)))[0])), _GLF_IDENTITY(_GLF_FUZZED(1.6), float(mat4(_GLF_IDENTITY(_GLF_FUZZED(1.6), float(mat4x3(_GLF_FUZZED(1.6), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 1.0, 1.0, log(1.0), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, sqrt(0.0), 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, sqrt(0.0), 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), cos(0.0), 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)))), vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), mix(float(float(mat4x2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[_GLF_IDENTITY(0, ~ (~ (0)))], (injectionSwitch)[0])), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0))), float(_GLF_FUZZED(5.3)), bool(false)))), min((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), (injectionSwitch)))[0])), _GLF_IDENTITY(_GLF_FUZZED(1.6), float(mat4(_GLF_IDENTITY(_GLF_FUZZED(1.6), float(mat4x3(_GLF_FUZZED(1.6), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 1.0, 1.0, log(1.0), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, sqrt(0.0), 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, sqrt(0.0), 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), cos(0.0), 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)))))), vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), mix(float(float(mat4x2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[_GLF_IDENTITY(0, ~ (~ (0)))], (injectionSwitch)[0])), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0))), float(_GLF_FUZZED(5.3)), bool(false)))), min((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), (injectionSwitch)))[0])), _GLF_IDENTITY(_GLF_FUZZED(1.6), float(mat4(_GLF_IDENTITY(_GLF_FUZZED(1.6), float(mat4x3(_GLF_FUZZED(1.6), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 1.0, 1.0, log(1.0), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, sqrt(0.0), 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, sqrt(0.0), 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), cos(0.0), 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)))))), vec2(_GLF_FUZZED(-99.51), (injectionSwitch)[1]), bvec2(false, true))))).x > injectionSwitch.y)), false)), false, false))))))), ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), mix(float(float(mat4x2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)))), float(_GLF_FUZZED(5.3)), bool(false)))), min((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 0.0, cos(0.0), 0.0)))), (injectionSwitch)))[0])), _GLF_FUZZED(1.6)), vec2(_GLF_FUZZED(-99.51), (injectionSwitch)[1]), bvec2(false, true))))).x > injectionSwitch.y)))) || false)))))), bool(bool(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)) || false)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_FUZZED(-7.8)), vec2(_GLF_FUZZED(422.520), ((injectionSwitch))[1]), bvec2(false, true)))[0], min((injectionSwitch)[0], (injectionSwitch)[0])), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), mix(float(float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) * 1.0), min((injectionSwitch)[0], (injectionSwitch)[0])), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0))), float(_GLF_FUZZED(5.3)), bool(false)))), min(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch)))[0], _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)))[0])), _GLF_FUZZED(1.6)), vec2(_GLF_FUZZED(-99.51), (injectionSwitch)[1]), bvec2(false, true))))).x > injectionSwitch.y))), (_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), _GLF_IDENTITY((injectionSwitch), vec2(mat2((injectionSwitch), 1.0, 1.0)))))[_GLF_IDENTITY(0, (0) << 0)], _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(injectionSwitch)))[0])), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), mix(float(float(mat4x2(_GLF_IDENTITY((injectionSwitch)[0], min(_GLF_IDENTITY((injectionSwitch)[0], min(_GLF_IDENTITY((injectionSwitch)[0], 1.0 * (_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) / 1.0))), _GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(smoothstep(injectionSwitch, injectionSwitch, vec2(142.897, -896.492)))))[0])), (injectionSwitch)[0])), 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(6.0)), float(1.0), bool(true))), 0.0, 0.0, 1.0, 1.0, 1.0))), float(_GLF_FUZZED(5.3)), bool(false)))), min((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)))[0])), _GLF_FUZZED(1.6)), vec2(_GLF_FUZZED(-99.51), (injectionSwitch)[1]), bvec2(false, true))))).x > injectionSwitch.y))), ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), _GLF_IDENTITY((injectionSwitch), vec2(mat2((injectionSwitch), 1.0, 1.0)))))[_GLF_IDENTITY(0, (0) << 0)], _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(injectionSwitch)))[0])), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), mix(float(float(mat4x2(_GLF_IDENTITY((injectionSwitch)[0], min(_GLF_IDENTITY((injectionSwitch)[0], min(_GLF_IDENTITY((injectionSwitch)[0], 1.0 * (_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) / 1.0))), _GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(smoothstep(injectionSwitch, injectionSwitch, vec2(142.897, -896.492)))))[0])), (injectionSwitch)[0])), 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(6.0)), float(1.0), bool(true))), 0.0, 0.0, 1.0, 1.0, 1.0))), float(_GLF_FUZZED(5.3)), bool(false)))), min((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)))[0])), _GLF_FUZZED(1.6)), vec2(_GLF_FUZZED(-99.51), (injectionSwitch)[1]), bvec2(false, true))))).x > injectionSwitch.y)))) && true)) || false))), ((_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, true)), ! (! (bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, true))))))), true && _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_FUZZED(_GLF_IDENTITY(-7.8, float(mat4(-7.8, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, sin(0.0), 0.0, 1.0, 1.0, tan(0.0), 0.0, 1.0, 1.0, 1.0, 0.0)), 1.0, abs(1.0), 1.0, sqrt(1.0), 0.0))))), vec2(_GLF_FUZZED(422.520), ((injectionSwitch))[1]), bvec2(false, true)))[0], min((injectionSwitch)[0], (injectionSwitch)[0])), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), mix(float(float(mat4x2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], log(1.0) + ((injectionSwitch)[0])))), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0))), float(_GLF_FUZZED(5.3)), bool(false)))), min(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch)))[_GLF_IDENTITY(0, (0) << 0)], _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)))[0])), _GLF_FUZZED(1.6)), vec2(_GLF_FUZZED(-99.51), (injectionSwitch)[1]), bvec2(false, true))))).x > injectionSwitch.y))), ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), _GLF_IDENTITY((injectionSwitch), vec2(mat2((injectionSwitch), 1.0, 1.0)))))[_GLF_IDENTITY(0, (0) << 0)], _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), mix(float(float(mat4x2(_GLF_IDENTITY((injectionSwitch)[0], min(_GLF_IDENTITY((injectionSwitch)[0], min(_GLF_IDENTITY((injectionSwitch)[0], 1.0 * (_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) / 1.0))), (injectionSwitch)[0])), (injectionSwitch)[0])), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0))), float(_GLF_FUZZED(5.3)), bool(false)))), min((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)))[0])), _GLF_FUZZED(1.6)), vec2(_GLF_FUZZED(-99.51), (injectionSwitch)[1]), bvec2(false, true)))), vec2(mat3(max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), _GLF_IDENTITY((injectionSwitch), vec2(mat2((injectionSwitch), 1.0, 1.0)))))[_GLF_IDENTITY(0, (0) << 0)], _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), mix(float(float(mat4x2(_GLF_IDENTITY((injectionSwitch)[0], min(_GLF_IDENTITY((injectionSwitch)[0], min(_GLF_IDENTITY((injectionSwitch)[0], 1.0 * (_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) / 1.0))), (injectionSwitch)[0])), (injectionSwitch)[0])), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0))), float(_GLF_FUZZED(5.3)), bool(false)))), min((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)))[0])), _GLF_FUZZED(1.6)), vec2(_GLF_FUZZED(-99.51), (injectionSwitch)[1]), bvec2(false, true)))), 1.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, abs(1.0))))).x > injectionSwitch.y)))) || false)))) && true))))))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) | (gl_WorkGroupID.x))) << 0u, min(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) | (gl_WorkGroupID.x))), ((_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) | (gl_WorkGroupID.x)))) >> 0u) << 0u, (_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY((gl_WorkGroupID.x), clamp((gl_WorkGroupID.x), (gl_WorkGroupID.x), (gl_WorkGroupID.x))) | (gl_WorkGroupID.x))) << 0u)))), 0u ^ ((_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) | (gl_WorkGroupID.x))) << 0u, min((_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) | (gl_WorkGroupID.x))) << 0u, (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) | (gl_WorkGroupID.x))) << 0u))))))));
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, ~ _GLF_IDENTITY((~ (workgroup_size * workgroup_id)), min((~ (workgroup_size * workgroup_id)), (~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size * workgroup_id, 0u ^ (_GLF_IDENTITY(workgroup_size, (workgroup_size) << 0u) * _GLF_IDENTITY(workgroup_id, (true ? workgroup_id : _GLF_FUZZED(workgroup_id)))))), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size * workgroup_id, 0u ^ (_GLF_IDENTITY(workgroup_size, (workgroup_size) << 0u) * _GLF_IDENTITY(workgroup_id, (true ? workgroup_id : _GLF_FUZZED(workgroup_id)))))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(workgroup_size * workgroup_id, 0u ^ (_GLF_IDENTITY(workgroup_size, (workgroup_size) << 0u) * _GLF_IDENTITY(workgroup_id, (true ? workgroup_id : _GLF_FUZZED(workgroup_id))))))), max(~ ((_GLF_IDENTITY(workgroup_size * workgroup_id, 0u ^ (_GLF_IDENTITY(workgroup_size, (workgroup_size) << 0u) * _GLF_IDENTITY(workgroup_id, (true ? workgroup_id : _GLF_FUZZED(workgroup_id))))))), ~ ((_GLF_IDENTITY(workgroup_size * workgroup_id, 0u ^ (_GLF_IDENTITY(workgroup_size, (workgroup_size) << 0u) * _GLF_IDENTITY(workgroup_id, (true ? workgroup_id : _GLF_FUZZED(workgroup_id)))))))))))) / 1u)))));
 uint subgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_13readsubgroup_basesubgroup_idsubgroup_size.z, 0u ^ (GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_13readsubgroup_basesubgroup_idsubgroup_size.z)) * GLF_merged3_0_2_41_2_1_13_3_1_13GLF_merged2_0_1_4_1_1_13readsubgroup_sizesubgroup_basesubgroup_size.xy.y, 1u * (GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_13readsubgroup_basesubgroup_idsubgroup_size.z * GLF_merged3_0_2_41_2_1_13_3_1_13GLF_merged2_0_1_4_1_1_13readsubgroup_sizesubgroup_basesubgroup_size.xy.y));
 _GLF_IDENTITY(GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_13readsubgroup_basesubgroup_idsubgroup_size.y = subgroup_base, ~ (~ (GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_13readsubgroup_basesubgroup_idsubgroup_size.y = subgroup_base)));
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged3_0_2_41_2_1_13_3_1_13GLF_merged2_0_1_4_1_1_13readsubgroup_sizesubgroup_basesubgroup_size.z = _GLF_IDENTITY(GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_13readsubgroup_basesubgroup_idsubgroup_size, (GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_13readsubgroup_basesubgroup_idsubgroup_size) | uvec4(0u, 0u, 0u, 0u)).y;
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + GLF_merged3_0_2_41_2_1_13_3_1_13GLF_merged2_0_1_4_1_1_13readsubgroup_sizesubgroup_basesubgroup_size.z, 0u | (workgroup_base + GLF_merged3_0_2_41_2_1_13_3_1_13GLF_merged2_0_1_4_1_1_13readsubgroup_sizesubgroup_basesubgroup_size.z)) + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint next_virtual_gid = workgroup_base + GLF_merged3_0_2_41_2_1_13_3_1_13GLF_merged2_0_1_4_1_1_13readsubgroup_sizesubgroup_basesubgroup_size.z + ((subgroup_local_id + 1) % GLF_merged3_0_2_41_2_1_13_3_1_13GLF_merged2_0_1_4_1_1_13readsubgroup_sizesubgroup_basesubgroup_size.xy.y);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint read = 0;
 _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_13readsubgroup_basesubgroup_idsubgroup_size.x = read, ~ (~ (GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_13readsubgroup_basesubgroup_idsubgroup_size.x = read))), (false ? _GLF_FUZZED(workgroup_size) : GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_13readsubgroup_basesubgroup_idsubgroup_size.x = read));
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, true))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged3_0_2_41_2_1_13_3_1_13GLF_merged2_0_1_4_1_1_13readsubgroup_sizesubgroup_basesubgroup_size.xy.x = GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_13readsubgroup_basesubgroup_idsubgroup_size.x;
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))) || false), (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, (false) && true))) && true)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(true, false || (true)) ? injectionSwitch : _GLF_FUZZED(vec2(14.33, 7086.9954))), vec2(mat2((_GLF_IDENTITY(true, false || (true)) ? injectionSwitch : _GLF_FUZZED(vec2(14.33, 7086.9954))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), abs(0.0))))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if((subgroup_local_id % 2) == _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(bitCount(subgroup_local_id)) : _GLF_IDENTITY(0, 1 * (0))))))), 0)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(4.8)), float(injectionSwitch.y), bool(true))), injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(-7.2)), bool(false))), injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false))))))))))
      barrier();
     barrier();
    }
   GLF_merged3_0_2_41_2_1_13_3_1_13GLF_merged2_0_1_4_1_1_13readsubgroup_sizesubgroup_basesubgroup_size.xy.x = atomicLoad(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, clamp(_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)), _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), min(_GLF_IDENTITY(virtual_gid, (virtual_gid) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(virtual_gid, (virtual_gid) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(virtual_gid, (virtual_gid) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(virtual_gid, (virtual_gid) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | 0u))), virtual_gid))], min(_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((buf[virtual_gid]) / 1u, ~ (_GLF_IDENTITY(~ ((buf[virtual_gid]) / 1u), (~ ((buf[virtual_gid]) / 1u)) - 0u)))), buf[virtual_gid])), 4, 64, _GLF_IDENTITY(2, clamp(2, 2, 2)));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 else
  {
   GLF_merged3_0_2_41_2_1_13_3_1_13GLF_merged2_0_1_4_1_1_13readsubgroup_sizesubgroup_basesubgroup_size.xy.x = atomicLoad(buf[virtual_gid], 4, 64, 2);
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, false, true)), ! (! (bool(bvec4(_GLF_DEAD(false), false, false, true)))))))
  barrier();
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    barrier();
   subgroupBarrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bvec2((false), false)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 atomicStore(checker[virtual_gid], GLF_merged3_0_2_41_2_1_13_3_1_13GLF_merged2_0_1_4_1_1_13readsubgroup_sizesubgroup_basesubgroup_size.xy.x, 4, 64, 4);
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
