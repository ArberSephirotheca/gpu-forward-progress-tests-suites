#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4((false), true, true, false)), _GLF_IDENTITY(bool(bvec2(bool(bvec4((false), true, true, false)), true)), bool(bvec2(bool(bvec2(bool(bvec4((false), true, true, false)), true)), true))))) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4((false), _GLF_IDENTITY(true, ! (! (true))), true, false)), _GLF_IDENTITY(bool(bvec2(bool(bvec4((false), true, true, false)), true)), bool(bvec2(bool(bvec2(bool(bvec4(_GLF_IDENTITY((false), ((false)) || false), true, true, false)), true)), true))))) || false), (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY(bool(bvec4((false), true, true, false)), _GLF_IDENTITY(bool(bvec2(bool(bvec4((false), true, true, false)), true)), bool(bvec2(bool(bvec2(bool(bvec4((false), true, true, false)), true)), true))))) || _GLF_IDENTITY(false, ! (! (false))))) || false))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) || false), false), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), false), false), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, (false) || false), false), false))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) || false), _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), true && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))), false || (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))), true && (! ((_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))))))))))))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), ! (! (bool(bvec4(false, false, true, true))))))))), true))))), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), ! (! (! (_GLF_IDENTITY((false), ! (! ((false)))))))))), (_GLF_IDENTITY(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), ! (! (! (_GLF_IDENTITY((false), ! (! ((false)))))))))), false || (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), ! (! (! (_GLF_IDENTITY((false), ! (! ((false))))))))))))) && true) || false), false), false)), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(true, false), false, false)), bvec2(bvec4(bvec2(bvec4(bvec2(true, false), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false), false)), false, true))))), _GLF_IDENTITY(false || (bool(bvec2(true, false))), bool(bool(false || (bool(bvec2(true, false))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(true, false), false, false)), bvec2(bvec4(bvec2(bvec4(bvec2(true, false), false, false)), false, true))))), bool(bvec4(bool(_GLF_IDENTITY(bvec2(true, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(true, false), false, false)), bvec2(bvec4(bvec2(bvec4(bvec2(true, false), false, false)), false, true))))), false, false, true))), _GLF_IDENTITY(false || (bool(bvec2(true, false))), bool(bool(false || (bool(bvec2(true, false)))))))) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)))))), ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), _GLF_IDENTITY(bool(bvec2(true, false)), _GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(true, false), false, false)), bvec2(bvec4(bvec2(bvec4(bvec2(true, false), false, false)), false, true))))), _GLF_IDENTITY(false || (bool(bvec2(true, false))), bool(bool(false || (bool(bvec2(true, false)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ((_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), false || (bool(true))))), false), false, false)), bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(_GLF_IDENTITY(bvec2(true, false), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, false), false), bvec3(bvec4(bvec3(bvec2(true, false), false), false))))), false, true))), false, false)), false, true))))), _GLF_IDENTITY(false || (bool(bvec2(true, false))), bool(bool(false || (bool(bvec2(true, false)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))), true))))))))), _GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || _GLF_IDENTITY(false, (false) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false) || false))), false), false), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec2(true, false)), false || (bool(bvec2(true, false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(bool(bvec2(true, false)), false || (bool(bvec2(_GLF_IDENTITY(true, (true) || false), false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec2(true, false)), false || (bool(bvec2(true, false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(bool(bvec2(true, false)), false || (bool(bvec2(_GLF_IDENTITY(true, (true) || false), false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec2(true, false)), false || (bool(bvec2(true, false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(bool(bvec2(true, false)), false || (bool(bvec2(_GLF_IDENTITY(true, (true) || false), false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true))), false, false))))))), bool(bvec2(! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec2(true, false)), false || (bool(bvec2(true, false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(bool(bvec2(true, false)), false || (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), true && (_GLF_IDENTITY(true, (true) || false))), false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec2(true, false)), false || (bool(bvec2(true, false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(bool(bvec2(true, false)), false || (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), true && (_GLF_IDENTITY(true, (true) || false))), false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec2(true, false)), false || (bool(bvec2(true, false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(bool(bvec2(true, false)), false || (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), true && (_GLF_IDENTITY(true, (true) || false))), false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true))), bvec3(bvec3(bvec3(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec2(true, false)), false || (bool(bvec2(true, false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(bool(bvec2(true, false)), false || (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), true && (_GLF_IDENTITY(true, (true) || false))), false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)))))), true))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec2(true, false)), false || (bool(bvec2(true, false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(bool(bvec2(true, false)), false || (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), true && (_GLF_IDENTITY(true, (true) || false))), false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec2(true, false)), false || (bool(bvec2(true, false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(bool(bvec2(true, false)), false || (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), true && (_GLF_IDENTITY(true, (true) || false))), false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true))), bvec3(bvec3(bvec3(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec2(true, false)), false || (bool(bvec2(true, false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(bool(bvec2(true, false)), false || (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), true && (_GLF_IDENTITY(true, (true) || false))), false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)))))), true)))))))))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(mix(injectionSwitch, smoothstep(896.781, 35.54, injectionSwitch), vec2(vec3(91.37, -5629.9458, -2259.9698)))))).x > injectionSwitch.y)))))), ! (! ((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec2(true, false)), false || (bool(bvec2(true, false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(bool(bvec2(true, false)), false || (bool(bvec2(_GLF_IDENTITY(true, (true) || false), false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec2(true, false)), false || (bool(bvec2(true, false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(bool(bvec2(true, false)), false || (bool(bvec2(_GLF_IDENTITY(true, (true) || false), false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec2(true, false)), false || (bool(bvec2(true, false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(bool(bvec2(true, false)), false || (bool(bvec2(_GLF_IDENTITY(true, (true) || false), false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true))), false, false))))))), bool(bvec2(! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec2(true, false)), false || (bool(bvec2(true, false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(bool(bvec2(true, false)), false || (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), true && (_GLF_IDENTITY(true, (true) || false))), false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec2(true, false)), false || (bool(bvec2(true, false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(bool(bvec2(true, false)), false || (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), true && (_GLF_IDENTITY(true, (true) || false))), false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec2(true, false)), false || (bool(bvec2(true, false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(bool(bvec2(true, false)), false || (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), true && (_GLF_IDENTITY(true, (true) || false))), false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true))), bvec3(bvec3(bvec3(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec2(true, false)), false || (bool(bvec2(true, false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(bool(bvec2(true, false)), false || (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), true && (_GLF_IDENTITY(true, (true) || false))), false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)))))), true))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec2(true, false)), false || (bool(bvec2(true, false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(bool(bvec2(true, false)), false || (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), true && (_GLF_IDENTITY(true, (true) || false))), false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec2(true, false)), false || (bool(bvec2(true, false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(bool(bvec2(true, false)), false || (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), true && (_GLF_IDENTITY(true, (true) || false))), false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true))), bvec3(bvec3(bvec3(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec2(true, false)), false || (bool(bvec2(true, false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(bool(bvec2(true, false)), false || (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), true && (_GLF_IDENTITY(true, (true) || false))), false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)))))), true)))))))))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(mix(injectionSwitch, smoothstep(896.781, 35.54, injectionSwitch), vec2(vec3(91.37, -5629.9458, -2259.9698)))))).x > injectionSwitch.y)))))))))), _GLF_IDENTITY((false) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false) || false))), false), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, bool(bvec3(true, true, true))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, bool(bvec3(true, true, true))))), ! (! (bool(bool(_GLF_IDENTITY(true, bool(bvec3(true, true, true)))))))), true, true)), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, bool(bvec3(true, true, true))))), ! (! (bool(bool(_GLF_IDENTITY(true, bool(bvec3(true, true, true)))))))), true, true)), ! (! (bool(bvec3(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, bool(bvec3(true, true, true))))), ! (! (bool(bool(_GLF_IDENTITY(true, bool(bvec3(true, true, true)))))))), true, true)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(bvec2(true, false))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(true, false)), false || (bool(bvec2(true, false)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), (bool(true)) || false))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), (bool(true)) || false))), false))))), false || _GLF_IDENTITY((bool(bvec2(true, false))), ! (_GLF_IDENTITY(! ((bool(bvec2(true, false)))), (! ((bool(bvec2(true, false))))) && _GLF_IDENTITY(true, (true) || false)))))) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(bool(bvec2(true, _GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (false)))))))), false || (bool(bvec2(_GLF_IDENTITY(true, (true) || false), false))))) || _GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))), false))))), (injectionSwitch.x > injectionSwitch.y)))))), true)))), bool(bool((_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(bvec2(true, false))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(true, false)), false || (bool(bvec2(true, false)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), (bool(true)) || false))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), (bool(true)) || false))), false))))), false || _GLF_IDENTITY((bool(bvec2(true, false))), ! (_GLF_IDENTITY(! ((bool(bvec2(true, false)))), (! ((bool(bvec2(true, false))))) && _GLF_IDENTITY(true, (true) || false)))))) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(bool(bvec2(true, _GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (false)))))))), false || (bool(bvec2(_GLF_IDENTITY(true, (true) || false), false))))) || _GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))), false))))), (injectionSwitch.x > injectionSwitch.y)))))), true))))))))), _GLF_IDENTITY((false) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false) || false))), false), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true))))))))))), false), bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(true, false), false, false)), bvec2(bvec4(bvec2(bvec4(bvec2(true, false), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false), false)), false, true))))), _GLF_IDENTITY(false || (bool(bvec2(true, false))), bool(bool(false || (bool(bvec2(true, false))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(true, false), false, false)), bvec2(bvec4(bvec2(bvec4(bvec2(true, false), false, false)), false, true))))), bool(bvec4(bool(_GLF_IDENTITY(bvec2(true, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(true, false), false, false)), bvec2(bvec4(bvec2(bvec4(bvec2(true, false), false, false)), false, true))))), false, false, true))), _GLF_IDENTITY(false || (bool(bvec2(true, false))), bool(bool(false || (bool(bvec2(true, false)))))))) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)))))), ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), _GLF_IDENTITY(bool(bvec2(true, false)), _GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(true, false), false, false)), bvec2(bvec4(bvec2(bvec4(bvec2(true, false), false, false)), false, true))))), _GLF_IDENTITY(false || (bool(bvec2(true, false))), bool(bool(false || (bool(bvec2(true, false)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ((_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), false || (bool(true))))), false), false, false)), bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(_GLF_IDENTITY(bvec2(true, false), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, false), false), bvec3(bvec4(bvec3(bvec2(true, false), false), false))))), false, true))), false, false)), false, true))))), _GLF_IDENTITY(false || (bool(bvec2(true, false))), bool(bool(false || (bool(bvec2(true, false)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))), true))))))))), _GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || _GLF_IDENTITY(false, (false) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false) || false))), false), false), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec2(true, false)), false || (bool(bvec2(true, false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(bool(bvec2(true, false)), false || (bool(bvec2(_GLF_IDENTITY(true, (true) || false), false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec2(true, false)), false || (bool(bvec2(true, false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(bool(bvec2(true, false)), false || (bool(bvec2(_GLF_IDENTITY(true, (true) || false), false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec2(true, false)), false || (bool(bvec2(true, false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(bool(bvec2(true, false)), false || (bool(bvec2(_GLF_IDENTITY(true, (true) || false), false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true))), false, false))))))), bool(bvec2(! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec2(true, false)), false || (bool(bvec2(true, false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(bool(bvec2(true, false)), false || (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), true && (_GLF_IDENTITY(true, (true) || false))), false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec2(true, false)), false || (bool(bvec2(true, false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(bool(bvec2(true, false)), false || (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), true && (_GLF_IDENTITY(true, (true) || false))), false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec2(true, false)), false || (bool(bvec2(true, false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(bool(bvec2(true, false)), false || (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), true && (_GLF_IDENTITY(true, (true) || false))), false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true))), bvec3(bvec3(bvec3(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec2(true, false)), false || (bool(bvec2(true, false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(bool(bvec2(true, false)), false || (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), true && (_GLF_IDENTITY(true, (true) || false))), false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)))))), true))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec2(true, false)), false || (bool(bvec2(true, false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(bool(bvec2(true, false)), false || (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), true && (_GLF_IDENTITY(true, (true) || false))), false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec2(true, false)), false || (bool(bvec2(true, false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(bool(bvec2(true, false)), false || (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), true && (_GLF_IDENTITY(true, (true) || false))), false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true))), bvec3(bvec3(bvec3(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec2(true, false)), false || (bool(bvec2(true, false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(bool(bvec2(true, false)), false || (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), true && (_GLF_IDENTITY(true, (true) || false))), false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)))))), true)))))))))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(mix(injectionSwitch, smoothstep(896.781, 35.54, injectionSwitch), vec2(vec3(91.37, -5629.9458, -2259.9698)))))).x > injectionSwitch.y)))))), ! (! ((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec2(true, false)), false || (bool(bvec2(true, false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(bool(bvec2(true, false)), false || (bool(bvec2(_GLF_IDENTITY(true, (true) || false), false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec2(true, false)), false || (bool(bvec2(true, false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(bool(bvec2(true, false)), false || (bool(bvec2(_GLF_IDENTITY(true, (true) || false), false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec2(true, false)), false || (bool(bvec2(true, false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(bool(bvec2(true, false)), false || (bool(bvec2(_GLF_IDENTITY(true, (true) || false), false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true))), false, false))))))), bool(bvec2(! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec2(true, false)), false || (bool(bvec2(true, false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(bool(bvec2(true, false)), false || (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), true && (_GLF_IDENTITY(true, (true) || false))), false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec2(true, false)), false || (bool(bvec2(true, false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(bool(bvec2(true, false)), false || (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), true && (_GLF_IDENTITY(true, (true) || false))), false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec2(true, false)), false || (bool(bvec2(true, false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(bool(bvec2(true, false)), false || (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), true && (_GLF_IDENTITY(true, (true) || false))), false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true))), bvec3(bvec3(bvec3(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec2(true, false)), false || (bool(bvec2(true, false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(bool(bvec2(true, false)), false || (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), true && (_GLF_IDENTITY(true, (true) || false))), false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)))))), true))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec2(true, false)), false || (bool(bvec2(true, false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(bool(bvec2(true, false)), false || (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), true && (_GLF_IDENTITY(true, (true) || false))), false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec2(true, false)), false || (bool(bvec2(true, false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(bool(bvec2(true, false)), false || (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), true && (_GLF_IDENTITY(true, (true) || false))), false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true))), bvec3(bvec3(bvec3(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec2(true, false)), false || (bool(bvec2(true, false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(bool(bvec2(true, false)), false || (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), true && (_GLF_IDENTITY(true, (true) || false))), false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)))))), true)))))))))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(mix(injectionSwitch, smoothstep(896.781, 35.54, injectionSwitch), vec2(vec3(91.37, -5629.9458, -2259.9698)))))).x > injectionSwitch.y)))))))))), _GLF_IDENTITY((false) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false) || false))), false), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, bool(bvec3(true, true, true))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, bool(bvec3(true, true, true))))), ! (! (bool(bool(_GLF_IDENTITY(true, bool(bvec3(true, true, true)))))))), true, true)), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, bool(bvec3(true, true, true))))), ! (! (bool(bool(_GLF_IDENTITY(true, bool(bvec3(true, true, true)))))))), true, true)), ! (! (bool(bvec3(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, bool(bvec3(true, true, true))))), ! (! (bool(bool(_GLF_IDENTITY(true, bool(bvec3(true, true, true)))))))), true, true)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(bvec2(true, false))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(true, false)), false || (bool(bvec2(true, false)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), (bool(true)) || false))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), (bool(true)) || false))), false))))), false || _GLF_IDENTITY((bool(bvec2(true, false))), ! (_GLF_IDENTITY(! ((bool(bvec2(true, false)))), (! ((bool(bvec2(true, false))))) && _GLF_IDENTITY(true, (true) || false)))))) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(bool(bvec2(true, _GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (false)))))))), false || (bool(bvec2(_GLF_IDENTITY(true, (true) || false), false))))) || _GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))), false))))), (injectionSwitch.x > injectionSwitch.y)))))), true)))), bool(bool((_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(bvec2(true, false))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(true, false)), false || (bool(bvec2(true, false)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), (bool(true)) || false))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), (bool(true)) || false))), false))))), false || _GLF_IDENTITY((bool(bvec2(true, false))), ! (_GLF_IDENTITY(! ((bool(bvec2(true, false)))), (! ((bool(bvec2(true, false))))) && _GLF_IDENTITY(true, (true) || false)))))) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(bool(bvec2(true, _GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (false)))))))), false || (bool(bvec2(_GLF_IDENTITY(true, (true) || false), false))))) || _GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))), false))))), (injectionSwitch.x > injectionSwitch.y)))))), true))))))))), _GLF_IDENTITY((false) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false) || false))), false), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true))))))))))), false)))), true))))))))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) + uvec3(0u, 0u, 0u)).x, (gl_NumWorkGroups.x) << 0u))))));
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])).x) - 0u, uint(uint((gl_WorkGroupSize.x) - 0u))));
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, min(_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID)).x, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(0u)), (uint(uint(0u))) / 1u)) ^ (_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec2(gl_WorkGroupID.x, 0u))))), min(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(0u, max(0u, 0u)))), (uint(uint(0u))) / 1u)) ^ (_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec2(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) ^ _GLF_IDENTITY(0u, (0u) | 0u)), 0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(0u)), (uint(uint(0u))) / 1u)) ^ (_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec2(gl_WorkGroupID.x, 0u))))), clamp(_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(0u)), (uint(uint(0u))) / 1u)) ^ (_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec2(gl_WorkGroupID.x, 0u))))), _GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(0u)), (uint(uint(0u))) / 1u)) ^ (_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec2(gl_WorkGroupID.x, 0u))))), _GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(0u)), (uint(uint(0u))) / 1u)) ^ (_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec2(gl_WorkGroupID.x, 0u)))))))) | 0u), _GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(0u)), (uint(uint(0u))) / 1u)) ^ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec2(gl_WorkGroupID.x, 0u))), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec2(gl_WorkGroupID.x, 0u))), (_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec2(gl_WorkGroupID.x, 0u)))) >> 0u), 0u, 1u)))))));
 uint workgroup_base = workgroup_size * workgroup_id;
 uint subgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (subgroup_id * subgroup_size)))), uint(uvec4(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u | _GLF_IDENTITY((subgroup_id * subgroup_size), clamp((subgroup_id * subgroup_size), (subgroup_id * subgroup_size), (subgroup_id * subgroup_size)))))), 0u, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * sqrt(vec2(1.0, 1.0))).x)), 0u)));
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base, uint(uint(workgroup_base + subgroup_base))) + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_base, clamp(_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, uint(uvec4(subgroup_base, 1u, 0u, (0u << _GLF_IDENTITY(uint(2u), uint(2u))))))), ((subgroup_base)) / uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0)).y))) - (_GLF_IDENTITY(1u ^ 1u, min(1u ^ 1u, _GLF_IDENTITY(1u ^ 1u, (true ? 1u ^ 1u : _GLF_FUZZED(virtual_gid))))))), subgroup_base, _GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (subgroup_base), uint(_GLF_IDENTITY(uvec4(~ (subgroup_base), 1u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(6u), uint(6u))), 0u), uvec4(0u, 0u, 0u, 0u) | (uvec4(~ (subgroup_base), 1u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(6u), uint(6u))), 0u)))))))) | 0u))) + (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(43597) : 1))), ~ (~ ((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(43597) : 1)), max(_GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_IDENTITY(_GLF_FUZZED(43597), (_GLF_FUZZED(43597)) ^ 0) : 1)), int(ivec3(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(43597) : 1)), 0, 1))), _GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(43597) : 1)), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(43597) : 1)), 0 ^ (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(43597) : 1)))))))))))) % subgroup_size);
 uint read = 0;
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if((subgroup_local_id % 2) == 0)
  {
   if(_GLF_DEAD(false))
    barrier();
   read = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) >> 0), 2);
  }
 else
  {
   read = atomicLoad(buf[virtual_gid], 4, 64, 2);
  }
 subgroupBarrier();
 atomicStore(checker[virtual_gid], read, 4, 64, 4);
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
