#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_8 {
 uvec2 _f0;
 vec4 _f1;
} ;

struct _GLF_struct_7 {
 mat2x4 _f0;
 int _f1;
} ;

struct _GLF_struct_6 {
 ivec4 _f0;
 int _f1;
 bvec3 _f2;
 uvec2 _f3;
 mat2 _f4;
} ;

struct _GLF_struct_5 {
 bool _f0;
 ivec2 _f1;
 float _f2;
 int _f3;
 vec2 _f4;
 mat2x3 _f5;
 int _f6;
} ;

struct _GLF_struct_9 {
 mat2x3 _f0;
 _GLF_struct_5 _f1;
 _GLF_struct_6 _f2;
 _GLF_struct_7 _f3;
 uvec4 _f4;
 _GLF_struct_8 _f5;
} ;

struct _GLF_struct_3 {
 float _f0;
 mat4 _f1;
 mat3x4 _f2;
} ;

struct _GLF_struct_2 {
 vec3 _f0;
 bvec4 _f1;
 bvec3 _f2;
 mat4x2 _f3;
 mat2x3 _f4;
} ;

struct _GLF_struct_1 {
 vec3 _f0;
} ;

struct _GLF_struct_0 {
 uvec3 _f0;
 bool _f1;
 bvec3 _f2;
 mat3x4 _f3;
 ivec2 _f4;
} ;

struct _GLF_struct_4 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 bvec4 _f2;
 _GLF_struct_2 _f3;
 _GLF_struct_3 _f4;
} ;

struct _GLF_struct_10 {
 uint workgroup_id;
 _GLF_struct_4 _f0;
 _GLF_struct_9 _f1;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec4(bvec2(_GLF_DEAD(false), true), true, true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), true, false, false)))), bool(bvec2(bool(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), true, false, false)))), false)))), true, false)))), ((_GLF_IDENTITY(false, bool(bvec3(false, true, false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, min(_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)), gl_WorkGroupSize)), uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupSize, min(_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)), gl_WorkGroupSize)), ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)))))).x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 _GLF_struct_10 _GLF_struct_replacement_10 = _GLF_struct_10(gl_WorkGroupID.x, _GLF_struct_4(_GLF_struct_0(_GLF_IDENTITY(uvec3(1u), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, false || (true)) && ((injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED((uvec3(112000u, 48728u, 179587u) * uvec3(44281u, 199743u, 136056u))) : _GLF_IDENTITY(uvec3(1u), (uvec3(1u)) | uvec3(0u, 0u, 0u)))), true, bvec3(true), mat3x4(1.0), ivec2(1)), _GLF_struct_1(vec3(1.0)), bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY((true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((true), ! (! ((true))))), bool(bvec2(! (_GLF_IDENTITY((true), ! (! ((true))))), false))))) && true)), _GLF_struct_2(_GLF_IDENTITY(vec3(1.0), (vec3(1.0)) * exp(vec3(0.0, 0.0, 0.0))), bvec4(true), bvec3(true), mat4x2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(min(1.0, _GLF_IDENTITY(1.0, float(vec4(1.0, 1.0, 0.0, 0.0)))), float(mat2x4(min(1.0, 1.0), tan(0.0), 0.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(sqrt(floor(760.485))) : _GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_FUZZED(9029.3907)), mix(float(_GLF_FUZZED(float(160408u))), float(float(_GLF_FUZZED(9029.3907))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), float(1.0), bool(true))))), 0.0, 0.0, 0.0))), tan(0.0) + (min(1.0, 1.0))))), mat2x3(1.0)), _GLF_struct_3(1.0, mat4(1.0), mat3x4(1.0))), _GLF_struct_9(mat2x3(1.0), _GLF_struct_5(true, ivec2(1), 1.0, 1, vec2(1.0), mat2x3(1.0), 1), _GLF_struct_6(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), clamp(_GLF_IDENTITY(1, clamp(1, 1, 1)), _GLF_IDENTITY(1, clamp(1, 1, 1)), _GLF_IDENTITY(1, clamp(1, 1, 1)))), 1), _GLF_IDENTITY((clamp(1, _GLF_IDENTITY(1, clamp(1, 1, 1)), 1)), ((clamp(1, _GLF_IDENTITY(1, clamp(1, 1, 1)), 1))) / 1) | 0)), _GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), min(_GLF_IDENTITY(1, 0 + (1)), _GLF_IDENTITY(1, 0 + (1))))))), 1), (false ? _GLF_FUZZED(65065) : clamp(_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), clamp(_GLF_IDENTITY(1, clamp(1, 1, 1)), _GLF_IDENTITY(1, clamp(1, 1, 1)), _GLF_IDENTITY(1, clamp(1, 1, 1)))), 1), _GLF_IDENTITY((clamp(1, _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) ^ 0), 1, 1)), 1)), ((clamp(1, _GLF_IDENTITY(1, clamp(1, 1, 1)), 1))) / 1) | 0)), _GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), min(_GLF_IDENTITY(1, 0 + (1)), _GLF_IDENTITY(1, 0 + (1))))))), 1))))), clamp(ivec4(1), _GLF_IDENTITY(_GLF_IDENTITY(ivec4(1), ~ (~ (_GLF_IDENTITY(ivec4(1), clamp(ivec4(1), ivec4(1), ivec4(1)))))), min(_GLF_IDENTITY(ivec4(1), ~ (~ (_GLF_IDENTITY(ivec4(1), clamp(ivec4(1), ivec4(1), ivec4(1)))))), _GLF_IDENTITY(ivec4(1), ~ (~ (_GLF_IDENTITY(ivec4(1), clamp(ivec4(1), ivec4(1), ivec4(1)))))))), _GLF_IDENTITY(ivec4(1), _GLF_IDENTITY(clamp(ivec4(1), ivec4(1), ivec4(1)), (clamp(ivec4(1), ivec4(1), ivec4(1))) | (_GLF_IDENTITY(clamp(ivec4(1), ivec4(1), ivec4(1)), ivec4(0, 0, 0, 0) | (_GLF_IDENTITY(clamp(ivec4(1), ivec4(1), ivec4(1)), (clamp(ivec4(1), ivec4(1), ivec4(1))) << ivec4(0, 0, 0, 0))))))))), 1, _GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), false))), uvec2(1u), mat2(1.0)), _GLF_struct_7(mat2x4(1.0), 1), uvec4(1u), _GLF_struct_8(uvec2(1u), _GLF_IDENTITY(vec4(1.0), _GLF_IDENTITY(vec4(mat4x3(vec4(1.0), 0.0, 1.0, abs(1.0), 0.0, determinant(mat3(0.0, 1.0, 1.0, abs(0.0), 0.0, 0.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0)), sqrt(1.0), 1.0, 0.0)), (_GLF_IDENTITY(vec4(mat4x3(vec4(1.0), 0.0, 1.0, abs(1.0), 0.0, determinant(mat3(0.0, 1.0, 1.0, abs(0.0), 0.0, 0.0, 0.0, length(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0)))), sqrt(1.0), 1.0, 0.0)), (vec4(mat4x3(vec4(1.0), 0.0, _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, 0.0 + (1.0)))), abs(1.0), 0.0, determinant(mat3(0.0, 1.0, 1.0, abs(0.0), 0.0, 0.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0)), sqrt(1.0), 1.0, 0.0))) * vec4(1.0, 1.0, 1.0, 1.0))) * _GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), clamp(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), (vec4(1.0, 1.0, 1.0, 1.0)) / vec4(1.0, 1.0, 1.0, 1.0)), vec4(1.0, 1.0, 1.0, 1.0), _GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), mix(vec4((vec4(1.0, 1.0, 1.0, 1.0))[0], _GLF_FUZZED(182.119), (vec4(1.0, 1.0, 1.0, 1.0))[2], (vec4(1.0, 1.0, 1.0, 1.0))[3]), vec4(_GLF_FUZZED(-6.5), (vec4(1.0, 1.0, 1.0, 1.0))[1], _GLF_FUZZED(9.8), _GLF_FUZZED(-3.8)), bvec4(false, true, false, false))))))))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), min(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, (workgroup_size) / 1u)) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(uint(2u), uint(2u))) >> (0u | 0u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))), _GLF_IDENTITY(workgroup_size, (workgroup_size) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size)), (true ? _GLF_IDENTITY(workgroup_size, max(_GLF_IDENTITY(workgroup_size, clamp(_GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u), _GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), workgroup_size)), workgroup_size)) : _GLF_FUZZED(subgroup_size))))))) * _GLF_struct_replacement_10.workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true, bool(bvec3(true, true, false))) ? _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(tanh(-855.849)))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(27.06), _GLF_FUZZED(-8491.4843)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(27.06), _GLF_FUZZED(-8491.4843)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(27.06), _GLF_FUZZED(-8491.4843)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(27.06), _GLF_FUZZED(-8491.4843)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))).y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(3399.7917)), bool(false))), (_GLF_IDENTITY(true, bool(bvec3(true, true, false))) ? _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(tanh(-855.849)))) > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(27.06), _GLF_FUZZED(-8491.4843)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y), true && ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true, bool(bvec3(true, true, false))) ? _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(tanh(-855.849)))) > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(27.06), _GLF_FUZZED(-8491.4843)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true))))))))).y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true, bool(bvec3(true, true, false))) ? _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(tanh(-855.849)))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x, (_GLF_IDENTITY(true, bool(bvec3(true, true, false))) ? _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], max(_GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_FUZZED(52.20) : (injectionSwitch)[0])), (injectionSwitch)[0])), _GLF_FUZZED(-2.8)), vec2(_GLF_FUZZED(-6.7), (injectionSwitch)[1]), bvec2(false, true))).x)) : _GLF_FUZZED(tanh(-855.849)))) : _GLF_FUZZED(-8.8))) > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(27.06), _GLF_FUZZED(-8491.4843)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y), _GLF_IDENTITY(true && ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true, bool(bvec3(true, true, false))) ? _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(tanh(-855.849)))) > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(27.06), _GLF_FUZZED(-8491.4843)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y)), (_GLF_IDENTITY(true && ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true, bool(bvec3(true, true, false))) ? _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(tanh(-855.849)))) > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(27.06), _GLF_FUZZED(-8491.4843)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y)), ! (! (_GLF_IDENTITY(true && ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true, bool(bvec3(true, true, false))) ? _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(tanh(-855.849)))) > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(27.06), _GLF_FUZZED(-8491.4843)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y)), (true && ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true, bool(bvec3(true, true, false))) ? _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(tanh(-855.849)))) > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(27.06), _GLF_FUZZED(-8491.4843)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true, bool(bvec3(true, true, false))) ? _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(tanh(-855.849)))) > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(27.06), _GLF_FUZZED(-8491.4843)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y, ! (! (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true, bool(bvec3(true, true, false))) ? _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(tanh(-855.849)))) > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(27.06), _GLF_FUZZED(-8491.4843)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y))))))))) || false))))) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec4(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true, bool(bvec3(true, true, false))) ? _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(tanh(-855.849)))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x, (_GLF_IDENTITY(true, bool(bvec3(true, true, false))) ? _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], max(_GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_FUZZED(52.20) : (injectionSwitch)[0])), (injectionSwitch)[0])), _GLF_FUZZED(-2.8)), vec2(_GLF_FUZZED(-6.7), (injectionSwitch)[1]), bvec2(false, true))).x)) : _GLF_FUZZED(tanh(-855.849)))) : _GLF_FUZZED(-8.8))) > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(27.06), _GLF_FUZZED(-8491.4843)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y), _GLF_IDENTITY(true && ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true, bool(bvec3(true, true, false))) ? _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(tanh(-855.849)))) > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(27.06), _GLF_FUZZED(-8491.4843)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y)), (_GLF_IDENTITY(true && ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true, bool(bvec3(true, true, false))) ? _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(tanh(-855.849)))) > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(27.06), _GLF_FUZZED(-8491.4843)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y)), ! (! (_GLF_IDENTITY(true && ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true, bool(bvec3(true, true, false))) ? _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(tanh(-855.849)))) > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(27.06), _GLF_FUZZED(-8491.4843)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y)), (true && ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true, bool(bvec3(true, true, false))) ? _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(tanh(-855.849)))) > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(27.06), _GLF_FUZZED(-8491.4843)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true, bool(bvec3(true, true, false))) ? _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(tanh(-855.849)))) > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(27.06), _GLF_FUZZED(-8491.4843)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y, ! (! (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true, bool(bvec3(true, true, false))) ? _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(tanh(-855.849)))) > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(27.06), _GLF_FUZZED(-8491.4843)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y))))))))) || false))))) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false))))))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (bool(bvec4(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) ? _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(tanh(-855.849)))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)), mix(vec2(_GLF_FUZZED(27.06), _GLF_FUZZED(-8491.4843)), vec2(_GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_FUZZED(7.0) : (injectionSwitch)[0])), (injectionSwitch)[1]), bvec2(true, true))).y), true && ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true, bool(bvec3(true, true, false))) ? _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(tanh(-855.849)))) > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(27.06), _GLF_FUZZED(-8491.4843)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true, bool(bvec3(true, true, false))) ? _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(tanh(-855.849)))) > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(27.06), _GLF_FUZZED(-8491.4843)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y), true && ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true, bool(bvec3(true, true, false))) ? _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(_GLF_IDENTITY(tanh(-855.849), (true ? _GLF_IDENTITY(tanh(-855.849), (tanh(-855.849)) - 0.0) : _GLF_FUZZED(7104.5218)))))) > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(27.06), _GLF_IDENTITY(_GLF_FUZZED(-8491.4843), min(_GLF_IDENTITY(_GLF_FUZZED(-8491.4843), min(_GLF_FUZZED(-8491.4843), _GLF_FUZZED(-8491.4843))), _GLF_FUZZED(-8491.4843)))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-6.4)), bool(false))))).x > injectionSwitch.y)), true))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true, bool(bvec3(true, true, false))) ? _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(tanh(-855.849)))) > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(27.06), _GLF_FUZZED(-8491.4843)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y), true && ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true, bool(bvec3(true, true, false))) ? _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(_GLF_IDENTITY(tanh(-855.849), (true ? _GLF_IDENTITY(tanh(-855.849), (tanh(-855.849)) - 0.0) : _GLF_FUZZED(7104.5218)))))) > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(27.06), _GLF_IDENTITY(_GLF_FUZZED(-8491.4843), min(_GLF_IDENTITY(_GLF_FUZZED(-8491.4843), min(_GLF_FUZZED(-8491.4843), _GLF_FUZZED(-8491.4843))), _GLF_FUZZED(-8491.4843)))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-6.4)), bool(false))))).x > injectionSwitch.y)), true)))))))))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(2.3)), float(injectionSwitch.x), bool(true))), 0.0, exp(0.0), round(length(normalize(1.0))), 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-79.19)), bool(false))), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0, abs(1.0), 1.0, 1.0, 0.0, 1.0, 1.0))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec2(bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true)), (bool(bvec2(bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true))) && true))), (_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, 1.0, sqrt(0.0), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))))), 1.0 * (dot(vec2(0.0, 1.0), vec2(0.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))))))), dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), max(vec2(0.0, 1.0), vec2(0.0, 1.0))))), abs(sqrt(0.0)), 1.0, 1.0, 1.0))) > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 uint subgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)), subgroup_id, _GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), subgroup_id)))) * subgroup_size, (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) ? _GLF_FUZZED(subgroup_local_id) : subgroup_id * subgroup_size));
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base + _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), min(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base)) + subgroup_local_id, (_GLF_IDENTITY(workgroup_base + subgroup_base, max(workgroup_base + subgroup_base, workgroup_base + subgroup_base)) + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))))) - 0u), _GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, max(workgroup_base + subgroup_base + subgroup_local_id, workgroup_base + subgroup_base + subgroup_local_id))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(bvec3(bvec3(_GLF_DEAD(false), false, true)))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))
      return;
     return;
    }
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) && true)), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) && true))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && _GLF_IDENTITY(true, ! (! (true))), bool(bvec2(_GLF_IDENTITY((false) && true, ! (! ((false) && true))), true))))), true && (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false) && true, bool(bvec2((false) && true, true))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((false), ! (! ((false))))), _GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY((false), ! (! ((false))))))), ! (! (bool(bool(bool(_GLF_IDENTITY((false), ! (! ((false))))))))))))) && true, bool(bvec2((false) && true, true))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false) && true, ((false) && true) && true), bool(bvec2((false) && true, true))), (_GLF_IDENTITY(_GLF_IDENTITY((false) && true, ((false) && true) && true), bool(bvec2((false) && true, true)))) || false)))))), ((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((false), ! (! ((false))))), _GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY((false), ! (! ((false))))))), ! (! (bool(bool(bool(_GLF_IDENTITY((false), ! (! ((false))))))))))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((false), ! (! ((false))))), _GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY((false), ! (! ((false))))))), ! (! (bool(bool(bool(_GLF_IDENTITY((false), ! (! ((false))))))))))))), true && (_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((false), ! (! ((false))))), _GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY((false), ! (! ((false))))))), ! (! (bool(bool(bool(_GLF_IDENTITY((false), ! (! ((false))))))))))))))), true))) && true, bool(bvec2((false) && true, true))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((false) && true, _GLF_IDENTITY(((false) && true), ! (_GLF_IDENTITY(! (((false) && true)), false || (! (((false) && true)))))) && true), bool(bvec2((false) && true, true))))))))) || false))))))), true && _GLF_IDENTITY(((_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true)))), true && (((_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))))))) && true) || false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))) && true), false)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint next_virtual_gid = workgroup_base + subgroup_base + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)));
 uint read = 0;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), _GLF_IDENTITY(_GLF_IDENTITY(uint(1), _GLF_IDENTITY(~ (~ (uint(1))), max(~ (~ (uint(_GLF_IDENTITY(1, _GLF_IDENTITY((1), min((1), (1))) >> 0)))), ~ (~ (uint(_GLF_IDENTITY(1, (1) | (1)))))))), (_GLF_IDENTITY(uint(1), _GLF_IDENTITY(~ (~ _GLF_IDENTITY((uint(1)), _GLF_IDENTITY(uint(uint((uint(1)))), max(uint(uint((uint(1)))), uint(uint((uint(1)))))))), max(~ (~ (uint(1))), ~ (~ (uint(1))))))) >> 0u))), 4, 64, _GLF_IDENTITY(4, (_GLF_IDENTITY(true ? 4 : _GLF_FUZZED(_GLF_IDENTITY(-40861, ~ (~ (-40861)))), (true ? 4 : _GLF_FUZZED(_GLF_IDENTITY(-40861, ~ (~ (-40861))))) | (_GLF_IDENTITY(true ? 4 : _GLF_FUZZED(_GLF_IDENTITY(-40861, ~ (~ (_GLF_IDENTITY(-40861, _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(-40861, (-40861) / 1), _GLF_IDENTITY(1, (1) | (1)), 0, (0 >> _GLF_IDENTITY(int(1), int(1))))), (int(ivec4(_GLF_IDENTITY(-40861, (-40861) / 1), _GLF_IDENTITY(1, (1) | (1)), 0, (0 >> _GLF_IDENTITY(int(1), int(1)))))) | (int(ivec4(_GLF_IDENTITY(-40861, (-40861) / 1), _GLF_IDENTITY(1, (1) | (1)), 0, (0 >> _GLF_IDENTITY(int(1), int(1)))))))))))), int(ivec4(true ? 4 : _GLF_FUZZED(_GLF_IDENTITY(-40861, _GLF_IDENTITY(~ (~ (-40861)), (~ (~ (_GLF_IDENTITY(-40861, min(-40861, -40861))))) - 0))), 0, 1, 0))))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u) % 2) == 0, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id % 2) == 0, ((_GLF_IDENTITY(subgroup_local_id % 2, clamp(subgroup_local_id % 2, subgroup_local_id % 2, subgroup_local_id % 2))) == 0) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(((subgroup_local_id % 2) == 0) || false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(((subgroup_local_id % 2) == 0) || false, true), bvec2(bvec4(bvec2(((subgroup_local_id % 2) == 0) || false, true), false, true)))), false || (bool(_GLF_IDENTITY(bvec2(((subgroup_local_id % 2) == 0) || false, true), bvec2(bvec4(bvec2(((subgroup_local_id % 2) == 0) || false, true), false, true)))))))), true, true))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3(injectionSwitch.x, 1.0, 0.0, 0.0, exp(0.0), 1.0, 1.0, 1.0, 1.0)), clamp(float(mat3(injectionSwitch.x, 1.0, 0.0, 0.0, exp(0.0), 1.0, 1.0, 1.0, 1.0)), float(mat3(injectionSwitch.x, 1.0, 0.0, 0.0, exp(0.0), 1.0, 1.0, 1.0, 1.0)), float(mat3(injectionSwitch.x, 1.0, 0.0, 0.0, exp(0.0), 1.0, 1.0, 1.0, 1.0))))), 0.0, 0.0, 1.0, 0.0, abs(1.0)))) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, 0.0, cos(0.0), log(1.0), 1.0, 0.0, _GLF_IDENTITY(exp(0.0), float(mat3(_GLF_IDENTITY(exp(0.0), _GLF_IDENTITY(float(mat2x4(exp(0.0), 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) * 1.0), 1.0)), clamp(_GLF_IDENTITY(float(mat2x4(exp(0.0), 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) * 1.0), 1.0)), (false ? _GLF_FUZZED(690.069) : float(mat2x4(exp(0.0), 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) * 1.0), 1.0)))), _GLF_IDENTITY(float(mat2x4(exp(0.0), 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) * 1.0), 1.0)), _GLF_IDENTITY(float(float(float(mat2x4(exp(0.0), 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) * 1.0), 1.0)))), (true ? float(float(float(mat2x4(exp(0.0), 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) * 1.0), 1.0)))) : _GLF_FUZZED(7696.4885)))), float(mat2x4(exp(0.0), 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) * 1.0), 1.0))))), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0))), 1.0, abs(1.0), 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 0.0, exp(0.0), 1.0, 0.0))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, 0.0, cos(0.0), log(1.0), 1.0, 0.0, _GLF_IDENTITY(exp(0.0), float(mat3(_GLF_IDENTITY(exp(0.0), _GLF_IDENTITY(float(mat2x4(exp(0.0), 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) * 1.0), 1.0)), clamp(_GLF_IDENTITY(float(mat2x4(exp(0.0), 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) * 1.0), 1.0)), (false ? _GLF_FUZZED(690.069) : float(mat2x4(exp(0.0), 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) * 1.0), 1.0)))), _GLF_IDENTITY(float(mat2x4(exp(0.0), 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) * 1.0), 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(float(float(float(mat2x4(exp(0.0), 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) * 1.0), 1.0)))), max(float(float(float(mat2x4(exp(0.0), 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) * 1.0), 1.0)))), _GLF_IDENTITY(float(float(float(mat2x4(exp(0.0), 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) * 1.0), 1.0)))), (float(float(float(mat2x4(exp(0.0), 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) * 1.0), 1.0))))) - 0.0))), (true ? float(float(float(mat2x4(exp(0.0), 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) * 1.0), 1.0)))) : _GLF_FUZZED(7696.4885)))), float(mat2x4(_GLF_IDENTITY(exp(0.0), (true ? exp(0.0) : _GLF_FUZZED(-677.471))), 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) * 1.0), 1.0))))), 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 0.0))), 1.0, abs(1.0), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), (_GLF_IDENTITY(0.0, (0.0) / 1.0)) - abs(0.0)), 1.0, 0.0, exp(0.0), 1.0, 0.0))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, false))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
      return;
     return;
    }
   read = atomicLoad(buf[virtual_gid], 4, 64, 2);
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   read = _GLF_IDENTITY(atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], max(buf[virtual_gid], buf[virtual_gid])), (_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(max(buf[virtual_gid], buf[virtual_gid]), (max(buf[virtual_gid], buf[virtual_gid])) - 0u))) + 0u), 4, _GLF_IDENTITY(64, (false ? _GLF_FUZZED((ivec2(-43258, _GLF_IDENTITY(19188, int(ivec3(19188, 0, 0))))[0] + -66686)) : 64)), 2), max(atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u)], 4, 64, 2), _GLF_IDENTITY(atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) * (0 ^ 1))) | (4)), 64, _GLF_IDENTITY(2, (2) | (0 >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), min(int(4), int(4))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) * (0 ^ 1))) | (4)), 64, _GLF_IDENTITY(2, (2) | (0 >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), min(int(4), int(4))))))), ~ (~ (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) * (0 ^ 1))) | (4)), 64, _GLF_IDENTITY(2, (2) | (0 >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), min(int(4), int(4))))))))))), (false ? _GLF_FUZZED(atomicAdd(subgroup_base, workgroup_size)) : uint(_GLF_IDENTITY(atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) * (0 ^ 1))) | (4)), 64, _GLF_IDENTITY(2, (2) | (0 >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), min(int(4), int(4))))))), ~ (~ (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) * (0 ^ 1))) | (4)), 64, _GLF_IDENTITY(2, (2) | (0 >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), min(int(4), int(4)))))))))))))), (uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) * (0 ^ 1))) | (4)), 64, _GLF_IDENTITY(2, (2) | (0 >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), min(int(4), int(4))))))), ~ (~ (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) * (0 ^ 1))) | (4)), 64, _GLF_IDENTITY(2, (2) | (0 >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), min(int(4), int(4))))))))))), (false ? _GLF_FUZZED(atomicAdd(subgroup_base, workgroup_size)) : uint(_GLF_IDENTITY(atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) * (0 ^ 1))) | (4)), 64, _GLF_IDENTITY(2, (2) | (0 >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), min(int(4), int(4))))))), ~ (~ (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) * (0 ^ 1))) | (4)), 64, _GLF_IDENTITY(2, (2) | (0 >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), min(int(4), int(4))))))))))))))) ^ 0u))));
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, true))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 subgroupBarrier();
 atomicStore(checker[virtual_gid], read, 4, 64, 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
