#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_19 {
 mat3x4 _f0;
 mat4x3 _f1;
 uint workgroup_size;
} ;

struct _GLF_struct_17 {
 mat4x2 _f0;
 mat3x4 _f1;
 uint num_workgroup;
} ;

struct _GLF_struct_15 {
 mat4x2 _f0;
} ;

struct _GLF_struct_14 {
 mat4x2 _f0;
 vec2 _f1;
 bvec4 _f2;
} ;

struct _GLF_struct_16 {
 _GLF_struct_14 _f0;
 _GLF_struct_15 _f1;
} ;

struct _GLF_struct_12 {
 mat2x3 _f0;
 mat3x4 _f1;
 bool _f2;
 float _f3;
 float _f4;
 ivec4 _f5;
 bvec4 _f6;
} ;

struct _GLF_struct_11 {
 mat2x4 _f0;
 int _f1;
 ivec2 _f2;
 uvec4 _f3;
 bool _f4;
 bvec4 _f5;
 mat2 _f6;
} ;

struct _GLF_struct_13 {
 _GLF_struct_11 _f0;
 ivec3 _f1;
 uvec3 _f2;
 bvec4 _f3;
 _GLF_struct_12 _f4;
 mat3x2 _f5;
 ivec4 _f6;
} ;

struct _GLF_struct_9 {
 uint _f0;
 vec3 _f1;
 vec4 _f2;
 bool _f3;
 mat2x4 _f4;
} ;

struct _GLF_struct_8 {
 int _f0;
 ivec3 _f1;
 mat2x4 _f2;
 int _f3;
 ivec3 _f4;
 mat4x2 _f5;
 int _f6;
} ;

struct _GLF_struct_10 {
 mat4x3 _f0;
 uvec3 _f1;
 _GLF_struct_8 _f2;
 bool _f3;
 _GLF_struct_9 _f4;
 mat4x3 _f5;
 mat3x4 _f6;
} ;

struct _GLF_struct_18 {
 _GLF_struct_10 _f0;
 vec3 _f1;
 _GLF_struct_13 _f2;
 _GLF_struct_16 _f3;
 _GLF_struct_17 _f4;
} ;

struct _GLF_struct_5 {
 mat3x4 _f0;
} ;

struct _GLF_struct_6 {
 _GLF_struct_5 _f0;
} ;

struct _GLF_struct_3 {
 uvec2 _f0;
 float _f1;
 ivec2 _f2;
 uvec3 _f3;
 mat2x3 _f4;
} ;

struct _GLF_struct_4 {
 uvec2 _f0;
 mat3x4 _f1;
 bvec2 _f2;
 _GLF_struct_3 _f3;
} ;

struct _GLF_struct_7 {
 _GLF_struct_4 _f0;
 uint virtual_gid;
 _GLF_struct_6 _f1;
} ;

struct _GLF_struct_0 {
 mat3x4 _f0;
} ;

struct _GLF_struct_1 {
 uvec2 _f0;
 uint subgroup_local_id;
 _GLF_struct_0 _f1;
} ;

struct _GLF_struct_2 {
 bvec3 _f0;
 uvec3 _f1;
 mat2x3 _f2;
 int _f3;
 uvec2 _f4;
 _GLF_struct_1 _f5;
 vec4 _f6;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(false, bool(bool(false))))))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bool(false))))), ! (! ((! (_GLF_IDENTITY(false, bool(bool(false)))))))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! _GLF_IDENTITY((_GLF_IDENTITY(! ((false)), bool(bvec3(_GLF_IDENTITY(! ((false)), (! ((false))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(! ((false)), bool(bvec3(_GLF_IDENTITY(! ((false)), (! ((false))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), false), bvec2(bvec2(bvec2((_GLF_IDENTITY(! ((false)), bool(bvec3(_GLF_IDENTITY(! ((false)), (! ((false))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), false))))))) || false), ! (! (_GLF_IDENTITY(false, bool(bool(false))))))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bool(false))))), ! (! ((! (_GLF_IDENTITY(false, bool(bool(false))))))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, float(vec4(0.0, 0.0, 1.0, 0.0))))), 0.0))).x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), max(_GLF_IDENTITY(vec2(1.0, 1.0), (false ? _GLF_FUZZED((injectionSwitch * -809.001)) : vec2(1.0, 1.0))), _GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(9908.1657), (vec2(1.0, 1.0))[1]), vec2((vec2(1.0, 1.0))[0], _GLF_FUZZED(-2.9)), bvec2(true, false)), (mix(vec2(_GLF_FUZZED(9908.1657), (vec2(1.0, 1.0))[1]), vec2((vec2(1.0, 1.0))[0], _GLF_FUZZED(-2.9)), bvec2(true, false))) - vec2(0.0, 0.0)))))).y), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 1.0)), _GLF_IDENTITY(1.0, 1.0 * (1.0))), _GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(9908.1657), (vec2(1.0, 1.0))[1]), vec2((vec2(1.0, 1.0))[0], _GLF_FUZZED(-2.9)), bvec2(true, false)), min(mix(vec2(_GLF_FUZZED(9908.1657), (vec2(1.0, 1.0))[_GLF_IDENTITY(1, (1) | (1))]), vec2((vec2(1.0, 1.0))[0], _GLF_FUZZED(-2.9)), bvec2(true, false)), mix(vec2(_GLF_FUZZED(9908.1657), (vec2(1.0, 1.0))[1]), vec2((vec2(1.0, 1.0))[0], _GLF_FUZZED(-2.9)), bvec2(true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), (bool(bvec4(false, true, false, false))) || false)))))))))).y), false, false), bvec3(bvec3(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 1.0)), _GLF_IDENTITY(1.0, 1.0 * (1.0))), _GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(9908.1657), (vec2(1.0, 1.0))[1]), vec2((vec2(1.0, 1.0))[0], _GLF_FUZZED(-2.9)), bvec2(true, false)), min(mix(vec2(_GLF_FUZZED(9908.1657), (vec2(1.0, 1.0))[_GLF_IDENTITY(1, (1) | (1))]), vec2((vec2(1.0, 1.0))[0], _GLF_FUZZED(-2.9)), bvec2(true, false)), mix(vec2(_GLF_FUZZED(9908.1657), (vec2(1.0, 1.0))[1]), vec2((vec2(1.0, 1.0))[0], _GLF_FUZZED(-2.9)), bvec2(true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), (bool(bvec4(false, true, false, false))) || false)))))))))).y), false, false), bvec3(bvec4(bvec3((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 1.0)), _GLF_IDENTITY(1.0, 1.0 * (1.0))), _GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(9908.1657), (vec2(1.0, 1.0))[1]), vec2((vec2(1.0, 1.0))[0], _GLF_FUZZED(-2.9)), bvec2(true, false)), min(mix(vec2(_GLF_FUZZED(9908.1657), (vec2(1.0, 1.0))[_GLF_IDENTITY(1, (1) | (1))]), vec2((vec2(1.0, 1.0))[0], _GLF_FUZZED(-2.9)), bvec2(true, false)), mix(vec2(_GLF_FUZZED(9908.1657), (vec2(1.0, 1.0))[1]), vec2((vec2(1.0, 1.0))[0], _GLF_FUZZED(-2.9)), bvec2(true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), (bool(bvec4(false, true, false, false))) || false)))))))))).y), false, false), true)))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 _GLF_struct_2 _GLF_struct_replacement_2 = _GLF_struct_2(bvec3(true), uvec3(1u), mat2x3(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), float(float((1.0)))) - 0.0)), 1, _GLF_IDENTITY(uvec2(1u), min(uvec2(1u), uvec2(1u))), _GLF_struct_1(uvec2(1u), gl_SubgroupInvocationID, _GLF_struct_0(mat3x4(1.0))), vec4(1.0));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + tan(vec2(0.0, 0.0))).y), false || ((injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_18 _GLF_struct_replacement_18 = _GLF_struct_18(_GLF_struct_10(mat4x3(1.0), uvec3(1u), _GLF_struct_8(1, ivec3(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 1 * _GLF_IDENTITY(_GLF_IDENTITY((1), ~ (~ ((1)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((1), ~ (~ ((1)))), clamp(_GLF_IDENTITY((1), ~ (~ ((1)))), _GLF_IDENTITY((1), ~ (~ ((1)))), _GLF_IDENTITY((1), ~ (~ ((1))))))))))) << 0)), mat2x4(1.0), 1, ivec3(1), mat4x2(1.0), 1), true, _GLF_struct_9(1u, vec3(1.0), vec4(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) - 0.0)), _GLF_IDENTITY(true, bool(bool(true))), mat2x4(1.0)), mat4x3(1.0), mat3x4(1.0)), vec3(1.0), _GLF_struct_13(_GLF_struct_11(mat2x4(_GLF_IDENTITY(1.0, min(1.0, 1.0))), 1, ivec2(1), uvec4(1u), true, bvec4(true), _GLF_IDENTITY(mat2(1.0), transpose(_GLF_IDENTITY(transpose(mat2(1.0)), transpose(transpose(transpose(mat2(1.0)))))))), ivec3(1), _GLF_IDENTITY(uvec3(1u), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY((uvec3(1u)), ((uvec3(1u))) ^ uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(~ _GLF_IDENTITY((uvec3(1u)), ((uvec3(1u))) ^ uvec3(0u, 0u, 0u)), (~ _GLF_IDENTITY((uvec3(1u)), ((uvec3(1u))) ^ uvec3(0u, 0u, 0u))) / uvec3(1u, 1u, 1u))) / uvec3(1u, 1u, 1u))), _GLF_IDENTITY(((~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(8u), uvec3(8u))) + (uvec3(1u))), uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(uvec3(1u), (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(8u), uvec3(8u))) + (uvec3(1u)))))))), min(((~ (uvec3(1u)))), _GLF_IDENTITY(((~ (uvec3(1u)))), min(((~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), max(uvec3(1u), uvec3(1u))), uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), _GLF_ONE(1.0, injectionSwitch.y)) * (uvec3(1u)))))), _GLF_IDENTITY(((~ (uvec3(1u)))), uvec3(uvec4(((~ (uvec3(1u)))), 1u))))))) << uvec3(0u, 0u, 0u))), bvec4(true), _GLF_struct_12(mat2x3(1.0), mat3x4(1.0), true, 1.0, 1.0, ivec4(1), bvec4(true)), mat3x2(1.0), ivec4(1)), _GLF_struct_16(_GLF_struct_14(mat4x2(1.0), vec2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-9.1)), bool(false)))), bvec4(true)), _GLF_struct_15(mat4x2(1.0))), _GLF_struct_17(mat4x2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY((true ? 1.0 : _GLF_FUZZED(_GLF_IDENTITY(-30.54, float(mat4x2(-30.54, 1.0, 1.0, log(1.0), abs(1.0), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))), vec4(0.0, 1.0, 1.0, 0.0))), 1.0, sqrt(0.0)))))), ((true ? 1.0 : _GLF_FUZZED(_GLF_IDENTITY(-30.54, float(mat4x2(-30.54, 1.0, 1.0, log(1.0), abs(1.0), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))), vec4(0.0, 1.0, 1.0, 0.0))), 1.0, sqrt(0.0))))))) + _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0)))))))) + 0.0)), mat3x4(1.0), gl_NumWorkGroups.x));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-668.882), _GLF_FUZZED((3687.8155 * 9360.0505))), bvec2(false, false))).y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true && (_GLF_IDENTITY(false, bool(bvec3(false, false, true))))))))), (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-432.782)), vec2(_GLF_FUZZED(1938.0629), _GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(vec2(9.0, -3.1)) : _GLF_IDENTITY((injectionSwitch), mat2(1.0) * ((injectionSwitch)))))[1]), bvec2(false, true))).x > injectionSwitch.y))))), false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_19 _GLF_struct_replacement_19 = _GLF_struct_19(mat3x4(1.0), mat4x3(1.0), gl_WorkGroupSize.x);
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) && true)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), true)))))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), bool(_GLF_IDENTITY(bvec2(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), false), bvec2(bvec4(bvec2(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), false), true, true))))))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (! (bool(bool(injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))) && true)))) || false)) && true)))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - tan(vec2(0.0, 0.0))).y, (true ? injectionSwitch.y : _GLF_FUZZED(0.5)))))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - tan(vec2(0.0, 0.0))).y, (true ? injectionSwitch.y : _GLF_FUZZED(0.5)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch)).y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), (false ? _GLF_FUZZED(3.4) : _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_base = _GLF_struct_replacement_19.workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch))))) - vec2(0.0, 0.0)).x > injectionSwitch.y)) && true))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)))).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(vec2(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(-9.7), float(_GLF_IDENTITY(mat4(true ? injectionSwitch.y : _GLF_FUZZED(-9.7), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, sqrt(1.0), 1.0), (mat4(true ? injectionSwitch.y : _GLF_FUZZED(-9.7), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, sqrt(1.0), 1.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), 1.0))), injectionSwitch.y)))) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true)))))))), (_GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)))).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-9.7))), 1.0), (_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-9.7))), 1.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(56.23, 3222.5250)) : vec2(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-9.7))), 1.0)))) / vec2(1.0, 1.0)))), injectionSwitch.y)))) && true))), ((_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)))).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(vec2(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-9.7))), 1.0))), injectionSwitch.y)))) && true)))) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2(_GLF_FUZZED(74.84), _GLF_FUZZED(96.47)), vec2((_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) + vec2(0.0, 0.0)))[_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, max(0, 0)), 0, 0)), _GLF_IDENTITY(0, int(ivec3(0, 1, 0)))))], (mat2(1.0) * (injectionSwitch))[1]), bvec2(true, true)))), vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)))).y), ((injectionSwitch.x > injectionSwitch.y)) && true)))))), true && ((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) && true))))), true, true, false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! (false), false || (! (false)))), bool(bvec2((_GLF_IDENTITY(! (false), false || (! (false)))), true))), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(! (false), false || (! (false)))), bool(bvec2((_GLF_IDENTITY(! (false), false || (! (false)))), true)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(_GLF_IDENTITY(998.733, clamp(998.733, _GLF_IDENTITY(998.733, max(998.733, 998.733)), 998.733)))), float(injectionSwitch.x), bool(true))))) > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(3.0, -87.45)) : _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_7 _GLF_struct_replacement_7 = _GLF_struct_7(_GLF_struct_4(_GLF_IDENTITY(uvec2(1u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? uvec2(1u) : _GLF_FUZZED(uvec2(6373u, 39706u)))), mat3x4(1.0), bvec2(_GLF_IDENTITY(true, ! _GLF_IDENTITY((_GLF_IDENTITY(! (true), (! (true)) && true)), false || (_GLF_IDENTITY((_GLF_IDENTITY(! (true), (! (true)) && true)), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(! (true), (! (true)) && true)), ((_GLF_IDENTITY(! (true), (! (true)) && true))) && true)))))))), _GLF_struct_3(uvec2(1u), 1.0, ivec2(1), uvec3(1u), mat2x3(1.0))), workgroup_base + subgroup_base + _GLF_struct_replacement_2._f5.subgroup_local_id, _GLF_struct_6(_GLF_struct_5(mat3x4(1.0))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, true))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) || false) || (_GLF_IDENTITY(false, false || (false))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, max(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)) + subgroup_base, workgroup_base + subgroup_base)) + ((_GLF_IDENTITY(_GLF_struct_replacement_2._f5.subgroup_local_id + 1, _GLF_IDENTITY((true ? _GLF_struct_replacement_2._f5.subgroup_local_id + 1 : _GLF_FUZZED(workgroup_id)), ((true ? _GLF_struct_replacement_2._f5.subgroup_local_id + _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), 0 ^ (_GLF_IDENTITY(~ (1), (~ (1)) | 0))))) : _GLF_FUZZED(workgroup_id))) - (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))))) % subgroup_size), (_GLF_IDENTITY(true ? _GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY(max(workgroup_base + subgroup_base, workgroup_base + subgroup_base), (max(_GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED((workgroup_base + (workgroup_id))))) + subgroup_base, workgroup_base + subgroup_base)) | (_GLF_IDENTITY(max(workgroup_base + subgroup_base, workgroup_base + subgroup_base), max(max(workgroup_base + subgroup_base, workgroup_base + subgroup_base), max(workgroup_base + subgroup_base, workgroup_base + subgroup_base)))))) + ((_GLF_IDENTITY(_GLF_struct_replacement_2._f5.subgroup_local_id + 1, _GLF_IDENTITY((true ? _GLF_struct_replacement_2._f5.subgroup_local_id + 1 : _GLF_FUZZED(workgroup_id)), ((true ? _GLF_struct_replacement_2._f5.subgroup_local_id + 1 : _GLF_FUZZED(workgroup_id))) | (_GLF_IDENTITY((true ? _GLF_struct_replacement_2._f5.subgroup_local_id + 1 : _GLF_FUZZED(workgroup_id)), clamp((true ? _GLF_struct_replacement_2._f5.subgroup_local_id + 1 : _GLF_FUZZED(workgroup_id)), _GLF_IDENTITY((true ? _GLF_struct_replacement_2._f5.subgroup_local_id + 1 : _GLF_FUZZED(workgroup_id)), clamp((true ? _GLF_struct_replacement_2._f5.subgroup_local_id + 1 : _GLF_FUZZED(workgroup_id)), (true ? _GLF_struct_replacement_2._f5.subgroup_local_id + 1 : _GLF_FUZZED(workgroup_id)), (true ? _GLF_struct_replacement_2._f5.subgroup_local_id + 1 : _GLF_FUZZED(workgroup_id)))), (true ? _GLF_struct_replacement_2._f5.subgroup_local_id + 1 : _GLF_FUZZED(workgroup_id)))))))) % subgroup_size) : _GLF_FUZZED(subgroup_base), max(true ? _GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY(max(workgroup_base + subgroup_base, workgroup_base + subgroup_base), (max(_GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED((workgroup_base + (workgroup_id))))) + subgroup_base, workgroup_base + subgroup_base)) | (_GLF_IDENTITY(max(workgroup_base + subgroup_base, workgroup_base + subgroup_base), max(max(workgroup_base + subgroup_base, workgroup_base + subgroup_base), max(workgroup_base + subgroup_base, workgroup_base + subgroup_base)))))) + ((_GLF_IDENTITY(_GLF_struct_replacement_2._f5.subgroup_local_id + 1, (true ? _GLF_struct_replacement_2._f5.subgroup_local_id + 1 : _GLF_FUZZED(workgroup_id)))) % subgroup_size) : _GLF_FUZZED(subgroup_base), true ? _GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY(max(workgroup_base + subgroup_base, workgroup_base + subgroup_base), (max(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((true ? workgroup_base : _GLF_FUZZED((workgroup_base + (workgroup_id)))), 0u | ((true ? workgroup_base : _GLF_FUZZED((workgroup_base + (workgroup_id))))))) + subgroup_base, workgroup_base + subgroup_base)) | (_GLF_IDENTITY(max(workgroup_base + subgroup_base, workgroup_base + subgroup_base), max(max(workgroup_base + subgroup_base, workgroup_base + subgroup_base), max(workgroup_base + subgroup_base, workgroup_base + subgroup_base)))))) + ((_GLF_IDENTITY(_GLF_struct_replacement_2._f5.subgroup_local_id + 1, (true ? _GLF_struct_replacement_2._f5.subgroup_local_id + 1 : _GLF_FUZZED(workgroup_id)))) % subgroup_size) : _GLF_FUZZED(subgroup_base)))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint read = 0;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), ((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))) && true)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))))))), false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec3(bool(bool(false)), true, false))))))), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-2222.5586), _GLF_FUZZED(9.9)), bvec2(false, false))).y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), true, true, false))))))))
      barrier();
    }
   barrier();
  }
 atomicStore(buf[next_virtual_gid], uint(1), 4, _GLF_IDENTITY(64, (64) << 0), 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), bool(bvec3(bool(injectionSwitch.x > injectionSwitch.y), true, true)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))), (_GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), bool(bool(bool(bool(injectionSwitch.x > injectionSwitch.y)))))) && true))), false || (bool(bool(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(160.767)), vec2(_GLF_FUZZED(-514.382), (injectionSwitch)[1]), bvec2(false, true)), max(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(160.767)), vec2(_GLF_FUZZED(-514.382), _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], (_GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))) / 1.0), (injectionSwitch)[1]))), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, true))), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(bvec2(false, true))))), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(false, true)))))), bvec2(bvec3(bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(false, true)))))), false)))))))), _GLF_IDENTITY(_GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(160.767)), vec2(_GLF_FUZZED(-514.382), (injectionSwitch)[1]), bvec2(false, true)), max(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(160.767)), vec2(_GLF_FUZZED(-514.382), (injectionSwitch)[1]), bvec2(false, true)), mix(vec2((injectionSwitch)[0], _GLF_FUZZED(160.767)), vec2(_GLF_FUZZED(-514.382), (injectionSwitch)[1]), bvec2(false, true)))), mix(vec2(_GLF_FUZZED(5726.5569), _GLF_FUZZED(-8610.1861)), vec2((mix(vec2((injectionSwitch)[0], _GLF_FUZZED(160.767)), vec2(_GLF_FUZZED(-514.382), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))[1]), bvec2(false, true)))[0], (mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], (_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0]))) / _GLF_IDENTITY(dot(vec2(0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0))), vec2(0.0, 1.0)), dot(vec2(0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0))), vec2(0.0, 1.0)))), _GLF_FUZZED(_GLF_IDENTITY(160.767, max(_GLF_IDENTITY(160.767, _GLF_IDENTITY(float(mat3(160.767, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0)), (float(mat3(160.767, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0))) / 1.0)), _GLF_IDENTITY(160.767, clamp(160.767, 160.767, 160.767)))))), vec2(_GLF_FUZZED(_GLF_IDENTITY(-514.382, (true ? _GLF_IDENTITY(-514.382, clamp(_GLF_IDENTITY(-514.382, min(_GLF_IDENTITY(-514.382, (false ? _GLF_FUZZED(-9720.3616) : -514.382)), -514.382)), -514.382, -514.382)) : _GLF_FUZZED(1.7)))), (injectionSwitch)[1]), bvec2(false, true)))[1]), bvec2(true, true)))))).x > injectionSwitch.y))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(_GLF_IDENTITY(1.0, min(1.0, 1.0)), injectionSwitch.y)))) * vec2(1.0, 1.0)).y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(((_GLF_IDENTITY(- 7.4, 0.0 + (- 7.4))) - 4.3)), (injectionSwitch)[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 ^ (1))) ^ 0)]), vec2(_GLF_IDENTITY((injectionSwitch)[0], (true ? (injectionSwitch)[0] : _GLF_FUZZED(3.9))), _GLF_FUZZED(vec3(-722.413, 349.493, 7747.7249).p)), bvec2(true, false))).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (! ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)).y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(2.9)), float(injectionSwitch.y), bool(true))), max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(2.9)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(2.9)), float(injectionSwitch.y), bool(true))), min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(2.9)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(2.9)), float(injectionSwitch.y), bool(true))))))))))) * (injectionSwitch), mix(_GLF_IDENTITY(vec2(_GLF_IDENTITY((mat2(_GLF_ONE(1.0, injectionSwitch.y)) * _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0))), max(_GLF_IDENTITY((mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), ((mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))) / vec2(1.0, 1.0)), (mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))))[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) | (0))], (_GLF_IDENTITY(mat2(_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4.3), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(vec3(178.306, 0.6, -1113.1427).s)), bvec2(true, false))).y), (_GLF_ONE(1.0, injectionSwitch.y)) - 0.0)), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))) ? _GLF_FUZZED((- mat2(-3.6, 869.675, -71.68, 437.810))) : _GLF_IDENTITY(mat2(_GLF_IDENTITY(_GLF_ONE(_GLF_IDENTITY(1.0, abs(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)))) * (1.0)), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4.3), (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), mix(_GLF_IDENTITY(float((injectionSwitch)[0]), (float((injectionSwitch)[0])) + 0.0), float(_GLF_FUZZED(-9.1)), bool(false))), _GLF_FUZZED(vec3(178.306, 0.6, _GLF_IDENTITY(-1113.1427, (_GLF_IDENTITY(-1113.1427, 0.0 + (-1113.1427))) - 0.0)).s)), bvec2(true, false))).y), _GLF_IDENTITY((_GLF_ONE(1.0, injectionSwitch.y)) - 0.0, (false ? _GLF_FUZZED(82.21) : (_GLF_ONE(1.0, injectionSwitch.y)) - 0.0)))), (mat2(_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4.3), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(vec3(178.306, 0.6, -1113.1427).s), max(_GLF_IDENTITY(_GLF_FUZZED(vec3(178.306, 0.6, -1113.1427).s), (_GLF_FUZZED(vec3(178.306, 0.6, _GLF_IDENTITY(-1113.1427, mix(float(_GLF_IDENTITY(-1113.1427, max(-1113.1427, -1113.1427))), float(_GLF_FUZZED((9.9 * 52.00))), bool(false)))).s)) - 0.0), _GLF_IDENTITY(_GLF_FUZZED(vec3(178.306, 0.6, -1113.1427).s), (_GLF_FUZZED(vec3(178.306, 0.6, -1113.1427).s)) - 0.0)))), bvec2(true, false))).y), (_GLF_ONE(1.0, injectionSwitch.y)) - 0.0))) / mat2(1.0, 1.0, 1.0, 1.0)))) * (injectionSwitch))[1]), (true ? _GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY((mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), max(_GLF_IDENTITY((mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), ((mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))) / vec2(1.0, 1.0)), (mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)))), _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(_GLF_IDENTITY((mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), max(_GLF_IDENTITY((mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), ((mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))) / vec2(1.0, 1.0)), (mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)))), (_GLF_IDENTITY((mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), max(_GLF_IDENTITY((mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), (_GLF_IDENTITY((mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), vec2(mat2x3((mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), 0.0, 1.0, 0.0, 0.0)))) / vec2(1.0, 1.0)), (mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))))) * mat2(1.0)))), vec2(vec3(vec2(vec2(_GLF_IDENTITY(_GLF_IDENTITY((mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), max(_GLF_IDENTITY((mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), ((mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))) / vec2(1.0, 1.0)), (mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)))), (_GLF_IDENTITY((mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), max(_GLF_IDENTITY((mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), ((mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))) / vec2(1.0, 1.0)), (mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))))) * mat2(1.0)))), 0.0))))[0], (_GLF_IDENTITY(mat2(_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4.3), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(vec3(178.306, 0.6, -1113.1427).s)), bvec2(true, false))).y), (_GLF_ONE(1.0, injectionSwitch.y)) - 0.0)), (false ? _GLF_FUZZED((- mat2(-3.6, 869.675, -71.68, 437.810))) : _GLF_IDENTITY(mat2(_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4.3), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], float(float(_GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1]))))))))[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(-9.1)), bool(false))), _GLF_FUZZED(vec3(178.306, 0.6, _GLF_IDENTITY(-1113.1427, (_GLF_IDENTITY(-1113.1427, 0.0 + (-1113.1427))) - 0.0)).s)), bvec2(true, false))).y), _GLF_IDENTITY((_GLF_ONE(1.0, injectionSwitch.y)) - 0.0, (false ? _GLF_FUZZED(82.21) : (_GLF_ONE(1.0, injectionSwitch.y)) - 0.0)))), (mat2(_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4.3), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(vec3(178.306, 0.6, -1113.1427).s), max(_GLF_IDENTITY(_GLF_FUZZED(vec3(178.306, 0.6, -1113.1427).s), (_GLF_FUZZED(_GLF_IDENTITY(vec3(_GLF_IDENTITY(178.306, min(178.306, _GLF_IDENTITY(178.306, clamp(178.306, _GLF_IDENTITY(178.306, min(178.306, 178.306)), 178.306)))), 0.6, -1113.1427).s, (vec3(_GLF_IDENTITY(178.306, min(178.306, _GLF_IDENTITY(178.306, clamp(178.306, _GLF_IDENTITY(178.306, min(178.306, 178.306)), _GLF_IDENTITY(178.306, clamp(178.306, 178.306, 178.306)))))), 0.6, -1113.1427).s) / 1.0))) - 0.0), _GLF_IDENTITY(_GLF_FUZZED(vec3(178.306, 0.6, -1113.1427).s), (_GLF_FUZZED(vec3(178.306, 0.6, -1113.1427).s)) - 0.0)))), bvec2(true, false))).y), (_GLF_ONE(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-8.3)), bool(false))), injectionSwitch.y)) - 0.0))) / mat2(1.0, 1.0, 1.0, 1.0)))) * (injectionSwitch))[1]), (true ? vec2(_GLF_IDENTITY((mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), max(_GLF_IDENTITY((_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), max(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), mat2(_GLF_ONE(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((- -9516.3428))), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), injectionSwitch.y)) * (injectionSwitch)))), ((mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))) / vec2(1.0, 1.0)), (mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))))[0], (_GLF_IDENTITY(mat2(_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(vec2(0.0, 0.0))), mix(vec2(_GLF_FUZZED(4.3), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(vec3(178.306, 0.6, -1113.1427).s)), bvec2(true, false))).y), (_GLF_ONE(1.0, injectionSwitch.y)) - 0.0)), (false ? _GLF_FUZZED((- mat2(-3.6, 869.675, -71.68, 437.810))) : _GLF_IDENTITY(mat2(_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4.3), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(-9.1)), bool(false))), _GLF_FUZZED(vec3(178.306, 0.6, _GLF_IDENTITY(-1113.1427, (_GLF_IDENTITY(-1113.1427, 0.0 + (-1113.1427))) - _GLF_IDENTITY(0.0, min(0.0, 0.0)))).s)), bvec2(true, false))).y), _GLF_IDENTITY((_GLF_ONE(1.0, injectionSwitch.y)) - 0.0, (false ? _GLF_FUZZED(82.21) : (_GLF_ONE(1.0, injectionSwitch.y)) - _GLF_IDENTITY(0.0, min(0.0, 0.0)))))), (mat2(_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4.3), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(vec3(178.306, 0.6, -1113.1427).s), max(_GLF_IDENTITY(_GLF_FUZZED(vec3(178.306, 0.6, -1113.1427).s), (_GLF_FUZZED(vec3(178.306, 0.6, -1113.1427).s)) - 0.0), _GLF_IDENTITY(_GLF_FUZZED(vec3(178.306, 0.6, -1113.1427).s), (_GLF_FUZZED(vec3(178.306, 0.6, -1113.1427).s)) - 0.0)))), bvec2(true, false))).y), (_GLF_ONE(1.0, injectionSwitch.y)) - 0.0))) / mat2(1.0, 1.0, 1.0, 1.0)))) * (injectionSwitch))[1]) : _GLF_IDENTITY(_GLF_FUZZED(vec2(-419.410, -9.7)), (true ? _GLF_FUZZED(vec2(-419.410, -9.7)) : _GLF_FUZZED(vec2(7.1, 9744.5992)))))) : _GLF_FUZZED(injectionSwitch))), vec2(_GLF_FUZZED(_GLF_IDENTITY(-7751.8175, min(_GLF_IDENTITY(_GLF_IDENTITY(-7751.8175, (_GLF_IDENTITY(-7751.8175, max(_GLF_IDENTITY(-7751.8175, min(-7751.8175, -7751.8175)), -7751.8175))) / cos(0.0)), clamp(-7751.8175, _GLF_IDENTITY(-7751.8175, max(-7751.8175, -7751.8175)), -7751.8175)), -7751.8175))), _GLF_FUZZED(727.627)), bvec2(false, false)))).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))).y))), false || _GLF_IDENTITY((! (! ((injectionSwitch.x > injectionSwitch.y)))), false || ((! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), _GLF_IDENTITY(1.0, (1.0) - 0.0) * (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-766.070) : injectionSwitch.y))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) || false)), false || (bool(_GLF_IDENTITY(false, (false) || false))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if((_GLF_struct_replacement_2._f5.subgroup_local_id % 2) == 0)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))))), _GLF_IDENTITY(false || (! (injectionSwitch.x > injectionSwitch.y)), (false || (! (injectionSwitch.x > injectionSwitch.y))) || false))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), max(injectionSwitch, injectionSwitch))[1])).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, false || (false))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true))))))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   read = _GLF_IDENTITY(_GLF_IDENTITY(atomicLoad(buf[_GLF_struct_replacement_7.virtual_gid], 4, 64, 2), 0u | (atomicLoad(buf[_GLF_struct_replacement_7.virtual_gid], 4, 64, 2))), 0u | (_GLF_IDENTITY(atomicLoad(buf[_GLF_struct_replacement_7.virtual_gid], 4, 64, 2), (_GLF_IDENTITY(_GLF_IDENTITY(atomicLoad(buf[_GLF_struct_replacement_7.virtual_gid], _GLF_IDENTITY(4, (0 >> _GLF_IDENTITY(int(4), int(4))) | (4)), 64, 2), (atomicLoad(buf[_GLF_struct_replacement_7.virtual_gid], 4, 64, 2)) | _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) / 1u)))), min(_GLF_IDENTITY(atomicLoad(buf[_GLF_struct_replacement_7.virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(4, min(4, 4)), (0 >> _GLF_IDENTITY(int(4), int(4))) | (4)), 64, 2), (atomicLoad(buf[_GLF_struct_replacement_7.virtual_gid], 4, 64, 2)) | _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (0u)))), ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) / 1u)))), _GLF_IDENTITY(atomicLoad(buf[_GLF_struct_replacement_7.virtual_gid], _GLF_IDENTITY(4, (0 >> _GLF_IDENTITY(int(4), int(4))) | (4)), 64, 2), (atomicLoad(buf[_GLF_struct_replacement_7.virtual_gid], 4, 64, 2)) | _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (_GLF_IDENTITY(~ (0u), (0u << _GLF_IDENTITY(uint(0u), uint(0u))) ^ (~ (0u)))) / 1u))))))) | (atomicLoad(buf[_GLF_struct_replacement_7.virtual_gid], 4, 64, 2)))));
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), _GLF_IDENTITY(_GLF_IDENTITY(false || (_GLF_IDENTITY((false), ! (! ((false))))), true && (_GLF_IDENTITY(false || (_GLF_IDENTITY((false), ! (! ((false))))), bool(bvec4(false || (_GLF_IDENTITY((false), ! (! ((false))))), true, true, true))))), (false || (_GLF_IDENTITY((false), ! (! ((_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))))))) && true))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || false) || false), (false) || false), true)), bool(bvec4(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec3(_GLF_IDENTITY(false, (false) || false), false, true))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, (false) || false), true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, false, true)))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(vec2(mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), 1.0, length(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, abs(1.0), 1.0), vec3(0.0, abs(0.0), 0.0)), dot(vec3(1.0, abs(1.0), 1.0), vec3(0.0, abs(0.0), 0.0))), 1.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0)), (vec2(mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), 1.0, length(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, abs(1.0), 1.0), vec3(0.0, abs(0.0), _GLF_IDENTITY(0.0, max(0.0, 0.0)))), dot(vec3(1.0, abs(1.0), 1.0), vec3(0.0, abs(0.0), 0.0))), 1.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0, 1.0, 1.0, 0.0))) * vec2(1.0, 1.0)))) - vec2(0.0, 0.0))) * vec2(1.0, 1.0)).x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(vec2(mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), 1.0, length(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, abs(1.0), 1.0), vec3(0.0, abs(0.0), 0.0)), dot(vec3(1.0, abs(1.0), 1.0), vec3(0.0, abs(0.0), 0.0))), 1.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0)), (vec2(mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), 1.0, length(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, abs(1.0), 1.0), vec3(0.0, abs(0.0), _GLF_IDENTITY(0.0, max(0.0, 0.0)))), dot(vec3(1.0, abs(1.0), 1.0), vec3(0.0, abs(0.0), 0.0))), 1.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0, 1.0, 1.0, 0.0))) * vec2(1.0, 1.0)))) - vec2(0.0, 0.0))) * vec2(1.0, 1.0)).x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))), true && (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(vec2(mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), 1.0, length(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, abs(1.0), 1.0), vec3(0.0, abs(0.0), 0.0)), dot(vec3(1.0, abs(1.0), 1.0), vec3(0.0, abs(0.0), 0.0))), 1.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0)), (vec2(mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), mat2(1.0) * (max(injectionSwitch, injectionSwitch)))), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), 1.0, length(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, abs(1.0), 1.0), vec3(0.0, abs(0.0), _GLF_IDENTITY(0.0, max(0.0, 0.0)))), dot(vec3(1.0, abs(1.0), 1.0), vec3(0.0, abs(0.0), 0.0))), 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), sqrt(0.0) + (_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 0.0))) * vec2(1.0, 1.0)))) - vec2(0.0, 0.0))) * vec2(1.0, 1.0)).x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, abs(1.0) * (injectionSwitch.y))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), bvec2(bvec3(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), false))), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), bvec2(bvec3(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), false))))), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), bvec2(bvec3(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), false))))), true, true)), bvec2(bvec2(bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), bvec2(bvec3(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), false))))), true, true))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false)))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, true))))))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(939.823, 3.0)))).y, min(injectionSwitch.y, injectionSwitch.y)))) && (_GLF_IDENTITY(false, bool(bvec2(false, false)))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   _GLF_IDENTITY(read = atomicLoad(_GLF_IDENTITY(buf[_GLF_struct_replacement_7.virtual_gid], max(buf[_GLF_struct_replacement_7.virtual_gid], buf[_GLF_struct_replacement_7.virtual_gid])), 4, 64, 2), (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), ! (! (bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))))), false || (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(248.951) : injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(248.951) : injectionSwitch.x)), injectionSwitch.x)), clamp(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(248.951) : injectionSwitch.x)), injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(248.951) : injectionSwitch.x)), injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(248.951) : injectionSwitch.x)), injectionSwitch.x)))) > injectionSwitch.y))))))))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(2.5), (mat2(1.0) * (injectionSwitch))[1]), (vec2(_GLF_FUZZED(2.5), (mat2(1.0) * (injectionSwitch))[1])) * mat2(1.0)), vec2((mat2(1.0) * (injectionSwitch))[_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, max(0, 0))))], _GLF_FUZZED(_GLF_IDENTITY(8.0, _GLF_IDENTITY(_GLF_IDENTITY(float(mat2(8.0, 1.0, 0.0, 1.0)), min(float(mat2(8.0, 1.0, 0.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(float(mat2(8.0, 1.0, 0.0, 1.0)), min(float(mat2(8.0, 1.0, 0.0, 1.0)), float(mat2(8.0, 1.0, 0.0, 1.0)))), 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(float(mat2(8.0, 1.0, 0.0, 1.0)), min(float(mat2(8.0, 1.0, 0.0, 1.0)), float(mat2(8.0, 1.0, 0.0, 1.0)))), (_GLF_IDENTITY(float(mat2(8.0, 1.0, 0.0, 1.0)), min(float(mat2(8.0, 1.0, 0.0, 1.0)), float(mat2(8.0, 1.0, 0.0, 1.0))))) - 0.0))))), mix(float(_GLF_FUZZED(5.3)), float(_GLF_IDENTITY(float(mat2(8.0, 1.0, 0.0, 1.0)), min(float(mat2(8.0, 1.0, 0.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(float(mat2(8.0, 1.0, 0.0, 1.0)), min(float(mat2(8.0, 1.0, 0.0, 1.0)), float(mat2(8.0, 1.0, 0.0, 1.0)))), 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(float(mat2(8.0, 1.0, 0.0, 1.0)), min(float(mat2(8.0, 1.0, 0.0, 1.0)), float(mat2(8.0, 1.0, 0.0, 1.0)))), (_GLF_IDENTITY(float(mat2(8.0, 1.0, 0.0, 1.0)), min(float(mat2(8.0, 1.0, 0.0, 1.0)), float(mat2(8.0, 1.0, 0.0, 1.0))))) - 0.0)))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bvec2(true, _GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec2(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), true)))))), (((injectionSwitch.x > injectionSwitch.y))) || false) || false)))))).x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y), ! (! _GLF_IDENTITY((bool(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y)), true && ((bool(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y))))))))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), ! (! (bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * sqrt(1.0))))))))), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((! (bool(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3x2(injectionSwitch.x, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), min(_GLF_IDENTITY((1.0), min((1.0), (1.0))), (1.0))) - 0.0), 1.0)), 0.0, 0.0, 1.0, abs(0.0)), mat2(1.0) * (mat3x2(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(abs(0.0), mix(float(abs(0.0)), float(_GLF_FUZZED(50.95)), bool(false)))))))) > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) + vec2(0.0, 0.0)).y))), bool(bvec3((! (bool(injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), true))))))))))))))) ? _GLF_FUZZED(subgroup_id) : read = atomicLoad(buf[_GLF_struct_replacement_7.virtual_gid], 4, 64, 2)));
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, true))))), (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, true)))))) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y))))))))))))
  barrier();
 subgroupBarrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y), ! (! (_GLF_IDENTITY(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y), false || (bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y))))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y), ! (! (_GLF_IDENTITY(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y), false || (bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y)))))))), (! (bool(_GLF_IDENTITY(bool(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (injectionSwitch) + vec2(0.0, 0.0)).y), ! (! (_GLF_IDENTITY(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y), false || (bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y))))))))) && true)))) || false))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bool(false)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(checker[_GLF_struct_replacement_7.virtual_gid], read, 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
