#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))))))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, clamp(_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)).x, _GLF_IDENTITY(min(gl_WorkGroupSize.x, gl_WorkGroupSize.x), (min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)) ^ 0u))) ^ 0u), _GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), gl_WorkGroupSize.x));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true)))))))
  barrier();
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, max(workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, ~ (~ _GLF_IDENTITY((workgroup_id), uint(_GLF_ONE(1.0, injectionSwitch.y)) * ((workgroup_id))))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, ~ (~ _GLF_IDENTITY((workgroup_id), uint(_GLF_ONE(1.0, injectionSwitch.y)) * ((workgroup_id))))), 0u ^ (_GLF_IDENTITY(workgroup_id, ~ (~ _GLF_IDENTITY((workgroup_id), uint(_GLF_ONE(1.0, injectionSwitch.y)) * ((workgroup_id)))))))) ^ 0u)));
 uint subgroup_base = subgroup_id * subgroup_size;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + 0u), (workgroup_base + _GLF_IDENTITY(subgroup_base, clamp(_GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base))), subgroup_base, _GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, subgroup_base)))) + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + 0u)) | (_GLF_IDENTITY(workgroup_base + subgroup_base + _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(workgroup_id)))) + 0u), (_GLF_IDENTITY(workgroup_base + subgroup_base + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + 0u), 1u * (workgroup_base + subgroup_base + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + 0u)))) | (workgroup_base + subgroup_base + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + 0u)))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), 1u * (((subgroup_local_id + 1) % subgroup_size))), max(_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)), (((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(usubBorrow(virtual_gid, workgroup_base, num_workgroup)) : subgroup_size)), _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u))), (subgroup_size) ^ 0u))) - (0u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (true ? uint(5u) : _GLF_FUZZED(workgroup_size)))))), 1u * (((subgroup_local_id + 1) % subgroup_size))), _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), 1u * (((subgroup_local_id + 1) % subgroup_size))), _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (_GLF_IDENTITY(false, true && (false)) ? _GLF_IDENTITY(_GLF_FUZZED(packUnorm4x8(vec4(69.28, _GLF_IDENTITY(-3.0, clamp(_GLF_IDENTITY(-3.0, mix(float(_GLF_FUZZED(8504.3154)), float(-3.0), bool(true))), -3.0, -3.0)), -110.990, 178.637))), (false ? _GLF_FUZZED(workgroup_size) : _GLF_FUZZED(packUnorm4x8(vec4(69.28, -3.0, -110.990, _GLF_IDENTITY(178.637, (178.637) * 1.0)))))) : 0u)), 0u, 0u)), min(0u, 0u)) | (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(1u * ((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, clamp((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)))), 0u ^ (1u * (((subgroup_local_id + 1) % subgroup_size)))))))));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) && true))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, true), true)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))), ((! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))) || false)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))))), (injectionSwitch.x > injectionSwitch.y))), true, false, true)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false, true))), (! (bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false, true)))) && true)), (_GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false, true))), (! (bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false, true)))) && true)), (! (_GLF_IDENTITY(! (bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false, true))), _GLF_IDENTITY((! (bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false, true)))) && true, (_GLF_IDENTITY((! (bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false, true)))) && true, ! (! ((! (bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false, true)))) && true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 uint read = 0;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), (min(injectionSwitch.y, injectionSwitch.y)) / 1.0))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 atomicStore(buf[next_virtual_gid], uint(1), 4, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, min(64, 64))) >> 0), 4);
 if((_GLF_IDENTITY(subgroup_local_id % 2, clamp(subgroup_local_id % 2, _GLF_IDENTITY(subgroup_local_id % 2, uint(uvec2(subgroup_local_id % 2, 1u))), _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) % 2))) == _GLF_IDENTITY(0, _GLF_IDENTITY(int(int(0)), _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(51545), (_GLF_FUZZED(51545)) ^ 0) : int(int(0)), _GLF_IDENTITY((false ? _GLF_FUZZED(51545) : int(int(0))), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY((false ? _GLF_FUZZED(51545) : int(int(0))), max((false ? _GLF_FUZZED(51545) : int(int(0))), _GLF_IDENTITY((false ? _GLF_FUZZED(51545) : _GLF_IDENTITY(int(int(0)), (int(int(0))) / int(_GLF_ONE(1.0, injectionSwitch.y)))), 0 ^ ((false ? _GLF_FUZZED(51545) : int(_GLF_IDENTITY(int(0), 0 ^ (int(0))))))))))), (_GLF_IDENTITY((~ (_GLF_IDENTITY((false ? _GLF_FUZZED(51545) : int(int(0))), max((false ? _GLF_FUZZED(51545) : int(int(0))), _GLF_IDENTITY((false ? _GLF_FUZZED(51545) : _GLF_IDENTITY(int(int(0)), (int(int(0))) / int(_GLF_ONE(1.0, injectionSwitch.y)))), 0 ^ ((false ? _GLF_FUZZED(51545) : int(_GLF_IDENTITY(int(0), 0 ^ (int(0))))))))))), max((~ (_GLF_IDENTITY((false ? _GLF_FUZZED(51545) : int(int(0))), max((false ? _GLF_FUZZED(51545) : int(int(0))), _GLF_IDENTITY((false ? _GLF_FUZZED(51545) : _GLF_IDENTITY(int(int(0)), (int(int(0))) / int(_GLF_ONE(1.0, injectionSwitch.y)))), 0 ^ ((false ? _GLF_FUZZED(51545) : int(_GLF_IDENTITY(int(0), 0 ^ (int(0))))))))))), (~ (_GLF_IDENTITY((false ? _GLF_FUZZED(51545) : int(int(0))), max((false ? _GLF_FUZZED(51545) : int(int(0))), _GLF_IDENTITY((false ? _GLF_FUZZED(51545) : _GLF_IDENTITY(int(int(0)), (int(int(0))) / int(_GLF_ONE(1.0, injectionSwitch.y)))), 0 ^ ((false ? _GLF_FUZZED(51545) : int(_GLF_IDENTITY(int(0), 0 ^ (int(0)))))))))))))) | (_GLF_IDENTITY((~ (_GLF_IDENTITY((false ? _GLF_FUZZED(51545) : int(int(0))), max((false ? _GLF_FUZZED(51545) : int(int(0))), _GLF_IDENTITY((false ? _GLF_FUZZED(51545) : _GLF_IDENTITY(int(int(0)), (int(int(0))) / int(_GLF_ONE(1.0, injectionSwitch.y)))), 0 ^ ((false ? _GLF_FUZZED(51545) : int(_GLF_IDENTITY(int(0), 0 ^ (int(0))))))))))), ~ (~ ((~ (_GLF_IDENTITY((false ? _GLF_FUZZED(51545) : int(int(0))), max((false ? _GLF_FUZZED(51545) : int(int(0))), _GLF_IDENTITY((false ? _GLF_FUZZED(51545) : _GLF_IDENTITY(int(int(0)), (int(int(0))) / int(_GLF_ONE(1.0, injectionSwitch.y)))), 0 ^ ((false ? _GLF_FUZZED(51545) : int(_GLF_IDENTITY(int(0), 0 ^ (int(0))))))))))))))))) >> _GLF_IDENTITY(0, (_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (0) << 0)))) + 0))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(51545) : int(int(0))), max(_GLF_IDENTITY((false ? _GLF_FUZZED(51545) : int(int(0))), int(ivec3((false ? _GLF_FUZZED(51545) : int(int(0))), 0, 0))), _GLF_IDENTITY((false ? _GLF_FUZZED(51545) : int(int(0))), (_GLF_IDENTITY((false ? _GLF_FUZZED(51545) : int(int(0))), int(ivec4((false ? _GLF_FUZZED(51545) : int(int(0))), 0, 0, 0)))) ^ 0))), (true ? (false ? _GLF_FUZZED(51545) : int(int(0))) : _GLF_FUZZED(-69831))), (false ? _GLF_FUZZED(51545) : int(int(0))), _GLF_IDENTITY((false ? _GLF_FUZZED(51545) : int(int(0))), (_GLF_IDENTITY((false ? _GLF_FUZZED(51545) : int(int(0))), clamp((false ? _GLF_FUZZED(51545) : int(int(0))), (false ? _GLF_FUZZED(51545) : int(int(0))), _GLF_IDENTITY((false ? _GLF_FUZZED(51545) : int(int(0))), ((false ? _GLF_FUZZED(51545) : int(int(0)))) << 0)))) ^ 0))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   read = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec2(virtual_gid, 1u)), (uint(uvec2(virtual_gid, 1u))) << 0u))], _GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(1 * _GLF_IDENTITY((4), max((4), (4))), max(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0) * (4), (1 * (4)) | (_GLF_IDENTITY(1 * (4), _GLF_IDENTITY(_GLF_IDENTITY((1 * (4)) | (1 * (4)), (false ? _GLF_FUZZED(-81528) : (1 * (4)) | (1 * (4)))), 0 | (_GLF_IDENTITY((1 * (4)) | (1 * (4)), (false ? _GLF_FUZZED(-81528) : (1 * (4)) | (1 * (4))))))))), 1 * (4)))), max(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(1 * (4), _GLF_IDENTITY(max(_GLF_IDENTITY(1 * (4), (1 * (4)) | (_GLF_IDENTITY(1 * (4), _GLF_IDENTITY((1 * (4)) | (1 * (4)), (false ? _GLF_FUZZED(-81528) : _GLF_IDENTITY((1 * (4)), clamp(_GLF_IDENTITY((1 * (4)), int(ivec4(_GLF_IDENTITY((1 * (4)), int(ivec4((1 * (4)), 1, 1, 0))), 1, 0, 0))), (1 * (4)), _GLF_IDENTITY((1 * (4)), (_GLF_IDENTITY((1 * (4)), 0 ^ ((1 * (4))))) ^ 0))) | (1 * (4))))))), 1 * (4)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(max(_GLF_IDENTITY(1 * (4), (1 * (4)) | (_GLF_IDENTITY(1 * (4), _GLF_IDENTITY((1 * (4)) | (1 * (4)), (false ? _GLF_FUZZED(-81528) : (1 * (4)) | (1 * (4))))))), _GLF_IDENTITY(1 * (4), (_GLF_IDENTITY(1 * (4), (_GLF_IDENTITY(1 * (4), (true ? 1 * (4) : _GLF_FUZZED(77323)))) ^ 0)) * 1)), (max(_GLF_IDENTITY(1 * (4), (1 * (4)) | (_GLF_IDENTITY(1 * (4), _GLF_IDENTITY((1 * (4)) | (1 * (4)), (false ? _GLF_FUZZED(-81528) : (1 * (4)) | (1 * (4))))))), 1 * (4))) >> 0)), (~ (_GLF_IDENTITY(max(_GLF_IDENTITY(1 * (4), (1 * (4)) | (_GLF_IDENTITY(1 * (4), _GLF_IDENTITY((1 * (4)) | (1 * (4)), (false ? _GLF_FUZZED(-81528) : (1 * (4)) | (1 * (4))))))), 1 * (4)), (max(_GLF_IDENTITY(1 * (4), (1 * (4)) | (_GLF_IDENTITY(1 * (4), _GLF_IDENTITY((1 * (4)) | (1 * (4)), (false ? _GLF_FUZZED(-81528) : (1 * (4)) | (1 * (4))))))), 1 * (4))) >> 0))) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(max(_GLF_IDENTITY(1 * (4), (_GLF_IDENTITY(1 * (4), (1 * (4)) ^ 0)) | (_GLF_IDENTITY(1 * (4), _GLF_IDENTITY((1 * (4)) | (1 * (4)), (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))))) ? _GLF_FUZZED(-81528) : (1 * (4)) | (1 * (4))))))), 1 * (4)), (max(_GLF_IDENTITY(1 * (4), (1 * (4)) | (_GLF_IDENTITY(1 * (4), _GLF_IDENTITY((1 * (4)) | (1 * (4)), (false ? _GLF_FUZZED(-81528) : (1 * (4)) | (1 * (4))))))), 1 * (4))) >> 0)), min(~ (_GLF_IDENTITY(max(_GLF_IDENTITY(1 * (4), (1 * (4)) | (_GLF_IDENTITY(1 * (4), _GLF_IDENTITY((1 * (4)) | (1 * (4)), (false ? _GLF_FUZZED(-81528) : (1 * (4)) | (1 * (4))))))), 1 * (4)), _GLF_IDENTITY((max(_GLF_IDENTITY(1 * (4), (1 * (4)) | (_GLF_IDENTITY(1 * (4), _GLF_IDENTITY((1 * (4)) | (1 * (4)), (false ? _GLF_FUZZED(-81528) : (1 * (4)) | (1 * (4))))))), 1 * (4))), (_GLF_IDENTITY((max(_GLF_IDENTITY(1 * (4), (1 * (4)) | (_GLF_IDENTITY(1 * (4), _GLF_IDENTITY((1 * (4)) | (1 * (4)), (false ? _GLF_FUZZED(-81528) : (1 * (4)) | (1 * (4))))))), 1 * (4))), 0 | ((max(_GLF_IDENTITY(1 * (4), (1 * (4)) | (_GLF_IDENTITY(1 * (4), _GLF_IDENTITY((1 * (4)) | (1 * (4)), (false ? _GLF_FUZZED(-81528) : (1 * (4)) | (1 * (4))))))), 1 * (4)))))) - 0) >> 0)), ~ (_GLF_IDENTITY(max(_GLF_IDENTITY(1 * (4), (1 * (4)) | (_GLF_IDENTITY(1 * (4), _GLF_IDENTITY((1 * (4)) | (1 * (_GLF_IDENTITY(4, (0 >> _GLF_IDENTITY(int(7), int(7))) | (_GLF_IDENTITY(4, 0 | (4)))))), (false ? _GLF_FUZZED(-81528) : (1 * (4)) | (1 * (4))))))), 1 * (4)), (max(_GLF_IDENTITY(1 * (4), (1 * (4)) | (_GLF_IDENTITY(1 * (4), _GLF_IDENTITY((1 * (4)) | (1 * (4)), (false ? _GLF_FUZZED(-81528) : (1 * (4)) | (1 * (4))))))), 1 * (4))) >> 0)))))))))), _GLF_IDENTITY(0 + (_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(1 * (4), max(_GLF_IDENTITY(1 * (4), (1 * (4)) | (_GLF_IDENTITY(1 * (4), _GLF_IDENTITY((1 * (4)) | (1 * (4)), (false ? _GLF_FUZZED(-81528) : (1 * (4)) | (1 * (4))))))), 1 * (_GLF_IDENTITY(4, min(4, 4)))))), min(_GLF_IDENTITY(4, _GLF_IDENTITY(1 * (4), max(_GLF_IDENTITY(1 * (4), (1 * (4)) | (_GLF_IDENTITY(1 * (4), _GLF_IDENTITY((1 * (4)) | (1 * (4)), (false ? _GLF_FUZZED(-81528) : (1 * (4)) | (1 * (4))))))), 1 * (4)))), _GLF_IDENTITY(4, _GLF_IDENTITY(1 * (4), max(_GLF_IDENTITY(1 * (4), (1 * (4)) | (_GLF_IDENTITY(1 * (4), _GLF_IDENTITY((1 * (4)) | (1 * (4)), (false ? _GLF_FUZZED(-81528) : (1 * (4)) | _GLF_IDENTITY((1 * (4)), max((1 * (4)), (1 * (4))))))))), 1 * (4))))))), 1 * (0 + (_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(1 * (4), max(_GLF_IDENTITY(1 * (4), (1 * (4)) | (_GLF_IDENTITY(1 * (4), _GLF_IDENTITY((1 * (4)) | (1 * (4)), (false ? _GLF_FUZZED(-81528) : (1 * (4)) | (1 * (4))))))), 1 * (_GLF_IDENTITY(4, min(4, 4)))))), min(_GLF_IDENTITY(4, _GLF_IDENTITY(1 * (4), max(_GLF_IDENTITY(1 * (4), (1 * (4)) | (_GLF_IDENTITY(1 * (4), _GLF_IDENTITY((1 * (4)) | (1 * (4)), (false ? _GLF_FUZZED(-81528) : (1 * (4)) | (1 * (4))))))), 1 * (4)))), _GLF_IDENTITY(4, _GLF_IDENTITY(1 * (4), max(_GLF_IDENTITY(1 * (4), (1 * (4)) | (_GLF_IDENTITY(1 * (4), _GLF_IDENTITY((1 * (4)) | (1 * (4)), (false ? _GLF_FUZZED(-81528) : (1 * (4)) | _GLF_IDENTITY((1 * (4)), max((1 * (4)), _GLF_IDENTITY((1 * (4)), min(_GLF_IDENTITY((1 * (4)), ((1 * (4))) | (0 >> _GLF_IDENTITY(int(5), int(5)))), _GLF_IDENTITY((1 * (4)), max(_GLF_IDENTITY((1 * (4)), ((1 * (4))) | ((1 * (4)))), (1 * (4))))))))))))), 1 * (4)))))))))), _GLF_IDENTITY(4, _GLF_IDENTITY(1 * (4), max(_GLF_IDENTITY(1 * (4), (1 * (4)) | (_GLF_IDENTITY(1 * (4), _GLF_IDENTITY((1 * (4)) | (1 * (4)), (false ? _GLF_FUZZED(-81528) : (1 * (4)) | (1 * (4))))))), 1 * (4))))))))), (false ? _GLF_FUZZED(987) : _GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(1 * _GLF_IDENTITY((4), max((4), (4))), max(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0) * (4), (1 * (4)) | (_GLF_IDENTITY(1 * (4), _GLF_IDENTITY((1 * (4)) | (1 * (4)), (false ? _GLF_FUZZED(-81528) : (1 * (4)) | (1 * (4))))))), 1 * (4)))), max(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(1 * (4), _GLF_IDENTITY(max(_GLF_IDENTITY(1 * (4), (1 * (4)) | (_GLF_IDENTITY(1 * (4), _GLF_IDENTITY((1 * (4)) | (1 * (4)), (false ? _GLF_FUZZED(-81528) : (1 * (4)) | (1 * (4))))))), 1 * (4)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(max(_GLF_IDENTITY(1 * (4), (1 * (4)) | (_GLF_IDENTITY(1 * (4), _GLF_IDENTITY((1 * (4)) | (1 * (_GLF_IDENTITY(4, max(4, 4)))), (false ? _GLF_FUZZED(-81528) : (1 * (4)) | _GLF_IDENTITY((1 * (4)), clamp((1 * (4)), (1 * (4)), (1 * (4))))))))), 1 * _GLF_IDENTITY((4), 0 ^ ((4)))), (max(_GLF_IDENTITY(1 * (4), (1 * (4)) | (_GLF_IDENTITY(1 * (4), _GLF_IDENTITY((1 * (4)) | (1 * (4)), (false ? _GLF_FUZZED(-81528) : (1 * (4)) | (1 * (4))))))), 1 * (4))) >> 0)), (~ (_GLF_IDENTITY(max(_GLF_IDENTITY(1 * (4), _GLF_IDENTITY((1 * (4)), ((1 * (4))) >> 0) | (_GLF_IDENTITY(1 * (4), _GLF_IDENTITY((1 * (4)) | (1 * (4)), (false ? _GLF_FUZZED(-81528) : (1 * (4)) | (1 * (4))))))), 1 * (4)), (max(_GLF_IDENTITY(1 * (4), (1 * (4)) | (_GLF_IDENTITY(1 * (4), _GLF_IDENTITY((1 * (4)) | (1 * (4)), (false ? _GLF_FUZZED(-81528) : (1 * (4)) | (1 * (4))))))), 1 * (4))) >> 0))) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(max(_GLF_IDENTITY(1 * (4), (1 * (4)) | (_GLF_IDENTITY(1 * (4), _GLF_IDENTITY((1 * (4)) | (1 * (4)), _GLF_IDENTITY((false ? _GLF_FUZZED(-81528) : (1 * (4)) | (1 * (4))), min((false ? _GLF_FUZZED(-81528) : (1 * (4)) | (1 * (4))), (false ? _GLF_FUZZED(-81528) : (1 * (4)) | (1 * (4))))))))), 1 * (4)), (max(_GLF_IDENTITY(1 * (4), (1 * (4)) | (_GLF_IDENTITY(1 * (4), _GLF_IDENTITY((1 * (4)) | (1 * (4)), (false ? _GLF_FUZZED(-81528) : (1 * (4)) | (1 * (4))))))), 1 * (4))) >> 0)), min(~ (_GLF_IDENTITY(max(_GLF_IDENTITY(1 * (4), (1 * (4)) | (_GLF_IDENTITY(1 * (4), _GLF_IDENTITY((1 * (4)) | (1 * (4)), (false ? _GLF_FUZZED(-81528) : (1 * _GLF_IDENTITY((4), 0 ^ ((4)))) | (1 * (4))))))), 1 * (4)), (max(_GLF_IDENTITY(1 * (4), (1 * (4)) | (_GLF_IDENTITY(1 * (4), _GLF_IDENTITY((1 * (4)) | (1 * (4)), (false ? _GLF_FUZZED(-81528) : (1 * (4)) | (1 * (4))))))), 1 * (4))) >> 0)), ~ (_GLF_IDENTITY(max(_GLF_IDENTITY(1 * (4), (1 * (4)) | (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) / (1 | 1)) * (4), _GLF_IDENTITY((1 * (4)) | (1 * (4)), (false ? _GLF_FUZZED(-81528) : (1 * (4)) | (1 * (4))))))), 1 * (4)), (max(_GLF_IDENTITY(1 * (4), (1 * (4)) | (_GLF_IDENTITY(1 * (4), _GLF_IDENTITY((1 * (4)) | (1 * (4)), (false ? _GLF_FUZZED(-81528) : (1 * (4)) | (1 * (4))))))), 1 * (4))) >> 0)))))))))), 0 + (_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(1 * (4), max(_GLF_IDENTITY(1 * (4), (1 * (4)) | (_GLF_IDENTITY(1 * (4), _GLF_IDENTITY((1 * (4)) | (1 * (4)), (false ? _GLF_FUZZED(-81528) : (1 * (4)) | _GLF_IDENTITY((1 * (4)), 0 + ((1 * (4))))))))), 1 * (_GLF_IDENTITY(4, min(4, 4)))))), min(_GLF_IDENTITY(4, _GLF_IDENTITY(1 * (4), max(_GLF_IDENTITY(1 * (4), (1 * (4)) | (_GLF_IDENTITY(1 * (4), _GLF_IDENTITY((1 * (4)) | (1 * (4)), (false ? _GLF_FUZZED(-81528) : (1 * (4)) | (1 * (4))))))), 1 * (4)))), _GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY(1 * (4), max(_GLF_IDENTITY(1 * (4), (1 * (4)) | (_GLF_IDENTITY(1 * (4), _GLF_IDENTITY((1 * (4)) | (1 * (4)), (false ? _GLF_FUZZED(-81528) : (1 * (4)) | _GLF_IDENTITY((1 * (4)), max((1 * (4)), (1 * (4))))))))), 1 * (4))), (_GLF_IDENTITY(_GLF_IDENTITY(1 * (4), max(_GLF_IDENTITY(1 * (4), (1 * (4)) | (_GLF_IDENTITY(1 * (4), _GLF_IDENTITY((1 * (4)) | (1 * (4)), (false ? _GLF_FUZZED(-81528) : (1 * (4)) | _GLF_IDENTITY((1 * (4)), max((1 * (4)), (1 * (4))))))))), 1 * (4))), max(_GLF_IDENTITY(1 * (4), max(_GLF_IDENTITY(1 * (4), (1 * (4)) | (_GLF_IDENTITY(1 * (4), _GLF_IDENTITY((1 * (4)) | (1 * (4)), (false ? _GLF_FUZZED(-81528) : (1 * (4)) | _GLF_IDENTITY((1 * (4)), max((1 * (4)), (1 * (4))))))))), 1 * (4))), _GLF_IDENTITY(1 * (4), max(_GLF_IDENTITY(1 * (4), (1 * (4)) | (_GLF_IDENTITY(1 * (4), _GLF_IDENTITY((1 * (4)) | (1 * (4)), (false ? _GLF_FUZZED(-81528) : (1 * (4)) | _GLF_IDENTITY((1 * (4)), max((1 * (4)), (1 * (4))))))))), 1 * (4)))))) | (_GLF_IDENTITY(1 * (4), max(_GLF_IDENTITY(1 * (4), (1 * (4)) | (_GLF_IDENTITY(1 * (4), _GLF_IDENTITY((1 * (4)) | (1 * (4)), (false ? _GLF_FUZZED(-81528) : (1 * (4)) | _GLF_IDENTITY((1 * (4)), max((1 * (4)), (1 * (4))))))))), 1 * (4)))))))))), _GLF_IDENTITY(4, _GLF_IDENTITY(1 * (4), max(_GLF_IDENTITY(1 * (4), (1 * (4)) | (_GLF_IDENTITY(1 * (4), _GLF_IDENTITY((1 * (4)) | (1 * (4)), (false ? _GLF_FUZZED(-81528) : (1 * (4)) | (1 * (4))))))), 1 * (4))))))))), min(_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(1 * _GLF_IDENTITY((4), max((4), (4))), max(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0) * (4), (1 * (4)) | (_GLF_IDENTITY(1 * _GLF_IDENTITY((4), ((4)) << 0), _GLF_IDENTITY((1 * _GLF_IDENTITY((4), (_GLF_IDENTITY((4), min((4), (4)))) | (_GLF_IDENTITY((4), min((4), (4)))))) | (1 * (4)), (false ? _GLF_FUZZED(-81528) : (1 * (4)) | (1 * (4))))))), 1 * (4)))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(4, int(int(4))), 0, 1)), (int(ivec3(_GLF_IDENTITY(4, int(int(4))), 0, 1))) | (int(ivec3(_GLF_IDENTITY(4, int(int(4))), 0, 1))))), _GLF_IDENTITY(1 * (4), _GLF_IDENTITY(max(_GLF_IDENTITY(1 * (4), (1 * (4)) | (_GLF_IDENTITY(1 * (4), _GLF_IDENTITY((1 * (4)) | (1 * (4)), (false ? _GLF_FUZZED(-81528) : (1 * (4)) | (1 * (4))))))), 1 * (4)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(max(_GLF_IDENTITY(1 * (4), (1 * (4)) | (_GLF_IDENTITY(1 * (4), _GLF_IDENTITY((1 * (4)) | (1 * (4)), _GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false) ? _GLF_FUZZED(-81528) : (1 * (4)) | (1 * (4))), min(_GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false) ? _GLF_FUZZED(-81528) : (1 * (4)) | (1 * (4))), (true ? (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false) ? _GLF_FUZZED(-81528) : (1 * (4)) | (1 * (4))) : _GLF_FUZZED(-48594))), (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false) ? _GLF_FUZZED(-81528) : (1 * (4)) | (1 * (4))))))))), 1 * (4)), (max(_GLF_IDENTITY(1 * (4), (1 * _GLF_IDENTITY((4), int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY((4), ~ (~ ((4)))), 0, 1, 0), ~ (_GLF_IDENTITY(~ (ivec4(_GLF_IDENTITY((4), ~ (~ ((4)))), 0, 1, 0)), (~ (ivec4(_GLF_IDENTITY((4), ~ (~ ((4)))), 0, 1, 0))) | (~ (ivec4(_GLF_IDENTITY((4), ~ (~ ((4)))), 0, 1, 0))))))))) | (_GLF_IDENTITY(1 * (4), _GLF_IDENTITY((1 * (4)) | (1 * (4)), _GLF_IDENTITY((false ? _GLF_FUZZED(-81528) : (1 * (4)) | (1 * (4))), (_GLF_IDENTITY((false ? _GLF_FUZZED(-81528) : (1 * (4)) | (1 * (4))), (true ? _GLF_IDENTITY((false ? _GLF_FUZZED(-81528) : (1 * (4)) | (1 * (4))), min((false ? _GLF_FUZZED(-81528) : (1 * (4)) | (1 * (4))), (false ? _GLF_FUZZED(-81528) : (1 * (4)) | (1 * (4))))) : _GLF_FUZZED(43167)))) >> 0))))), 1 * (4))) >> 0)), (~ (_GLF_IDENTITY(max(_GLF_IDENTITY(1 * (4), (1 * (4)) | (_GLF_IDENTITY(1 * (4), _GLF_IDENTITY((1 * (4)) | (_GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, (1) - 0), 1, 1, 0), (ivec4(_GLF_IDENTITY(1, (1) - 0), 1, 1, 0)) << ivec4(0, 0, 0, 0))), (int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, (1) - 0), 1, 1, 0), (ivec4(_GLF_IDENTITY(1, (1) - 0), 1, 1, 0)) << ivec4(0, 0, 0, 0)))) | (int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, (1) - 0), 1, 1, 0), (ivec4(_GLF_IDENTITY(1, (1) - 0), 1, 1, 0)) << ivec4(0, 0, 0, 0)))))) * (4)), (false ? _GLF_FUZZED(-81528) : (1 * (4)) | (1 * (_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, 0 ^ (4)), _GLF_IDENTITY(4, 0 ^ (4))))))))))), 1 * (4)), (max(_GLF_IDENTITY(1 * (4), (1 * (4)) | (_GLF_IDENTITY(1 * (4), _GLF_IDENTITY((_GLF_IDENTITY(1, (false ? _GLF_FUZZED((false ? -17068 : -48211)) : 1)) * (4)) | (1 * (4)), (false ? _GLF_FUZZED(-81528) : (1 * (4)) | (1 * (4))))))), 1 * (4))) >> 0))) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(1 * (4), (1 * (4)) | (_GLF_IDENTITY(1 * (4), _GLF_IDENTITY((1 * (4)) | (1 * (4)), (false ? _GLF_FUZZED(-81528) : (1 * (4)) | (1 * (4))))))), (_GLF_IDENTITY(1 * (4), (1 * (4)) | (_GLF_IDENTITY(1 * (4), _GLF_IDENTITY((1 * (4)) | (1 * (4)), (false ? _GLF_FUZZED(-81528) : (1 * (4)) | (1 * (4)))))))) >> 0), 1 * (4)), (max(_GLF_IDENTITY(1 * (4), (1 * (4)) | (_GLF_IDENTITY(1 * (4), _GLF_IDENTITY((1 * (4)) | (1 * (4)), (false ? _GLF_FUZZED(-81528) : (1 * (4)) | (1 * (4))))))), 1 * (4))) >> 0)), min(~ (_GLF_IDENTITY(max(_GLF_IDENTITY(1 * (_GLF_IDENTITY(4, (4) + 0)), (1 * (4)) | (_GLF_IDENTITY(1 * (4), _GLF_IDENTITY((1 * (4)) | (1 * (4)), (false ? _GLF_FUZZED(-81528) : (1 * (4)) | (1 * (4))))))), 1 * (4)), (_GLF_IDENTITY(max(_GLF_IDENTITY(1 * (4), (1 * (4)) | (_GLF_IDENTITY(1 * (4), _GLF_IDENTITY((1 * (4)) | (1 * (4)), (false ? _GLF_FUZZED(-81528) : (1 * (4)) | (1 * (4))))))), 1 * (4)), (max(_GLF_IDENTITY(1 * (4), (1 * (4)) | (_GLF_IDENTITY(1 * (4), _GLF_IDENTITY((1 * (4)) | (1 * (4)), (false ? _GLF_FUZZED(-81528) : (1 * (4)) | (1 * (4))))))), 1 * (4))) >> 0)) >> 0)), ~ _GLF_IDENTITY((_GLF_IDENTITY(max(_GLF_IDENTITY(1 * (4), (1 * (4)) | (_GLF_IDENTITY(1 * (4), _GLF_IDENTITY((1 * (4)) | (1 * (4)), (false ? _GLF_FUZZED(-81528) : (1 * (4)) | (1 * (4))))))), 1 * (4)), (max(_GLF_IDENTITY(1 * (4), (1 * (4)) | (_GLF_IDENTITY(1 * (4), _GLF_IDENTITY((1 * (4)) | (1 * (4)), (false ? _GLF_FUZZED(-81528) : _GLF_IDENTITY((1 * (4)) | (1 * (4)), clamp((1 * (4)) | (1 * (4)), (1 * (4)) | (1 * (4)), (1 * (4)) | (1 * (4))))))))), 1 * (4))) >> 0)), min((_GLF_IDENTITY(max(_GLF_IDENTITY(1 * (4), (1 * (4)) | (_GLF_IDENTITY(1 * (4), _GLF_IDENTITY((1 * (4)) | (1 * (4)), (false ? _GLF_FUZZED(-81528) : (1 * (4)) | (1 * (4))))))), 1 * (4)), (max(_GLF_IDENTITY(1 * (4), (1 * (4)) | (_GLF_IDENTITY(1 * (4), _GLF_IDENTITY((1 * (4)) | (1 * (4)), (false ? _GLF_FUZZED(-81528) : _GLF_IDENTITY((1 * (4)) | (1 * (4)), clamp((1 * (4)) | (1 * (4)), (1 * (4)) | (1 * (4)), (1 * (4)) | (1 * (4))))))))), 1 * (4))) >> 0)), _GLF_IDENTITY((_GLF_IDENTITY(max(_GLF_IDENTITY(1 * (4), (1 * (4)) | (_GLF_IDENTITY(1 * (4), _GLF_IDENTITY((1 * (4)) | (1 * (4)), (false ? _GLF_FUZZED(-81528) : (1 * (4)) | (1 * (4))))))), 1 * (4)), (max(_GLF_IDENTITY(1 * (4), (1 * (4)) | (_GLF_IDENTITY(1 * (4), _GLF_IDENTITY((1 * (4)) | (1 * (4)), (false ? _GLF_FUZZED(-81528) : _GLF_IDENTITY((1 * (4)) | (1 * (4)), clamp((1 * (4)) | (1 * (4)), (1 * (4)) | (1 * (4)), (1 * (4)) | (1 * (4))))))))), 1 * (4))) >> 0)), (false ? _GLF_FUZZED(28106) : _GLF_IDENTITY((_GLF_IDENTITY(max(_GLF_IDENTITY(1 * (4), (1 * (4)) | (_GLF_IDENTITY(1 * (4), _GLF_IDENTITY((1 * (4)) | (1 * (4)), (false ? _GLF_FUZZED(-81528) : (1 * (4)) | (1 * (4))))))), 1 * (4)), (max(_GLF_IDENTITY(1 * (4), (1 * (4)) | (_GLF_IDENTITY(1 * (4), _GLF_IDENTITY((1 * (4)) | (1 * (4)), (false ? _GLF_FUZZED(-81528) : _GLF_IDENTITY((1 * (4)) | (1 * (4)), clamp((1 * (4)) | (1 * (4)), (1 * (4)) | (1 * (4)), (1 * (4)) | (1 * (4))))))))), 1 * (4))) >> 0)), clamp((_GLF_IDENTITY(max(_GLF_IDENTITY(1 * (4), (1 * (4)) | (_GLF_IDENTITY(1 * (4), _GLF_IDENTITY((1 * (4)) | (1 * (4)), (false ? _GLF_FUZZED(-81528) : (1 * (4)) | (1 * (4))))))), 1 * (4)), (max(_GLF_IDENTITY(1 * (4), (1 * (4)) | (_GLF_IDENTITY(1 * (4), _GLF_IDENTITY((1 * (4)) | (1 * (4)), (false ? _GLF_FUZZED(-81528) : _GLF_IDENTITY((1 * (4)) | (1 * (4)), clamp((1 * (4)) | (1 * (4)), (1 * (4)) | (1 * (4)), (1 * (4)) | (1 * (4))))))))), 1 * (4))) >> 0)), (_GLF_IDENTITY(max(_GLF_IDENTITY(1 * (4), (1 * (4)) | (_GLF_IDENTITY(1 * (4), _GLF_IDENTITY((1 * (4)) | (1 * (4)), (false ? _GLF_FUZZED(-81528) : (1 * (4)) | (1 * (4))))))), 1 * (4)), (max(_GLF_IDENTITY(1 * (4), (1 * (4)) | (_GLF_IDENTITY(1 * (4), _GLF_IDENTITY((1 * (4)) | (1 * (4)), (false ? _GLF_FUZZED(-81528) : _GLF_IDENTITY((1 * (4)) | (1 * (4)), clamp((1 * (4)) | (1 * (4)), (1 * (4)) | (1 * (4)), (1 * (4)) | (1 * (4))))))))), 1 * (4))) >> 0)), (_GLF_IDENTITY(max(_GLF_IDENTITY(1 * (4), (1 * (4)) | (_GLF_IDENTITY(1 * (4), _GLF_IDENTITY((1 * (4)) | (1 * (4)), (false ? _GLF_FUZZED(-81528) : (1 * (4)) | (1 * (4))))))), 1 * (4)), (max(_GLF_IDENTITY(1 * (4), (1 * (4)) | (_GLF_IDENTITY(1 * (4), _GLF_IDENTITY((1 * (4)) | (1 * (4)), (false ? _GLF_FUZZED(-81528) : _GLF_IDENTITY((1 * (4)) | (1 * (4)), clamp((1 * (4)) | (1 * (4)), (1 * (4)) | (1 * (4)), (1 * (4)) | (1 * (4))))))))), 1 * (4))) >> 0)))))))))))))))), 0 + (_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(1 * (4), max(_GLF_IDENTITY(1 * (4), (1 * (4)) | (_GLF_IDENTITY(1 * (4), _GLF_IDENTITY((1 * (4)) | (1 * (4)), (false ? _GLF_FUZZED(-81528) : (1 * (4)) | (1 * (4))))))), 1 * (_GLF_IDENTITY(4, min(4, 4)))))), min(_GLF_IDENTITY(4, _GLF_IDENTITY(1 * (4), max(_GLF_IDENTITY(1 * (4), (1 * (4)) | (_GLF_IDENTITY(1 * (4), _GLF_IDENTITY((1 * (4)) | (1 * (4)), (_GLF_IDENTITY(false ? _GLF_FUZZED(-81528) : (1 * (4)) | (1 * (4)), ~ (~ (false ? _GLF_FUZZED(-81528) : (1 * (4)) | (1 * (4)))))))))), 1 * (4)))), _GLF_IDENTITY(4, _GLF_IDENTITY(1 * (4), max(_GLF_IDENTITY(1 * (4), (_GLF_IDENTITY(1, (1) << 0) * (4)) | (_GLF_IDENTITY(1 * (4), _GLF_IDENTITY((1 * (4)) | (1 * (4)), (false ? _GLF_FUZZED(-81528) : (1 * (4)) | _GLF_IDENTITY((1 * (4)), max((1 * (4)), (1 * (4))))))))), 1 * (4)))))))), _GLF_IDENTITY(_GLF_IDENTITY(4, 0 | (_GLF_IDENTITY(4, clamp(4, 4, 4)))), _GLF_IDENTITY(1 * (4), max(_GLF_IDENTITY(1 * (4), (1 * (4)) | (_GLF_IDENTITY(1 * (4), _GLF_IDENTITY((1 * (4)) | (1 * (4)), (false ? _GLF_FUZZED(-81528) : (1 * (4)) | (1 * (4))))))), _GLF_IDENTITY(1 * (4), (1 * (4)) | (1 * (4))))))))))), _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(1 * _GLF_IDENTITY((4), max((4), (4))), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0) * (4), (1 * (4)) | (_GLF_IDENTITY(1 * (4), _GLF_IDENTITY((1 * (4)) | (1 * (4)), (false ? _GLF_FUZZED(-81528) : (1 * (4)) | (1 * (4))))))), 1 * (4)), ~ (~ (max(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0) * (4), (1 * (4)) | (_GLF_IDENTITY(1 * (4), _GLF_IDENTITY((1 * (4)) | (1 * (4)), (false ? _GLF_FUZZED(-81528) : (1 * (4)) | (1 * (4))))))), 1 * (4))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(1 * (4), _GLF_IDENTITY(max(_GLF_IDENTITY(1 * (4), (1 * (4)) | (_GLF_IDENTITY(1 * (4), _GLF_IDENTITY((1 * (4)) | _GLF_IDENTITY((1 * (4)), (false ? _GLF_FUZZED(-42519) : (1 * (4)))), (false ? _GLF_FUZZED(-81528) : (1 * (4)) | (1 * (4))))))), 1 * (4)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)) * (4), (1 * (4)) | (_GLF_IDENTITY(1 * (4), _GLF_IDENTITY((1 * (4)) | (1 * (4)), (false ? _GLF_FUZZED(-81528) : (1 * (4)) | (1 * (4))))))), 1 * (4)), (max(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, clamp(1, 1, 1)))) * (4), (1 * (4)) | (_GLF_IDENTITY(1 * (4), _GLF_IDENTITY((1 * (4)) | (1 * (4)), (false ? _GLF_FUZZED(-81528) : (1 * (4)) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(true, (true) || false) ? 1 : _GLF_FUZZED(-90499))) * (4))))))), 1 * (4))) >> 0)), (~ (_GLF_IDENTITY(max(_GLF_IDENTITY(1 * (4), (1 * (4)) | (_GLF_IDENTITY(1 * (4), _GLF_IDENTITY((1 * (4)) | (1 * (4)), (false ? _GLF_FUZZED(_GLF_IDENTITY(-81528, ~ (_GLF_IDENTITY(~ (-81528), _GLF_IDENTITY(int(ivec4(~ (-81528), (1 & 1), (1 ^ 1), 0)), max(int(ivec4(~ (-81528), (1 & 1), (1 ^ 1), 0)), int(ivec4(~ (-81528), (1 & 1), (1 ^ 1), 0)))))))) : (1 * (4)) | (1 * (4))))))), 1 * (4)), (max(_GLF_IDENTITY(1 * (4), (1 * (4)) | (_GLF_IDENTITY(1 * (4), _GLF_IDENTITY(_GLF_IDENTITY((1 * (4)) | (1 * (4)), (false ? _GLF_FUZZED(-81528) : (1 * (4)) | (1 * (4)))), _GLF_IDENTITY(int(int(_GLF_IDENTITY((1 * (4)) | (1 * (4)), (false ? _GLF_FUZZED(-81528) : (1 * (4)) | (1 * (4)))))), (int(int(_GLF_IDENTITY((1 * (4)) | (1 * (4)), (false ? _GLF_FUZZED(-81528) : (1 * (4)) | (1 * (4))))))) | (_GLF_IDENTITY(int(int(_GLF_IDENTITY((1 * (4)) | (1 * (4)), (false ? _GLF_FUZZED(-81528) : (1 * (4)) | (1 * (4)))))), clamp(int(int(_GLF_IDENTITY((1 * (4)) | (1 * (4)), (false ? _GLF_FUZZED(-81528) : (1 * (4)) | (1 * (4)))))), int(int(_GLF_IDENTITY((1 * (4)) | (1 * (4)), (false ? _GLF_FUZZED(-81528) : (1 * (4)) | (1 * (4)))))), int(int(_GLF_IDENTITY((1 * (4)) | (1 * (4)), (false ? _GLF_FUZZED(-81528) : (1 * (4)) | (1 * (4)))))))))))))), 1 * (4))) >> 0))) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(max(_GLF_IDENTITY(1 * (4), (1 * (4)) | (_GLF_IDENTITY(1 * (4), _GLF_IDENTITY((1 * (4)) | (1 * (4)), (false ? _GLF_FUZZED(-81528) : (1 * (4)) | (1 * (4))))))), 1 * (4)), (max(_GLF_IDENTITY(1 * (4), (1 * _GLF_IDENTITY((4), ((4)) >> 0)) | (_GLF_IDENTITY(1 * (4), _GLF_IDENTITY((1 * (4)) | (1 * (4)), (false ? _GLF_FUZZED(-81528) : (1 * (4)) | (1 * (4))))))), 1 * (4))) >> 0)), min(~ (_GLF_IDENTITY(max(_GLF_IDENTITY(1 * (4), (1 * (4)) | (_GLF_IDENTITY(1 * (4), _GLF_IDENTITY((1 * (4)) | (1 * (4)), (false ? _GLF_FUZZED(-81528) : (1 * (4)) | (1 * (4))))))), 1 * (4)), (max(_GLF_IDENTITY(1 * (4), (1 * (4)) | (_GLF_IDENTITY(1 * (4), _GLF_IDENTITY((1 * (4)) | (1 * (4)), (false ? _GLF_FUZZED(-81528) : (1 * (4)) | (1 * (4))))))), 1 * (4))) >> 0)), ~ (_GLF_IDENTITY(max(_GLF_IDENTITY(1 * (4), (1 * (4)) | (_GLF_IDENTITY(1 * (4), _GLF_IDENTITY((1 * _GLF_IDENTITY((4), ((4)) | ((4)))) | (1 * (4)), (false ? _GLF_FUZZED(-81528) : (1 * (4)) | (1 * (4))))))), 1 * (4)), (max(_GLF_IDENTITY(1 * (4), (1 * (4)) | (_GLF_IDENTITY(1 * (4), _GLF_IDENTITY((1 * (4)) | (1 * (4)), (false ? _GLF_FUZZED(-81528) : (1 * (4)) | (1 * (4))))))), 1 * _GLF_IDENTITY((4), int(ivec3((4), 0, 1))))) >> 0)))))))))), 0 + (_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(1 * (4), max(_GLF_IDENTITY(1 * (4), (1 * (4)) | (_GLF_IDENTITY(1 * (4), _GLF_IDENTITY((1 * (4)) | (1 * (4)), (false ? _GLF_FUZZED(-81528) : (1 * (4)) | (1 * (4))))))), _GLF_IDENTITY(1 * (_GLF_IDENTITY(4, min(4, 4))), max(1 * (_GLF_IDENTITY(4, min(4, 4))), 1 * (_GLF_IDENTITY(4, min(4, 4)))))))), min(_GLF_IDENTITY(4, _GLF_IDENTITY(1 * (4), max(_GLF_IDENTITY(1 * (4), (1 * (4)) | (_GLF_IDENTITY(1 * (4), _GLF_IDENTITY((1 * (4)) | (1 * (4)), (false ? _GLF_FUZZED(-81528) : (1 * (4)) | (1 * (4))))))), 1 * (4)))), _GLF_IDENTITY(4, _GLF_IDENTITY(1 * (4), max(_GLF_IDENTITY(1 * (_GLF_IDENTITY(4, (false ? _GLF_FUZZED(-95869) : 4))), (1 * (4)) | (_GLF_IDENTITY(1 * (4), _GLF_IDENTITY((1 * (4)) | (1 * (4)), (false ? _GLF_FUZZED(-81528) : (1 * (4)) | _GLF_IDENTITY((1 * (4)), max((1 * (4)), (1 * (4))))))))), 1 * (4)))))))), _GLF_IDENTITY(4, _GLF_IDENTITY(1 * (4), max(_GLF_IDENTITY(1 * (4), (1 * (4)) | (_GLF_IDENTITY(1 * (4), _GLF_IDENTITY((1 * (4)) | (1 * (4)), (false ? _GLF_FUZZED(-81528) : (1 * (4)) | (1 * (4))))))), 1 * (4))))))))))))), 64, 2);
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) && true) || _GLF_IDENTITY(false, (false) && true))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   read = atomicLoad(buf[virtual_gid], 4, 64, 2);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, true))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 subgroupBarrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(checker[virtual_gid], read, 4, 64, 4);
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
