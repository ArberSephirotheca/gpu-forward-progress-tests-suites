#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) && true) && true), _GLF_IDENTITY(false, bool(bvec2(false, false))) || (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x > injectionSwitch.y), bool(bool((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x > injectionSwitch.y)))))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false, true, true))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(546.377)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))), false || (false)), (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))), false || (false))) && true)))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))), false || (false)), (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))), false || (false))) && true)))), false, false, false))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, false || (false)), true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, false))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, false)), bvec3(bvec4(bvec3(bvec3(false, true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))))), true)))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, false)), bvec3(bvec4(bvec3(bvec3(false, true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))))), true)))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, false)), bvec3(bvec4(bvec3(bvec3(false, true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))))), true)))))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, false)), bvec3(bvec4(bvec3(bvec3(false, true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))))), true)))))), false)))))), true))))), bvec3(bvec4(bvec3(false, true, false), true))))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec4(bvec2(_GLF_DEAD(false), false), false, false))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(mat4x2(-0.1, -9.1, 87.00, -250.538, 40.74, -939.091, 209.534, 6.2)[2]) : injectionSwitch)).x > injectionSwitch.y)) || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(false, ! (! (false)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(false, ! (! (false))))))) && true)) && true))))
    return;
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(bvec2(false, true))) && true))), true && (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, true), true, true)), bvec2(bvec2(bvec2(bvec4(bvec2(false, true), true, true))))))))))) && true))))))
    return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (! (_GLF_DEAD(false))), bool(bool(! (! (_GLF_DEAD(false)))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, determinant(mat4(0.0, 0.0, 1.0, 0.0, 0.0, length(vec2(0.0, 0.0)), 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 0.0, 0.0))))).x > injectionSwitch.y))))
      return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (injectionSwitch)).y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, false)))))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, false)))))), true, true, false))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false)))))), (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (! (_GLF_DEAD(false))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (! (_GLF_DEAD(false))), (! (! (_GLF_DEAD(false)))) && true), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(! (! (_GLF_DEAD(false))), (! (! (_GLF_DEAD(false)))) && true), true), true, false))))))))) && true)))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), false || (bool(false)))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, false))))), true && (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))), (bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_ZERO(0.0, injectionSwitch.x)) > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))))
    return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) << 0u);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 0.0, 0.0, sqrt(1.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), (false ? _GLF_FUZZED(58.48) : dot(vec2(1.0, 0.0), vec2(0.0, 1.0))))), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)), (vec2(mat4x3(injectionSwitch, 0.0, 0.0, sqrt(1.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), (false ? _GLF_FUZZED(58.48) : dot(vec2(1.0, 0.0), vec2(0.0, 1.0))))), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))) - vec2(0.0, 0.0))).y))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && _GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), true && ((! (true))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), true && ((! (true))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), true && ((! (true)))))))), (! (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), true && _GLF_IDENTITY(((! (true))), (((! (true)))) && true))))))) || false))))), ((false) && _GLF_IDENTITY(_GLF_IDENTITY(true, false || _GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY(! _GLF_IDENTITY((! (true)), true && ((! (true)))), ! (! (! _GLF_IDENTITY((! (true)), true && ((! (true))))))))), ! (! ((_GLF_IDENTITY(true, _GLF_IDENTITY(! _GLF_IDENTITY((! (true)), true && ((! (true)))), ! (! (! _GLF_IDENTITY((! (true)), true && ((! (true))))))))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), _GLF_IDENTITY(true, true && (true)) && ((! (true))))))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), true && ((! (true)))))))), false || ((_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), true && ((! (true)))))))))), (! _GLF_IDENTITY((_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), true && _GLF_IDENTITY(((! (true))), (((! (true)))) && true)))))), ((_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), true && _GLF_IDENTITY(((! (true))), (((! (true)))) && true))))))) || false)) || false)))))) || false)), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-1.5)))) / 1.0)))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false))))))))), true), false), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(false)), (_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true)) && _GLF_IDENTITY(true, bool(bvec2(true, false)))), false || (! (_GLF_DEAD(false))))))))), true), false))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))), ! (! ((_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))))), ! (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(false || (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false || (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec4(! (_GLF_DEAD(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))))))))))), true), false)))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || _GLF_IDENTITY((! (_GLF_DEAD(false))), bool(bvec2(_GLF_IDENTITY((! (_GLF_DEAD(false))), ((! (_GLF_DEAD(false)))) && true), true))))))))), true), false), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || _GLF_IDENTITY((! (_GLF_DEAD(false))), bool(bvec2(_GLF_IDENTITY((! (_GLF_DEAD(false))), ((! (_GLF_DEAD(false)))) && true), true))))))))), true), false), true))))))))))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_DEAD(false), true), true), bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true), true)))))), bvec2(bvec3(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)), true), _GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_DEAD(false), true), true), bvec3(bvec3(bvec3(bvec2(_GLF_DEAD(false), true), true)))))), bvec2(bvec3(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), (_GLF_IDENTITY(false, (false) || false)) || false)), true), _GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_DEAD(false), true), true), bvec3(bvec3(bvec3(bvec2(_GLF_DEAD(false), true), true)))))), bvec2(bvec3(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))))), true), _GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))))))))))) && true)))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))), ! (! (! (_GLF_DEAD(false))))))), _GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (injectionSwitch.x < injectionSwitch.y)))))))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, true, true), false)), false))))), bool(bool(bool(_GLF_IDENTITY(bvec3(false, true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, true, true), false)), false)))))))))), bool(bvec2(! (false), _GLF_IDENTITY(false, bool(bool(false))))))))))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, (true ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y : _GLF_FUZZED(-9.2))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0))) * sqrt(1.0))), (mat2(injectionSwitch, 0.0, 1.0)) / mat2(1.0, 1.0, 1.0, 1.0)))).y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-693.753) : injectionSwitch.y)), injectionSwitch.y), (clamp(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(250.397, 6481.0368)) : _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-5406.9737), _GLF_FUZZED(70.00)), _GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))))))), injectionSwitch)).y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), sin(0.0)), transpose(transpose(mat4x2(injectionSwitch, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0))), sin(0.0))))))).y)) - 0.0))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, true, false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-70.95, 8.3))))))).y, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(vec2(-70.95, 8.3)), min(_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(vec2(-70.95, 8.3)), (true ? true ? injectionSwitch : _GLF_FUZZED(vec2(-70.95, 8.3)) : _GLF_FUZZED(vec2(84.14, 8.4)))), true ? injectionSwitch : _GLF_FUZZED(vec2(-70.95, 8.3))))))))).y, min(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-70.95, 8.3))))))).y, _GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-70.95, 8.3))))))).y))), float(_GLF_FUZZED(vec4(-8.5, -95.67, 9.0, 658.114).w)), bool(false))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(3.3)), vec2(_GLF_FUZZED(5.1), (injectionSwitch)[1]), bvec2(false, true))).y)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, true))))), bool(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))) || false))))))))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, _GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), length(vec3(0.0, 0.0, 0.0)), determinant(mat4(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), determinant(mat3(0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, sqrt(0.0), 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, sqrt(0.0), 1.0), vec3(0.0, 1.0, 0.0))), 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) / 1.0)) - 0.0), 1.0, 1.0, 1.0))), 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, exp(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0))), 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0))).y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).y, _GLF_IDENTITY((injectionSwitch.y) + 0.0, ((injectionSwitch.y) + 0.0) - 0.0)))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, injectionSwitch.y)))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x))) + 0.0) > injectionSwitch.y) && true)))))), true, false), false)))), false || (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)))[0], _GLF_FUZZED(3.3)), vec2(_GLF_FUZZED(5.1), (injectionSwitch)[1]), bvec2(false, true))).y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(25.45)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(994.293)))))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))) || false))))))))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, _GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), length(vec3(0.0, 0.0, 0.0)), determinant(mat4(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(1.0, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), max(float(mat2x3(1.0, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), float(mat2x3(1.0, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0))))), 0.0, 0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-8.0)), bool(false))) : _GLF_FUZZED(803.725))))), 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, exp(0.0), 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0))).y, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, injectionSwitch.y), clamp(_GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, injectionSwitch.y), float(vec2(clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, injectionSwitch.y), 1.0))), clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, injectionSwitch.y), clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, injectionSwitch.y)))))), ! (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))), ! (! ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))))))), false || (_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec4(_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), bool(bool((_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))), true, true, true))))))), true, false), false)))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true), false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, (false ? _GLF_FUZZED(-7160.5933) : _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, (false ? _GLF_FUZZED(-7160.5933) : _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(workgroup_id, 1u, 0u, 1u)), (uint(uvec4(workgroup_id, 1u, 0u, 1u))) / uint(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY((uint(_GLF_IDENTITY(uvec4(workgroup_id, 1u, 0u, 1u), (_GLF_IDENTITY(uvec4(workgroup_id, 1u, 0u, 1u), (_GLF_IDENTITY(uvec4(workgroup_id, 1u, 0u, 1u), max(uvec4(workgroup_id, 1u, 0u, 1u), uvec4(workgroup_id, 1u, 0u, 1u)))) - uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))) * uvec4(1u, 1u, 1u, 1u)))) - _GLF_IDENTITY(0u, (0u) * 1u), min((uint(uvec4(workgroup_id, 1u, 0u, 1u))) - 0u, (uint(uvec4(workgroup_id, 1u, 0u, 1u))) - _GLF_IDENTITY(0u, (0u) ^ (0u >> _GLF_IDENTITY(uint(8u), uint(8u)))))))), uint(uvec2(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(uint(uvec4(workgroup_id, 1u, 0u, 1u)), (uint(_GLF_IDENTITY(uvec4(workgroup_id, 1u, 0u, 1u), (uvec4(workgroup_id, 1u, 0u, 1u)) - (uvec4(0u, 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(3u), uvec4(3u)))))) - 0u)), 0u))))), (_GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(uint(uvec4(workgroup_id, 1u, 0u, 1u)), _GLF_IDENTITY((uint(uvec4(workgroup_id, 1u, 0u, 1u))) - 0u, min((uint(uvec4(workgroup_id, 1u, 0u, 1u))) - 0u, (uint(uvec4(workgroup_id, 1u, 0u, 1u))) - 0u)))), uint(uvec2(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(uint(uvec4(workgroup_id, 1u, 0u, 1u)), (uint(_GLF_IDENTITY(uvec4(workgroup_id, 1u, 0u, 1u), (uvec4(workgroup_id, 1u, 0u, 1u)) - (uvec4(0u, 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(3u), uvec4(3u)))))) - 0u)), 0u)))))) | (_GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(uint(uvec4(workgroup_id, 1u, 0u, 1u)), _GLF_IDENTITY((uint(uvec4(workgroup_id, 1u, 0u, 1u))) - 0u, _GLF_IDENTITY(min((uint(uvec4(workgroup_id, 1u, 0u, 1u))) - 0u, (uint(uvec4(workgroup_id, 1u, 0u, 1u))) - 0u), (_GLF_IDENTITY(min((uint(uvec4(workgroup_id, 1u, 0u, 1u))) - 0u, (uint(uvec4(workgroup_id, 1u, 0u, 1u))) - 0u), clamp(min((uint(uvec4(workgroup_id, 1u, 0u, 1u))) - 0u, (uint(uvec4(workgroup_id, 1u, 0u, 1u))) - 0u), min((uint(uvec4(workgroup_id, 1u, 0u, 1u))) - 0u, (uint(uvec4(workgroup_id, 1u, 0u, 1u))) - 0u), min((uint(uvec4(workgroup_id, 1u, 0u, 1u))) - 0u, (uint(uvec4(workgroup_id, 1u, 0u, 1u))) - 0u)))) | 0u)))), uint(uvec2(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(uint(uvec4(workgroup_id, 1u, 0u, 1u)), (uint(_GLF_IDENTITY(uvec4(workgroup_id, 1u, 0u, 1u), (uvec4(workgroup_id, 1u, 0u, 1u)) - (uvec4(0u, 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(3u), uvec4(3u)))))) - 0u)), 0u)))))));
 uint subgroup_base = subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size));
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_base + ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u) + 1) % subgroup_size);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (false)))), (true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (false))))) || false)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false), false, false, true)))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, true, false))), (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(875.695) : injectionSwitch.x)) > injectionSwitch.y)), true && (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, true, false))), (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(875.695) : injectionSwitch.x)) > injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint read = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, ~ (~ (0))))), 0)), _GLF_IDENTITY(_GLF_IDENTITY((0) >> 0, min((0) >> 0, (0) >> 0)), (_GLF_IDENTITY(_GLF_IDENTITY((0) >> 0, min((0) >> 0, (0) >> 0)), (false ? _GLF_FUZZED((true ? -19669 : 31870)) : _GLF_IDENTITY((0) >> _GLF_IDENTITY(0, int(ivec3(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-56646) : 0)), 1, (1 | 1)))), _GLF_IDENTITY(min((0) >> 0, (0) >> 0), 0 ^ (min((0) >> 0, (0) >> 0))))))) - (0 >> _GLF_IDENTITY(int(6), int(6))))), _GLF_IDENTITY(0, clamp(0, 0, 0)) | (_GLF_IDENTITY(0, _GLF_IDENTITY((0) >> 0, _GLF_IDENTITY(0 | (_GLF_IDENTITY((0), _GLF_IDENTITY(((0)), max(((0)), ((0)))) | 0) >> 0), (0 | (_GLF_IDENTITY((0), _GLF_IDENTITY(((0)), max(((0)), ((0)))) | 0) >> 0)) << 0)))));
 atomicStore(buf[next_virtual_gid], uint(1), 4, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(64, (64) << 0), 64))) - _GLF_IDENTITY(0, 0 | (0))), 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), false, false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) - vec2(0.0, 0.0), max((injectionSwitch) - vec2(0.0, 0.0), (injectionSwitch) - vec2(0.0, 0.0)))), 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(0.0, 1.0, 0.0, 0.0), clamp(_GLF_IDENTITY(vec4(0.0, 1.0, 0.0, 0.0), min(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(-3462.9298, min(-3462.9298, _GLF_IDENTITY(-3462.9298, min(-3462.9298, -3462.9298))))) : 0.0)), 0.0))), vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)))), max(float(_GLF_IDENTITY(vec4(0.0, 1.0, 0.0, 0.0), clamp(_GLF_IDENTITY(vec4(0.0, 1.0, 0.0, 0.0), min(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)))), float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)) : _GLF_FUZZED(-6.5))), 1.0, 0.0, 0.0), clamp(_GLF_IDENTITY(vec4(0.0, 1.0, 0.0, 0.0), min(_GLF_IDENTITY(vec4(0.0, 1.0, 0.0, 0.0), vec4(mat2(vec4(0.0, 1.0, 0.0, 0.0)))), vec4(0.0, 1.0, 0.0, 0.0))), vec4(0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)), 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))))))), 1.0, 0.0, 1.0))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0)) - vec2(0.0, 0.0)), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0)) - vec2(0.0, 0.0)), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0))))), mix(vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(vec2(0.0, _GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, (0.0) / 1.0)))), vec2(0.0, 0.0) + (vec2(0.0, _GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, (0.0) / 1.0))))))), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0))))[0], (true ? (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-73.46, -7126.8111)))))), (injectionSwitch) - vec2(0.0, 0.0)), 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(1110.4038)), bool(false))), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(762.643))), 1.0)), _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(1110.4038)), bool(false))), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(762.643))), 1.0)), 1.0, 1.0, 0.0), (vec4(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(1110.4038)), bool(false))), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(762.643))), 1.0)), 1.0, 1.0, 0.0)) - vec4(0.0, 0.0, 0.0, 0.0))), mix(float(_GLF_FUZZED(804.472)), float(float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(1110.4038)), bool(false))), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(762.643))), 1.0)), 1.0, 1.0, 0.0), (vec4(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(1110.4038)), bool(false))), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(762.643))), 1.0)), 1.0, 1.0, 0.0)) - vec4(0.0, 0.0, 0.0, 0.0)))), bool(true)))), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(distance(vec4(-6.9, 816.602, -6.1, -504.787), vec4(391.413, 213.345, -39.94, -5.0))) : 0.0)), 1.0)), abs(vec2(1.0, 1.0)) * (vec2(mat3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(vec2(0.0, 0.0), min(vec2(0.0, 0.0), vec2(0.0, 0.0)))), 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(1110.4038)), bool(false))), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(762.643))), 1.0)), mix(float(_GLF_FUZZED(vec4(vec2(-7.7, -946.412), vec2(-23.44, 272.364)).t)), float(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(1110.4038)), bool(false))), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(762.643))), 1.0))), bool(true))), 0.0, 1.0))))))[0] : _GLF_FUZZED(34.27))), _GLF_FUZZED(-630.293)), _GLF_IDENTITY(vec2(_GLF_FUZZED(670.408), (_GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), 1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), 1.0, 0.0, 1.0, 0.0, 1.0))))[1]), (_GLF_IDENTITY(vec2(_GLF_FUZZED(670.408), (_GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0))))[1]), (vec2(_GLF_FUZZED(670.408), (_GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), ((injectionSwitch)) - vec2(0.0, 0.0)) - vec2(0.0, 0.0)), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, sqrt(1.0), 1.0, 0.0), (mat4x3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, sqrt(1.0), 1.0, 0.0)) * mat4(1.0))), clamp(float(_GLF_IDENTITY(mat4x3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, sqrt(1.0), 1.0, 0.0), (mat4x3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, sqrt(1.0), 1.0, 0.0)) * mat4(1.0))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, sqrt(1.0), 1.0, 0.0), (mat4x3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, sqrt(1.0), 1.0, 0.0)) * mat4(1.0))), 1.0 * (float(_GLF_IDENTITY(mat4x3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, sqrt(1.0), 1.0, 0.0), (mat4x3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, sqrt(1.0), 1.0, 0.0)) * mat4(1.0))))), float(_GLF_IDENTITY(mat4x3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, sqrt(1.0), 1.0, 0.0), (mat4x3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, sqrt(1.0), 1.0, 0.0)) * mat4(1.0))))))))))[_GLF_IDENTITY(1, (1) ^ (24131 & 0))])) * vec2(1.0, 1.0))) + vec2(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mat2(1.0) * (mat2(1.0) * (injectionSwitch)))).x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x))), bvec2(false, true)))), vec2(mat2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0)) - vec2(0.0, 0.0)), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0))), mix(vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) - vec2(0.0, _GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, (0.0) / 1.0)))), (true ? (injectionSwitch) - vec2(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(1.0 * (_GLF_IDENTITY(0.0, (0.0) / 1.0)), float(mat4x2(1.0 * (_GLF_IDENTITY(0.0, (0.0) / 1.0)), 0.0, 1.0, 1.0, round(length(normalize(1.0))), 0.0, 1.0, 1.0))))) : _GLF_FUZZED(injectionSwitch)))), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0))))[0], (true ? (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(1110.4038)), bool(false))), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(762.643))), 1.0), min(clamp(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(1110.4038)), bool(false))), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(762.643))), 1.0), clamp(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(1110.4038)), bool(false))), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(762.643))), 1.0)))), 0.0, 1.0)), abs(vec2(1.0, 1.0)) * (vec2(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) - vec2(0.0, 0.0), max((injectionSwitch) - vec2(0.0, 0.0), _GLF_IDENTITY((injectionSwitch) - vec2(0.0, 0.0), clamp(_GLF_IDENTITY((injectionSwitch) - vec2(0.0, 0.0), ((injectionSwitch) - vec2(0.0, 0.0)) * mat2(1.0)), (injectionSwitch) - vec2(0.0, 0.0), (injectionSwitch) - vec2(0.0, 0.0))))))) - sin(vec2(0.0, 0.0))), 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(1110.4038)), bool(false))), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(762.643))), 1.0)), 0.0, 1.0))))))[0] : _GLF_IDENTITY(_GLF_FUZZED(34.27), (_GLF_FUZZED(34.27)) / 1.0))), _GLF_FUZZED(_GLF_IDENTITY(-630.293, min(-630.293, _GLF_IDENTITY(-630.293, (true ? -630.293 : _GLF_FUZZED(-4.5))))))), _GLF_IDENTITY(vec2(_GLF_FUZZED(670.408), (_GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0))))[1]), (_GLF_IDENTITY(vec2(_GLF_FUZZED(670.408), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0))), (_GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)))) * mat2(1.0)))[1]), (vec2(_GLF_FUZZED(670.408), (_GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0)), min(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0)), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0)))) - vec2(0.0, 0.0)), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0))))[1])) * vec2(1.0, 1.0))) + vec2(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))) + 0.0)) - 0.0), _GLF_ZERO(0.0, injectionSwitch.x))), bvec2(false, true)))), 1.0, _GLF_ONE(1.0, injectionSwitch.y)))) * vec2(1.0, 1.0)).x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, determinant(mat4(1.0, sin(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, log(1.0), 1.0)), sqrt(0.0), 1.0, 0.0, 1.0), (true ? mat2x4(injectionSwitch, 1.0, determinant(mat4(1.0, sin(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, log(1.0), 1.0)), sqrt(0.0), 1.0, 0.0, 1.0) : _GLF_FUZZED((8.2 + mat2x4(-4.2, -148.750, 874.457, -3471.3473, -146.792, 2197.3350, -4510.4521, 4.3)))))), vec2(vec2(vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, determinant(mat4(1.0, sin(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, log(1.0), 1.0)), sqrt(0.0), 1.0, 0.0, 1.0), (true ? mat2x4(injectionSwitch, 1.0, determinant(mat4(1.0, sin(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, log(1.0), 1.0)), sqrt(0.0), 1.0, 0.0, 1.0) : _GLF_FUZZED((8.2 + mat2x4(-4.2, -148.750, 874.457, -3471.3473, -146.792, 2197.3350, -4510.4521, 4.3)))))))))).x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if((subgroup_local_id % 2) == _GLF_IDENTITY(0, (0) - (0 | 0)))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), _GLF_IDENTITY(bool(bvec2((! (_GLF_DEAD(false))), true)), bool(_GLF_IDENTITY(bvec3(bool(bvec2((! (_GLF_DEAD(false))), true)), true, true), bvec3(bvec4(bvec3(bool(bvec2((! (_GLF_DEAD(false))), true)), true, true), false))))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-80.49)), vec2(_GLF_FUZZED(19.48), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))), _GLF_IDENTITY(true, (true) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))))))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))).y, (injectionSwitch.y) / 1.0)))))))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))))))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, true))))))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((false), ! (! ((false))))), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), 0.0, 0.0, 1.0, exp(0.0), 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)))), dot(vec4(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec3(1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x))), min(float(vec3(1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x))), float(vec3(1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))))), 0.0, 0.0), vec4(0.0, 0.0, 1.0, determinant(mat2(1.0, 0.0, 1.0, 1.0))))), 0.0, 0.0, 1.0))), vec2(mat4(injectionSwitch, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, 0.0, sqrt(0.0), 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, sqrt(0.0), 0.0), vec4(1.0, 0.0, 0.0, 0.0))), float(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, 0.0, sqrt(0.0), 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, sqrt(0.0), 0.0), vec4(1.0, 0.0, 0.0, 0.0))), float(vec4(_GLF_IDENTITY(dot(vec4(1.0, 0.0, sqrt(0.0), 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, sqrt(0.0), 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 0.0))), 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0))), log(1.0), exp(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))).x > injectionSwitch.y))))), true, true)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))))))) || false))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(407.494) : injectionSwitch.y)))))), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(407.494) : injectionSwitch.y)))))), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), (false ? _GLF_FUZZED(407.494) : injectionSwitch.y))))))) || false)))))))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true)))
            return;
           return;
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)), ! (_GLF_IDENTITY(! (true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))), bool(bvec3(! (true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))), false, false))))), (true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))) && true)))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(32.71), _GLF_FUZZED(-65.00)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), _GLF_ONE(1.0, injectionSwitch.y), abs(1.0), tan(0.0), 1.0, sin(0.0), 1.0, 0.0, 0.0)), clamp(vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(32.71), _GLF_FUZZED(-65.00)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), _GLF_ONE(1.0, injectionSwitch.y), abs(1.0), tan(0.0), 1.0, sin(0.0), 1.0, 0.0, 0.0)), vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(32.71), _GLF_FUZZED(-65.00)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), _GLF_ONE(1.0, injectionSwitch.y), abs(1.0), tan(0.0), 1.0, sin(0.0), 1.0, 0.0, 0.0)), vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(32.71), _GLF_FUZZED(-65.00)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), _GLF_ONE(1.0, injectionSwitch.y), abs(1.0), tan(0.0), 1.0, sin(0.0), 1.0, 0.0, 0.0))))).x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_IDENTITY(false, (false) && true)))))), false)))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! (! (false || (false)))))))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))))))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   _GLF_IDENTITY(read = atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) << 0u))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid))], min(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) - 0u), _GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u)], (buf[virtual_gid]) << 0u))), (_GLF_IDENTITY(buf[virtual_gid], min(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], min(_GLF_IDENTITY(buf[virtual_gid], (false ? _GLF_FUZZED(subgroup_size) : buf[virtual_gid])), buf[virtual_gid])), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], min(_GLF_IDENTITY(buf[virtual_gid], (false ? _GLF_FUZZED(subgroup_size) : buf[virtual_gid])), buf[virtual_gid])), ~ (~ (_GLF_IDENTITY(buf[virtual_gid], min(_GLF_IDENTITY(buf[virtual_gid], (false ? _GLF_FUZZED(subgroup_size) : buf[virtual_gid])), buf[virtual_gid]))))))), _GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (true ? _GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], ~ (~ (buf[virtual_gid]))))) : _GLF_FUZZED(subgroup_size))), _GLF_IDENTITY((buf[virtual_gid]) << 0u, ((buf[virtual_gid]) << 0u) | ((buf[virtual_gid]) << 0u)))))) | 0u)))), 4, _GLF_IDENTITY(64, int(ivec2(64, 0))), 2), _GLF_IDENTITY((read = atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) << 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((buf[virtual_gid]), clamp((buf[virtual_gid]), (buf[virtual_gid]), _GLF_IDENTITY((buf[virtual_gid]), min((buf[virtual_gid]), (buf[virtual_gid]))))) << 0u))), (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) << 0u)))) / 1u)) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], ~ (~ (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) << 0u)))), min(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ (0u & 192080u))], _GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) / 1u)) << 0u))), uint(uint(_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) << 0u)))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], min(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) - 0u), _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) << 0u))), (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (true ? _GLF_IDENTITY(buf[virtual_gid], min(_GLF_IDENTITY(buf[virtual_gid], uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(buf[virtual_gid], 0u | (buf[virtual_gid])), _GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)) : _GLF_FUZZED(workgroup_base))), 0u), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(buf[virtual_gid], 0u | (buf[virtual_gid])), _GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)) : _GLF_FUZZED(workgroup_base))), 0u), (uvec3(_GLF_IDENTITY(buf[virtual_gid], 0u | (buf[virtual_gid])), _GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)) : _GLF_FUZZED(workgroup_base))), 0u)) >> uvec3(0u, 0u, 0u))) | (uvec3(_GLF_IDENTITY(buf[virtual_gid], 0u | (buf[virtual_gid])), _GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)) : _GLF_FUZZED(workgroup_base))), 0u))))), _GLF_IDENTITY(buf[virtual_gid], ~ (~ (buf[virtual_gid]))))) : _GLF_FUZZED(subgroup_size))), (buf[virtual_gid]) << 0u)))) | 0u)), clamp(~ (_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], min(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) - 0u), _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) << 0u))), (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u)], (true ? _GLF_IDENTITY(buf[virtual_gid], min(_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 1u, 0u))), _GLF_IDENTITY(buf[virtual_gid], ~ (~ (buf[virtual_gid]))))) : _GLF_FUZZED(subgroup_size))), (buf[virtual_gid]) << 0u)))) | 0u)), ~ (_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], min(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) - 0u), _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) << 0u))), (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (true ? _GLF_IDENTITY(buf[virtual_gid], min(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 1u, 0u))), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 1u, 0u))))), clamp(_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 1u, 0u))))), (uint(uint(_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 1u, 0u)))))) | 0u), uint(uint(_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 1u, 0u))))), uint(uint(_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 1u, 0u)))))))), _GLF_IDENTITY(buf[virtual_gid], ~ (~ (buf[virtual_gid]))))) : _GLF_FUZZED(subgroup_size))), (buf[virtual_gid]) << 0u)))) | 0u)), _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], min(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) - 0u), _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) << 0u))), (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (true ? _GLF_IDENTITY(buf[virtual_gid], min(_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 1u, _GLF_IDENTITY(0u, 0u + (0u))))), _GLF_IDENTITY(buf[virtual_gid], ~ (_GLF_IDENTITY(~ (buf[virtual_gid]), ~ (~ (~ (buf[virtual_gid])))))))) : _GLF_FUZZED(subgroup_size))), (buf[virtual_gid]) << 0u)))) | 0u)), _GLF_IDENTITY(uint(uvec4(~ (_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], min(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) - 0u), _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) << 0u))), (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (true ? _GLF_IDENTITY(buf[virtual_gid], min(_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 1u, 0u))), _GLF_IDENTITY(buf[virtual_gid], ~ (~ (buf[virtual_gid]))))) : _GLF_FUZZED(subgroup_size))), (buf[virtual_gid]) << 0u)))) | 0u)), 0u, 0u, 0u)), clamp(uint(uvec4(~ (_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], min(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) - 0u), _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) << 0u))), (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (true ? _GLF_IDENTITY(buf[virtual_gid], min(_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 1u, 0u))), _GLF_IDENTITY(buf[virtual_gid], ~ (~ (buf[virtual_gid]))))) : _GLF_FUZZED(subgroup_size))), (buf[virtual_gid]) << 0u)))) | 0u)), 0u, 0u, 0u)), uint(uvec4(~ (_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], min(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) - 0u), _GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((buf[virtual_gid]) << 0u, ((buf[virtual_gid]) << 0u) | (_GLF_IDENTITY((buf[virtual_gid]) << 0u, (false ? _GLF_FUZZED(45904u) : (buf[virtual_gid]) << 0u))))))), (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (true ? _GLF_IDENTITY(buf[virtual_gid], min(_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(uint(uvec3(buf[virtual_gid], 1u, 0u)), (uint(uvec3(buf[virtual_gid], 1u, 0u))) - 0u)), _GLF_IDENTITY(buf[virtual_gid], ~ (~ (buf[virtual_gid]))))) : _GLF_FUZZED(subgroup_size))), (buf[virtual_gid]) << 0u)))) | 0u)), _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, uint(uvec2(0u, 1u)))))), 0u, 0u)), uint(uvec4(~ (_GLF_IDENTITY(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))], min(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) - 0u), _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) << 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (true ? _GLF_IDENTITY(buf[virtual_gid], min(_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 1u, 0u))), _GLF_IDENTITY(buf[virtual_gid], ~ (~ (buf[virtual_gid]))))) : _GLF_FUZZED(subgroup_size))), (buf[virtual_gid]) << 0u))), max(_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (true ? _GLF_IDENTITY(buf[virtual_gid], min(_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 1u, 0u))), _GLF_IDENTITY(buf[virtual_gid], ~ (~ (buf[virtual_gid]))))) : _GLF_FUZZED(subgroup_size))), (buf[virtual_gid]) << 0u))), _GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (true ? _GLF_IDENTITY(buf[virtual_gid], min(_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 1u, 0u))), _GLF_IDENTITY(buf[virtual_gid], ~ (~ (buf[virtual_gid]))))) : _GLF_FUZZED(subgroup_size))), (buf[virtual_gid]) << 0u)))))) | 0u)), 0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u))))))))), 4, 64, 2)), 0u | ((read = atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) << 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((buf[virtual_gid]), clamp((buf[virtual_gid]), (buf[virtual_gid]), _GLF_IDENTITY((buf[virtual_gid]), min((buf[virtual_gid]), (buf[virtual_gid]))))) << 0u))), (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) << 0u)))) / 1u)) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], ~ (~ (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) << 0u)))), min(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ (0u & 192080u))], _GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) / 1u)) << 0u))), uint(uint(_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) << 0u)))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], min(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) - 0u), _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) << 0u))), (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (true ? _GLF_IDENTITY(buf[virtual_gid], min(_GLF_IDENTITY(buf[virtual_gid], uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(buf[virtual_gid], 0u | (buf[virtual_gid])), _GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)) : _GLF_FUZZED(workgroup_base))), 0u), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(buf[virtual_gid], 0u | (buf[virtual_gid])), _GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)) : _GLF_FUZZED(workgroup_base))), 0u), (uvec3(_GLF_IDENTITY(buf[virtual_gid], 0u | (buf[virtual_gid])), _GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)) : _GLF_FUZZED(workgroup_base))), 0u)) >> uvec3(0u, 0u, 0u))) | (uvec3(_GLF_IDENTITY(buf[virtual_gid], 0u | (buf[virtual_gid])), _GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)) : _GLF_FUZZED(workgroup_base))), 0u))))), _GLF_IDENTITY(buf[virtual_gid], ~ (~ (buf[virtual_gid]))))) : _GLF_FUZZED(subgroup_size))), (buf[virtual_gid]) << 0u)))) | 0u)), clamp(~ (_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], min(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) - 0u), _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) << 0u))), (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u)], (true ? _GLF_IDENTITY(buf[virtual_gid], min(_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 1u, 0u))), _GLF_IDENTITY(buf[virtual_gid], ~ (~ (buf[virtual_gid]))))) : _GLF_FUZZED(subgroup_size))), (buf[virtual_gid]) << 0u)))) | 0u)), ~ (_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], min(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) - 0u), _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) << 0u))), (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (true ? _GLF_IDENTITY(buf[virtual_gid], min(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 1u, 0u))), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 1u, 0u))))), clamp(_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 1u, 0u))))), (uint(uint(_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 1u, 0u)))))) | 0u), uint(uint(_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 1u, 0u))))), uint(uint(_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 1u, 0u)))))))), _GLF_IDENTITY(buf[virtual_gid], ~ (~ (buf[virtual_gid]))))) : _GLF_FUZZED(subgroup_size))), (buf[virtual_gid]) << 0u)))) | 0u)), _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], min(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) - 0u), _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) << 0u))), (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (true ? _GLF_IDENTITY(buf[virtual_gid], min(_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 1u, _GLF_IDENTITY(0u, 0u + (0u))))), _GLF_IDENTITY(buf[virtual_gid], ~ (_GLF_IDENTITY(~ (buf[virtual_gid]), ~ (~ (~ (buf[virtual_gid])))))))) : _GLF_FUZZED(subgroup_size))), (buf[virtual_gid]) << 0u)))) | 0u)), _GLF_IDENTITY(uint(uvec4(~ (_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], min(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) - 0u), _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) << 0u))), (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (true ? _GLF_IDENTITY(buf[virtual_gid], min(_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 1u, 0u))), _GLF_IDENTITY(buf[virtual_gid], ~ (~ (buf[virtual_gid]))))) : _GLF_FUZZED(subgroup_size))), (buf[virtual_gid]) << 0u)))) | 0u)), 0u, 0u, 0u)), clamp(uint(uvec4(~ (_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], min(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) - 0u), _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) << 0u))), (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (true ? _GLF_IDENTITY(buf[virtual_gid], min(_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 1u, 0u))), _GLF_IDENTITY(buf[virtual_gid], ~ (~ (buf[virtual_gid]))))) : _GLF_FUZZED(subgroup_size))), (buf[virtual_gid]) << 0u)))) | 0u)), 0u, 0u, 0u)), uint(uvec4(~ (_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], min(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) - 0u), _GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((buf[virtual_gid]) << 0u, ((buf[virtual_gid]) << 0u) | (_GLF_IDENTITY((buf[virtual_gid]) << 0u, (false ? _GLF_FUZZED(45904u) : (buf[virtual_gid]) << 0u))))))), (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (true ? _GLF_IDENTITY(buf[virtual_gid], min(_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(uint(uvec3(buf[virtual_gid], 1u, 0u)), (uint(uvec3(buf[virtual_gid], 1u, 0u))) - 0u)), _GLF_IDENTITY(buf[virtual_gid], ~ (~ (buf[virtual_gid]))))) : _GLF_FUZZED(subgroup_size))), (buf[virtual_gid]) << 0u)))) | 0u)), _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, uint(uvec2(0u, 1u)))))), 0u, 0u)), uint(uvec4(~ (_GLF_IDENTITY(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))], min(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) - 0u), _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) << 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (true ? _GLF_IDENTITY(buf[virtual_gid], min(_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 1u, 0u))), _GLF_IDENTITY(buf[virtual_gid], ~ (~ (buf[virtual_gid]))))) : _GLF_FUZZED(subgroup_size))), (buf[virtual_gid]) << 0u))), max(_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (true ? _GLF_IDENTITY(buf[virtual_gid], min(_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 1u, 0u))), _GLF_IDENTITY(buf[virtual_gid], ~ (~ (buf[virtual_gid]))))) : _GLF_FUZZED(subgroup_size))), (buf[virtual_gid]) << 0u))), _GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (true ? _GLF_IDENTITY(buf[virtual_gid], min(_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 1u, 0u))), _GLF_IDENTITY(buf[virtual_gid], ~ (~ (buf[virtual_gid]))))) : _GLF_FUZZED(subgroup_size))), (buf[virtual_gid]) << 0u)))))) | 0u)), 0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u))))))))), 4, 64, 2)))) / _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, ~ (~ (1u))), 1u))) ^ 0u));
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).x > injectionSwitch.y)))) && true))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y) * 1.0), false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (false ? _GLF_FUZZED(8107.9810) : injectionSwitch[0])), injectionSwitch[1])).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), vec2(0.0, 0.0) + (max(injectionSwitch, injectionSwitch))), (_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), vec2(0.0, 0.0) + (max(injectionSwitch, injectionSwitch)))) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))).y) * 1.0), bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y) * 1.0), true, false)))))))), false)), (bool(bvec2(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (! (false))))), bool(bvec3(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (! (false))))), true, true))), (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))))) && true)))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), false || (bool(bvec4(false, false, true, true)))))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec3(-2.2, -662.173, -5.2).s), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(7420.1413, min(_GLF_IDENTITY(7420.1413, min(7420.1413, 7420.1413)), 7420.1413)))), bvec2(true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(5411.9683, -21.70)))).x > injectionSwitch.y))))).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 0.0, 0.0, cos(0.0), 0.0, abs(_GLF_IDENTITY(0.0, max(0.0, 0.0))), 0.0, 0.0))) > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) / vec2(1.0, 1.0)))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, length(vec2(0.0, 0.0)), 1.0, sqrt(1.0), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0))).y), clamp(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) + 0.0), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_ONE(1.0, injectionSwitch.y)))) - vec2(0.0, 0.0)).y))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true, true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))).y))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))) > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   read = _GLF_IDENTITY(atomicLoad(_GLF_IDENTITY(buf[virtual_gid], clamp(buf[virtual_gid], buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], max(_GLF_IDENTITY(buf[virtual_gid], 0u ^ (buf[virtual_gid])), buf[virtual_gid])))), 4, 64, 2), ~ (_GLF_IDENTITY(~ (atomicLoad(buf[virtual_gid], 4, 64, 2)), (~ _GLF_IDENTITY(_GLF_IDENTITY((atomicLoad(buf[virtual_gid], 4, 64, 2)), ((atomicLoad(buf[virtual_gid], 4, 64, 2))) | (_GLF_IDENTITY((atomicLoad(buf[virtual_gid], 4, 64, 2)), 0u ^ ((atomicLoad(buf[virtual_gid], 4, 64, 2)))))), ((atomicLoad(buf[virtual_gid], 4, 64, 2))) ^ 0u)) | (~ (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, 0 ^ (4)))), 64, 2))))));
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false)))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bool(bool(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false)), bool(bool(bool(bvec3(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false)), bool(bool(bool(bvec3(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false)), bool(bool(bool(bvec3(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))) && true))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false)), bool(bool(bool(bvec3(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false)), bool(bool(bool(bvec3(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))) && true))))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))), _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY(! (! (true)), ! (! (! (! (true)))))), true))) && true)))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 subgroupBarrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5.7), _GLF_FUZZED(8940.5625)), vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).x, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5.7), _GLF_FUZZED(8940.5625)), vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5.7), _GLF_FUZZED(8940.5625)), vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).x, mix(float(_GLF_FUZZED(-121.533)), float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5.7), _GLF_FUZZED(8940.5625)), vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).x), bool(true))))) : _GLF_FUZZED(-0.8))) > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), mix(float(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2((vec2(1.0, 1.0))[0], (vec2(1.0, 1.0))[1]), vec2(_GLF_FUZZED(-8.6), _GLF_FUZZED(4.8)), bvec2(false, false)))).y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), float(_GLF_FUZZED(-8042.5659)), bool(false))), mix(float(_GLF_FUZZED(_GLF_IDENTITY(24.31, _GLF_IDENTITY(float(mat4x2(24.31, 1.0, 1.0, _GLF_ONE(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(5.6)), float(1.0), bool(true))), injectionSwitch.y), 0.0, 0.0, 1.0, determinant(mat4(0.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(211.944)), bool(false))), 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(float(1.0)))) * 1.0))), 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), clamp(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), mat3(1.0) * (vec3(1.0, 0.0, 0.0))), vec3(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(90.02)), float(1.0), bool(true))), 1.0, 1.0)), 0.0, 0.0), vec3(1.0, 0.0, 0.0))), vec3(0.0, 1.0, 1.0))), 0.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(1.0, (1.0) + 0.0) : _GLF_FUZZED(-0.9))), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(log2(_GLF_IDENTITY(-2.3, (-2.3) + 0.0))) : _GLF_IDENTITY(0.0, (0.0) * exp(0.0)))), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_IDENTITY(_GLF_FUZZED(-9.5), (false ? _GLF_FUZZED(-48.92) : _GLF_FUZZED(-9.5))))), 0.0, 1.0, 1.0, 0.0, 0.0)))), min(float(mat4x2(24.31, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0)), determinant(mat4(0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(8928.4596) : 0.0)), 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((- -6136.6521))), float(1.0), bool(true))), 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(min(0.0, 0.0), (min(0.0, 0.0)) * determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0)))), 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-9745.2287, float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(-9745.2287, (true ? -9745.2287 : _GLF_FUZZED(mix(-2.2, -72.15, 2805.7506)))), 0.0, 0.0), _GLF_IDENTITY(vec3(mat3x2(vec3(_GLF_IDENTITY(-9745.2287, (true ? -9745.2287 : _GLF_FUZZED(mix(-2.2, -72.15, 2805.7506)))), 0.0, 0.0), 1.0, 1.0, 0.0)), (vec3(mat3x2(vec3(_GLF_IDENTITY(-9745.2287, (true ? -9745.2287 : _GLF_FUZZED(mix(-2.2, -72.15, 2805.7506)))), 0.0, 0.0), 1.0, 1.0, 0.0))) / vec3(1.0, 1.0, 1.0))))))), float(1.0), bool(true))), 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(min(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0))))), float(_GLF_FUZZED((+ -722.717))), bool(false)))), (true ? _GLF_IDENTITY(min(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))), (false ? _GLF_FUZZED(min(3124.4662, -8638.7006)) : min(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))) : _GLF_FUZZED(cos(-9614.3429))))))))), float(mat4x2(24.31, 1.0, 1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, sqrt(abs(0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 1.0, 1.0, 0.0))).y), 0.0, 0.0, 1.0, determinant(mat4(0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))))))))), float(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), (clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) + determinant(mat2(0.0, 0.0, 1.0, 0.0)), ((injectionSwitch.y) + _GLF_IDENTITY(determinant(mat2(0.0, 0.0, 1.0, 0.0)), float(float(determinant(mat2(0.0, 0.0, 1.0, 0.0)))))) + 0.0)))) / 1.0))), _GLF_IDENTITY(bool(true), ! (! _GLF_IDENTITY((bool(true)), ! (! (_GLF_IDENTITY((bool(true)), true && ((bool(true)))))))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y))))
  return;
 atomicStore(checker[virtual_gid], read, 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec4(4, (0 >> _GLF_IDENTITY(int(1), int(1))), (1 | ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6)))), 1)), (int(ivec4(4, (0 >> _GLF_IDENTITY(int(1), int(1))), (1 | ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6)))), 1))) ^ 0)), int(ivec4(_GLF_IDENTITY(4, (4) | (4)), 1, ((0 << _GLF_IDENTITY(int(6), int(6))) ^ _GLF_IDENTITY(1, min(1, 1))), _GLF_IDENTITY(0, 0 ^ (0))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false), false)))))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), bool(bvec4(_GLF_IDENTITY((true), bool(bvec2((true), true))), false, true, true))))), _GLF_IDENTITY(true && (_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), bool(bvec4(_GLF_IDENTITY((true), bool(bvec2((true), true))), false, true, true)))))), ! (! (true && (_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(true, (true) || false)), bool(bvec2((true), _GLF_IDENTITY(true, (true) && true)))), false, true, true)))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))))), false || (_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), bool(bvec4(_GLF_IDENTITY((true), bool(bvec2((true), true))), false, true, true))))), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), (bool(true)) && true)))))), ! (! _GLF_IDENTITY((true), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((true), ! (! ((true)))), bool(bvec2((true), true))), false, true, true)))))), ! (! (true && (_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(true, (true) || false)), bool(_GLF_IDENTITY(bvec2((true), _GLF_IDENTITY(true, (true) && true)), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2((true), _GLF_IDENTITY(true, (true) && true)), false), bvec3(bvec4(bvec3(bvec2((true), _GLF_IDENTITY(true, (true) && true)), false), true)))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec3(bvec2((true), _GLF_IDENTITY(true, (true) && true)), false), bvec3(bvec4(bvec3(bvec2((true), _GLF_IDENTITY(true, (true) && true)), false), true)))))))))), false, true, true)))))))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * round(length(normalize(1.0)))) > injectionSwitch.y)), _GLF_IDENTITY(true, ! (! (true))), false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), bool(bvec4(_GLF_IDENTITY((true), bool(bvec2((true), true))), false, true, true))))), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), (bool(true)) && true)))))), ! (! _GLF_IDENTITY((true), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((true), ! (! ((true)))), bool(bvec2((true), true))), false, true, true)))))), ! (! (true && (_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(true, (true) || false)), bool(_GLF_IDENTITY(bvec2((true), _GLF_IDENTITY(true, (true) && true)), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2((true), _GLF_IDENTITY(true, (true) && true)), false), bvec3(bvec4(bvec3(bvec2((true), _GLF_IDENTITY(true, (true) && true)), false), true)))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec3(bvec2((true), _GLF_IDENTITY(true, (true) && true)), false), bvec3(bvec4(bvec3(bvec2((true), _GLF_IDENTITY(true, (true) && true)), false), true)))))))))), false, true, true)))))))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * round(length(normalize(1.0)))) > injectionSwitch.y)), _GLF_IDENTITY(true, ! (! (true))), false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), ! (! ((! (true)))))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec4(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), ! (! ((! _GLF_IDENTITY((true), false || ((true)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))))), true && ((false) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bvec4(true, true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x < injectionSwitch.y)) && (bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))))))), ! (! (_GLF_IDENTITY((false), ((false)) && true) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false), true)))))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(-79.64)), vec2(_GLF_FUZZED((- 978.552)), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y)), true, false)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), bool(bvec2(! (true), true)))), _GLF_IDENTITY((! (! (true))), bool(bool((! (! (true)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, true, true)))), (_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), bool(bvec2(! (true), true)))), _GLF_IDENTITY((! (! (true))), bool(bool((! (! (true)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, true, true))))) && true), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) && true) && (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))) && true), true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))) && true), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))) && true)))))))))), true, _GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < injectionSwitch.y)))) && (bool(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), false || (! (! (true))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true))), true, false))), _GLF_IDENTITY(bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-9790.9915)), float(injectionSwitch.y), bool(true))), mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-9790.9915)), float(injectionSwitch.y), bool(true)))), float(_GLF_FUZZED(-6.0)), bool(false)))) - 0.0))) && _GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) || false))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).x > injectionSwitch.y)), true, false))), ! (! ((bool(bvec4(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))), true, false)))))), true, false, true)), bool(bvec4(bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-9790.9915)), float(injectionSwitch.y), bool(true))), mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-9790.9915)), float(injectionSwitch.y), bool(true)))), float(_GLF_FUZZED(-6.0)), bool(false)))) - 0.0))) && _GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) || false))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).x > injectionSwitch.y)), true, false))), ! (! ((bool(bvec4(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))), true, false)))))), true, false, true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))))))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
