#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_0 {
 mat4x2 _f0;
 bvec2 _f1;
 uint _f2;
 mat2x4 _f3;
 ivec3 _f4;
 bool _f5;
} ;

struct _GLF_struct_1 {
 _GLF_struct_0 _f0;
 ivec4 _f1;
 uint subgroup_local_id;
} ;

struct _GLF_struct_2 {
 uint _f0;
 _GLF_struct_1 _f1;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && _GLF_IDENTITY((bool(bool(false))), ((bool(bool(false)))) && true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)))), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), false || (! (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(0.7), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-423.809)), bvec2(true, false))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x > injectionSwitch.y)))), ! (! ((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), false || (! (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(0.7), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-423.809)), bvec2(true, false))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))))))))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), true), false))))))))), ! (! (bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (bool(_GLF_DEAD(false))), false || (! (bool(_GLF_DEAD(false)))))))))))), true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, false))))))))), false), false, true)))))) && true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, ! (! (false)))))))
        return;
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          barrier();
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, true), false, true)))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 _GLF_struct_2 _GLF_struct_replacement_2 = _GLF_struct_2(1u, _GLF_struct_1(_GLF_struct_0(mat4x2(1.0), bvec2(true), _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(1u, 0u, uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_ONE(1.0, injectionSwitch.y)))), 1u), (uvec4(1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)) ^ uvec4(_GLF_IDENTITY(0u, uint(uvec4(0u, ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) << 0u))), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))))), 0u, 0u, _GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : 0u)))))))), (uint(_GLF_IDENTITY(uvec4(1u, 0u, uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 1.0))))).y))), _GLF_ONE(1.0, injectionSwitch.y)), (max(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-8431.2596))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (false ? _GLF_FUZZED(distance(6235.7419, -4.5)) : _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) + 0.0))), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 1.0)))), max(max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 1.0)))), max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 1.0))))))).y))), _GLF_ONE(1.0, injectionSwitch.y))) - 0.0))), 1u), (uvec4(1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)) ^ uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u))))) - 0u)), mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) * 1.0), (true ? _GLF_IDENTITY(1.0, (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (true) || false), true, true, true))) ? 1.0 : _GLF_FUZZED(-6.3), (_GLF_IDENTITY(true ? 1.0 : _GLF_FUZZED(-6.3), mix(float(true ? 1.0 : _GLF_FUZZED(-6.3)), float(_GLF_FUZZED(3.7)), bool(_GLF_IDENTITY(false, true && (false)))))) * 1.0))) : _GLF_FUZZED(91.23)))), ivec3(1), true), ivec4(1), gl_SubgroupInvocationID));
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 1.0))) : _GLF_FUZZED(dot((+ injectionSwitch), injectionSwitch)))) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(-591.783)), bool(false)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-3.0)), bool(false))), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))) && true), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) && true))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), (! (false)) && true)))) || false))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), (! (false)) && true)))) || false))), true, false)), (bool(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), (! (false)) && true)))) || false))), true, false))) || false)))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), (! (false)) && true)))) || _GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(false, false || (false))))))), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), (! (false)) && true)))) || _GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(false, false || (false))))))), false, false)), ! (_GLF_IDENTITY(! (bool(bvec3((_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), (! (false)) && true)))) || _GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(false, false || (false))))))), false, false))), (! (bool(bvec3((_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), (! (false)) && true)))) || _GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(false, false || (false))))))), false, false)))) && true))))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), ((! (false))) || false)) || false) && true)))) || false))))))))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        return;
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false))))))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), false)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-123.476)))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-123.476))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) && true))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED((- 4.1)), clamp(_GLF_FUZZED((- 4.1)), _GLF_FUZZED((- 4.1)), _GLF_FUZZED((- 4.1)))), _GLF_FUZZED(9087.4655)), vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(3.3), _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0)))[1], _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0)))[1], max(_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0)))[1], max((_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0)))[1], (_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0)))[1])), _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0)))[1], (true ? (_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0)))[1] : _GLF_FUZZED(-96.33))))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), (float(mat4x2(_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0)))[1], max(_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0)))[1], max((_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0)))[1], (_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0)))[1])), _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0)))[1], (true ? (_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0)))[1] : _GLF_FUZZED(-96.33))))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))) / 1.0))), vec2(_GLF_IDENTITY(((injectionSwitch)), mix(vec2(_GLF_FUZZED(85.17), (((injectionSwitch)))[1]), vec2((((injectionSwitch)))[0], _GLF_FUZZED((+ 91.08))), bvec2(_GLF_IDENTITY(true, bool(bvec2(true, true))), false)))[0], _GLF_FUZZED(-1.5)), bvec2(true, false))), (injectionSwitch), (injectionSwitch)))[0], 1.0 * _GLF_IDENTITY(((injectionSwitch)[0]), (false ? _GLF_FUZZED(-9906.3077) : ((injectionSwitch)[0])))), (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, bool(bvec2(false, false))) ? _GLF_FUZZED(-3476.9869) : injectionSwitch.y))))))).y))), true && (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED((- 4.1)), (false ? _GLF_FUZZED(-7.4) : _GLF_IDENTITY(_GLF_FUZZED((- 4.1)), max(_GLF_FUZZED((- 4.1)), _GLF_FUZZED((- 4.1)))))), _GLF_FUZZED(9087.4655)), vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(3.3), _GLF_IDENTITY(((injectionSwitch)), min(((injectionSwitch)), _GLF_IDENTITY(((injectionSwitch)), clamp(((injectionSwitch)), _GLF_IDENTITY(((injectionSwitch)), vec2(1.0, 1.0) * (((injectionSwitch)))), ((injectionSwitch))))))[1]), vec2(((injectionSwitch))[0], _GLF_FUZZED(_GLF_IDENTITY(-1.5, (false ? _GLF_FUZZED(-313.525) : -1.5)))), bvec2(true, false))), _GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(vec2(-8.8, -97.18)) : _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))))), (injectionSwitch), (injectionSwitch))), (injectionSwitch)))[0], 1.0 * ((injectionSwitch)[0])), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-6799.8546) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((- 4.1)), _GLF_FUZZED(9087.4655)), vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(3.3), _GLF_IDENTITY(((injectionSwitch)), min(((injectionSwitch)), _GLF_IDENTITY(((injectionSwitch)), clamp(((injectionSwitch)), _GLF_IDENTITY(((injectionSwitch)), vec2(1.0, 1.0) * (((injectionSwitch)))), ((injectionSwitch))))))[1]), vec2(((injectionSwitch))[0], _GLF_FUZZED(-1.5)), bvec2(true, false))), max(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(3.3), _GLF_IDENTITY(((injectionSwitch)), min(((injectionSwitch)), _GLF_IDENTITY(((injectionSwitch)), clamp(((injectionSwitch)), _GLF_IDENTITY(((injectionSwitch)), vec2(1.0, 1.0) * (((injectionSwitch)))), ((injectionSwitch))))))[1]), vec2(((injectionSwitch))[0], _GLF_FUZZED(-1.5)), bvec2(true, false))), (true ? _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(3.3), _GLF_IDENTITY(((injectionSwitch)), min(((injectionSwitch)), _GLF_IDENTITY(((injectionSwitch)), clamp(((injectionSwitch)), _GLF_IDENTITY(((injectionSwitch)), vec2(1.0, 1.0) * (((injectionSwitch)))), ((injectionSwitch))))))[1]), vec2(((injectionSwitch))[0], _GLF_FUZZED(-1.5)), bvec2(true, false))) : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(3.3), _GLF_IDENTITY(((injectionSwitch)), min(((injectionSwitch)), _GLF_IDENTITY(((injectionSwitch)), clamp(((injectionSwitch)), _GLF_IDENTITY(((injectionSwitch)), vec2(1.0, 1.0) * (((injectionSwitch)))), ((injectionSwitch))))))[1]), vec2(((injectionSwitch))[0], _GLF_FUZZED(-1.5)), bvec2(true, false))), vec2(mat3x4(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(3.3), _GLF_IDENTITY(((injectionSwitch)), min(((injectionSwitch)), _GLF_IDENTITY(((injectionSwitch)), clamp(((injectionSwitch)), _GLF_IDENTITY(((injectionSwitch)), vec2(1.0, 1.0) * (((injectionSwitch)))), ((injectionSwitch))))))[1]), vec2(((injectionSwitch))[0], _GLF_FUZZED(-1.5)), bvec2(true, false))), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, exp(0.0), 0.0, tan(0.0), 1.0))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), clamp(_GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(-8.8, -97.18)) : _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))), vec2(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(-8.8, -97.18)) : _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))), min(_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(-8.8, -97.18)) : _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))), vec2(mat3(false ? _GLF_FUZZED(vec2(-8.8, -97.18)) : _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))), false ? _GLF_FUZZED(vec2(-8.8, -97.18)) : _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))))), 0.0, determinant(mat2(0.0, 1.0, abs(0.0), tan(0.0))), 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), transpose(transpose(mat2x3(_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(-8.8, -97.18)) : _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))), min(_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(-8.8, -97.18)) : _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))), vec2(mat3(false ? _GLF_FUZZED(vec2(-8.8, -97.18)) : _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))), false ? _GLF_FUZZED(vec2(-8.8, -97.18)) : _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))))), 0.0, determinant(mat2(0.0, 1.0, abs(0.0), tan(0.0))), 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))))))))))), (injectionSwitch), (injectionSwitch))), (injectionSwitch)))[0], 1.0 * ((injectionSwitch)[0])), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (_GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(7128.9516, -7071.2818, -3081.2730, 4163.2390)) : _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) - mat2(0.0, 0.0, 0.0, 0.0)))) * (injectionSwitch)) - vec2(0.0, 0.0))))[1]), bvec2(true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), mix(vec2(_GLF_FUZZED((- 4.1)), _GLF_IDENTITY(_GLF_FUZZED(9087.4655), float(_GLF_IDENTITY(mat2(_GLF_FUZZED(9087.4655), log(1.0), 1.0, 1.0), _GLF_IDENTITY(mat2(_GLF_IDENTITY(mat2(mat2(_GLF_FUZZED(9087.4655), log(1.0), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0)), 1.0)), (mat2(mat2(_GLF_FUZZED(9087.4655), log(1.0), 1.0, 1.0))) / mat2(1.0, 1.0, 1.0, 1.0))), (mat2(_GLF_IDENTITY(mat2(mat2(_GLF_FUZZED(9087.4655), log(1.0), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0)), 1.0)), (mat2(mat2(_GLF_FUZZED(9087.4655), log(1.0), 1.0, 1.0))) / mat2(1.0, 1.0, 1.0, 1.0)))) + mat2(0.0, 0.0, 0.0, 0.0)))))), vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(3.3), _GLF_IDENTITY(((injectionSwitch)), min(((injectionSwitch)), _GLF_IDENTITY(((injectionSwitch)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch)), (((injectionSwitch))) - vec2(0.0, 0.0)), (((injectionSwitch))) / vec2(1.0, 1.0)), _GLF_IDENTITY(((injectionSwitch)), vec2(1.0, 1.0) * (((injectionSwitch)))), ((injectionSwitch))))))[1]), vec2(((injectionSwitch))[_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, max(0, 0)))))], _GLF_FUZZED(-1.5)), bvec2(true, false))), _GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))), (false ? _GLF_FUZZED(vec2(-8.8, -97.18)) : _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))))), (injectionSwitch), (injectionSwitch))), (injectionSwitch)))[0], 1.0 * ((injectionSwitch)[0])), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) | 0))))]), bvec2(true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(7.3) : injectionSwitch.x)) < injectionSwitch.y))))).y) / 1.0)))), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED((- 4.1)), (false ? _GLF_FUZZED(-7.4) : _GLF_IDENTITY(_GLF_FUZZED((- 4.1)), max(_GLF_FUZZED((- 4.1)), _GLF_FUZZED((- 4.1)))))), _GLF_FUZZED(9087.4655)), vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(3.3), _GLF_IDENTITY(((injectionSwitch)), min(((injectionSwitch)), _GLF_IDENTITY(((injectionSwitch)), clamp(((injectionSwitch)), _GLF_IDENTITY(((injectionSwitch)), vec2(1.0, 1.0) * (((injectionSwitch)))), ((injectionSwitch))))))[1]), vec2(((injectionSwitch))[0], _GLF_FUZZED(_GLF_IDENTITY(-1.5, (false ? _GLF_FUZZED(-313.525) : -1.5)))), bvec2(true, false))), _GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(vec2(-8.8, -97.18)) : _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))))), (injectionSwitch), (injectionSwitch))), (injectionSwitch)))[0], 1.0 * ((injectionSwitch)[0])), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-6799.8546) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((- 4.1)), _GLF_FUZZED(9087.4655)), vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(3.3), _GLF_IDENTITY(((injectionSwitch)), min(((injectionSwitch)), _GLF_IDENTITY(((injectionSwitch)), clamp(((injectionSwitch)), _GLF_IDENTITY(((injectionSwitch)), vec2(1.0, 1.0) * (((injectionSwitch)))), ((injectionSwitch))))))[1]), vec2(((injectionSwitch))[0], _GLF_FUZZED(-1.5)), bvec2(true, false))), max(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(3.3), _GLF_IDENTITY(((injectionSwitch)), min(((injectionSwitch)), _GLF_IDENTITY(((injectionSwitch)), clamp(((injectionSwitch)), _GLF_IDENTITY(((injectionSwitch)), vec2(1.0, 1.0) * (((injectionSwitch)))), ((injectionSwitch))))))[1]), vec2(((injectionSwitch))[0], _GLF_FUZZED(-1.5)), bvec2(true, false))), (true ? _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(3.3), _GLF_IDENTITY(((injectionSwitch)), min(((injectionSwitch)), _GLF_IDENTITY(((injectionSwitch)), clamp(((injectionSwitch)), _GLF_IDENTITY(((injectionSwitch)), vec2(1.0, 1.0) * (((injectionSwitch)))), ((injectionSwitch))))))[1]), vec2(((injectionSwitch))[0], _GLF_FUZZED(-1.5)), bvec2(true, false))) : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(3.3), _GLF_IDENTITY(((injectionSwitch)), min(((injectionSwitch)), _GLF_IDENTITY(((injectionSwitch)), clamp(((injectionSwitch)), _GLF_IDENTITY(((injectionSwitch)), vec2(1.0, 1.0) * (((injectionSwitch)))), ((injectionSwitch))))))[1]), vec2(((injectionSwitch))[0], _GLF_FUZZED(-1.5)), bvec2(true, false))), vec2(mat3x4(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(3.3), _GLF_IDENTITY(((injectionSwitch)), min(((injectionSwitch)), _GLF_IDENTITY(((injectionSwitch)), clamp(((injectionSwitch)), _GLF_IDENTITY(((injectionSwitch)), vec2(1.0, 1.0) * (((injectionSwitch)))), ((injectionSwitch))))))[1]), vec2(((injectionSwitch))[0], _GLF_FUZZED(-1.5)), bvec2(true, false))), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, exp(0.0), 0.0, tan(0.0), 1.0))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), clamp(_GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(-8.8, -97.18)) : _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))), vec2(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(-8.8, -97.18)) : _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))), min(_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(-8.8, -97.18)) : _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))), vec2(mat3(false ? _GLF_FUZZED(vec2(-8.8, -97.18)) : _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))), false ? _GLF_FUZZED(vec2(-8.8, -97.18)) : _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))))), 0.0, determinant(mat2(0.0, 1.0, abs(0.0), tan(0.0))), 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), transpose(transpose(mat2x3(_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(-8.8, -97.18)) : _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))), min(_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(-8.8, -97.18)) : _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))), vec2(mat3(false ? _GLF_FUZZED(vec2(-8.8, -97.18)) : _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))), false ? _GLF_FUZZED(vec2(-8.8, -97.18)) : _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))))), 0.0, determinant(mat2(0.0, 1.0, abs(0.0), tan(0.0))), 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))))))))))), (injectionSwitch), (injectionSwitch))), (injectionSwitch)))[0], 1.0 * ((injectionSwitch)[0])), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (_GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(7128.9516, -7071.2818, -3081.2730, 4163.2390)) : _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) - mat2(0.0, 0.0, 0.0, 0.0)))) * (injectionSwitch)) - vec2(0.0, 0.0))))[1]), bvec2(true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), mix(vec2(_GLF_FUZZED((- 4.1)), _GLF_IDENTITY(_GLF_FUZZED(9087.4655), float(_GLF_IDENTITY(mat2(_GLF_FUZZED(9087.4655), log(1.0), 1.0, 1.0), _GLF_IDENTITY(mat2(_GLF_IDENTITY(mat2(mat2(_GLF_FUZZED(9087.4655), log(1.0), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0)), 1.0)), (mat2(mat2(_GLF_FUZZED(9087.4655), log(1.0), 1.0, 1.0))) / mat2(1.0, 1.0, 1.0, 1.0))), (mat2(_GLF_IDENTITY(mat2(mat2(_GLF_FUZZED(9087.4655), log(1.0), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0)), 1.0)), (mat2(mat2(_GLF_FUZZED(9087.4655), log(1.0), 1.0, 1.0))) / mat2(1.0, 1.0, 1.0, 1.0)))) + mat2(0.0, 0.0, 0.0, 0.0)))))), vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(3.3), _GLF_IDENTITY(((injectionSwitch)), min(((injectionSwitch)), _GLF_IDENTITY(((injectionSwitch)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch)), (((injectionSwitch))) - vec2(0.0, 0.0)), (((injectionSwitch))) / vec2(1.0, 1.0)), _GLF_IDENTITY(((injectionSwitch)), vec2(1.0, 1.0) * (((injectionSwitch)))), ((injectionSwitch))))))[1]), vec2(((injectionSwitch))[_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, max(0, 0)))))], _GLF_FUZZED(-1.5)), bvec2(true, false))), _GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))), (false ? _GLF_FUZZED(vec2(-8.8, -97.18)) : _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))))), (injectionSwitch), (injectionSwitch))), (injectionSwitch)))[0], 1.0 * ((injectionSwitch)[0])), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) | 0))))]), bvec2(true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(7.3) : injectionSwitch.x)) < injectionSwitch.y))))).y) / 1.0)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec4(bvec2((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED((- 4.1)), (false ? _GLF_FUZZED(-7.4) : _GLF_IDENTITY(_GLF_FUZZED((- 4.1)), max(_GLF_FUZZED((- 4.1)), _GLF_FUZZED((- 4.1)))))), _GLF_FUZZED(9087.4655)), vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(3.3), _GLF_IDENTITY(((injectionSwitch)), min(((injectionSwitch)), _GLF_IDENTITY(((injectionSwitch)), clamp(((injectionSwitch)), _GLF_IDENTITY(((injectionSwitch)), vec2(1.0, 1.0) * (((injectionSwitch)))), ((injectionSwitch))))))[1]), vec2(((injectionSwitch))[0], _GLF_FUZZED(_GLF_IDENTITY(-1.5, (false ? _GLF_FUZZED(-313.525) : -1.5)))), bvec2(true, false))), _GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(vec2(-8.8, -97.18)) : _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))))), (injectionSwitch), (injectionSwitch))), (injectionSwitch)))[0], 1.0 * ((injectionSwitch)[0])), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-6799.8546) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((- 4.1)), _GLF_FUZZED(9087.4655)), vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(3.3), _GLF_IDENTITY(((injectionSwitch)), min(((injectionSwitch)), _GLF_IDENTITY(((injectionSwitch)), clamp(((injectionSwitch)), _GLF_IDENTITY(((injectionSwitch)), vec2(1.0, 1.0) * (((injectionSwitch)))), ((injectionSwitch))))))[1]), vec2(((injectionSwitch))[0], _GLF_FUZZED(-1.5)), bvec2(true, false))), max(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(3.3), _GLF_IDENTITY(((injectionSwitch)), min(((injectionSwitch)), _GLF_IDENTITY(((injectionSwitch)), clamp(((injectionSwitch)), _GLF_IDENTITY(((injectionSwitch)), vec2(1.0, 1.0) * (((injectionSwitch)))), ((injectionSwitch))))))[1]), vec2(((injectionSwitch))[0], _GLF_FUZZED(-1.5)), bvec2(true, false))), (true ? _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(3.3), _GLF_IDENTITY(((injectionSwitch)), min(((injectionSwitch)), _GLF_IDENTITY(((injectionSwitch)), clamp(((injectionSwitch)), _GLF_IDENTITY(((injectionSwitch)), vec2(1.0, 1.0) * (((injectionSwitch)))), ((injectionSwitch))))))[1]), vec2(((injectionSwitch))[0], _GLF_FUZZED(-1.5)), bvec2(true, false))) : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(3.3), _GLF_IDENTITY(((injectionSwitch)), min(((injectionSwitch)), _GLF_IDENTITY(((injectionSwitch)), clamp(((injectionSwitch)), _GLF_IDENTITY(((injectionSwitch)), vec2(1.0, 1.0) * (((injectionSwitch)))), ((injectionSwitch))))))[1]), vec2(((injectionSwitch))[0], _GLF_FUZZED(-1.5)), bvec2(true, false))), vec2(mat3x4(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(3.3), _GLF_IDENTITY(((injectionSwitch)), min(((injectionSwitch)), _GLF_IDENTITY(((injectionSwitch)), clamp(((injectionSwitch)), _GLF_IDENTITY(((injectionSwitch)), vec2(1.0, 1.0) * (((injectionSwitch)))), ((injectionSwitch))))))[1]), vec2(((injectionSwitch))[0], _GLF_FUZZED(-1.5)), bvec2(true, false))), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, exp(0.0), 0.0, tan(0.0), 1.0))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), clamp(_GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(-8.8, -97.18)) : _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))), vec2(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(-8.8, -97.18)) : _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))), min(_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(-8.8, -97.18)) : _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))), vec2(mat3(false ? _GLF_FUZZED(vec2(-8.8, -97.18)) : _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))), false ? _GLF_FUZZED(vec2(-8.8, -97.18)) : _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))))), 0.0, determinant(mat2(0.0, 1.0, abs(0.0), tan(0.0))), 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), transpose(transpose(mat2x3(_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(-8.8, -97.18)) : _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))), min(_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(-8.8, -97.18)) : _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))), vec2(mat3(false ? _GLF_FUZZED(vec2(-8.8, -97.18)) : _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))), false ? _GLF_FUZZED(vec2(-8.8, -97.18)) : _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))))), 0.0, determinant(mat2(0.0, 1.0, abs(0.0), tan(0.0))), 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))))))))))), (injectionSwitch), (injectionSwitch))), (injectionSwitch)))[0], 1.0 * ((injectionSwitch)[0])), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (_GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(7128.9516, -7071.2818, -3081.2730, 4163.2390)) : _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) - mat2(0.0, 0.0, 0.0, 0.0)))) * (injectionSwitch)) - vec2(0.0, 0.0))))[1]), bvec2(true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), mix(vec2(_GLF_FUZZED((- 4.1)), _GLF_IDENTITY(_GLF_FUZZED(9087.4655), float(_GLF_IDENTITY(mat2(_GLF_FUZZED(9087.4655), log(1.0), 1.0, 1.0), _GLF_IDENTITY(mat2(_GLF_IDENTITY(mat2(mat2(_GLF_FUZZED(9087.4655), log(1.0), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0)), 1.0)), (mat2(mat2(_GLF_FUZZED(9087.4655), log(1.0), 1.0, 1.0))) / mat2(1.0, 1.0, 1.0, 1.0))), (mat2(_GLF_IDENTITY(mat2(mat2(_GLF_FUZZED(9087.4655), log(1.0), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0)), 1.0)), (mat2(mat2(_GLF_FUZZED(9087.4655), log(1.0), 1.0, 1.0))) / mat2(1.0, 1.0, 1.0, 1.0)))) + mat2(0.0, 0.0, 0.0, 0.0)))))), vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(3.3), _GLF_IDENTITY(((injectionSwitch)), min(((injectionSwitch)), _GLF_IDENTITY(((injectionSwitch)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch)), (((injectionSwitch))) - vec2(0.0, 0.0)), (((injectionSwitch))) / vec2(1.0, 1.0)), _GLF_IDENTITY(((injectionSwitch)), vec2(1.0, 1.0) * (((injectionSwitch)))), ((injectionSwitch))))))[1]), vec2(((injectionSwitch))[_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, max(0, 0)))))], _GLF_FUZZED(-1.5)), bvec2(true, false))), _GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))), (false ? _GLF_FUZZED(vec2(-8.8, -97.18)) : _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))))), (injectionSwitch), (injectionSwitch))), (injectionSwitch)))[0], 1.0 * ((injectionSwitch)[0])), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) | 0))))]), bvec2(true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(7.3) : injectionSwitch.x)) < injectionSwitch.y))))).y) / 1.0)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false)), bvec2(bvec4(bvec2(bvec4(bvec2((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED((- 4.1)), (false ? _GLF_FUZZED(-7.4) : _GLF_IDENTITY(_GLF_FUZZED((- 4.1)), max(_GLF_FUZZED((- 4.1)), _GLF_FUZZED((- 4.1)))))), _GLF_FUZZED(9087.4655)), vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(3.3), _GLF_IDENTITY(((injectionSwitch)), min(((injectionSwitch)), _GLF_IDENTITY(((injectionSwitch)), clamp(((injectionSwitch)), _GLF_IDENTITY(((injectionSwitch)), vec2(1.0, 1.0) * (((injectionSwitch)))), ((injectionSwitch))))))[1]), vec2(((injectionSwitch))[0], _GLF_FUZZED(_GLF_IDENTITY(-1.5, (false ? _GLF_FUZZED(-313.525) : -1.5)))), bvec2(true, false))), _GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(vec2(-8.8, -97.18)) : _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))))), (injectionSwitch), (injectionSwitch))), (injectionSwitch)))[0], 1.0 * ((injectionSwitch)[0])), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-6799.8546) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((- 4.1)), _GLF_FUZZED(9087.4655)), vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(3.3), _GLF_IDENTITY(((injectionSwitch)), min(((injectionSwitch)), _GLF_IDENTITY(((injectionSwitch)), clamp(((injectionSwitch)), _GLF_IDENTITY(((injectionSwitch)), vec2(1.0, 1.0) * (((injectionSwitch)))), ((injectionSwitch))))))[1]), vec2(((injectionSwitch))[0], _GLF_FUZZED(-1.5)), bvec2(true, false))), max(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(3.3), _GLF_IDENTITY(((injectionSwitch)), min(((injectionSwitch)), _GLF_IDENTITY(((injectionSwitch)), clamp(((injectionSwitch)), _GLF_IDENTITY(((injectionSwitch)), vec2(1.0, 1.0) * (((injectionSwitch)))), ((injectionSwitch))))))[1]), vec2(((injectionSwitch))[0], _GLF_FUZZED(-1.5)), bvec2(true, false))), (true ? _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(3.3), _GLF_IDENTITY(((injectionSwitch)), min(((injectionSwitch)), _GLF_IDENTITY(((injectionSwitch)), clamp(((injectionSwitch)), _GLF_IDENTITY(((injectionSwitch)), vec2(1.0, 1.0) * (((injectionSwitch)))), ((injectionSwitch))))))[1]), vec2(((injectionSwitch))[0], _GLF_FUZZED(-1.5)), bvec2(true, false))) : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(3.3), _GLF_IDENTITY(((injectionSwitch)), min(((injectionSwitch)), _GLF_IDENTITY(((injectionSwitch)), clamp(((injectionSwitch)), _GLF_IDENTITY(((injectionSwitch)), vec2(1.0, 1.0) * (((injectionSwitch)))), ((injectionSwitch))))))[1]), vec2(((injectionSwitch))[0], _GLF_FUZZED(-1.5)), bvec2(true, false))), vec2(mat3x4(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(3.3), _GLF_IDENTITY(((injectionSwitch)), min(((injectionSwitch)), _GLF_IDENTITY(((injectionSwitch)), clamp(((injectionSwitch)), _GLF_IDENTITY(((injectionSwitch)), vec2(1.0, 1.0) * (((injectionSwitch)))), ((injectionSwitch))))))[1]), vec2(((injectionSwitch))[0], _GLF_FUZZED(-1.5)), bvec2(true, false))), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, exp(0.0), 0.0, tan(0.0), 1.0))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), clamp(_GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(-8.8, -97.18)) : _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))), vec2(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(-8.8, -97.18)) : _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))), min(_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(-8.8, -97.18)) : _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))), vec2(mat3(false ? _GLF_FUZZED(vec2(-8.8, -97.18)) : _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))), false ? _GLF_FUZZED(vec2(-8.8, -97.18)) : _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))))), 0.0, determinant(mat2(0.0, 1.0, abs(0.0), tan(0.0))), 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), transpose(transpose(mat2x3(_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(-8.8, -97.18)) : _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))), min(_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(-8.8, -97.18)) : _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))), vec2(mat3(false ? _GLF_FUZZED(vec2(-8.8, -97.18)) : _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))), false ? _GLF_FUZZED(vec2(-8.8, -97.18)) : _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))))), 0.0, determinant(mat2(0.0, 1.0, abs(0.0), tan(0.0))), 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))))))))))), (injectionSwitch), (injectionSwitch))), (injectionSwitch)))[0], 1.0 * ((injectionSwitch)[0])), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (_GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(7128.9516, -7071.2818, -3081.2730, 4163.2390)) : _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) - mat2(0.0, 0.0, 0.0, 0.0)))) * (injectionSwitch)) - vec2(0.0, 0.0))))[1]), bvec2(true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), mix(vec2(_GLF_FUZZED((- 4.1)), _GLF_IDENTITY(_GLF_FUZZED(9087.4655), float(_GLF_IDENTITY(mat2(_GLF_FUZZED(9087.4655), log(1.0), 1.0, 1.0), _GLF_IDENTITY(mat2(_GLF_IDENTITY(mat2(mat2(_GLF_FUZZED(9087.4655), log(1.0), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0)), 1.0)), (mat2(mat2(_GLF_FUZZED(9087.4655), log(1.0), 1.0, 1.0))) / mat2(1.0, 1.0, 1.0, 1.0))), (mat2(_GLF_IDENTITY(mat2(mat2(_GLF_FUZZED(9087.4655), log(1.0), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0)), 1.0)), (mat2(mat2(_GLF_FUZZED(9087.4655), log(1.0), 1.0, 1.0))) / mat2(1.0, 1.0, 1.0, 1.0)))) + mat2(0.0, 0.0, 0.0, 0.0)))))), vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(3.3), _GLF_IDENTITY(((injectionSwitch)), min(((injectionSwitch)), _GLF_IDENTITY(((injectionSwitch)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch)), (((injectionSwitch))) - vec2(0.0, 0.0)), (((injectionSwitch))) / vec2(1.0, 1.0)), _GLF_IDENTITY(((injectionSwitch)), vec2(1.0, 1.0) * (((injectionSwitch)))), ((injectionSwitch))))))[1]), vec2(((injectionSwitch))[_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, max(0, 0)))))], _GLF_FUZZED(-1.5)), bvec2(true, false))), _GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))), (false ? _GLF_FUZZED(vec2(-8.8, -97.18)) : _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))))), (injectionSwitch), (injectionSwitch))), (injectionSwitch)))[0], 1.0 * ((injectionSwitch)[0])), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) | 0))))]), bvec2(true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(7.3) : injectionSwitch.x)) < injectionSwitch.y))))).y) / 1.0)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false)), false, true)))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))))), ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           return;
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-754.259 - 8.6)), _GLF_FUZZED(-1814.9805)), vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) * 1.0), (injectionSwitch)[1]), bvec2(true, true))).y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, false)), bool(bool(bool(bvec4(false, true, true, false))))))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) || false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))))) || false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID)).x;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-3.4), (injectionSwitch)[1]), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(64.37)), min(vec2((injectionSwitch)[0], _GLF_FUZZED(64.37)), vec2((injectionSwitch)[0], _GLF_FUZZED(64.37)))), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y))) || false)) && true)))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_base = _GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(clamp(subgroup_id, subgroup_id, subgroup_id), (_GLF_IDENTITY(clamp(subgroup_id, subgroup_id, subgroup_id), max(clamp(subgroup_id, subgroup_id, subgroup_id), clamp(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uint(subgroup_id), ~ (~ (uint(subgroup_id))))))) / 1u), subgroup_id, subgroup_id)))) / 1u)))) * subgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)) | (workgroup_base)) + subgroup_base + _GLF_struct_replacement_2._f1.subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) * 1.0, 0.0 + ((injectionSwitch.x) * 1.0)))), float(_GLF_FUZZED(255.304)), bool(false))), injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_base + ((_GLF_struct_replacement_2._f1.subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) / ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))))) % subgroup_size);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], 0u ^ (_GLF_IDENTITY(buf[virtual_gid], (true ? buf[virtual_gid] : _GLF_FUZZED(num_workgroup))))), _GLF_IDENTITY(4, (4) >> 0), 64, _GLF_IDENTITY(2, (2) - 0));
 if(_GLF_IDENTITY((_GLF_struct_replacement_2._f1.subgroup_local_id % 2) == 0, true && (_GLF_IDENTITY((_GLF_struct_replacement_2._f1.subgroup_local_id % 2) == 0, (_GLF_IDENTITY((_GLF_struct_replacement_2._f1.subgroup_local_id % 2) == 0, true && ((_GLF_struct_replacement_2._f1.subgroup_local_id % 2) == 0))) && true))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(1), 4, _GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(-48705))), 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-56.90)), float(injectionSwitch.y), bool(true))), 1.0, round(length(normalize(vec3(1.0, 1.0, _GLF_IDENTITY(1.0, float(vec2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), sqrt(1.0)))))))), 0.0, 0.0, 1.0)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), bool(bvec4((! (false)), true, true, true)))))))))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false)))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, true, false)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
          barrier();
         return;
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), ! (! (bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))), _GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), ! (! (bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))), false)), (bool(bvec2(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false))))))) && true)))), ! (! (bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false))))))))))), false))) && true))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), true && (bool(bool(_GLF_DEAD(false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), false || (! ((injectionSwitch.x > injectionSwitch.y)))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))) && true))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(1), 4, _GLF_IDENTITY(64, 1 * (64)), 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 subgroupBarrier();
 atomicStore(checker[virtual_gid], read, 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))))), true && (bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))))))))))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    return;
   return;
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
