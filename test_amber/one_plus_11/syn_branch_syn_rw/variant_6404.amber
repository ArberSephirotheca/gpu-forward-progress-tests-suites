#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_8 {
 mat2 _f0;
 vec3 _f1;
} ;

struct _GLF_struct_9 {
 _GLF_struct_8 _f0;
} ;

struct _GLF_struct_10 {
 mat3x2 _f0;
 _GLF_struct_9 _f1;
 vec4 _f2;
 ivec4 _f3;
 uint subgroup_size;
 mat3 _f4;
} ;

struct _GLF_struct_7 {
 uint next_virtual_gid;
 mat2x3 _f0;
} ;

struct _GLF_struct_4 {
 mat3 _f0;
 bvec4 _f1;
 mat4 _f2;
 mat4x3 _f3;
 mat2x4 _f4;
} ;

struct _GLF_struct_3 {
 bvec2 _f0;
 mat4 _f1;
 mat4 _f2;
 bvec3 _f3;
 mat2x4 _f4;
} ;

struct _GLF_struct_2 {
 uvec3 _f0;
 mat3x2 _f1;
 bvec4 _f2;
 bool _f3;
 ivec4 _f4;
} ;

struct _GLF_struct_1 {
 mat2 _f0;
 uvec4 _f1;
 bool _f2;
 mat4x3 _f3;
 ivec4 _f4;
 bvec4 _f5;
 uvec2 _f6;
} ;

struct _GLF_struct_0 {
 mat3 _f0;
 mat3 _f1;
} ;

struct _GLF_struct_5 {
 _GLF_struct_0 _f0;
 bvec4 _f1;
 _GLF_struct_1 _f2;
 _GLF_struct_2 _f3;
 _GLF_struct_3 _f4;
 _GLF_struct_4 _f5;
} ;

struct _GLF_struct_6 {
 mat3x4 _f0;
 vec4 _f1;
 uint num_workgroup;
 _GLF_struct_5 _f2;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 uvec2 GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))), false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uvec4 GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_17next_virtual_gidreadsubgroup_idsubgroup_local_id;
 uvec3 GLF_merged3_0_1_13_1_1_17_2_1_14subgroup_basesubgroup_local_idworkgroup_base;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec2(! (! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, false, true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uvec4 GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_17next_virtual_gidreadsubgroup_idsubgroup_local_id.z = subgroup_id, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_17next_virtual_gidreadsubgroup_idsubgroup_local_id.z = subgroup_id, (GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_17next_virtual_gidreadsubgroup_idsubgroup_local_id.z = subgroup_id) / 1u)) / _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(135135u)))) | 0u));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w = GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_17next_virtual_gidreadsubgroup_idsubgroup_local_id.z;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 _GLF_struct_10 _GLF_struct_replacement_10 = _GLF_struct_10(mat3x2(_GLF_IDENTITY(1.0, float(vec3(1.0, 1.0, 1.0)))), _GLF_struct_9(_GLF_struct_8(_GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY((true ? mat2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / 1.0), mix(float(_GLF_FUZZED(351.546)), float(1.0), bool(true)))) : _GLF_FUZZED(_GLF_IDENTITY(mat2(-8510.9928, -1.7, 2.8, 3024.1435), mat2(mat2x3(mat2(-8510.9928, _GLF_IDENTITY(-1.7, float(float(_GLF_IDENTITY(-1.7, min(-1.7, -1.7))))), 2.8, 3024.1435)))))), mat2(_GLF_IDENTITY(mat2x4((true ? mat2(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(351.546), clamp(_GLF_FUZZED(351.546), _GLF_IDENTITY(_GLF_FUZZED(351.546), 1.0 * (_GLF_FUZZED(351.546))), _GLF_IDENTITY(_GLF_FUZZED(351.546), clamp(_GLF_FUZZED(351.546), _GLF_FUZZED(351.546), _GLF_IDENTITY(_GLF_FUZZED(351.546), mix(float(_GLF_FUZZED(351.546)), float(_GLF_FUZZED(-1.8)), bool(false)))))))), float(1.0), bool(true)))) : _GLF_FUZZED(_GLF_IDENTITY(mat2(-8510.9928, -1.7, 2.8, 3024.1435), mat2(mat2x3(mat2(-8510.9928, -1.7, 2.8, 3024.1435))))))), mat2x4(mat2x4(mat2x4((true ? mat2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(416.970) : 1.0)), mix(float(_GLF_FUZZED(351.546)), float(1.0), bool(true)))) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(mat2(-8510.9928, -1.7, 2.8, 3024.1435), mat2(mat2x3(mat2(-8510.9928, -1.7, 2.8, 3024.1435))))), mat2(_GLF_IDENTITY(mat2x4(_GLF_FUZZED(_GLF_IDENTITY(mat2(-8510.9928, -1.7, 2.8, 3024.1435), mat2(mat2x3(mat2(-8510.9928, -1.7, 2.8, 3024.1435)))))), transpose(transpose(mat2x4(_GLF_FUZZED(_GLF_IDENTITY(mat2(-8510.9928, -1.7, 2.8, 3024.1435), mat2(mat2x3(mat2(-8510.9928, -1.7, 2.8, 3024.1435))))))))))))))))))), vec3(1.0))), _GLF_IDENTITY(vec4(1.0), (_GLF_IDENTITY(vec4(1.0), min(_GLF_IDENTITY(vec4(1.0), (vec4(_GLF_IDENTITY(1.0, min(1.0, 1.0)))) / vec4(1.0, 1.0, 1.0, 1.0)), vec4(1.0)))) * abs(vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(determinant(mat2(372.049, -6.5, -5012.9383, -74.89)))))))), ivec4(1), gl_SubgroupSize, _GLF_IDENTITY(mat3(1.0), (_GLF_IDENTITY(mat3(1.0), mat3(mat3x4(mat3(1.0))))) * mat3(1.0)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).y))) || false, bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).y))) || false, true))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_17next_virtual_gidreadsubgroup_idsubgroup_local_id.w = subgroup_local_id;
 GLF_merged3_0_1_13_1_1_17_2_1_14subgroup_basesubgroup_local_idworkgroup_base.y = GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_17next_virtual_gidreadsubgroup_idsubgroup_local_id.w;
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_6 _GLF_struct_replacement_6 = _GLF_struct_6(mat3x4(1.0), vec4(_GLF_IDENTITY(1.0, min(1.0, 1.0))), _GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(min(_GLF_IDENTITY(gl_NumWorkGroups.x, 0u + (_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups.x) | 0u, 0u ^ ((gl_NumWorkGroups.x) | 0u)), (_GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups.x) | 0u, 0u ^ ((gl_NumWorkGroups.x) | 0u)), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY((gl_NumWorkGroups.x) | 0u, 0u ^ ((gl_NumWorkGroups.x) | 0u)))), ~ (~ (_GLF_IDENTITY((~ (_GLF_IDENTITY((gl_NumWorkGroups.x) | 0u, 0u ^ ((gl_NumWorkGroups.x) | 0u)))), ((~ (_GLF_IDENTITY((gl_NumWorkGroups.x) | 0u, 0u ^ ((gl_NumWorkGroups.x) | 0u))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))) | (_GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups.x) | 0u, 0u ^ ((gl_NumWorkGroups.x) | 0u)), (_GLF_IDENTITY((gl_NumWorkGroups.x) | 0u, 0u ^ ((gl_NumWorkGroups.x) | 0u))) ^ 0u)))))), gl_NumWorkGroups.x), max(min(_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(0u + (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | 0u)), ~ (~ (0u + (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | 0u)))))), gl_NumWorkGroups.x), min(_GLF_IDENTITY(gl_NumWorkGroups.x, 0u + _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY((gl_NumWorkGroups.x) | 0u, ((gl_NumWorkGroups.x) | 0u) | ((gl_NumWorkGroups.x) | 0u)))), ((_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY((gl_NumWorkGroups.x) | 0u, ((gl_NumWorkGroups.x) | 0u) | ((gl_NumWorkGroups.x) | 0u))))) | ((_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY((gl_NumWorkGroups.x) | 0u, ((gl_NumWorkGroups.x) | 0u) | ((gl_NumWorkGroups.x) | 0u))))))), _GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))), gl_NumWorkGroups, gl_NumWorkGroups)).x)))), _GLF_struct_5(_GLF_struct_0(mat3(1.0), mat3(1.0)), bvec4(true), _GLF_struct_1(mat2(1.0), uvec4(1u), true, mat4x3(_GLF_IDENTITY(1.0, (1.0) / 1.0)), _GLF_IDENTITY(ivec4(1), (ivec4(1)) - ivec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), bvec4(true), uvec2(_GLF_IDENTITY(1u, (1u) >> 0u))), _GLF_struct_2(uvec3(1u), mat3x2(1.0), bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), bool(bvec4(_GLF_IDENTITY(true, true && (true)), false, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) * vec2(1.0, 1.0))))).x < injectionSwitch.y)))))), true, ivec4(1)), _GLF_struct_3(bvec2(true), mat4(1.0), mat4(1.0), bvec3(true), mat2x4(1.0)), _GLF_struct_4(mat3(1.0), bvec4(true), mat4(1.0), mat4x3(1.0), mat2x4(1.0))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.y = _GLF_struct_replacement_6.num_workgroup;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-9.6), _GLF_FUZZED(-9.6)), bvec2(false, false))).y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), false, false)))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), false, false))))))), false || (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), false, false))))))), true && (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.x > injectionSwitch.y) || false), false, _GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), (_GLF_IDENTITY(! ((false)), bool(bvec3(! ((false)), true, true)))) && true))) && true))))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.x > injectionSwitch.y) || false), false, _GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), (_GLF_IDENTITY(! ((false)), bool(bvec3(! ((false)), true, true)))) && true))) && true))))))))))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   barrier();
  }
 _GLF_IDENTITY(GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.y = _GLF_IDENTITY(workgroup_size, ~ (~ (_GLF_IDENTITY(workgroup_size, uint(uvec3(workgroup_size, 0u, 1u)))))), (GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.y = workgroup_size) + 0u);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))) && true)))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size, uvec2(GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size[0], GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size[1])).y * _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(workgroup_id, (workgroup_id) >> 0u))), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.y * workgroup_id), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size, (GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size) | (GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size)).y * workgroup_id), min(~ (_GLF_IDENTITY(GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.y, _GLF_IDENTITY(uint(uvec3(GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.y, 0u, 1u)), (uint(uvec3(GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.y, 0u, 1u))) << 0u)) * workgroup_id), ~ _GLF_IDENTITY((GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.y * workgroup_id), (false ? _GLF_FUZZED(workgroup_id) : (GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.y * workgroup_id))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size, (GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size) | (GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size)).y * workgroup_id), min(~ (GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.y * workgroup_id), ~ (_GLF_IDENTITY(GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size, (GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size) | (GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size)).y * workgroup_id)))) | 0u))))), (~ (_GLF_IDENTITY(~ (GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.y * workgroup_id), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size, (GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size) | _GLF_IDENTITY((GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size), uvec2(1u, 1u) * (_GLF_IDENTITY((GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size), uvec2(0u, 0u) ^ (_GLF_IDENTITY((GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size), (false ? _GLF_FUZZED(uvec2(103027u, 176017u)) : (GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size)))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size, (GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size) | _GLF_IDENTITY((GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size), uvec2(1u, 1u) * (_GLF_IDENTITY((GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size), uvec2(0u, 0u) ^ (_GLF_IDENTITY((GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size), (false ? _GLF_FUZZED(uvec2(103027u, 176017u)) : (GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size)))))))), (_GLF_IDENTITY(GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size, (GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size) | _GLF_IDENTITY((GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size), uvec2(1u, 1u) * (_GLF_IDENTITY((GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size), uvec2(0u, 0u) ^ (_GLF_IDENTITY((GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size), (false ? _GLF_FUZZED(uvec2(103027u, 176017u)) : (GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size))))))))) | (uvec2(0u, 0u) << _GLF_IDENTITY(uvec2(6u), uvec2(6u)))), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size, (GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size) | _GLF_IDENTITY((GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size), uvec2(1u, 1u) * (_GLF_IDENTITY((GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size), uvec2(0u, 0u) ^ (_GLF_IDENTITY((GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size), (false ? _GLF_FUZZED(uvec2(103027u, 176017u)) : (GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size)))))))), clamp(_GLF_IDENTITY(GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size, (GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size) | _GLF_IDENTITY((GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size), uvec2(1u, 1u) * (_GLF_IDENTITY((GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size), uvec2(0u, 0u) ^ (_GLF_IDENTITY((GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size), (false ? _GLF_FUZZED(uvec2(103027u, 176017u)) : (GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size)))))))), _GLF_IDENTITY(GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size, (GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size) | _GLF_IDENTITY((GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size), uvec2(1u, 1u) * (_GLF_IDENTITY((GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size), uvec2(0u, 0u) ^ (_GLF_IDENTITY((GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size), (false ? _GLF_FUZZED(uvec2(103027u, 176017u)) : (GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size)))))))), _GLF_IDENTITY(GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size, (GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size) | _GLF_IDENTITY((GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size), uvec2(1u, 1u) * (_GLF_IDENTITY((GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size), uvec2(0u, 0u) ^ (_GLF_IDENTITY((GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size), (false ? _GLF_FUZZED(uvec2(103027u, 176017u)) : (GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size)))))))))))).y * workgroup_id), min(~ (GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.y * workgroup_id), ~ (_GLF_IDENTITY(GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size, min(GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size, _GLF_IDENTITY(GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size, (false ? _GLF_FUZZED(uvec2(146473u, 187222u)) : GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size)))).y * workgroup_id))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size, (GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size) | (_GLF_IDENTITY(GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size, clamp(GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size, GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size, GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size)))).y * workgroup_id), min(~ (GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.y * workgroup_id), ~ (GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.y * workgroup_id)))) | 0u)))))) - 0u));
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x = workgroup_base;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(-91.73, -71.22)) : injectionSwitch)))[0])), _GLF_FUZZED(-1180.3209)), vec2(_GLF_FUZZED(-70.56), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], (false ? _GLF_FUZZED(-7121.4971) : (injectionSwitch)[1]))), vec2(_GLF_FUZZED(2665.4709), _GLF_FUZZED(189.393)), bvec2(false, false)))), ((injectionSwitch)) - vec2(0.0, 0.0))[1]), bvec2(false, _GLF_IDENTITY(true, false || (true))))).y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, abs(vec2(0.0, 0.0)) + (injectionSwitch)).y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, float(mat4x3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, 1.0, sin(0.0), 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec4(0.0, 0.0, exp(0.0), _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0))), _GLF_IDENTITY(vec4(vec4(_GLF_IDENTITY(vec4(0.0, 0.0, exp(0.0), 1.0), vec4(mat4x2(vec4(0.0, 0.0, exp(0.0), 1.0), 1.0, 1.0, 0.0, 1.0))))), vec4(mat3(vec4(vec4(_GLF_IDENTITY(vec4(0.0, 0.0, exp(0.0), 1.0), vec4(mat4x2(vec4(0.0, 0.0, exp(0.0), 1.0), 1.0, 1.0, 0.0, 1.0))))), 1.0, 0.0, 1.0, 1.0, 0.0)))))))), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged3_0_1_13_1_1_17_2_1_14subgroup_basesubgroup_local_idworkgroup_base.z = _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x, (GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x) >> (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))), (_GLF_IDENTITY(GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x, (GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x) >> (0u >> _GLF_IDENTITY(uint(5u), uint(5u))))) + 0u);
 uint subgroup_base = GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w * _GLF_struct_replacement_10.subgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 GLF_merged3_0_1_13_1_1_17_2_1_14subgroup_basesubgroup_local_idworkgroup_base.x = subgroup_base;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_17_2_1_14subgroup_basesubgroup_local_idworkgroup_base.z, (false ? _GLF_FUZZED(subgroup_local_id) : GLF_merged3_0_1_13_1_1_17_2_1_14subgroup_basesubgroup_local_idworkgroup_base.z)) + GLF_merged3_0_1_13_1_1_17_2_1_14subgroup_basesubgroup_local_idworkgroup_base.x, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_17_2_1_14subgroup_basesubgroup_local_idworkgroup_base.z, (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u)) : GLF_merged3_0_1_13_1_1_17_2_1_14subgroup_basesubgroup_local_idworkgroup_base.z)) + GLF_merged3_0_1_13_1_1_17_2_1_14subgroup_basesubgroup_local_idworkgroup_base.x, (true ? _GLF_IDENTITY(GLF_merged3_0_1_13_1_1_17_2_1_14subgroup_basesubgroup_local_idworkgroup_base.z, (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_local_id) : GLF_merged3_0_1_13_1_1_17_2_1_14subgroup_basesubgroup_local_idworkgroup_base.z, (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_local_id) : GLF_merged3_0_1_13_1_1_17_2_1_14subgroup_basesubgroup_local_idworkgroup_base.z, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_local_id) : GLF_merged3_0_1_13_1_1_17_2_1_14subgroup_basesubgroup_local_idworkgroup_base.z, clamp(false ? _GLF_FUZZED(subgroup_local_id) : GLF_merged3_0_1_13_1_1_17_2_1_14subgroup_basesubgroup_local_idworkgroup_base.z, false ? _GLF_FUZZED(subgroup_local_id) : GLF_merged3_0_1_13_1_1_17_2_1_14subgroup_basesubgroup_local_idworkgroup_base.z, false ? _GLF_FUZZED(subgroup_local_id) : GLF_merged3_0_1_13_1_1_17_2_1_14subgroup_basesubgroup_local_idworkgroup_base.z)), 1u), _GLF_IDENTITY((uvec2(_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_local_id) : GLF_merged3_0_1_13_1_1_17_2_1_14subgroup_basesubgroup_local_idworkgroup_base.z, clamp(false ? _GLF_FUZZED(subgroup_local_id) : GLF_merged3_0_1_13_1_1_17_2_1_14subgroup_basesubgroup_local_idworkgroup_base.z, false ? _GLF_FUZZED(subgroup_local_id) : GLF_merged3_0_1_13_1_1_17_2_1_14subgroup_basesubgroup_local_idworkgroup_base.z, false ? _GLF_FUZZED(subgroup_local_id) : GLF_merged3_0_1_13_1_1_17_2_1_14subgroup_basesubgroup_local_idworkgroup_base.z)), 1u)) << uvec2(0u, 0u), uvec2(0u, 0u) ^ ((uvec2(_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_local_id) : GLF_merged3_0_1_13_1_1_17_2_1_14subgroup_basesubgroup_local_idworkgroup_base.z, clamp(false ? _GLF_FUZZED(subgroup_local_id) : GLF_merged3_0_1_13_1_1_17_2_1_14subgroup_basesubgroup_local_idworkgroup_base.z, false ? _GLF_FUZZED(subgroup_local_id) : GLF_merged3_0_1_13_1_1_17_2_1_14subgroup_basesubgroup_local_idworkgroup_base.z, false ? _GLF_FUZZED(subgroup_local_id) : GLF_merged3_0_1_13_1_1_17_2_1_14subgroup_basesubgroup_local_idworkgroup_base.z)), 1u)) << uvec2(0u, 0u))))))) / ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(1u), uint(1u)), 0u | (1u << _GLF_IDENTITY(uint(1u), uint(1u))))) >> _GLF_IDENTITY(uint(1u), uint(1u)))))) + GLF_merged3_0_1_13_1_1_17_2_1_14subgroup_basesubgroup_local_idworkgroup_base.x : _GLF_FUZZED(70669u)))) / 1u) + GLF_merged3_0_1_13_1_1_17_2_1_14subgroup_basesubgroup_local_idworkgroup_base.y;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_7 _GLF_struct_replacement_7 = _GLF_struct_7(_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_17_2_1_14subgroup_basesubgroup_local_idworkgroup_base.z + GLF_merged3_0_1_13_1_1_17_2_1_14subgroup_basesubgroup_local_idworkgroup_base.x, max(GLF_merged3_0_1_13_1_1_17_2_1_14subgroup_basesubgroup_local_idworkgroup_base.z + GLF_merged3_0_1_13_1_1_17_2_1_14subgroup_basesubgroup_local_idworkgroup_base.x, GLF_merged3_0_1_13_1_1_17_2_1_14subgroup_basesubgroup_local_idworkgroup_base.z + GLF_merged3_0_1_13_1_1_17_2_1_14subgroup_basesubgroup_local_idworkgroup_base.x)) + (_GLF_IDENTITY((GLF_merged3_0_1_13_1_1_17_2_1_14subgroup_basesubgroup_local_idworkgroup_base.y + 1), min(_GLF_IDENTITY((GLF_merged3_0_1_13_1_1_17_2_1_14subgroup_basesubgroup_local_idworkgroup_base.y + _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(75584)))), ((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_17_2_1_14subgroup_basesubgroup_local_idworkgroup_base, (_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_17_2_1_14subgroup_basesubgroup_local_idworkgroup_base, min(GLF_merged3_0_1_13_1_1_17_2_1_14subgroup_basesubgroup_local_idworkgroup_base, GLF_merged3_0_1_13_1_1_17_2_1_14subgroup_basesubgroup_local_idworkgroup_base))) | _GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(uvec4(_GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, 0u)))), 1u)))), uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(-4.7), _GLF_FUZZED(float(true))), mix(vec2((vec2(_GLF_FUZZED(-4.7), _GLF_FUZZED(float(true))))[0], _GLF_FUZZED(117.177)), vec2(_GLF_FUZZED(-2.9), (vec2(_GLF_FUZZED(-4.7), _GLF_FUZZED(float(true))))[1]), bvec2(false, true))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) || false), true))).x)) ^ (GLF_merged3_0_1_13_1_1_17_2_1_14subgroup_basesubgroup_local_idworkgroup_base)).y + 1)) << (0u >> _GLF_IDENTITY(uint(8u), uint(8u)))), _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_17_2_1_14subgroup_basesubgroup_local_idworkgroup_base.y + 1, 0u + (_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_17_2_1_14subgroup_basesubgroup_local_idworkgroup_base.y + 1, (_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_17_2_1_14subgroup_basesubgroup_local_idworkgroup_base.y + 1, max(GLF_merged3_0_1_13_1_1_17_2_1_14subgroup_basesubgroup_local_idworkgroup_base.y + 1, GLF_merged3_0_1_13_1_1_17_2_1_14subgroup_basesubgroup_local_idworkgroup_base.y + 1))) - 0u)))), ((_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_17_2_1_14subgroup_basesubgroup_local_idworkgroup_base, _GLF_IDENTITY((GLF_merged3_0_1_13_1_1_17_2_1_14subgroup_basesubgroup_local_idworkgroup_base) << uvec3(0u, 0u, 0u), min((GLF_merged3_0_1_13_1_1_17_2_1_14subgroup_basesubgroup_local_idworkgroup_base) << uvec3(0u, 0u, 0u), (GLF_merged3_0_1_13_1_1_17_2_1_14subgroup_basesubgroup_local_idworkgroup_base) << uvec3(0u, 0u, 0u)))).y + 1)) << 0u))) % _GLF_struct_replacement_10.subgroup_size), mat2x3(1.0));
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)).y))))
    barrier();
   barrier();
  }
 GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_17next_virtual_gidreadsubgroup_idsubgroup_local_id.x = _GLF_struct_replacement_7.next_virtual_gid;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(0.0, 0.0) + (mat2(1.0) * (injectionSwitch)))).y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), _GLF_IDENTITY(bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-9.5)), bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(bvec2(true, true), true)))))))), ! (! (true)))) || false)))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5.1), _GLF_FUZZED(-0.9)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) + sin(0.0))), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y)), true), true))))), true))))), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-1562.2425)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((- (- 0.6)))), bvec2(true, false))).y)), true), _GLF_IDENTITY(bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(0.0, float(mat4(0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0)))) > injectionSwitch.y)), true))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, (false ? _GLF_FUZZED(-1.6) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x)) > injectionSwitch.y, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)), true)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, (false ? _GLF_FUZZED(-1.6) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x)) > injectionSwitch.y, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)), true)), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, (false ? _GLF_FUZZED(-1.6) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x)) > injectionSwitch.y, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)), true))))))))), true))))), bool(bvec3(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)), true), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bvec3(bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)), dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)))))), injectionSwitch.x)) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))) || false))), true), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))) && true)), (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))) || false))), true), false))))), true))))), true, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_IDENTITY(true, bool(bvec3(true, true, false)))))))), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-8.5))))), float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-8.5))))), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0), (_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-8.5))))), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0), transpose(transpose(mat3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-8.5))))), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0))))) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) > injectionSwitch.y))), _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5.1), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], sqrt(1.0) * ((injectionSwitch)[0])), _GLF_FUZZED(741.037)), bvec2(true, false))).x, 1.0 * (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5.1), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], sqrt(1.0) * ((injectionSwitch)[0])), _GLF_FUZZED(741.037)), bvec2(true, false))).x)) < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(mat2x3((injectionSwitch) * mat2(1.0), 0.0, 1.0, cos(0.0), 0.0)))).y), ! (! (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) * mat2(1.0)), vec2(mat2x3((injectionSwitch) * mat2(1.0), 0.0, 1.0, cos(0.0), 0.0)))).y), false || ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(mat2x3((injectionSwitch) * mat2(1.0), 0.0, 1.0, cos(0.0), 0.0)))).y))))))), true)), false || (bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(8.8) : injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (_GLF_IDENTITY(bool(bvec3(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(bool(bvec3(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, false)))))) && _GLF_IDENTITY((false || (false)), ! (! (_GLF_IDENTITY((false || (false)), ((false || (_GLF_IDENTITY(false, false || (false))))) && true))))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), true))))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, false || (false)), true, true))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY(_GLF_IDENTITY((false), false || ((false))), (_GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), bool(bool((false))))))))) || false))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(false || ((false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false || ((false)), false, true), bvec3(bvec3(bvec3(false || ((false)), false, true))))), ! (! (bool(_GLF_IDENTITY(bvec3(false || ((false)), false, true), bvec3(bvec3(bvec3(false || ((false)), false, true)))))))))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, ! _GLF_IDENTITY((! _GLF_IDENTITY((false), false || ((false)))), ((! _GLF_IDENTITY((false), false || ((false))))) || false))), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, ! _GLF_IDENTITY((! _GLF_IDENTITY((false), false || ((false)))), ((! _GLF_IDENTITY((false), false || ((false))))) || false))), bool(bool((_GLF_IDENTITY(false, ! _GLF_IDENTITY((! _GLF_IDENTITY((false), false || ((false)))), ((! _GLF_IDENTITY((false), false || ((false))))) || false))))))))))))), (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), false || ((false))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), false || ((false))))), ! (! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), ! (! ((false)))))))))))))), (injectionSwitch.x > injectionSwitch.y))), false, true, false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.x = GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_17next_virtual_gidreadsubgroup_idsubgroup_local_id.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 2);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), bool(bool(bool(bvec3(false, true, false)))))), bool(bvec3(false, false, _GLF_IDENTITY(true, (true) && true))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_17next_virtual_gidreadsubgroup_idsubgroup_local_id.y = read, 0u ^ (GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_17next_virtual_gidreadsubgroup_idsubgroup_local_id.y = read));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))) || false)))
  barrier();
 GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.z = GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_17next_virtual_gidreadsubgroup_idsubgroup_local_id.y;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_17_2_1_14subgroup_basesubgroup_local_idworkgroup_base.y, max(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_17_2_1_14subgroup_basesubgroup_local_idworkgroup_base, uvec3(0u, 0u, 0u) + (GLF_merged3_0_1_13_1_1_17_2_1_14subgroup_basesubgroup_local_idworkgroup_base)).y, (GLF_merged3_0_1_13_1_1_17_2_1_14subgroup_basesubgroup_local_idworkgroup_base.y) - 0u), GLF_merged3_0_1_13_1_1_17_2_1_14subgroup_basesubgroup_local_idworkgroup_base.y)) % 2) == 0, ((_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_17_2_1_14subgroup_basesubgroup_local_idworkgroup_base.y, max(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_17_2_1_14subgroup_basesubgroup_local_idworkgroup_base, uvec3(0u, 0u, 0u) + (GLF_merged3_0_1_13_1_1_17_2_1_14subgroup_basesubgroup_local_idworkgroup_base)).y, (GLF_merged3_0_1_13_1_1_17_2_1_14subgroup_basesubgroup_local_idworkgroup_base.y) - 0u), GLF_merged3_0_1_13_1_1_17_2_1_14subgroup_basesubgroup_local_idworkgroup_base.y)) % 2) == 0) && true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id, (false ? _GLF_FUZZED(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id) : _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id, _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u) + (GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id), (true ? uvec4(0u, 0u, 0u, 0u) + (GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id) : _GLF_FUZZED(uvec4(15025u, 157267u, 139407u, 106758u))))))).x, (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id, (false ? _GLF_FUZZED(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id, uvec4(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id[0], GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id[1], GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id[2], GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id[3])), uvec4(0u, 0u, 0u, 0u) + (GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id)))).x))], uint(1), _GLF_IDENTITY(4, min(4, 4)), 64, _GLF_IDENTITY(4, min(4, _GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY((4) / 1, int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY((4) / 1, clamp((4) / 1, (4) / 1, (4) / _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (1) ^ 0))))), 1, (1 & 1), 1), ivec4(1, 1, 1, 1) * _GLF_IDENTITY((ivec4((4) / 1, 1, _GLF_IDENTITY((1 & 1), 0 | ((1 & 1))), _GLF_IDENTITY(1, (1 ^ _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, ~ (~ (1))))))) | (1)))), min((ivec4((4) / 1, 1, _GLF_IDENTITY((1 & 1), 0 | ((1 & 1))), _GLF_IDENTITY(1, (1 ^ _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, ~ (~ (1))))))) | (1)))), (ivec4((4) / 1, 1, _GLF_IDENTITY((1 & 1), 0 | ((1 & 1))), _GLF_IDENTITY(1, (1 ^ _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, ~ (~ (1))))))) | (1)))))))))), max(_GLF_IDENTITY(4, _GLF_IDENTITY((4) / 1, int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY((4) / 1, clamp((4) / 1, (4) / 1, (4) / _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (1) ^ 0))))), 1, (1 & 1), 1), ivec4(1, 1, 1, 1) * _GLF_IDENTITY((ivec4((4) / 1, 1, _GLF_IDENTITY((1 & 1), 0 | ((1 & 1))), _GLF_IDENTITY(1, (1 ^ _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, ~ (~ (1))))))) | (1)))), min((ivec4((4) / 1, 1, _GLF_IDENTITY((1 & 1), 0 | ((1 & 1))), _GLF_IDENTITY(1, (1 ^ _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, ~ (~ (1))))))) | (1)))), (ivec4((4) / 1, 1, _GLF_IDENTITY((1 & 1), 0 | ((1 & 1))), _GLF_IDENTITY(1, (1 ^ _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, ~ (~ (1))))))) | (1)))))))))), _GLF_IDENTITY(4, _GLF_IDENTITY((4) / 1, int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY((4) / 1, clamp((4) / 1, (4) / 1, (4) / _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (1) ^ 0))))), 1, (1 & 1), 1), ivec4(1, 1, 1, 1) * _GLF_IDENTITY((ivec4((4) / 1, 1, _GLF_IDENTITY((1 & 1), 0 | ((1 & 1))), _GLF_IDENTITY(1, (1 ^ _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, ~ (~ (1))))))) | (1)))), min((ivec4((4) / 1, 1, _GLF_IDENTITY((1 & 1), 0 | ((1 & 1))), _GLF_IDENTITY(1, (1 ^ _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, ~ (~ (1))))))) | (1)))), (ivec4((4) / 1, 1, _GLF_IDENTITY((1 & 1), 0 | ((1 & 1))), _GLF_IDENTITY(1, (1 ^ _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, ~ (~ (1))))))) | (1)))))))))))))));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
      barrier();
     barrier();
    }
   atomicStore(buf[GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.x], uint(1), _GLF_IDENTITY(4, (4) - 0), 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec4((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, false, false))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, log(1.0)))).y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) || false))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-3570.4977)), float(injectionSwitch.x), bool(true))))) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y), clamp(clamp(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y), clamp(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y), _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y), clamp(clamp(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y), _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y), min(clamp(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y), clamp(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))), clamp(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))))))))), _GLF_IDENTITY(bool(bvec3((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), (clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)) / 1.0))))), false, false)), true && (bool(_GLF_IDENTITY(bvec3((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) / 1.0))), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))) + 0.0)))), bool(bool((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) / 1.0))), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))) + 0.0))))))))), false, false), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch)).y)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(9.5)), bool(false))), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))) + 0.0)))))), false, false)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec4(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(length(vec2(0.0, 0.0)), 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(length(vec2(0.0, 0.0)), 0.0, 1.0, 0.0)))), mix(vec4(_GLF_FUZZED(710.070), _GLF_FUZZED(52.30), (vec4(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(length(vec2(0.0, 0.0)), 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(length(vec2(0.0, 0.0)), 0.0, 1.0, 0.0)))))[2], _GLF_FUZZED(617.362)), vec4((vec4(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(length(vec2(0.0, 0.0)), 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(length(vec2(0.0, 0.0)), 0.0, 1.0, 0.0)))))[0], (vec4(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(length(vec2(0.0, 0.0)), 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(length(vec2(0.0, 0.0)), 0.0, 1.0, 0.0)))))[1], _GLF_FUZZED(191.223), (vec4(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(length(vec2(0.0, 0.0)), 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(length(vec2(0.0, 0.0)), 0.0, 1.0, 0.0)))))[3]), bvec4(true, true, false, true))))), injectionSwitch.y, injectionSwitch.y)), min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))) + 0.0)))))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec4(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(length(vec2(0.0, 0.0)), 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(length(vec2(0.0, 0.0)), 0.0, 1.0, 0.0)))), mix(vec4(_GLF_FUZZED(710.070), _GLF_FUZZED(52.30), (vec4(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(length(vec2(0.0, 0.0)), 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(length(vec2(0.0, 0.0)), 0.0, 1.0, 0.0)))))[2], _GLF_FUZZED(617.362)), vec4((vec4(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(length(vec2(0.0, 0.0)), 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(length(vec2(0.0, 0.0)), 0.0, 1.0, 0.0)))))[0], (vec4(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(length(vec2(0.0, 0.0)), 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(length(vec2(0.0, 0.0)), 0.0, 1.0, 0.0)))))[1], _GLF_FUZZED(191.223), (vec4(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(length(vec2(0.0, 0.0)), 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(length(vec2(0.0, 0.0)), 0.0, 1.0, 0.0)))))[3]), bvec4(true, true, false, true))))), injectionSwitch.y, injectionSwitch.y)), min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))) + 0.0))))))))), false, false)), false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch)).y)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(9.5)), bool(false))), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))) + 0.0)))))), false, false)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec4(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(length(vec2(0.0, 0.0)), 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(length(vec2(0.0, 0.0)), 0.0, 1.0, 0.0)))), mix(vec4(_GLF_FUZZED(710.070), _GLF_FUZZED(52.30), (vec4(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(length(vec2(0.0, 0.0)), 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(length(vec2(0.0, 0.0)), 0.0, 1.0, 0.0)))))[2], _GLF_FUZZED(617.362)), vec4((vec4(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(length(vec2(0.0, 0.0)), 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(length(vec2(0.0, 0.0)), 0.0, 1.0, 0.0)))))[0], (vec4(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(length(vec2(0.0, 0.0)), 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(length(vec2(0.0, 0.0)), 0.0, 1.0, 0.0)))))[1], _GLF_FUZZED(191.223), (vec4(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(length(vec2(0.0, 0.0)), 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(length(vec2(0.0, 0.0)), 0.0, 1.0, 0.0)))))[3]), bvec4(true, true, false, true))))), injectionSwitch.y, injectionSwitch.y)), min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))) + 0.0)))))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec4(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(length(vec2(0.0, 0.0)), 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(length(vec2(0.0, 0.0)), 0.0, 1.0, 0.0)))), mix(vec4(_GLF_FUZZED(710.070), _GLF_FUZZED(52.30), (vec4(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(length(vec2(0.0, 0.0)), 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(length(vec2(0.0, 0.0)), 0.0, 1.0, 0.0)))))[2], _GLF_FUZZED(617.362)), vec4((vec4(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(length(vec2(0.0, 0.0)), 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(length(vec2(0.0, 0.0)), 0.0, 1.0, 0.0)))))[0], (vec4(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(length(vec2(0.0, 0.0)), 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(length(vec2(0.0, 0.0)), 0.0, 1.0, 0.0)))))[1], _GLF_FUZZED(191.223), (vec4(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(length(vec2(0.0, 0.0)), 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(length(vec2(0.0, 0.0)), 0.0, 1.0, 0.0)))))[3]), bvec4(true, true, false, true))))), injectionSwitch.y, injectionSwitch.y)), min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))) + 0.0))))))))), false, false)), false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-8.1) : injectionSwitch.x)), 0.0, 0.0, 1.0, 1.0, 1.0), transpose(transpose(mat2x3(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-8.1) : injectionSwitch.x)), 0.0, 0.0, 1.0, 1.0, 1.0)))))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 1.0))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - log(1.0))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0) : _GLF_FUZZED(-256.221)))))), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))), false || (! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0) : _GLF_FUZZED(-256.221)))))), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 subgroupBarrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, _GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec3(bool(bvec2(false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))), true, false)))))), true, false)), false || (_GLF_IDENTITY(bool(bvec3(bool(bvec2(false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / sqrt(1.0)))), injectionSwitch, injectionSwitch)).y), ! (! ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))), true, false)))))), true, false)), ! (! (bool(bvec3(bool(bvec2(_GLF_IDENTITY(false, false || (false)), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(! (! ((injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(! (! ((injectionSwitch.x < injectionSwitch.y))), ! (! (! (! ((injectionSwitch.x < injectionSwitch.y))))))) || false)), ! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))))), true, _GLF_IDENTITY(false, ! (! (false))))))))), true, false)))))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool(bvec2(false, _GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec3(bool(bvec2(false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))), true, false)))))), true, false)), false || (_GLF_IDENTITY(bool(bvec3(bool(bvec2(false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / sqrt(1.0)))), injectionSwitch, injectionSwitch)).y), ! (! ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))), true, false)))))), true, false)), ! (! (bool(bvec3(bool(bvec2(_GLF_IDENTITY(false, false || (false)), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(! (! ((injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(! (! ((injectionSwitch.x < injectionSwitch.y))), ! (! (! (! ((injectionSwitch.x < injectionSwitch.y))))))) || false)), ! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))))), true, _GLF_IDENTITY(false, ! (! (false))))))))), true, false)))))))), true)), true && (bool(bvec2(_GLF_IDENTITY(bool(bvec2(false, _GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec3(bool(bvec2(false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))), true, false)))))), true, false)), false || (_GLF_IDENTITY(bool(bvec3(bool(bvec2(false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / sqrt(1.0)))), injectionSwitch, injectionSwitch)).y), ! (! ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))), true, false)))))), true, false)), ! (! (bool(bvec3(bool(bvec2(_GLF_IDENTITY(false, false || (false)), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(! (! ((injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(! (! ((injectionSwitch.x < injectionSwitch.y))), ! (! (! (! ((injectionSwitch.x < injectionSwitch.y))))))) || false)), ! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))))), true, _GLF_IDENTITY(false, ! (! (false))))))))), true, false)))))))), true))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(checker[virtual_gid], GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.z, 4, 64, 4);
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
