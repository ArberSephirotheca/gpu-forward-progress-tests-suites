#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_16 {
 int _f0;
 bool _f1;
} ;

struct _GLF_struct_17 {
 int _f0;
 _GLF_struct_16 _f1;
 mat2 _f2;
 mat2x4 _f3;
 uint workgroup_base;
 mat4x2 _f4;
} ;

struct _GLF_struct_15 {
 bool _f0;
 uint workgroup_size;
 mat2x4 _f1;
} ;

struct _GLF_struct_12 {
 uvec2 _f0;
} ;

struct _GLF_struct_13 {
 _GLF_struct_12 _f0;
 ivec4 _f1;
 int _f2;
} ;

struct _GLF_struct_14 {
 uint num_workgroup;
 _GLF_struct_13 _f0;
} ;

struct _GLF_struct_9 {
 mat4x3 _f0;
 bvec3 _f1;
 bvec4 _f2;
} ;

struct _GLF_struct_8 {
 mat4x2 _f0;
} ;

struct _GLF_struct_7 {
 mat2 _f0;
 ivec3 _f1;
 float _f2;
} ;

struct _GLF_struct_10 {
 mat2x4 _f0;
 mat4 _f1;
 _GLF_struct_7 _f2;
 mat3 _f3;
 _GLF_struct_8 _f4;
 _GLF_struct_9 _f5;
} ;

struct _GLF_struct_5 {
 int _f0;
 mat2 _f1;
} ;

struct _GLF_struct_6 {
 mat4x3 _f0;
 _GLF_struct_5 _f1;
} ;

struct _GLF_struct_3 {
 mat3x4 _f0;
 uvec3 _f1;
 vec4 _f2;
 ivec4 _f3;
 float _f4;
 uvec4 _f5;
 ivec4 _f6;
} ;

struct _GLF_struct_2 {
 float _f0;
 vec4 _f1;
 vec2 _f2;
 bvec3 _f3;
} ;

struct _GLF_struct_4 {
 float _f0;
 _GLF_struct_2 _f1;
 _GLF_struct_3 _f2;
} ;

struct _GLF_struct_0 {
 uvec3 _f0;
} ;

struct _GLF_struct_1 {
 mat3x4 _f0;
 _GLF_struct_0 _f1;
} ;

struct _GLF_struct_11 {
 mat3 _f0;
 _GLF_struct_1 _f1;
 _GLF_struct_4 _f2;
 bvec4 _f3;
 bvec3 _f4;
 _GLF_struct_6 _f5;
 _GLF_struct_10 _f6;
 uint subgroup_local_id;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(true, (true) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true)), bool(bool(_GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)), false || (bool(bvec3(false, _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch), (false ? _GLF_FUZZED(sin(vec2(-9850.1871, -88.52))) : _GLF_IDENTITY((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch), max((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))))).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
  barrier();
 _GLF_struct_11 _GLF_struct_replacement_11 = _GLF_struct_11(mat3(1.0), _GLF_struct_1(mat3x4(1.0), _GLF_struct_0(uvec3(1u))), _GLF_struct_4(1.0, _GLF_struct_2(1.0, vec4(1.0), vec2(1.0), bvec3(true)), _GLF_struct_3(mat3x4(1.0), uvec3(1u), vec4(1.0), ivec4(1), _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(660.435)), float(1.0), bool(true))))), 1.0)), uvec4(1u), ivec4(1))), bvec4(true), bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), ! (! (true)))), _GLF_struct_6(mat4x3(_GLF_IDENTITY(1.0, float(mat2(1.0, 1.0, abs(1.0), sqrt(0.0))))), _GLF_struct_5(_GLF_IDENTITY(1, (1) + (0 << _GLF_IDENTITY(int(6), int(6)))), mat2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(determinant(_GLF_IDENTITY(mat4(1.0, sqrt(1.0), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, determinant(_GLF_IDENTITY(mat2(0.0, 0.0, 0.0, 0.0), (mat2(0.0, 0.0, 0.0, 0.0)) - mat2(0.0, 0.0, 0.0, 0.0))), 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))), (false ? _GLF_FUZZED((+ mat4(2228.8242, -8.8, 5821.1265, 4.3, -8579.1105, -17.86, 5662.9578, 9.0, 928.140, 919.360, -832.695, -5983.3620, _GLF_IDENTITY(-97.10, max(-97.10, -97.10)), -86.81, -72.51, 5.2))) : mat4(1.0, sqrt(1.0), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(4.8)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))))), max(determinant(_GLF_IDENTITY(mat4(1.0, sqrt(1.0), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, determinant(_GLF_IDENTITY(mat2(0.0, 0.0, 0.0, 0.0), (mat2(0.0, 0.0, 0.0, 0.0)) - mat2(0.0, 0.0, 0.0, 0.0))), 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))), (false ? _GLF_FUZZED((+ mat4(2228.8242, -8.8, 5821.1265, 4.3, -8579.1105, -17.86, 5662.9578, 9.0, 928.140, 919.360, -832.695, -5983.3620, _GLF_IDENTITY(-97.10, max(-97.10, -97.10)), -86.81, -72.51, 5.2))) : mat4(1.0, sqrt(1.0), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(4.8)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))))), determinant(_GLF_IDENTITY(mat4(1.0, sqrt(1.0), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, determinant(_GLF_IDENTITY(mat2(0.0, 0.0, 0.0, 0.0), (mat2(0.0, 0.0, 0.0, 0.0)) - mat2(0.0, 0.0, 0.0, 0.0))), 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))), (false ? _GLF_FUZZED((+ mat4(2228.8242, -8.8, 5821.1265, 4.3, -8579.1105, -17.86, 5662.9578, 9.0, 928.140, 919.360, -832.695, -5983.3620, _GLF_IDENTITY(-97.10, max(-97.10, -97.10)), -86.81, -72.51, 5.2))) : mat4(1.0, sqrt(1.0), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(4.8)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))))))) * (_GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(1.0, 1.0, 1.0), (clamp(1.0, 1.0, 1.0)) - 0.0)))), mix(float(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(0.6)), bool(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false)))))))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(2.1)), float(1.0), bool(true))))), mix(float(1.0), float(_GLF_IDENTITY(_GLF_FUZZED(2405.5720), clamp(_GLF_IDENTITY(_GLF_FUZZED(2405.5720), clamp(_GLF_FUZZED(2405.5720), _GLF_FUZZED(2405.5720), _GLF_FUZZED(2405.5720))), _GLF_FUZZED(2405.5720), _GLF_FUZZED(2405.5720)))), bool(false)))))), float(_GLF_FUZZED(843.324)), _GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), ! (! (bool(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(_GLF_IDENTITY(bvec2((! (false)), true), bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2((! (false)), true), bvec2(bvec2(bvec2((! (false)), true)))), bvec2(bvec3(_GLF_IDENTITY(bvec2((! (false)), true), bvec2(bvec2(bvec2(_GLF_IDENTITY((! (false)), ((! (false))) || false), true)))), true)))))))))))))))))), _GLF_struct_10(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(7.7) : _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) - _GLF_IDENTITY(dot(vec4(sin(0.0), 0.0, 0.0, 0.0), vec4(1.0, 1.0, cos(0.0), 1.0)), dot(vec4(sin(0.0), 0.0, 0.0, 0.0), vec4(1.0, 1.0, cos(0.0), 1.0)))))), mix(float(_GLF_FUZZED(55.98)), float(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(7.7) : _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) - _GLF_IDENTITY(dot(vec4(sin(0.0), 0.0, 0.0, 0.0), vec4(1.0, 1.0, cos(0.0), 1.0)), dot(vec4(sin(0.0), 0.0, 0.0, 0.0), vec4(1.0, 1.0, cos(0.0), 1.0))))))), bool(true)))), mat4(1.0), _GLF_struct_7(mat2(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) / 1.0), 1.0))), ivec3(1), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4(1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), 0.0, 0.0, 0.0, 1.0, 1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), sin(0.0), 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0), (mat4(1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), 0.0, 0.0, 0.0, 1.0, 1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), sin(0.0), 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY(mat3(_GLF_IDENTITY(1.0, _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), (bool(! (false))) && true))))))))), true && (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), (bool(! _GLF_IDENTITY((false), false || ((false))))) && true)))), bool(bvec4(! _GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), (bool(! _GLF_IDENTITY((false), false || ((false))))) && true)))), ! (! ((_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), (bool(! _GLF_IDENTITY((false), false || ((false))))) && true))))))), true, false, false))))))))))))) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, ! (! (true))))), ! (_GLF_IDENTITY(! (bool(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), true && (! (! _GLF_IDENTITY((_GLF_IDENTITY(true, true && (true))), bool(bvec4((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec2(! (true), true)))))), true, false, true)))))))))), ! (! (_GLF_IDENTITY(! (bool(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), true && (! (! _GLF_IDENTITY((_GLF_IDENTITY(true, true && (true))), bool(bvec4((true), true, false, true)))))))))), _GLF_IDENTITY(bool(bvec4(! (bool(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), true && (! (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(true, true && (true))), bool(bvec4((true), true, false, true))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(true, true && (true))), bool(bvec4((true), true, false, true))))), false || (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(true, true && (true))), bool(bvec4((true), true, false, true))))))))))))))), true, false, true)), bool(bvec4(bool(bvec4(! (bool(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), true && (! (! _GLF_IDENTITY((_GLF_IDENTITY(true, true && (true))), bool(bvec4((true), true, false, true)))))))))), true, false, true)), false, false, true))))))))))), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(4813.1231) : _GLF_IDENTITY(1.0, 0.0 + (1.0))), float(mat2(_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), (bool(! (false))) && true))))))))), true && (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), (bool(! _GLF_IDENTITY((false), false || ((false))))) && true)))), bool(bvec4(! _GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), (bool(! _GLF_IDENTITY((false), false || ((false))))) && true)))), ! (! ((_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), (bool(! _GLF_IDENTITY((false), false || ((false))))) && true))))))), true, false, false))))))))))))) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, ! (! (true))))), ! (_GLF_IDENTITY(! (bool(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), true && (! (! _GLF_IDENTITY((_GLF_IDENTITY(true, true && (true))), bool(bvec4((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec2(! (true), true)))))), true, false, true)))))))))), ! (! (_GLF_IDENTITY(! (bool(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), true && (! (! _GLF_IDENTITY((_GLF_IDENTITY(true, true && (true))), bool(bvec4((true), true, false, true)))))))))), _GLF_IDENTITY(bool(bvec4(! (bool(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), true && (! (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(true, true && (true))), bool(bvec4((true), true, false, true))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(true, true && (true))), bool(bvec4((true), true, false, true))))), false || (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(true, true && (true))), bool(bvec4((true), true, false, true))))))))))))))), true, false, true)), bool(bvec4(bool(bvec4(! (bool(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), true && (! (! _GLF_IDENTITY((_GLF_IDENTITY(true, true && (true))), bool(bvec4((true), true, false, true)))))))))), true, false, true)), false, false, true))))))))))), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(4813.1231) : _GLF_IDENTITY(1.0, 0.0 + (1.0))), mix(float(_GLF_FUZZED(1980.9537)), float((_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), (bool(! (false))) && true))))))))), true && (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), (bool(! _GLF_IDENTITY((false), false || ((false))))) && true)))), bool(bvec4(! _GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), (bool(! _GLF_IDENTITY((false), false || ((false))))) && true)))), ! (! ((_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), (bool(! _GLF_IDENTITY((false), false || ((false))))) && true))))))), true, false, false))))))))))))) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, ! (! (true))))), ! (_GLF_IDENTITY(! (bool(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), true && (! (! _GLF_IDENTITY((_GLF_IDENTITY(true, true && (true))), bool(bvec4((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec2(! (true), true)))))), true, false, true)))))))))), ! (! (_GLF_IDENTITY(! (bool(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), true && (! (! _GLF_IDENTITY((_GLF_IDENTITY(true, true && (true))), bool(bvec4((true), true, false, true)))))))))), _GLF_IDENTITY(bool(bvec4(! (bool(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), true && (! (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(true, true && (true))), bool(bvec4((true), true, false, true))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(true, true && (true))), bool(bvec4((true), true, false, true))))), false || (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(true, true && (true))), bool(bvec4((true), true, false, true))))))))))))))), true, false, true)), bool(bvec4(bool(bvec4(! (bool(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), true && (! (! _GLF_IDENTITY((_GLF_IDENTITY(true, true && (true))), bool(bvec4((true), true, false, true)))))))))), true, false, true)), false, false, true))))))))))), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(4813.1231) : _GLF_IDENTITY(1.0, 0.0 + (1.0)))), bool(true))), 1.0, 0.0, 0.0))))), mat3(_GLF_ONE(1.0, injectionSwitch.y)) * (mat3(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! _GLF_IDENTITY(((! _GLF_IDENTITY((false), bool(bool((false)))))), (((! _GLF_IDENTITY((false), bool(bool((false))))))) || false)))))), ! (! ((! (_GLF_IDENTITY(false, ! (! (false))))))))))))) && true), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))))), ! (! ((! (false)))))))), ! (! ((! (_GLF_IDENTITY(false, ! (! (false))))))))), bool(bvec3(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))))), ! (! ((! (false)))))))), ! (! ((! (_GLF_IDENTITY(false, ! (! (false))))))))), false, true))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))))), ! (! ((! (false)))))))), ! (! ((! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false))))))))))), (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))))), ! (! ((! (false)))))))), ! (! ((! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bool((! (false)))), (bool(bool((! (false))))) && true))), true && (_GLF_IDENTITY(false, ! (! (false)))))))))))) || false))))), false, true), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))))), ! (! ((! (false)))))))), ! (! ((! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false))))))))))), (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))))), ! (! ((! (false)))))))), ! (! ((! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bool((! (false)))), (bool(bool((! (false))))) && true))), true && (_GLF_IDENTITY(false, ! (! (false)))))))))))) || false))))), false, true), bvec3(bvec3(bvec3((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))))), ! (! ((! (false)))))))), ! (! ((! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false))))))))))), (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))))), ! (! ((! (false)))))))), ! (! ((! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bool((! (false)))), (bool(bool((! (false))))) && true))), true && (_GLF_IDENTITY(false, ! (! (false)))))))))))) || false))))), false, true)))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))))), ! (! ((! (false)))))))), ! (! ((! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false))))))))))), (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))))), ! (! ((! (false)))))))), ! (! ((! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bool((! (false)))), (bool(bool((! (false))))) && true))), true && (_GLF_IDENTITY(false, ! (! (false)))))))))))) || false))))), false, true), bvec3(bvec3(bvec3((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))))), ! (! ((! (false)))))))), ! (! ((! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false))))))))))), (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))))), ! (! ((! (false)))))))), ! (! ((! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bool((! (false)))), (bool(bool((! (false))))) && true))), true && (_GLF_IDENTITY(false, ! (! (false)))))))))))) || false))))), false, true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))))), ! (! ((! (false)))))))), ! (! ((! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false))))))))))), (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))))), ! (! ((! (false)))))))), ! (! ((! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bool((! (false)))), (bool(bool((! (false))))) && true))), true && (_GLF_IDENTITY(false, ! (! (false)))))))))))) || false))))), false, true), bvec3(bvec3(bvec3((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))))), ! (! ((! (false)))))))), ! (! ((! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false))))))))))), (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))))), ! (! ((! (false)))))))), ! (! ((! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bool((! (false)))), (bool(bool((! (false))))) && true))), true && (_GLF_IDENTITY(false, ! (! (false)))))))))))) || false))))), false, true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), bvec3(bvec3(bvec3((_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, ! _GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))))), ! (! ((! (false)))))))), ! (! ((! (_GLF_IDENTITY(false, ! (! (false)))))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))))), ! (! ((! (false)))))), true && (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))))), ! (! ((! (false)))))))))), ! (! ((! (_GLF_IDENTITY(false, ! (! (false)))))))), true, false)), (bool(bvec3(_GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))))), ! (! ((! (false))))), (! _GLF_IDENTITY((! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))))), ! (! ((! (false)))))) || false)))), ! (! ((! (_GLF_IDENTITY(false, ! (! (false)))))))), true, false))) || false)))), false || ((_GLF_IDENTITY(false, ! _GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))))), ! (! ((! (false)))))))), ! (! ((! (_GLF_IDENTITY(false, ! (! (false)))))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))))), ! (! ((! (false)))))), true && (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))))), ! (! ((! (false)))))))))), ! (! ((! (_GLF_IDENTITY(false, ! (! (false)))))))), true, false)), (bool(bvec3(_GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))))), ! (! ((! (false))))), (! _GLF_IDENTITY((! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))))), ! (! ((! (false)))))) || false)))), ! (! ((! (_GLF_IDENTITY(false, ! (! (false)))))))), true, false))) || false))))))))), false, true))))), (bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))))), ! (! ((! (false)))))))), ! (! ((! (_GLF_IDENTITY(false, ! (! (false))))))))))))), false, true), bvec3(bvec3(bvec3((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))))), ! (! ((! (false)))))))), ! (! ((! (_GLF_IDENTITY(false, ! (! (false))))))))))))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bool(_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))))), true)))))) && true)) && true), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / round(length(normalize(1.0)))), bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).y)), true, false))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! ((! (false)))))))), ! (! ((! (_GLF_IDENTITY(false, ! (! (false))))))))))))) && true), (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), bool(bool(! (! (false)))))))), ! (! ((! (false)))))))), ! (! ((! (_GLF_IDENTITY(false, ! (! (false)))))))))))), bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! ((! (false))))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! ((! (false)))))))), ! (! (! ((_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! ((! (false)))))))))))))), ! (! ((! (_GLF_IDENTITY(false, ! (! (false)))))))))))), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && _GLF_IDENTITY(true, ! (! (true)))), (injectionSwitch.x > injectionSwitch.y)))))))) && true) ? _GLF_FUZZED(4813.1231) : _GLF_IDENTITY(1.0, 0.0 + (1.0))))))), _GLF_struct_8(mat4x2(1.0)), _GLF_struct_9(mat4x3(1.0), bvec3(true), bvec4(true))), gl_SubgroupInvocationID);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_14 _GLF_struct_replacement_14 = _GLF_struct_14(gl_NumWorkGroups.x, _GLF_struct_13(_GLF_struct_12(uvec2(1u)), ivec4(1), 1));
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_15 _GLF_struct_replacement_15 = _GLF_struct_15(true, gl_WorkGroupSize.x, mat2x4(1.0));
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false)))))), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false)))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false)))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), false, false)), bvec2(bvec2(bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false)))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), false, false))))))))) && true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true)))), bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true))), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))))) && true))), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))))) && true))), true && (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))))) && true))))), false))), true, false, true))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false)))))), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false)))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false)))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), false, false)), bvec2(bvec2(bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false)))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), false, false))))))))) && true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true)))), bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true))), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))))) && true))), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))))) && true))), true && (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))))) && true))))), false))), true, false, true))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false)))))), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false)))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false)))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), false, false)), bvec2(bvec2(bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false)))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), false, false))))))))) && true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true)))), bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true))), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))))) && true))), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))))) && true))), true && (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))))) && true))))), false))), true, false, true)))))) || false), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false)))))), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false)))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false)))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), false, false)), bvec2(bvec2(bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false)))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), false, false))))))))) && true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true)))), bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true))), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))))) && true))), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))))) && true))), true && (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))))) && true))))), false))), true, false, true))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false)))))), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false)))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false)))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), false, false)), bvec2(bvec2(bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false)))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), false, false))))))))) && true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true)))), bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true))), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))))) && true))), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))))) && true))), true && (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))))) && true))))), false))), true, false, true)))))) || false), true, false), true)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (false)) && true)), bool(_GLF_IDENTITY(bvec3(! _GLF_IDENTITY((_GLF_IDENTITY(! (false), (! (false)) && true)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (false), (! (false)) && true)), ! (! ((_GLF_IDENTITY(! (false), (! (false)) && true)))))))), false, true), bvec3(bvec3(bvec3(! (_GLF_IDENTITY(! (false), (! (false)) && true)), false, true)))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) && true))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), (_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), false || ((false)))))), (injectionSwitch.x > injectionSwitch.y))) || false), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), sqrt(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)))), determinant(mat4(0.0, 1.0, 0.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))), 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), 1.0, 1.0, 1.0, 0.0, log(1.0), _GLF_ONE(1.0, injectionSwitch.y), abs(1.0)), transpose(transpose(mat4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), sqrt(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)))), determinant(mat4(0.0, 1.0, 0.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))), 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), 1.0, 1.0, 1.0, 0.0, log(1.0), _GLF_ONE(1.0, injectionSwitch.y), abs(1.0))))))).x, float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-5.9) : injectionSwitch.x)), injectionSwitch.x))), max(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-5.9) : injectionSwitch.x)), injectionSwitch.x))), mix(float(_GLF_FUZZED(7831.0495)), float(float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-5.9) : injectionSwitch.x)), injectionSwitch.x)))), bool(true))), float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-5.9) : injectionSwitch.x)), injectionSwitch.x))))))) > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)), min(float(mat3(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)), float(mat3(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)))))))), ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)), min(float(mat3(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)), float(mat3(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))))))))) && true) || _GLF_IDENTITY(false, (false) || false)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-5.9) : injectionSwitch.x)), mix(float(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-5.9) : injectionSwitch.x))), float(_GLF_FUZZED(8.0)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), injectionSwitch.x))))) > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-5.9) : injectionSwitch.x)), injectionSwitch.x))))) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, float(float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-5.9) : injectionSwitch.x)), injectionSwitch.x))))) > injectionSwitch.y)))) && true))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, (false) || false))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-5.9) : injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(unpackUnorm2x16(workgroup_id)) : injectionSwitch)).x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(float(false))), bool(false)))))))) > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (! (! (_GLF_IDENTITY(false, true && (false)))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec2((_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (! (! (_GLF_IDENTITY(false, true && (false)))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), false)), bool(bvec3(bool(bvec2((_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (! (! (_GLF_IDENTITY(false, true && (false)))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), false)), false, false)))) || _GLF_IDENTITY(false, (false) || false)), false || (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(injectionSwitch.x, float(float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(-5.9) : injectionSwitch.x)), injectionSwitch.x))))) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, (false) || false))))))), true)))))
  barrier();
 _GLF_struct_17 _GLF_struct_replacement_17 = _GLF_struct_17(1, _GLF_struct_16(1, true), _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0)), mat2x4(1.0), _GLF_struct_replacement_15.workgroup_size * workgroup_id, mat4x2(1.0));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), ! (! (bool(bool(_GLF_DEAD(false))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint virtual_gid = _GLF_struct_replacement_17.workgroup_base + subgroup_base + _GLF_IDENTITY(_GLF_struct_replacement_11.subgroup_local_id, (_GLF_IDENTITY(_GLF_struct_replacement_11.subgroup_local_id, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(_GLF_struct_replacement_11.subgroup_local_id, uint(uint(_GLF_struct_replacement_11.subgroup_local_id))), 0u)), (uint(uvec2(_GLF_IDENTITY(_GLF_struct_replacement_11.subgroup_local_id, uint(uint(_GLF_struct_replacement_11.subgroup_local_id))), 0u))) - _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), 0u ^ (_GLF_IDENTITY(uint(0u), uint(uvec2(uint(0u), 1u)))))))))) ^ (0u << _GLF_IDENTITY(uint(4u), uint(4u))));
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), true)), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), true), false)), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), true), false))), bvec2(bvec4(bvec2(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), _GLF_IDENTITY(true, (true) || false)), false))), true, true))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_struct_replacement_17.workgroup_base, clamp(_GLF_struct_replacement_17.workgroup_base, _GLF_struct_replacement_17.workgroup_base, _GLF_struct_replacement_17.workgroup_base)) + subgroup_base + ((_GLF_struct_replacement_11.subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0), vec2(0.0, _GLF_IDENTITY(abs(1.0), max(_GLF_IDENTITY(abs(1.0), 1.0 * (abs(1.0))), abs(1.0))))), dot(_GLF_IDENTITY(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(vec2(vec2(0.0, 1.0))), _GLF_IDENTITY(vec2(mat4x2(vec2(vec2(vec2(0.0, 1.0))), 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, float(mat2x4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, abs(_GLF_ZERO(0.0, injectionSwitch.x))))))), max(vec2(mat4x2(vec2(vec2(vec2(0.0, 1.0))), 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat2x4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, abs(_GLF_ZERO(0.0, injectionSwitch.x))))))), _GLF_IDENTITY(vec2(mat4x2(vec2(vec2(vec2(0.0, 1.0))), 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat2x4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, abs(_GLF_ZERO(0.0, injectionSwitch.x))))))), (vec2(mat4x2(vec2(vec2(vec2(0.0, 1.0))), 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(0.0, float(mat2x4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, abs(_GLF_ZERO(0.0, injectionSwitch.x)))))))) * mat2(1.0)))))), vec2(0.0, abs(1.0)))) * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * exp(0.0)), float(mat4x2(injectionSwitch.x, 1.0, 1.0, 1.0, log(1.0), 1.0, 1.0, 1.0))), float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * exp(0.0)), float(mat4x2(injectionSwitch.x, 1.0, 1.0, 1.0, log(1.0), 1.0, 1.0, 1.0))), cos(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, abs(0.0))))), 0.0 + (_GLF_IDENTITY(dot(vec2(0.0, _GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(_GLF_IDENTITY(vec2(47.99, 99.85).x, max(vec2(47.99, 99.85).x, _GLF_IDENTITY(vec2(47.99, 99.85).x, (_GLF_IDENTITY(vec2(_GLF_IDENTITY(47.99, float(vec4(47.99, 1.0, determinant(mat2(_GLF_ONE(1.0, injectionSwitch.y), abs(0.0), 1.0, 1.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(sqrt(1.0), 0.0)), dot(vec2(1.0, 0.0), vec2(sqrt(1.0), 0.0)))))), 99.85).x, _GLF_IDENTITY(float(mat4x2(vec2(_GLF_IDENTITY(47.99, float(vec4(47.99, 1.0, determinant(mat2(_GLF_ONE(1.0, injectionSwitch.y), abs(0.0), 1.0, 1.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(sqrt(1.0), 0.0)), dot(vec2(1.0, 0.0), vec2(sqrt(1.0), 0.0)))))), 99.85).x, sin(0.0), 0.0, sqrt(0.0), determinant(mat3(1.0, sqrt(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0)), (true ? float(mat4x2(vec2(_GLF_IDENTITY(47.99, float(vec4(47.99, 1.0, determinant(mat2(_GLF_ONE(1.0, injectionSwitch.y), abs(0.0), 1.0, 1.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(sqrt(1.0), 0.0)), dot(vec2(1.0, 0.0), vec2(sqrt(1.0), 0.0)))))), 99.85).x, sin(0.0), 0.0, sqrt(0.0), determinant(mat3(1.0, sqrt(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0)) : _GLF_FUZZED(5005.7671))))) * 1.0))))), float(injectionSwitch.y), bool(true))))) ? _GLF_FUZZED(-5.3) : _GLF_IDENTITY(1.0, (1.0) - 0.0)))), vec2(0.0, _GLF_IDENTITY(abs(1.0), _GLF_ZERO(0.0, injectionSwitch.x) + (abs(1.0))))), dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(round(length(normalize(vec2(1.0, 1.0)))), (round(length(normalize(vec2(1.0, 1.0))))) - tan(log(1.0))) * (0.0)), abs(1.0)), max(_GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, round(length(normalize(vec2(1.0, 1.0)))) * (0.0)), abs(1.0)), clamp(vec2(_GLF_IDENTITY(0.0, round(length(normalize(vec2(1.0, 1.0)))) * (0.0)), _GLF_IDENTITY(abs(1.0), mix(float(abs(1.0)), float(_GLF_FUZZED(6126.4904)), bool(false)))), vec2(_GLF_IDENTITY(0.0, round(length(normalize(vec2(1.0, 1.0)))) * (0.0)), abs(1.0)), vec2(_GLF_IDENTITY(0.0, round(length(normalize(vec2(1.0, 1.0)))) * (0.0)), abs(1.0)))), vec2(_GLF_IDENTITY(0.0, round(length(normalize(vec2(1.0, 1.0)))) * (0.0)), abs(1.0)))))) * (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) / abs(vec2(1.0, 1.0))))).x, 1.0, 1.0, 1.0, log(1.0), _GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(1.7)), float(_GLF_IDENTITY(1.0, 1.0 * (1.0))), bool(true)), (_GLF_IDENTITY(mix(float(_GLF_FUZZED(1.7)), float(_GLF_IDENTITY(1.0, 1.0 * (1.0))), bool(true)), (mix(float(_GLF_FUZZED(1.7)), float(_GLF_IDENTITY(1.0, 1.0 * (1.0))), bool(true))) / 1.0)) - 0.0)), 1.0, 1.0)), float(mat3(_GLF_IDENTITY(float(mat4x2(injectionSwitch.x, 1.0, 1.0, 1.0, log(1.0), 1.0, 1.0, 1.0)), mix(float(float(mat4x2(injectionSwitch.x, 1.0, 1.0, 1.0, log(1.0), 1.0, 1.0, 1.0))), float(_GLF_FUZZED(float(true))), bool(false))), 0.0, 0.0, 1.0, 1.0, exp(determinant(mat2(0.0, 0.0, 1.0, 0.0))), 1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(615.378)), bool(false))), 1.0, 0.0, 0.0, sin(0.0), 1.0, 0.0, 0.0)), float(mat2(float(mat4x2(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(615.378)), bool(false))), 1.0, 0.0, 0.0, sin(_GLF_IDENTITY(0.0, max(0.0, 0.0))), 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - _GLF_ZERO(0.0, injectionSwitch.x)))), 1.0, 0.0, 1.0)))))))))))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) - 0u), _GLF_IDENTITY(4, int(_GLF_ONE(1.0, injectionSwitch.y)) * (4)), 64, _GLF_IDENTITY(_GLF_IDENTITY(2, min(2, 2)), min(2, _GLF_IDENTITY(2, (2) + 0))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if((_GLF_struct_replacement_11.subgroup_local_id % 2) == 0)
  {
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 else
  {
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, int(int(1))), _GLF_IDENTITY(_GLF_IDENTITY((1), max((1), (1))) / 1, (_GLF_IDENTITY((1) / 1, min((1) / 1, (1) / 1))) >> 0))) >> 0)), 4, _GLF_IDENTITY(64, ~ (~ (_GLF_IDENTITY(64, max(_GLF_IDENTITY(64, (64) * 1), _GLF_IDENTITY(64, max(64, 64))))))), _GLF_IDENTITY(4, (_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, min(4, 4))))) / 1));
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), (! (false)) || false)) && true))), false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), (! (false)) || false)) && true)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true, ! (! (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true, bool(bvec3((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true, true, true))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / _GLF_IDENTITY(1.0, min(1.0, 1.0))))), injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 subgroupBarrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 atomicStore(checker[virtual_gid], _GLF_IDENTITY(read, (_GLF_IDENTITY(read, _GLF_IDENTITY((read), ((read)) << 0u) | (read))) << 0u), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-4.2)), bool(false)))) - 0.0)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, false)))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
