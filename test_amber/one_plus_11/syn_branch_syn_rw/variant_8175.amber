#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = (1 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), (int(_GLF_IDENTITY(8, ~ (~ (8))))) ^ 0)))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-0.3), _GLF_FUZZED(-0.2)), bvec2(false, false)))) - vec2(0.0, 0.0))) + vec2(0.0, 0.0)).y)), false)))))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       return;
      }
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3(injectionSwitch.y, 0.0, 0.0, 1.0, _GLF_IDENTITY(log(1.0), (_GLF_IDENTITY(log(1.0), max(log(1.0), log(1.0)))) + 0.0), sqrt(0.0), 0.0, 1.0, 0.0)), max(_GLF_IDENTITY(float(mat3(injectionSwitch.y, 0.0, 0.0, 1.0, log(1.0), sqrt(_GLF_IDENTITY(0.0, _GLF_IDENTITY((_GLF_IDENTITY(0.0, float(mat3x2(0.0, 1.0, 0.0, 1.0, 0.0, length(vec2(0.0, 0.0)))))) * 1.0, mix(float((_GLF_IDENTITY(0.0, float(mat3x2(0.0, 1.0, 0.0, 1.0, 0.0, length(vec2(0.0, 0.0)))))) * 1.0), float(_GLF_FUZZED(33.40)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), 0.0, 1.0, 0.0)), float(mat4x3(float(mat3(injectionSwitch.y, 0.0, 0.0, 1.0, log(1.0), sqrt(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), (_GLF_IDENTITY(0.0, float(mat3x2(0.0, 1.0, 0.0, 1.0, 0.0, length(vec2(0.0, 0.0)))))) * 1.0)), 0.0, 1.0, 0.0)), 1.0, _GLF_IDENTITY(dot(vec3(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0), vec3(0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0), vec3(0.0, 0.0, 1.0)), float(mat3x4(dot(vec3(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0), vec3(0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))), 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), vec4(0.0, 1.0, 0.0, _GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0))), injectionSwitch.x))), dot(vec4(0.0, 1.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-3.7)), bool(false))))), 0.0, 0.0, 0.0, 0.0))), vec4(0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))), 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, cos(0.0), 0.0, 0.0))), float(mat3(injectionSwitch.y, 0.0, 0.0, 1.0, log(1.0), sqrt(0.0), _GLF_IDENTITY(0.0, (0.0) / _GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-9.0) : 1.0)), 0.0)))))))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      return;
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   do
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        return;
       do
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))
            {
             for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, tan(0.0), 0.0))).x)), 0 | (int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, tan(0.0), 0.0))).x)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 ^ 0)); _GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) << 0))
              {
               if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((false), true && ((false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), (bool(bvec3(_GLF_IDENTITY((false), true && ((false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) && true))))), bool(bvec4(! (false), _GLF_IDENTITY(false, false || (false)), true, true))), ! (! (! (false)))))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-200.175)), bool(false))) > injectionSwitch.y))))
                continue;
               return;
              }
            }
           else
            {
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
            return;
           return;
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     else
      {
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), bool(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), true))); _injected_loop_counter ++)
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, true)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(_GLF_IDENTITY(! (false), (! (false)) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), bool(bvec3(false, true, false))), (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-9.8))) > injectionSwitch.y))))
          break;
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           return;
          }
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bool(! ((injectionSwitch.x > injectionSwitch.y))))))))))
        {
         if(_GLF_DEAD(false))
          break;
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              continue;
             return;
            }
          }
         else
          {
           for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
               for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, max(0, 0))), false || (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, max(0, 0))), (_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, max(0, 0)))) || false))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(_injected_loop_counter)))))), (_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, max(0, 0)))) && true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, max(0, 0))), (_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, max(0, 0)))) && true))), true && (! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, max(0, 0))), (_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, max(0, 0)))) && true)))))), true && (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, max(0, 0))), (_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, max(0, 0)))) && true))), true && (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, max(0, 0))), (_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, max(0, 0)))) && true), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, max(0, 0))), (_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, max(0, 0)))) && true)) || false))))))))))); _injected_loop_counter --)
                {
                 if(_GLF_DEAD(false))
                  break;
                 return;
                 if(_GLF_DEAD(false))
                  break;
                }
              }
            }
          }
        }
       else
        {
         do
          {
           if(_GLF_DEAD(false))
            return;
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) || false)))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) || false)))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(false))
              return;
            }
           else
            {
            }
          }
         else
          {
          }
        }
       else
        {
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))))
      continue;
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(false))
      continue;
    }
   else
    {
    }
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)).x, (_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)).x) - 0u);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     return;
    }
   else
    {
    }
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)) * subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)) * subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)) * subgroup_size, (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)) * subgroup_size) - 0u), _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)) * subgroup_size))) ^ 0u), clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, 1u * (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_size), (true ? _GLF_IDENTITY(~ (subgroup_size), (true ? ~ (subgroup_size) : _GLF_FUZZED((subgroup_size << workgroup_id)))) : _GLF_FUZZED(_GLF_IDENTITY((workgroup_base - subgroup_local_id), max(_GLF_IDENTITY((workgroup_base - subgroup_local_id), ((workgroup_base - subgroup_local_id)) * 1u), _GLF_IDENTITY((workgroup_base - subgroup_local_id), min(_GLF_IDENTITY((workgroup_base - subgroup_local_id), ((workgroup_base - subgroup_local_id)) >> 0u), (workgroup_base - subgroup_local_id)))))))), ~ (~ (~ (subgroup_size)))))), (subgroup_id * subgroup_size) ^ 0u))), _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(uvec3(subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))) | 0u), uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))) : _GLF_FUZZED(uintBitsToFloat(subgroup_id))))), 1u)), uint(_GLF_IDENTITY(uvec2(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))) | 0u), (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))) | 0u), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (0u >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (0u | 0u) ^ (_GLF_IDENTITY(uint(6u), (true ? uint(6u) : _GLF_FUZZED(workgroup_size))))))))) | 0u), 1u), uvec2(uvec4(uvec2(subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))) | 0u), 1u), 1u, 0u)))), uint(uvec3(uint(_GLF_IDENTITY(uvec2(subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))) | 0u), 1u), uvec2(uvec4(uvec2(subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))) | 0u), 1u), 1u, 0u)))), 0u, _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, (0u) | (0u))))))))) | (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))) | 0u), (subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))) | 0u)) | (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))) | 0u), (subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))) | 0u)) | (subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(0u, 0u ^ (0u)) >> _GLF_IDENTITY(uint(6u), uint(6u))))) | 0u))))))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u), _GLF_IDENTITY((uvec3(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))) | 0u), (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))) | 0u), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))) | 0u), 1u), uvec2(uvec4(uvec2(subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))) | 0u), 1u), 1u, 0u)))), uint(uvec3(uint(_GLF_IDENTITY(uvec2(subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))) | 0u), 1u), uvec2(uvec4(uvec2(subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))) | 0u), 1u), 1u, 0u)))), 0u, 0u))))) | (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))) | 0u), (subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))) | 0u)) | (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))) | 0u), (subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))) | 0u)) | (subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))) | 0u))))))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)) >> uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), ((uvec3(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))) | 0u), (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (0u >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) ^ 0u))))) | 0u), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))) | 0u), 1u), uvec2(uvec4(uvec2(subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))) | 0u), 1u), 1u, 0u)))), uint(uvec3(uint(_GLF_IDENTITY(uvec2(subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))) | 0u), 1u), uvec2(uvec4(uvec2(subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), (subgroup_size) | (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))) | 0u), 1u), 1u, 0u)))), _GLF_IDENTITY(0u, (0u | 0u) | (0u)), 0u))))) | (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))) | 0u), (subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))) | 0u)) | (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) | (0u >> _GLF_IDENTITY(uint(6u), uint(6u))), clamp((subgroup_size) | (0u >> _GLF_IDENTITY(uint(6u), uint(6u))), (subgroup_size) | (0u >> _GLF_IDENTITY(uint(6u), uint(6u))), _GLF_IDENTITY((subgroup_size) | (0u >> _GLF_IDENTITY(uint(6u), uint(6u))), (false ? _GLF_FUZZED(num_workgroup) : (subgroup_size) | (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))))))) | 0u), _GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))) | 0u)) | (subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))) | 0u)), min((subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))) | 0u)) | (subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))) | 0u)), (subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))) | 0u)) | (subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))) | 0u))))))))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)) >> uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) / uvec3(1u, 1u, 1u)))), _GLF_IDENTITY((1u & 1u), (_GLF_IDENTITY((1u & 1u), min(_GLF_IDENTITY((1u & 1u), ((1u & 1u)) | ((1u & 1u))), (1u & 1u)))) | ((1u & 1u)))), _GLF_IDENTITY(uvec2(uvec2(uvec2(uint(uvec3(subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))) | 0u), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)), (1u & 1u)))), max(uvec2(uvec2(uvec2(uint(uvec3(subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (true ? _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)))) : _GLF_FUZZED(workgroup_id))), (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) - 0u) >> _GLF_IDENTITY(uint(6u), uint(6u))))) | 0u), uint(_GLF_IDENTITY(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, 1.0)), injectionSwitch.y), clamp(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, 1.0)), injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, 1.0)), injectionSwitch.y), mix(float(_GLF_FUZZED(-664.199)), float(_GLF_IDENTITY(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, 1.0)), injectionSwitch.y), float(vec2(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, 1.0)), injectionSwitch.y), 0.0)))), bool(true))), _GLF_IDENTITY(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, 1.0)), injectionSwitch.y), min(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, 1.0)), injectionSwitch.y), _GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, 1.0)), injectionSwitch.y)))))), 1u)), (1u & 1u)))), uvec2(uvec2(uvec2(uint(uvec3(subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), clamp(uint(6u), uint(6u), uint(6u))), uint(6u))))) | 0u), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)), (1u & 1u)))))))))), _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), (_GLF_IDENTITY(~ (subgroup_size), ~ (~ (~ (subgroup_size))))) ^ 0u))))), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))), 1u, (0u << _GLF_IDENTITY(uint(8u), uint(8u))), (140974u & 0u))), max(_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))), 1u, (0u << _GLF_IDENTITY(uint(8u), uint(8u))), (140974u & 0u))), (_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))), 1u, (0u << _GLF_IDENTITY(uint(8u), uint(8u))), (140974u & 0u))), (uint(uvec4(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))), 1u, (0u << _GLF_IDENTITY(uint(8u), uint(8u))), (140974u & 0u)))) << 0u)) | (uint(uvec4(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))), 1u, (0u << _GLF_IDENTITY(uint(8u), uint(8u))), (140974u & 0u))))), uint(uvec4(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), (clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))) ^ 0u)), 1u, (0u << _GLF_IDENTITY(uint(8u), uint(8u))), (140974u & 0u))))))) << uint(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7.7), _GLF_FUZZED(-58.82)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7.7), _GLF_FUZZED(-58.82)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7.7), _GLF_FUZZED(-58.82)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x)))))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     return;
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), false || (! (false)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), false || (! (_GLF_IDENTITY(false, ! (! (false))))))), bool(bvec2(! (_GLF_IDENTITY(! (false), false || (! (false)))), false)))))))))
      return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), max(_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), 0 ^ (int(_GLF_ZERO(0.0, injectionSwitch.x)))), int(_GLF_ZERO(0.0, injectionSwitch.x))))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      break;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        break;
       break;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        return;
       break;
      }
     do
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           return;
          }
         else
          {
          }
        }
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        continue;
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        break;
       break;
      }
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), bool(bool(_GLF_DEAD(false)))))), ! (_GLF_IDENTITY(! (bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), bool(bool(_GLF_DEAD(false))))))), (_GLF_IDENTITY(! (bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), bool(bool(_GLF_DEAD(false))))))), bool(bool(! (bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), bool(bool(_GLF_DEAD(false))))))))))) && true)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bool(bool(! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY(bool(bool(! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (bool(bool(! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) && true)) && true)))))
        continue;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), bool(bvec2(bool(bool(_GLF_DEAD(false))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false))))))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           return;
          }
        }
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         return;
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         return;
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          break;
         break;
        }
       for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), 0 | (int(7))), int(_GLF_IDENTITY(7, (7) - 0))))) != 1); _injected_loop_counter ++)
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            break;
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             for(int _injected_loop_counter = _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, (1) << 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) << 0))
              {
               if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(bool(true)))))))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(bool(true)))))))), true, true))))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  return;
                 for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                  {
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                       do
                        {
                         return;
                        }
                       while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false)))));
                      }
                     return;
                    }
                   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      continue;
                     do
                      {
                       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 0, (_injected_loop_counter != 0) || false)); _injected_loop_counter --)
                        {
                         do
                          {
                           return;
                          }
                         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                        }
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        continue;
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                    }
                   if(_GLF_DEAD(false))
                    continue;
                  }
                }
              }
            }
          }
        }
      }
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  return;
 do
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    return;
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   for(int _injected_loop_counter = _GLF_IDENTITY(0, 0 ^ (0)); _GLF_WRAPPED_LOOP(_injected_loop_counter < (0 | 1)); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) && true)))))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))); _injected_loop_counter ++)
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0), (mat4x2(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0)) * mat4(1.0)))).y)), false)))))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
              break;
            }
           else
            {
             return;
            }
           if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
            continue;
          }
        }
       else
        {
        }
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 else
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     do
      {
       for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             return;
            }
           else
            {
            }
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true))))))))))))
      {
      }
     else
      {
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, false || (false)), false), false))), false)))))))
  return;
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    return;
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
  }
 if(_GLF_DEAD(false))
  {
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  return;
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 2);
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       return;
      }
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 for(int _injected_loop_counter = int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (false ? _GLF_FUZZED(24.52) : _GLF_ONE(1.0, injectionSwitch.y)))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   for(int _injected_loop_counter = (1 | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(int(int(4)))), int(4)))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      return;
    }
  }
 do
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) < injectionSwitch.y))))
    {
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))
        {
         do
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))))))))
            return;
           if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
            continue;
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true)))))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             do
              {
               if(_GLF_DEAD(false))
                {
                 do
                  {
                   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                    {
                     return;
                    }
                   else
                    {
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                 if(_GLF_DEAD(false))
                  continue;
                }
               if(_GLF_DEAD(false))
                continue;
              }
             while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bool(false)))));
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(false))
              continue;
            }
           do
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
            }
           while(_GLF_WRAPPED_LOOP(false));
           return;
          }
         else
          {
           if(_GLF_DEAD(false))
            return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-292.767, 1878.5097)) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         return;
        }
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 for(int _injected_loop_counter = int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-6.3, 1444.1407)) : _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - tan(vec2(0.0, 0.0))))).x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 & 1)); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      break;
     continue;
    }
   if((subgroup_local_id % 2) == 0)
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(bvec2(true, false)))))), ! (! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec3(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(bvec2(true, false)))), true)))))))))))))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 & _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) ^ 0), 1))) | 1)); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          break;
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))
          {
          }
         else
          {
           do
            {
             if(_GLF_DEAD(false))
              continue;
             atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(1), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (uint(1))), _GLF_IDENTITY(4, (4) ^ 0), 64, 4);
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
          }
        }
      }
     else
      {
      }
    }
   else
    {
     atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
     if(_GLF_DEAD(false))
      {
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
      {
       for(int _injected_loop_counter = (0 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 & 1) & 1)); _injected_loop_counter ++)
        {
         return;
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      break;
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       do
        {
         if(_GLF_DEAD(false))
          return;
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               do
                {
                 return;
                 if(_GLF_DEAD(false))
                  break;
                }
               while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) && true)))));
              }
             else
              {
              }
            }
           if(_GLF_DEAD(false))
            continue;
          }
         else
          {
          }
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_TRUE(true), false, true), bvec3(bvec3(bvec3(_GLF_WRAPPED_IF_TRUE(true), false, true))))), false || (bool(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_TRUE(true), false, true), bvec3(bvec3(bvec3(_GLF_WRAPPED_IF_TRUE(true), false, true)))))))))
          {
           return;
          }
         else
          {
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-89.68)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                {
                 do
                  {
                   return;
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                }
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 return;
                }
               if(_GLF_DEAD(false))
                continue;
              }
            }
           do
            {
             if(_GLF_DEAD(false))
              return;
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      break;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (false))))
      {
       do
        {
         if(_GLF_DEAD(false))
          continue;
         return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(0.5, _GLF_IDENTITY(float(vec4(0.5, 0.0, 0.0, 0.0)), min(float(vec4(0.5, 0.0, 0.0, 0.0)), float(vec4(0.5, 0.0, 0.0, 0.0))))))), bool(false)))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
            {
             return;
            }
          }
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(7), int(7)))); _injected_loop_counter --)
            {
             return;
            }
          }
         break;
        }
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (false ? _GLF_FUZZED(sign(-18291)) : _injected_loop_counter)) < ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) - (0 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), 0 ^ (int(2))))))), int(2))) >> _GLF_IDENTITY(int(2), int(2)))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          break;
         return;
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        return;
       continue;
      }
    }
  }
 do
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      break;
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     do
      {
       for(int _injected_loop_counter = (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(0), (int(0)) ^ 0), int(0))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(! _GLF_IDENTITY((! ((_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)) : _GLF_FUZZED(2.9))), sqrt(sqrt(0.0)), 1.0, cos(determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0)), clamp(float(mat4(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)) : _GLF_FUZZED(2.9))), sqrt(sqrt(0.0)), 1.0, cos(determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0)), float(mat4(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)) : _GLF_FUZZED(2.9))), sqrt(sqrt(0.0)), 1.0, cos(determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0)), float(mat4(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)) : _GLF_FUZZED(2.9))), sqrt(sqrt(0.0)), 1.0, cos(determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0))))))))))), ((! ((_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)) : _GLF_FUZZED(2.9))), sqrt(sqrt(0.0)), 1.0, cos(determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0)), clamp(float(mat4(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)) : _GLF_FUZZED(2.9))), sqrt(sqrt(0.0)), 1.0, cos(determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0)), float(mat4(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)) : _GLF_FUZZED(2.9))), sqrt(sqrt(0.0)), 1.0, cos(determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0)), float(mat4(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)) : _GLF_FUZZED(2.9))), sqrt(sqrt(0.0)), 1.0, cos(determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0)))))))))))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (! ((_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (! (! ((_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false))))))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
                {
                 do
                  {
                   return;
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
               if(_GLF_DEAD(false))
                break;
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  return;
                 return;
                }
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
                    continue;
                   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                    continue;
                   return;
                  }
                }
               else
                {
                 if(_GLF_DEAD(false))
                  return;
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                continue;
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, 0 ^ (_injected_loop_counter)) < 1); _injected_loop_counter ++)
                {
                 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), false || (! (false)))))))), (injectionSwitch.x > injectionSwitch.y))))
                  return;
                }
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (int(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)), _GLF_IDENTITY((_GLF_ZERO(0.0, injectionSwitch.x)) * 1.0, (true ? _GLF_IDENTITY((_GLF_ZERO(0.0, injectionSwitch.x)) * 1.0, (false ? _GLF_FUZZED(148.173) : (_GLF_ZERO(0.0, injectionSwitch.x)) * 1.0)) : _GLF_FUZZED(-4623.8332))))) | 0)); _injected_loop_counter --)
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                       if(_GLF_DEAD(false))
                        return;
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        continue;
                       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))))))))
                        {
                         return;
                        }
                       else
                        {
                        }
                      }
                    }
                   else
                    {
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(false))
                        break;
                       break;
                      }
                     do
                      {
                       return;
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                    }
                   if(_GLF_DEAD(false))
                    break;
                  }
                }
              }
             if(_GLF_DEAD(false))
              continue;
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           subgroupBarrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               return;
               if(_GLF_DEAD(false))
                continue;
              }
             else
              {
              }
             if(_GLF_DEAD(false))
              break;
            }
          }
         else
          {
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      return;
    }
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   do
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      return;
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
     for(int _injected_loop_counter = (1 | _GLF_IDENTITY(0, _GLF_IDENTITY(max(0, 0), clamp(_GLF_IDENTITY(max(0, 0), max(max(0, 0), _GLF_IDENTITY(max(0, 0), (max(0, 0)) >> 0))), _GLF_IDENTITY(max(0, 0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(max(0, 0), min(max(0, 0), max(0, 0))) : _GLF_FUZZED(-46585))), _GLF_IDENTITY(max(0, 0), 0 ^ (max(0, 0))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       return;
       if(_GLF_DEAD(false))
        break;
      }
    }
   if(_GLF_DEAD(false))
    return;
  }
 for(int _injected_loop_counter = (21435 & 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    break;
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     do
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false)))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false))))))))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(8), int(8))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
            {
             return;
            }
          }
         return;
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
      }
    }
   else
    {
     do
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (false ? _GLF_FUZZED(vec2(251.358, -23.85)) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(7959.4185, 32.94)) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))), max(injectionSwitch, injectionSwitch)), (false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(251.358, -23.85), mix(vec2(_GLF_FUZZED(254.709), _GLF_IDENTITY((vec2(251.358, -23.85))[1], _GLF_IDENTITY((false ? _GLF_FUZZED(51.68) : (vec2(251.358, -23.85))[1]), clamp((false ? _GLF_FUZZED(51.68) : (vec2(251.358, -23.85))[1]), (false ? _GLF_FUZZED(51.68) : (vec2(251.358, -23.85))[1]), (false ? _GLF_FUZZED(51.68) : (vec2(251.358, -23.85))[1]))))), vec2((vec2(251.358, -23.85))[0], _GLF_FUZZED((false ? 851.743 : 176.546))), bvec2(true, false)))) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y) / 1.0)))))
            {
             if(_GLF_DEAD(false))
              return;
             return;
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > 0, (_GLF_IDENTITY(_injected_loop_counter > 0, ! (! (_injected_loop_counter > 0)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))); _injected_loop_counter --)
              {
               return;
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                continue;
               continue;
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) * sqrt(vec2(1.0, 1.0))).y))))
                continue;
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
                  return;
                }
               if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))), (injectionSwitch.x > injectionSwitch.y))))
                continue;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
               continue;
              }
            }
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            continue;
           if(_GLF_DEAD(false))
            continue;
           continue;
          }
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_DEAD(false))
            continue;
          }
         else
          {
           atomicStore(checker[_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY((true ? _GLF_IDENTITY(virtual_gid, min(_GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED(read) : virtual_gid)), virtual_gid)) : _GLF_FUZZED(subgroup_local_id)), (true ? (_GLF_IDENTITY(true ? _GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(min(virtual_gid, virtual_gid), 0u + (min(virtual_gid, virtual_gid)))) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), 0u | (_GLF_FUZZED(subgroup_local_id))), uint(uvec3(true ? _GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(min(virtual_gid, virtual_gid), 0u + (min(virtual_gid, virtual_gid))), max(_GLF_IDENTITY(min(virtual_gid, virtual_gid), 0u + (min(virtual_gid, virtual_gid))), _GLF_IDENTITY(_GLF_IDENTITY(min(virtual_gid, virtual_gid), 0u + (min(virtual_gid, virtual_gid))), (_GLF_IDENTITY(_GLF_IDENTITY(min(virtual_gid, virtual_gid), 0u + (min(virtual_gid, virtual_gid))), max(_GLF_IDENTITY(min(virtual_gid, virtual_gid), 0u + (min(virtual_gid, virtual_gid))), _GLF_IDENTITY(min(virtual_gid, virtual_gid), 0u + (min(virtual_gid, virtual_gid)))))) / 1u)))) : _GLF_FUZZED(subgroup_local_id), 1u, 0u)))) : _GLF_FUZZED(subgroup_local_id))), (_GLF_IDENTITY((true ? _GLF_IDENTITY(virtual_gid, min(_GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED(read) : virtual_gid)), virtual_gid)) : _GLF_FUZZED(subgroup_local_id)), (true ? (_GLF_IDENTITY(true ? _GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(min(virtual_gid, virtual_gid), 0u + (min(virtual_gid, virtual_gid)))) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), 0u | (_GLF_FUZZED(subgroup_local_id))), uint(uvec3(true ? _GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(min(virtual_gid, virtual_gid), 0u + (min(virtual_gid, virtual_gid))), max(_GLF_IDENTITY(min(virtual_gid, virtual_gid), 0u + (min(virtual_gid, virtual_gid))), _GLF_IDENTITY(_GLF_IDENTITY(min(virtual_gid, virtual_gid), 0u + (min(virtual_gid, virtual_gid))), (_GLF_IDENTITY(_GLF_IDENTITY(min(virtual_gid, virtual_gid), 0u + (min(virtual_gid, virtual_gid))), max(_GLF_IDENTITY(min(virtual_gid, virtual_gid), 0u + (min(virtual_gid, virtual_gid))), _GLF_IDENTITY(min(virtual_gid, virtual_gid), 0u + (min(virtual_gid, virtual_gid)))))) / 1u)))) : _GLF_FUZZED(subgroup_local_id), 1u, 0u)))) : _GLF_FUZZED(subgroup_local_id)))) | (_GLF_IDENTITY(_GLF_IDENTITY((true ? _GLF_IDENTITY(virtual_gid, min(_GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED(read) : virtual_gid)), virtual_gid)) : _GLF_FUZZED(subgroup_local_id)), (true ? (_GLF_IDENTITY(true ? _GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(min(virtual_gid, virtual_gid), 0u + (min(virtual_gid, virtual_gid)))) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), 0u | (_GLF_FUZZED(subgroup_local_id))), uint(uvec3(true ? _GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(min(virtual_gid, virtual_gid), 0u + (min(virtual_gid, virtual_gid))), max(_GLF_IDENTITY(min(virtual_gid, virtual_gid), 0u + (min(virtual_gid, virtual_gid))), _GLF_IDENTITY(_GLF_IDENTITY(min(virtual_gid, virtual_gid), 0u + (min(virtual_gid, virtual_gid))), (_GLF_IDENTITY(_GLF_IDENTITY(min(virtual_gid, virtual_gid), 0u + (min(virtual_gid, virtual_gid))), max(_GLF_IDENTITY(min(virtual_gid, virtual_gid), 0u + (min(virtual_gid, virtual_gid))), _GLF_IDENTITY(min(virtual_gid, virtual_gid), 0u + (min(virtual_gid, virtual_gid)))))) / 1u)))) : _GLF_FUZZED(subgroup_local_id), 1u, 0u)))) : _GLF_FUZZED(subgroup_local_id))), 0u ^ (_GLF_IDENTITY((true ? _GLF_IDENTITY(virtual_gid, min(_GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED(read) : virtual_gid)), virtual_gid)) : _GLF_FUZZED(subgroup_local_id)), (true ? (_GLF_IDENTITY(true ? _GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(min(virtual_gid, virtual_gid), 0u + (min(virtual_gid, virtual_gid)))) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), 0u | (_GLF_FUZZED(subgroup_local_id))), uint(uvec3(true ? _GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(min(virtual_gid, virtual_gid), 0u + (min(virtual_gid, virtual_gid))), max(_GLF_IDENTITY(min(virtual_gid, virtual_gid), 0u + (min(virtual_gid, virtual_gid))), _GLF_IDENTITY(_GLF_IDENTITY(min(virtual_gid, virtual_gid), 0u + (min(virtual_gid, virtual_gid))), (_GLF_IDENTITY(_GLF_IDENTITY(min(virtual_gid, virtual_gid), 0u + (min(virtual_gid, virtual_gid))), max(_GLF_IDENTITY(min(virtual_gid, virtual_gid), 0u + (min(virtual_gid, virtual_gid))), _GLF_IDENTITY(min(virtual_gid, virtual_gid), 0u + (min(virtual_gid, virtual_gid)))))) / 1u)))) : _GLF_FUZZED(subgroup_local_id), 1u, 0u)))) : _GLF_FUZZED(subgroup_local_id))))))))) | 0u), (_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY((true ? _GLF_IDENTITY(virtual_gid, min(_GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED(read) : virtual_gid)), virtual_gid)) : _GLF_FUZZED(subgroup_local_id)), (true ? (_GLF_IDENTITY(true ? _GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(min(virtual_gid, virtual_gid), 0u + (min(virtual_gid, virtual_gid)))) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), 0u | (_GLF_FUZZED(subgroup_local_id))), uint(uvec3(true ? _GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(min(virtual_gid, virtual_gid), 0u + (min(virtual_gid, virtual_gid))), max(_GLF_IDENTITY(min(virtual_gid, virtual_gid), 0u + (min(virtual_gid, virtual_gid))), _GLF_IDENTITY(_GLF_IDENTITY(min(virtual_gid, virtual_gid), 0u + (min(virtual_gid, virtual_gid))), (_GLF_IDENTITY(_GLF_IDENTITY(min(virtual_gid, virtual_gid), 0u + (min(virtual_gid, virtual_gid))), max(_GLF_IDENTITY(min(virtual_gid, virtual_gid), 0u + (min(virtual_gid, virtual_gid))), _GLF_IDENTITY(min(virtual_gid, virtual_gid), 0u + (min(virtual_gid, virtual_gid)))))) / 1u)))) : _GLF_FUZZED(subgroup_local_id), 1u, 0u)))) : _GLF_FUZZED(subgroup_local_id))), (_GLF_IDENTITY((true ? _GLF_IDENTITY(virtual_gid, min(_GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED(read) : virtual_gid)), virtual_gid)) : _GLF_FUZZED(subgroup_local_id)), (true ? (_GLF_IDENTITY(true ? _GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(min(virtual_gid, virtual_gid), 0u + (min(virtual_gid, virtual_gid)))) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), 0u | (_GLF_FUZZED(subgroup_local_id))), uint(uvec3(true ? _GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(min(virtual_gid, virtual_gid), 0u + (min(virtual_gid, virtual_gid))), max(_GLF_IDENTITY(min(virtual_gid, virtual_gid), 0u + (min(virtual_gid, virtual_gid))), _GLF_IDENTITY(_GLF_IDENTITY(min(virtual_gid, virtual_gid), 0u + (min(virtual_gid, virtual_gid))), (_GLF_IDENTITY(_GLF_IDENTITY(min(virtual_gid, virtual_gid), 0u + (min(virtual_gid, virtual_gid))), max(_GLF_IDENTITY(min(virtual_gid, virtual_gid), 0u + (min(virtual_gid, virtual_gid))), _GLF_IDENTITY(min(virtual_gid, virtual_gid), 0u + (min(virtual_gid, virtual_gid)))))) / 1u)))) : _GLF_FUZZED(subgroup_local_id), 1u, 0u)))) : _GLF_FUZZED(subgroup_local_id)))) | (_GLF_IDENTITY(_GLF_IDENTITY((true ? _GLF_IDENTITY(virtual_gid, min(_GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED(read) : virtual_gid)), virtual_gid)) : _GLF_FUZZED(subgroup_local_id)), (true ? (_GLF_IDENTITY(true ? _GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(min(virtual_gid, virtual_gid), 0u + (min(virtual_gid, virtual_gid)))) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), 0u | (_GLF_FUZZED(subgroup_local_id))), uint(uvec3(true ? _GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(min(virtual_gid, virtual_gid), 0u + (min(virtual_gid, virtual_gid))), max(_GLF_IDENTITY(min(virtual_gid, virtual_gid), 0u + (min(virtual_gid, virtual_gid))), _GLF_IDENTITY(_GLF_IDENTITY(min(virtual_gid, virtual_gid), 0u + (min(virtual_gid, virtual_gid))), (_GLF_IDENTITY(_GLF_IDENTITY(min(virtual_gid, virtual_gid), 0u + (min(virtual_gid, virtual_gid))), max(_GLF_IDENTITY(min(virtual_gid, virtual_gid), 0u + (min(virtual_gid, virtual_gid))), _GLF_IDENTITY(min(virtual_gid, virtual_gid), 0u + (min(virtual_gid, virtual_gid)))))) / 1u)))) : _GLF_FUZZED(subgroup_local_id), 1u, 0u)))) : _GLF_FUZZED(subgroup_local_id))), 0u ^ (_GLF_IDENTITY((true ? _GLF_IDENTITY(virtual_gid, min(_GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED(read) : virtual_gid)), virtual_gid)) : _GLF_FUZZED(subgroup_local_id)), (true ? (_GLF_IDENTITY(true ? _GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(min(virtual_gid, virtual_gid), 0u + (min(virtual_gid, virtual_gid)))) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), 0u | (_GLF_FUZZED(subgroup_local_id))), uint(uvec3(true ? _GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(min(virtual_gid, virtual_gid), 0u + (min(virtual_gid, virtual_gid))), max(_GLF_IDENTITY(min(virtual_gid, virtual_gid), 0u + (min(virtual_gid, virtual_gid))), _GLF_IDENTITY(_GLF_IDENTITY(min(virtual_gid, virtual_gid), 0u + (min(virtual_gid, virtual_gid))), (_GLF_IDENTITY(_GLF_IDENTITY(min(virtual_gid, virtual_gid), 0u + (min(virtual_gid, virtual_gid))), max(_GLF_IDENTITY(min(virtual_gid, virtual_gid), 0u + (min(virtual_gid, virtual_gid))), _GLF_IDENTITY(min(virtual_gid, virtual_gid), 0u + (min(virtual_gid, virtual_gid)))))) / 1u)))) : _GLF_FUZZED(subgroup_local_id), 1u, 0u)))) : _GLF_FUZZED(subgroup_local_id))))))))) | 0u)) ^ 0u), max(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, (true ? _GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)) : _GLF_FUZZED(subgroup_local_id)))) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, (true ? _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED(subgroup_id) : virtual_gid)), min(virtual_gid, virtual_gid)) : _GLF_FUZZED(subgroup_local_id)))) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, (true ? _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(min(virtual_gid, virtual_gid), 1u * (min(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), clamp(uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), (_GLF_IDENTITY(uint(4u), uint(4u))) | (_GLF_IDENTITY(uint(4u), uint(4u)))))), min(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), (_GLF_IDENTITY(uint(4u), uint(4u))) | (_GLF_IDENTITY(uint(4u), uint(4u)))))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), (_GLF_IDENTITY(uint(4u), uint(4u))) | (_GLF_IDENTITY(uint(4u), uint(4u)))))), (~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), (_GLF_IDENTITY(uint(4u), uint(4u))) | (_GLF_IDENTITY(uint(4u), uint(4u))))))) | 0u))))), (0u ^ 0u))), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (true ? virtual_gid : _GLF_FUZZED((num_workgroup + workgroup_size)))), (virtual_gid) << 0u), ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), clamp(_GLF_IDENTITY(uint(4u), uint(4u)), _GLF_IDENTITY(uint(4u), uint(4u)), _GLF_IDENTITY(uint(4u), uint(4u))))) | 0u)))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, (4u) | 0u)), uint(4u))), (0u ^ 0u))), uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u)))))), virtual_gid)))), ~ (~ (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(min(virtual_gid, virtual_gid), 1u * (min(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), clamp(uint(uvec3(virtual_gid, (_GLF_IDENTITY(_GLF_IDENTITY((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (uint(4u))), _GLF_IDENTITY(uint(4u), (true ? uint(4u) : _GLF_FUZZED(num_workgroup))))), ((1u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (true ? _GLF_IDENTITY(uint(4u), ~ (_GLF_IDENTITY(~ (uint(4u)), max(~ (uint(4u)), ~ (uint(4u)))))) : _GLF_FUZZED(num_workgroup)))))) / 1u), max(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), _GLF_IDENTITY((true ? uint(4u) : _GLF_FUZZED(num_workgroup)), clamp((true ? uint(4u) : _GLF_FUZZED(num_workgroup)), (true ? uint(4u) : _GLF_FUZZED(num_workgroup)), _GLF_IDENTITY((true ? uint(4u) : _GLF_FUZZED(num_workgroup)), ((true ? uint(4u) : _GLF_FUZZED(num_workgroup))) / 1u)))))), ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (true ? uint(4u) : _GLF_FUZZED(num_workgroup)))), (true ? _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (true ? uint(4u) : _GLF_FUZZED(num_workgroup)))) : _GLF_FUZZED(subgroup_size))))) / 1u), _GLF_IDENTITY((1u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(true ? uint(4u) : _GLF_FUZZED(num_workgroup), ~ (~ (true ? uint(4u) : _GLF_FUZZED(num_workgroup)))))))), _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (true ? uint(4u) : _GLF_FUZZED(num_workgroup)))))), ~ (_GLF_IDENTITY(~ (((1u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (true ? uint(4u) : _GLF_FUZZED(num_workgroup))))))), ~ (_GLF_IDENTITY(~ (~ (((1u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (true ? uint(4u) : _GLF_FUZZED(num_workgroup)))))))), (~ (~ (((1u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (true ? uint(4u) : _GLF_FUZZED(num_workgroup))))))))) + 0u))))) / 1u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), _GLF_IDENTITY(uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (false ? _GLF_FUZZED(subgroup_local_id) : uint(4u))))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), (uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (false ? _GLF_FUZZED(subgroup_local_id) : uint(4u))))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u)))) - 0u), uint(uvec3(virtual_gid, (_GLF_IDENTITY((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), 0u | (uint(4u))), uint(4u))), max(_GLF_IDENTITY((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), 0u | (uint(4u))), uint(4u))), ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), 0u | (uint(4u))), _GLF_IDENTITY(uint(4u), 0u | (uint(4u)))))) | 0u), _GLF_IDENTITY((1u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), (uint(4u)) | 0u), 0u | (uint(4u))), uint(4u))), max((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), 0u | (uint(4u))), uint(4u))), (1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), _GLF_IDENTITY(0u, (0u) | (0u)) | _GLF_IDENTITY((uint(4u)), ((uint(4u))) | ((uint(4u))))), uint(4u))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), 0u | (_GLF_IDENTITY(uint(4u), uint(4u))))) << 0u)), (0u ^ 0u)))))), virtual_gid))))))) : _GLF_FUZZED(subgroup_local_id)))) | 0u), ~ (~ (_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((true ? _GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)) : _GLF_FUZZED(subgroup_local_id)), (_GLF_IDENTITY((true ? _GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)) : _GLF_FUZZED(subgroup_local_id)), ((true ? _GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)) : _GLF_FUZZED(subgroup_local_id))) - 0u)) << 0u))) | 0u))))) ^ _GLF_IDENTITY(0u, (0u) | (0u))), (false ? _GLF_FUZZED(subgroup_base) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, (true ? _GLF_IDENTITY(virtual_gid, min(virtual_gid, _GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 0u, 0u))))) : _GLF_FUZZED(subgroup_local_id)))) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((true ? _GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(min(virtual_gid, virtual_gid), 1u * (min(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(virtual_gid, max(_GLF_IDENTITY(virtual_gid, 1u * (_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))))), virtual_gid)), ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), clamp(_GLF_IDENTITY(uint(4u), uint(4u)), _GLF_IDENTITY(uint(4u), uint(4u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, (_GLF_IDENTITY(4u, (4u) / 1u)) | (_GLF_IDENTITY(4u, (4u) << 0u)))), uint(4u)), _GLF_IDENTITY(uint(4u), uint(4u))))))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), clamp(uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), _GLF_IDENTITY(uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (_GLF_IDENTITY(0u ^ 0u, (0u >> _GLF_IDENTITY(uint(0u), uint(0u))) | (0u ^ 0u))))), (uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (_GLF_IDENTITY(0u ^ 0u, (0u >> _GLF_IDENTITY(uint(0u), uint(0u))) | (0u ^ 0u)))))) / 1u), uint(uvec3(virtual_gid, _GLF_IDENTITY(((_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (1u) | 0u))) << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (false ? _GLF_FUZZED((-- subgroup_id)) : uint(4u))))), max((_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)), min((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)), (1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))))), ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))))), (0u ^ 0u)))))), virtual_gid)))) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (_GLF_FUZZED(subgroup_local_id)) >> 0u)), (true ? (true ? _GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(min(virtual_gid, virtual_gid), 1u * (min(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(virtual_gid, max(_GLF_IDENTITY(virtual_gid, 1u * (_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))))), virtual_gid)), ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), clamp(_GLF_IDENTITY(uint(4u), uint(4u)), _GLF_IDENTITY(uint(4u), uint(4u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, (_GLF_IDENTITY(4u, (4u) / 1u)) | (_GLF_IDENTITY(4u, (4u) << 0u)))), uint(4u)), _GLF_IDENTITY(uint(4u), uint(4u))))))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), clamp(uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), _GLF_IDENTITY(uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (_GLF_IDENTITY(0u ^ 0u, (0u >> _GLF_IDENTITY(uint(0u), uint(0u))) | (0u ^ 0u))))), (uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (_GLF_IDENTITY(0u ^ 0u, (0u >> _GLF_IDENTITY(uint(0u), uint(0u))) | (0u ^ 0u)))))) / 1u), uint(uvec3(virtual_gid, _GLF_IDENTITY(((_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (1u) | 0u))) << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (false ? _GLF_FUZZED((-- subgroup_id)) : uint(4u))))), max((_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)), min((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)), (1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))))), ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))))), (0u ^ 0u)))))), virtual_gid)))) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (_GLF_FUZZED(subgroup_local_id)) >> 0u)) : _GLF_FUZZED(subgroup_id))))) | 0u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec4(_GLF_IDENTITY(virtual_gid, max(_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, _GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED(workgroup_base) : virtual_gid)))), virtual_gid)), 1u, 0u, 1u))), (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)), (_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))) ^ 0u), 0u, (0u | 0u), 1u), uvec4(1u, 1u, 1u, 1u) * (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)), (_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))) ^ 0u), 0u, (0u | 0u), 1u)))), (uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)), (_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))) ^ 0u), 0u, (0u | 0u), 1u), uvec4(1u, 1u, 1u, 1u) * (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)), (_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))) ^ 0u), 0u, (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(num_workgroup) : 0u)) | 0u), 1u))))) | 0u)) : _GLF_FUZZED(subgroup_local_id)), (_GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)) : _GLF_FUZZED(subgroup_local_id)), ((true ? _GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)) : _GLF_FUZZED(subgroup_local_id))) - 0u)) << 0u))) | 0u))))) ^ 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, (true ? _GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)) : _GLF_FUZZED(subgroup_local_id)))) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, ~ (~ (_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, uint(uvec2(virtual_gid, 0u)))) | (virtual_gid))))), (true ? _GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(min(virtual_gid, virtual_gid), clamp(min(virtual_gid, virtual_gid), min(virtual_gid, virtual_gid), _GLF_IDENTITY(min(virtual_gid, virtual_gid), 0u | (min(virtual_gid, virtual_gid))))), 1u * (min(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), clamp(uint(uvec3(virtual_gid, (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)), ((1u << _GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(4u, uint(_GLF_IDENTITY(uvec4(4u, 0u, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), 0u), (uvec4(4u, 0u, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), 0u)) << uvec4(0u, 0u, 0u, 0u))))))) >> _GLF_IDENTITY(uint(4u), uint(4u))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (0u ^ 0u))), uint(uvec3(_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid)), _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), (_GLF_IDENTITY(uint(4u), uint(4u))) | 0u), _GLF_IDENTITY(uint(4u), uint(4u))))), ~ (~ (((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), (_GLF_IDENTITY(uint(4u), uint(4u))) | 0u), _GLF_IDENTITY(uint(4u), uint(4u)))))))), (0u ^ 0u))), uint(uvec3(virtual_gid, (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, (4u) | (4u))), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)), 0u | ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, (4u) | (4u))), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))))), (0u ^ 0u)))))), virtual_gid)))) : _GLF_FUZZED(subgroup_local_id)))) | 0u), ~ (~ (_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((true ? _GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)) : _GLF_FUZZED(subgroup_local_id)), (_GLF_IDENTITY((true ? _GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)) : _GLF_FUZZED(subgroup_local_id)), ((true ? _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)), (_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))) | 0u) : _GLF_FUZZED(subgroup_local_id))) - 0u)) << 0u))) | 0u))))) ^ 0u), (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, (true ? _GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)) : _GLF_FUZZED(subgroup_local_id)))) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, (true ? _GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(min(virtual_gid, virtual_gid), max(min(virtual_gid, virtual_gid), min(virtual_gid, virtual_gid))), _GLF_IDENTITY(1u * (_GLF_IDENTITY(min(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, uint(uvec2(_GLF_IDENTITY(4u, ~ (_GLF_IDENTITY(~ (4u), (~ (4u)) | 0u))), uint(_GLF_ONE(1.0, injectionSwitch.y)))))), uint(4u))), (0u ^ 0u))), clamp(uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), uint(_GLF_IDENTITY(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), clamp(_GLF_IDENTITY(uint(4u), uint(4u)), _GLF_IDENTITY(uint(4u), uint(4u)), _GLF_IDENTITY(uint(4u), uint(4u))))), (0u ^ 0u)), uvec3(uvec4(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), clamp(_GLF_IDENTITY(uint(4u), uint(4u)), _GLF_IDENTITY(uint(4u), uint(4u)), _GLF_IDENTITY(uint(4u), uint(4u))))), (0u ^ 0u)), 0u)))), uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), _GLF_IDENTITY((0u ^ 0u), ((0u ^ 0u)) | ((0u ^ 0u)))))))), virtual_gid), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), clamp(uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u)))))), virtual_gid), min(min(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), clamp(uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u)))))), virtual_gid), _GLF_IDENTITY(min(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), clamp(uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u)))))), virtual_gid), (true ? _GLF_IDENTITY(min(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), clamp(uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u)))))), virtual_gid), 1u * (min(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), clamp(uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u)))))), virtual_gid))) : _GLF_FUZZED(virtual_gid))))), max(min(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), clamp(uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u)))))), virtual_gid), min(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec3(virtual_gid, ((_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_size) : 1u)) << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), clamp(uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u)))))), virtual_gid)))), min(uint(_GLF_IDENTITY(min(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ _GLF_IDENTITY(0u, ~ (~ (0u)))))), clamp(uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(4u), uint(4u)), 0u, 1u), uvec3(0u, 0u, 0u) ^ (uvec3(_GLF_IDENTITY(uint(4u), uint(4u)), 0u, 1u)))))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u)))))), virtual_gid), max(min(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), clamp(uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ _GLF_IDENTITY(0u, min(0u, 0u))))), uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (_GLF_IDENTITY(0u ^ 0u, (false ? _GLF_FUZZED(read) : 0u ^ 0u)))))))), virtual_gid), min(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), clamp(uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), 1u * (uint(4u))), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u)))))), virtual_gid)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(min(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), clamp(uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u)))))), virtual_gid), max(min(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), clamp(uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))))), (_GLF_IDENTITY(uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), clamp(uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u)))))) >> 0u)), virtual_gid), min(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec3(virtual_gid, _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (_GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 0u ^ (((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)))))) ^ 0u), (0u ^ 0u))), clamp(uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u)))))), virtual_gid)))), (uint(_GLF_IDENTITY(min(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), _GLF_IDENTITY((0u ^ 0u), max((0u ^ 0u), (0u ^ 0u))))), clamp(uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), _GLF_IDENTITY((0u ^ 0u), clamp((0u ^ 0u), (0u ^ 0u), (0u ^ 0u))))), uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u)))))), virtual_gid), max(min(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), ~ (~ (_GLF_IDENTITY(uint(4u), uint(4u)))))), (0u ^ 0u))), clamp(uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u)))))), virtual_gid), min(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec3(virtual_gid, (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)), (true ? (1u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(uint(4u), (uint(4u)) - 0u), 1u), (uvec2(0u, 0u) | uvec2(0u, 0u)) | (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(uint(4u), (uint(4u)) - 0u), 1u), uvec2(0u, 0u) ^ (uvec2(_GLF_IDENTITY(uint(4u), (uint(4u)) - 0u), 1u))))))))) >> _GLF_IDENTITY(uint(4u), uint(4u)) : _GLF_FUZZED(next_virtual_gid)))), (0u ^ 0u))), clamp(_GLF_IDENTITY(uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), 0u ^ (_GLF_IDENTITY(uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), (0u ^ 0u) | (uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))))))), uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u)))))), virtual_gid))))) / 1u)))))), min(1u * (_GLF_IDENTITY(min(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, uint(uvec2(_GLF_IDENTITY(4u, ~ (_GLF_IDENTITY(~ (4u), (~ (4u)) | 0u))), uint(_GLF_ONE(1.0, injectionSwitch.y)))))), uint(4u))), (0u ^ 0u))), clamp(uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), uint(_GLF_IDENTITY(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), clamp(_GLF_IDENTITY(uint(4u), uint(4u)), _GLF_IDENTITY(uint(4u), uint(4u)), _GLF_IDENTITY(uint(4u), uint(4u))))), (0u ^ 0u)), uvec3(uvec4(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), clamp(_GLF_IDENTITY(uint(4u), uint(4u)), _GLF_IDENTITY(uint(4u), uint(4u)), _GLF_IDENTITY(uint(4u), uint(4u))))), (0u ^ 0u)), 0u)))), uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), _GLF_IDENTITY((0u ^ 0u), ((0u ^ 0u)) | ((0u ^ 0u)))))))), virtual_gid), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), clamp(uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u)))))), virtual_gid), min(min(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), clamp(uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u)))))), virtual_gid), _GLF_IDENTITY(min(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), clamp(uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u)))))), virtual_gid), (true ? _GLF_IDENTITY(min(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), clamp(uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u)))))), virtual_gid), 1u * (min(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), clamp(uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u)))))), virtual_gid))) : _GLF_FUZZED(virtual_gid))))), max(min(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), clamp(uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u)))))), virtual_gid), min(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec3(virtual_gid, ((_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_size) : 1u)) << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), clamp(uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u)))))), virtual_gid)))), min(uint(_GLF_IDENTITY(min(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ _GLF_IDENTITY(0u, ~ (~ (0u)))))), clamp(uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(4u), uint(4u)), 0u, 1u), uvec3(0u, 0u, 0u) ^ (uvec3(_GLF_IDENTITY(uint(4u), uint(4u)), 0u, 1u)))))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u)))))), virtual_gid), max(min(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), clamp(uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ _GLF_IDENTITY(0u, min(0u, 0u))))), uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (_GLF_IDENTITY(0u ^ 0u, (false ? _GLF_FUZZED(read) : 0u ^ 0u)))))))), virtual_gid), min(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), clamp(uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), 1u * (uint(4u))), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u)))))), virtual_gid)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(min(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), clamp(uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u)))))), virtual_gid), max(min(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), clamp(uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))))), (_GLF_IDENTITY(uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), clamp(uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u)))))) >> 0u)), virtual_gid), min(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec3(virtual_gid, _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (_GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 0u ^ (((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)))))) ^ 0u), (0u ^ 0u))), clamp(uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u)))))), virtual_gid)))), (uint(_GLF_IDENTITY(min(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), _GLF_IDENTITY((0u ^ 0u), max((0u ^ 0u), (0u ^ 0u))))), clamp(uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), _GLF_IDENTITY((0u ^ 0u), clamp((0u ^ 0u), (0u ^ 0u), (0u ^ 0u))))), uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u)))))), virtual_gid), max(min(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), ~ (~ (_GLF_IDENTITY(uint(4u), uint(4u)))))), (0u ^ 0u))), clamp(uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u)))))), virtual_gid), min(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec3(virtual_gid, (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)), (true ? (1u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(uint(4u), (uint(4u)) - 0u), 1u), (uvec2(0u, 0u) | uvec2(0u, 0u)) | (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(uint(4u), (uint(4u)) - 0u), 1u), uvec2(0u, 0u) ^ (uvec2(_GLF_IDENTITY(uint(4u), (uint(4u)) - 0u), 1u))))))))) >> _GLF_IDENTITY(uint(4u), uint(4u)) : _GLF_FUZZED(next_virtual_gid)))), (0u ^ 0u))), clamp(_GLF_IDENTITY(uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), 0u ^ (_GLF_IDENTITY(uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), (0u ^ 0u) | (uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))))))), uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u)))))), virtual_gid))))) / 1u)))))), 1u * (_GLF_IDENTITY(min(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, uint(uvec2(_GLF_IDENTITY(4u, ~ (_GLF_IDENTITY(~ (4u), (~ (4u)) | 0u))), uint(_GLF_ONE(1.0, injectionSwitch.y)))))), uint(4u))), (0u ^ 0u))), clamp(uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), uint(_GLF_IDENTITY(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), clamp(_GLF_IDENTITY(uint(4u), uint(4u)), _GLF_IDENTITY(uint(4u), uint(4u)), _GLF_IDENTITY(uint(4u), uint(4u))))), (0u ^ 0u)), uvec3(uvec4(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), clamp(_GLF_IDENTITY(uint(4u), uint(4u)), _GLF_IDENTITY(uint(4u), uint(4u)), _GLF_IDENTITY(uint(4u), uint(4u))))), (0u ^ 0u)), 0u)))), uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), _GLF_IDENTITY((0u ^ 0u), ((0u ^ 0u)) | ((0u ^ 0u)))))))), virtual_gid), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), clamp(uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u)))))), virtual_gid), min(min(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), clamp(uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u)))))), virtual_gid), _GLF_IDENTITY(min(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), clamp(uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u)))))), virtual_gid), (true ? _GLF_IDENTITY(min(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), clamp(uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u)))))), virtual_gid), 1u * (min(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), clamp(uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u)))))), virtual_gid))) : _GLF_FUZZED(virtual_gid))))), max(min(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), clamp(uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u)))))), virtual_gid), min(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec3(virtual_gid, ((_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_size) : 1u)) << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), clamp(uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u)))))), virtual_gid)))), min(uint(_GLF_IDENTITY(min(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ _GLF_IDENTITY(0u, ~ (~ (0u)))))), clamp(uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(4u), uint(4u)), 0u, 1u), uvec3(0u, 0u, 0u) ^ (uvec3(_GLF_IDENTITY(uint(4u), uint(4u)), 0u, 1u)))))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u)))))), virtual_gid), max(min(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), clamp(uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ _GLF_IDENTITY(0u, min(0u, 0u))))), uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (_GLF_IDENTITY(0u ^ 0u, (false ? _GLF_FUZZED(read) : 0u ^ 0u)))))))), virtual_gid), min(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), clamp(uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), 1u * (uint(4u))), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u)))))), virtual_gid)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(min(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), clamp(uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u)))))), virtual_gid), max(min(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), clamp(uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))))), (_GLF_IDENTITY(uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), clamp(uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u)))))) >> 0u)), virtual_gid), min(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec3(virtual_gid, _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (_GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 0u ^ (((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)))))) ^ 0u), (0u ^ 0u))), clamp(uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u)))))), virtual_gid)))), (uint(_GLF_IDENTITY(min(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), _GLF_IDENTITY((0u ^ 0u), max((0u ^ 0u), (0u ^ 0u))))), clamp(uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), _GLF_IDENTITY((0u ^ 0u), clamp((0u ^ 0u), (0u ^ 0u), (0u ^ 0u))))), uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u)))))), virtual_gid), max(min(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), ~ (~ (_GLF_IDENTITY(uint(4u), uint(4u)))))), (0u ^ 0u))), clamp(uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u)))))), virtual_gid), min(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec3(virtual_gid, (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)), (true ? (1u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(uint(4u), (uint(4u)) - 0u), 1u), (uvec2(0u, 0u) | uvec2(0u, 0u)) | (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(uint(4u), (uint(4u)) - 0u), 1u), uvec2(0u, 0u) ^ (uvec2(_GLF_IDENTITY(uint(4u), (uint(4u)) - 0u), 1u))))))))) >> _GLF_IDENTITY(uint(4u), uint(4u)) : _GLF_FUZZED(next_virtual_gid)))), (0u ^ 0u))), clamp(_GLF_IDENTITY(uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), 0u ^ (_GLF_IDENTITY(uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), (0u ^ 0u) | (uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))))))), uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u)))))), virtual_gid))))) / 1u)))))))))) : _GLF_FUZZED(subgroup_local_id)))) | 0u), ~ _GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, 0u + (virtual_gid)), (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), false, false)))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), false, false)))), ! (! (bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), false, false)))))))))) ? _GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)) : _GLF_FUZZED(subgroup_local_id)), clamp((_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), false, false)))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), false, false)))), ! (! (bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), false, false))))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), false, false)))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, _GLF_IDENTITY(false, false || (false))), false, false)))), ! (! (bool(_GLF_IDENTITY(bvec2(true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), false || (bool(_GLF_IDENTITY(false, ! (! (false)))))))))))), bvec2(bvec4(bvec2(true, false), false, false)))))))))) && true)) ? _GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)) : _GLF_FUZZED(subgroup_local_id)), (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), false, false)))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), false, false)))), ! (! (bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), false, false)))))))))) ? _GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)) : _GLF_FUZZED(subgroup_local_id)), (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), false, false)))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), false, false)))), ! (! (bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), false, false)))))))))) ? _GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)) : _GLF_FUZZED(subgroup_local_id)))), (_GLF_IDENTITY((_GLF_IDENTITY(true ? _GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)) : _GLF_FUZZED(subgroup_local_id), (_GLF_IDENTITY(true ? _GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)) : _GLF_FUZZED(subgroup_local_id), (true ? _GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)) : _GLF_FUZZED(subgroup_local_id)) * 1u)) | (true ? _GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)) : _GLF_FUZZED(subgroup_local_id)))), ((true ? _GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)) : _GLF_FUZZED(subgroup_local_id))) - 0u)) << 0u))) | 0u)), _GLF_IDENTITY(uint(uvec2((_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, 0u + (virtual_gid)), (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), false, false)))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), false, false)))), ! (! (bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), false, false)))))))))) ? _GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)) : _GLF_FUZZED(subgroup_local_id)), clamp((_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), false, false)))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), false, false)))), ! (! (bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), false, false))))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), false, false)))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, _GLF_IDENTITY(false, false || (false))), false, false)))), ! (! (bool(_GLF_IDENTITY(bvec2(true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), false || (bool(_GLF_IDENTITY(false, ! (! (false)))))))))))), bvec2(bvec4(bvec2(true, false), false, false)))))))))) && true)) ? _GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)) : _GLF_FUZZED(subgroup_local_id)), (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), false, false)))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), false, false)))), ! (! (bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), false, false)))))))))) ? _GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)) : _GLF_FUZZED(subgroup_local_id)), (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), false, false)))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), false, false)))), ! (! (bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), false, false)))))))))) ? _GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)) : _GLF_FUZZED(subgroup_local_id)))), (_GLF_IDENTITY((_GLF_IDENTITY(true ? _GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)) : _GLF_FUZZED(subgroup_local_id), (_GLF_IDENTITY(true ? _GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)) : _GLF_FUZZED(subgroup_local_id), (true ? _GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)) : _GLF_FUZZED(subgroup_local_id)) * 1u)) | (true ? _GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)) : _GLF_FUZZED(subgroup_local_id)))), ((true ? _GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)) : _GLF_FUZZED(subgroup_local_id))) - 0u)) << 0u))) | 0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (uint(uvec2((_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, 0u + (virtual_gid)), (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), false, false)))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), false, false)))), ! (! (bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), false, false)))))))))) ? _GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)) : _GLF_FUZZED(subgroup_local_id)), clamp((_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), false, false)))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), false, false)))), ! (! (bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), false, false))))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), false, false)))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, _GLF_IDENTITY(false, false || (false))), false, false)))), ! (! (bool(_GLF_IDENTITY(bvec2(true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), false || (bool(_GLF_IDENTITY(false, ! (! (false)))))))))))), bvec2(bvec4(bvec2(true, false), false, false)))))))))) && true)) ? _GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)) : _GLF_FUZZED(subgroup_local_id)), (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), false, false)))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), false, false)))), ! (! (bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), false, false)))))))))) ? _GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)) : _GLF_FUZZED(subgroup_local_id)), (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), false, false)))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), false, false)))), ! (! (bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), false, false)))))))))) ? _GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)) : _GLF_FUZZED(subgroup_local_id)))), (_GLF_IDENTITY((_GLF_IDENTITY(true ? _GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)) : _GLF_FUZZED(subgroup_local_id), (_GLF_IDENTITY(true ? _GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)) : _GLF_FUZZED(subgroup_local_id), (true ? _GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)) : _GLF_FUZZED(subgroup_local_id)) * 1u)) | (true ? _GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)) : _GLF_FUZZED(subgroup_local_id)))), ((true ? _GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)) : _GLF_FUZZED(subgroup_local_id))) - 0u)) << 0u))) | 0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x))))) >> 0u))), 0u + ((~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, 0u + (virtual_gid)), (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), false, false)))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), false, false)))), ! (! (bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), false, false)))))))))) ? _GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)) : _GLF_FUZZED(subgroup_local_id)), clamp((_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), false, false)))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), false, false)))), ! (! (bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), false, false))))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), false, false)))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, _GLF_IDENTITY(false, false || (false))), false, false)))), ! (! (bool(_GLF_IDENTITY(bvec2(true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), false || (bool(_GLF_IDENTITY(false, ! (! (false)))))))))))), bvec2(bvec4(bvec2(true, false), false, false)))))))))) && true)) ? _GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)) : _GLF_FUZZED(subgroup_local_id)), (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), false, false)))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), false, false)))), ! (! (bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), false, false)))))))))) ? _GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)) : _GLF_FUZZED(subgroup_local_id)), (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), false, false)))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), false, false)))), ! (! (bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), false, false)))))))))) ? _GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)) : _GLF_FUZZED(subgroup_local_id)))), (_GLF_IDENTITY((_GLF_IDENTITY(true ? _GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)) : _GLF_FUZZED(subgroup_local_id), (_GLF_IDENTITY(true ? _GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)) : _GLF_FUZZED(subgroup_local_id), (true ? _GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)) : _GLF_FUZZED(subgroup_local_id)) * 1u)) | (true ? _GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)) : _GLF_FUZZED(subgroup_local_id)))), ((true ? _GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)) : _GLF_FUZZED(subgroup_local_id))) - 0u)) << 0u))) | 0u)), _GLF_IDENTITY(uint(uvec2((_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, 0u + (virtual_gid)), (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), false, false)))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), false, false)))), ! (! (bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), false, false)))))))))) ? _GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)) : _GLF_FUZZED(subgroup_local_id)), clamp((_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), false, false)))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), false, false)))), ! (! (bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), false, false))))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), false, false)))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, _GLF_IDENTITY(false, false || (false))), false, false)))), ! (! (bool(_GLF_IDENTITY(bvec2(true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), false || (bool(_GLF_IDENTITY(false, ! (! (false)))))))))))), bvec2(bvec4(bvec2(true, false), false, false)))))))))) && true)) ? _GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)) : _GLF_FUZZED(subgroup_local_id)), (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), false, false)))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), false, false)))), ! (! (bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), false, false)))))))))) ? _GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)) : _GLF_FUZZED(subgroup_local_id)), (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), false, false)))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), false, false)))), ! (! (bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), false, false)))))))))) ? _GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)) : _GLF_FUZZED(subgroup_local_id)))), (_GLF_IDENTITY((_GLF_IDENTITY(true ? _GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)) : _GLF_FUZZED(subgroup_local_id), (_GLF_IDENTITY(true ? _GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)) : _GLF_FUZZED(subgroup_local_id), (true ? _GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)) : _GLF_FUZZED(subgroup_local_id)) * 1u)) | (true ? _GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)) : _GLF_FUZZED(subgroup_local_id)))), ((true ? _GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)) : _GLF_FUZZED(subgroup_local_id))) - 0u)) << 0u))) | 0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (uint(uvec2((_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, 0u + (virtual_gid)), (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), false, false)))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), false, false)))), ! (! (bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), false, false)))))))))) ? _GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)) : _GLF_FUZZED(subgroup_local_id)), clamp((_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), false, false)))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), false, false)))), ! (! (bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), false, false))))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), false, false)))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, _GLF_IDENTITY(false, false || (false))), false, false)))), ! (! (bool(_GLF_IDENTITY(bvec2(true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), false || (bool(_GLF_IDENTITY(false, ! (! (false)))))))))))), bvec2(bvec4(bvec2(true, false), false, false)))))))))) && true)) ? _GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)) : _GLF_FUZZED(subgroup_local_id)), (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), false, false)))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), false, false)))), ! (! (bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), false, false)))))))))) ? _GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)) : _GLF_FUZZED(subgroup_local_id)), (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), false, false)))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), false, false)))), ! (! (bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), false, false)))))))))) ? _GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)) : _GLF_FUZZED(subgroup_local_id)))), (_GLF_IDENTITY((_GLF_IDENTITY(true ? _GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)) : _GLF_FUZZED(subgroup_local_id), (_GLF_IDENTITY(true ? _GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)) : _GLF_FUZZED(subgroup_local_id), (true ? _GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)) : _GLF_FUZZED(subgroup_local_id)) * 1u)) | (true ? _GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)) : _GLF_FUZZED(subgroup_local_id)))), ((true ? _GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)) : _GLF_FUZZED(subgroup_local_id))) - 0u)) << 0u))) | 0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x))))) >> 0u))))))) ^ 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((true ? _GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)) : _GLF_FUZZED(subgroup_local_id)), min((true ? _GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)) : _GLF_FUZZED(subgroup_local_id)), _GLF_IDENTITY((true ? _GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)) : _GLF_FUZZED(subgroup_local_id)), max((true ? _GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)) : _GLF_FUZZED(subgroup_local_id)), (true ? _GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)) : _GLF_FUZZED(subgroup_local_id)))))))) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, (true ? _GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(min(virtual_gid, virtual_gid), 1u * (min(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), clamp(uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), clamp(uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), uint(uvec3(_GLF_IDENTITY(virtual_gid, (virtual_gid) >> 0u), ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u)))))), (~ (_GLF_IDENTITY(uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, (4u) - 0u)), uint(4u))), (0u ^ 0u))), clamp(uint(_GLF_IDENTITY(uvec3(virtual_gid, (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(4u), uint(4u))), ((1u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), uint(uvec3(uint(4u), 1u, 1u)))) ^ (0u & 6030u))))) | ((1u << _GLF_IDENTITY(uint(4u), uint(4u))))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u)), uvec3(0u, 0u, 0u) ^ (uvec3(virtual_gid, (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(4u), uint(4u))), ((1u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), uint(uvec3(uint(4u), 1u, 1u)))) ^ (0u & 6030u))))) | ((1u << _GLF_IDENTITY(uint(4u), uint(4u))))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))))), uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ _GLF_IDENTITY(0u, 0u + (0u))))), uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))))))) + 0u)))), virtual_gid))), (_GLF_IDENTITY(min(virtual_gid, virtual_gid), 1u * (min(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), clamp(uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), clamp(uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))), uint(uvec3(_GLF_IDENTITY(virtual_gid, (virtual_gid) >> 0u), ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u)))))), (~ (_GLF_IDENTITY(uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, (4u) - 0u)), uint(4u))), (0u ^ 0u))), clamp(uint(_GLF_IDENTITY(uvec3(virtual_gid, (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(4u), uint(4u))), ((1u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), uint(uvec3(uint(4u), 1u, 1u)))) ^ (0u & 6030u))))) | ((1u << _GLF_IDENTITY(uint(4u), uint(4u))))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u)), uvec3(0u, 0u, 0u) ^ (uvec3(virtual_gid, (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(4u), uint(4u))), ((1u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), uint(uvec3(uint(4u), 1u, 1u)))) ^ (0u & 6030u))))) | ((1u << _GLF_IDENTITY(uint(4u), uint(4u))))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))))), uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ _GLF_IDENTITY(0u, 0u + (0u))))), uint(uvec3(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))))))) + 0u)))), virtual_gid)))) ^ 0u)) : _GLF_FUZZED(subgroup_local_id)))) | 0u), ~ (~ (_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY((true ? _GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)) : _GLF_FUZZED(subgroup_local_id)), (_GLF_IDENTITY((true ? _GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)) : _GLF_FUZZED(subgroup_local_id)), ((true ? _GLF_IDENTITY(virtual_gid, min(_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid)), virtual_gid)) : _GLF_FUZZED(subgroup_local_id))) - 0u)) << 0u), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY((true ? _GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)) : _GLF_FUZZED(subgroup_local_id)), (_GLF_IDENTITY((true ? _GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)) : _GLF_FUZZED(subgroup_local_id)), ((true ? _GLF_IDENTITY(virtual_gid, min(_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid)), virtual_gid)) : _GLF_FUZZED(subgroup_local_id))) - 0u)) << 0u))), _GLF_IDENTITY((uint(uint(_GLF_IDENTITY((true ? _GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)) : _GLF_FUZZED(subgroup_local_id)), (_GLF_IDENTITY((true ? _GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)) : _GLF_FUZZED(subgroup_local_id)), ((true ? _GLF_IDENTITY(virtual_gid, min(_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid)), virtual_gid)) : _GLF_FUZZED(subgroup_local_id))) - 0u)) << 0u)))), min(_GLF_IDENTITY((uint(uint(_GLF_IDENTITY((true ? _GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)) : _GLF_FUZZED(subgroup_local_id)), (_GLF_IDENTITY((true ? _GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)) : _GLF_FUZZED(subgroup_local_id)), ((true ? _GLF_IDENTITY(virtual_gid, min(_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid)), virtual_gid)) : _GLF_FUZZED(subgroup_local_id))) - 0u)) << 0u)))), ((uint(uint(_GLF_IDENTITY((true ? _GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)) : _GLF_FUZZED(subgroup_local_id)), (_GLF_IDENTITY((true ? _GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)) : _GLF_FUZZED(subgroup_local_id)), ((true ? _GLF_IDENTITY(virtual_gid, min(_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid)), virtual_gid)) : _GLF_FUZZED(subgroup_local_id))) - 0u)) << 0u))))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uint(uint(_GLF_IDENTITY((true ? _GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)) : _GLF_FUZZED(subgroup_local_id)), (_GLF_IDENTITY((true ? _GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)) : _GLF_FUZZED(subgroup_local_id)), ((true ? _GLF_IDENTITY(virtual_gid, min(_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid)), virtual_gid)) : _GLF_FUZZED(subgroup_local_id))) - 0u)) << 0u)))))) | (uint(uint(_GLF_IDENTITY((true ? _GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)) : _GLF_FUZZED(subgroup_local_id)), (_GLF_IDENTITY((true ? _GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)) : _GLF_FUZZED(subgroup_local_id)), ((true ? _GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(min(_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid)), virtual_gid), uint(uvec3(min(_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid)), virtual_gid), 0u, 0u)))) : _GLF_FUZZED(subgroup_local_id))) - 0u)) << 0u)))))))) | 0u))))) ^ 0u)))) / 1u)))))], read, 4, 64, 4);
          }
        }
       else
        {
        }
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          break;
        }
       else
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), false || (false || (false))))))
            {
             if(_GLF_DEAD(false))
              return;
             return;
            }
          }
         else
          {
          }
        }
      }
     while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), false || (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) || false))));
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((-7646.3572))), bool(false))) < injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       return;
      }
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     for(int _injected_loop_counter = _GLF_IDENTITY(1, (1) | 0); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, ~ (_GLF_IDENTITY(~ (_injected_loop_counter), int(ivec2(~ (_injected_loop_counter), _GLF_IDENTITY(0, int(int(0)))))))) > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED((8.8 + injectionSwitch)), max(_GLF_FUZZED((8.8 + injectionSwitch)), _GLF_FUZZED((8.8 + injectionSwitch)))) : injectionSwitch)).y : _GLF_FUZZED(1062.2873))), 1.0, 0.0, 0.0, 1.0, 1.0), mat2x3(mat2x4(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(1062.2873), (_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(1062.2873), max(true ? injectionSwitch.y : _GLF_FUZZED(1062.2873), true ? injectionSwitch.y : _GLF_FUZZED(1062.2873)))) / 1.0))), clamp(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(1062.2873))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(1062.2873))), (_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(1062.2873)))) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(1062.2873))), float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(1062.2873))), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0), (mat4x3(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(1062.2873))), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0)) * mat4(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((true ? -11.81 : 2627.8208))), bool(false))), 1.0)))))))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(1062.2873), (_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(1062.2873), max(true ? injectionSwitch.y : _GLF_FUZZED(1062.2873), true ? injectionSwitch.y : _GLF_FUZZED(1062.2873)))) / 1.0))), clamp(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(1062.2873), (_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(1062.2873), max(true ? injectionSwitch.y : _GLF_FUZZED(1062.2873), true ? injectionSwitch.y : _GLF_FUZZED(1062.2873)))) / 1.0))), _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(1062.2873), (_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(1062.2873), max(true ? injectionSwitch.y : _GLF_FUZZED(1062.2873), true ? injectionSwitch.y : _GLF_FUZZED(1062.2873)))) / 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(1062.2873), (_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(1062.2873), max(true ? injectionSwitch.y : _GLF_FUZZED(1062.2873), true ? injectionSwitch.y : _GLF_FUZZED(1062.2873)))) / 1.0))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(1062.2873), (_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(1062.2873), max(true ? injectionSwitch.y : _GLF_FUZZED(1062.2873), true ? injectionSwitch.y : _GLF_FUZZED(1062.2873)))) / 1.0))), clamp(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(1062.2873), (_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(1062.2873), max(true ? injectionSwitch.y : _GLF_FUZZED(1062.2873), true ? injectionSwitch.y : _GLF_FUZZED(1062.2873)))) / 1.0))), _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(1062.2873), (_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(1062.2873), max(true ? injectionSwitch.y : _GLF_FUZZED(1062.2873), true ? injectionSwitch.y : _GLF_FUZZED(1062.2873)))) / 1.0))), _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(1062.2873), (_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(1062.2873), max(true ? injectionSwitch.y : _GLF_FUZZED(1062.2873), true ? injectionSwitch.y : _GLF_FUZZED(1062.2873)))) / 1.0))))), _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(1062.2873), (_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(1062.2873), max(true ? injectionSwitch.y : _GLF_FUZZED(1062.2873), true ? injectionSwitch.y : _GLF_FUZZED(1062.2873)))) / 1.0))))))), clamp(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(1062.2873))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(1062.2873))), (_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(7.6) : injectionSwitch.y)) : _GLF_FUZZED(1062.2873)))) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(1062.2873))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + _GLF_ZERO(0.0, injectionSwitch.x)), (true ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - sin(0.0)) : _GLF_FUZZED(1062.2873))), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0), (mat4x3(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(1062.2873))), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0)) * mat4(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((true ? -11.81 : 2627.8208))), bool(false))), 1.0))))), clamp(float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + _GLF_ZERO(0.0, injectionSwitch.x)), (true ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - sin(0.0)) : _GLF_FUZZED(1062.2873))), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0), (mat4x3(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(1062.2873))), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0)) * mat4(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((true ? -11.81 : 2627.8208))), bool(false))), 1.0))))), float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + _GLF_ZERO(0.0, injectionSwitch.x)), (true ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - sin(0.0)) : _GLF_FUZZED(1062.2873))), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0), (mat4x3(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(1062.2873))), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0)) * mat4(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((true ? -11.81 : 2627.8208))), bool(false))), 1.0))))), float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + _GLF_ZERO(0.0, injectionSwitch.x)), (true ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - sin(0.0)) : _GLF_FUZZED(1062.2873))), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0), (mat4x3(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(1062.2873))), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0)) * mat4(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((true ? -11.81 : 2627.8208))), bool(false))), 1.0))))))))))), float(_GLF_FUZZED(9.7)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, float(float(1.0))), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(8108.1344))), 1.0)))), 0.0, 0.0, 1.0, 1.0))))), min(float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((8.8 + _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)))) : injectionSwitch)).y : _GLF_FUZZED(1062.2873))), 1.0, 0.0, 0.0, 1.0, 1.0), mat2x3(mat2x4(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(1062.2873), (_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(1062.2873), max(true ? injectionSwitch.y : _GLF_FUZZED(1062.2873), true ? injectionSwitch.y : _GLF_FUZZED(1062.2873)))) / 1.0))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(5.6, -44.20)) : injectionSwitch)).y, (true ? injectionSwitch.y : _GLF_FUZZED(1062.2873))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(1062.2873))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y, (true ? injectionSwitch.y : _GLF_FUZZED(1062.2873)))) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(1062.2873))), float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(1062.2873))), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0), (mat4x3(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(1062.2873))), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0)) * mat4(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED((true ? -11.81 : 2627.8208))), bool(false)), mix(float(mix(float(1.0), float(_GLF_FUZZED((true ? -11.81 : 2627.8208))), bool(false))), float(_GLF_FUZZED(float(-72561))), bool(false)))), 1.0))))))), max(clamp(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, sin(0.0) + (injectionSwitch.y)) : _GLF_FUZZED(1062.2873))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(1062.2873))), (false ? _GLF_FUZZED((943.018)) : _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(1062.2873))))), (_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (true)))))) ? injectionSwitch.y : _GLF_FUZZED(1062.2873)))) / _GLF_IDENTITY(1.0, float(vec3(1.0, 0.0, 0.0)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(1062.2873))), float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(1062.2873))), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0), (mat4x3(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(1062.2873))), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0)) * mat4(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((true ? -11.81 : 2627.8208))), bool(false))), 1.0))))))), clamp(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(1062.2873))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(1062.2873))), (_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(1062.2873)))) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(1062.2873))), float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(1062.2873))), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0), (mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)).y, (true ? injectionSwitch.y : _GLF_FUZZED(1062.2873))), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0)) * mat4(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((true ? -11.81 : 2627.8208))), bool(false))), 1.0)))))))))), _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, float(float(1.0))), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(8108.1344))), 1.0)))), 0.0, 0.0, 1.0, 1.0))))), float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (true ? _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((_GLF_IDENTITY(8.8, clamp(8.8, _GLF_IDENTITY(8.8, clamp(8.8, 8.8, 8.8)), 8.8)) + injectionSwitch)) : injectionSwitch)).y : _GLF_FUZZED(1062.2873))), 1.0, 0.0, 0.0, 1.0, 1.0), mat2x3(mat2x4(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(1062.2873), (_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(1062.2873), max(true ? injectionSwitch.y : _GLF_FUZZED(1062.2873), true ? injectionSwitch.y : _GLF_FUZZED(1062.2873)))) / 1.0))), clamp(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(1062.2873))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(1062.2873))), (_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(1062.2873)))) * 1.0), (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - sin(0.0)) : _GLF_FUZZED(1062.2873), max(true ? injectionSwitch.y : _GLF_FUZZED(1062.2873), true ? injectionSwitch.y : _GLF_FUZZED(1062.2873)))), ((_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - sin(0.0)) : _GLF_FUZZED(1062.2873), max(true ? injectionSwitch.y : _GLF_FUZZED(1062.2873), true ? injectionSwitch.y : _GLF_FUZZED(1062.2873))))) / _GLF_ONE(1.0, injectionSwitch.y)))) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(1062.2873))), float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(1062.2873))), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0), (mat4x3(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(1062.2873))), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, float(float(0.0))), 0.0)) * mat4(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((true ? -11.81 : 2627.8208))), bool(false))), 1.0)))))))), _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, float(float(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec2(1.0, _GLF_IDENTITY(exp(0.0), min(_GLF_IDENTITY(exp(0.0), max(exp(0.0), _GLF_IDENTITY(exp(0.0), float(vec2(exp(0.0), 1.0))))), exp(0.0))))), _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(float(vec2(1.0, exp(0.0))), 1.0, 0.0), vec3(0.0, 0.0, 0.0) + (vec3(float(vec2(1.0, exp(0.0))), 1.0, 0.0)))), mix(float(float(_GLF_IDENTITY(vec3(float(vec2(1.0, exp(0.0))), 1.0, 0.0), vec3(0.0, 0.0, 0.0) + (vec3(float(_GLF_IDENTITY(vec2(1.0, exp(0.0)), (vec2(1.0, exp(0.0))) / vec2(1.0, 1.0))), 1.0, 0.0))))), float(_GLF_IDENTITY(_GLF_FUZZED(-4.7), _GLF_IDENTITY(float(mat4(_GLF_FUZZED(-4.7), 1.0, 1.0, 0.0, 1.0, sqrt(1.0), 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, 0.0, _GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), (determinant(mat2(0.0, 0.0, 0.0, 0.0))) / 1.0), determinant(mat3(1.0, sqrt(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 0.0, 0.0)), max(_GLF_IDENTITY(float(mat4(_GLF_FUZZED(-4.7), 1.0, 1.0, 0.0, 1.0, sqrt(1.0), 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, 0.0, _GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), (determinant(mat2(0.0, 0.0, 0.0, 0.0))) / 1.0), determinant(mat3(1.0, sqrt(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 0.0, 0.0)), (false ? _GLF_FUZZED(-0.9) : float(mat4(_GLF_FUZZED(-4.7), 1.0, 1.0, 0.0, 1.0, sqrt(1.0), 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, 0.0, _GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), (determinant(mat2(0.0, 0.0, 0.0, 0.0))) / 1.0), determinant(mat3(1.0, sqrt(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 0.0, 0.0)))), float(mat4(_GLF_FUZZED(-4.7), 1.0, 1.0, 0.0, 1.0, sqrt(1.0), 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, 0.0, _GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), (determinant(mat2(0.0, 0.0, 0.0, 0.0))) / 1.0), determinant(mat3(1.0, sqrt(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 0.0, 0.0)))))), bool(false)))))))), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(8108.1344))), 1.0)))), 0.0, 0.0, 1.0, 1.0))))))))))))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(false))
              {
               do
                {
                 do
                  {
                   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                    {
                     return;
                    }
                   else
                    {
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
               while(_GLF_WRAPPED_LOOP(false));
               if(_GLF_DEAD(false))
                break;
              }
             return;
            }
           else
            {
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               do
                {
                 return;
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             else
              {
              }
             if(_GLF_DEAD(false))
              continue;
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
        }
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         return;
        }
      }
    }
   else
    {
    }
   for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 0)))); _injected_loop_counter --)
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) - 0))) >> _GLF_IDENTITY(int(1), int(1)))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(11565))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
            {
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
              {
               do
                {
                 return;
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
              }
            }
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(false))
              return;
            }
           else
            {
            }
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, sqrt(0.0), 0.0, determinant(_GLF_IDENTITY(mat3(_GLF_IDENTITY(0.0, _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(-273.678) : 0.0, clamp(false ? _GLF_FUZZED(-273.678) : 0.0, false ? _GLF_FUZZED(-273.678) : 0.0, false ? _GLF_FUZZED(-273.678) : 0.0))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(-273.678) : 0.0, (true ? false ? _GLF_FUZZED(-273.678) : 0.0 : _GLF_FUZZED(-2.5)))), min((false ? _GLF_FUZZED(_GLF_IDENTITY(-273.678, min(-273.678, -273.678))) : 0.0), (false ? _GLF_FUZZED(_GLF_IDENTITY(-273.678, _GLF_IDENTITY((_GLF_IDENTITY(-273.678, clamp(-273.678, -273.678, -273.678))), clamp((_GLF_IDENTITY(-273.678, clamp(-273.678, -273.678, -273.678))), _GLF_IDENTITY((_GLF_IDENTITY(-273.678, clamp(-273.678, -273.678, -273.678))), 0.0 + (_GLF_IDENTITY((_GLF_IDENTITY(-273.678, clamp(-273.678, -273.678, -273.678))), ((_GLF_IDENTITY(-273.678, clamp(-273.678, -273.678, -273.678)))) / 1.0))), (_GLF_IDENTITY(-273.678, clamp(-273.678, -273.678, -273.678))))) / 1.0)) : 0.0))), (false ? _GLF_FUZZED(-273.678) : 0.0), _GLF_IDENTITY((false ? _GLF_FUZZED(-273.678) : 0.0), 1.0 * ((false ? _GLF_FUZZED(-273.678) : 0.0)))))), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0), mat3(mat4x3(_GLF_IDENTITY(mat3(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-273.678) : 0.0)), 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(vec4(5.9, 6.9, -9864.9178, 592.510).z)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), _GLF_IDENTITY((mat3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (_GLF_IDENTITY(! (bool(bool(false))), bool(bvec2(_GLF_IDENTITY(! (bool(bool(false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! (bool(bool(false)))), ! (! (bool(! (bool(bool(false)))))))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! (bool(bool(false)))), ! (! (bool(! (bool(bool(false)))))))), ! (! (bool(_GLF_IDENTITY(bool(! (bool(bool(false)))), ! (! (bool(! (bool(bool(false)))))))))))))), false)))))) ? _GLF_FUZZED(-273.678) : 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0), ((mat3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (_GLF_IDENTITY(! (bool(bool(false))), bool(bvec2(! (bool(bool(false))), false)))))) ? _GLF_FUZZED(-273.678) : _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)) / mat3(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0, 1.0, 1.0, 1.0)) * _GLF_IDENTITY(mat3(1.0), (mat3(1.0)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))))), 0.0, 1.0))) > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              break;
             return;
            }
           if(_GLF_DEAD(false))
            break;
           return;
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
      }
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   else
    {
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(8), int(8)))); _injected_loop_counter --)
        {
         return;
        }
       if(_GLF_DEAD(false))
        return;
      }
    }
   else
    {
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (false ? _GLF_FUZZED(-35480) : _injected_loop_counter)) != _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), clamp(int(_GLF_ONE(1.0, injectionSwitch.y)), int(_GLF_ONE(1.0, injectionSwitch.y)), int(_GLF_ONE(1.0, injectionSwitch.y))))); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         return;
         if(_GLF_DEAD(false))
          return;
        }
      }
     if(_GLF_DEAD(false))
      {
       do
        {
         for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           return;
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   if(_GLF_DEAD(false))
    return;
   for(int _injected_loop_counter = int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      return;
    }
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
