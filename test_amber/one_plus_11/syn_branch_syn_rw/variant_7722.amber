#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, false))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(gl_NumWorkGroups.x, (true ? _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) >> 0u) : _GLF_FUZZED(subgroup_local_id)))), (true ? uint(_GLF_IDENTITY(gl_NumWorkGroups.x, (true ? _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) >> 0u) : _GLF_FUZZED(subgroup_local_id)))) : _GLF_FUZZED(subgroup_id))))), _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups.x, min(_GLF_IDENTITY(gl_NumWorkGroups.x, 0u | (gl_NumWorkGroups.x)), _GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, gl_NumWorkGroups.x))))), ((_GLF_IDENTITY(gl_NumWorkGroups.x, min(_GLF_IDENTITY(gl_NumWorkGroups.x, 0u | (gl_NumWorkGroups.x)), _GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, gl_NumWorkGroups.x)))))) / 1u) * 1u);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), bool(bvec2((_GLF_IDENTITY(false, true && (false))), false))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, ~ (_GLF_IDENTITY(~ (gl_WorkGroupID), min(~ (gl_WorkGroupID), _GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupID), uvec3(0u, 0u, 0u) | (~ (gl_WorkGroupID))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (gl_WorkGroupID), uvec3(0u, 0u, 0u) | (~ (gl_WorkGroupID)))), uvec3(uvec3(~ (_GLF_IDENTITY(~ (gl_WorkGroupID), uvec3(0u, 0u, 0u) | (~ (gl_WorkGroupID))))))))))))).x;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) ^ (0u | 0u));
 uint subgroup_base = _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * subgroup_size), _GLF_IDENTITY(uint(uvec3((subgroup_id * subgroup_size), (0u << _GLF_IDENTITY(uint(2u), uint(2u))), 1u)), clamp(uint(uvec3((subgroup_id * subgroup_size), (0u << _GLF_IDENTITY(uint(2u), uint(2u))), 1u)), _GLF_IDENTITY(uint(uvec3((subgroup_id * subgroup_size), (0u << _GLF_IDENTITY(uint(2u), uint(2u))), 1u)), (false ? _GLF_FUZZED(198931u) : uint(uvec3((subgroup_id * subgroup_size), (0u << _GLF_IDENTITY(uint(2u), uint(2u))), 1u)))), _GLF_IDENTITY(uint(uvec3((subgroup_id * subgroup_size), (0u << _GLF_IDENTITY(uint(2u), uint(2u))), 1u)), (uint(uvec3((subgroup_id * subgroup_size), (0u << _GLF_IDENTITY(uint(2u), uint(2u))), 1u))) | (uint(uvec3((subgroup_id * subgroup_size), (0u << _GLF_IDENTITY(uint(2u), uint(2u))), 1u))))))) - 0u);
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u) + _GLF_IDENTITY(subgroup_base, (subgroup_base) << (0u << _GLF_IDENTITY(uint(7u), uint(7u))))) >> 0u) + subgroup_local_id, ~ (~ (_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) << (_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) * 1u))) << _GLF_IDENTITY(uint(7u), uint(7u))))) >> 0u) + subgroup_local_id)));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base + _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((1) / ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), ~ (~ ((1) / ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6)))))), int(_GLF_IDENTITY(ivec4((1) / ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), 1, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0), (ivec4((1) / ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), 1, _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), min(_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (int(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), 0 | (int(_GLF_ZERO(0.0, injectionSwitch.x)))))), 0)) >> ivec4(0, 0, 0, 0)))))) % subgroup_size), max(((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1) / ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) | (int(6))), int(6))) >> _GLF_IDENTITY(int(6), int(6))), int(_GLF_IDENTITY(ivec4((1) / ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), 1, int(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, ~ (~ (0))), 0))), (ivec4((1) / ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), 1, int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x)), 0)) >> ivec4(0, 0, 0, 0)))))) % subgroup_size), ((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1) / ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), int(_GLF_IDENTITY(_GLF_IDENTITY(ivec4((1) / ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), 1, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0), (ivec4((1) / ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), 1, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0)) >> ivec4(0, 0, 0, 0)), (_GLF_IDENTITY(ivec4((1) / ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), 1, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0), (ivec4((1) / ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), 1, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0)) >> ivec4(0, 0, 0, 0))) >> ivec4(0, 0, 0, 0)))))) % subgroup_size))), (_GLF_IDENTITY(workgroup_base + subgroup_base + _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((1) / ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), clamp(_GLF_IDENTITY((1) / ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), 0 ^ ((1) / ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))))), (1) / ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), (1) / ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))))), int(_GLF_IDENTITY(ivec4((_GLF_IDENTITY(1, (1) + 0)) / ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), 1, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0), (ivec4((1) / ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), 1, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0)) >> ivec4(0, 0, 0, 0)))))) % subgroup_size), max(((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1) / ((1 << _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, (6) * 1)))) >> _GLF_IDENTITY(int(6), int(6))), int(_GLF_IDENTITY(ivec4((1) / ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), (_GLF_IDENTITY(int(6), int(6))) | 0)) >> _GLF_IDENTITY(int(6), int(6))), 1, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0), (ivec4((1) / ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), 1, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0)) >> ivec4(0, 0, 0, 0)))))) % subgroup_size), ((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1) / ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(6), int(6)), (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(6), int(6)), 0 | (1 << _GLF_IDENTITY(int(6), int(6))))) ^ 0)) >> _GLF_IDENTITY(int(6), int(6))), int(_GLF_IDENTITY(ivec4((_GLF_IDENTITY(1, 0 | (1))) / ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(6), int(6)), min(1 << _GLF_IDENTITY(int(6), int(6)), 1 << _GLF_IDENTITY(int(6), int(6))))) >> _GLF_IDENTITY(int(6), int(6))), 1, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0), (ivec4((1) / ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), 1, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0)) >> ivec4(0, 0, 0, 0)))))) % subgroup_size))), (workgroup_base + subgroup_base + _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(workgroup_base))) + _GLF_IDENTITY(1, _GLF_IDENTITY((1) / ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), int(_GLF_IDENTITY(ivec4((1) / ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), 1, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0), (ivec4((1) / ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), 1, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0)) >> ivec4(0, 0, 0, 0)))))) % subgroup_size), max(((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1) / ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), int(_GLF_IDENTITY(ivec4((1) / ((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(int(1)))) | (1)) << _GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), max(_GLF_IDENTITY(int(6), int(6)), _GLF_IDENTITY(int(6), int(6))))) >> _GLF_IDENTITY(int(6), int(6))), 1, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0), (ivec4((1) / ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), 1, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0)) >> ivec4(0, 0, _GLF_IDENTITY(0, 0 ^ (0)), 0)))))) % subgroup_size), ((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1) / ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), int(_GLF_IDENTITY(ivec4((1) / ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), 1, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0), (ivec4((1) / ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), 1, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0)) >> ivec4(0, 0, 0, 0)))))) % subgroup_size)))) * ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))) | 0u), _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size)) | 0u, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY((workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size)) | 0u, _GLF_IDENTITY(max(_GLF_IDENTITY((workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size)) | 0u, ((workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size)) | 0u) / uint(_GLF_ONE(1.0, injectionSwitch.y))), (workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size)) | 0u), max(max((workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size)) | 0u, (workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size)) | 0u), max((workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size)) | 0u, (workgroup_base + subgroup_base + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, 1u * ((subgroup_local_id + 1) % subgroup_size)), clamp(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, 1u * ((subgroup_local_id + 1) % subgroup_size)), _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, 1u * ((subgroup_local_id + 1) % subgroup_size)), _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, 1u * ((subgroup_local_id + 1) % subgroup_size))))), (false ? _GLF_FUZZED(subgroup_local_id) : ~ (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, 1u * ((subgroup_local_id + 1) % subgroup_size))))))))) | 0u))))), min((_GLF_IDENTITY((workgroup_base + subgroup_base + ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) + 0u)) % subgroup_size)) | 0u, max((_GLF_IDENTITY(workgroup_base + subgroup_base + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) - (0u << _GLF_IDENTITY(uint(4u), uint(4u))))), max(workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size), workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size)))) | 0u, (workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size)) | 0u))), (_GLF_IDENTITY((workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size)) | 0u, max((workgroup_base + subgroup_base + (_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))) % subgroup_size)) | 0u, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size)), min((workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size)), (workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size)))), 1u * ((workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) + 0u) + ((subgroup_local_id + 1) % subgroup_size)))) | 0u))))))), min(_GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_base, (true ? _GLF_IDENTITY(subgroup_base, (subgroup_base) | _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, (0u) / uint(_GLF_ONE(1.0, injectionSwitch.y))) : _GLF_FUZZED(workgroup_id)))) : _GLF_FUZZED(workgroup_size))) + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (subgroup_size)))) | 0u, (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, 1u * (workgroup_base)) + subgroup_base + ((subgroup_local_id + 1) % subgroup_size)) | 0u, (131314u & _GLF_IDENTITY(0u, ~ (~ (0u)))) | ((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(subgroup_size) : workgroup_base))) - 0u) + subgroup_base + ((subgroup_local_id + _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(64933)))) % subgroup_size), clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (0u << _GLF_IDENTITY(uint(6u), uint(6u))) + (workgroup_base)), (false ? _GLF_FUZZED(uvec4(139905u, 151173u, 118840u, 13430u).a) : workgroup_base)) + subgroup_base + ((_GLF_IDENTITY(subgroup_local_id, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_local_id : _GLF_FUZZED(virtual_gid))) + 1) % subgroup_size), workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) | (subgroup_base)) + ((subgroup_local_id + 1) % subgroup_size), workgroup_base + subgroup_base + (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uint(subgroup_size)), min(uint(uint(subgroup_size)), uint(uint(subgroup_size))))), (false ? _GLF_FUZZED(subgroup_base) : (subgroup_local_id + 1) % subgroup_size)))))) | 0u))) ^ 0u), (workgroup_base + subgroup_base + (_GLF_IDENTITY((subgroup_local_id + 1), 1u * ((subgroup_local_id + 1))) % subgroup_size)) | 0u)));
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  return;
 if(_GLF_DEAD(false))
  return;
 uint read = _GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), _GLF_IDENTITY((atomicLoad(buf[virtual_gid], 4, 64, 2)) << 0u, ((atomicLoad(buf[virtual_gid], 4, 64, 2)) << 0u) | 0u));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))))))), bool(bvec4((injectionSwitch.x < injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))))))), bool(bvec4((injectionSwitch.x < injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))), false || ((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))))))), bool(bvec4((injectionSwitch.x < injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))))))), (! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) - 0.0)), vec2(_GLF_FUZZED(5.9), _GLF_FUZZED(vec4(-526.242, 7.1, -968.052, 5574.6536).w)), bvec2(false, false))).x < injectionSwitch.y), bool(bvec4((injectionSwitch.x < injectionSwitch.y), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), false))))), true, true)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (_GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))))))), bool(bvec4((injectionSwitch.x < injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))))))), true && ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))))))))), bool(bvec4((injectionSwitch.x < injectionSwitch.y), _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))), (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, ! (! (true))))))), false || _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))))))), bool(bvec4((injectionSwitch.x < injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))), false || ((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))))))), bool(bvec4((injectionSwitch.x < injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))))))), bool(bvec4((injectionSwitch.x < injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))), false || ((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))))))), bool(bvec4((injectionSwitch.x < injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))))), ! (_GLF_IDENTITY(! (bool((_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))))))), bool(bvec4((injectionSwitch.x < injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))), false || ((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))))))), bool(bvec4((injectionSwitch.x < injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))))))), (! (bool((_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))))))), bool(bvec4((injectionSwitch.x < injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))), false || ((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))))))), bool(bvec4((injectionSwitch.x < injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))))))) || false)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool((_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))))))), bool(bvec4((injectionSwitch.x < injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))), false || ((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))))))), bool(bvec4((injectionSwitch.x < injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))))), ! (_GLF_IDENTITY(! (bool((_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))))))), bool(bvec4((injectionSwitch.x < injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))), false || ((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))))))), bool(bvec4((injectionSwitch.x < injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))))))), (! (bool((_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))))))), bool(bvec4((injectionSwitch.x < injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))), false || ((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))))))), bool(bvec4((injectionSwitch.x < injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))))))) || false)))), (bool(_GLF_IDENTITY(bool((_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))))))), bool(bvec4((injectionSwitch.x < injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))), false || ((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))))))), bool(bvec4((injectionSwitch.x < injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))))), ! (_GLF_IDENTITY(! (bool((_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))))))), bool(bvec4((injectionSwitch.x < injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))), false || ((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))))))), bool(bvec4((injectionSwitch.x < injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))))))), (! (bool((_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))))))), bool(bvec4((injectionSwitch.x < injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))), false || ((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))))))), bool(bvec4((injectionSwitch.x < injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))))))) || false))))) || false)) || false))))))), (! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) - 0.0)), vec2(_GLF_FUZZED(5.9), _GLF_FUZZED(vec4(-526.242, 7.1, -968.052, 5574.6536).w)), bvec2(false, false))).x < injectionSwitch.y), bool(bvec4((injectionSwitch.x < injectionSwitch.y), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), false))))), true, true)))))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))))), ! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((injectionSwitch.x < injectionSwitch.y)), bool(bvec2(bool((injectionSwitch.x < injectionSwitch.y)), false)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool((injectionSwitch.x < injectionSwitch.y)), bool(bvec2(bool((injectionSwitch.x < injectionSwitch.y)), false)))), true && (bool(_GLF_IDENTITY(bool((injectionSwitch.x < injectionSwitch.y)), bool(bvec2(bool((injectionSwitch.x < injectionSwitch.y)), false))))))) && true)), bool(bvec4((injectionSwitch.x < injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))), _GLF_IDENTITY((! _GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), vec2(mat4x2((injectionSwitch), 0.0, 0.0, 1.0, 0.0, 0.0, abs(0.0))))[1]), vec2(_GLF_FUZZED(5.9), _GLF_FUZZED(vec4(-526.242, 7.1, -968.052, 5574.6536).w)), bvec2(false, false))).x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), 0.0 + (injectionSwitch.y))), bool(bvec4((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x < injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).y)), true, true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), vec2(mat4x2((injectionSwitch), 0.0, 0.0, 1.0, 0.0, 0.0, abs(0.0))))[1]), vec2(_GLF_FUZZED(5.9), _GLF_FUZZED(vec4(-526.242, 7.1, -968.052, 5574.6536).w)), bvec2(false, false))).x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), 0.0 + (injectionSwitch.y))), bool(bvec4((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x < injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).y)), true, true))))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), vec2(mat4x2((injectionSwitch), 0.0, 0.0, 1.0, 0.0, 0.0, abs(0.0))))[1]), vec2(_GLF_FUZZED(5.9), _GLF_FUZZED(vec4(-526.242, 7.1, -968.052, 5574.6536).w)), bvec2(false, false))).x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), 0.0 + (injectionSwitch.y))), bool(bvec4((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x < injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).y)), true, true))))), bool(bvec4((! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), vec2(mat4x2((injectionSwitch), 0.0, 0.0, 1.0, 0.0, 0.0, abs(0.0))))[1]), vec2(_GLF_FUZZED(5.9), _GLF_FUZZED(vec4(-526.242, 7.1, -968.052, 5574.6536).w)), bvec2(false, false))).x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), 0.0 + (injectionSwitch.y))), bool(bvec4((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x < injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).y)), true, true))))), false, true, false))))))))), bool(bvec4((! _GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), vec2(mat4x2((injectionSwitch), 0.0, 0.0, 1.0, 0.0, 0.0, abs(0.0))))[1]), vec2(_GLF_FUZZED(5.9), _GLF_FUZZED(vec4(-526.242, 7.1, -968.052, 5574.6536).w)), bvec2(false, false))).x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), 0.0 + (injectionSwitch.y))), bool(bvec4((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x < injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).y)), true, true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), vec2(mat4x2((injectionSwitch), 0.0, 0.0, 1.0, 0.0, 0.0, abs(0.0))))[1]), vec2(_GLF_FUZZED(5.9), _GLF_FUZZED(vec4(-526.242, 7.1, -968.052, 5574.6536).w)), bvec2(false, false))).x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), 0.0 + (injectionSwitch.y))), bool(bvec4((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x < injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).y)), true, true))))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), vec2(mat4x2((injectionSwitch), 0.0, 0.0, 1.0, 0.0, 0.0, abs(0.0))))[1]), vec2(_GLF_FUZZED(5.9), _GLF_FUZZED(vec4(-526.242, 7.1, -968.052, 5574.6536).w)), bvec2(false, false))).x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), 0.0 + (injectionSwitch.y))), bool(bvec4((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x < injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).y)), true, true))))), bool(bvec4((! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), vec2(mat4x2((injectionSwitch), 0.0, 0.0, 1.0, 0.0, 0.0, abs(0.0))))[1]), vec2(_GLF_FUZZED(5.9), _GLF_FUZZED(vec4(-526.242, 7.1, -968.052, 5574.6536).w)), bvec2(false, false))).x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), 0.0 + (injectionSwitch.y))), bool(bvec4((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x < injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).y)), true, true))))), false, true, false))))))))), false, false, false))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-8.4)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) < injectionSwitch.y))))))), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(! (! (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), float(mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), 1.0 * (injectionSwitch.y)), 1.0, 0.0, 0.0, length(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0)))), bool(bvec4((injectionSwitch.x < injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))), (! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED(reflect(9.4, 2.2))))), vec2(_GLF_FUZZED(_GLF_IDENTITY(5.9, mix(float(_GLF_FUZZED((+ -70.21))), float(5.9), bool(true)))), _GLF_FUZZED(vec4(-526.242, 7.1, -968.052, 5574.6536).w)), bvec2(false, _GLF_IDENTITY(false, ! (! (false)))))).x < injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED(reflect(9.4, 2.2))))), vec2(_GLF_FUZZED(_GLF_IDENTITY(5.9, mix(float(_GLF_FUZZED((+ -70.21))), float(5.9), bool(true)))), _GLF_FUZZED(vec4(-526.242, 7.1, -968.052, 5574.6536).w)), bvec2(false, _GLF_IDENTITY(false, ! (! (false)))))).x < injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], (true ? _GLF_IDENTITY((injectionSwitch)[1], max(_GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1])), _GLF_IDENTITY((injectionSwitch)[1], (_GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(880.254)), float((injectionSwitch)[1]), bool(true)))) + 0.0))) : _GLF_FUZZED(reflect(9.4, 2.2))))), vec2(_GLF_FUZZED(_GLF_IDENTITY(5.9, _GLF_IDENTITY(mix(float(_GLF_FUZZED((+ -70.21))), float(5.9), bool(true)), mix(float(_GLF_FUZZED(-9.3)), float(mix(float(_GLF_FUZZED((+ -70.21))), float(5.9), bool(true))), bool(true))))), _GLF_FUZZED(vec4(-526.242, 7.1, _GLF_IDENTITY(-968.052, (false ? _GLF_FUZZED(-39.42) : _GLF_IDENTITY(-968.052, (-968.052) - 0.0))), 5574.6536).w)), bvec2(false, _GLF_IDENTITY(false, ! (! (false)))))).x < injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED(reflect(9.4, 2.2))))), vec2(_GLF_FUZZED(_GLF_IDENTITY(5.9, mix(float(_GLF_FUZZED((+ -70.21))), float(5.9), bool(true)))), _GLF_FUZZED(vec4(-526.242, 7.1, -968.052, 5574.6536).w)), bvec2(false, _GLF_IDENTITY(false, ! (! (false)))))).x < injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED(reflect(9.4, 2.2))))), vec2(_GLF_FUZZED(_GLF_IDENTITY(5.9, mix(float(_GLF_FUZZED((+ -70.21))), float(5.9), bool(true)))), _GLF_FUZZED(vec4(-526.242, 7.1, -968.052, 5574.6536).w)), bvec2(false, _GLF_IDENTITY(false, ! (! (false)))))).x < injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], (true ? _GLF_IDENTITY((injectionSwitch)[1], max(_GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1])), _GLF_IDENTITY((injectionSwitch)[1], (_GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(880.254)), float((injectionSwitch)[1]), bool(true)))) + 0.0))) : _GLF_FUZZED(reflect(9.4, 2.2))))), vec2(_GLF_FUZZED(_GLF_IDENTITY(5.9, _GLF_IDENTITY(mix(float(_GLF_FUZZED((+ -70.21))), float(5.9), bool(true)), mix(float(_GLF_FUZZED(-9.3)), float(mix(float(_GLF_FUZZED((+ -70.21))), float(5.9), bool(true))), bool(true))))), _GLF_FUZZED(vec4(-526.242, 7.1, _GLF_IDENTITY(-968.052, (false ? _GLF_FUZZED(-39.42) : _GLF_IDENTITY(-968.052, (-968.052) - 0.0))), 5574.6536).w)), bvec2(false, _GLF_IDENTITY(false, ! (! (false)))))).x < injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED(reflect(9.4, 2.2))))), vec2(_GLF_FUZZED(_GLF_IDENTITY(5.9, mix(float(_GLF_FUZZED((+ -70.21))), float(5.9), bool(true)))), _GLF_FUZZED(vec4(-526.242, 7.1, -968.052, 5574.6536).w)), bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false)))))).x < injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED(reflect(9.4, 2.2))))), vec2(_GLF_FUZZED(_GLF_IDENTITY(5.9, mix(float(_GLF_FUZZED((+ -70.21))), float(5.9), bool(true)))), _GLF_FUZZED(vec4(-526.242, 7.1, -968.052, 5574.6536).w)), bvec2(false, _GLF_IDENTITY(false, ! (! (false))))), (_GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED(reflect(9.4, 2.2))))), vec2(_GLF_FUZZED(_GLF_IDENTITY(5.9, mix(float(_GLF_FUZZED((+ -70.21))), float(5.9), bool(true)))), _GLF_FUZZED(vec4(-526.242, 7.1, -968.052, 5574.6536).w)), bvec2(false, _GLF_IDENTITY(false, ! (! (false))))), vec2(vec3(mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED(reflect(9.4, 2.2))))), vec2(_GLF_FUZZED(_GLF_IDENTITY(5.9, mix(float(_GLF_FUZZED((+ -70.21))), float(5.9), bool(true)))), _GLF_FUZZED(vec4(-526.242, 7.1, -968.052, 5574.6536).w)), bvec2(false, _GLF_IDENTITY(false, ! (! (false))))), 1.0)))) * abs(vec2(1.0, 1.0)))).x < injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], (true ? _GLF_IDENTITY((injectionSwitch)[1], max(_GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1])), _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(880.254)), float((injectionSwitch)[1]), bool(true)))), min((_GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(880.254)), float((injectionSwitch)[1]), bool(true)))), (_GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(880.254)), float((injectionSwitch)[1]), bool(true)))))) + 0.0))) : _GLF_FUZZED(reflect(9.4, 2.2))))), vec2(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(5.9, _GLF_IDENTITY(mix(float(_GLF_FUZZED((+ -70.21))), float(5.9), bool(true)), mix(float(_GLF_FUZZED(-9.3)), float(mix(float(_GLF_FUZZED((+ -70.21))), float(5.9), bool(true))), bool(true)))), (_GLF_IDENTITY(_GLF_IDENTITY(5.9, _GLF_IDENTITY(mix(float(_GLF_FUZZED((+ -70.21))), float(5.9), bool(true)), mix(float(_GLF_FUZZED(-9.3)), float(mix(float(_GLF_FUZZED((+ -70.21))), float(5.9), bool(true))), bool(true)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(5.9, _GLF_IDENTITY(mix(float(_GLF_FUZZED((+ -70.21))), float(5.9), bool(true)), mix(float(_GLF_FUZZED(-9.3)), float(mix(float(_GLF_FUZZED((+ -70.21))), float(5.9), bool(true))), bool(true)))), float(float(_GLF_IDENTITY(5.9, _GLF_IDENTITY(mix(float(_GLF_FUZZED((+ -70.21))), float(5.9), bool(true)), mix(float(_GLF_FUZZED(-9.3)), float(mix(float(_GLF_FUZZED((+ -70.21))), float(5.9), bool(true))), bool(true))))))), _GLF_IDENTITY(5.9, _GLF_IDENTITY(mix(float(_GLF_FUZZED((+ -70.21))), float(5.9), bool(true)), mix(float(_GLF_FUZZED(-9.3)), float(mix(float(_GLF_FUZZED((+ -70.21))), float(5.9), bool(true))), bool(true)))), _GLF_IDENTITY(5.9, _GLF_IDENTITY(mix(float(_GLF_FUZZED((+ -70.21))), float(5.9), bool(true)), mix(float(_GLF_FUZZED(-9.3)), float(mix(float(_GLF_FUZZED((+ -70.21))), float(5.9), bool(true))), bool(true))))))) - _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0)), max(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0))))))), _GLF_FUZZED(vec4(-526.242, 7.1, _GLF_IDENTITY(-968.052, (false ? _GLF_FUZZED(-39.42) : _GLF_IDENTITY(-968.052, (-968.052) - 0.0))), 5574.6536).w)), bvec2(false, _GLF_IDENTITY(false, ! (! (false)))))).x < injectionSwitch.y)))))) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4((injectionSwitch.x < injectionSwitch.y), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true, true)))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), bool(bvec2(! (injectionSwitch.x < injectionSwitch.y), true)))))))))) || false)) && (_GLF_DEAD(false))))
  return;
 if((subgroup_local_id % _GLF_IDENTITY(2, max(2, 2))) == _GLF_IDENTITY(0, _GLF_IDENTITY((0), ((0)) | 0) | int(_GLF_ZERO(0.0, injectionSwitch.x))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
  }
 else
  {
   atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 subgroupBarrier();
 if(_GLF_DEAD(false))
  return;
 atomicStore(checker[virtual_gid], read, 4, 64, 4);
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
