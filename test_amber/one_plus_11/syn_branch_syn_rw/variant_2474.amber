#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x));
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, 0u ^ (workgroup_size)) * workgroup_id;
 uint subgroup_base = _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size)))) ^ 0u);
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, ~ (~ (workgroup_base + subgroup_base + subgroup_local_id)));
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, clamp(workgroup_base + subgroup_base, workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, (true ? _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) | (_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))), (_GLF_IDENTITY((workgroup_base) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(72058u))) + (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)), ~ (~ (_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)), clamp(uint(uvec4(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)), uint(uvec4(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)), uint(uvec4(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u))))))))) | (_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))))))), max((workgroup_base) | (_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))), (workgroup_base) | (_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)))))) << 0u)) + _GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base)) : _GLF_FUZZED(workgroup_size))))) + _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-96963) : _GLF_IDENTITY(1, (1) | (1)))), ~ (~ (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-96963) : _GLF_IDENTITY(1, (1) | (1))))))), max(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((false ? _GLF_FUZZED(-96963) : _GLF_IDENTITY(1, (1) | (1))), 0 + ((false ? _GLF_FUZZED(-96963) : _GLF_IDENTITY(1, (1) | (1)))))), (subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-96963) : _GLF_IDENTITY(1, (1) | (1))))) * 1u), subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-96963) : _GLF_IDENTITY(1, (1) | (1))))))) % subgroup_size), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-96963) : _GLF_IDENTITY(1, (1) | (1)))), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u), subgroup_local_id)) + _GLF_IDENTITY(1, (_GLF_IDENTITY(false ? _GLF_FUZZED(-96963) : _GLF_IDENTITY(1, (1) | (1)), (false ? _GLF_FUZZED(80204) : false ? _GLF_FUZZED(-96963) : _GLF_IDENTITY(1, (1) | (1)))))), (subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-96963) : _GLF_IDENTITY(1, (1) | (1))))) * 1u), subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-96963) : _GLF_IDENTITY(1, (1) | (1))))))) % subgroup_size, ((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-96963) : _GLF_IDENTITY(1, (1) | (1)))), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u), subgroup_local_id)) + _GLF_IDENTITY(1, (_GLF_IDENTITY(false ? _GLF_FUZZED(-96963) : _GLF_IDENTITY(1, (1) | (1)), (false ? _GLF_FUZZED(80204) : false ? _GLF_FUZZED(-96963) : _GLF_IDENTITY(1, (1) | (1)))))), (subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-96963) : _GLF_IDENTITY(1, (1) | (1))))) * 1u), subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-96963) : _GLF_IDENTITY(1, (1) | (1))))))) % subgroup_size) | ((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-96963) : _GLF_IDENTITY(1, (1) | (1)))), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u), subgroup_local_id)) + _GLF_IDENTITY(1, (_GLF_IDENTITY(false ? _GLF_FUZZED(-96963) : _GLF_IDENTITY(1, (1) | (1)), (false ? _GLF_FUZZED(80204) : false ? _GLF_FUZZED(-96963) : _GLF_IDENTITY(1, (1) | (1)))))), (subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-96963) : _GLF_IDENTITY(1, (1) | (1))))) * 1u), subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-96963) : _GLF_IDENTITY(1, (1) | (1))))))) % subgroup_size))), ~ (~ (((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-96963) : _GLF_IDENTITY(1, (1) | _GLF_IDENTITY((1), int(ivec3(_GLF_IDENTITY((1), 0 | (_GLF_IDENTITY((1), 0 | ((1))))), 0, 0)))))), max(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-96963) : _GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), ~ (~ ((1) | (1))))))), (subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((false ? _GLF_FUZZED(-96963) : _GLF_IDENTITY(1, (1) | (1))), min(_GLF_IDENTITY((false ? _GLF_FUZZED(-96963) : _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (_GLF_IDENTITY(1, (1) | (1))) ^ 0)), clamp((false ? _GLF_FUZZED(_GLF_IDENTITY(-96963, (-96963) >> 0)) : _GLF_IDENTITY(1, (1) | _GLF_IDENTITY((1), ((1)) | ((1))))), (false ? _GLF_FUZZED(_GLF_IDENTITY(-96963, clamp(-96963, -96963, -96963))) : _GLF_IDENTITY(1, (1) | _GLF_IDENTITY((1), (_GLF_IDENTITY((1), _GLF_IDENTITY(1, (1) >> 0) * ((1)))) | (_GLF_IDENTITY((_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, clamp(1, 1, 1))))), 0 | (_GLF_IDENTITY((1), (_GLF_IDENTITY((1), ~ (~ ((1))))) * 1))))))), (false ? _GLF_FUZZED(-96963) : _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) << 0)) | (1))))), (false ? _GLF_FUZZED(-96963) : _GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), (true ? (1) | (_GLF_IDENTITY(1, (1) >> 0)) : _GLF_FUZZED(26119))))))))) * 1u), subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-96963) : _GLF_IDENTITY(1, (1) | (1))))))) % subgroup_size))))), (~ (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-96963) : _GLF_IDENTITY(1, (1) | (1)))), max(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-96963) : _GLF_IDENTITY(1, (1) | _GLF_IDENTITY((1), min(_GLF_IDENTITY((1), ((1)) >> 0), (1)))))), _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-96963) : _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (_GLF_IDENTITY(1, (1) | (1))) | (_GLF_IDENTITY(1, (1) | (1))))))), ((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-96963) : _GLF_IDENTITY(1, (1) | (1)))), (subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-96963) : _GLF_IDENTITY(1, (1) | (1))))) ^ 0u))) - 0u) * 1u), subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(false ? _GLF_FUZZED(-96963) : _GLF_IDENTITY(1, (1) | (1)), max(_GLF_IDENTITY(false ? _GLF_FUZZED(-96963) : _GLF_IDENTITY(1, (1) | (1)), (false ? _GLF_FUZZED(-96963) : _GLF_IDENTITY(1, (1) | (1))) / 1), false ? _GLF_FUZZED(-96963) : _GLF_IDENTITY(1, (1) | (1))))))))) % subgroup_size), ~ (~ (((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-96963) : _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec4(1, 1, 1, 1)), (int(ivec4(1, 1, 1, 1))) - 0)))))), max(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-96963) : _GLF_IDENTITY(1, _GLF_IDENTITY((1), min((1), _GLF_IDENTITY((1), ((1)) | ((1))))) | (1)))), _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(_GLF_IDENTITY(-96963, (-96963) | 0)) : _GLF_IDENTITY(1, (1) | (1))))) * 1u, _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-96963) : _GLF_IDENTITY(1, (1) | (1))))) * 1u), (((subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-96963) : _GLF_IDENTITY(1, (1) | (1))))) * 1u)) ^ 0u) - 0u)), subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-96963) : _GLF_IDENTITY(1, (1) | (1))))))) % subgroup_size)))))) | (~ (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-96963) : _GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), ((1) | (1)) - 0)))), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-96963) : _GLF_IDENTITY(1, (1) | (1)))), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u) + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-96963) : _GLF_IDENTITY(1, (1) | (1))))) * 1u), (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-96963) : _GLF_IDENTITY(1, (1) | (1)))), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u) + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-96963) : _GLF_IDENTITY(1, (1) | (1))))) * 1u)) ^ 0u), subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_IDENTITY(_GLF_FUZZED(-96963), clamp(_GLF_FUZZED(-96963), _GLF_FUZZED(-96963), _GLF_FUZZED(-96963))) : _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, ~ (~ (1))))))))), _GLF_IDENTITY(0u, (0u) ^ (0u << _GLF_IDENTITY(uint(1u), uint(1u)))) + (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-96963) : _GLF_IDENTITY(1, (1) | (1)))), max(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-96963) : _GLF_IDENTITY(1, (1) | (1)))), (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-96963) : _GLF_IDENTITY(1, (1) | (1)))), uint(uint(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(false ? _GLF_FUZZED(-96963) : _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1 & 1) * (1)))), 1 * (false ? _GLF_FUZZED(-96963) : _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1 & 1) * (1)))))))))))) * 1u), subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-96963) : _GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) | (1)), 1, 1))))), (1) | (1))))))))), 0u | ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-96963) : _GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), ((1) | (1)) - 0)))), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-96963) : _GLF_IDENTITY(1, (1) | (1)))), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u) + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-96963) : _GLF_IDENTITY(1, (1) | (1))))) * 1u), (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-96963) : _GLF_IDENTITY(1, (1) | (1)))), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u) + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-96963) : _GLF_IDENTITY(1, (1) | (1))))) * 1u)) ^ 0u), subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_IDENTITY(_GLF_FUZZED(-96963), clamp(_GLF_FUZZED(-96963), _GLF_FUZZED(-96963), _GLF_FUZZED(-96963))) : _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, ~ (~ (1))))))))), _GLF_IDENTITY(0u, (0u) ^ (0u << _GLF_IDENTITY(uint(1u), uint(1u)))) + (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-96963) : _GLF_IDENTITY(1, (1) | (1)))), max(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-96963) : _GLF_IDENTITY(1, (1) | (1)))), (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-96963) : _GLF_IDENTITY(1, (1) | (1)))), uint(uint(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(false ? _GLF_FUZZED(-96963) : _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1 & 1) * (1)))), 1 * (false ? _GLF_FUZZED(-96963) : _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1 & 1) * (1)))))))))))) * 1u), subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-96963) : _GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) | (1)), 1, 1))))), (1) | (1))))))))))) % subgroup_size), ~ (~ (((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-96963) : _GLF_IDENTITY(1, (1) | (1)))), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)) + _GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-96963) : _GLF_IDENTITY(1, (1) | _GLF_IDENTITY((1), ((1)) >> 0)))), (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-96963) : _GLF_IDENTITY(1, (1) | _GLF_IDENTITY((1), ((1)) >> 0))))) | (_GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-96963) : _GLF_IDENTITY(1, (1) | _GLF_IDENTITY((1), ((1)) >> 0)))), int(int(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-96963) : _GLF_IDENTITY(1, (1) | _GLF_IDENTITY((1), ((1)) >> 0))))))))), (subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-96963) : _GLF_IDENTITY(1, (1) | (1))))) * 1u), subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-96963) : _GLF_IDENTITY(1, (1) | _GLF_IDENTITY(_GLF_IDENTITY((1), ((1)) ^ 0), ((1)) + 0))))))) % subgroup_size))))))))), (_GLF_IDENTITY(workgroup_base + subgroup_base, clamp(workgroup_base + subgroup_base, workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, (true ? _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) | (_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))), uint(uint((workgroup_base) | (_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))))))) + subgroup_base : _GLF_FUZZED(workgroup_size))))) + ((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(false ? _GLF_FUZZED(-96963) : _GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), clamp((1) | (1), (1) | (1), (1) | (1)))), (false ? _GLF_FUZZED(-96963) : _GLF_IDENTITY(1, (1) | (1))) + 0))), (_GLF_IDENTITY(1, (_GLF_IDENTITY(false ? _GLF_FUZZED(-96963) : _GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), clamp((1) | (1), (1) | (1), (1) | (1)))), (false ? _GLF_FUZZED(-96963) : _GLF_IDENTITY(1, (1) | (1))) + 0)))) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(false ? _GLF_FUZZED(-96963) : _GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), clamp((1) | (1), (1) | (1), (1) | (1)))), (false ? _GLF_FUZZED(-96963) : _GLF_IDENTITY(1, (1) | (1))) + 0))))), max(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-96963, (-96963) | 0), max(-96963, _GLF_IDENTITY(-96963, (_GLF_IDENTITY(-96963, ~ (~ (-96963)))) | 0)))) : _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) << 0)) | (1)))), (subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-96963) : _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), max(_GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (1) | (1))))))) * 1u), subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))) ? _GLF_FUZZED(-96963) : _GLF_IDENTITY(1, (1) | (1))))))) % subgroup_size)) / 1u), min(_GLF_IDENTITY(workgroup_base + subgroup_base, clamp(workgroup_base + subgroup_base, workgroup_base + subgroup_base, workgroup_base + subgroup_base)) + ((subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-96963) : _GLF_IDENTITY(1, (1) | (1))))) % subgroup_size), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, clamp(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + subgroup_base, workgroup_base + subgroup_base, workgroup_base + subgroup_base)), (_GLF_IDENTITY(workgroup_base + subgroup_base, clamp(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)) + subgroup_base, workgroup_base + subgroup_base))) * 1u) + ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u), subgroup_local_id)), (_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u), subgroup_local_id))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))) + _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(-96963) : _GLF_IDENTITY(1, (1) | _GLF_IDENTITY(_GLF_IDENTITY((1), (_GLF_IDENTITY((1), ((1)) | _GLF_IDENTITY(0, (_GLF_IDENTITY(0, min(0, 0))) / 1))) | ((1))), max(_GLF_IDENTITY((1), (_GLF_IDENTITY((1), ((1)) | _GLF_IDENTITY(0, (false ? _GLF_FUZZED(40572) : 0)))) | ((_GLF_IDENTITY(1, (1) | (1))))), _GLF_IDENTITY((1), (_GLF_IDENTITY((1), ((1)) | 0)) | ((1)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_IDENTITY(_GLF_FUZZED(-96963), 0 | (_GLF_FUZZED(-96963))) : _GLF_IDENTITY(1, (1) | (1)))), (_GLF_IDENTITY(1, _GLF_IDENTITY((false ? _GLF_FUZZED(-96963) : _GLF_IDENTITY(_GLF_IDENTITY(1, (1) / ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0)))), (1) | (1))), ~ (~ ((false ? _GLF_FUZZED(-96963) : _GLF_IDENTITY(_GLF_IDENTITY(1, (1) / ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0)))), (1) | (1)))))))) ^ 0)) | 0)) % subgroup_size)));
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 2);
 do
  {
   if((subgroup_local_id % 2) == 0)
    {
     atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
    }
   else
    {
     atomicStore(buf[next_virtual_gid], uint(1), 4, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, int(ivec2(64, 0)))) - 0), _GLF_IDENTITY(4, 0 ^ (4)));
    }
  }
 while(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! _GLF_IDENTITY((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))), _GLF_IDENTITY(bool(bool((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(bool(bool((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))))), true && _GLF_IDENTITY((bool(bool((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))))), ! (! ((bool(bool((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))))))))), ! (! (_GLF_IDENTITY(bool(bool((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false), bool(bvec4(false, true, false, _GLF_IDENTITY(true, (true) || false)))))))), true && (bool(bool((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, false || (true)), false, true)))), _GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, false || _GLF_IDENTITY((true), ((true)) || false)), false, true)))), false)), ! (_GLF_IDENTITY(! (bool(bvec2(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, false || (true)), false, true)))), false))), bool(bvec4(! (bool(bvec2(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, false || (true)), false, true)))), false))), false, true, true))))))))))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(bool(bool((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(false, true, false, true))))))), true && _GLF_IDENTITY((bool(bool((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))))), ((bool(bool((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! ((_GLF_IDENTITY(bool(bool((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))))), true && (bool(_GLF_IDENTITY(bool((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))), bool(bvec3(bool((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(false, true, false, true)), ! (! (bool(bvec4(false, true, false, true)))))), (! (_GLF_IDENTITY(bool(bvec4(false, true, false, true)), ! (! (bool(bvec4(false, true, false, true))))))) || false))))))), true, true))), true && (_GLF_IDENTITY(bool((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))), bool(bvec3(bool((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(false, true, false, true)), ! (! (bool(bvec4(false, true, false, true)))))), (! (_GLF_IDENTITY(bool(bvec4(false, true, false, true)), ! (! (bool(bvec4(false, true, false, true))))))) || false)), ! (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(false, true, false, true)), ! (! (bool(bvec4(false, true, false, true)))))), (! (_GLF_IDENTITY(bool(bvec4(false, true, false, true)), ! (! (bool(bvec4(false, _GLF_IDENTITY(true, ! (! (true))), false, true))))))) || false)))))))))), true, true)))))))))))))))))) && true, true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(bool(bool((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), true, false, true))))))), true && _GLF_IDENTITY((bool(bool((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))))), ! (_GLF_IDENTITY(! ((bool(bool((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((bool(bool((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))))))), (! ((bool(bool((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))))))))))) && true)), ! (! (! (_GLF_IDENTITY(! ((bool(bool((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))))))), (! ((bool(bool((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))))))) && true)))))))))), ! (! (_GLF_IDENTITY(bool(bool((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_IDENTITY(true, (true) || false)))))))), true && (bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && true))), false, true)))), _GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, false || (true)), false, true)))), false)), ! (_GLF_IDENTITY(! (bool(bvec2(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, false || (true)), false, true)))), false))), bool(bvec4(! (bool(bvec2(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, false || (true)), false, true)))), false))), false, true, true)))))), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, false || (true)), false, true)))), _GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, false || _GLF_IDENTITY(_GLF_IDENTITY((true), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((true), bool(bvec3((true), false, true)))), ! (! (bool(_GLF_IDENTITY((true), bool(bvec3((true), false, true))))))))), ! (! (_GLF_IDENTITY((true), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((true), bool(bvec3((true), false, true)))), ! (! (bool(_GLF_IDENTITY((true), bool(bvec3((true), false, true))))))))))))), false, true)))), false)), ! (_GLF_IDENTITY(! (bool(bvec2(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, false || (true)), false, true)))), false))), bool(bvec4(_GLF_IDENTITY(! (bool(bvec2(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, false || (true)), false, true)))), false))), (! (bool(bvec2(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, false || (true)), false, true)))), false)))) && true), false, true, true))))))) && true)))))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(bool(bool((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(false, true, false, true))))))), true && (bool(bool((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))))))), ! (! _GLF_IDENTITY(((_GLF_IDENTITY(bool(bool((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))))), true && (bool(_GLF_IDENTITY(bool((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), true, false, true)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))), ! (! ((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))))))), bool(bvec3(bool((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(false, true, false, true)), ! (! (bool(bvec4(false, true, false, true)))))), (! (_GLF_IDENTITY(bool(bvec4(false, true, false, true)), ! _GLF_IDENTITY((! (bool(bvec4(false, true, false, true)))), ! (! ((! (bool(bvec4(false, true, false, true)))))))))) || false))))))), true, true))), true && (_GLF_IDENTITY(bool((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec4(false, true, false, true)))))), bool(bvec3(bool((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(false, true, false, true)), ! (! (bool(bvec4(false, true, false, true)))))), (! (_GLF_IDENTITY(bool(bvec4(false, true, false, true)), ! (! (bool(bvec4(false, true, false, true))))))) || false)), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(false, true, false, true)), ! (! (bool(bvec4(false, true, false, true)))))), (! (_GLF_IDENTITY(bool(bvec4(false, true, false, true)), ! (! (bool(bvec4(false, true, false, true))))))) || false))) && true)))))), true, true))))))))))))), (((_GLF_IDENTITY(bool(bool((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))))), true && (bool(_GLF_IDENTITY(bool((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), true, false, true)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))), ! (! ((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))))))), bool(bvec3(bool((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(false, true, false, true)), ! (! (bool(bvec4(false, true, false, true)))))), (! (_GLF_IDENTITY(bool(bvec4(false, true, false, true)), ! _GLF_IDENTITY((! (bool(bvec4(false, true, false, true)))), ! (! ((! (bool(bvec4(false, true, false, true)))))))))) || false))))))), true, true))), true && (_GLF_IDENTITY(bool((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec4(false, true, false, true)))))), bool(bvec3(bool((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(false, true, false, true)), ! (! (bool(bvec4(false, true, false, true)))))), (! (_GLF_IDENTITY(bool(bvec4(false, true, false, true)), ! (! (bool(bvec4(false, true, false, true))))))) || false)), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(false, true, false, true)), ! (! (bool(bvec4(false, true, false, true)))))), (! (_GLF_IDENTITY(bool(bvec4(false, true, false, true)), ! (! (bool(bvec4(false, true, false, true))))))) || false))) && true)))))), true, true)))))))))))))) && true)))))) && true)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, true)))))), ! (! _GLF_IDENTITY((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))), _GLF_IDENTITY(bool(bool((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))))), _GLF_IDENTITY((_GLF_IDENTITY(bool(bool((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))))), true && (bool(bool((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))))))) && true, ((_GLF_IDENTITY(bool(bool((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))))), true && (bool(bool((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))), ! (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))))))))))) && true) || false))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(true, bool(bvec3(true, false, false))), true), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(true, bool(bvec3(true, false, false))), _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, false)), false || (bool(bvec3(true, false, false))))), true)))), bvec3(bvec3(bvec3(false, _GLF_IDENTITY(true, bool(bvec3(true, false, false))), true)))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))))), _GLF_IDENTITY(true, bool(bvec3(true, false, false))), _GLF_IDENTITY(true, false || (true))), bvec3(bvec3(bvec3(false, _GLF_IDENTITY(true, bool(bvec3(true, false, false))), true))))))))))))), bool(bvec4(! (false), true, false, true)))))), ! (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, false)), ! (_GLF_IDENTITY(! (bool(bvec4(false, false, false, false))), bool(bvec3(! (bool(bvec4(false, false, false, false))), true, false)))))), bool(bvec4(false, true, false, true))))), bool(bool((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))))), _GLF_IDENTITY(bool(bool((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))))), (_GLF_IDENTITY(bool(bool((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))))), true && (bool(_GLF_IDENTITY(bool((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))), ! (! (bool((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))))))), bool(bvec4(! (_GLF_IDENTITY(bool((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))), ! (! (bool((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))))))), true, false, false))))))))) && true)))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, _GLF_IDENTITY(false, true && (false)), true)))), ! (! (! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, true)))))))))))), ! (! _GLF_IDENTITY((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))), _GLF_IDENTITY(bool(bool((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))))))))))))), (_GLF_IDENTITY(bool(bool((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))))), _GLF_IDENTITY(true && (bool(bool((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))))), bool(bvec3(true && (bool(bool((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))))), true, true))))) && true))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! _GLF_IDENTITY((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))), _GLF_IDENTITY(bool(bool((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(bool(bool((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))))), true && (bool(bool((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))), ! (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))))))))), ! (! (_GLF_IDENTITY(bool(bool((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))))), true && (bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, false || (true)), false, true)))), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, false || (true)), false, true)))), (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, false || (true)), false, true))))) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, false || (true)), false, true)))), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, false || (true)), false, true)))), (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, false || (true)), false, true))))) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, false || (true)), false, true)))), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, false || (true)), false, true)))), (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, false || (true)), false, true))))) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, false || (true)), false, true)))), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, false || (true)), false, true)))), (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, false || (true)), false, true))))) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, false || (true)), false, true)))), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, false || (true)), false, true)))), (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, false || (true)), false, true))))) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, false || (true)), false, true)))), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, false || (true)), false, true)))), (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, false || (true)), false, true))))) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, false || (true)), false, true)))), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, false || (true)), false, true)))), (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, false || (true)), false, true))))) && true)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))))))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))), bool(_GLF_IDENTITY(bvec2((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))), false), bvec2(bvec3(bvec2((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))), false), false))))))), true && (bool(bool((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))), bool(bvec4(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))), _GLF_IDENTITY(true, (true) && true) && (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))), true, false, true))))))))), ! (! ((_GLF_IDENTITY(bool(bool((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))))), true && (bool(_GLF_IDENTITY(bool((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(bool((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))), bool(bvec3(bool((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(false, true, false, true)), ! (! (bool(bvec4(false, true, false, true)))))), (! (_GLF_IDENTITY(bool(bvec4(false, true, false, true)), ! (! (bool(bvec4(false, true, false, true))))))) || false))))))), true, true))))), ! (! (! (! (_GLF_IDENTITY(bool((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))), bool(bvec3(bool((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(false, true, false, true)), ! (! (bool(bvec4(false, true, false, true)))))), (! (_GLF_IDENTITY(bool(bvec4(false, true, false, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)))), bool(bvec4(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, (true) || false), true, true))))), ! (_GLF_IDENTITY(! (bool(bvec4(false, true, false, true))), (! (bool(bvec4(false, true, false, true)))) && true))))) || false))))))), true, true))))))))))))))))), (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))), bool(_GLF_IDENTITY(bvec2((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))), false), bvec2(bvec3(bvec2((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))), false), false))))))), true && (bool(bool((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))), bool(bvec4(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))), _GLF_IDENTITY(true, (true) && true) && (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))), true, false, true))))))))), ! (! ((_GLF_IDENTITY(bool(bool((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))))), true && (bool(_GLF_IDENTITY(bool((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(bool((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))), bool(bvec3(bool((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(false, true, false, true)), ! (! (bool(bvec4(false, true, false, true)))))), (! (_GLF_IDENTITY(bool(bvec4(false, true, false, true)), ! (! (bool(bvec4(false, true, false, true))))))) || false))))))), true, true))))), ! (! (! (! (_GLF_IDENTITY(bool((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))), bool(bvec3(bool((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(false, true, false, true)), ! (! (bool(bvec4(false, true, false, true)))))), (! (_GLF_IDENTITY(bool(bvec4(false, true, false, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)))), bool(bvec4(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, (true) || false), true, true))))), ! (_GLF_IDENTITY(! (bool(bvec4(false, true, false, true))), (! (bool(bvec4(false, true, false, true)))) && true))))) || false))))))), true, true)))))))))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))), bool(_GLF_IDENTITY(bvec2((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))), false), bvec2(bvec3(bvec2((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))), false), false))))))), true && (bool(bool((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))), bool(bvec4(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))), _GLF_IDENTITY(true, (true) && true) && (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))), true, false, true))))))))), ! (! ((_GLF_IDENTITY(bool(bool((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))))), true && (bool(_GLF_IDENTITY(bool((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, (true) && true), false, true)))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(bool((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))), bool(bvec3(bool((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(false, true, false, true)), ! (! (bool(bvec4(false, true, false, true)))))), (! (_GLF_IDENTITY(bool(bvec4(false, true, false, true)), ! (! (bool(bvec4(false, true, false, true))))))) || false))))))), true, true))))), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(bool((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))), bool(bvec3(bool((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(false, true, false, true)), ! (! (bool(bvec4(false, true, false, true)))))), (! (_GLF_IDENTITY(bool(bvec4(false, true, false, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)))), bool(bvec4(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, (true) || false), true, true))))), ! (_GLF_IDENTITY(! (bool(bvec4(false, true, false, true))), (! (bool(bvec4(false, true, false, true)))) && true))))) || false))))))), true, true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (! (! (_GLF_IDENTITY(bool((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))), bool(bvec3(bool((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(false, true, false, true)), ! (! (bool(bvec4(false, true, false, true)))))), (! (_GLF_IDENTITY(bool(bvec4(false, true, false, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)) && (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)))), bool(bvec4(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, (true) || false), true, true))))), ! (_GLF_IDENTITY(! (bool(bvec4(false, _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, true))), (! (bool(bvec4(false, true, false, true)))) && true))))) || false))))))), true, true))))))))))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true))) && true)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) || false))), bool(bvec4(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) || false))), true, false, true)))))), bool(bvec4(! (false), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true)))), false, true)))))), _GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))), _GLF_IDENTITY(bool(bool((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))))), (_GLF_IDENTITY(bool(bool((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, true)), bool(bvec2(bool(bvec3(true, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false))), true)), true))))))))))), true && (bool(bool((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))))))) && true))), false || (! (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))), bool(bvec4(_GLF_IDENTITY((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))), ((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))) || false), false, false, false)))), (! ((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))))) && true))), _GLF_IDENTITY(bool(bool((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))))), (_GLF_IDENTITY(bool(bool((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), false || (bool(bvec4(false, true, false, true))))))))), true && (bool(bool((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bvec4(false, true, _GLF_IDENTITY(false, false || (false)), true)))))))))) && true)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, true)))))), ! (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))), bool(bvec3((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))), true, true))), _GLF_IDENTITY(bool(bool((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))))), (_GLF_IDENTITY(bool(bool((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))))), true && (bool(bool((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))))))) && true)))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, true))))), false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), bool(bvec4(! (false), true, false, true)))))))), _GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))), _GLF_IDENTITY(bool(bool((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))))), true && (bool(bool((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) || false)), ! (! (! (_GLF_IDENTITY(true, (true) || false))))))), _GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))), true))))))))), (_GLF_IDENTITY(bool(bool((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec4(false, true, false, true))))))), true && (bool(bool((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), true, false, true)))))))))) && true)) && true))), _GLF_IDENTITY((! (! _GLF_IDENTITY((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))), _GLF_IDENTITY(bool(bool((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))))), (_GLF_IDENTITY(bool(bool((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))))), true && (bool(bool((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))))))) && true)))) || false, (_GLF_IDENTITY((! (! _GLF_IDENTITY((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))), _GLF_IDENTITY(bool(bool((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), _GLF_IDENTITY(bool(bvec4(bool(bvec4(false, true, false, true)), false, true, true)), (bool(bvec4(bool(bvec4(false, true, false, true)), false, true, true))) && true))))))), (_GLF_IDENTITY(bool(bool((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))))), true && (bool(bool((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))))))) && true)))) || false, bool(bvec4((! (! _GLF_IDENTITY((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), ! (! (_GLF_IDENTITY(bool(bvec4(false, true, false, true)), ! (! (bool(bvec4(false, true, false, true))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))))), ! (_GLF_IDENTITY(! (bool(bool((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))))), false || (! (bool(bool((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))))))))), (_GLF_IDENTITY(bool(bool((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))))), true && (bool(bool((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))))))) && true)))) || false, false, true, false)))) || false)))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! _GLF_IDENTITY((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, true))))), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))), bool(bvec4(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))), (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(bool(bool((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))))), true && (bool(bool((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))))))), ! (! (_GLF_IDENTITY(bool(bool((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), true, false, true))))))), true && (bool(_GLF_IDENTITY(bool((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, false || (true)), false, true)))))), true && (bool((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, false || (true)), false, true))))))))))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(bool(bool((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), true, true, true)), false || (bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), true, true, true))))))), true))))))), true && (bool(_GLF_IDENTITY(bool((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))), (bool((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))))) || false))))), ! _GLF_IDENTITY((! ((_GLF_IDENTITY(bool(bool((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))))), true && (bool(_GLF_IDENTITY(bool((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))), ! (! (_GLF_IDENTITY(bool((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (! (_GLF_IDENTITY((false) && true, true && ((false) && true)))))), true)))))), bool(bvec3(bool((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(false, true, false, true)), ! (! (bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, true)))))), (! (_GLF_IDENTITY(bool(bvec4(false, true, false, true)), ! (! _GLF_IDENTITY((bool(bvec4(false, true, false, true))), (_GLF_IDENTITY((bool(bvec4(false, true, false, true))), bool(_GLF_IDENTITY(bool((bool(bvec4(false, true, false, true)))), bool(bvec2(bool((bool(bvec4(false, true, false, true)))), false)))))) || false))))) || false))))))), true, true)))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((! ((_GLF_IDENTITY(bool(bool((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))))), true && (bool(_GLF_IDENTITY(bool((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))), ! (! (_GLF_IDENTITY(bool((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (! (_GLF_IDENTITY((false) && true, true && ((false) && true)))))), true)))))), bool(bvec3(bool((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(false, true, false, true)), ! (! (bool(bvec4(false, true, false, true)))))), (! (_GLF_IDENTITY(bool(bvec4(false, true, false, true)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(false, true, false, true)), ! (! (bool(bvec4(false, true, false, true)))))), (_GLF_IDENTITY((bool(bvec4(false, true, false, true))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((bool(bvec4(false, true, false, true))), bool(bvec3((bool(bvec4(false, true, false, true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec2(bool((bool(bvec4(false, true, false, true)))), false)))))) || false))))) || false))))))), true, true)))))))))))))))))) && true)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, true)))))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))), _GLF_IDENTITY(bool(bool((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))))), (_GLF_IDENTITY(bool(bool((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))))), true && (bool(bool((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))))))) && true)), ! (! (! _GLF_IDENTITY((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(false, (false) || false), true))))), _GLF_IDENTITY(bool(bool((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))))), (_GLF_IDENTITY(bool(bool((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))) || false))))), true && (bool(bool((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))))))) && true))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, true)))))), ! (! _GLF_IDENTITY((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))), _GLF_IDENTITY(bool(bool((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(false, (false) || false), true))))))), (_GLF_IDENTITY(bool(bool((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))))), bool(bool(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))))))))))))), true && _GLF_IDENTITY((bool(bool((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true))), true))))))))))), ((bool(bool((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true))), true)))))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(false, (false) || false)), true, false, true)), (bool(bvec4(! (_GLF_IDENTITY(false, (false) || false)), true, false, true))) || false))))), ! (! _GLF_IDENTITY((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))), _GLF_IDENTITY(bool(bool((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, true && (false)), true), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(false, true && (false)), true))), bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_IDENTITY(false, true && (false)), true))), false, true)))))), _GLF_IDENTITY(true, (true) && true)))))))), (_GLF_IDENTITY(bool(bool((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))))), true && (bool(bool((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))))))) && true))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))));
 subgroupBarrier();
 atomicStore(checker[virtual_gid], read, 4, 64, 4);
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
