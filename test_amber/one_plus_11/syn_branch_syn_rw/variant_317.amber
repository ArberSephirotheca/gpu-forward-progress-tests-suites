#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_2 {
 bvec4 _f0;
 uvec3 _f1;
} ;

struct _GLF_struct_1 {
 bvec3 _f0;
 mat2x4 _f1;
 mat2x4 _f2;
} ;

struct _GLF_struct_0 {
 mat2 _f0;
 int _f1;
 ivec3 _f2;
 uvec4 _f3;
} ;

struct _GLF_struct_3 {
 vec2 _f0;
 _GLF_struct_0 _f1;
 _GLF_struct_1 _f2;
 _GLF_struct_2 _f3;
 uint workgroup_id;
} ;

struct _GLF_struct_4 {
 bvec2 _f0;
 _GLF_struct_3 _f1;
 uvec4 _f2;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uvec2 GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uvec3 GLF_merged3_0_1_11_1_1_13_2_1_14subgroup_idsubgroup_sizeworkgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 GLF_merged3_0_1_11_1_1_13_2_1_14subgroup_idsubgroup_sizeworkgroup_size.x = subgroup_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && true))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0)), mat2(1.0) * (vec2(mat3(injectionSwitch, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0))))).y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0))).y), ! (! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[_GLF_IDENTITY(0, (0) ^ 0)]), float(_GLF_FUZZED(6.0)), bool(false))), _GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])))), injectionSwitch[1])), length(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0))).y))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (! ((injectionSwitch.x > injectionSwitch.y)))), ((! (! ((injectionSwitch.x > injectionSwitch.y))))) && true)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-5696.9815) : injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))) > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           return;
          }
         return;
        }
       barrier();
      }
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(79.78), _GLF_FUZZED(-9626.0351)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 GLF_merged3_0_1_11_1_1_13_2_1_14subgroup_idsubgroup_sizeworkgroup_size.y = _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) << _GLF_IDENTITY(0u, (0u) - 0u));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), false || (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false || (false), (_GLF_IDENTITY(false, ! (! (false))) || (false)) || false)))))))))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), false, false, false)))), _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))), ((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(atan(vec2(4.8, -4346.7650))) : injectionSwitch)), injectionSwitch)).x > injectionSwitch.y)) || false))), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))), true))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    barrier();
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup.y = _GLF_IDENTITY(num_workgroup, clamp(num_workgroup, num_workgroup, num_workgroup));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, false))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(max(vec2(8705.0616, 8534.8138), vec2(-82.17, 5622.2857))) : injectionSwitch)).y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false, true)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3(injectionSwitch.x, 1.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0)), 1.0 * (_GLF_IDENTITY(float(mat3(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0)), min(float(mat3(injectionSwitch.x, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(210.285)), bool(false))), 0.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat3(8.2, 74.22, -62.75, -4.3, 97.81, -96.87, -9.2, -5.3, -2.9)) : mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0))))), 1.0)), float(mat3(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0))))))), (_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3(injectionSwitch.x, 1.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0)), 1.0 * (_GLF_IDENTITY(float(mat3(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0)), min(float(mat3(injectionSwitch.x, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(210.285)), bool(false))), 0.0, _GLF_IDENTITY(1.0, float(mat4x3(1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), _GLF_IDENTITY(0.0, 0.0 + (0.0)), 1.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, exp(0.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, sin(0.0), 0.0))), 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0)), float(mat3(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0))))))), min(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3(injectionSwitch.x, 1.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0)), 1.0 * (_GLF_IDENTITY(float(mat3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) - 0.0), injectionSwitch[1])).x, 1.0, 1.0, 0.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0)), min(float(mat3(injectionSwitch.x, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(210.285)), bool(false))), 0.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0)), float(mat3(injectionSwitch.x, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(981.565)), float(1.0), bool(true))), 0.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0))))))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(float(mat3(injectionSwitch.x, 1.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0)), 1.0 * (_GLF_IDENTITY(float(mat3(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0)), min(float(mat3(injectionSwitch.x, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(210.285)), bool(false))), 0.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0)), float(mat3(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0)))))), (_GLF_IDENTITY(float(mat3(injectionSwitch.x, 1.0, 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0)), 0.0)), 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0)), 1.0 * (_GLF_IDENTITY(float(mat3(injectionSwitch.x, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(cos(-6.7)) : 1.0)), 0.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0)), min(float(mat3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(210.285)), bool(false))), 0.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0)), float(mat3(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0))))))) - length(0.0))))) : _GLF_FUZZED(6.1), max(true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3(injectionSwitch.x, 1.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0)), 1.0 * (_GLF_IDENTITY(float(mat3(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0)), min(float(mat3(injectionSwitch.x, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(210.285)), bool(false))), 0.0, _GLF_IDENTITY(1.0, float(mat4x3(1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), _GLF_IDENTITY(0.0, 0.0 + (0.0)), 1.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, exp(0.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, sin(0.0), 0.0))), 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0)), float(mat3(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0))))))), min(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3(injectionSwitch.x, 1.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0)), 1.0 * (_GLF_IDENTITY(float(mat3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) - 0.0), injectionSwitch[1])).x, 1.0, 1.0, 0.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0)), min(float(mat3(injectionSwitch.x, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(210.285)), bool(false))), 0.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0)), float(mat3(injectionSwitch.x, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(981.565)), float(1.0), bool(true))), 0.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0))))))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(float(mat3(injectionSwitch.x, 1.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0)), 1.0 * (_GLF_IDENTITY(float(mat3(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0)), min(float(mat3(injectionSwitch.x, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(210.285)), bool(false))), 0.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0)), float(mat3(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0)))))), (_GLF_IDENTITY(float(mat3(injectionSwitch.x, 1.0, 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0)), 0.0)), 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0)), 1.0 * (_GLF_IDENTITY(float(mat3(injectionSwitch.x, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(cos(-6.7)) : 1.0)), 0.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0)), min(float(mat3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(210.285)), bool(false))), 0.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0)), float(mat3(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0))))))) - length(0.0))))) : _GLF_FUZZED(6.1), true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3(injectionSwitch.x, 1.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0)), 1.0 * (_GLF_IDENTITY(float(mat3(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0)), min(float(mat3(injectionSwitch.x, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(210.285)), bool(false))), 0.0, _GLF_IDENTITY(1.0, float(mat4x3(1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), _GLF_IDENTITY(0.0, 0.0 + (0.0)), 1.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, exp(0.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, sin(0.0), 0.0))), 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0)), float(mat3(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0))))))), min(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3(injectionSwitch.x, 1.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0)), 1.0 * (_GLF_IDENTITY(float(mat3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) - 0.0), injectionSwitch[1])).x, 1.0, 1.0, 0.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0)), min(float(mat3(injectionSwitch.x, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(210.285)), bool(false))), 0.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0)), float(mat3(injectionSwitch.x, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(981.565)), float(1.0), bool(true))), 0.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0))))))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(float(mat3(injectionSwitch.x, 1.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0)), 1.0 * (_GLF_IDENTITY(float(mat3(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0)), min(float(mat3(injectionSwitch.x, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(210.285)), bool(false))), 0.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0)), float(mat3(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0)))))), (_GLF_IDENTITY(float(mat3(injectionSwitch.x, 1.0, 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0)), 0.0)), 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0)), 1.0 * (_GLF_IDENTITY(float(mat3(injectionSwitch.x, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(cos(-6.7)) : 1.0)), 0.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0)), min(float(mat3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(210.285)), bool(false))), 0.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0)), float(mat3(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0))))))) - length(0.0))))) : _GLF_FUZZED(6.1))))) > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(4439.4668, _GLF_IDENTITY(min(_GLF_IDENTITY(4439.4668, (4439.4668) * 1.0), 4439.4668), float(mat2x3(min(_GLF_IDENTITY(_GLF_IDENTITY(4439.4668, (4439.4668) * 1.0), max(_GLF_IDENTITY(_GLF_IDENTITY(4439.4668, (4439.4668) * 1.0), max(_GLF_IDENTITY(4439.4668, (4439.4668) * 1.0), _GLF_IDENTITY(4439.4668, (4439.4668) * 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(4439.4668, (4439.4668) * 1.0), (_GLF_IDENTITY(4439.4668, (4439.4668) * 1.0)) / 1.0))), 4439.4668), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(8897.8191))), 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0))), 0.0, 1.0, determinant(mat4(1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0)))))), bool(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(false, ! (! (false))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3(injectionSwitch.x, 1.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0)), 1.0 * (_GLF_IDENTITY(float(mat3(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0)), min(float(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(210.285)), bool(false))), 0.0, 1.0, 0.0, _GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), 1.0 * (length(vec3(0.0, 0.0, 0.0)))), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-3.0)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0), (false ? _GLF_FUZZED(mat3(8.2, 74.22, -62.75, -4.3, 97.81, -96.87, -9.2, -5.3, -2.9)) : mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0))))), 1.0), (mat3(injectionSwitch.x, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(210.285)), bool(false))), 0.0, 1.0, 0.0, _GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), 1.0 * (length(vec3(0.0, 0.0, 0.0)))), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-3.0)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0), (false ? _GLF_FUZZED(mat3(8.2, 74.22, -62.75, -4.3, 97.81, -96.87, -9.2, -5.3, -2.9)) : mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0))))), 1.0)) + mat3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), float(mat3(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0))))))), (_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0), (mat3(injectionSwitch.x, 1.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0)) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 1.0 * (_GLF_IDENTITY(float(mat3(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x, 1.0, 1.0, 0.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0)), min(float(mat3(injectionSwitch.x, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_IDENTITY(_GLF_FUZZED(210.285), clamp(_GLF_FUZZED(210.285), _GLF_IDENTITY(_GLF_FUZZED(210.285), float(float(_GLF_FUZZED(210.285)))), _GLF_FUZZED(210.285)))), bool(false))), 0.0, _GLF_IDENTITY(1.0, float(mat4x3(1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), _GLF_IDENTITY(0.0, 0.0 + (0.0)), 1.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, exp(0.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_IDENTITY(0.0, cos(0.0) * (0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, sin(0.0), 0.0))), 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0)), float(mat3(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0))))))), min(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3(injectionSwitch.x, 1.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0)), 1.0 * (_GLF_IDENTITY(float(mat3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) - 0.0), injectionSwitch[1])).x, 1.0, 1.0, 0.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0)), min(float(mat3(injectionSwitch.x, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(210.285)), bool(false))), 0.0, 1.0, 0.0, length(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), max(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), vec3(mat3x2(vec3(0.0, 0.0, 0.0), 0.0, 0.0, 0.0))), _GLF_IDENTITY(vec3(0.0, 0.0, 0.0), vec3(mat2(vec3(0.0, 0.0, 0.0), 1.0)))))), _GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0)), float(mat3(injectionSwitch.x, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(981.565)), float(1.0), bool(true))), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, _GLF_IDENTITY(1.0, sqrt(1.0) * (_GLF_IDENTITY(1.0, min(1.0, 1.0))))))))))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(float(mat3(injectionSwitch.x, 1.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, _GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), min(length(vec3(0.0, 0.0, 0.0)), length(vec3(0.0, 0.0, 0.0)))), 1.0, 1.0)), 1.0 * (_GLF_IDENTITY(float(mat3(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0)), min(float(mat3(injectionSwitch.x, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(210.285)), bool(false))), 0.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0)), float(mat3(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0)))))), (_GLF_IDENTITY(float(mat3(injectionSwitch.x, 1.0, 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0)), 0.0)), 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0)), 1.0 * (_GLF_IDENTITY(float(mat3(injectionSwitch.x, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(cos(-6.7)) : 1.0)), 0.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0)), _GLF_IDENTITY(min(float(mat3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(210.285)), bool(false))), 0.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0)), float(mat3(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0))), clamp(min(float(mat3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(210.285)), bool(false))), 0.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0)), float(mat3(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0))), min(float(mat3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(210.285)), bool(false))), 0.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0)), float(mat3(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0))), min(float(mat3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(210.285)), bool(false))), 0.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0)), float(mat3(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0))))))))) - length(0.0))))) : _GLF_FUZZED(6.1), max(true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3(injectionSwitch.x, 1.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-6.5)), float(_GLF_IDENTITY(0.0, (0.0) * 1.0)), bool(true))))), 1.0, 1.0)), 1.0 * (_GLF_IDENTITY(float(mat3(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0)), min(float(mat3(injectionSwitch.x, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(210.285)), bool(false))), 0.0, _GLF_IDENTITY(1.0, float(mat4x3(1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), _GLF_IDENTITY(0.0, 0.0 + (0.0)), 1.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, exp(0.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), vec2(_GLF_IDENTITY(mat4x2(vec2(1.0, 0.0), 0.0, 1.0, abs(0.0), sqrt(0.0), sqrt(1.0), 1.0), mat4x2(mat4x2(mat4x2(vec2(1.0, 0.0), 0.0, 1.0, abs(0.0), sqrt(0.0), sqrt(1.0), 1.0))))))), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, sin(0.0), 0.0))), 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0)), float(mat3(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0))))))), _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3(injectionSwitch.x, 1.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0)), 1.0 * (_GLF_IDENTITY(float(mat3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) - 0.0), injectionSwitch[1])).x, 1.0, 1.0, 0.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0)), min(float(mat3(injectionSwitch.x, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(210.285)), bool(false))), 0.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0)), float(mat3(injectionSwitch.x, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(981.565)), float(1.0), bool(true))), 0.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0))))))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(float(mat3(injectionSwitch.x, 1.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0)), 1.0 * (_GLF_IDENTITY(float(mat3(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0)), min(float(mat3(injectionSwitch.x, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(210.285)), bool(false))), 0.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0)), float(mat3(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0)))))), (_GLF_IDENTITY(float(mat3(injectionSwitch.x, 1.0, 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0)), 0.0)), 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0)), 1.0 * (_GLF_IDENTITY(float(mat3(injectionSwitch.x, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(cos(-6.7)) : 1.0)), 0.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0)), min(float(mat3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(210.285)), bool(false))), 0.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0)), float(mat3(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0))))))) - length(0.0)))), min(_GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3(injectionSwitch.x, 1.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0)), 1.0 * (_GLF_IDENTITY(float(mat3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) - 0.0), injectionSwitch[1])).x, 1.0, 1.0, 0.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0)), min(float(mat3(injectionSwitch.x, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(210.285)), bool(false))), 0.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0)), float(mat3(injectionSwitch.x, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(981.565)), float(1.0), bool(true))), 0.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0))))))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(float(mat3(injectionSwitch.x, 1.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0)), 1.0 * (_GLF_IDENTITY(float(mat3(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0)), min(float(mat3(injectionSwitch.x, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(210.285)), bool(false))), 0.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0)), float(mat3(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0)))))), (_GLF_IDENTITY(float(mat3(injectionSwitch.x, 1.0, 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0)), 0.0)), 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0)), 1.0 * (_GLF_IDENTITY(float(mat3(injectionSwitch.x, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(cos(-6.7)) : 1.0)), 0.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0)), min(float(mat3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(210.285)), bool(false))), 0.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0)), float(mat3(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0))))))) - length(0.0)))), (false ? _GLF_FUZZED(-483.540) : min(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3(injectionSwitch.x, 1.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0)), 1.0 * (_GLF_IDENTITY(float(mat3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) - 0.0), injectionSwitch[1])).x, 1.0, 1.0, 0.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0)), min(float(mat3(injectionSwitch.x, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(210.285)), bool(false))), 0.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0)), float(mat3(injectionSwitch.x, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(981.565)), float(1.0), bool(true))), 0.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0))))))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(float(mat3(injectionSwitch.x, 1.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0)), 1.0 * (_GLF_IDENTITY(float(mat3(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0)), min(float(mat3(injectionSwitch.x, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(210.285)), bool(false))), 0.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0)), float(mat3(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0)))))), (_GLF_IDENTITY(float(mat3(injectionSwitch.x, 1.0, 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0)), 0.0)), 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0)), 1.0 * (_GLF_IDENTITY(float(mat3(injectionSwitch.x, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(cos(-6.7)) : 1.0)), 0.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0)), min(float(mat3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(210.285)), bool(false))), 0.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0)), float(mat3(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0))))))) - length(0.0)))))), min(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3(injectionSwitch.x, 1.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0)), 1.0 * (_GLF_IDENTITY(float(mat3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) - 0.0), injectionSwitch[1])).x, 1.0, 1.0, 0.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0)), min(float(mat3(injectionSwitch.x, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(210.285)), bool(false))), 0.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0)), float(mat3(injectionSwitch.x, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(981.565)), float(1.0), bool(true))), 0.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0))))))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(float(mat3(injectionSwitch.x, 1.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0)), 1.0 * (_GLF_IDENTITY(float(mat3(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0)), min(float(mat3(injectionSwitch.x, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(210.285)), bool(false))), 0.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0)), float(mat3(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0)))))), (_GLF_IDENTITY(float(mat3(injectionSwitch.x, 1.0, 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0)), 0.0)), 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0)), 1.0 * (_GLF_IDENTITY(float(mat3(injectionSwitch.x, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(cos(-6.7)) : 1.0)), 0.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0)), min(float(mat3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(210.285)), bool(false))), 0.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0)), float(mat3(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0))))))) - length(0.0))))))) : _GLF_FUZZED(6.1), true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], 1.0 * ((injectionSwitch)[0])), _GLF_FUZZED(768.915)), vec2(_GLF_FUZZED(-8.7), (injectionSwitch)[1]), bvec2(false, true))).x, _GLF_IDENTITY(float(mat3(injectionSwitch.x, 1.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0)), 1.0 * (_GLF_IDENTITY(float(mat3(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0)), min(float(mat3(injectionSwitch.x, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(210.285)), bool(false))), 0.0, _GLF_IDENTITY(1.0, float(mat4x3(1.0, 1.0, round(length(_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), min(_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), mix(vec2(_GLF_FUZZED(1.3), _GLF_FUZZED(3.8)), vec2((normalize(vec2(1.0, 1.0)))[0], (normalize(vec2(1.0, 1.0)))[1]), bvec2(true, true))), normalize(vec2(1.0, 1.0)))))), _GLF_IDENTITY(0.0, 0.0 + (0.0)), 1.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, exp(0.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, sin(0.0), 0.0))), 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0)), float(mat3(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), 1.0 * (length(vec3(0.0, 0.0, 0.0)))), 1.0, 1.0))))))), min(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3(injectionSwitch.x, 1.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0))), 1.0)), 1.0)), 1.0 * (_GLF_IDENTITY(float(mat3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) - 0.0), injectionSwitch[1])).x, 1.0, 1.0, 0.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0)), min(float(mat3(injectionSwitch.x, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(210.285)), bool(false))), 0.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0)), float(mat3(injectionSwitch.x, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(981.565)), float(1.0), bool(true))), 0.0, 1.0, 0.0, _GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), (length(vec3(0.0, 0.0, 0.0))) / 1.0), 1.0, 1.0))))))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(float(mat3(injectionSwitch.x, 1.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0)), 1.0 * (_GLF_IDENTITY(float(mat3(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0)), min(float(mat3(injectionSwitch.x, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(210.285)), bool(false))), 0.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0)), float(mat3(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0)))))), (_GLF_IDENTITY(float(mat3(injectionSwitch.x, 1.0, 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, 1.0 * (0.0)), _GLF_IDENTITY(0.0, float(vec2(0.0, 0.0))))), 0.0)), 1.0, 0.0, length(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), max(vec3(0.0, 0.0, 0.0), _GLF_IDENTITY(vec3(0.0, 0.0, 0.0), vec3(vec3(vec3(0.0, 0.0, 0.0))))))), 1.0, 1.0)), 1.0 * (_GLF_IDENTITY(float(mat3(injectionSwitch.x, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(cos(-6.7)) : 1.0)), 0.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0)), min(float(mat3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(210.285)), bool(false))), 0.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0)), float(mat3(injectionSwitch.x, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), 0.0, length(vec3(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 1.0, 1.0))))))) - length(0.0))))) : _GLF_FUZZED(6.1))))) > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(4439.4668, _GLF_IDENTITY(min(_GLF_IDENTITY(4439.4668, (4439.4668) * 1.0), 4439.4668), float(mat2x3(min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4439.4668, (4439.4668) * 1.0), min(_GLF_IDENTITY(4439.4668, (4439.4668) * 1.0), _GLF_IDENTITY(4439.4668, (4439.4668) * 1.0))), max(_GLF_IDENTITY(_GLF_IDENTITY(4439.4668, (4439.4668) * 1.0), max(_GLF_IDENTITY(4439.4668, (4439.4668) * 1.0), _GLF_IDENTITY(4439.4668, (4439.4668) * 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4439.4668, (4439.4668) * 1.0), (false ? _GLF_FUZZED(-0.4) : _GLF_IDENTITY(_GLF_IDENTITY(4439.4668, (4439.4668) * 1.0), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(4439.4668, (4439.4668) * 1.0), (false ? _GLF_FUZZED(5856.9789) : _GLF_IDENTITY(4439.4668, (4439.4668) * 1.0)))), float(_GLF_FUZZED(-75.58)), bool(false))))), (_GLF_IDENTITY(4439.4668, (4439.4668) * 1.0)) / 1.0))), 4439.4668), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(8897.8191))), 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0))), 0.0, 1.0, determinant(mat4(1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0)))))), bool(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(false, ! (! (false)))))))))))))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, max(_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ _GLF_IDENTITY((gl_WorkGroupSize.x), 0u ^ ((_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | 0u))))) >> 0u))), _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), max(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_FUZZED(-6.9), ((injectionSwitch) * mat2(1.0))[1]), vec2(((injectionSwitch) * mat2(1.0))[0], _GLF_FUZZED(7474.6166)), bvec2(true, false))), (injectionSwitch) * mat2(1.0)))).x, float(vec3(injectionSwitch.x, cos(0.0), 1.0))) < injectionSwitch.y)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)), mix(vec2((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)))[0], _GLF_FUZZED(9534.4825)), vec2(_GLF_FUZZED(-57.11), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)))[1], ((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)))[1]) / exp(0.0))), bvec2(false, true))), injectionSwitch, injectionSwitch)).x < injectionSwitch.y)), false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), true, true, false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-810.564)), vec2(_GLF_FUZZED(670.654), (injectionSwitch)[1]), bvec2(false, true)))) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 0.0 + (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))))), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0)), float(mat2x3(_GLF_IDENTITY(float(mat3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0)), clamp(float(mat3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0)), float(mat3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0)), float(mat3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0)))), 1.0, 0.0, 0.0, log(1.0), 0.0)))), injectionSwitch.x)))) > injectionSwitch.y))) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 GLF_merged3_0_1_11_1_1_13_2_1_14subgroup_idsubgroup_sizeworkgroup_size.z = workgroup_size;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 _GLF_struct_4 _GLF_struct_replacement_4 = _GLF_struct_4(bvec2(true), _GLF_struct_3(vec2(1.0), _GLF_struct_0(mat2(1.0), 1, ivec3(1), uvec4(1u)), _GLF_struct_1(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), false || (true))), mat2x4(1.0), mat2x4(1.0)), _GLF_struct_2(bvec4(true), uvec3(1u)), _GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) ^ 0u)))))).x), uvec4(1u));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), false, false, true))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)) && true)))))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(301.469)), float(injectionSwitch.y), bool(true)))))))), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))))))), true))))) || false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))) && true))))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(0.2)))))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(mix(determinant(mat4(6074.5884, 4077.9816, 2941.3682, 7.7, -5016.6538, 80.97, 7101.4212, 3.4, -6479.4012, 2565.6325, -672.951, 3.8, 5.2, -498.790, -0.2, -25.65)), -889.342, true)) : injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint workgroup_base = _GLF_IDENTITY(GLF_merged3_0_1_11_1_1_13_2_1_14subgroup_idsubgroup_sizeworkgroup_size.z, (true ? GLF_merged3_0_1_11_1_1_13_2_1_14subgroup_idsubgroup_sizeworkgroup_size.z : _GLF_FUZZED(192935u))) * _GLF_struct_replacement_4._f1.workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
      }
     return;
    }
   barrier();
  }
 uint subgroup_base = GLF_merged3_0_1_11_1_1_13_2_1_14subgroup_idsubgroup_sizeworkgroup_size.x * GLF_merged3_0_1_11_1_1_13_2_1_14subgroup_idsubgroup_sizeworkgroup_size.y;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))) > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(2.0) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), (injectionSwitch.x > injectionSwitch.y) && true)))), ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))) || false)))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-34.52)), float(injectionSwitch.y), bool(true)))))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec4(injectionSwitch.x, 1.0, 0.0, 0.0), max(vec4(injectionSwitch.x, 1.0, 0.0, 0.0), vec4(injectionSwitch.x, 1.0, 0.0, 0.0))))) > injectionSwitch.y))), true, true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false))), bool(_GLF_IDENTITY(bvec3(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec4(injectionSwitch.x, 1.0, 0.0, 0.0), max(vec4(injectionSwitch.x, 1.0, 0.0, 0.0), vec4(injectionSwitch.x, 1.0, 0.0, 0.0))))) > injectionSwitch.y))), true, true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false))), false, true), bvec3(bvec4(bvec3(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec4(injectionSwitch.x, 1.0, 0.0, 0.0), max(vec4(injectionSwitch.x, 1.0, 0.0, 0.0), vec4(injectionSwitch.x, 1.0, 0.0, 0.0))))) > injectionSwitch.y))), true, true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false))), false, true), false))))))) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec4(true, true, false, false))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
      }
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), false || ((false))) && true)))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(6.1) : _GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 0.0, log(1.0), 0.0, 1.0, cos(0.0)))))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       return;
      }
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)), clamp(_GLF_IDENTITY(workgroup_base + subgroup_base, uint(uvec4(_GLF_IDENTITY(workgroup_base + subgroup_base, clamp(workgroup_base + subgroup_base, workgroup_base + subgroup_base, workgroup_base + subgroup_base)), 0u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base, min(workgroup_base, _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))) | 0u))) + subgroup_base)), (workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) - 0u)) | 0u) + subgroup_local_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, (0u | (0u ^ 0u)) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) ^ 0u)))) / 1u) + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u) + 1), ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), uint(uint(~ (1u))))))) | 0u)) + 1)) ^ (0u >> _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, ~ (~ (_GLF_IDENTITY(8u, uint(uvec2(8u, 1u)))))))))) % GLF_merged3_0_1_11_1_1_13_2_1_14subgroup_idsubgroup_sizeworkgroup_size.y);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-431.403))) > injectionSwitch.y))))
    return;
   return;
  }
 GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup.x = next_virtual_gid;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true), true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec2(bvec4(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true), true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, true))))))))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, true, false)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   return;
  }
 uint read = _GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(2, max(2, _GLF_IDENTITY(2, clamp(2, _GLF_IDENTITY(2, clamp(2, 2, 2)), 2)))), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(2, max(2, _GLF_IDENTITY(2, clamp(2, _GLF_IDENTITY(2, clamp(2, 2, 2)), 2)))), 0, 1), ivec3(1, 1, 1) * (ivec3(_GLF_IDENTITY(2, max(2, _GLF_IDENTITY(2, clamp(2, _GLF_IDENTITY(2, clamp(2, 2, 2)), 2)))), 0, 1)))))), (atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, ~ (~ (_GLF_IDENTITY(64, (64) | (_GLF_IDENTITY(64, 0 ^ (64))))))), 2)) | (atomicLoad(_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 0u, 1u))), _GLF_IDENTITY(4, (4) * 1), 64, 2)));
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, false || (false)), false, true))), ! (! (false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(((mat2x3(-765.013, -0.9, 5.5, 4260.7909, 775.302, 6.7) != mat2x3(0.8, -1.8, -9724.2840, 759.420, -586.012, 9.1)) ? (+ 71.38) : -7.3))), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(((mat2x3(-765.013, -0.9, 5.5, 4260.7909, 775.302, _GLF_IDENTITY(6.7, clamp(6.7, 6.7, 6.7))) != mat2x3(0.8, -1.8, -9724.2840, 759.420, -586.012, 9.1)) ? (+ 71.38) : -7.3))), float(injectionSwitch.y), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true))))))) / 1.0)), false || (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(((mat2x3(-765.013, -0.9, 5.5, 4260.7909, 775.302, 6.7) != mat2x3(0.8, -1.8, -9724.2840, 759.420, -586.012, 9.1)) ? (+ 71.38) : -7.3))), float(injectionSwitch.y), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x < injectionSwitch.y)))))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(((mat2x3(-765.013, _GLF_IDENTITY(-0.9, (_GLF_IDENTITY(-0.9, mix(float(_GLF_FUZZED(-71.27)), float(-0.9), bool(true)))) + 0.0), 5.5, 4260.7909, 775.302, 6.7) != mat2x3(0.8, -1.8, -9724.2840, 759.420, -586.012, 9.1)) ? (+ 71.38) : -7.3))), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5.3), _GLF_FUZZED(5779.0751)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bool(bool(injectionSwitch.x > injectionSwitch.y))))), ! (! (bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bool(bool(injectionSwitch.x > injectionSwitch.y)))))))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), true, false))), true, false)))), bool(bvec4(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), true, false))), true, false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY((subgroup_local_id % 2) == 0, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((subgroup_local_id % 2), 0u + ((subgroup_local_id % 2))) == 0, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) && true)), bvec2(bvec3(bvec2((_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) | (subgroup_local_id % 2))) == 0, true), false))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, false, true))))))))))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), true && (bool(bvec2(false, false)))))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(false, true)))), ! (! (! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, bool(bvec2(true, false)))))))))), ! (! _GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), ! (! (! ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))))))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(false, true)))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), (_GLF_IDENTITY(false, bool(bvec2(false, true)))) || false))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(false, true)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(false, true)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(false, true)))), true && (! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(false, true)))), ! (! (! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)), false || (bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))))))))), (bool(_GLF_IDENTITY(bvec2(! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(false, true)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(false, true)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(false, true)))), true && (! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(false, true)))), ! (! (! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)), false || (bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))))))))))) && true)))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, (false) || false)), (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, _GLF_IDENTITY(true, ! (! (true))))), (bool(bvec4(false, false, false, true))) && true)), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup.x], uint(1), 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
            return;
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         return;
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)), true && (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(_GLF_IDENTITY(73.01, (73.01) - 0.0))), float(injectionSwitch.y), bool(true)))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(73.01)), float(injectionSwitch.y), bool(true)))))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(73.01)), float(injectionSwitch.y), bool(true))))))))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(73.01)), float(injectionSwitch.y), bool(true)))))))))), bool(bool(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(73.01)), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), clamp(vec3(injectionSwitch, 1.0), vec3(injectionSwitch, 1.0), vec3(injectionSwitch, 1.0))))).y), mix(float(float(injectionSwitch.y)), float(_GLF_FUZZED(8.3)), bool(false))), bool(true)))))))))), (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(73.01)), float(injectionSwitch.y), bool(true)))))))) && true))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (false) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(false, (false) || false))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   atomicStore(buf[GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup.x], uint(1), 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-6477.4334)), bool(false))))).y, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[_GLF_IDENTITY(1, int(ivec2(1, 1)))]), float(_GLF_FUZZED(-6477.4334)), bool(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))))))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, 0 | (1)), _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(min(60302, -34546))))))]), float(_GLF_FUZZED(-6477.4334)), bool(false))))).y, float(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-6477.4334)), bool(false))))).y, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, 1.0 * (0.0)) : _GLF_FUZZED(37.38))), 0.0, 1.0, _GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), injectionSwitch.y), 1.0, 1.0, 1.0, 1.0))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-6477.4334)), bool(false))))).y)))), (_GLF_IDENTITY((! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-6477.4334)), bool(false))))).y, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[_GLF_IDENTITY(1, int(ivec2(1, 1)))]), float(_GLF_FUZZED(-6477.4334)), bool(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))))))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, 0 | (1)), _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(min(60302, -34546))))))]), float(_GLF_FUZZED(-6477.4334)), bool(false))))).y, float(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-6477.4334)), bool(false))))).y, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, 1.0 * (0.0)) : _GLF_FUZZED(37.38))), 0.0, 1.0, _GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), injectionSwitch.y), 1.0, 1.0, 1.0, 1.0))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-6477.4334)), bool(false))))).y)))), (_GLF_IDENTITY((! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-6477.4334)), bool(false))))).y, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[_GLF_IDENTITY(1, int(ivec2(1, 1)))]), float(_GLF_FUZZED(-6477.4334)), bool(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))))))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, 0 | (1)), _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(min(60302, -34546))))))]), float(_GLF_FUZZED(-6477.4334)), bool(false))))).y, float(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-6477.4334)), bool(false))))).y, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, 1.0 * (0.0)) : _GLF_FUZZED(37.38))), 0.0, 1.0, _GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), injectionSwitch.y), 1.0, 1.0, 1.0, 1.0))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-6477.4334)), bool(false))))).y)))), ! (! ((! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-6477.4334)), bool(false))))).y, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[_GLF_IDENTITY(1, int(ivec2(1, 1)))]), float(_GLF_FUZZED(-6477.4334)), bool(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))))))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, 0 | (1)), _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(min(60302, -34546))))))]), float(_GLF_FUZZED(-6477.4334)), bool(false))))).y, float(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-6477.4334)), bool(false))))).y, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, 1.0 * (0.0)) : _GLF_FUZZED(37.38))), 0.0, 1.0, _GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), injectionSwitch.y), 1.0, 1.0, 1.0, 1.0))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-6477.4334)), bool(false))))).y)))))))) && true)) || false))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, false))), bvec3(bvec3(bvec3(bvec3(bvec3(false, true, false)))))))))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
         return;
        }
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)), bool(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)), bool(bvec4(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY((_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! ((_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)), true, true, false))), false, false)))))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) / 1)))], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])))).y, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])), clamp(_GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])), injectionSwitch[1], injectionSwitch[1])))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])))).y, (true ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])))).y : _GLF_FUZZED(9873.7719))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])))).y, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])), clamp(_GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])))))).y) - _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(-50.41)), bool(false))))))))))
  return;
 subgroupBarrier();
 atomicStore(checker[virtual_gid], read, _GLF_IDENTITY(4, (false ? _GLF_FUZZED(-49536) : _GLF_IDENTITY(4, _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-53181))) ^ (4)))), 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(94.51) : 1.0)), 1.0)), 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0)))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(94.51) : 1.0)), 1.0)), 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0)))))), min(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(94.51) : 1.0)), 1.0)), 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0)))))), _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(94.51) : 1.0)), 1.0)), 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0))))))))) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
