#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), min(int(7), int(7)))))); _injected_loop_counter ++)
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           do
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          barrier();
        }
      }
    }
  }
 uint subgroup_id = gl_SubgroupID;
 do
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 | 0)); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_IF_FALSE(false), true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))))), (bool(bvec3(_GLF_WRAPPED_IF_FALSE(false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)))
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
               for(int _injected_loop_counter = _GLF_IDENTITY(0, ~ (~ (0))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < (0 ^ 1), (_injected_loop_counter < (0 ^ _GLF_IDENTITY(1, 0 | (1)))) && true)); _injected_loop_counter ++)
                {
                 do
                  {
                   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                    {
                     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                      }
                     else
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        {
                         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(3), int(3)))); _injected_loop_counter --)
                          {
                           barrier();
                          }
                        }
                      }
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                       barrier();
                      }
                    }
                   else
                    {
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
               for(int _injected_loop_counter = (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(4), int(4))), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(4), int(4))), (_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) + 0), int(4)), 0 | (_GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), _GLF_IDENTITY(min(int(4), _GLF_IDENTITY(int(4), (int(4)) << 0)), (min(int(4), _GLF_IDENTITY(int(4), (int(4)) << 0))) << 0)))))), ~ (~ (_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), 0 | (_GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), min(int(_GLF_IDENTITY(4, (4) << 0)), _GLF_IDENTITY(int(_GLF_IDENTITY(4, max(4, 4))), (int(4)) << 0))))))), _GLF_IDENTITY((_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), 0 | (_GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), min(int(4), _GLF_IDENTITY(int(4), (int(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, min(_GLF_IDENTITY(4, 1 * (4)), _GLF_IDENTITY(4, _GLF_IDENTITY((4), max((4), (4))) / 1))))))) << 0))))))), max((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), 0 | (_GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), min(int(4), _GLF_IDENTITY(_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-73969) : int(4))), (int(4)) << 0))))))), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), 0 | (_GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), min(int(4), _GLF_IDENTITY(int(4), (int(4)) << 0)))))))))) ^ 0, (_GLF_IDENTITY((_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), 0 | (_GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), min(int(4), _GLF_IDENTITY(int(4), (int(4)) << 0))))))), max((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), 0 | (_GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), min(int(4), _GLF_IDENTITY(int(4), (int(4)) << 0))))))), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(4, min(4, 4))), _GLF_IDENTITY(int(4), (_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) | (int(4))), min(int(4), int(4)))) * ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))))), 0 | (_GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), min(int(4), _GLF_IDENTITY(int(4), _GLF_IDENTITY((int(4)) << 0, (_GLF_IDENTITY((int(4)) << 0, clamp((int(4)) << 0, _GLF_IDENTITY((int(4)) << 0, clamp((int(4)) << 0, (int(4)) << 0, (int(4)) << 0)), _GLF_IDENTITY((int(4)) << 0, ((int(4)) << 0) | 0)))) >> 0))))))))))) ^ _GLF_IDENTITY(0, int(int(_GLF_IDENTITY(0, (0) | (0))))), (true ? (_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), 0 | (_GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), min(int(4), _GLF_IDENTITY(int(4), (int(4)) << 0))))))), max((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), min(int(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, 0 | (4)), 4, 4))), int(4)))), 0 | (_GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), min(int(4), _GLF_IDENTITY(int(4), (int(4)) << 0))))))), (_GLF_IDENTITY(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), 0 | (_GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), min(int(4), _GLF_IDENTITY(int(4), (int(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(-32411) : _GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) << 0), 4, _GLF_IDENTITY(4, (4) | (4)))))))) << 0)))))), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(int(4), _GLF_IDENTITY(_GLF_IDENTITY(int(4), min(int(4), _GLF_IDENTITY(int(4), (int(4)) << 0))), min(_GLF_IDENTITY(int(4), min(int(4), _GLF_IDENTITY(int(4), (int(4)) << 0))), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(4, int(ivec2(4, 0)))), min(int(4), _GLF_IDENTITY(int(4), (int(4)) << 0))), ~ (~ (_GLF_IDENTITY(int(4), min(int(4), _GLF_IDENTITY(int(4), (int(4)) << 0))))))))), ((1 & 1) ^ 1) ^ (_GLF_IDENTITY(int(4), _GLF_IDENTITY(_GLF_IDENTITY(int(4), min(int(4), _GLF_IDENTITY(int(4), (int(4)) << 0))), min(_GLF_IDENTITY(int(4), min(int(4), _GLF_IDENTITY(int(4), (int(4)) << 0))), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(4, int(ivec2(4, 0)))), min(int(4), _GLF_IDENTITY(int(4), (int(4)) << 0))), ~ (~ (_GLF_IDENTITY(int(4), min(int(4), _GLF_IDENTITY(int(4), (int(4)) << 0)))))))))))))) * 1))))) ^ 0 : _GLF_FUZZED(_injected_loop_counter)))) - ((0 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(4), int(4))))))))) | int(_GLF_ZERO(0.0, injectionSwitch.x)))) << 0) >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), _GLF_IDENTITY((_GLF_IDENTITY(int(4), (true ? _GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) ^ (0 & -79192))), 0 | (int(_GLF_IDENTITY(4, (4) ^ (0 & -79192))))) : _GLF_FUZZED(findLSB(subgroup_id))))), ~ _GLF_IDENTITY((~ ((_GLF_IDENTITY(int(4), (true ? int(_GLF_IDENTITY(_GLF_IDENTITY(4, max(4, 4)), (4) ^ (0 & -79192))) : _GLF_FUZZED(findLSB(subgroup_id))))))), int(ivec4((~ ((_GLF_IDENTITY(int(4), (true ? int(_GLF_IDENTITY(_GLF_IDENTITY(4, max(4, 4)), (4) ^ (0 & -79192))) : _GLF_FUZZED(findLSB(subgroup_id))))))), int(_GLF_ZERO(0.0, injectionSwitch.x)), 1, 0)))) << 0), int(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) / 1), clamp(_GLF_IDENTITY(4, (4) / 1), _GLF_IDENTITY(4, (4) / 1), _GLF_IDENTITY(4, (4) / 1)))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                {
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                  {
                   if(_GLF_DEAD(false))
                    {
                     do
                      {
                       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                        {
                         barrier();
                        }
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                      }
                     while(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false)))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(false)), ! (! (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))))))));
                    }
                  }
                 do
                  {
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     barrier();
                    }
                   else
                    {
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (false))));
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
              }
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
            }
          }
        }
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0))), injectionSwitch))) / vec2(1.0, 1.0)).y))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) ^ 0))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
          }
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(2, min(_GLF_IDENTITY(2, int(ivec3(_GLF_IDENTITY(2, ~ (~ (2))), 0, 1))), _GLF_IDENTITY(2, ~ (~ (2)))))), int(2))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
              {
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), 0 ^ (int(1))), int(1)))); _injected_loop_counter ++)
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                  {
                   do
                    {
                     barrier();
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                      }
                     else
                      {
                      }
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                }
               do
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, true))))))));
              }
            }
          }
         else
          {
          }
        }
      }
     else
      {
      }
    }
   else
    {
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
    barrier();
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && (false))), ! (! (bool(_GLF_IDENTITY(false, true && (false))))))))))
    barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (true && (false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             else
              {
              }
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               barrier();
              }
             else
              {
              }
            }
          }
         else
          {
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (_GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false))))) || false))), ! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))), false || (_GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))), true && ((! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false))))))))))))
            barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-97.94), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9975.7644)), bvec2(true, false))).x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
            {
             barrier();
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       else
        {
        }
      }
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   do
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 else
  {
  }
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y)))))); _injected_loop_counter ++)
    {
     do
      {
       for(int _injected_loop_counter = (0 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, (0) - int(_GLF_ZERO(0.0, injectionSwitch.x)))); _injected_loop_counter --)
        {
         barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, subgroup_base)) + _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))) | (subgroup_local_id));
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (subgroup_base) + 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, uint(uvec4(subgroup_base, 0u, 0u, 0u))), min(_GLF_IDENTITY(subgroup_base, uint(uvec4(subgroup_base, 0u, 0u, 0u))), _GLF_IDENTITY(subgroup_base, uint(uvec4(subgroup_base, 0u, 0u, 0u))))), _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_base), (true ? _GLF_IDENTITY((subgroup_base), uint(uint((subgroup_base)))) : _GLF_FUZZED(subgroup_local_id))), ((subgroup_base)) - uint(_GLF_ZERO(0.0, injectionSwitch.x))) - 0u))), _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(packUnorm2x16(injectionSwitch)) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, _GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(subgroup_base, 1u * (subgroup_base)))))), (subgroup_base) / 1u), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, _GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(subgroup_base, 1u * (subgroup_base)))))), (subgroup_base) / 1u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, _GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(subgroup_base, 1u * (subgroup_base)))))), (subgroup_base) / 1u)))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, _GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(subgroup_base, 1u * (subgroup_base)))))), (subgroup_base) / 1u))), (subgroup_base) * 1u)), (false ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(packUnorm2x16(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(6.4))), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(4.0) : _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(0.9)), bool(false))))))), 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)), (injectionSwitch) * vec2(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-2832.4574)), float(1.0), bool(true))), 1.0)), 1.0)))))) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (subgroup_base) / 1u), (subgroup_base) * 1u)))), (_GLF_IDENTITY((false ? _GLF_FUZZED(packUnorm2x16(injectionSwitch)) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, _GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(subgroup_base, 1u * (subgroup_base)))))), (subgroup_base) / 1u), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, _GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(subgroup_base, 1u * (subgroup_base)))))), (subgroup_base) / 1u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, _GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(subgroup_base, 1u * (subgroup_base)))))), (subgroup_base) / 1u)))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, _GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(subgroup_base, 1u * (subgroup_base)))))), (subgroup_base) / 1u))), (subgroup_base) * 1u)), (false ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(packUnorm2x16(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(6.4))), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(4.0) : _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(0.9)), bool(false))))))), 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)), (injectionSwitch) * vec2(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-2832.4574)), float(1.0), bool(true))), 1.0)), 1.0)))))) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (subgroup_base) / 1u), (subgroup_base) * 1u))))) | (_GLF_IDENTITY((false ? _GLF_FUZZED(packUnorm2x16(injectionSwitch)) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, _GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(subgroup_base, 1u * (subgroup_base)))))), (subgroup_base) / 1u), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, _GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(subgroup_base, 1u * (subgroup_base)))))), (subgroup_base) / 1u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, _GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(subgroup_base, 1u * (subgroup_base)))))), (subgroup_base) / 1u)))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, _GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(subgroup_base, 1u * (subgroup_base)))))), (subgroup_base) / 1u))), (subgroup_base) * 1u)), (false ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(packUnorm2x16(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(6.4))), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(4.0) : _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(0.9)), bool(false))))))), 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)), (injectionSwitch) * vec2(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-2832.4574)), float(1.0), bool(true))), 1.0)), 1.0)))))) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (subgroup_base) / 1u), (subgroup_base) * 1u))))))) + _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, 0u | ((_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))) % subgroup_size))), min(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), (subgroup_local_id) | 0u) + _GLF_IDENTITY(1, max(1, 1))) % subgroup_size), min(((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)) % subgroup_size), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + 1))))) % _GLF_IDENTITY(subgroup_size, (subgroup_size) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))), max(((subgroup_local_id + 1) % subgroup_size), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) + 1), ((subgroup_local_id + 1)) * 1u) % subgroup_size))))), ((subgroup_local_id + 1) % subgroup_size)));
 uint read = _GLF_IDENTITY(atomicLoad(_GLF_IDENTITY(buf[virtual_gid], ~ (~ _GLF_IDENTITY((buf[virtual_gid]), ((buf[virtual_gid])) / 1u))), _GLF_IDENTITY(4, (4) | 0), 64, 2), min(_GLF_IDENTITY(atomicLoad(_GLF_IDENTITY(buf[virtual_gid], ~ (~ (buf[virtual_gid]))), _GLF_IDENTITY(4, (4) | 0), 64, 2), 0u + (atomicLoad(_GLF_IDENTITY(buf[virtual_gid], ~ (~ (buf[virtual_gid]))), _GLF_IDENTITY(4, (4) | 0), 64, 2))), _GLF_IDENTITY(atomicLoad(_GLF_IDENTITY(buf[virtual_gid], ~ (~ (buf[virtual_gid]))), _GLF_IDENTITY(4, (4) | 0), 64, 2), (atomicLoad(_GLF_IDENTITY(buf[virtual_gid], ~ (~ (buf[virtual_gid]))), _GLF_IDENTITY(4, (4) | 0), 64, 2)) | (atomicLoad(_GLF_IDENTITY(buf[virtual_gid], ~ (~ (_GLF_IDENTITY(buf[virtual_gid], 0u | (buf[virtual_gid]))))), _GLF_IDENTITY(4, (4) | 0), 64, 2)))));
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  barrier();
 if((subgroup_local_id % 2) == 0)
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter))) ^ 0) > 0); _injected_loop_counter --)
    {
     do
      {
       do
        {
         if(_GLF_DEAD(false))
          barrier();
         atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(1), uint(uvec4(uint(1), (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(8u), uint(8u)), (0u >> _GLF_IDENTITY(uint(8u), uint(8u))) | (0u >> _GLF_IDENTITY(uint(8u), uint(8u))))), 0u, 1u))), 4, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, max(64, _GLF_IDENTITY(64, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (64), (~ (64)) | (_GLF_IDENTITY(~ (64), (~ (_GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(64, 0 | (64)), _GLF_IDENTITY(64, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(64, (64) / 1))))))) - 0))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (64), _GLF_IDENTITY((~ (64)), (_GLF_IDENTITY((~ (64)), ((~ (64))) / 1)) + 0) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(64, (64) | 0)), (~ (64)) - 0))), (_GLF_IDENTITY(~ (64), (~ (64)) | (_GLF_IDENTITY(~ (64), (~ (64)) - 0)))) * 1)))))))), clamp(_GLF_IDENTITY(64, max(64, _GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (64), (~ (64)) | (_GLF_IDENTITY(~ (64), (~ (64)) - 0))))))), _GLF_IDENTITY(_GLF_IDENTITY(64, max(64, _GLF_IDENTITY(64, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (64), (~ (64)) | (_GLF_IDENTITY(~ (64), (~ (64)) - 0)))), min(~ (_GLF_IDENTITY(~ (64), (~ (64)) | (_GLF_IDENTITY(~ (64), (~ (64)) - 0)))), ~ (_GLF_IDENTITY(~ (64), (~ (64)) | (_GLF_IDENTITY(~ (64), (~ (64)) - 0))))))))), 0 + (_GLF_IDENTITY(64, max(64, _GLF_IDENTITY(64, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (64), (~ (64)) | (_GLF_IDENTITY(~ (64), (~ (64)) - 0)))), min(~ _GLF_IDENTITY((_GLF_IDENTITY(~ (64), (~ (64)) | (_GLF_IDENTITY(~ (64), (~ (64)) - 0)))), max((_GLF_IDENTITY(~ (64), (~ (64)) | (_GLF_IDENTITY(~ (64), (~ (64)) - 0)))), _GLF_IDENTITY((_GLF_IDENTITY(~ (64), (~ (64)) | (_GLF_IDENTITY(~ (64), (~ (64)) - 0)))), 0 + ((_GLF_IDENTITY(~ (64), (~ (64)) | (_GLF_IDENTITY(~ (64), (~ (64)) - 0)))))))), ~ (_GLF_IDENTITY(~ (64), (~ (64)) | (_GLF_IDENTITY(~ (64), (~ (64)) - 0))))))))))), _GLF_IDENTITY(64, max(64, _GLF_IDENTITY(_GLF_IDENTITY(64, clamp(64, 64, _GLF_IDENTITY(64, min(64, 64)))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (64), (~ (64)) | (_GLF_IDENTITY(~ (64), (~ (64)) - 0))), max(_GLF_IDENTITY(_GLF_IDENTITY(~ (64), (~ (64)) | (_GLF_IDENTITY(~ (64), (~ (64)) - 0))), int(int(_GLF_IDENTITY(~ (64), (~ (64)) | (_GLF_IDENTITY(~ (64), _GLF_IDENTITY((~ (64)) - 0, 0 | ((~ (64)) - 0)))))))), _GLF_IDENTITY(_GLF_IDENTITY(~ (64), (~ (64)) | (_GLF_IDENTITY(~ (64), (~ (64)) - 0))), clamp(_GLF_IDENTITY(~ (64), (~ (64)) | (_GLF_IDENTITY(~ (64), (~ (64)) - 0))), _GLF_IDENTITY(~ (64), (~ (64)) | (_GLF_IDENTITY(~ (64), (~ (64)) - 0))), _GLF_IDENTITY(~ (64), (~ (64)) | (_GLF_IDENTITY(~ (64), (~ (_GLF_IDENTITY(64, int(ivec2(64, (0 ^ 0)))))) - 0))))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, max(64, _GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (64), (_GLF_IDENTITY(~ (64), clamp(~ (64), ~ (64), _GLF_IDENTITY(~ (64), _GLF_IDENTITY(int(ivec4(~ (64), 0, 1, 0)), clamp(int(ivec4(~ (64), 0, 1, 0)), int(ivec4(~ (64), 0, 1, 0)), int(ivec4(~ (64), 0, 1, 0)))))))) | (_GLF_IDENTITY(~ (64), (~ (64)) - 0))))))), clamp(_GLF_IDENTITY(64, max(64, _GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (64), (~ (64)) | (_GLF_IDENTITY(_GLF_IDENTITY(~ (64), (~ (64)) - 0), 0 + (_GLF_IDENTITY(_GLF_IDENTITY(~ (64), (~ (64)) - 0), (0 >> _GLF_IDENTITY(int(0), int(0))) ^ (_GLF_IDENTITY(~ (64), (~ (64)) - 0))))))))))), _GLF_IDENTITY(64, max(64, _GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (64), (~ (64)) | (_GLF_IDENTITY(~ _GLF_IDENTITY((64), 0 + ((64))), _GLF_IDENTITY((~ (64)), clamp(_GLF_IDENTITY((~ (64)), ((~ (64))) << 0), (_GLF_IDENTITY(~ (64), (~ (64)) | 0)), _GLF_IDENTITY((~ (64)), ((_GLF_IDENTITY(~ (64), max(~ (64), ~ (64))))) | ((~ (64)))))) - 0))))))), _GLF_IDENTITY(64, max(64, _GLF_IDENTITY(_GLF_IDENTITY(64, int(ivec2(64, 0))), ~ (_GLF_IDENTITY(~ (64), (~ _GLF_IDENTITY((64), ((64)) / 1)) | (_GLF_IDENTITY(~ _GLF_IDENTITY((64), clamp((64), _GLF_IDENTITY((64), clamp((64), _GLF_IDENTITY((64), 0 | _GLF_IDENTITY(((_GLF_IDENTITY(64, 0 | (64)))), int(ivec4(((64)), 0, 0, 0)))), (64))), (64))), _GLF_IDENTITY((~ (64)) - _GLF_IDENTITY(0, (0) | (0)), min((~ (64)) - _GLF_IDENTITY(0, (0) | (0)), (~ (64)) - _GLF_IDENTITY(0, (0) | (0))))))))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(64, max(64, _GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (64), (~ (64)) | (_GLF_IDENTITY(~ _GLF_IDENTITY((64), ((64)) << 0), (~ (64)) - _GLF_IDENTITY(0, ~ (~ (0)))))))))), clamp(_GLF_IDENTITY(64, max(64, _GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((64), ((64)) << 0), (~ (64)) | (_GLF_IDENTITY(~ (64), (~ (64)) - 0))))))), _GLF_IDENTITY(_GLF_IDENTITY(64, max(64, _GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (64), _GLF_IDENTITY((~ (64)), 0 ^ ((~ (64)))) | (_GLF_IDENTITY(~ (64), (~ _GLF_IDENTITY((64), int(ivec2((64), (0 >> _GLF_IDENTITY(int(2), int(2))))))) - 0))))))), _GLF_IDENTITY((_GLF_IDENTITY(64, max(64, _GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (64), (~ (64)) | (_GLF_IDENTITY(~ (64), (~ _GLF_IDENTITY((64), int(ivec2((64), (0 >> _GLF_IDENTITY(int(2), int(2))))))) - 0)))))))) >> (0 >> _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), clamp(int(8), int(8), int(8))))), ((_GLF_IDENTITY(64, max(64, _GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (64), (~ (64)) | (_GLF_IDENTITY(~ (64), (~ _GLF_IDENTITY((64), int(ivec2((64), (0 >> _GLF_IDENTITY(int(2), int(2))))))) - 0)))))))) >> (0 >> _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), clamp(int(8), int(8), int(8)))))) >> 0)), _GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(64, (64) | 0), (1 ^ 0), (4649 & 0), 0)), 0 | (int(ivec4(_GLF_IDENTITY(64, (64) | 0), (1 ^ 0), (4649 & 0), 0))))), max(64, _GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (64), (~ (64)) | (_GLF_IDENTITY(~ (64), (~ (64)) - 0))))))))), _GLF_IDENTITY(_GLF_IDENTITY(64, max(64, _GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (64), (~ (64)) | (_GLF_IDENTITY(_GLF_IDENTITY(~ (64), (~ (64)) | _GLF_IDENTITY(0, (0) - 0)), (~ (64)) - 0))))))), clamp(_GLF_IDENTITY(64, max(64, _GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (64), (~ (64)) | (_GLF_IDENTITY(~ (64), (~ (64)) - 0))))))), _GLF_IDENTITY(_GLF_IDENTITY(64, max(64, _GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (64), (~ (64)) | (_GLF_IDENTITY(~ (64), (~ (64)) - 0))))))), clamp(_GLF_IDENTITY(64, max(64, _GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (64), (~ (64)) | (_GLF_IDENTITY(~ (64), (~ (64)) - 0))))))), _GLF_IDENTITY(64, max(64, _GLF_IDENTITY(_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((64), ((64)) - 0), (~ (64)) | (_GLF_IDENTITY(~ (64), (~ (64)) - 0))))), (_GLF_IDENTITY(_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((64), ((64)) - 0), (~ (64)) | (_GLF_IDENTITY(~ (64), (~ (64)) - 0))))), 0 ^ (_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((64), ((64)) - 0), (~ (64)) | (_GLF_IDENTITY(~ (64), (~ (64)) - 0)))))))) | 0))), _GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY(max(64, _GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (64), (~ (64)) | (_GLF_IDENTITY(~ (64), (~ (64)) - 0)))))), (_GLF_IDENTITY(max(64, _GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (64), (~ (64)) | (_GLF_IDENTITY(~ (64), (~ (64)) - 0)))))), clamp(max(64, _GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (64), (~ (64)) | (_GLF_IDENTITY(~ (64), (~ (64)) - 0)))))), max(64, _GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (64), (~ (64)) | (_GLF_IDENTITY(~ (64), (~ (64)) - 0)))))), max(64, _GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (64), (~ (64)) | (_GLF_IDENTITY(~ (64), (~ (64)) - 0))))))))) * 1)), clamp(_GLF_IDENTITY(64, max(64, _GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (64), (~ (64)) | (_GLF_IDENTITY(~ (64), (~ (64)) - 0))))))), _GLF_IDENTITY(64, max(64, _GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (64), (~ (64)) | (_GLF_IDENTITY(~ (64), (~ (64)) - 0))))))), _GLF_IDENTITY(64, max(64, _GLF_IDENTITY(64, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (64), (~ (64)) | (_GLF_IDENTITY(~ (64), (~ (64)) - 0)))), clamp(~ (_GLF_IDENTITY(~ (64), (~ (64)) | (_GLF_IDENTITY(~ (64), _GLF_IDENTITY((~ (64)) - 0, min(_GLF_IDENTITY((~ (64)) - 0, ((~ (64)) - 0) << 0), _GLF_IDENTITY((~ (64)) - 0, ~ (~ ((~ (64)) - 0))))))))), ~ (_GLF_IDENTITY(~ (64), (~ (64)) | (_GLF_IDENTITY(~ (64), (~ (64)) - 0)))), ~ (_GLF_IDENTITY(~ (64), (~ (64)) | (_GLF_IDENTITY(~ (64), (~ (64)) - 0))))))))))))), _GLF_IDENTITY(64, max(64, _GLF_IDENTITY(_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (64), (~ (64)) | (_GLF_IDENTITY(~ (64), _GLF_IDENTITY((~ (64)), 0 | ((~ (64)))) - 0))))), int(ivec3(_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (64), (~ (64)) | (_GLF_IDENTITY(~ (64), (~ (64)) - 0))))), 0, 0)))))))))) | 0), 4);
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bool(_GLF_WRAPPED_LOOP(false))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bool(_GLF_WRAPPED_LOOP(false))))), true, true, false)), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bool(_GLF_WRAPPED_LOOP(false))))), true, true, false)), (bool(bvec4(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bool(_GLF_WRAPPED_LOOP(false))))), true, true, false))) || false)), true && (_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bool(_GLF_WRAPPED_LOOP(false))))), true, true, false)), (bool(bvec4(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bool(_GLF_WRAPPED_LOOP(false))))), true, true, false))) || false)), true && ((_GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bool(_GLF_WRAPPED_LOOP(false))))), true, true, false)), (bool(bvec4(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bool(_GLF_WRAPPED_LOOP(false))))), true, true, false))) || false)))))) && true), (bool(bvec4(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bool(_GLF_WRAPPED_LOOP(false))))), true, true, false))) && true)), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bool(_GLF_WRAPPED_LOOP(false))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bool(_GLF_WRAPPED_LOOP(false))))), (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bool(_GLF_WRAPPED_LOOP(false)))))) || false)) || false))))));
    }
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(vec2(-7.3, 1.4).x)), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)), bool(true))))) > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * vec2(1.0, 1.0)).y))))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) && true), false), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) && true), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, (false) && true), false), false, _GLF_IDENTITY(false, ! (! (false))))), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, (false) && true), false), false, _GLF_IDENTITY(false, ! (! (false))))), false)), bvec2(bvec4(bvec2(bvec3(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, (false) && true), false), false, _GLF_IDENTITY(false, ! (! (false))))), false)), false, false))))), true, false)), bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), (! ((false))) || false))) && true), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) && true), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, (false) && true), false), false))), false, false))), true, false))))))))));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
      }
    }
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     do
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) + 0) > 0); _injected_loop_counter --)
            {
             barrier();
            }
          }
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
              }
            }
           else
            {
            }
           barrier();
          }
         else
          {
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(3.7), _GLF_FUZZED(937.991)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).x > injectionSwitch.y))))
        {
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) && true)), false || (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, true && (true)), false, true)))))))
          {
           for(int _injected_loop_counter = (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(3, (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(-35181) : 3))), int(3))) >> _GLF_IDENTITY(int(3), int(3)), ~ (~ (_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(int(3), int(3))) >> 0)) >> _GLF_IDENTITY(int(3), int(3)), _GLF_IDENTITY(_GLF_IDENTITY(min((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)), (1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), int(ivec4(int(3), (1389 & 0), (0 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), 0 | (int(6))))), _GLF_IDENTITY(0, (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(0, (0) << 0) : _GLF_FUZZED(38710)))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(84423) : min((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)), (1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), int(ivec4(int(3), (_GLF_IDENTITY(1389 & 0, clamp(1389 & 0, 1389 & 0, 1389 & 0))), (0 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), 0 | (int(6))))), _GLF_IDENTITY(0, (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(0, (0) << 0) : _GLF_FUZZED(38710)))))))))), min(min((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)), (1 << _GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, (3) + 0)))) >> _GLF_IDENTITY(int(3), int(3))), min((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)), (1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))))))))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > 0, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_injected_loop_counter > 0))); _injected_loop_counter --)
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
          }
         else
          {
          }
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(-63.12), (true ? _GLF_FUZZED(-63.12) : _GLF_FUZZED(acosh(4671.2943)))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_FUZZED(vec2(-827.143, 4.5)) : injectionSwitch), _GLF_IDENTITY(vec2(1.0, 1.0), mat2(1.0) * (vec2(1.0, 1.0))) * ((false ? _GLF_FUZZED(vec2(-827.143, 4.5)) : injectionSwitch)))), log(_GLF_ONE(1.0, injectionSwitch.y)), 0.0, _GLF_IDENTITY(0.0, float(mat2x4(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0))), 0.0, 1.0, 1.0)), mix(_GLF_IDENTITY(_GLF_IDENTITY(vec2((vec2(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (false ? _GLF_FUZZED(vec2(-827.143, 4.5)) : injectionSwitch)), log(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(14.80))), injectionSwitch.y)))), 0.0, 0.0, 0.0, 1.0, 1.0)))[0], (vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-827.143, 4.5)) : injectionSwitch)), log(_GLF_ONE(1.0, injectionSwitch.y)), 0.0, 0.0, 0.0, 1.0, 1.0)))[1]), vec2(mat4x3(vec2((vec2(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (false ? _GLF_FUZZED(vec2(-827.143, 4.5)) : injectionSwitch)), log(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(14.80))), injectionSwitch.y)))), 0.0, 0.0, 0.0, 1.0, 1.0)))[0], (vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-827.143, 4.5)) : injectionSwitch)), log(_GLF_ONE(1.0, injectionSwitch.y)), 0.0, 0.0, 0.0, 1.0, 1.0)))[1]), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0, sin(0.0), 0.0, 0.0, 0.0, 0.0, 0.0))), mix(vec2(_GLF_FUZZED(-2.1), _GLF_FUZZED(601.427)), vec2((vec2((vec2(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(_GLF_IDENTITY(-827.143, min(_GLF_IDENTITY(-827.143, 1.0 * (-827.143)), -827.143)), 4.5), _GLF_IDENTITY((vec2(_GLF_IDENTITY(-827.143, min(_GLF_IDENTITY(-827.143, 1.0 * (-827.143)), -827.143)), 4.5)) * mat2(1.0), vec2(mat4x3((vec2(_GLF_IDENTITY(-827.143, min(_GLF_IDENTITY(-827.143, 1.0 * (-827.143)), -827.143)), 4.5)) * mat2(1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0))))) : injectionSwitch)), log(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y : _GLF_FUZZED(14.80))), injectionSwitch.y)))), 0.0, 0.0, 0.0, 1.0, 1.0)))[0], (vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-827.143, 4.5)) : injectionSwitch)), log(_GLF_ONE(1.0, injectionSwitch.y)), 0.0, 0.0, 0.0, 1.0, 1.0)))[1]))[0], (vec2((vec2(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (false ? _GLF_FUZZED(vec2(-827.143, 4.5)) : injectionSwitch)), log(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(14.80))), injectionSwitch.y)))), 0.0, 0.0, 0.0, 1.0, 1.0)))[0], (vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-827.143, 4.5)) : injectionSwitch)), log(_GLF_ONE(1.0, injectionSwitch.y)), 0.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(586.170)), float(0.0), bool(true))), 0.0)), 1.0, 1.0)))[1]))[1]), bvec2(true, true))), vec2(_GLF_FUZZED(3.7), _GLF_FUZZED(vec4(1.6, 568.521, -1771.5533, -63.24).s)), bvec2(false, false))))) - vec2(0.0, 0.0))), min(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(-827.143, 4.5)) : injectionSwitch, (true ? false ? _GLF_FUZZED(vec2(-827.143, 4.5)) : injectionSwitch : _GLF_FUZZED(vec2(205.653, 69.51)))))), log(_GLF_ONE(1.0, injectionSwitch.y)), 0.0, 0.0, 0.0, 1.0, 1.0)), mix(_GLF_IDENTITY(vec2((vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-827.143, 4.5)), (true ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-827.143, 4.5)), (_GLF_FUZZED(vec2(-827.143, 4.5))) + vec2(0.0, 0.0)) : _GLF_FUZZED(vec2(-288.732, 4418.2108)))) : injectionSwitch), (_GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(vec2(-827.143, 4.5), mix(vec2((vec2(-827.143, 4.5))[0], (vec2(-827.143, 4.5))[1]), vec2(_GLF_FUZZED((- -5339.3088)), _GLF_FUZZED(-6.9)), bvec2(false, false)))), (_GLF_IDENTITY(true, true && (true)) ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-827.143, 4.5)), (_GLF_FUZZED(vec2(-827.143, 4.5))) + vec2(0.0, 0.0)) : _GLF_FUZZED(vec2(-288.732, 4418.2108)))) : injectionSwitch), clamp((false ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(vec2(-827.143, 4.5), mix(vec2((vec2(-827.143, 4.5))[0], (vec2(-827.143, 4.5))[1]), vec2(_GLF_FUZZED((- -5339.3088)), _GLF_FUZZED(-6.9)), bvec2(false, false)))), (_GLF_IDENTITY(true, true && (true)) ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-827.143, 4.5)), (_GLF_FUZZED(vec2(-827.143, 4.5))) + vec2(0.0, 0.0)) : _GLF_FUZZED(vec2(-288.732, 4418.2108)))) : injectionSwitch), (false ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(vec2(-827.143, 4.5), mix(vec2((vec2(-827.143, 4.5))[0], (vec2(-827.143, 4.5))[1]), vec2(_GLF_FUZZED((- -5339.3088)), _GLF_FUZZED(-6.9)), bvec2(false, false)))), (_GLF_IDENTITY(true, true && (true)) ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-827.143, 4.5)), (_GLF_FUZZED(vec2(-827.143, 4.5))) + vec2(0.0, 0.0)) : _GLF_FUZZED(vec2(-288.732, 4418.2108)))) : injectionSwitch), (false ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(vec2(-827.143, 4.5), mix(vec2((vec2(-827.143, 4.5))[0], (vec2(-827.143, 4.5))[1]), vec2(_GLF_FUZZED((- -5339.3088)), _GLF_FUZZED(-6.9)), bvec2(false, false)))), (_GLF_IDENTITY(true, true && (true)) ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-827.143, 4.5)), (_GLF_FUZZED(vec2(-827.143, 4.5))) + vec2(0.0, 0.0)) : _GLF_FUZZED(vec2(-288.732, 4418.2108)))) : injectionSwitch)))) - log(vec2(1.0, 1.0)))), log(_GLF_ONE(1.0, injectionSwitch.y)), 0.0, 0.0, 0.0, 1.0, 1.0)))[_GLF_IDENTITY(0, 1 * (_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-87414)))))], (vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-827.143, 4.5)) : injectionSwitch)), log(_GLF_ONE(1.0, injectionSwitch.y)), 0.0, 0.0, 0.0, 1.0, 1.0)))[1]), vec2(1.0, 1.0) * (vec2((vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-827.143, 4.5)), (true ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-827.143, 4.5)), (_GLF_FUZZED(vec2(-827.143, 4.5))) + vec2(0.0, 0.0)) : _GLF_FUZZED(vec2(-288.732, _GLF_IDENTITY(4418.2108, mix(float(_GLF_FUZZED(4.3)), float(4418.2108), bool(true))))))) : injectionSwitch), ((false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(_GLF_IDENTITY(-827.143, (true ? -827.143 : _GLF_FUZZED(310.847))), 4.5)), (true ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-827.143, 4.5)), (_GLF_FUZZED(vec2(-827.143, 4.5))) + vec2(0.0, 0.0)) : _GLF_FUZZED(vec2(-288.732, 4418.2108)))) : injectionSwitch)) - log(vec2(1.0, 1.0)))), log(_GLF_ONE(1.0, injectionSwitch.y)), 0.0, 0.0, 0.0, 1.0, 1.0)))[_GLF_IDENTITY(0, 1 * (_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-87414)))))], (vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-827.143, 4.5)) : injectionSwitch)), log(_GLF_ONE(1.0, injectionSwitch.y)), 0.0, 0.0, 0.0, 1.0, 1.0)))[1]))), vec2(_GLF_FUZZED(3.7), _GLF_FUZZED(vec4(1.6, 568.521, -1771.5533, -63.24).s)), bvec2(false, false))))) - vec2(0.0, 0.0))), max((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-827.143, 4.5)) : injectionSwitch)), log(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_ONE(1.0, injectionSwitch.y)), float(_GLF_FUZZED(-793.761)), bool(_GLF_IDENTITY(false, bool(bool(false))))))), 0.0, 0.0, 0.0, 1.0, 1.0)), mix(vec2((vec2(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(44.21)), vec2(_GLF_FUZZED(-2.5), _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(false, true))), (false ? _GLF_FUZZED(vec2(-827.143, _GLF_IDENTITY(4.5, clamp(4.5, 4.5, 4.5)))) : injectionSwitch)), log(_GLF_ONE(1.0, injectionSwitch.y)), 0.0, 0.0, 0.0, 1.0, 1.0)))[0], (vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-827.143, 4.5)) : injectionSwitch)), log(_GLF_ONE(1.0, injectionSwitch.y)), 0.0, 0.0, 0.0, 1.0, 1.0)))[1]), vec2(_GLF_FUZZED(3.7), _GLF_FUZZED(vec4(1.6, 568.521, -1771.5533, _GLF_IDENTITY(-63.24, min(-63.24, -63.24))).s)), bvec2(false, false)))), mix(vec2(_GLF_FUZZED(-227.863), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-827.143, 4.5)) : injectionSwitch)), log(_GLF_ONE(1.0, injectionSwitch.y)), 0.0, 0.0, 0.0, 1.0, 1.0)), mix(vec2((vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-827.143, 4.5)) : injectionSwitch)), log(_GLF_ONE(1.0, injectionSwitch.y)), 0.0, 0.0, 0.0, 1.0, 1.0)))[0], (vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-827.143, 4.5)) : injectionSwitch)), log(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(float(injectionSwitch.y), 0.0 + (float(injectionSwitch.y))))), injectionSwitch.y)))), 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-208.641) : _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-4.9)), float(0.0), bool(true))))), 0.0, 1.0, 1.0)))[1]), vec2(_GLF_FUZZED(3.7), _GLF_FUZZED(vec4(1.6, 568.521, -1771.5533, -63.24).s)), bvec2(false, false)))))[1]), vec2((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-827.143, 4.5)) : injectionSwitch)), log(_GLF_ONE(1.0, injectionSwitch.y)), 0.0, 0.0, 0.0, 1.0, 1.0)), mix(vec2((vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(_GLF_IDENTITY(-827.143, clamp(_GLF_IDENTITY(-827.143, float(vec2(-827.143, 0.0))), -827.143, _GLF_IDENTITY(-827.143, mix(float(-827.143), float(_GLF_FUZZED(0.2)), bool(false))))), 4.5)) : injectionSwitch)), log(_GLF_ONE(1.0, injectionSwitch.y)), 0.0, 0.0, 0.0, 1.0, 1.0)))[0], (vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-827.143, 4.5)) : injectionSwitch)), log(_GLF_ONE(1.0, injectionSwitch.y)), 0.0, 0.0, 0.0, 1.0, 1.0)))[1]), vec2(_GLF_FUZZED(3.7), _GLF_FUZZED(vec4(1.6, 568.521, -1771.5533, -63.24).s)), bvec2(false, false)))))[0], _GLF_FUZZED(3.8)), bvec2(true, false)))) - vec2(0.0, 0.0))), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-827.143, 4.5)) : injectionSwitch)), log(_GLF_ONE(1.0, injectionSwitch.y)), 0.0, 0.0, 0.0, 1.0, 1.0)), mix(vec2((vec2(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (false ? _GLF_FUZZED(vec2(-827.143, 4.5)) : injectionSwitch)), log(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, float(mat2(_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 1.0, sqrt(1.0)))), 1.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)), 0.0))))), 0.0, 0.0, 0.0, 1.0, 1.0)))[0], (vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-827.143, 4.5)) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))), log(_GLF_ONE(1.0, injectionSwitch.y)), 0.0, 0.0, _GLF_IDENTITY(0.0, float(vec3(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), mix(float(0.0), float(_GLF_FUZZED(-664.739)), bool(_GLF_IDENTITY(false, true && (false))))) : _GLF_FUZZED(-8.1))), 1.0, 1.0))), 1.0, 1.0)))[1]), vec2(_GLF_FUZZED(3.7), _GLF_FUZZED(vec4(1.6, 568.521, -1771.5533, -63.24).s)), bvec2(false, false))))) - vec2(_GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) / cos(0.0)))), 0.0))))), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) + vec2(0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-827.143, 4.5)) : injectionSwitch)), log(_GLF_ONE(1.0, injectionSwitch.y)), 0.0, 0.0, 0.0, 1.0, 1.0)), mix(vec2((vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-827.143, 4.5)) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-99.00), _GLF_FUZZED(8.5)), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))), clamp(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))), clamp(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))), (true ? vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))) : _GLF_FUZZED(vec2(-7.6, -6.3)))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))))), bvec2(true, true))))))), log(_GLF_ONE(1.0, injectionSwitch.y)), 0.0, 0.0, 0.0, 1.0, 1.0)))[0], (vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(_GLF_IDENTITY(-827.143, mix(float(_GLF_FUZZED((- 174.161))), float(-827.143), bool(true))), 4.5)) : injectionSwitch)), log(_GLF_ONE(1.0, injectionSwitch.y)), 0.0, 0.0, 0.0, 1.0, 1.0)))[1]), vec2(_GLF_FUZZED(3.7), _GLF_FUZZED(vec4(1.6, 568.521, -1771.5533, -63.24).s)), bvec2(false, false))), (_GLF_IDENTITY(vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-827.143, 4.5)) : injectionSwitch)), log(_GLF_ONE(1.0, injectionSwitch.y)), 0.0, 0.0, 0.0, 1.0, 1.0)), mix(vec2(_GLF_IDENTITY((vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-827.143, 4.5)) : injectionSwitch)), log(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), 0.0, 0.0, 0.0, 1.0, 1.0)))[0], max(_GLF_IDENTITY((vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(-827.143, 4.5)) : injectionSwitch, mat2(1.0) * (false ? _GLF_FUZZED(vec2(-827.143, 4.5)) : injectionSwitch)))), log(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), 0.0, 0.0, 0.0, 1.0, 1.0)))[0], clamp(_GLF_IDENTITY((vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-827.143, 4.5)) : injectionSwitch)), log(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), 0.0, 0.0, 0.0, 1.0, 1.0)))[0], min((vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-827.143, 4.5)) : injectionSwitch)), log(_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), (true ? _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) : _GLF_FUZZED(asin(inversesqrt(-2.3)))))), 0.0, 0.0, 0.0, 1.0, 1.0)))[0], (vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-827.143, 4.5)) : injectionSwitch)), log(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), 0.0, 0.0, 0.0, 1.0, 1.0)))[0])), (vec2(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-827.143, 4.5)) : injectionSwitch)), (false ? _GLF_FUZZED((mat2(9.4, -61.59, -0.8, 2.2) * vec2(-150.901, 2439.0614))) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-827.143, 4.5)) : injectionSwitch)), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-827.143, 4.5)) : injectionSwitch)))))), log(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, injectionSwitch.y)))), 0.0, 0.0, 0.0, 1.0, 1.0)))[0], _GLF_IDENTITY((_GLF_IDENTITY(vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-827.143, 4.5)), clamp(_GLF_FUZZED(vec2(-827.143, 4.5)), _GLF_IDENTITY(_GLF_FUZZED(vec2(-827.143, 4.5)), clamp(_GLF_FUZZED(vec2(-827.143, 4.5)), _GLF_FUZZED(vec2(-827.143, 4.5)), _GLF_IDENTITY(_GLF_FUZZED(vec2(-827.143, 4.5)), (true ? _GLF_FUZZED(vec2(-827.143, 4.5)) : _GLF_FUZZED(vec2(458.801, -270.190)))))), _GLF_FUZZED(vec2(-827.143, 4.5)))) : injectionSwitch)), log(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)), max(injectionSwitch.y, injectionSwitch.y)))), 0.0, 0.0, 0.0, 1.0, 1.0)), min(_GLF_IDENTITY(vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-827.143, 4.5)), clamp(_GLF_FUZZED(vec2(-827.143, 4.5)), _GLF_IDENTITY(_GLF_FUZZED(vec2(-827.143, 4.5)), clamp(_GLF_FUZZED(vec2(-827.143, 4.5)), _GLF_FUZZED(vec2(-827.143, 4.5)), _GLF_IDENTITY(_GLF_FUZZED(vec2(-827.143, 4.5)), (true ? _GLF_FUZZED(vec2(-827.143, 4.5)) : _GLF_FUZZED(vec2(458.801, -270.190)))))), _GLF_FUZZED(vec2(-827.143, 4.5)))) : injectionSwitch)), log(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)), max(injectionSwitch.y, injectionSwitch.y)))), 0.0, 0.0, 0.0, 1.0, 1.0)), (vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-827.143, 4.5)), clamp(_GLF_FUZZED(vec2(-827.143, 4.5)), _GLF_IDENTITY(_GLF_FUZZED(vec2(-827.143, 4.5)), clamp(_GLF_FUZZED(vec2(-827.143, 4.5)), _GLF_FUZZED(vec2(-827.143, 4.5)), _GLF_IDENTITY(_GLF_FUZZED(vec2(-827.143, 4.5)), (true ? _GLF_FUZZED(vec2(-827.143, 4.5)) : _GLF_FUZZED(vec2(458.801, -270.190)))))), _GLF_FUZZED(vec2(-827.143, 4.5)))) : injectionSwitch)), log(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)), max(injectionSwitch.y, injectionSwitch.y)))), 0.0, 0.0, 0.0, 1.0, 1.0))) - vec2(0.0, 0.0)), _GLF_IDENTITY(vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-827.143, 4.5)), clamp(_GLF_FUZZED(vec2(-827.143, 4.5)), _GLF_IDENTITY(_GLF_FUZZED(vec2(-827.143, 4.5)), clamp(_GLF_FUZZED(vec2(-827.143, 4.5)), _GLF_FUZZED(vec2(-827.143, 4.5)), _GLF_IDENTITY(_GLF_FUZZED(vec2(-827.143, 4.5)), (true ? _GLF_FUZZED(vec2(-827.143, 4.5)) : _GLF_FUZZED(vec2(458.801, -270.190)))))), _GLF_FUZZED(vec2(-827.143, 4.5)))) : injectionSwitch)), log(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)), max(injectionSwitch.y, injectionSwitch.y)))), 0.0, 0.0, 0.0, 1.0, 1.0)), clamp(vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-827.143, 4.5)), clamp(_GLF_FUZZED(vec2(-827.143, 4.5)), _GLF_IDENTITY(_GLF_FUZZED(vec2(-827.143, 4.5)), clamp(_GLF_FUZZED(vec2(-827.143, 4.5)), _GLF_FUZZED(vec2(-827.143, 4.5)), _GLF_IDENTITY(_GLF_FUZZED(vec2(-827.143, 4.5)), (true ? _GLF_FUZZED(vec2(-827.143, 4.5)) : _GLF_FUZZED(vec2(458.801, -270.190)))))), _GLF_FUZZED(vec2(-827.143, 4.5)))) : injectionSwitch)), log(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)), max(injectionSwitch.y, injectionSwitch.y)))), 0.0, 0.0, 0.0, 1.0, 1.0)), _GLF_IDENTITY(vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-827.143, 4.5)), clamp(_GLF_FUZZED(vec2(-827.143, 4.5)), _GLF_IDENTITY(_GLF_FUZZED(vec2(-827.143, 4.5)), clamp(_GLF_FUZZED(vec2(-827.143, 4.5)), _GLF_FUZZED(vec2(-827.143, 4.5)), _GLF_IDENTITY(_GLF_FUZZED(vec2(-827.143, 4.5)), (true ? _GLF_FUZZED(vec2(-827.143, 4.5)) : _GLF_FUZZED(vec2(458.801, -270.190)))))), _GLF_FUZZED(vec2(-827.143, 4.5)))) : injectionSwitch)), log(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)), max(injectionSwitch.y, injectionSwitch.y)))), 0.0, 0.0, 0.0, 1.0, 1.0)), clamp(vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-827.143, 4.5)), clamp(_GLF_FUZZED(vec2(-827.143, 4.5)), _GLF_IDENTITY(_GLF_FUZZED(vec2(-827.143, 4.5)), clamp(_GLF_FUZZED(vec2(-827.143, 4.5)), _GLF_FUZZED(vec2(-827.143, 4.5)), _GLF_IDENTITY(_GLF_FUZZED(vec2(-827.143, 4.5)), (true ? _GLF_FUZZED(vec2(-827.143, 4.5)) : _GLF_FUZZED(vec2(458.801, -270.190)))))), _GLF_FUZZED(vec2(-827.143, 4.5)))) : injectionSwitch)), log(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)), max(injectionSwitch.y, injectionSwitch.y)))), 0.0, 0.0, 0.0, 1.0, 1.0)), vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-827.143, 4.5)), clamp(_GLF_FUZZED(vec2(-827.143, 4.5)), _GLF_IDENTITY(_GLF_FUZZED(vec2(-827.143, 4.5)), clamp(_GLF_FUZZED(vec2(-827.143, 4.5)), _GLF_FUZZED(vec2(-827.143, 4.5)), _GLF_IDENTITY(_GLF_FUZZED(vec2(-827.143, 4.5)), (true ? _GLF_FUZZED(vec2(-827.143, 4.5)) : _GLF_FUZZED(vec2(458.801, -270.190)))))), _GLF_FUZZED(vec2(-827.143, 4.5)))) : injectionSwitch)), log(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)), max(injectionSwitch.y, injectionSwitch.y)))), 0.0, 0.0, 0.0, 1.0, 1.0)), vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-827.143, 4.5)), clamp(_GLF_FUZZED(vec2(-827.143, 4.5)), _GLF_IDENTITY(_GLF_FUZZED(vec2(-827.143, 4.5)), clamp(_GLF_FUZZED(vec2(-827.143, 4.5)), _GLF_FUZZED(vec2(-827.143, 4.5)), _GLF_IDENTITY(_GLF_FUZZED(vec2(-827.143, 4.5)), (true ? _GLF_FUZZED(vec2(-827.143, 4.5)) : _GLF_FUZZED(vec2(458.801, -270.190)))))), _GLF_FUZZED(vec2(-827.143, 4.5)))) : injectionSwitch)), log(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)), max(injectionSwitch.y, injectionSwitch.y)))), 0.0, 0.0, 0.0, 1.0, 1.0)))), vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-827.143, 4.5)), clamp(_GLF_FUZZED(vec2(-827.143, 4.5)), _GLF_IDENTITY(_GLF_FUZZED(vec2(-827.143, 4.5)), clamp(_GLF_FUZZED(vec2(-827.143, 4.5)), _GLF_FUZZED(vec2(-827.143, 4.5)), _GLF_IDENTITY(_GLF_FUZZED(vec2(-827.143, 4.5)), (true ? _GLF_FUZZED(vec2(-827.143, 4.5)) : _GLF_FUZZED(vec2(458.801, -270.190)))))), _GLF_FUZZED(vec2(-827.143, 4.5)))) : injectionSwitch)), log(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)), max(injectionSwitch.y, injectionSwitch.y)))), 0.0, 0.0, 0.0, 1.0, 1.0)))))))[0], min((vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-827.143, 4.5)), max(_GLF_FUZZED(vec2(-827.143, 4.5)), _GLF_IDENTITY(_GLF_FUZZED(vec2(-827.143, 4.5)), (_GLF_FUZZED(vec2(-827.143, 4.5))) + abs(vec2(0.0, 0.0))))) : injectionSwitch)), log(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), 0.0, 0.0, 0.0, 1.0, 1.0)))[0], (vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-827.143, 4.5)) : injectionSwitch)), log(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), 0.0, 0.0, 0.0, 1.0, 1.0)))[0])))), (vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(-827.143, 4.5), (false ? _GLF_FUZZED(injectionSwitch) : vec2(-827.143, 4.5)))) : injectionSwitch)), log(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), 0.0, 0.0, 0.0, 1.0, 1.0)))[0])), _GLF_IDENTITY((vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-827.143, 4.5)) : injectionSwitch)), log(_GLF_ONE(1.0, injectionSwitch.y)), 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(3.4) : _GLF_IDENTITY(0.0, _GLF_IDENTITY(max(0.0, 0.0), float(vec2(max(0.0, 0.0), 1.0)))))), 0.0, 1.0, 1.0)))[1], mix(float((vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-827.143, 4.5)) : injectionSwitch)), log(_GLF_ONE(1.0, injectionSwitch.y)), 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(3.4) : _GLF_IDENTITY(0.0, _GLF_IDENTITY(max(0.0, 0.0), float(vec2(max(0.0, 0.0), 1.0)))))), 0.0, 1.0, 1.0)))[1]), float(_GLF_FUZZED(-3.1)), bool(false)))), vec2(_GLF_FUZZED(3.7), _GLF_FUZZED(_GLF_IDENTITY(vec4(1.6, 568.521, -1771.5533, -63.24), mix(vec4((vec4(1.6, 568.521, -1771.5533, -63.24))[0], (vec4(1.6, 568.521, -1771.5533, -63.24))[1], (vec4(1.6, 568.521, -1771.5533, -63.24))[2], (vec4(1.6, _GLF_IDENTITY(568.521, clamp(568.521, 568.521, 568.521)), -1771.5533, -63.24))[3]), vec4(_GLF_FUZZED(-9477.3528), _GLF_FUZZED(vec3(-5.6, 467.996, 1532.9478).b), _GLF_FUZZED(7.1), _GLF_FUZZED((83.04 / 8.1))), bvec4(false, false, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))).s)), bvec2(false, _GLF_IDENTITY(false, ! (! (false))))))) + vec2(0.0, 0.0)))) - vec2(0.0, 0.0)))))[1]), vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[0], float(vec2((injectionSwitch)[_GLF_IDENTITY(0, min(0, 0))], 0.0))), _GLF_FUZZED(-1.3)), bvec2(true, _GLF_IDENTITY(false, (false) || false)))).y))))
            {
             do
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) && true))))), false)))))
              {
               do
                {
                 barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               barrier();
              }
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
            }
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, true))))))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
          }
         else
          {
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, true, false)))));
    }
   else
    {
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false)), (bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false))) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false)), (bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false))) && true)), (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false)), (bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false))) && true)), ! (! (! (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false)), (bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false))) && true)))))) && true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! (! ((false))))) || false)), bool(bvec3(false, true, false))), false)), (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true)))), bool(bvec3(false, true, false))), false))) || false), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), bool(bvec4(bool(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), true, true, true)))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, false))), bvec3(bvec3(bvec3(bvec3(bvec3(false, true, false)))))))))), bool(bvec4(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(false, true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, false))), bvec3(bvec4(bvec3(bvec3(bvec3(false, true, false))), true))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(false, true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, false))), bvec3(bvec4(bvec3(bvec3(bvec3(false, true, false))), true))))), false)))))))), true, true, true))))) || false)), false), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (_GLF_IDENTITY(bool(bvec3(false, true, false)), false || (bool(bvec3(false, true, false))))) && true)), false), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), bvec3(bvec4(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), true)))))))), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) && true)), false), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false || (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))), false), false)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), bvec3(bvec4(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), true)))))))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) && true)), false), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), bvec3(bvec4(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), true)))))))), true)), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) && true)), false), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), bvec3(bvec4(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), true)))))))), true))), bvec3(bvec4(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) && true)), false), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), bvec3(bvec4(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), true)))))))), true))), false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) && true)), false), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), bvec3(bvec4(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), true)))))))), true))), bvec3(bvec4(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) && true)), false), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), bvec3(bvec4(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), true)))))))), true))), false))))))))))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false), bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false))))), false)))))) && true)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false)), (bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(false, false || (false))))), false))) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false)), (bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(false, bool(bvec3(false, true, true)))))), _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))) && true)), (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false)), (bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false))) && true)), ! (! (! (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false)), (bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false))) && _GLF_IDENTITY(true, false || (true)))))))) && true))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! (! ((false))))) || false)), bool(bvec3(false, true, false))), false)), (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (_GLF_IDENTITY(false, (false) && true)))))), bool(bvec3(false, true, false))), false))) || false), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), bool(bvec4(bool(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), true, true, true)))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, false))), bvec3(bvec3(bvec3(bvec3(bvec3(false, _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))))), bool(bvec4(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(false, true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, false))), bvec3(bvec4(bvec3(bvec3(bvec3(false, true, false))), true))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(false, true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, false))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(false, true, false))), true)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(bvec3(false, true, false))), true)), false)))))), false)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(false, true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, false))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(false, true, false))), true)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(bvec3(false, true, false))), true)), false)))))), false)), true))))))))), true, true, true))))) || false)), false), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (_GLF_IDENTITY(bool(bvec3(false, true, false)), false || (bool(bvec3(false, true, false))))) && true)), false), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), bvec3(bvec4(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), true)))))))), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) && true)), false), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false || (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false || (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))), false), true))), false)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), bvec3(bvec4(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), true)))))))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(true, ! (! (true))), false)), (bool(bvec3(false, true, false))) && true)), false), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), bvec3(bvec4(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), true)))))))), true)), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) && true)), false), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), bvec3(bvec4(bvec3(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false || (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))), false), false)), true)))))))), true))), bvec3(bvec4(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), _GLF_IDENTITY((bool(bvec3(false, true, false))) && true, ((bool(bvec3(false, true, false))) && true) && true))), false), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), bvec3(bvec4(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), true)))))))), true))), false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, true, false)), _GLF_IDENTITY(bool(bvec4(bool(bvec3(false, true, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec4(bool(bvec3(false, true, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (bool(bvec3(false, true, false))) && true)), false), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), bvec3(bvec4(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), true)))))))), true))), bvec3(bvec4(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) && true)), false), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(false, (false) && true)))), false), false)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), bvec3(bvec4(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), true)))))))), true))), false))))))))))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false), bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false))))), false)))))) && true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! (! ((false))))) || false)), bool(bvec3(false, true, false))), false)), (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (_GLF_IDENTITY(false, (false) && true)))))), bool(bvec3(false, true, false))), false))) || false), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), bool(bvec4(bool(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), true, true, true)))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, false))), bvec3(bvec3(bvec3(bvec3(bvec3(false, _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))))), bool(bvec4(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(false, true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, false))), bvec3(bvec4(bvec3(bvec3(bvec3(false, true, false))), true))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(false, true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, false))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(false, true, false))), true)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(bvec3(false, true, false))), true)), false)))))), false)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(false, true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, false))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(false, true, false))), true)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(bvec3(false, true, false))), true)), false)))))), false)), true))))))))), true, true, true))))) || false)), false), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (_GLF_IDENTITY(bool(bvec3(false, true, false)), false || (bool(bvec3(false, true, false))))) && true)), false), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), bvec3(bvec4(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), true)))))))), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) && true)), false), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false || (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false || (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))), false), true))), false)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), bvec3(bvec4(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), true)))))))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(true, ! (! (true))), false)), (bool(bvec3(false, true, false))) && true)), false), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), bvec3(bvec4(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), true)))))))), true)), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) && true)), false), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), bvec3(bvec4(bvec3(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false || (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))), false), false)), true)))))))), true))), bvec3(bvec4(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), _GLF_IDENTITY((bool(bvec3(false, true, false))) && true, ((bool(bvec3(false, true, false))) && true) && true))), false), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), bvec3(bvec4(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), true)))))))), true))), false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, true, false)), _GLF_IDENTITY(bool(bvec4(bool(bvec3(false, true, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec4(bool(bvec3(false, true, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (bool(bvec3(false, true, false))) && true)), false), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), bvec3(bvec4(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), true)))))))), true))), bvec3(bvec4(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) && true)), false), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(false, (false) && true)))), false), false)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), bvec3(bvec4(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), true)))))))), true))), false))))))))))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false), bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false))))), false)))))) && true)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! (! ((false))))) || false)), bool(bvec3(false, true, false))), false)), (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (_GLF_IDENTITY(false, (false) && true)))))), bool(bvec3(false, true, false))), false))) || false), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), bool(bvec4(bool(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), true, true, true)))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, false))), bvec3(bvec3(bvec3(bvec3(bvec3(false, _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))))), bool(bvec4(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(false, true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, false))), bvec3(bvec4(bvec3(bvec3(bvec3(false, true, false))), true))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(false, true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, false))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(false, true, false))), true)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(bvec3(false, true, false))), true)), false)))))), false)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(false, true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, false))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(false, true, false))), true)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(bvec3(false, true, false))), true)), false)))))), false)), true))))))))), true, true, true))))) || false)), false), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (_GLF_IDENTITY(bool(bvec3(false, true, false)), false || (bool(bvec3(false, true, false))))) && true)), false), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), bvec3(bvec4(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), true)))))))), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) && true)), false), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false || (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false || (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))), false), true))), false)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), bvec3(bvec4(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), true)))))))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(true, ! (! (true))), false)), (bool(bvec3(false, true, false))) && true)), false), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), bvec3(bvec4(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), true)))))))), true)), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) && true)), false), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), bvec3(bvec4(bvec3(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false || (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))), false), false)), true)))))))), true))), bvec3(bvec4(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), _GLF_IDENTITY((bool(bvec3(false, true, false))) && true, ((bool(bvec3(false, true, false))) && true) && true))), false), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), bvec3(bvec4(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), true)))))))), true))), false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, true, false)), _GLF_IDENTITY(bool(bvec4(bool(bvec3(false, true, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec4(bool(bvec3(false, true, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (bool(bvec3(false, true, false))) && true)), false), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), bvec3(bvec4(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), true)))))))), true))), bvec3(bvec4(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) && true)), false), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(false, (false) && true)))), false), false)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), bvec3(bvec4(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), true)))))))), true))), false))))))))))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false), bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false))))), false)))))) && true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, bool(bvec2(true, false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! (! ((false))))) || false)), bool(bvec3(false, true, false))), false)), (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (_GLF_IDENTITY(false, (false) && true)))))), bool(bvec3(false, true, false))), false))) || false), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), bool(bvec4(bool(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), true, true, true)))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, false))), bvec3(bvec3(bvec3(bvec3(bvec3(false, _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))))), bool(bvec4(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(false, true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, false))), bvec3(bvec4(bvec3(bvec3(bvec3(false, true, false))), true))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(false, true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, false))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(false, true, false))), true)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(bvec3(false, true, false))), true)), false)))))), false)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(false, true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, false))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(false, true, false))), true)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(bvec3(false, true, false))), true)), false)))))), false)), true))))))))), true, true, true))))) || false)), false), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (_GLF_IDENTITY(bool(bvec3(false, true, false)), false || (bool(bvec3(false, true, false))))) && true)), false), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), bvec3(bvec4(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), true)))))))), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) && true)), false), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false || (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false || (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))), false), true))), false)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), bvec3(bvec4(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), true)))))))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(true, ! (! (true))), false)), (bool(bvec3(false, true, false))) && true)), false), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), bvec3(bvec4(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), true)))))))), true)), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) && true)), false), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), bvec3(bvec4(bvec3(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false || (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))), false), false)), true)))))))), true))), bvec3(bvec4(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), _GLF_IDENTITY((bool(bvec3(false, true, false))) && true, ((bool(bvec3(false, true, false))) && true) && true))), false), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), bvec3(bvec4(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), true)))))))), true))), false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, true, false)), _GLF_IDENTITY(bool(bvec4(bool(bvec3(false, true, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec4(bool(bvec3(false, true, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (bool(bvec3(false, true, false))) && true)), false), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), bvec3(bvec4(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), true)))))))), true))), bvec3(bvec4(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) && true)), false), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(false, (false) && true)))), false), false)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), bvec3(bvec4(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), true)))))))), true))), false))))))))))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false), bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false))))), false)))))) && true)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! (! ((false))))) || false)), bool(bvec3(false, true, false))), false)), (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (_GLF_IDENTITY(false, (false) && true)))))), bool(bvec3(false, true, false))), false))) || false), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), bool(bvec4(bool(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), true, true, true)))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, false))), bvec3(bvec3(bvec3(bvec3(bvec3(false, _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))))), bool(bvec4(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(false, true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, false))), bvec3(bvec4(bvec3(bvec3(bvec3(false, true, false))), true))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(false, true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, false))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(false, true, false))), true)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(bvec3(false, true, false))), true)), false)))))), false)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(false, true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, false))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(false, true, false))), true)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(bvec3(false, true, false))), true)), false)))))), false)), true))))))))), true, true, true))))) || false)), false), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (_GLF_IDENTITY(bool(bvec3(false, true, false)), false || (bool(bvec3(false, true, false))))) && true)), false), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), bvec3(bvec4(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), true)))))))), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) && true)), false), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false || (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false || (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))), false), true))), false)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), bvec3(bvec4(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), true)))))))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(true, ! (! (true))), false)), (bool(bvec3(false, true, false))) && true)), false), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), bvec3(bvec4(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), true)))))))), true)), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) && true)), false), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), bvec3(bvec4(bvec3(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false || (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))), false), false)), true)))))))), true))), bvec3(bvec4(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), _GLF_IDENTITY((bool(bvec3(false, true, false))) && true, ((bool(bvec3(false, true, false))) && true) && true))), false), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), bvec3(bvec4(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), true)))))))), true))), false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, true, false)), _GLF_IDENTITY(bool(bvec4(bool(bvec3(false, true, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec4(bool(bvec3(false, true, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (bool(bvec3(false, true, false))) && true)), false), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), bvec3(bvec4(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), true)))))))), true))), bvec3(bvec4(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) && true)), false), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(false, (false) && true)))), false), false)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), bvec3(bvec4(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), true)))))))), true))), false))))))))))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false), bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false))))), false)))))) && true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, bool(bvec2(true, false)))))))), false || (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! (! ((false))))) || false)), bool(bvec3(false, true, false))), false)), (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (_GLF_IDENTITY(false, (false) && true)))))), bool(bvec3(false, true, false))), false))) || false), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), bool(bvec4(bool(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), true, true, true)))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, false))), bvec3(bvec3(bvec3(bvec3(bvec3(false, _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))))), bool(bvec4(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(false, true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, false))), bvec3(bvec4(bvec3(bvec3(bvec3(false, true, false))), true))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(false, true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, false))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(false, true, false))), true)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(bvec3(false, true, false))), true)), false)))))), false)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(false, true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, false))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(false, true, false))), true)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(bvec3(false, true, false))), true)), false)))))), false)), true))))))))), true, true, true))))) || false)), false), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (_GLF_IDENTITY(bool(bvec3(false, true, false)), false || (bool(bvec3(false, true, false))))) && true)), false), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), bvec3(bvec4(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), true)))))))), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) && true)), false), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false || (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false || (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))), false), true))), false)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), bvec3(bvec4(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), true)))))))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(true, ! (! (true))), false)), (bool(bvec3(false, true, false))) && true)), false), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), bvec3(bvec4(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), true)))))))), true)), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) && true)), false), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), bvec3(bvec4(bvec3(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false || (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))), false), false)), true)))))))), true))), bvec3(bvec4(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), _GLF_IDENTITY((bool(bvec3(false, true, false))) && true, ((bool(bvec3(false, true, false))) && true) && true))), false), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), bvec3(bvec4(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), true)))))))), true))), false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, true, false)), _GLF_IDENTITY(bool(bvec4(bool(bvec3(false, true, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec4(bool(bvec3(false, true, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (bool(bvec3(false, true, false))) && true)), false), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), bvec3(bvec4(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), true)))))))), true))), bvec3(bvec4(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) && true)), false), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(false, (false) && true)))), false), false)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), bvec3(bvec4(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), true)))))))), true))), false))))))))))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false), bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false))))), false)))))) && true)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! (! ((false))))) || false)), bool(bvec3(false, true, false))), false)), (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (_GLF_IDENTITY(false, (false) && true)))))), bool(bvec3(false, true, false))), false))) || false), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), bool(bvec4(bool(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), true, true, true)))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, false))), bvec3(bvec3(bvec3(bvec3(bvec3(false, _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))))), bool(bvec4(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(false, true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, false))), bvec3(bvec4(bvec3(bvec3(bvec3(false, true, false))), true))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(false, true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, false))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(false, true, false))), true)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(bvec3(false, true, false))), true)), false)))))), false)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(false, true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, false))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(false, true, false))), true)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(bvec3(false, true, false))), true)), false)))))), false)), true))))))))), true, true, true))))) || false)), false), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (_GLF_IDENTITY(bool(bvec3(false, true, false)), false || (bool(bvec3(false, true, false))))) && true)), false), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), bvec3(bvec4(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), true)))))))), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) && true)), false), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false || (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false || (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))), false), true))), false)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), bvec3(bvec4(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), true)))))))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(true, ! (! (true))), false)), (bool(bvec3(false, true, false))) && true)), false), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), bvec3(bvec4(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), true)))))))), true)), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) && true)), false), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), bvec3(bvec4(bvec3(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false || (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))), false), false)), true)))))))), true))), bvec3(bvec4(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), _GLF_IDENTITY((bool(bvec3(false, true, false))) && true, ((bool(bvec3(false, true, false))) && true) && true))), false), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), bvec3(bvec4(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), true)))))))), true))), false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, true, false)), _GLF_IDENTITY(bool(bvec4(bool(bvec3(false, true, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec4(bool(bvec3(false, true, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (bool(bvec3(false, true, false))) && true)), false), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), bvec3(bvec4(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), true)))))))), true))), bvec3(bvec4(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) && true)), false), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(false, (false) && true)))), false), false)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), bvec3(bvec4(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), true)))))))), true))), false))))))))))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false), bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false))))), false)))))) && true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, bool(bvec2(true, false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! (! ((false))))) || false)), bool(bvec3(false, true, false))), false)), (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (_GLF_IDENTITY(false, (false) && true)))))), bool(bvec3(false, true, false))), false))) || false), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), bool(bvec4(bool(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), true, true, true)))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, false))), bvec3(bvec3(bvec3(bvec3(bvec3(false, _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))))), bool(bvec4(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(false, true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, false))), bvec3(bvec4(bvec3(bvec3(bvec3(false, true, false))), true))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(false, true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, false))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(false, true, false))), true)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(bvec3(false, true, false))), true)), false)))))), false)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(false, true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, false))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(false, true, false))), true)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(bvec3(false, true, false))), true)), false)))))), false)), true))))))))), true, true, true))))) || false)), false), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (_GLF_IDENTITY(bool(bvec3(false, true, false)), false || (bool(bvec3(false, true, false))))) && true)), false), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), bvec3(bvec4(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), true)))))))), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) && true)), false), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false || (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false || (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))), false), true))), false)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), bvec3(bvec4(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), true)))))))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(true, ! (! (true))), false)), (bool(bvec3(false, true, false))) && true)), false), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), bvec3(bvec4(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), true)))))))), true)), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) && true)), false), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), bvec3(bvec4(bvec3(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false || (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))), false), false)), true)))))))), true))), bvec3(bvec4(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), _GLF_IDENTITY((bool(bvec3(false, true, false))) && true, ((bool(bvec3(false, true, false))) && true) && true))), false), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), bvec3(bvec4(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), true)))))))), true))), false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, true, false)), _GLF_IDENTITY(bool(bvec4(bool(bvec3(false, true, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec4(bool(bvec3(false, true, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (bool(bvec3(false, true, false))) && true)), false), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), bvec3(bvec4(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), true)))))))), true))), bvec3(bvec4(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) && true)), false), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(false, (false) && true)))), false), false)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), bvec3(bvec4(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), true)))))))), true))), false))))))))))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false), bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false))))), false)))))) && true)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! (! ((false))))) || false)), bool(bvec3(false, true, false))), false)), (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (_GLF_IDENTITY(false, (false) && true)))))), bool(bvec3(false, true, false))), false))) || false), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), bool(bvec4(bool(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), true, true, true)))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, false))), bvec3(bvec3(bvec3(bvec3(bvec3(false, _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))))), bool(bvec4(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(false, true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, false))), bvec3(bvec4(bvec3(bvec3(bvec3(false, true, false))), true))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(false, true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, false))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(false, true, false))), true)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(bvec3(false, true, false))), true)), false)))))), false)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(false, true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, false))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(false, true, false))), true)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(bvec3(false, true, false))), true)), false)))))), false)), true))))))))), true, true, true))))) || false)), false), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (_GLF_IDENTITY(bool(bvec3(false, true, false)), false || (bool(bvec3(false, true, false))))) && true)), false), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), bvec3(bvec4(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), true)))))))), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) && true)), false), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false || (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false || (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))), false), true))), false)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), bvec3(bvec4(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), true)))))))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(true, ! (! (true))), false)), (bool(bvec3(false, true, false))) && true)), false), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), bvec3(bvec4(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), true)))))))), true)), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) && true)), false), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), bvec3(bvec4(bvec3(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false || (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))), false), false)), true)))))))), true))), bvec3(bvec4(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), _GLF_IDENTITY((bool(bvec3(false, true, false))) && true, ((bool(bvec3(false, true, false))) && true) && true))), false), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), bvec3(bvec4(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), true)))))))), true))), false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, true, false)), _GLF_IDENTITY(bool(bvec4(bool(bvec3(false, true, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec4(bool(bvec3(false, true, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (bool(bvec3(false, true, false))) && true)), false), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), bvec3(bvec4(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), true)))))))), true))), bvec3(bvec4(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) && true)), false), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(false, (false) && true)))), false), false)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), bvec3(bvec4(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)), true)))))))), true))), false))))))))))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false), bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false))))), false)))))) && true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, bool(bvec2(true, false))))))))))))))))), false, true))), (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, true))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), true && (bool(false))), (_GLF_IDENTITY(bool(false), false || (bool(false)))) && true)), (bool(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), false || (bool(false)))) && true))) && true)), bool(bvec3(false, true, false))), false)), (bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false))) && true), false || (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false) || (_GLF_IDENTITY(! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool((false))), (_GLF_IDENTITY(bool(bool((false))), false || (bool(bool((false)))))) && true)), (! (false)) && true)))))), false || (bool(false)))) && true)), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), false || (bool(false)))) && true)), bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), false || (bool(false)))) && true)), true), bvec2(_GLF_IDENTITY(bvec2(bvec2(bool(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), false || (bool(false)))) && true)), true)), bvec2(bvec4(bvec2(bvec2(bool(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), false || (bool(false)))) && true)), true)), true, true)))))))) && true)), bool(bvec3(false, true, false))), false)), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), _GLF_IDENTITY(false, true && (false)))))))) && true))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), true && (bool(false))), (_GLF_IDENTITY(bool(false), false || (bool(false)))) && true)), (bool(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), false || (bool(false)))) && true))) && true)), bool(bvec3(false, true, false))), false)), (bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false))) && true), false || (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false) || (_GLF_IDENTITY(! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool((false))), (_GLF_IDENTITY(bool(bool((false))), false || (bool(bool((false)))))) && true)), (! (false)) && true)))))), false || (bool(false)))) && true)), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), false || (bool(false)))) && true)), bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), false || (bool(false)))) && true)), true), bvec2(_GLF_IDENTITY(bvec2(bvec2(bool(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), false || (bool(false)))) && true)), true)), bvec2(bvec4(bvec2(bvec2(bool(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), false || (bool(false)))) && true)), true)), true, true)))))))) && true)), bool(bvec3(false, true, false))), false)), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), _GLF_IDENTITY(false, true && (false)))))))) && true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), true && (bool(false))), (_GLF_IDENTITY(bool(false), false || (bool(false)))) && true)), (bool(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), false || (bool(false)))) && true))) && true)), bool(bvec3(false, true, false))), false)), (bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false))) && true), false || (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false) || (_GLF_IDENTITY(! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool((false))), (_GLF_IDENTITY(bool(bool((false))), false || (bool(bool((false)))))) && true)), (! (false)) && true)))))), false || (bool(false)))) && true)), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), false || (bool(false)))) && true)), bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), false || (bool(false)))) && true)), true), bvec2(_GLF_IDENTITY(bvec2(bvec2(bool(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), false || (bool(false)))) && true)), true)), bvec2(bvec4(bvec2(bvec2(bool(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), false || (bool(false)))) && true)), true)), true, true)))))))) && true)), bool(bvec3(false, true, false))), false)), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), _GLF_IDENTITY(false, true && (false)))))))) && true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))) && true), ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))) && true), ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))), false), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false)))), false))))), (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec3(false, true, false)))))), false))), bvec2(bvec3(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bvec3(false, true, false))), (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))) && true), ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))), false))), true)))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)), false)))), (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec3(false, true, false))), false))) || false), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, true, false)), (bool(bvec4(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(bvec2(_GLF_IDENTITY(! (false), bool(bvec4(! (false), _GLF_IDENTITY(false, true && (false)), false, true))), false)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(bvec2(_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, false, true))), false)))), bool(bvec4((_GLF_IDENTITY(! (false), bool(bvec2(_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, false, true))), false)))), true, true, false)))))), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), true, false))) || false)), bool(bvec3(false, true, false))), false), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, bool(bvec2(true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true, true)))) || false)), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true, true)))) || false))), ! (! (! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true, true)))) || false))))))))))))), false))), false), _GLF_IDENTITY(false, false || (false))), bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), ! (! (! _GLF_IDENTITY((true), bool(bvec4((true), true, false, false)))))), ! (! (! (true)))))), ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), false))), false), false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false, true))), false))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false)))))))), false))))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), false, true, false)), (bool(bvec4(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(bvec2(_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, false, true))), false)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, false, true))), false || (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, false, true))), (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, false, true))), ! (! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, false, true))))))) && true))), false)))), bool(bvec4((_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, false, true))), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, false, true))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, false, true))), false), true, true))), true, false)))))), true, true, false)))))), false, true, false))) || false)), bool(bvec3(false, true, false))), false), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, bool(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false))), false), _GLF_IDENTITY(false, false || (false))), bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false))))), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), false))), false), false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), _GLF_IDENTITY(false, ! (! (false)))), false, true))), false))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))) || false)))), false), false)))))))), false)), bvec2(bvec2(bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), false))), false), false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), _GLF_IDENTITY(false, ! (! (false)))), false, true))), false))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))) || false)))), false), false)))))))), false)))))))))))) && true))))), false, true)))) || false), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)) || false))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)), ! (! (bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)))))), (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
            {
             barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 barrier();
                }
              }
            }
          }
        }
      }
     else
      {
      }
     atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) | (next_virtual_gid)), max(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) | (next_virtual_gid)), _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) | (next_virtual_gid))))], uint(1), 4, 64, 4);
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, true, true)), true && (bool(bvec4(_GLF_DEAD(false), _GLF_IDENTITY(false, (false) && true), true, true)))))) && true), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)) || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, true, true)), true && (bool(bvec4(_GLF_DEAD(false), _GLF_IDENTITY(false, (false) && true), true, true))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, true, true)), true && (bool(bvec4(_GLF_DEAD(false), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true), true, true))))))))) && true))))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   do
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       subgroupBarrier();
      }
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = (1 | (1 | 1)); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
        {
         barrier();
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec4(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0) : _GLF_FUZZED(uintBitsToFloat(subgroup_local_id))))), _GLF_IDENTITY(true, ! (! (true))) && (! (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0) : _GLF_FUZZED(uintBitsToFloat(subgroup_local_id)), 1.0 * (_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0) : _GLF_FUZZED(uintBitsToFloat(subgroup_local_id)), max(true ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0) : _GLF_FUZZED(uintBitsToFloat(subgroup_local_id)), true ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0) : _GLF_FUZZED(uintBitsToFloat(subgroup_local_id)))))))), (_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0) : _GLF_FUZZED(uintBitsToFloat(subgroup_local_id)), 1.0 * (_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0) : _GLF_FUZZED(uintBitsToFloat(subgroup_local_id)), max(_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0) : _GLF_FUZZED(uintBitsToFloat(subgroup_local_id)), float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0) : _GLF_FUZZED(uintBitsToFloat(subgroup_local_id)), clamp(true ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0) : _GLF_FUZZED(uintBitsToFloat(subgroup_local_id)), true ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0) : _GLF_FUZZED(uintBitsToFloat(subgroup_local_id)), _GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0) : _GLF_FUZZED(uintBitsToFloat(subgroup_local_id)), min(true ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0) : _GLF_FUZZED(uintBitsToFloat(subgroup_local_id)), true ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0) : _GLF_FUZZED(uintBitsToFloat(subgroup_local_id)))))), _GLF_IDENTITY(abs(1.0), mix(float(_GLF_FUZZED(61.47)), float(abs(1.0)), bool(true))), 0.0), max(vec3(_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0) : _GLF_FUZZED(uintBitsToFloat(subgroup_local_id)), clamp(true ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0) : _GLF_FUZZED(uintBitsToFloat(subgroup_local_id)), true ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0) : _GLF_FUZZED(uintBitsToFloat(subgroup_local_id)), _GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0) : _GLF_FUZZED(uintBitsToFloat(subgroup_local_id)), min(true ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0) : _GLF_FUZZED(uintBitsToFloat(subgroup_local_id)), true ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0) : _GLF_FUZZED(uintBitsToFloat(subgroup_local_id)))))), _GLF_IDENTITY(abs(1.0), mix(float(_GLF_FUZZED(61.47)), float(abs(1.0)), bool(true))), 0.0), vec3(_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0) : _GLF_FUZZED(uintBitsToFloat(subgroup_local_id)), clamp(true ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0) : _GLF_FUZZED(uintBitsToFloat(subgroup_local_id)), true ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0) : _GLF_FUZZED(uintBitsToFloat(subgroup_local_id)), _GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0) : _GLF_FUZZED(uintBitsToFloat(subgroup_local_id)), min(true ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0) : _GLF_FUZZED(uintBitsToFloat(subgroup_local_id)), true ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0) : _GLF_FUZZED(uintBitsToFloat(subgroup_local_id)))))), _GLF_IDENTITY(abs(1.0), mix(float(_GLF_FUZZED(61.47)), float(abs(1.0)), bool(true))), 0.0))))), true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(76.68, 35.86)))).y, (injectionSwitch.y) / 1.0) : _GLF_FUZZED(uintBitsToFloat(subgroup_local_id))))))))) / 1.0))))))))), false, true, false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), (bool(bvec3(false, false, true))) && true))))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
   do
    {
     if(_GLF_DEAD(false))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     do
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         for(int _injected_loop_counter = (-12958 & 0); _GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), _GLF_IDENTITY(false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)), ! (_GLF_IDENTITY(! (false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1))), ! (! (! (false || (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, 0 ^ (_injected_loop_counter)) < 1))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), _GLF_IDENTITY(false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)), ! (_GLF_IDENTITY(! (false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1))), ! (! (! (false || (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, 0 ^ (_injected_loop_counter)) < 1)))))))))), false || (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), _GLF_IDENTITY(false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)), ! (_GLF_IDENTITY(! (false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1))), ! (! (! (false || (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, 0 ^ (_injected_loop_counter)) < 1)))))))))))))); _injected_loop_counter ++)
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false)))))
              {
               for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                {
                 if(_GLF_DEAD(false))
                  {
                   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                    {
                     barrier();
                    }
                  }
                }
              }
             else
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
               else
                {
                }
               do
                {
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                  }
                 else
                  {
                   atomicStore(checker[virtual_gid], read, 4, 64, 4);
                  }
                }
               while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) && true));
               do
                {
                 for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _GLF_IDENTITY(_injected_loop_counter --, ~ (~ (_GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) / 1)))))
                  {
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     barrier();
                    }
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
               if(_GLF_DEAD(false))
                barrier();
              }
            }
           else
            {
            }
           if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 else
  {
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
