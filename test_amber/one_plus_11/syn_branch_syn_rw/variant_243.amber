#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_0 {
 int _f0;
 mat3 _f1;
 mat2x3 _f2;
 bvec3 _f3;
 uint virtual_gid;
 uvec2 _f4;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, false, true)), _GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_DEAD(false), false, false, true)), true)), false || (bool(bvec2(bool(bvec4(_GLF_DEAD(false), false, false, true)), true)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, min(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[_GLF_IDENTITY(1, (1) | (1))], (true ? _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize)))[1] : _GLF_FUZZED(subgroup_size))), gl_WorkGroupSize[2])), min(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[_GLF_IDENTITY(1, ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))) * (1))], (true ? _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize)))[1] : _GLF_FUZZED(subgroup_size))), gl_WorkGroupSize[2])), _GLF_IDENTITY(max(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (false ? _GLF_FUZZED((126157u + uvec3(17096u, 42213u, 82086u))) : gl_WorkGroupSize))[1], (true ? _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize)))[1] : _GLF_FUZZED(subgroup_size))), gl_WorkGroupSize[2])), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], (true ? _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize)))[1] : _GLF_FUZZED(subgroup_size))), gl_WorkGroupSize[2]))), (max(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], (_GLF_IDENTITY(true ? _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize)))[1] : _GLF_FUZZED(subgroup_size), uint(_GLF_IDENTITY(uvec4(true ? _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize)))[1] : _GLF_FUZZED(subgroup_size), uint(_GLF_ONE(1.0, injectionSwitch.y)), ((0u << _GLF_IDENTITY(uint(4u), uint(4u))) | 1u), 0u), (true ? uvec4(true ? _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize)))[1] : _GLF_FUZZED(subgroup_size), uint(_GLF_ONE(1.0, injectionSwitch.y)), ((0u << _GLF_IDENTITY(uint(4u), uint(4u))) | 1u), 0u) : _GLF_FUZZED(uvec4(55965u, 18541u, 169128u, 103072u)))))))), gl_WorkGroupSize[2])), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], (true ? _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize)))[1] : _GLF_FUZZED(subgroup_size))), gl_WorkGroupSize[2])))) | (max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], (true ? _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize)))[1] : _GLF_FUZZED(subgroup_size))), gl_WorkGroupSize[2])), (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], (true ? _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize)))[1] : _GLF_FUZZED(subgroup_size))), gl_WorkGroupSize[2]))) >> uvec3(0u, 0u, 0u)), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], (true ? _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize)))[1] : _GLF_FUZZED(subgroup_size))), _GLF_IDENTITY(gl_WorkGroupSize, clamp(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)), gl_WorkGroupSize, gl_WorkGroupSize))[2])))))), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 ^ (1))) ^ 0)], (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize)))[1], (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize)))[1]) << 0u) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))))), gl_WorkGroupSize[2])))), gl_WorkGroupSize)).x, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, min(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), uvec3(1u, 1u, 1u) * (uvec3(gl_WorkGroupSize)))))) << (uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | uvec3(0u, 0u, 0u))), uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), min(uvec3(gl_WorkGroupSize), uvec3(gl_WorkGroupSize)))))[1] : _GLF_FUZZED(subgroup_size))), gl_WorkGroupSize[2])), gl_WorkGroupSize)).x, min(_GLF_IDENTITY(gl_WorkGroupSize, min(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), uvec3(1u, 1u, 1u) * (uvec3(gl_WorkGroupSize)))))) << (uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | uvec3(0u, 0u, 0u))), uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), min(uvec3(gl_WorkGroupSize), uvec3(gl_WorkGroupSize)))))[1] : _GLF_FUZZED(subgroup_size))), gl_WorkGroupSize[2])), gl_WorkGroupSize)).x, _GLF_IDENTITY(gl_WorkGroupSize, min(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), uvec3(1u, 1u, 1u) * (uvec3(gl_WorkGroupSize)))))) << (uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | uvec3(0u, 0u, 0u))), uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), min(uvec3(gl_WorkGroupSize), uvec3(gl_WorkGroupSize)))))[1] : _GLF_FUZZED(subgroup_size))), gl_WorkGroupSize[2])), gl_WorkGroupSize)).x))) / 1u, min((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, min(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), uvec3(1u, 1u, 1u) * (uvec3(gl_WorkGroupSize)))))) << (uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | uvec3(0u, 0u, 0u))), uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), min(uvec3(gl_WorkGroupSize), uvec3(gl_WorkGroupSize)))))[1] : _GLF_FUZZED(subgroup_size))), gl_WorkGroupSize[2])), gl_WorkGroupSize)).x, min(_GLF_IDENTITY(gl_WorkGroupSize, min(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), uvec3(1u, 1u, 1u) * (uvec3(gl_WorkGroupSize)))))) << (uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | uvec3(0u, 0u, 0u))), uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), min(uvec3(gl_WorkGroupSize), uvec3(gl_WorkGroupSize)))))[1] : _GLF_FUZZED(subgroup_size))), gl_WorkGroupSize[2])), gl_WorkGroupSize)).x, _GLF_IDENTITY(gl_WorkGroupSize, min(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), uvec3(1u, 1u, 1u) * (uvec3(gl_WorkGroupSize)))))) << (uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | uvec3(0u, 0u, 0u))), uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), min(uvec3(gl_WorkGroupSize), uvec3(gl_WorkGroupSize)))))[1] : _GLF_FUZZED(subgroup_size))), gl_WorkGroupSize[2])), gl_WorkGroupSize)).x))) / 1u, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, min(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), uvec3(1u, 1u, 1u) * (uvec3(gl_WorkGroupSize)))))) << (uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | uvec3(0u, 0u, 0u))), uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), min(uvec3(gl_WorkGroupSize), uvec3(gl_WorkGroupSize)))))[1] : _GLF_FUZZED(subgroup_size))), gl_WorkGroupSize[2])), gl_WorkGroupSize)).x, min(_GLF_IDENTITY(gl_WorkGroupSize, min(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), uvec3(1u, 1u, 1u) * (uvec3(gl_WorkGroupSize)))))) << (uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | uvec3(0u, 0u, 0u))), uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), min(uvec3(gl_WorkGroupSize), uvec3(gl_WorkGroupSize)))))[1] : _GLF_FUZZED(subgroup_size))), gl_WorkGroupSize[2])), gl_WorkGroupSize)).x, _GLF_IDENTITY(gl_WorkGroupSize, min(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), uvec3(1u, 1u, 1u) * (uvec3(gl_WorkGroupSize)))))) << (uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | uvec3(0u, 0u, 0u))), uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), min(uvec3(gl_WorkGroupSize), uvec3(gl_WorkGroupSize)))))[1] : _GLF_FUZZED(subgroup_size))), gl_WorkGroupSize[2])), gl_WorkGroupSize)).x))) / 1u))), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(0u, 0u, 0u)), uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], (true ? _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize)))[1] : _GLF_FUZZED(subgroup_size))), gl_WorkGroupSize[2])), min(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], (_GLF_IDENTITY(true, (true) && true) ? _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))[1], gl_WorkGroupSize[2]))) + uvec3(0u, 0u, 0u)))))[1] : _GLF_FUZZED(subgroup_size))), gl_WorkGroupSize[2])), max(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], (true ? _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize)))[1] : _GLF_FUZZED(subgroup_size))), _GLF_IDENTITY(gl_WorkGroupSize, (true ? gl_WorkGroupSize : _GLF_FUZZED(uvec3(175681u, 179268u, 76856u))))[2]), (true ? _GLF_IDENTITY(uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], (true ? _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize)))[1] : _GLF_FUZZED(subgroup_size))), _GLF_IDENTITY(gl_WorkGroupSize, (true ? gl_WorkGroupSize : _GLF_FUZZED(uvec3(175681u, 179268u, 76856u))))[2]), (_GLF_IDENTITY(uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], (true ? _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize)))[1] : _GLF_FUZZED(subgroup_size))), _GLF_IDENTITY(gl_WorkGroupSize, (true ? gl_WorkGroupSize : _GLF_FUZZED(uvec3(175681u, 179268u, 76856u))))[2]), max(uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], (true ? _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize)))[1] : _GLF_FUZZED(subgroup_size))), _GLF_IDENTITY(gl_WorkGroupSize, (true ? gl_WorkGroupSize : _GLF_FUZZED(uvec3(175681u, 179268u, 76856u))))[2]), uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], (true ? _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize)))[1] : _GLF_FUZZED(subgroup_size))), _GLF_IDENTITY(gl_WorkGroupSize, (true ? gl_WorkGroupSize : _GLF_FUZZED(uvec3(175681u, 179268u, 76856u))))[2])))) - uvec3(0u, 0u, 0u)) : _GLF_FUZZED(uvec3(9685u, 116234u, 156572u)))), (uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], (true ? _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize)))[1] : _GLF_FUZZED(subgroup_size))), _GLF_IDENTITY(gl_WorkGroupSize, (true ? gl_WorkGroupSize : _GLF_FUZZED(uvec3(175681u, 179268u, 76856u))))[2])) ^ (uvec3(21200u, 153751u, 108036u) & (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(2u), uvec3(2u)))))), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], _GLF_IDENTITY((true ? _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize)))[1] : _GLF_FUZZED(subgroup_size)), ((true ? _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize)))[1] : _GLF_FUZZED(subgroup_size))) / 1u)), gl_WorkGroupSize[2])))), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], (true ? _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize)))[1] : _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), min(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size))))), gl_WorkGroupSize[2])))), gl_WorkGroupSize)).x, (_GLF_IDENTITY(gl_WorkGroupSize, min(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(gl_WorkGroupSize, ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(3u), uvec3(3u))) >> _GLF_IDENTITY(uvec3(3u), uvec3(3u))) * (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) + (gl_WorkGroupSize))))[0], _GLF_IDENTITY(gl_WorkGroupSize[1], (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), uvec3(1u, 1u, 1u) * (uvec3(gl_WorkGroupSize)))))) << (_GLF_IDENTITY(uvec3(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | uvec3(0u, 0u, 0u), (false ? _GLF_FUZZED(uvec3(subgroup_id, uvec2(183723u, 93714u))) : _GLF_IDENTITY(uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))) | uvec3(0u, 0u, 0u), min(uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | uvec3(0u, 0u, 0u), uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | uvec3(0u, 0u, 0u))))))), uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), min(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize)))))), uvec3(gl_WorkGroupSize)))))[1] : _GLF_FUZZED(subgroup_size))), gl_WorkGroupSize[2])), gl_WorkGroupSize)).x) / 1u), 0u, (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(uint(2u), uint(2u))) ^ 0u), _GLF_IDENTITY(uint(2u), uint(2u))), min(_GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(uint(2u), uint(2u))) ^ 0u), _GLF_IDENTITY(uint(2u), uint(2u))), (max(_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(uint(2u), uint(2u))) ^ 0u), _GLF_IDENTITY(uint(2u), uint(2u)))) << 0u), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(uint(2u), uint(2u))) ^ 0u), _GLF_IDENTITY(uint(2u), uint(2u))), (_GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(uint(2u), uint(2u))) ^ 0u), _GLF_IDENTITY(uint(2u), uint(2u))), 0u | (max(_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(uint(2u), uint(2u))) ^ 0u), _GLF_IDENTITY(uint(2u), uint(2u)))))) | 0u))))) / _GLF_IDENTITY(1u, (1u) << 0u))), _GLF_IDENTITY(1u, (1u) | (1u))), max(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, min(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], (true ? _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize)))[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) - 0)] : _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), (_GLF_FUZZED(subgroup_size)) * 1u))), gl_WorkGroupSize[2])), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, (false ? _GLF_FUZZED(uvec3(490u, 108781u, 187717u)) : gl_WorkGroupSize)), gl_WorkGroupSize)), uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) >> 0)], (true ? _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize)), (uvec3(uvec3(gl_WorkGroupSize))) | (uvec3(uvec3(gl_WorkGroupSize)))))[1] : _GLF_FUZZED(subgroup_size))), gl_WorkGroupSize[2])), max(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], (gl_WorkGroupSize[1]) / 1u), (true ? _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize)))[1] : _GLF_FUZZED(subgroup_size))), gl_WorkGroupSize[2])), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], (true ? _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize)))[1] : _GLF_FUZZED(subgroup_size))), gl_WorkGroupSize[_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED((72899 + -62274)))), 2))])))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], (true ? _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize)))[1] : _GLF_FUZZED(subgroup_size))), gl_WorkGroupSize[2])), max(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], (true ? _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize)))[1] : _GLF_FUZZED(subgroup_size))), gl_WorkGroupSize[2])), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], (true ? _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize)))[1] : _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)))), gl_WorkGroupSize[2])))))), gl_WorkGroupSize)).x, (_GLF_IDENTITY(gl_WorkGroupSize, min(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) | (gl_WorkGroupSize))[1], (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, (1u & 1u)))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? uvec3(gl_WorkGroupSize) : _GLF_FUZZED((uvec3(91090u, 38295u, 172573u) / subgroup_size)))), uvec3(1u, 1u, 1u) * (uvec3(gl_WorkGroupSize))))), uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? uvec3(gl_WorkGroupSize) : _GLF_FUZZED((uvec3(91090u, 38295u, 172573u) / subgroup_size)))), uvec3(1u, 1u, 1u) * (uvec3(gl_WorkGroupSize))))), (0u | 1u))))) << (uvec3(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch)).x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED(1.3)), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(true))), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))) | uvec3(0u, 0u, 0u))), uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), min(uvec3(gl_WorkGroupSize), uvec3(gl_WorkGroupSize)))))[1] : _GLF_FUZZED(subgroup_size))), gl_WorkGroupSize[2])), gl_WorkGroupSize)).x) / 1u), 0u, (0u << _GLF_IDENTITY(uint(2u), uint(2u))), 1u), uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, min(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], (true ? _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize)))[1] : _GLF_FUZZED(subgroup_size))), gl_WorkGroupSize[_GLF_IDENTITY(2, clamp(2, 2, 2))])), min(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], (true ? _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize)))[1] : _GLF_FUZZED(subgroup_size))), gl_WorkGroupSize[2])), max(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], (true ? _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) << uvec3(0u, 0u, 0u)))))[1] : _GLF_FUZZED(subgroup_size))), gl_WorkGroupSize[2])), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], (true ? _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize)))[1] : _GLF_FUZZED(subgroup_size))), gl_WorkGroupSize[2])))), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, _GLF_IDENTITY((0), ((0)) - int(_GLF_ZERO(0.0, injectionSwitch.x))) << (0 | 0))], _GLF_IDENTITY(gl_WorkGroupSize[1], (true ? _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize)))[1] : _GLF_FUZZED(subgroup_size))), gl_WorkGroupSize[2])))), gl_WorkGroupSize)).x, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, min(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], (true ? _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize)))[_GLF_IDENTITY(1, clamp(1, 1, 1))] : _GLF_FUZZED(subgroup_size))), gl_WorkGroupSize[_GLF_IDENTITY(2, clamp(2, 2, 2))])), min(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], (true ? _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize)))[1] : _GLF_FUZZED(subgroup_size))), gl_WorkGroupSize[2])), max(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], (true ? _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) << uvec3(0u, 0u, 0u)))))[1] : _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size)))) | 0u)))), gl_WorkGroupSize[2])), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], _GLF_IDENTITY(gl_WorkGroupSize[1], (true ? _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize)))[1] : _GLF_FUZZED(subgroup_size))), gl_WorkGroupSize[2])))), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, (0) << (0 | _GLF_IDENTITY(0, (0 | 0) | (0))))], _GLF_IDENTITY(gl_WorkGroupSize[1], (true ? _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize)))[1] : _GLF_FUZZED(subgroup_size))), gl_WorkGroupSize[2])))), gl_WorkGroupSize)).x, clamp(_GLF_IDENTITY(gl_WorkGroupSize, min(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, int(ivec2(0, 0))))))], _GLF_IDENTITY(gl_WorkGroupSize[1], (true ? _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize)))[1] : _GLF_FUZZED(subgroup_size))), gl_WorkGroupSize[_GLF_IDENTITY(2, clamp(2, 2, 2))])), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], (true ? _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize)))[1] : _GLF_FUZZED(subgroup_size))), gl_WorkGroupSize[2])), max(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], (true ? _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) << uvec3(0u, 0u, 0u)))))[1] : _GLF_FUZZED(subgroup_size))), gl_WorkGroupSize[2])), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], (true ? _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize)))[1] : _GLF_FUZZED(subgroup_size))), gl_WorkGroupSize[2])))), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, (0) << (0 | 0))], _GLF_IDENTITY(gl_WorkGroupSize[1], (true ? _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize)))[1] : _GLF_FUZZED(subgroup_size))), gl_WorkGroupSize[2]))), max(min(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], (true ? _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize)))[1] : _GLF_FUZZED(subgroup_size))), gl_WorkGroupSize[2])), max(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], (true ? _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) << uvec3(0u, 0u, 0u)))))[1] : _GLF_FUZZED(subgroup_size))), gl_WorkGroupSize[2])), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], (true ? _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize)))[1] : _GLF_FUZZED(subgroup_size))), gl_WorkGroupSize[2])))), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, (0) << (0 | 0))], _GLF_IDENTITY(gl_WorkGroupSize[1], (true ? _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize)))[1] : _GLF_FUZZED(subgroup_size))), gl_WorkGroupSize[2]))), min(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], (true ? _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize)))[1] : _GLF_FUZZED(subgroup_size))), gl_WorkGroupSize[2])), max(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], (true ? _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) << uvec3(0u, 0u, 0u)))))[1] : _GLF_FUZZED(subgroup_size))), gl_WorkGroupSize[2])), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], (true ? _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize)))[1] : _GLF_FUZZED(subgroup_size))), gl_WorkGroupSize[2])))), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, (0) << (0 | 0))], _GLF_IDENTITY(gl_WorkGroupSize[1], (true ? _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize)))[1] : _GLF_FUZZED(subgroup_size))), gl_WorkGroupSize[2])))))), gl_WorkGroupSize)).x, _GLF_IDENTITY(gl_WorkGroupSize, min(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], (true ? _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize)))[1] : _GLF_FUZZED(subgroup_size))), gl_WorkGroupSize[_GLF_IDENTITY(2, clamp(2, 2, 2))])), min(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))[0], _GLF_IDENTITY(gl_WorkGroupSize[1], (true ? _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize)))[1] : _GLF_FUZZED(subgroup_size))), _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | uvec3(0u, 0u, 0u))[2])), max(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize)))[0], _GLF_IDENTITY(gl_WorkGroupSize[1], (true ? _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) << uvec3(0u, 0u, 0u)))))[1] : _GLF_FUZZED(subgroup_size))), gl_WorkGroupSize[2])), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], (true ? _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize)))[1] : _GLF_FUZZED(subgroup_size))), gl_WorkGroupSize[2])))), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, (0) << (0 | 0))], _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], (true ? _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize)))[1] : _GLF_FUZZED(subgroup_size))), (_GLF_IDENTITY(gl_WorkGroupSize[1], (true ? _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize)))[1] : _GLF_FUZZED(subgroup_size)))) - (0u & 139237u)), gl_WorkGroupSize[2])))), gl_WorkGroupSize)).x, _GLF_IDENTITY(gl_WorkGroupSize, min(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], (true ? _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize)))[1] : _GLF_FUZZED(subgroup_size))), gl_WorkGroupSize[_GLF_IDENTITY(2, clamp(2, 2, 2))])), min(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, (0 << _GLF_IDENTITY(int(7), int(7))) | (0))], _GLF_IDENTITY(gl_WorkGroupSize[1], (true ? _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize)))[1] : _GLF_FUZZED(subgroup_size))), gl_WorkGroupSize[2])), max(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize))[1], uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize))[1], ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize))[1]), uint(uvec3(~ (_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize))[1]), 0u, 1u))))), 0u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u))), 1u), (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize))[1], ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize))[1]), uint(uvec3(~ (_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize))[1]), 0u, 1u))))), 0u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u))), 1u)) | (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize))[1], ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize))[1]), uint(uvec3(~ (_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize))[1]), 0u, 1u))))), 0u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(2u), uint(2u))), 1u))))), (true ? _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) << uvec3(0u, 0u, 0u)))))[1] : _GLF_FUZZED(subgroup_size))), gl_WorkGroupSize[2])), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], (true ? _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize)))[1] : _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), (_GLF_FUZZED(subgroup_size)) / 1u))), gl_WorkGroupSize[2])))), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, (0) << (0 | 0))], _GLF_IDENTITY(gl_WorkGroupSize[1], (true ? _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize)))[1] : _GLF_FUZZED(subgroup_size))), gl_WorkGroupSize[2])))), gl_WorkGroupSize)).x)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, min(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(uvec3(gl_WorkGroupSize), uvec3(uvec4(uvec3(gl_WorkGroupSize), 1u)))))))) << _GLF_IDENTITY((uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) + ((uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | uvec3(0u, 0u, 0u))))), uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), min(uvec3(gl_WorkGroupSize), uvec3(gl_WorkGroupSize)))))[_GLF_IDENTITY(_GLF_IDENTITY(1, int(int(1))), clamp(_GLF_IDENTITY(1, int(int(1))), _GLF_IDENTITY(_GLF_IDENTITY(1, int(int(1))), clamp(_GLF_IDENTITY(1, int(int(1))), _GLF_IDENTITY(1, int(int(1))), _GLF_IDENTITY(1, int(int(1))))), _GLF_IDENTITY(1, int(int(1)))))] : _GLF_FUZZED(subgroup_size))), gl_WorkGroupSize[2])), gl_WorkGroupSize)).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, min(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(uvec3(gl_WorkGroupSize), uvec3(uvec4(uvec3(gl_WorkGroupSize), 1u)))))))) << _GLF_IDENTITY((uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) + ((uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | uvec3(0u, 0u, 0u))))), uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), min(uvec3(gl_WorkGroupSize), uvec3(gl_WorkGroupSize)))))[_GLF_IDENTITY(_GLF_IDENTITY(1, int(int(1))), clamp(_GLF_IDENTITY(1, int(int(1))), _GLF_IDENTITY(_GLF_IDENTITY(1, int(int(1))), clamp(_GLF_IDENTITY(1, int(int(1))), _GLF_IDENTITY(1, int(int(1))), _GLF_IDENTITY(1, int(int(1))))), _GLF_IDENTITY(1, int(int(1)))))] : _GLF_FUZZED(subgroup_size))), gl_WorkGroupSize[2])), gl_WorkGroupSize)).x, (_GLF_IDENTITY(gl_WorkGroupSize, min(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(uvec3(gl_WorkGroupSize), uvec3(uvec4(uvec3(gl_WorkGroupSize), 1u)))))))) << _GLF_IDENTITY((uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) + ((uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | uvec3(0u, 0u, 0u))))), uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), min(uvec3(gl_WorkGroupSize), uvec3(gl_WorkGroupSize)))))[_GLF_IDENTITY(_GLF_IDENTITY(1, int(int(1))), clamp(_GLF_IDENTITY(1, int(int(1))), _GLF_IDENTITY(_GLF_IDENTITY(1, int(int(1))), clamp(_GLF_IDENTITY(1, int(int(1))), _GLF_IDENTITY(1, int(int(1))), _GLF_IDENTITY(1, int(int(1))))), _GLF_IDENTITY(1, int(int(1)))))] : _GLF_FUZZED(subgroup_size))), gl_WorkGroupSize[2])), gl_WorkGroupSize)).x) | (_GLF_IDENTITY(gl_WorkGroupSize, min(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(uvec3(gl_WorkGroupSize), uvec3(uvec4(uvec3(gl_WorkGroupSize), 1u)))))))) << _GLF_IDENTITY((uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) + ((uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | uvec3(0u, 0u, 0u))))), uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), min(uvec3(gl_WorkGroupSize), uvec3(gl_WorkGroupSize)))))[_GLF_IDENTITY(_GLF_IDENTITY(1, int(int(1))), clamp(_GLF_IDENTITY(1, int(int(1))), _GLF_IDENTITY(_GLF_IDENTITY(1, int(int(1))), clamp(_GLF_IDENTITY(1, int(int(1))), _GLF_IDENTITY(1, int(int(1))), _GLF_IDENTITY(1, int(int(1))))), _GLF_IDENTITY(1, int(int(1)))))] : _GLF_FUZZED(subgroup_size))), gl_WorkGroupSize[2])), gl_WorkGroupSize)).x)), _GLF_IDENTITY(gl_WorkGroupSize, min(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(uvec3(gl_WorkGroupSize), uvec3(uvec4(uvec3(gl_WorkGroupSize), 1u)))))))) << _GLF_IDENTITY((uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) + ((uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | uvec3(0u, 0u, 0u))))), uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), min(uvec3(gl_WorkGroupSize), uvec3(gl_WorkGroupSize)))))[_GLF_IDENTITY(_GLF_IDENTITY(1, int(int(1))), clamp(_GLF_IDENTITY(1, int(int(1))), _GLF_IDENTITY(_GLF_IDENTITY(1, int(int(1))), clamp(_GLF_IDENTITY(1, int(int(1))), _GLF_IDENTITY(1, int(int(1))), _GLF_IDENTITY(1, int(int(1))))), _GLF_IDENTITY(1, int(int(1)))))] : _GLF_FUZZED(subgroup_size))), gl_WorkGroupSize[2])), gl_WorkGroupSize)).x, _GLF_IDENTITY(gl_WorkGroupSize, min(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(uvec3(gl_WorkGroupSize), uvec3(uvec4(uvec3(gl_WorkGroupSize), 1u)))))))) << _GLF_IDENTITY((uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) + ((uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | uvec3(0u, 0u, 0u))))), uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), min(uvec3(gl_WorkGroupSize), uvec3(gl_WorkGroupSize)))))[_GLF_IDENTITY(_GLF_IDENTITY(1, int(int(1))), clamp(_GLF_IDENTITY(1, int(int(1))), _GLF_IDENTITY(_GLF_IDENTITY(1, int(int(1))), clamp(_GLF_IDENTITY(1, int(int(1))), _GLF_IDENTITY(1, int(int(1))), _GLF_IDENTITY(1, int(int(1))))), _GLF_IDENTITY(1, int(int(1)))))] : _GLF_FUZZED(subgroup_size))), gl_WorkGroupSize[2])), gl_WorkGroupSize)).x))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, min(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(uvec3(gl_WorkGroupSize), uvec3(uvec4(uvec3(gl_WorkGroupSize), 1u)))))))) << _GLF_IDENTITY((uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) + ((uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | uvec3(0u, 0u, 0u))))), uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), min(uvec3(gl_WorkGroupSize), uvec3(gl_WorkGroupSize)))))[_GLF_IDENTITY(_GLF_IDENTITY(1, int(int(1))), clamp(_GLF_IDENTITY(1, int(int(1))), _GLF_IDENTITY(_GLF_IDENTITY(1, int(int(1))), clamp(_GLF_IDENTITY(1, int(int(1))), _GLF_IDENTITY(1, int(int(1))), _GLF_IDENTITY(1, int(int(1))))), _GLF_IDENTITY(1, int(int(1)))))] : _GLF_FUZZED(subgroup_size))), gl_WorkGroupSize[2])), gl_WorkGroupSize)).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, min(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(uvec3(gl_WorkGroupSize), uvec3(uvec4(uvec3(gl_WorkGroupSize), 1u)))))))) << _GLF_IDENTITY((uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) + ((uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | uvec3(0u, 0u, 0u))))), uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), min(uvec3(gl_WorkGroupSize), uvec3(gl_WorkGroupSize)))))[_GLF_IDENTITY(_GLF_IDENTITY(1, int(int(1))), clamp(_GLF_IDENTITY(1, int(int(1))), _GLF_IDENTITY(_GLF_IDENTITY(1, int(int(1))), clamp(_GLF_IDENTITY(1, int(int(1))), _GLF_IDENTITY(1, int(int(1))), _GLF_IDENTITY(1, int(int(1))))), _GLF_IDENTITY(1, int(int(1)))))] : _GLF_FUZZED(subgroup_size))), gl_WorkGroupSize[2])), gl_WorkGroupSize)).x, (_GLF_IDENTITY(gl_WorkGroupSize, min(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(uvec3(gl_WorkGroupSize), uvec3(uvec4(uvec3(gl_WorkGroupSize), 1u)))))))) << _GLF_IDENTITY((uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) + ((uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | uvec3(0u, 0u, 0u))))), uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), min(uvec3(gl_WorkGroupSize), uvec3(gl_WorkGroupSize)))))[_GLF_IDENTITY(_GLF_IDENTITY(1, int(int(1))), clamp(_GLF_IDENTITY(1, int(int(1))), _GLF_IDENTITY(_GLF_IDENTITY(1, int(int(1))), clamp(_GLF_IDENTITY(1, int(int(1))), _GLF_IDENTITY(1, int(int(1))), _GLF_IDENTITY(1, int(int(1))))), _GLF_IDENTITY(1, int(int(1)))))] : _GLF_FUZZED(subgroup_size))), gl_WorkGroupSize[2])), gl_WorkGroupSize)).x) | (_GLF_IDENTITY(gl_WorkGroupSize, min(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(uvec3(gl_WorkGroupSize), uvec3(uvec4(uvec3(gl_WorkGroupSize), 1u)))))))) << _GLF_IDENTITY((uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) + ((uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | uvec3(0u, 0u, 0u))))), uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), min(uvec3(gl_WorkGroupSize), uvec3(gl_WorkGroupSize)))))[_GLF_IDENTITY(_GLF_IDENTITY(1, int(int(1))), clamp(_GLF_IDENTITY(1, int(int(1))), _GLF_IDENTITY(_GLF_IDENTITY(1, int(int(1))), clamp(_GLF_IDENTITY(1, int(int(1))), _GLF_IDENTITY(1, int(int(1))), _GLF_IDENTITY(1, int(int(1))))), _GLF_IDENTITY(1, int(int(1)))))] : _GLF_FUZZED(subgroup_size))), gl_WorkGroupSize[2])), gl_WorkGroupSize)).x)), _GLF_IDENTITY(gl_WorkGroupSize, min(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(uvec3(gl_WorkGroupSize), uvec3(uvec4(uvec3(gl_WorkGroupSize), 1u)))))))) << _GLF_IDENTITY((uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) + ((uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | uvec3(0u, 0u, 0u))))), uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), min(uvec3(gl_WorkGroupSize), uvec3(gl_WorkGroupSize)))))[_GLF_IDENTITY(_GLF_IDENTITY(1, int(int(1))), clamp(_GLF_IDENTITY(1, int(int(1))), _GLF_IDENTITY(_GLF_IDENTITY(1, int(int(1))), clamp(_GLF_IDENTITY(1, int(int(1))), _GLF_IDENTITY(1, int(int(1))), _GLF_IDENTITY(1, int(int(1))))), _GLF_IDENTITY(1, int(int(1)))))] : _GLF_FUZZED(subgroup_size))), gl_WorkGroupSize[2])), gl_WorkGroupSize)).x, _GLF_IDENTITY(gl_WorkGroupSize, min(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(uvec3(gl_WorkGroupSize), uvec3(uvec4(uvec3(gl_WorkGroupSize), 1u)))))))) << _GLF_IDENTITY((uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) + ((uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | uvec3(0u, 0u, 0u))))), uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), min(uvec3(gl_WorkGroupSize), uvec3(gl_WorkGroupSize)))))[_GLF_IDENTITY(_GLF_IDENTITY(1, int(int(1))), clamp(_GLF_IDENTITY(1, int(int(1))), _GLF_IDENTITY(_GLF_IDENTITY(1, int(int(1))), clamp(_GLF_IDENTITY(1, int(int(1))), _GLF_IDENTITY(1, int(int(1))), _GLF_IDENTITY(1, int(int(1))))), _GLF_IDENTITY(1, int(int(1)))))] : _GLF_FUZZED(subgroup_size))), gl_WorkGroupSize[2])), gl_WorkGroupSize)).x))), uint(uint((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, min(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(uvec3(gl_WorkGroupSize), uvec3(uvec4(uvec3(gl_WorkGroupSize), 1u)))))))) << _GLF_IDENTITY((uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) + ((uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | uvec3(0u, 0u, 0u))))), uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), min(uvec3(gl_WorkGroupSize), uvec3(gl_WorkGroupSize)))))[_GLF_IDENTITY(_GLF_IDENTITY(1, int(int(1))), clamp(_GLF_IDENTITY(1, int(int(1))), _GLF_IDENTITY(_GLF_IDENTITY(1, int(int(1))), clamp(_GLF_IDENTITY(1, int(int(1))), _GLF_IDENTITY(1, int(int(1))), _GLF_IDENTITY(1, int(int(1))))), _GLF_IDENTITY(1, int(int(1)))))] : _GLF_FUZZED(subgroup_size))), gl_WorkGroupSize[2])), gl_WorkGroupSize)).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, min(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(uvec3(gl_WorkGroupSize), uvec3(uvec4(uvec3(gl_WorkGroupSize), 1u)))))))) << _GLF_IDENTITY((uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) + ((uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | uvec3(0u, 0u, 0u))))), uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), min(uvec3(gl_WorkGroupSize), uvec3(gl_WorkGroupSize)))))[_GLF_IDENTITY(_GLF_IDENTITY(1, int(int(1))), clamp(_GLF_IDENTITY(1, int(int(1))), _GLF_IDENTITY(_GLF_IDENTITY(1, int(int(1))), clamp(_GLF_IDENTITY(1, int(int(1))), _GLF_IDENTITY(1, int(int(1))), _GLF_IDENTITY(1, int(int(1))))), _GLF_IDENTITY(1, int(int(1)))))] : _GLF_FUZZED(subgroup_size))), gl_WorkGroupSize[2])), gl_WorkGroupSize)).x, (_GLF_IDENTITY(gl_WorkGroupSize, min(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(uvec3(gl_WorkGroupSize), uvec3(uvec4(uvec3(gl_WorkGroupSize), 1u)))))))) << _GLF_IDENTITY((uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) + ((uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | uvec3(0u, 0u, 0u))))), uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), min(uvec3(gl_WorkGroupSize), uvec3(gl_WorkGroupSize)))))[_GLF_IDENTITY(_GLF_IDENTITY(1, int(int(1))), clamp(_GLF_IDENTITY(1, int(int(1))), _GLF_IDENTITY(_GLF_IDENTITY(1, int(int(1))), clamp(_GLF_IDENTITY(1, int(int(1))), _GLF_IDENTITY(1, int(int(1))), _GLF_IDENTITY(1, int(int(1))))), _GLF_IDENTITY(1, int(int(1)))))] : _GLF_FUZZED(subgroup_size))), gl_WorkGroupSize[2])), gl_WorkGroupSize)).x) | (_GLF_IDENTITY(gl_WorkGroupSize, min(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(uvec3(gl_WorkGroupSize), uvec3(uvec4(uvec3(gl_WorkGroupSize), 1u)))))))) << _GLF_IDENTITY((uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) + ((uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | uvec3(0u, 0u, 0u))))), uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), min(uvec3(gl_WorkGroupSize), uvec3(gl_WorkGroupSize)))))[_GLF_IDENTITY(_GLF_IDENTITY(1, int(int(1))), clamp(_GLF_IDENTITY(1, int(int(1))), _GLF_IDENTITY(_GLF_IDENTITY(1, int(int(1))), clamp(_GLF_IDENTITY(1, int(int(1))), _GLF_IDENTITY(1, int(int(1))), _GLF_IDENTITY(1, int(int(1))))), _GLF_IDENTITY(1, int(int(1)))))] : _GLF_FUZZED(subgroup_size))), gl_WorkGroupSize[2])), gl_WorkGroupSize)).x)), _GLF_IDENTITY(gl_WorkGroupSize, min(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(uvec3(gl_WorkGroupSize), uvec3(uvec4(uvec3(gl_WorkGroupSize), 1u)))))))) << _GLF_IDENTITY((uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) + ((uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | uvec3(0u, 0u, 0u))))), uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), min(uvec3(gl_WorkGroupSize), uvec3(gl_WorkGroupSize)))))[_GLF_IDENTITY(_GLF_IDENTITY(1, int(int(1))), clamp(_GLF_IDENTITY(1, int(int(1))), _GLF_IDENTITY(_GLF_IDENTITY(1, int(int(1))), clamp(_GLF_IDENTITY(1, int(int(1))), _GLF_IDENTITY(1, int(int(1))), _GLF_IDENTITY(1, int(int(1))))), _GLF_IDENTITY(1, int(int(1)))))] : _GLF_FUZZED(subgroup_size))), gl_WorkGroupSize[2])), gl_WorkGroupSize)).x, _GLF_IDENTITY(gl_WorkGroupSize, min(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(uvec3(gl_WorkGroupSize), uvec3(uvec4(uvec3(gl_WorkGroupSize), 1u)))))))) << _GLF_IDENTITY((uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) + ((uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | uvec3(0u, 0u, 0u))))), uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), min(uvec3(gl_WorkGroupSize), uvec3(gl_WorkGroupSize)))))[_GLF_IDENTITY(_GLF_IDENTITY(1, int(int(1))), clamp(_GLF_IDENTITY(1, int(int(1))), _GLF_IDENTITY(_GLF_IDENTITY(1, int(int(1))), clamp(_GLF_IDENTITY(1, int(int(1))), _GLF_IDENTITY(1, int(int(1))), _GLF_IDENTITY(1, int(int(1))))), _GLF_IDENTITY(1, int(int(1)))))] : _GLF_FUZZED(subgroup_size))), gl_WorkGroupSize[2])), gl_WorkGroupSize)).x))))))))) / 1u), 0u, (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(uvec4(uint(2u), 0u, 0u, ((0u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u)))))), uint(2u))), 1u)))));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) && true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, uint(uvec2(workgroup_size, 0u))), ~ _GLF_IDENTITY((~ (workgroup_size)), uint(uvec2((~ (workgroup_size)), 1u)))), workgroup_size)) * _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, 0u | _GLF_IDENTITY((workgroup_id), clamp((workgroup_id), _GLF_IDENTITY((workgroup_id), min((workgroup_id), (workgroup_id))), (workgroup_id)))), min(workgroup_id, workgroup_id))), min((_GLF_IDENTITY(workgroup_id, min(workgroup_id, _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id))))) | (_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(min(workgroup_id, workgroup_id), _GLF_IDENTITY((_GLF_IDENTITY(min(workgroup_id, workgroup_id), (_GLF_IDENTITY(min(workgroup_id, workgroup_id), max(min(workgroup_id, workgroup_id), min(workgroup_id, workgroup_id)))) << 0u)), ((_GLF_IDENTITY(min(workgroup_id, workgroup_id), (min(workgroup_id, workgroup_id)) << 0u))) + (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), uint(7u)), (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(uint(7u), uint(7u)) : _GLF_FUZZED(workgroup_size))))) | (min(workgroup_id, _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id))))))), (workgroup_id) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), ~ (~ (_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id)))))))))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY((workgroup_id) | (workgroup_id), 0u ^ ((workgroup_id) | (workgroup_id)))), min(workgroup_id, workgroup_id))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   barrier();
  }
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 1.0, exp(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, exp(0.0), 0.0, abs(1.0)))), (_GLF_IDENTITY(true, (true) && true) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  barrier();
 _GLF_struct_0 _GLF_struct_replacement_0 = _GLF_struct_0(1, mat3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-127.013) : 1.0)), 0.0 + (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-127.013) : 1.0))))))), mat2x3(1.0), bvec3(true), workgroup_base + subgroup_base + subgroup_local_id, uvec2(1u));
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0))), max(_GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0))), _GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)))))))) / 1.0)), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)))))) / 1.0)), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))))).y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)))))) / 1.0)))))))), ((injectionSwitch.x > injectionSwitch.y)) || false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_base + (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id)) + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (true ? (subgroup_local_id + 1) % subgroup_size : _GLF_FUZZED(133534u)))), max(_GLF_IDENTITY(uint(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (true ? (subgroup_local_id + 1) % subgroup_size : _GLF_FUZZED(133534u)))), (uint(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (true ? (subgroup_local_id + 1) % subgroup_size : _GLF_FUZZED(133534u))))) - 0u), uint(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (true ? (subgroup_local_id + 1) % subgroup_size : _GLF_FUZZED(133534u)))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))) * 1u) + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 0 | (1)), _GLF_IDENTITY(1, ~ (~ (1)))))) % subgroup_size, _GLF_IDENTITY(~ (~ ((subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) ^ 0), 1))) % subgroup_size)), min(~ (~ ((subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) ^ 0), 1))) % subgroup_size)), ~ (~ ((subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) ^ 0), 1))) % subgroup_size)))))) | (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)), ((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec2(1, 1)))) | (1)))) | _GLF_IDENTITY(((subgroup_local_id + 1)), uint(uint((_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u)))))) % subgroup_size)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), injectionSwitch.y)), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), injectionSwitch.y))), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), injectionSwitch.y))), true, true))) || false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint read = _GLF_IDENTITY(atomicLoad(buf[_GLF_struct_replacement_0.virtual_gid], 4, _GLF_IDENTITY(64, int(ivec2(64, 0))), 2), clamp(atomicLoad(buf[_GLF_struct_replacement_0.virtual_gid], 4, _GLF_IDENTITY(64, int(ivec2(64, 0))), 2), atomicLoad(buf[_GLF_struct_replacement_0.virtual_gid], 4, _GLF_IDENTITY(64, int(ivec2(64, 0))), 2), atomicLoad(buf[_GLF_struct_replacement_0.virtual_gid], 4, _GLF_IDENTITY(64, int(ivec2(64, 0))), 2)));
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) && true) && true)))
  return;
 if((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | uint(_GLF_ZERO(0.0, injectionSwitch.x))) % 2, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) % 2, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | uint(_GLF_ZERO(0.0, injectionSwitch.x))) % 2))) == 0)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) || false)))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY(bool(bvec4(false, true, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y)))), false || (bool(bvec4(false, true, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))) : _GLF_FUZZED(vec2(43.30, 26.57)))).x > injectionSwitch.y))))))) && true))))
    barrier();
   switch(_GLF_SWITCH(0))
    {
     case 42:
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     ivec4 _GLF_SWITCH_0_0v;
     case 0:
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))) && true)))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), false, false, false))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) && true))), true && (! (! (_GLF_IDENTITY(false, (false) && true))))), bool(bvec2(! (! (_GLF_IDENTITY(false, (false) && true))), false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) && true))), true && (! (! (_GLF_IDENTITY(false, (false) && true))))), bool(bvec2(! (! (_GLF_IDENTITY(false, (false) && true))), false)))), bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) && true))), true && (! (! (_GLF_IDENTITY(false, (false) && true))))), bool(bvec2(! (! (_GLF_IDENTITY(false, (false) && true))), false)))), false, true)))))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), true, true)), false || (bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))), false || ((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))))) || false), true, true))))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     case 91:
     case 75:
     case 12:
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (false)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x)) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     case 34:
     case 60:
     case 88:
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     case 29:
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     atomicStore(buf[next_virtual_gid], uint(1), _GLF_IDENTITY(4, (4) ^ (0 >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(1), 0 | (_GLF_IDENTITY(int(1), (int(1)) << 0))), int(1)), 0 | (_GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) - 0)), int(1)))))), 64, 4);
     if(_GLF_DEAD(false))
      barrier();
     break;
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, true)))))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true))))))
      barrier();
     case 52:
     pow(injectionSwitch, vec2(98.70, 563.134));
     case 36:
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (true && (false)) || _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sqrt(vec2(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0)))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sqrt(vec2(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))))) * cos(vec2(0.0, 0.0))).x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (true && (false)) || _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sqrt(vec2(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0)))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sqrt(vec2(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))))) * cos(vec2(0.0, 0.0))).x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))))), false), false, true)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     uint _GLF_SWITCH_0_1v, _GLF_SWITCH_0_2v[78];
     default:
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     _GLF_IDENTITY(1, _GLF_IDENTITY((1), ~ (~ (_GLF_IDENTITY((1), _GLF_IDENTITY((_GLF_IDENTITY((1), _GLF_IDENTITY(int(ivec3((1), int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ONE(1.0, injectionSwitch.y)))), clamp(int(ivec3((1), int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY(int(ivec3((1), int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ONE(1.0, injectionSwitch.y)))), (int(ivec3((1), int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ONE(1.0, injectionSwitch.y))))) | 0), int(ivec3((1), int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ONE(1.0, injectionSwitch.y)))))))) * 1, int(ivec3((_GLF_IDENTITY((1), int(ivec3((1), int(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), ~ (~ (int(_GLF_ONE(1.0, injectionSwitch.y))))))))) * 1, 1, 1))))))) + 0);
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   switch(_GLF_SWITCH((0 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(8, _GLF_IDENTITY(clamp(8, _GLF_IDENTITY(8, (_GLF_IDENTITY(8, clamp(_GLF_IDENTITY(8, max(8, 8)), 8, 8))) | (_GLF_IDENTITY(8, (8) >> 0))), _GLF_IDENTITY(8, (8) - 0)), max(clamp(8, _GLF_IDENTITY(_GLF_IDENTITY(8, (8) | (8)), (_GLF_IDENTITY(_GLF_IDENTITY(8, (8) | (8)), (_GLF_IDENTITY(8, (8) | (8))) + 0)) >> 0), 8), _GLF_IDENTITY(clamp(8, _GLF_IDENTITY(8, _GLF_IDENTITY((8) | (8), 0 ^ ((8) | (8)))), _GLF_IDENTITY(8, _GLF_IDENTITY((_GLF_IDENTITY(8, (false ? _GLF_FUZZED(findMSB(num_workgroup)) : 8))), (true ? (_GLF_IDENTITY(8, (false ? _GLF_FUZZED(findMSB(num_workgroup)) : 8))) : _GLF_FUZZED(45839))) | (8))), (clamp(_GLF_IDENTITY(8, (8) >> 0), _GLF_IDENTITY(8, _GLF_IDENTITY((8) | (8), (0 >> _GLF_IDENTITY(int(3), int(3))) ^ (_GLF_IDENTITY((8) | (8), (_GLF_IDENTITY((8) | (8), min((8) | (8), (8) | (8)))) | ((8) | (8)))))), 8)) | (clamp(8, _GLF_IDENTITY(_GLF_IDENTITY(8, (8) | (8)), (_GLF_IDENTITY(8, (8) | (8))) | (_GLF_IDENTITY(8, (8) | _GLF_IDENTITY((8), 0 | (_GLF_IDENTITY((8), ((8)) << 0)))))), 8))))))), (int(_GLF_IDENTITY(8, _GLF_IDENTITY(_GLF_IDENTITY(clamp(8, _GLF_IDENTITY(8, (8) | (8)), 8), min(clamp(8, _GLF_IDENTITY(8, (8) | (8)), 8), clamp(8, _GLF_IDENTITY(8, (8) | (8)), 8))), max(clamp(8, _GLF_IDENTITY(_GLF_IDENTITY(8, (8) | (8)), (_GLF_IDENTITY(_GLF_IDENTITY(8, (8) | (8)), (_GLF_IDENTITY(8, _GLF_IDENTITY((8), ((8)) | 0) | (8))) + _GLF_IDENTITY(0, 1 * (0)))) >> 0), 8), _GLF_IDENTITY(clamp(8, _GLF_IDENTITY(8, (8) | (8)), _GLF_IDENTITY(8, (8) | (8))), (clamp(8, _GLF_IDENTITY(8, _GLF_IDENTITY((8) | (8), min((8) | (8), (8) | _GLF_IDENTITY((8), 0 ^ (_GLF_IDENTITY((8), ((8)) / 1)))))), 8)) | (clamp(8, _GLF_IDENTITY(_GLF_IDENTITY(8, (8) | _GLF_IDENTITY(_GLF_IDENTITY((8), (_GLF_IDENTITY((8), ((8)) | (_GLF_IDENTITY((8), max((8), (8)))))) - (0 >> _GLF_IDENTITY(int(4), int(4)))), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY((8), (_GLF_IDENTITY((8), ((8)) | (_GLF_IDENTITY((8), max((8), (8)))))) - (0 >> _GLF_IDENTITY(int(4), int(4))))))), (_GLF_IDENTITY(8, (8) | (8))) | (_GLF_IDENTITY(8, (8) | (8)))), 8)))))))) + 0), min(_GLF_IDENTITY(int(_GLF_IDENTITY(8, _GLF_IDENTITY(_GLF_IDENTITY(clamp(8, _GLF_IDENTITY(8, _GLF_IDENTITY((_GLF_IDENTITY(8, (8) >> 0)), _GLF_IDENTITY(((8)) >> 0, (_GLF_IDENTITY(((8)) >> 0, (0 | 0) | (((8)) >> 0))) ^ 0)) | (8)), 8), max(clamp(8, _GLF_IDENTITY(_GLF_IDENTITY(8, (8) | (8)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(8, (8) | (8)), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(8, (8) | (8)), 0), (true ? ivec2(_GLF_IDENTITY(8, (8) | (8)), 0) : _GLF_FUZZED(ivec2(50885, -64637))))), (int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(8, (8) | (8)), 0), (true ? ivec2(_GLF_IDENTITY(8, (8) | (8)), 0) : _GLF_FUZZED(ivec2(50885, -64637)))))) << 0)), max(_GLF_IDENTITY(8, _GLF_IDENTITY((8), max((8), _GLF_IDENTITY((8), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-69642) : (8))))) | (8)), _GLF_IDENTITY(_GLF_IDENTITY(8, (8) | (8)), _GLF_IDENTITY((true ? _GLF_IDENTITY(8, (8) | (8)) : _GLF_FUZZED(-97746)), (_GLF_IDENTITY((true ? _GLF_IDENTITY(8, (8) | (8)) : _GLF_FUZZED(-97746)), max((true ? _GLF_IDENTITY(8, (8) | (8)) : _GLF_FUZZED(-97746)), (true ? _GLF_IDENTITY(8, (8) | (8)) : _GLF_FUZZED(-97746))))) ^ (0 >> _GLF_IDENTITY(int(8), int(8))))))), (_GLF_IDENTITY(_GLF_IDENTITY(8, (8) | (8)), (_GLF_IDENTITY(8, (8) | (8))) | (_GLF_IDENTITY(8, (8) | (8))))) + 0)) >> 0), 8), _GLF_IDENTITY(clamp(8, _GLF_IDENTITY(8, (8) | _GLF_IDENTITY((8), ~ (~ (_GLF_IDENTITY((8), ((8)) + 0))))), _GLF_IDENTITY(_GLF_IDENTITY(8, (8) | (8)), (_GLF_IDENTITY(_GLF_IDENTITY(8, (8) | (8)), _GLF_IDENTITY(1 * (_GLF_IDENTITY(8, (8) | (8))), (1 * (_GLF_IDENTITY(8, (8) | (8)))) / 1))) - 0)), (clamp(_GLF_IDENTITY(8, ~ (~ (_GLF_IDENTITY(8, 0 ^ (8))))), _GLF_IDENTITY(8, (8) | (8)), 8)) | (clamp(8, _GLF_IDENTITY(_GLF_IDENTITY(8, (8) | (_GLF_IDENTITY(8, 0 | (8)))), (_GLF_IDENTITY(8, (8) | (8))) | (_GLF_IDENTITY(8, (8) | (8)))), 8))))), clamp(_GLF_IDENTITY(clamp(8, _GLF_IDENTITY(8, (8) | (8)), 8), max(clamp(8, _GLF_IDENTITY(_GLF_IDENTITY(8, (8) | (8)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(8, (8) | (8)), (_GLF_IDENTITY(8, (8) | (8))) + 0), (_GLF_IDENTITY(_GLF_IDENTITY(8, (8) | (8)), (_GLF_IDENTITY(8, (8) | (8))) + 0)) / 1)) >> 0), 8), _GLF_IDENTITY(clamp(8, _GLF_IDENTITY(8, (8) | (8)), _GLF_IDENTITY(8, (8) | (8))), (clamp(8, _GLF_IDENTITY(8, (8) | (8)), 8)) | (clamp(8, _GLF_IDENTITY(_GLF_IDENTITY(8, (8) | (8)), (_GLF_IDENTITY(8, (8) | (8))) | (_GLF_IDENTITY(_GLF_IDENTITY(8, (8) | (8)), (_GLF_IDENTITY(8, (8) | (8))) - 0))), 8))))), _GLF_IDENTITY(clamp(8, _GLF_IDENTITY(_GLF_IDENTITY(8, max(8, _GLF_IDENTITY(8, (8) | (8)))), _GLF_IDENTITY((8) | _GLF_IDENTITY((8), (_GLF_IDENTITY((8), ((8)) ^ 0)) - 0), max((8) | _GLF_IDENTITY((8), (_GLF_IDENTITY((8), ((8)) ^ 0)) - 0), (8) | _GLF_IDENTITY((8), (_GLF_IDENTITY((8), ((8)) ^ 0)) - 0)))), 8), max(clamp(8, _GLF_IDENTITY(_GLF_IDENTITY(8, _GLF_IDENTITY((8) | (8), ((8) | (8)) >> 0)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(8, _GLF_IDENTITY((8), min(_GLF_IDENTITY((8), (_GLF_IDENTITY((8), ((8)) | ((8)))) | 0), (8))) | (8)), (_GLF_IDENTITY(8, (8) | (8))) + 0), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(8, (8) | _GLF_IDENTITY((8), (0 & -61605) ^ _GLF_IDENTITY(((8)), int(int(((8))))))), (_GLF_IDENTITY(8, (8) | (8))) + 0)), ((_GLF_IDENTITY(_GLF_IDENTITY(8, (8) | _GLF_IDENTITY((8), (0 & -61605) ^ _GLF_IDENTITY(((8)), int(int(((8))))))), (_GLF_IDENTITY(8, (8) | (8))) + 0))) ^ 0) / 1)) >> 0), 8), _GLF_IDENTITY(clamp(8, _GLF_IDENTITY(8, (8) | (8)), _GLF_IDENTITY(8, _GLF_IDENTITY((8) | (8), (_GLF_IDENTITY((8) | _GLF_IDENTITY((8), int(int(_GLF_IDENTITY((8), 0 | ((8)))))), 0 ^ (_GLF_IDENTITY((8) | (8), ~ (~ ((8) | (8))))))) ^ (0 ^ 0)))), (clamp(8, _GLF_IDENTITY(8, (8) | _GLF_IDENTITY((8), ((8)) | 0)), 8)) | (clamp(8, _GLF_IDENTITY(_GLF_IDENTITY(8, _GLF_IDENTITY((8) | (8), max((8) | (8), (8) | (8)))), (_GLF_IDENTITY(8, _GLF_IDENTITY((8) | (8), clamp((8) | (8), (8) | (8), (8) | (8))))) | _GLF_IDENTITY((_GLF_IDENTITY(8, (8) | (8))), min((_GLF_IDENTITY(8, (8) | (8))), _GLF_IDENTITY((_GLF_IDENTITY(8, (8) | (8))), 0 ^ (_GLF_IDENTITY((_GLF_IDENTITY(8, (8) | (8))), ((_GLF_IDENTITY(8, (8) | (8)))) << 0)))))), 8))))), _GLF_IDENTITY(_GLF_IDENTITY(clamp(8, _GLF_IDENTITY(_GLF_IDENTITY(8, max(8, 8)), (8) | (8)), 8), max(clamp(8, _GLF_IDENTITY(_GLF_IDENTITY(8, (8) | (8)), (_GLF_IDENTITY(_GLF_IDENTITY(8, _GLF_IDENTITY((8) | (8), (false ? _GLF_FUZZED(-28038) : (8) | (8)))), (_GLF_IDENTITY(8, (8) | (8))) + 0)) >> 0), 8), _GLF_IDENTITY(clamp(8, _GLF_IDENTITY(8, (8) | (8)), _GLF_IDENTITY(8, (8) | _GLF_IDENTITY((8), min((8), (8))))), (clamp(8, _GLF_IDENTITY(8, (8) | (8)), 8)) | (_GLF_IDENTITY(clamp(8, _GLF_IDENTITY(_GLF_IDENTITY(8, (8) | (8)), (_GLF_IDENTITY(_GLF_IDENTITY(8, (8) | (8)), (false ? _GLF_FUZZED(-18389) : _GLF_IDENTITY(8, (8) | (8))))) | (_GLF_IDENTITY(8, (8) | (8)))), 8), ~ (~ (clamp(8, _GLF_IDENTITY(_GLF_IDENTITY(8, (8) | (8)), (_GLF_IDENTITY(_GLF_IDENTITY(8, (8) | (8)), (false ? _GLF_FUZZED(-18389) : _GLF_IDENTITY(8, _GLF_IDENTITY((8) | (8), 0 + ((8) | (8))))))) | (_GLF_IDENTITY(8, (8) | (8)))), 8)))))))), (_GLF_IDENTITY(clamp(8, _GLF_IDENTITY(8, (8) | (8)), 8), max(clamp(8, _GLF_IDENTITY(_GLF_IDENTITY(8, (8) | (_GLF_IDENTITY(8, (8) << 0))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(8, (8) | (8)), (8) | (8)), (_GLF_IDENTITY(_GLF_IDENTITY(8, (8) | (8)), int(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(8, (8) | (8)), (0 | 0) + (_GLF_IDENTITY(8, (8) | (8))))), (true ? int(_GLF_IDENTITY(_GLF_IDENTITY(8, (8) | (8)), (0 | 0) + (_GLF_IDENTITY(8, (8) | (8))))) : _GLF_FUZZED(-8121)))))) + 0)) >> 0), 8), _GLF_IDENTITY(clamp(8, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(8, (8) | (8)), 0 ^ (_GLF_IDENTITY(8, (8) | (8)))), 0 | (_GLF_IDENTITY(8, (8) | (8)))), _GLF_IDENTITY(_GLF_IDENTITY(8, (8) ^ 0), (8) | (8))), (clamp(8, _GLF_IDENTITY(8, (8) | (8)), 8)) | (clamp(8, _GLF_IDENTITY(_GLF_IDENTITY(8, (8) | (8)), (_GLF_IDENTITY(8, (8) | (8))) | (_GLF_IDENTITY(8, (8) | (8)))), 8)))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))))))), (int(_GLF_IDENTITY(8, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(clamp(8, _GLF_IDENTITY(8, (8) | (8)), 8), max(clamp(8, _GLF_IDENTITY(8, (8) | (8)), 8), _GLF_IDENTITY(clamp(8, _GLF_IDENTITY(8, (8) | (8)), 8), min(clamp(8, _GLF_IDENTITY(8, (8) | (8)), 8), clamp(8, _GLF_IDENTITY(8, (8) | (8)), 8))))), max(clamp(8, _GLF_IDENTITY(_GLF_IDENTITY(8, (8) | (8)), (_GLF_IDENTITY(_GLF_IDENTITY(8, (8) | (8)), (_GLF_IDENTITY(8, (_GLF_IDENTITY(8, (8) | (8))) | (8))) + 0)) >> 0), 8), _GLF_IDENTITY(clamp(_GLF_IDENTITY(8, (_GLF_IDENTITY(8, (8) >> 0)) + int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(8, (8) | (8)), _GLF_IDENTITY(8, (8) | (8))), (clamp(8, _GLF_IDENTITY(_GLF_IDENTITY(8, (8) | (8)), (false ? _GLF_FUZZED(52577) : _GLF_IDENTITY(8, (8) | (8)))), _GLF_IDENTITY(8, 0 | (8)))) | (clamp(8, _GLF_IDENTITY(_GLF_IDENTITY(8, (8) | (8)), (_GLF_IDENTITY(8, (8) | (8))) | (_GLF_IDENTITY(8, (8) | (8)))), _GLF_IDENTITY(8, int(ivec2(8, 1)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(clamp(8, _GLF_IDENTITY(8, (8) | (8)), 8), max(clamp(8, _GLF_IDENTITY(8, (8) | (8)), 8), clamp(8, _GLF_IDENTITY(8, (8) | (8)), 8))), max(clamp(8, _GLF_IDENTITY(_GLF_IDENTITY(8, (8) | (8)), (_GLF_IDENTITY(_GLF_IDENTITY(8, (8) | (8)), (_GLF_IDENTITY(8, (8) | (8))) + 0)) >> 0), 8), _GLF_IDENTITY(_GLF_IDENTITY(clamp(8, _GLF_IDENTITY(8, (8) | (8)), _GLF_IDENTITY(8, (8) | (8))), (clamp(8, _GLF_IDENTITY(8, (8) | (8)), _GLF_IDENTITY(8, 0 | (8)))) | (clamp(8, _GLF_IDENTITY(_GLF_IDENTITY(8, (8) | (8)), (_GLF_IDENTITY(8, (8) | (8))) | (_GLF_IDENTITY(8, (8) | (8)))), 8))), int(int(_GLF_IDENTITY(_GLF_IDENTITY(clamp(8, _GLF_IDENTITY(8, (8) | (8)), _GLF_IDENTITY(8, (8) | (8))), (clamp(8, _GLF_IDENTITY(8, (8) | (8)), _GLF_IDENTITY(8, 0 | (8)))) | (clamp(8, _GLF_IDENTITY(_GLF_IDENTITY(8, (8) | (8)), (_GLF_IDENTITY(8, (8) | (8))) | (_GLF_IDENTITY(8, (8) | (8)))), 8))), (_GLF_IDENTITY(_GLF_IDENTITY(clamp(8, _GLF_IDENTITY(8, (8) | (8)), _GLF_IDENTITY(8, (8) | (8))), (clamp(8, _GLF_IDENTITY(8, (8) | (8)), _GLF_IDENTITY(8, 0 | (8)))) | (clamp(8, _GLF_IDENTITY(_GLF_IDENTITY(8, (8) | (8)), (_GLF_IDENTITY(8, (8) | (8))) | (_GLF_IDENTITY(8, (8) | (8)))), 8))), (_GLF_IDENTITY(clamp(8, _GLF_IDENTITY(8, (8) | (8)), _GLF_IDENTITY(8, (8) | (8))), (clamp(8, _GLF_IDENTITY(8, (8) | (8)), _GLF_IDENTITY(8, 0 | (8)))) | (clamp(8, _GLF_IDENTITY(_GLF_IDENTITY(8, (8) | (8)), (_GLF_IDENTITY(8, (8) | (8))) | (_GLF_IDENTITY(8, (8) | (8)))), 8)))) ^ 0)) - 0))))))) ^ 0)))) + 0), _GLF_IDENTITY(int(_GLF_IDENTITY(8, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(clamp(8, _GLF_IDENTITY(8, (8) | _GLF_IDENTITY((8), ((8)) | ((8)))), 8), (_GLF_IDENTITY(clamp(8, _GLF_IDENTITY(8, (8) | _GLF_IDENTITY((8), ((8)) | ((8)))), 8), max(clamp(8, _GLF_IDENTITY(8, (8) | _GLF_IDENTITY((8), ((8)) | ((8)))), 8), clamp(8, _GLF_IDENTITY(8, (8) | _GLF_IDENTITY((8), ((8)) | ((8)))), 8)))) | (clamp(8, _GLF_IDENTITY(8, (8) | _GLF_IDENTITY((8), ((8)) | ((8)))), 8))), max(clamp(8, _GLF_IDENTITY(_GLF_IDENTITY(8, (8) | _GLF_IDENTITY((8), ~ (~ ((8))))), (_GLF_IDENTITY(_GLF_IDENTITY(8, (8) | (8)), (_GLF_IDENTITY(_GLF_IDENTITY(8, (8) | (8)), (true ? _GLF_IDENTITY(8, (8) | (8)) : _GLF_FUZZED(-55158)))) + 0)) >> 0), 8), _GLF_IDENTITY(clamp(8, _GLF_IDENTITY(8, (8) | (8)), _GLF_IDENTITY(8, (8) | (8))), (clamp(_GLF_IDENTITY(8, ~ (~ (8))), _GLF_IDENTITY(8, (8) | (_GLF_IDENTITY(8, clamp(8, _GLF_IDENTITY(8, clamp(8, 8, _GLF_IDENTITY(8, ~ (~ (8))))), 8)))), 8)) | (clamp(8, _GLF_IDENTITY(_GLF_IDENTITY(8, (8) | (8)), (_GLF_IDENTITY(8, (8) | (8))) | (_GLF_IDENTITY(8, (8) | (8)))), 8))))), ~ (~ (_GLF_IDENTITY(clamp(8, _GLF_IDENTITY(_GLF_IDENTITY(8, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((8), ((8)) / 1), _GLF_IDENTITY((~ (8)), ((~ (8))) | 0) | (~ (8))))), (8) | _GLF_IDENTITY((8), ((8)) | ((8)))), 8), max(clamp(8, _GLF_IDENTITY(_GLF_IDENTITY(8, _GLF_IDENTITY((8), 0 + ((8))) | _GLF_IDENTITY((8), _GLF_IDENTITY(~ (~ ((8))), (_GLF_IDENTITY(~ (~ ((8))), 0 | (_GLF_IDENTITY(~ (~ ((8))), ~ (~ (~ (~ ((8))))))))) | (~ (~ ((8))))))), (_GLF_IDENTITY(_GLF_IDENTITY(8, (8) | (8)), (_GLF_IDENTITY(8, (8) | _GLF_IDENTITY((8), ~ (~ ((8)))))) + 0)) >> 0), 8), _GLF_IDENTITY(_GLF_IDENTITY(clamp(8, _GLF_IDENTITY(8, (8) | (8)), _GLF_IDENTITY(8, (8) | (8))), 1 * (clamp(8, _GLF_IDENTITY(8, (8) | (8)), _GLF_IDENTITY(_GLF_IDENTITY(8, (8) | (8)), (_GLF_IDENTITY(_GLF_IDENTITY(8, (8) | (8)), ~ (~ (_GLF_IDENTITY(8, (8) | (8)))))) ^ 0)))), (clamp(8, _GLF_IDENTITY(8, (_GLF_IDENTITY(8, (8) + 0)) | (8)), 8)) | (clamp(8, _GLF_IDENTITY(_GLF_IDENTITY(8, (8) | (8)), (_GLF_IDENTITY(8, (8) | (8))) | (_GLF_IDENTITY(8, (8) | (8)))), 8)))))))))), (int(_GLF_IDENTITY(8, _GLF_IDENTITY(clamp(8, _GLF_IDENTITY(_GLF_IDENTITY(8, (8) | (8)), 1 * (_GLF_IDENTITY(_GLF_IDENTITY(8, (8) | (8)), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(8, (8) - 0), (8) | (8)), ~ (~ (_GLF_IDENTITY(8, (8) | (8))))), _GLF_IDENTITY(8, (8) | (8)))))), 8), max(clamp(8, _GLF_IDENTITY(_GLF_IDENTITY(8, (8) | (8)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(8, (8) | (8)), (_GLF_IDENTITY(8, _GLF_IDENTITY((8), (_GLF_IDENTITY((8), min((8), (8)))) + (0 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) - 0)))) | (8))) + 0)) >> 0, clamp((_GLF_IDENTITY(_GLF_IDENTITY(8, (8) | (8)), _GLF_IDENTITY((_GLF_IDENTITY(8, _GLF_IDENTITY((8), ((8)) + (0 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) - _GLF_IDENTITY(0, int(_GLF_IDENTITY(int(0), max(int(0), int(0))))))))) | (8))), 0 ^ ((_GLF_IDENTITY(8, _GLF_IDENTITY((8), ((8)) + (0 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) - _GLF_IDENTITY(0, int(_GLF_IDENTITY(int(0), max(int(0), int(0))))))))) | (8))))) + 0)) >> 0, (_GLF_IDENTITY(_GLF_IDENTITY(8, (8) | (8)), (_GLF_IDENTITY(8, _GLF_IDENTITY(_GLF_IDENTITY((8), ((8)) + (0 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) - 0)))) | (8), max(_GLF_IDENTITY((8), ((8)) + (0 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) - 0)))) | (8), _GLF_IDENTITY((8), ((8)) + (0 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) - 0)))) | (8))))) + 0)) >> 0, (_GLF_IDENTITY(_GLF_IDENTITY(8, (8) | (8)), (_GLF_IDENTITY(8, _GLF_IDENTITY((8), ((8)) + (0 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) - 0)))) | (8))) + 0)) >> 0))), 8), _GLF_IDENTITY(clamp(8, _GLF_IDENTITY(8, (8) | (_GLF_IDENTITY(8, clamp(8, _GLF_IDENTITY(_GLF_IDENTITY(8, (8) | (8)), (_GLF_IDENTITY(8, (8) | (8))) >> (0 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (int(6)) / 1)))), _GLF_IDENTITY(8, ~ (~ (8))))))), _GLF_IDENTITY(_GLF_IDENTITY(8, _GLF_IDENTITY((8), (_GLF_IDENTITY((8), 0 | ((8)))) << 0) | (8)), 0 | (_GLF_IDENTITY(8, _GLF_IDENTITY((8), (_GLF_IDENTITY((8), 0 | ((8)))) << 0) | (8))))), _GLF_IDENTITY((clamp(8, _GLF_IDENTITY(8, (8) | (8)), 8)) | (clamp(8, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(8, min(_GLF_IDENTITY(8, max(8, 8)), 8)), (8) | _GLF_IDENTITY((8), max(_GLF_IDENTITY((8), ((8)) | ((8))), _GLF_IDENTITY((8), 0 | ((8)))))), (_GLF_IDENTITY(8, _GLF_IDENTITY((8), ~ (_GLF_IDENTITY(~ ((8)), (false ? _GLF_FUZZED(50293) : ~ ((8)))))) | (8))) | (_GLF_IDENTITY(8, (8) | (8)))), 8)), ((clamp(8, _GLF_IDENTITY(8, _GLF_IDENTITY((8) | (8), min((8) | (8), (8) | (8)))), 8)) | (clamp(8, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(8, min(_GLF_IDENTITY(_GLF_IDENTITY(8, min(8, _GLF_IDENTITY(8, (8) | (8)))), max(8, _GLF_IDENTITY(8, (_GLF_IDENTITY(8, (8) - 0)) >> 0))), 8)), (8) | _GLF_IDENTITY((8), max(_GLF_IDENTITY(_GLF_IDENTITY((8), (_GLF_IDENTITY((8), 0 | ((8)))) - 0), ((8)) | ((8))), _GLF_IDENTITY((8), 0 | ((8)))))), (_GLF_IDENTITY(8, _GLF_IDENTITY((8), ~ (_GLF_IDENTITY(~ ((8)), (false ? _GLF_FUZZED(50293) : ~ ((8)))))) | (8))) | (_GLF_IDENTITY(8, _GLF_IDENTITY((8), 0 | ((8))) | (8)))), _GLF_IDENTITY(8, 1 * (_GLF_IDENTITY(8, (8) >> 0)))))) / (1 & 1)))))))) + 0))), _GLF_IDENTITY(int(8), (int(8)) - 0)))))
    {
     case 0:
     case 42:
     case 41:
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), mix(float(_GLF_FUZZED(_GLF_IDENTITY(68.88, (false ? _GLF_FUZZED(0.1) : 68.88)))), float(injectionSwitch.x), bool(true)))) - 0.0))) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(822.144))) > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     case 73:
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && (_GLF_IDENTITY(true, ! (! (true))) && (false))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
        barrier();
       barrier();
      }
     case 13:
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4(injectionSwitch.y, 1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-5599.6840)), bool(false))), 1.0, 1.0, abs(0.0), 1.0, exp(0.0), 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, exp(0.0)), vec2(_GLF_ONE(1.0, injectionSwitch.y), 0.0)), dot(vec2(0.0, exp(0.0)), vec2(_GLF_ONE(1.0, injectionSwitch.y), 0.0))), 0.0)), clamp(float(mat4(injectionSwitch.y, 1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-5599.6840)), bool(false))), 1.0, 1.0, abs(0.0), 1.0, exp(0.0), 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, exp(0.0)), vec2(_GLF_ONE(1.0, injectionSwitch.y), 0.0)), dot(vec2(0.0, exp(0.0)), vec2(_GLF_ONE(1.0, injectionSwitch.y), 0.0))), 0.0)), float(mat4(injectionSwitch.y, 1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-5599.6840)), bool(false))), 1.0, 1.0, abs(0.0), 1.0, exp(0.0), 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, exp(0.0)), vec2(_GLF_ONE(1.0, injectionSwitch.y), 0.0)), dot(vec2(0.0, exp(0.0)), vec2(_GLF_ONE(1.0, injectionSwitch.y), 0.0))), 0.0)), float(mat4(injectionSwitch.y, 1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-5599.6840)), bool(false))), 1.0, 1.0, abs(0.0), 1.0, exp(0.0), 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, exp(0.0)), vec2(_GLF_ONE(1.0, injectionSwitch.y), 0.0)), dot(vec2(0.0, exp(0.0)), vec2(_GLF_ONE(1.0, injectionSwitch.y), 0.0))), 0.0)))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     case 82:
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (_GLF_IDENTITY(mat2(1.0), mat2(mat4x2(mat2(1.0))))) / mat2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(9120.6758, -960.690)))), (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (_GLF_IDENTITY(mat2(1.0), mat2(mat4x2(mat2(1.0))))) / mat2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))) - sin(vec2(0.0, 0.0))).y))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (_GLF_IDENTITY(mat2(1.0), mat2(mat4x2(mat2(1.0))))) / mat2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))).y)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (_GLF_IDENTITY(mat2(1.0), mat2(mat4x2(mat2(1.0))))) / mat2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))).y))), false || (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (_GLF_IDENTITY(mat2(1.0), mat2(mat4x2(_GLF_IDENTITY(mat2(1.0), (true ? mat2(1.0) : _GLF_FUZZED(mat2(-9.1, 9.8, 760.268, -51.49)))))))) / mat2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))).y))))), bool(bvec4(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (_GLF_IDENTITY(mat2(1.0), mat2(mat4x2(mat2(1.0))))) / mat2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))).y))), false || (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (_GLF_IDENTITY(mat2(1.0), mat2(mat4x2(_GLF_IDENTITY(mat2(1.0), (true ? mat2(1.0) : _GLF_FUZZED(mat2(-9.1, 9.8, 760.268, -51.49)))))))) / mat2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))).y))))), false, false, false)))))))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_DEAD(false)), _GLF_IDENTITY(bool(bool(true && (_GLF_DEAD(false)))), (_GLF_IDENTITY(bool(bool(true && (_GLF_DEAD(false)))), bool(bvec3(bool(bool(true && (_GLF_DEAD(false)))), false, true)))) && true))))
        barrier();
       barrier();
      }
     case 60:
     if(_GLF_DEAD(false))
      return;
     case 76:
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))) || ((injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(5500.0552)), bool(false))), 0.0)))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))) || ((injectionSwitch.x > injectionSwitch.y)))))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true)) || false), bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))), (false) && _GLF_IDENTITY(true, ! (! (true))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))), false)))))))
      barrier();
     case 92:
     case 39:
     if(_GLF_DEAD(false))
      barrier();
     atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, false || (false)))))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     break;
     case 57:
     if(_GLF_DEAD(false))
      barrier();
     float _GLF_SWITCH_1_0v, _GLF_SWITCH_1_1v[95], _GLF_SWITCH_1_2v[22];
     default:
     1;
    }
  }
 subgroupBarrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(checker[_GLF_struct_replacement_0.virtual_gid], read, 4, 64, 4);
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
