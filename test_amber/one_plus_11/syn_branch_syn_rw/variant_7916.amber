#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint subgroup_base = subgroup_id * subgroup_size;
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u) + subgroup_base + ((_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), (~ (subgroup_local_id)) | (~ (subgroup_local_id))))) + 1) % subgroup_size);
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 2);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if((subgroup_local_id % 2) == _GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, (0) | (0)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       do
        {
         barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_DEAD(false))
      barrier();
     switch(_GLF_IDENTITY(_GLF_SWITCH((_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))) ^ 1, max(((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))) ^ 1, ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))) ^ 1)))), clamp(_GLF_IDENTITY(_GLF_SWITCH((_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))) ^ 1, max(((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))) ^ 1, ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))) ^ 1)))), (_GLF_SWITCH((_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))) ^ 1, max(((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))) ^ 1, ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))) ^ 1))))) + 0), _GLF_SWITCH((_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))) ^ 1, max(((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))) ^ 1, ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))) ^ 1)))), _GLF_SWITCH((_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))) ^ 1, max(((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))) ^ 1, ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))) ^ 1)))))))
      {
       case 0:
       case 66:
       case 35:
       case 5:
       case 24:
       case 69:
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       case 10:
       case 76:
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), (false ? _GLF_FUZZED(75045) : int(0))), int(0)))); _injected_loop_counter ++)
        {
         atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
         if(_GLF_DEAD(false))
          barrier();
        }
       break;
       if(_GLF_DEAD(false))
        barrier();
       default:
       if(_GLF_DEAD(false))
        barrier();
       1;
      }
    }
   else
    {
     do
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         switch(_GLF_SWITCH(0))
          {
           case 0:
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           case 54:
           case 8:
           if(_GLF_DEAD(false))
            barrier();
           case 67:
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           case 84:
           case 60:
           atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
           break;
           case 70:
           while(true)
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               switch(_GLF_SWITCH(0))
                {
                 case 78:
                 mix(lessThan(vec3(2.1, 2.6, _GLF_IDENTITY(-7.9, 1.0 * (-7.9))), vec3(-798.227, -6924.9160, 3.3)), bvec3(true, false, false), lessThan(ivec3(-28265, -33684, 17070), ivec3(-41333, 68224, 37590)));
                 case 44:
                 uint _GLF_SWITCH_1_0v, _GLF_SWITCH_1_1v[79];
                 case 0:
                 do
                  {
                   (~ ivec4(-84238, -21593, 10626, -42194));
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                 {
                 }
                 for(mat4x3 _GLF_SWITCH_2_0v, _GLF_SWITCH_2_1v; bvec4(true, false, true, true)[3]; bvec4(_GLF_IDENTITY(false, (false) && true), true, false, false)[3])
                  {
                   (mat2x4(-48.77, -58.91, -16.85, 90.15, -41.69, -3776.8953, 633.760, -9582.5172) + (mat2x4(0.3, 3.0, 4.2, -7609.9767, -9.2, 4.6, 2845.2261, 4081.1642)));
                   bvec4(false, _GLF_IDENTITY(false, true && (false)), true, true);
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                      {
                       barrier();
                      }
                     else
                      {
                      }
                    }
                   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                    {
                     equal(greaterThanEqual(vec4(_GLF_IDENTITY(-8.0, max(-8.0, _GLF_IDENTITY(-8.0, min(-8.0, -8.0)))), -88.69, 5.6, 3.7), vec4(38.21, 6601.3701, 2.0, 976.802)), bvec4(false, true, false, false));
                    }
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   do
                    {
                     do
                      {
                       ;
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                   float _GLF_SWITCH_2_2v;
                   mat2x3(417.516, -5747.6570, 76.98, 271.798, _GLF_IDENTITY(-79.47, float(mat4x3(-79.47, 1.0, 1.0, cos(tan(0.0)), 0.0, 1.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 0.0))), -751.226);
                   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
                    barrier();
                  }
                 if((_GLF_IDENTITY(vec2(-8.6, 92.79), (vec2(-8.6, 92.79)) - vec2(0.0, 0.0)) == injectionSwitch))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   vec4 _GLF_SWITCH_2_3v, _GLF_SWITCH_2_4v[55], _GLF_SWITCH_2_5v;
                   while(bvec4(false, false, false, false)[2])
                    {
                     if(_GLF_DEAD(false))
                      {
                       do
                        {
                         if(_GLF_WRAPPED_IF_FALSE(false))
                          {
                          }
                         else
                          {
                           if(_GLF_DEAD(false))
                            barrier();
                           barrier();
                          }
                         if(_GLF_DEAD(false))
                          {
                           if(_GLF_DEAD(false))
                            barrier();
                           for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                            {
                             barrier();
                            }
                          }
                        }
                       while(_GLF_WRAPPED_LOOP(false));
                      }
                     (-6.9 - mat3x2(3.1, 580.793, -28.50, -96.93, -6.4, -7.8));
                     uvec4(atomicExchange(next_virtual_gid, subgroup_id), bitfieldReverse((uvec3(101286u, 68606u, 79077u) - _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_id, (subgroup_id) / ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))), uint(_GLF_ONE(1.0, injectionSwitch.y)))), (uint(uvec2(_GLF_IDENTITY(subgroup_id, (subgroup_id) / ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))), uint(_GLF_ONE(1.0, injectionSwitch.y))))) | (uint(uvec2(_GLF_IDENTITY(subgroup_id, (subgroup_id) / ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))), uint(_GLF_ONE(1.0, injectionSwitch.y))))))))));
                     mix(bvec3(true, true, true).gr.stt, bvec3(true, true, false), bvec3(false, true, true));
                    }
                   mat3x4 _GLF_SWITCH_2_6v, _GLF_SWITCH_2_7v;
                   vec3 _GLF_SWITCH_2_8v[25], _GLF_SWITCH_2_9v, _GLF_SWITCH_2_10v;
                   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                    barrier();
                   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                    barrier();
                   ;
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
                      {
                       barrier();
                      }
                     else
                      {
                      }
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                    }
                   {
                    switch(_GLF_SWITCH((0 | 0)))
                     {
                      case 33:
                      float _GLF_SWITCH_3_0v, _GLF_SWITCH_3_1v, _GLF_SWITCH_3_2v;
                      case 0:
                      case 70:
                      case 1:
                      case 2:
                      case 40:
                      case 8:
                      case 15:
                      case 97:
                      mat2x3 _GLF_SWITCH_2_11v[71], _GLF_SWITCH_2_12v, _GLF_SWITCH_2_13v;
                      break;
                      default:
                      if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       {
                       }
                      else
                       {
                        1;
                       }
                     }
                   }
                   {
                    for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                     {
                      ivec3(95447, -41539, 18597);
                     }
                    if(_GLF_DEAD(false))
                     barrier();
                    bvec3(true, false, false);
                    do
                     {
                      do
                       {
                        ivec4(52571, 54706, 49455, -74910);
                       }
                      while(_GLF_WRAPPED_LOOP(false));
                     }
                    while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false)))));
                    vec3 _GLF_SWITCH_2_14v, _GLF_SWITCH_2_15v;
                   }
                   for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, int(_GLF_IDENTITY(ivec4(_injected_loop_counter, 1, 1, 1), (ivec4(_injected_loop_counter, 1, 1, 1)) | (ivec4(_injected_loop_counter, 1, 1, 1))))) < ((((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))) << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (false ? _GLF_FUZZED((-44076 & -18607)) : int(1))))) >> _GLF_IDENTITY(int(1), int(1)))); _injected_loop_counter ++)
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     matrixCompMult(mat3(-8.3, 6.1, 3.2, -346.794, 5176.5770, -7.6, _GLF_IDENTITY(-821.821, clamp(-821.821, _GLF_IDENTITY(-821.821, min(-821.821, _GLF_IDENTITY(_GLF_IDENTITY(-821.821, min(-821.821, -821.821)), (true ? -821.821 : _GLF_FUZZED(6.0))))), -821.821)), -22.67, -7233.1850), mat3(-27.39, -85.41, 5.7, -17.04, 32.58, -4.8, -8.6, 2552.9660, -894.760));
                     mat3x2 _GLF_SWITCH_2_16v, _GLF_SWITCH_2_17v;
                     bvec2(false, false);
                     (117751u - uvec3(111112u, 4944u, 6090u));
                     subgroup_id;
                     ;
                    }
                   if(_GLF_DEAD(false))
                    {
                     do
                      {
                       barrier();
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                    }
                   ivec4(_GLF_IDENTITY(57891, _GLF_IDENTITY(int(ivec2(57891, 0)), int(ivec4(int(ivec2(57891, 0)), 1, 0, 0)))), -47819, 29366, 87554);
                  }
                 else
                  {
                   uvec4(159406u, 7243u, 169899u, 76444u);
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     ivec2(-31405, -55287);
                    }
                   else
                    {
                    }
                   ivec2 _GLF_SWITCH_2_18v;
                   float _GLF_SWITCH_2_19v, _GLF_SWITCH_2_20v[47];
                   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, false)), bool(bool(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, false))))))))
                    {
                     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
                      {
                      }
                     else
                      {
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_WRAPPED_IF_FALSE(false))
                          {
                          }
                         else
                          {
                           barrier();
                          }
                        }
                       barrier();
                      }
                    }
                   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                    {
                     while(false)
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
                        barrier();
                       if(_GLF_WRAPPED_IF_TRUE(true))
                        {
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          {
                           do
                            {
                             if(_GLF_DEAD(false))
                              barrier();
                             barrier();
                            }
                           while(_GLF_WRAPPED_LOOP(false));
                          }
                         if(_GLF_DEAD(false))
                          barrier();
                         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                          {
                           (mat4(567.763, -186.594, _GLF_IDENTITY(53.28, float(_GLF_IDENTITY(float(53.28), (float(53.28)) + log(1.0)))), -51.49, 7.5, 3.4, -15.84, 7.8, 964.131, -2685.0621, -982.876, -2.6, -8.6, -0.5, 7998.8795, 7.5) - mat4(4605.4122, -5795.9210, -639.279, -6.7, -5.0, -1.2, -9.1, 734.123, _GLF_IDENTITY(-8.1, (-8.1) / 1.0), -13.80, 1.4, 8.2, 447.592, 83.27, -1.1, -8529.7882));
                          }
                        }
                       else
                        {
                        }
                      }
                    }
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                 case 8:
                 do
                  {
                   mat3x4(-347.153, 3068.1835, 8868.6166, -82.23, 65.37, -3.0, 7.0, -7613.4740, -59.71, -7.2, 2.4, 2.2);
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                 bvec4 _GLF_SWITCH_2_21v, _GLF_SWITCH_2_22v, _GLF_SWITCH_2_23v;
                 ivec3 _GLF_SWITCH_2_24v[54];
                 break;
                 case 28:
                 mat4(_GLF_IDENTITY(8.5, (8.5) + 0.0), -45.69, 254.737, 9427.1027, -990.489, 8341.3363, -8161.0618, -99.93, 1.4, -7624.3123, 1879.6085, -2.1, 977.903, -6091.6546, 356.268, -0.6);
                 default:
                 if(_GLF_DEAD(false))
                  barrier();
                 1;
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
              }
             else
              {
              }
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           case 11:
           for(           bvec2(true, false);
 (uvec2(_GLF_IDENTITY(150208u, (0u >> _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), ~ (~ (uint(8u)))))) ^ (150208u)), 79473u) == uvec2(112836u, 176584u)); int(true))
            {
             ivec4(17878, 69767, 90674, -77717);
             mat4x2 _GLF_SWITCH_2_25v, _GLF_SWITCH_2_26v, _GLF_SWITCH_2_27v[47];
             do
              {
               (mat2x3(-569.705, -6.2, -3.0, -1.5, -5.7, -4.4) - fract(4.7));
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             bvec2 _GLF_SWITCH_2_28v, _GLF_SWITCH_2_29v, _GLF_SWITCH_2_30v[31];
             ((-52167 / ivec3(-13777, -91269, -27569)) ^ ivec3(-234, -26647, -78163));
             if(_GLF_DEAD(false))
              barrier();
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 mat3x2(-100.945, -17.52, 821.572, -565.277, -5193.9103, _GLF_IDENTITY(355.507, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(log(1.0), 0.0)), dot(vec2(1.0, 1.0), vec2(log(1.0), 0.0))) + (355.507)));
                }
               else
                {
                }
              }
            }
           default:
           if(_GLF_DEAD(false))
            {
             for(int _injected_loop_counter = ((((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))) << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), ~ (~ (int(1)))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
              {
               barrier();
              }
            }
           1;
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  barrier();
 subgroupBarrier();
 atomicStore(checker[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) >> 0u), (_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u)) - (163850u & 0u))], read, _GLF_IDENTITY(4, (4) / ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-22498)))), int(4)))), 64, 4);
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   switch(_GLF_SWITCH(_GLF_IDENTITY(0, 0 ^ (0))))
    {
     case 35:
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
          }
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           barrier();
          }
        }
       (mat4x2(938.023, _GLF_IDENTITY(8.4, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((ceil(50.67) + 1.1)) : 8.4)), -550.159, 5.5, -7.2, 7.2, 7791.7137, 710.191) + _GLF_IDENTITY((-4.8 * -5.2), (_GLF_IDENTITY((-4.8 * -5.2), ((-4.8 * -5.2)) * 1.0)) - 0.0));
       if(_GLF_DEAD(false))
        barrier();
      }
     case 19:
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     ;
     case 0:
     case 25:
     case 15:
     case 3:
     if(_GLF_DEAD(false))
      barrier();
     case 50:
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 1, bool(bool(_injected_loop_counter != 1)))); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, _GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false))))), bool(bvec4(bool(bvec4(false, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, true, true))))))
        {
        }
       else
        {
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
      }
     break;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     case 69:
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       {
        vec3(-31.38, 8.9, 3317.0618);
        {
         mat3x2 _GLF_SWITCH_0_0v, _GLF_SWITCH_0_1v;
         ivec2 _GLF_SWITCH_0_2v[94], _GLF_SWITCH_0_3v, _GLF_SWITCH_0_4v;
         vec3(-2.4, 0.6, 8846.5976);
         vec3 _GLF_SWITCH_0_5v;
         if(_GLF_DEAD(false))
          barrier();
         injectionSwitch;
        }
        false;
        for(int _injected_loop_counter = _GLF_IDENTITY(1, max(1, 1)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _GLF_IDENTITY(_injected_loop_counter --, 0 ^ (_injected_loop_counter --)))
         {
          for(          ivec3(-98700, 78883, -78272);
 true; (mat4x3(8.6, 930.169, 724.370, _GLF_IDENTITY(-1.3, min(_GLF_IDENTITY(-1.3, 1.0 * (-1.3)), _GLF_IDENTITY(-1.3, (-1.3) - 0.0))), -2704.4776, -39.27, -2435.2317, 1.7, -6770.1619, 942.472, 44.08, -20.37) * _GLF_IDENTITY(vec4(26.68, -5.7, 9.5, -0.0), vec4(mat4(_GLF_IDENTITY(vec4(26.68, -5.7, 9.5, -0.0), max(vec4(26.68, -5.7, 9.5, -0.0), vec4(26.68, -5.7, 9.5, -0.0))), 0.0, 0.0, 0.0, log(_GLF_IDENTITY(1.0, max(1.0, 1.0))), abs(0.0), 1.0, _GLF_IDENTITY(dot(vec4(1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), 0.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0))))))), dot(vec4(_GLF_IDENTITY(1.0, (1.0) * _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))), dot(vec3(1.0, 0.0, 0.0), _GLF_IDENTITY(vec3(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), vec3(_GLF_IDENTITY(mat2x3(vec3(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), 1.0, abs(0.0), 0.0), (mat2x3(vec3(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), 1.0, abs(0.0), 0.0)) * mat2(1.0))))))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), 0.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-8.0))), (_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-8.0)))) - 0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(tan(0.0), 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(tan(0.0), 1.0, 0.0), (_GLF_IDENTITY(vec3(tan(0.0), 1.0, 0.0), _GLF_IDENTITY(min(vec3(tan(0.0), 1.0, 0.0), vec3(tan(0.0), 1.0, 0.0)), (min(vec3(tan(0.0), 1.0, 0.0), vec3(tan(0.0), 1.0, 0.0))) - vec3(0.0, 0.0, 0.0)))) / vec3(1.0, 1.0, 1.0)))), 1.0, 0.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, exp(0.0), 0.0, 0.0, 0.0, 0.0, 0.0)))))))
           {
            unpackSnorm4x8(workgroup_id);
            vec2 _GLF_SWITCH_0_6v;
            bvec2 _GLF_SWITCH_0_7v, _GLF_SWITCH_0_8v, _GLF_SWITCH_0_9v[82];
            vec3(9998.2521, -6.2, 5.4);
           }
         }
        if(all(bvec2(false, false)))
         {
          ;
          mat2(-3.8, 2678.5576, -937.049, -1351.4313);
          ivec3(28105, 62385, 84040);
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(false))
             barrier();
            barrier();
           }
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           barrier();
          uvec2 _GLF_SWITCH_0_10v[94];
          ;
          if(_GLF_DEAD(false))
           {
            switch(_GLF_SWITCH(0))
             {
              case 27:
              equal(ivec3(71080, 573, -42302), ivec3(7404, -65065, -51257));
              case 0:
              case 34:
              case 3:
              for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > ((0 >> _GLF_IDENTITY(int(0), int(0))) ^ 0)); _injected_loop_counter --)
               {
                do
                 {
                  barrier();
                 }
                while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
               }
              break;
              case 93:
              vec2 _GLF_SWITCH_3_0v, _GLF_SWITCH_3_1v[82], _GLF_SWITCH_3_2v;
              default:
              1;
             }
           }
          uvec2(127040u, 171387u);
         }
        mat3x2 _GLF_SWITCH_0_11v[5], _GLF_SWITCH_0_12v, _GLF_SWITCH_0_13v;
        bvec4(true, true, false, true);
        if(_GLF_DEAD(false))
         barrier();
        if(false)
         {
          if(_GLF_WRAPPED_IF_TRUE(true))
           {
            if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
             barrier();
           }
          else
           {
            if(_GLF_DEAD(false))
             barrier();
           }
          if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))))
           {
           }
          else
           {
            (- outerProduct(vec4(340.916, 4041.2952, 101.931, 207.320), vec3(604.620, 1831.6929, _GLF_IDENTITY(810.592, max(_GLF_IDENTITY(810.592, float(float(810.592))), 810.592)))));
           }
          (+ subgroup_local_id);
          pow(vec4(-3.3, -8614.5181, -250.210, 8.5), mix(vec4(3508.5372, 7533.0162, -55.33, 5.9), _GLF_IDENTITY(vec4(95.56, -8.9, -254.589, 3.9), (vec4(95.56, -8.9, -254.589, 3.9)) * vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(float(false))), float(1.0), bool(true))))), vec4(5367.3078, -67.98, 30.41, 0.4)));
          mat2 _GLF_SWITCH_0_14v;
         }
        mat4(792.954, 2430.5495, 65.55, 1.9, -89.89, -0.9, -6037.7034, 0.4, 7.1, 1.5, 531.978, 4868.6281, 3433.3929, 97.03, -33.54, _GLF_IDENTITY(1.7, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.7 : _GLF_FUZZED(5712.5998))));
       }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         greaterThanEqual(ivec2(_GLF_IDENTITY(-83923, (true ? -83923 : _GLF_FUZZED(-16357))), 78172), ivec2(-27079, 74824));
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y))))
          barrier();
         ;
         {
          vec4 _GLF_SWITCH_0_15v, _GLF_SWITCH_0_16v, _GLF_SWITCH_0_17v;
          uint _GLF_SWITCH_0_18v, _GLF_SWITCH_0_19v;
          isinf((- vec3(8.7, -6.7, _GLF_IDENTITY(46.26, clamp(46.26, _GLF_IDENTITY(46.26, 1.0 * (46.26)), 46.26)))));
          bvec3 _GLF_SWITCH_0_20v[58];
          mat4x2 _GLF_SWITCH_0_21v;
          if(_GLF_DEAD(false))
           barrier();
          uvec3(197696u, 107013u, 57484u);
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           {
            if(_GLF_WRAPPED_IF_TRUE(true))
             {
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
              barrier();
             }
            else
             {
             }
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
           }
          (mat2(-9694.7493, -7.8, 5.2, 121.410) * _GLF_SWITCH_0_21v);
          ivec4(77775, 53420, (ivec2(11435, -13240) | ivec2(19717, -95026)));
         }
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            barrier();
           mat3x4(vec4(75.31, -515.810, 9.6, -5.8), vec4(-7414.8524, -4086.8446, -0.1, -9973.6074), vec4(-9.6, 1.2, 1535.4781, 3918.0633));
           bool _GLF_SWITCH_0_22v;
          }
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             barrier();
            }
          }
         ;
        }
       else
        {
        }
       greaterThan(ivec4(-3600, -67849, -42371, 11349), ivec4(-39574, 72366, -90080, 17013));
       do
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           bvec4(true, true, true, true);
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))));
       if(_GLF_DEAD(false))
        barrier();
       if((-9.1 < trunc(-6623.4272)))
        {
         while((ivec4(95820, -4449, -17310, -86758) == ivec4(-60635, 78314, -91164, -20401)))
          {
           vec3 _GLF_SWITCH_0_23v[51], _GLF_SWITCH_0_24v[4];
           workgroup_id;
          }
         mat3(mat2(-704.087, 2.3, -4629.8929, _GLF_IDENTITY(-6283.4198, float(mat3(_GLF_IDENTITY(-6283.4198, max(-6283.4198, -6283.4198)), _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat3(1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), sin(0.0), 1.0)))));
         for(         next_virtual_gid;
 false; ivec2(49658, -91574))
          {
           mat3x2(6401.6504, 9.8, 1.6, -2241.7610, _GLF_IDENTITY(-4497.2710, (-4497.2710) * 1.0), -99.09);
           do
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             ;
            }
           while(_GLF_WRAPPED_LOOP(false));
           bvec2 _GLF_SWITCH_0_25v;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           ivec3 _GLF_SWITCH_0_26v;
          }
         do
          {
           (mat4x3(-686.733, -9.0, _GLF_IDENTITY(-1000.9560, 1.0 * (-1000.9560)), -3532.5346, -4.7, -2.9, 2628.3646, 87.02, -748.003, 7.5, -2989.3998, 50.17) == mat4x3(-72.38, _GLF_IDENTITY(62.38, clamp(_GLF_IDENTITY(62.38, max(62.38, 62.38)), 62.38, _GLF_IDENTITY(62.38, (62.38) / 1.0))), -416.648, -45.02, -0.4, 333.556, -2.9, 3257.4010, -257.497, -0.0, -3.5, 5.7));
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           57797;
          }
         else
          {
          }
         for(mat2x3 _GLF_SWITCH_0_27v, _GLF_SWITCH_0_28v, _GLF_SWITCH_0_29v; true; lessThanEqual(uvec4(read), uvec4(uvec2(69328u, 197730u), floatBitsToUint(injectionSwitch))))
          {
           if(_GLF_DEAD(false))
            barrier();
           mat4(297.165, -427.946, -9.7, -56.98, -90.96, 7643.7100, -723.810, 6.0, -126.905, -288.672, 837.402, 253.823, -1.2, 1.8, -15.34, 9.2);
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))) || false)))
            barrier();
           bvec3(false, false, _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(bool(true)))));
           mat3x2 _GLF_SWITCH_0_30v, _GLF_SWITCH_0_31v;
           uvec3(149446u, 34435u, 18374u);
           ivec4(_GLF_IDENTITY(51068, (51068) - 0), -13031, 18068, -95676);
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           mat3x4 _GLF_SWITCH_0_32v, _GLF_SWITCH_0_33v, _GLF_SWITCH_0_34v;
           int _GLF_SWITCH_0_35v;
          }
         for(         transpose(mat4x2(8.2, 9.4, 7785.8111, -0.0, -3922.3100, -3199.7619, -2996.1834, 5.7));
 false; (_GLF_IDENTITY(63830, int(ivec4(_GLF_IDENTITY(63830, min(63830, _GLF_IDENTITY(63830, (63830) | (63830)))), 1, 0, 1))) & -7222))
          {
           bvec3 _GLF_SWITCH_0_36v[4], _GLF_SWITCH_0_37v, _GLF_SWITCH_0_38v;
           bvec4(true, true, false, _GLF_IDENTITY(true, ! (! (true))));
           mat3 _GLF_SWITCH_0_39v, _GLF_SWITCH_0_40v, _GLF_SWITCH_0_41v;
           mat4x3(-2.3, 491.450, -1.1, 6872.4676, -7588.4242, _GLF_IDENTITY(0.5, float(mat3x4(0.5, 0.0, 1.0, 0.0, 0.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0))), 875.929, 3207.8480, -7.9, -3.4, -4.0, -6.1);
           bvec4(true, true, false, false);
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(false))
                {
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                  {
                   barrier();
                  }
                }
              }
             else
              {
              }
             barrier();
            }
           mat4x2 _GLF_SWITCH_0_42v, _GLF_SWITCH_0_43v, _GLF_SWITCH_0_44v[73];
           mat3x2(-5.6, 5282.5721, 1.3, 9390.3427, 0.2, 953.022);
          }
         do
          {
           do
            {
             uvec2(73017u, 48295u);
            }
           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))));
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         {
          ivec4 _GLF_SWITCH_0_45v, _GLF_SWITCH_0_46v, _GLF_SWITCH_0_47v;
          mat4(mat4x2(-8558.5026, 516.168, -4.7, 715.069, 292.139, 92.04, 5.1, 5.8));
          ;
          uvec4(196342u, 65990u, 1175u, _GLF_IDENTITY(_GLF_IDENTITY(137448u, uint(uvec2(137448u, 0u))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(137448u, uint(uvec2(137448u, 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(137448u, uint(uvec2(137448u, 0u))), (_GLF_IDENTITY(137448u, uint(uvec2(137448u, 0u)))) / 1u)) / 1u)), (~ (_GLF_IDENTITY(_GLF_IDENTITY(137448u, uint(uvec2(137448u, 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(137448u, uint(uvec2(137448u, 0u))), (_GLF_IDENTITY(137448u, uint(uvec2(137448u, 0u)))) / 1u)) / 1u))) >> 0u))));
          mat3x2 _GLF_SWITCH_0_48v, _GLF_SWITCH_0_49v[55], _GLF_SWITCH_0_50v;
          mat3x2 _GLF_SWITCH_0_51v[45];
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_WRAPPED_IF_TRUE(true))
           {
            bvec3(false, false, false);
           }
          else
           {
           }
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           barrier();
          mat4x3(mat2x3(5.1, 3069.5822, 9633.0291, 5250.4391, 8748.9235, _GLF_IDENTITY(8.4, mix(float(8.4), float(_GLF_FUZZED(-5.0)), bool(false)))));
          mat3x4(mat4x2(-59.98, 3059.0379, 3.5, -42.68, 19.69, -5.9, -5454.2231, 1267.2720));
         }
         if(_GLF_DEAD(false))
          barrier();
        }
       while(false)
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             mat4x3 _GLF_SWITCH_0_52v, _GLF_SWITCH_0_53v;
             for(int _injected_loop_counter = _GLF_IDENTITY(0, (0) | (0)); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), int(3)), (1 << _GLF_IDENTITY(int(3), int(3))) | 0)) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))))); _injected_loop_counter ++)
              {
               mat3x2(8542.7360, 43.33, 417.038, -8405.9874, -5577.6565, -0.5);
              }
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                barrier();
               mat2x4(178.233, 7.2, _GLF_IDENTITY(-7.6, (-7.6) - 0.0), -791.640, -3007.1578, -0.2, 4.3, 1.6);
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               _GLF_IDENTITY(_GLF_IDENTITY(vec2(3.6), (true ? vec2(3.6) : _GLF_FUZZED(injectionSwitch))), (_GLF_IDENTITY(vec2(3.6), (true ? vec2(3.6) : _GLF_FUZZED(injectionSwitch)))) / vec2(1.0, 1.0));
              }
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               do
                {
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                  {
                   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))
                    barrier();
                   do
                    {
                     fma(873.452, determinant(mat4(9.8, -9.7, 55.23, 20.00, -8290.2434, -3.9, -81.09, -8.0, 18.68, -9452.3056, -2144.3828, -32.15, -2.1, -961.866, -91.97, -8.8)), vec4(7.2, -1.6, 8.6, 20.70)[_GLF_IDENTITY(3, (3) | (3))]);
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             if(_GLF_DEAD(false))
              barrier();
             vec2 _GLF_SWITCH_0_54v[1], _GLF_SWITCH_0_55v[44], _GLF_SWITCH_0_56v;
             float _GLF_SWITCH_0_57v;
             mat3x4(clamp(3645.8612, _GLF_SWITCH_0_57v, -10.05), normalize(tan(_GLF_IDENTITY(_GLF_SWITCH_0_57v, max(_GLF_SWITCH_0_57v, _GLF_IDENTITY(_GLF_SWITCH_0_57v, min(_GLF_SWITCH_0_57v, _GLF_SWITCH_0_57v)))))), _GLF_SWITCH_0_57v, 812.022, _GLF_SWITCH_0_57v, -986.850, -403.274, _GLF_SWITCH_0_57v, roundEven(_GLF_SWITCH_0_57v), 3.4, _GLF_SWITCH_0_57v, _GLF_SWITCH_0_57v);
             mat2x3 _GLF_SWITCH_0_58v;
            }
          }
         do
          {
           (uvec3(55496u, 112849u, 175200u) | atomicAdd(num_workgroup, workgroup_size));
          }
         while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))));
         ivec3 _GLF_SWITCH_0_59v[37], _GLF_SWITCH_0_60v;
         (vec3(-92.05, -40.95, 2.2) * vec3(_GLF_IDENTITY(-536.136, min(_GLF_IDENTITY(-536.136, mix(float(_GLF_FUZZED(69.19)), float(-536.136), bool(true))), -536.136)), 9.9, -3.3));
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         for(bvec4 _GLF_SWITCH_0_61v, _GLF_SWITCH_0_62v, _GLF_SWITCH_0_63v[7]; bvec2(_GLF_IDENTITY(true, bool(bvec2(true, false))), _GLF_IDENTITY(true, (true) || false))[1]; (ivec2(-80725, 20366) & ivec2(-38138, _GLF_IDENTITY(90051, ~ (~ (90051))))))
          {
           ;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               barrier();
              }
            }
           if(_GLF_DEAD(false))
            barrier();
           mat4x3 _GLF_SWITCH_0_64v;
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             equal(_GLF_SWITCH_0_61v, _GLF_SWITCH_0_62v);
             if(_GLF_DEAD(false))
              barrier();
            }
           (mat2(6.9, _GLF_IDENTITY(6256.5402, (true ? 6256.5402 : _GLF_FUZZED(887.768))), -71.88, 4.9) / mat2(_GLF_IDENTITY(-270.496, float(mat2x3(-270.496, 1.0, 1.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, _GLF_IDENTITY(1.0, float(mat2x3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0, 1.0, 0.0, 0.0))), 0.0))), _GLF_IDENTITY(1.0, abs(0.0) + (1.0)), 0.0, 1.0, 0.0, exp(0.0), 1.0)), round(_GLF_IDENTITY(length(normalize(vec3(1.0, 1.0, 1.0))), min(length(normalize(vec3(1.0, 1.0, 1.0))), _GLF_IDENTITY(length(normalize(vec3(1.0, 1.0, 1.0))), mix(float(length(normalize(vec3(1.0, 1.0, 1.0)))), float(_GLF_FUZZED(60.26)), bool(false))))))))), -6.6, 4242.7528, -5.7));
           if(_GLF_DEAD(false))
            barrier();
           ivec3 _GLF_SWITCH_0_65v, _GLF_SWITCH_0_66v, _GLF_SWITCH_0_67v;
           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, false || (true))))))
            {
             (+ mat2x3(8.4, 1.3, 1.0, 708.967, 4.8, -9.2));
            }
           else
            {
            }
           mat3x4 _GLF_SWITCH_0_68v[35], _GLF_SWITCH_0_69v, _GLF_SWITCH_0_70v;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         mat2 _GLF_SWITCH_0_71v;
         if(_GLF_DEAD(false))
          barrier();
         do
          {
           bvec4 _GLF_SWITCH_0_72v, _GLF_SWITCH_0_73v, _GLF_SWITCH_0_74v;
           uvec4(42413u, 195439u, 163296u, 195306u);
           ivec2(22568, -76484);
           (uvec3(7040u, 178479u, 112900u) >> _GLF_IDENTITY(uvec3(43439u, 152572u, 145788u), max(uvec3(43439u, 152572u, 145788u), uvec3(43439u, 152572u, 145788u))));
           bool _GLF_SWITCH_0_75v[91], _GLF_SWITCH_0_76v;
          }
         while(bvec3(true, true, false).t);
        }
       if(_GLF_DEAD(false))
        barrier();
       uvec2(153966u, 53298u);
      }
     case 63:
     for(     (mat2x3(299.033, 6.3, 58.27, -70.34, -596.288, 966.559) * _GLF_IDENTITY(mat2(-3220.7624, -96.43, -4.3, 31.89), (true ? mat2(-3220.7624, -96.43, -4.3, _GLF_IDENTITY(31.89, clamp(31.89, 31.89, 31.89))) : _GLF_FUZZED(mat2(4055.3421, 58.70, -7.2, 163.531)))));
 true; bvec3(false, true, false))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
            {
             barrier();
            }
          }
         if(false)
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (int(6)) | 0)))); _injected_loop_counter --)
              {
               _GLF_IDENTITY(uvec3(35080u, 132922u, 47051u), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(uvec3(35080u, 132922u, 47051u), uvec3(uvec4(uvec3(35080u, 132922u, _GLF_IDENTITY(47051u, max(47051u, 47051u))), 1u)))));
              }
            }
           if(_GLF_DEAD(false))
            barrier();
           ;
           if(_GLF_DEAD(false))
            barrier();
           mat2x3(mat3x4(-7123.4770, -7.5, 99.73, _GLF_IDENTITY(-1.0, (-1.0) + _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, float(mat3(0.0, exp(0.0), 1.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 1.0))))), 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)))), -2.9, 4.1, 7.0, 54.16, -2.0, -58.31, 539.305, 47.36));
           ivec2 _GLF_SWITCH_0_77v;
           while(any(bvec2(true, true)))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               ;
              }
             mat2x3 _GLF_SWITCH_0_78v, _GLF_SWITCH_0_79v, _GLF_SWITCH_0_80v;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             ivec4 _GLF_SWITCH_0_81v[99], _GLF_SWITCH_0_82v;
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
              {
               do
                {
                 for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                  {
                   switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
                    {
                     case 41:
                     bvec2(false, false);
                     case 99:
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     ;
                     case 0:
                     case 51:
                     case 58:
                     case 46:
                     workgroup_size;
                     case 34:
                     case 92:
                     case 38:
                     if(_GLF_DEAD(false))
                      barrier();
                     break;
                     default:
                     1;
                    }
                  }
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(166.107) : injectionSwitch.x))) - 0.0) > injectionSwitch.y))));
              }
             uvec2(subgroup_id);
            }
           if(false)
            {
             false;
             mat4x3 _GLF_SWITCH_0_83v, _GLF_SWITCH_0_84v;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             bvec2 _GLF_SWITCH_0_85v, _GLF_SWITCH_0_86v[22], _GLF_SWITCH_0_87v;
             do
              {
               uvec3(185452u, 93121u, _GLF_IDENTITY(131113u, (131113u) / 1u));
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
              barrier();
             uint _GLF_SWITCH_0_88v, _GLF_SWITCH_0_89v, _GLF_SWITCH_0_90v;
             float _GLF_SWITCH_0_91v[66];
            }
           ivec3(77882, 75352, 10756);
           if(true)
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               _GLF_IDENTITY((ivec3(-98112, 14414, 65612) ^ ivec3(-13737, 40242, -13767)), (_GLF_IDENTITY((ivec3(-98112, 14414, _GLF_IDENTITY(65612, ~ (_GLF_IDENTITY(~ (65612), 0 | (~ (65612)))))) ^ ivec3(-13737, 40242, -13767)), ((ivec3(-98112, _GLF_IDENTITY(14414, min(14414, 14414)), 65612) ^ ivec3(-13737, 40242, -13767))) | ((ivec3(-98112, 14414, 65612) ^ ivec3(-13737, 40242, -13767))))) | ivec3(0, 0, 0));
              }
             mat3 _GLF_SWITCH_0_92v, _GLF_SWITCH_0_93v;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             bool _GLF_SWITCH_0_94v, _GLF_SWITCH_0_95v, _GLF_SWITCH_0_96v;
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
              }
             mat4(-6472.5951, -7580.9294, -2815.1694, -8946.8966, 8.8, -9.6, -6.3, 8567.7652, -6.3, 149.865, -9.0, -5.8, 7757.0439, -9749.8593, -852.798, 3.2);
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               mat2x3(vec3(-8759.5226, -858.655, -4.2), ((mat4x3(457.498, 2.2, -1.3, _GLF_IDENTITY(-9.8, (false ? _GLF_FUZZED(sinh(2762.4971)) : _GLF_IDENTITY(-9.8, min(-9.8, -9.8)))), _GLF_IDENTITY(_GLF_IDENTITY(3567.0368, float(mat3x4(3567.0368, 1.0, 1.0, determinant(mat4(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, abs(0.0))), 1.0, abs(1.0), 0.0, sqrt(1.0), 0.0, 1.0, abs(1.0), 0.0))), mix(float(_GLF_FUZZED(241.695)), float(_GLF_IDENTITY(3567.0368, float(mat3x4(3567.0368, 1.0, 1.0, determinant(mat4(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, float(mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0))), 0.0)), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(9.1)), float(_GLF_IDENTITY(0.0, float(mat4x3(0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0)))), bool(true))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0, 0.0, abs(0.0), 0.0, 0.0, abs(0.0))), 1.0, abs(1.0), 0.0, sqrt(1.0), 0.0, 1.0, abs(1.0), 0.0)))), bool(true))), 3.1, 3.1, -568.471, -6.2, 106.358, 44.73, -6.1) * mat2x4(-9.0, 0.0, _GLF_IDENTITY(4.2, (true ? 4.2 : _GLF_FUZZED(-9.9))), -6.2, 10.56, -603.757, 624.026, -4444.3131)) * injectionSwitch));
              }
             else
              {
              }
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                barrier();
               do
                {
                 barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             uint _GLF_SWITCH_0_97v[96], _GLF_SWITCH_0_98v[2], _GLF_SWITCH_0_99v[54];
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 | _GLF_IDENTITY((0 << _GLF_IDENTITY(int(5), int(5))), ((0 << _GLF_IDENTITY(int(_GLF_IDENTITY(5, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_injected_loop_counter) : 5))), int(5)))) | 0))); _injected_loop_counter --)
              {
               if(_GLF_DEAD(false))
                {
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                  {
                   barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                }
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 (mat3x2(-32.96, 1.1, -7.1, 0.1, 3.9, 42.06) * mat2x3(mat2(-74.64, -5.8, -566.826, -6528.8357)));
                }
               else
                {
                }
              }
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
             bool _GLF_SWITCH_0_100v[8], _GLF_SWITCH_0_101v, _GLF_SWITCH_0_102v;
             bvec4 _GLF_SWITCH_0_103v[66], _GLF_SWITCH_0_104v, _GLF_SWITCH_0_105v;
             vec3 _GLF_SWITCH_0_106v[46];
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                barrier();
               int(exp(-42.41));
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 barrier();
                }
              }
             vec2 _GLF_SWITCH_0_107v;
             _GLF_IDENTITY(mat3(-84.49, -38.16, 4850.6094, 613.311, 1.5, 1.0, -2.3, -164.832, 44.90), _GLF_IDENTITY(mat3(_GLF_IDENTITY(mat3(_GLF_IDENTITY(mat3(_GLF_IDENTITY(-84.49, 1.0 * (-84.49)), -38.16, 4850.6094, 613.311, 1.5, 1.0, -2.3, -164.832, _GLF_IDENTITY(44.90, 1.0 * _GLF_IDENTITY((_GLF_IDENTITY(44.90, (true ? 44.90 : _GLF_FUZZED(-760.789)))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(44.90, (true ? 44.90 : _GLF_FUZZED(-760.789)))), ((_GLF_IDENTITY(44.90, (true ? 44.90 : _GLF_FUZZED(-760.789))))) - 0.0), (_GLF_IDENTITY(44.90, (true ? 44.90 : _GLF_FUZZED(-760.789)))), (_GLF_IDENTITY(44.90, (true ? 44.90 : _GLF_FUZZED(-760.789)))))))), (mat3(-84.49, -38.16, 4850.6094, 613.311, 1.5, 1.0, -2.3, -164.832, 44.90)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), (_GLF_IDENTITY(mat3(_GLF_IDENTITY(mat3(-84.49, -38.16, 4850.6094, 613.311, 1.5, 1.0, -2.3, -164.832, 44.90), (mat3(-84.49, -38.16, 4850.6094, 613.311, 1.5, 1.0, -2.3, -164.832, 44.90)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), mat3(mat4(mat3(_GLF_IDENTITY(mat3(-84.49, -38.16, 4850.6094, 613.311, 1.5, 1.0, -2.3, -164.832, 44.90), (mat3(-84.49, -38.16, 4850.6094, 613.311, 1.5, 1.0, -2.3, -164.832, 44.90)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), (true ? _GLF_IDENTITY(mat3(_GLF_IDENTITY(mat3(_GLF_IDENTITY(mat3(-84.49, -38.16, 4850.6094, 613.311, _GLF_IDENTITY(1.5, _GLF_IDENTITY(max(1.5, 1.5), max(max(1.5, 1.5), max(1.5, 1.5)))), 1.0, -2.3, -164.832, 44.90), (mat3(-84.49, _GLF_IDENTITY(-38.16, min(-38.16, -38.16)), 4850.6094, 613.311, 1.5, 1.0, -2.3, -164.832, _GLF_IDENTITY(44.90, min(44.90, _GLF_IDENTITY(44.90, min(44.90, 44.90)))))) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), (mat3(_GLF_IDENTITY(mat3(-84.49, -38.16, 4850.6094, 613.311, 1.5, 1.0, -2.3, -164.832, 44.90), (mat3(-84.49, -38.16, 4850.6094, 613.311, 1.5, 1.0, -2.3, -164.832, 44.90)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(distance(vec4(-974.518, -9.0, 0.6, -11.98), vec4(9.1, -3.8, -50.62, 53.37))) : 0.0)), 0.0)))) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), (mat3(_GLF_IDENTITY(mat3(_GLF_IDENTITY(mat3(-84.49, -38.16, 4850.6094, 613.311, 1.5, 1.0, -2.3, -164.832, _GLF_IDENTITY(44.90, max(44.90, 44.90))), _GLF_IDENTITY((mat3(-84.49, _GLF_IDENTITY(-38.16, _GLF_IDENTITY(min(-38.16, -38.16), clamp(_GLF_IDENTITY(min(-38.16, -38.16), clamp(min(-38.16, -38.16), min(-38.16, -38.16), min(-38.16, -38.16))), _GLF_IDENTITY(_GLF_IDENTITY(min(-38.16, -38.16), (min(-38.16, -38.16)) * 1.0), max(_GLF_IDENTITY(min(-38.16, -38.16), (min(-38.16, -38.16)) * 1.0), _GLF_IDENTITY(min(-38.16, -38.16), (min(-38.16, -38.16)) * 1.0))), min(-38.16, -38.16)))), 4850.6094, 613.311, 1.5, 1.0, -2.3, -164.832, 44.90)), transpose(transpose((mat3(-84.49, _GLF_IDENTITY(-38.16, _GLF_IDENTITY(min(-38.16, -38.16), clamp(_GLF_IDENTITY(min(-38.16, -38.16), clamp(min(-38.16, -38.16), min(-38.16, -38.16), min(-38.16, -38.16))), _GLF_IDENTITY(_GLF_IDENTITY(min(-38.16, -38.16), (min(-38.16, -38.16)) * 1.0), max(_GLF_IDENTITY(min(-38.16, -38.16), (min(-38.16, -38.16)) * 1.0), _GLF_IDENTITY(min(-38.16, -38.16), (min(-38.16, -38.16)) * 1.0))), min(-38.16, -38.16)))), 4850.6094, 613.311, 1.5, 1.0, -2.3, -164.832, 44.90))))) - mat3(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(6084.0412)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), (mat3(_GLF_IDENTITY(_GLF_IDENTITY(mat3(-84.49, -38.16, 4850.6094, 613.311, 1.5, 1.0, -2.3, -164.832, 44.90), (_GLF_IDENTITY(mat3(-84.49, -38.16, 4850.6094, 613.311, _GLF_IDENTITY(1.5, max(_GLF_IDENTITY(1.5, (1.5) - 0.0), 1.5)), 1.0, -2.3, -164.832, 44.90), (mat3(-84.49, -38.16, 4850.6094, 613.311, 1.5, 1.0, -2.3, -164.832, 44.90)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))) * mat3(1.0)), (mat3(-84.49, -38.16, 4850.6094, 613.311, 1.5, 1.0, -2.3, -164.832, 44.90)) - mat3(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0, 0.0, 0.0, 0.0)))) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-2.5)), bool(false))))), 0.0)))) * mat3(1.0)) : _GLF_FUZZED(_GLF_IDENTITY(mat3(-255.972, 9889.9889, 1.3, -84.68, -5.6, -53.86, -845.623, 627.151, 45.55), (false ? _GLF_FUZZED(mat3(-619.369, 0.6, -35.61, -8.0, -7.6, 6.3, _GLF_IDENTITY(-8.5, max(_GLF_IDENTITY(-8.5, max(-8.5, -8.5)), -8.5)), 298.202, 4157.1975)) : _GLF_IDENTITY(mat3(-255.972, 9889.9889, 1.3, -84.68, -5.6, -53.86, -845.623, 627.151, 45.55), (mat3(-255.972, 9889.9889, 1.3, -84.68, -5.6, -53.86, -845.623, 627.151, 45.55)) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))));
             bool _GLF_SWITCH_0_108v[91], _GLF_SWITCH_0_109v, _GLF_SWITCH_0_110v[65];
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            barrier();
           do
            {
             do
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, true, false, true)))))
                {
                 if(true)
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   if(_GLF_DEAD(false))
                    barrier();
                   bvec2 _GLF_SWITCH_0_111v[73], _GLF_SWITCH_0_112v;
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     vec3(9.2, 38.93, _GLF_IDENTITY(4.6, _GLF_IDENTITY(1.0 * (4.6), max(1.0 * (4.6), 1.0 * (4.6)))));
                    }
                   mat2x4(mat3x4(-27.15, 9056.9208, 9.4, -2.2, -3.9, -666.152, 5.5, 6.0, -2.7, 28.48, 49.48, -5.3));
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     (mat3x2(-295.521, 42.98, 6.9, 2978.4436, 1.5, -1.6) + mat3x2(-9.5, _GLF_IDENTITY(9.8, (9.8) - 0.0), 26.48, 4.8, -9.1, -8458.5009));
                    }
                   else
                    {
                    }
                   _GLF_IDENTITY(ivec3(ivec2(-50518, 73895), ivec4(34822, 99797, 68002, -75048).p), ivec3(0, 0, 0) | (ivec3(ivec2(-50518, 73895), ivec4(34822, 99797, 68002, -75048).p)));
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     ;
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                    }
                   bvec3(lessThanEqual(vec4(-230.681, 8.9, -2.3, 4.4), vec4(9.9, 423.709, 6.3, -1438.4418)));
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       (_GLF_IDENTITY((mat3(799.264, 58.66, 4.5, 27.70, -9702.8330, 8860.7291, -9.7, -536.085, -1.3) / log(-128.247)), (false ? _GLF_FUZZED(mat3(-8752.7753, 8.4, -1.9, -6.0, -96.28, 3.5, -4562.3729, 341.028, 46.42)) : _GLF_IDENTITY((mat3(799.264, 58.66, 4.5, 27.70, -9702.8330, 8860.7291, -9.7, -536.085, -1.3) / log(-128.247)), ((mat3(799.264, 58.66, 4.5, 27.70, -9702.8330, 8860.7291, -9.7, -536.085, -1.3) / log(-128.247))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))) / -612.046);
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                         barrier();
                        }
                      }
                    }
                   else
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                    }
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                }
               else
                {
                }
              }
             while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(bool(! (_GLF_IDENTITY(false, ! (! (false)))))))))));
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
       if(_GLF_DEAD(false))
        barrier();
       mat4x2 _GLF_SWITCH_0_113v;
       while(true)
        {
         do
          {
           (mat2(-9455.1716, -29.85, 4078.7756, 6.8) + 5.4);
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
         int _GLF_SWITCH_0_114v, _GLF_SWITCH_0_115v[28], _GLF_SWITCH_0_116v[39];
        }
       -73814;
      }
     default:
     1;
    }
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
