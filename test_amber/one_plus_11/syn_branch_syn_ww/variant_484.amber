#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_1 {
 mat3 _f0;
 uint subgroup_id;
 uvec3 _f1;
 mat4x3 _f2;
} ;

struct _GLF_struct_0 {
 mat2x3 _f0;
 mat3 _f1;
} ;

struct _GLF_struct_2 {
 _GLF_struct_0 _f0;
 mat4 _f1;
 bool _f2;
 ivec3 _f3;
 _GLF_struct_1 _f4;
 vec3 _f5;
} ;

struct _GLF_struct_3 {
 _GLF_struct_2 _f0;
 mat4x2 _f1;
 ivec4 _f2;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 _GLF_struct_3 _GLF_struct_replacement_3 = _GLF_struct_3(_GLF_struct_2(_GLF_struct_0(mat2x3(1.0), mat3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(_GLF_IDENTITY(891.418, clamp(891.418, _GLF_IDENTITY(891.418, float(vec3(891.418, 0.0, 0.0))), 891.418))) : _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(6258.1586) : 1.0)))), exp(0.0), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, abs(0.0), 1.0, 0.0, 0.0)), 0.0), (true ? vec4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(891.418) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), exp(_GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, exp(0.0))))), determinant(mat3(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(0.0 + (0.0), clamp(0.0 + (0.0), 0.0 + (0.0), 0.0 + (0.0)))), 0.0, 0.0, 0.0, abs(0.0), 1.0, 0.0, 0.0)), 0.0) : _GLF_FUZZED(vec4(-618.469, _GLF_IDENTITY(-88.44, (_GLF_IDENTITY(-88.44, clamp(-88.44, _GLF_IDENTITY(-88.44, 0.0 + (-88.44)), -88.44))) + 0.0), 8.5, -7644.7909)))))), min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat3(_GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, sin(0.0), 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, cos(0.0), 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, cos(0.0), 0.0), vec3(0.0, 1.0, 0.0))), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), vec4(1.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0))), 0.0))), (false ? _GLF_FUZZED(891.418) : 1.0)), exp(0.0), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, abs(0.0), 1.0, 0.0, 0.0)), 0.0), (true ? vec4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(891.418) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), exp(0.0), determinant(mat3(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-221.752)), float(0.0), bool(true))))), 0.0, 0.0, abs(0.0), 1.0, 0.0, 0.0)), 0.0) : _GLF_FUZZED(vec4(-618.469, _GLF_IDENTITY(-88.44, (-88.44) / 1.0), 8.5, -7644.7909)))))), (false ? _GLF_FUZZED(-38.49) : _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(891.418) : 1.0)), exp(0.0), determinant(mat3(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec3(49.65, 93.49, -23.54).x) : 0.0)), abs(0.0), _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0)), 0.0), (true ? _GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(_GLF_IDENTITY(891.418, (true ? 891.418 : _GLF_FUZZED(6942.6243)))) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), exp(0.0), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, abs(0.0), 1.0, 0.0, 0.0)), 0.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(891.418) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), exp(0.0), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, abs(0.0), 1.0, 0.0, 0.0)), 0.0), (vec4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(891.418) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), exp(0.0), determinant(mat3(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(5.4)), float(0.0), bool(true))), 0.0, abs(0.0), 1.0, 0.0, 0.0)), 0.0)) * mat4(1.0)) : _GLF_FUZZED(vec4(-4.6, 28.27, 558.358, -2.5)))) : _GLF_FUZZED(vec4(-618.469, -88.44, 8.5, _GLF_IDENTITY(-7644.7909, (false ? _GLF_FUZZED(623.473) : -7644.7909))))))), clamp(_GLF_IDENTITY(float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(891.418) : 1.0)), exp(0.0), determinant(mat3(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec3(49.65, 93.49, -23.54).x) : 0.0)), abs(0.0), 1.0, 0.0, 0.0)), 0.0), (true ? _GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(891.418) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), exp(0.0), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, abs(0.0), 1.0, 0.0, 0.0)), 0.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(891.418) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), exp(0.0), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, abs(0.0), 1.0, 0.0, 0.0)), 0.0), (vec4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(891.418) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), exp(0.0), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, abs(0.0), 1.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0)))) * mat4(1.0)) : _GLF_FUZZED(vec4(-4.6, 28.27, 558.358, -2.5)))) : _GLF_FUZZED(vec4(-618.469, -88.44, 8.5, -7644.7909))))), 1.0 * (_GLF_IDENTITY(float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(891.418) : 1.0)), exp(0.0), determinant(mat3(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec3(49.65, 93.49, -23.54).x) : 0.0)), abs(0.0), 1.0, 0.0, 0.0)), 0.0), (true ? _GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(891.418) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), exp(0.0), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, abs(0.0), 1.0, 0.0, 0.0)), 0.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, (false ? _GLF_IDENTITY(_GLF_FUZZED(891.418), (_GLF_FUZZED(891.418)) - 0.0) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), exp(0.0), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, abs(0.0), 1.0, 0.0, 0.0)), 0.0), (vec4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(891.418) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), exp(0.0), determinant(_GLF_IDENTITY(mat3(0.0, 0.0, 0.0, 0.0, 0.0, abs(0.0), 1.0, 0.0, 0.0), (true ? mat3(0.0, 0.0, 0.0, 0.0, 0.0, abs(0.0), 1.0, 0.0, 0.0) : _GLF_FUZZED(mat3(0.1, -1.8, 59.96, 762.629, 7916.8095, 5.1, 194.616, -0.6, 729.537))))), 0.0)) * mat4(1.0)) : _GLF_FUZZED(vec4(-4.6, 28.27, 558.358, -2.5)))) : _GLF_FUZZED(vec4(-618.469, -88.44, 8.5, -7644.7909))))), mix(float(_GLF_FUZZED(-7.3)), float(float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(891.418) : 1.0)), _GLF_IDENTITY(exp(0.0), mix(float(_GLF_FUZZED(-70.16)), float(exp(0.0)), bool(true))), determinant(mat3(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec3(49.65, 93.49, -23.54).x) : 0.0)), abs(0.0), 1.0, 0.0, 0.0)), 0.0), (true ? _GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(891.418) : _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)))), exp(0.0), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, abs(0.0), 1.0, 0.0, 0.0)), 0.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(891.418) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), exp(0.0), determinant(_GLF_IDENTITY(mat3(0.0, 0.0, 0.0, 0.0, 0.0, abs(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(10.02)), bool(false)))), 1.0, 0.0, 0.0), transpose(transpose(mat3(0.0, 0.0, 0.0, 0.0, 0.0, abs(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(10.02)), bool(false)))), 1.0, 0.0, 0.0))))), 0.0), (vec4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(891.418) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), max(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(891.418) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(891.418) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))))), exp(0.0), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, abs(0.0), 1.0, 0.0, 0.0)), 0.0)) * mat4(1.0)) : _GLF_FUZZED(vec4(-4.6, 28.27, 558.358, -2.5)))) : _GLF_FUZZED(vec4(-618.469, -88.44, 8.5, -7644.7909)))))), bool(true))))), float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(891.418) : 1.0)), exp(0.0), determinant(mat3(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec3(49.65, 93.49, -23.54).x) : 0.0)), abs(0.0), 1.0, 0.0, 0.0)), 0.0), (true ? _GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(891.418, min(891.418, 891.418))) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), (false ? _GLF_FUZZED(1859.7979) : false ? _GLF_FUZZED(_GLF_IDENTITY(891.418, min(891.418, 891.418))) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))))), exp(0.0), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, abs(0.0), 1.0, 0.0, 0.0)), 0.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(891.418) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), exp(0.0), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, abs(0.0), 1.0, 0.0, 0.0)), 0.0), (vec4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(891.418) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), exp(0.0), determinant(mat3(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) * 1.0)) + 0.0), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-0.2)), float(0.0), bool(true))))), abs(0.0), 1.0, 0.0, 0.0)), 0.0)) * mat4(1.0)) : _GLF_FUZZED(vec4(-4.6, _GLF_IDENTITY(28.27, clamp(28.27, 28.27, _GLF_IDENTITY(28.27, (false ? _GLF_FUZZED(-0.5) : 28.27)))), 558.358, -2.5)))) : _GLF_FUZZED(vec4(-618.469, -88.44, 8.5, -7644.7909))))), float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(891.418) : 1.0)), exp(0.0), determinant(mat3(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec3(49.65, 93.49, -23.54).x) : 0.0)), abs(0.0), 1.0, 0.0, 0.0)), 0.0), (true ? _GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(891.418) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), exp(0.0), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, abs(0.0), 1.0, 0.0, 0.0)), 0.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(891.418) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), exp(0.0), determinant(mat3(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-647.734))), 0.0)), 0.0, abs(0.0), 1.0, 0.0, 0.0)), 0.0), (vec4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(891.418) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), exp(_GLF_IDENTITY(0.0, float(vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0)))), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, abs(0.0), 1.0, 0.0, 0.0)), 0.0)) * mat4(1.0)) : _GLF_FUZZED(vec4(-4.6, 28.27, 558.358, -2.5)))) : _GLF_FUZZED(vec4(-618.469, _GLF_IDENTITY(-88.44, mix(float(-88.44), float(_GLF_FUZZED(797.124)), bool(false))), 8.5, -7644.7909)))))))))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(891.418) : 1.0)), exp(0.0), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, abs(0.0), 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / exp(0.0)))), 0.0), _GLF_IDENTITY((true ? vec4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(891.418) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), exp(0.0), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, abs(0.0), 1.0, 0.0, 0.0)), 0.0) : _GLF_FUZZED(vec4(-618.469, _GLF_IDENTITY(-88.44, (false ? _GLF_FUZZED(422.007) : _GLF_IDENTITY(-88.44, (-88.44) / 1.0))), 8.5, -7644.7909))), ((true ? vec4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(891.418) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), exp(0.0), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, abs(0.0), 1.0, 0.0, 0.0)), 0.0) : _GLF_FUZZED(vec4(-618.469, -88.44, 8.5, -7644.7909)))) - vec4(0.0, 0.0, 0.0, 0.0))))), clamp(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(891.418) : 1.0)), exp(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(vec2(-279.608, -2790.9931).t)), float(0.0), bool(true)))), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, abs(0.0), 1.0, 0.0, 0.0)), 0.0), (true ? vec4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(891.418) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), exp(0.0), _GLF_IDENTITY(determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, abs(0.0), 1.0, 0.0, 0.0)), mix(float(_GLF_FUZZED(-24.74)), float(determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, abs(0.0), 1.0, 0.0, 0.0))), bool(true))), 0.0) : _GLF_FUZZED(vec4(-618.469, -88.44, 8.5, -7644.7909)))))), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(891.418) : 1.0)), exp(0.0), determinant(mat3(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x4(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0)), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0, 0.0, 0.0), mat4(1.0) * (mat2x4(0.0, 0.0, 0.0, round(_GLF_IDENTITY(length(normalize(vec3(1.0, 1.0, 1.0))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(mix(-9.1, (true ? 7357.7190 : 3.9), 9432.4042)) : length(normalize(vec3(1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))))))), 0.0, 1.0, 0.0, 0.0))))), 0.0, 0.0, 0.0, 0.0, abs(_GLF_IDENTITY(0.0, float(mat2(0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0)))), 1.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) + 0.0)) / sqrt(1.0))), (true ? vec4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(891.418) : _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), (false ? _GLF_FUZZED(361.294) : _GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(1.0, 1.0, 1.0), float(_GLF_IDENTITY(vec4(clamp(1.0, 1.0, 1.0), 0.0, sqrt(1.0), 0.0), (vec4(clamp(1.0, 1.0, 1.0), 0.0, sqrt(1.0), 0.0)) - vec4(0.0, 0.0, 0.0, 0.0))))))))), exp(0.0), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, abs(0.0), 1.0, 0.0, 0.0)), 0.0) : _GLF_IDENTITY(_GLF_FUZZED(vec4(-618.469, -88.44, 8.5, -7644.7909)), mat4(1.0) * (_GLF_FUZZED(vec4(-618.469, -88.44, 8.5, -7644.7909)))))))), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(_GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(891.418) : 1.0)), exp(0.0), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, abs(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(94.68)), bool(false)))), 1.0, 0.0, 0.0)), 0.0), (vec4(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(891.418) : 1.0)), exp(0.0), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, abs(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(94.68)), bool(false)))), 1.0, 0.0, 0.0)), 0.0)) * vec4(1.0, 1.0, 1.0, 1.0)), (true ? vec4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(891.418) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), float(vec4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 1.0, exp(0.0)))), mix(float(_GLF_FUZZED(45.26)), float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), float(vec4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 1.0, exp(0.0))))), bool(true))))), exp(0.0), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, abs(0.0), 1.0, 0.0, 0.0)), 0.0) : _GLF_FUZZED(vec4(-618.469, -88.44, 8.5, -7644.7909)))))))))))), mat4(1.0), true, ivec3(1), _GLF_struct_1(mat3(1.0), gl_SubgroupID, _GLF_IDENTITY(uvec3(1u), (uvec3(1u)) | (_GLF_IDENTITY(uvec3(1u), _GLF_IDENTITY((uvec3(1u)), uvec3(0u, 0u, 0u) ^ ((uvec3(1u)))) | _GLF_IDENTITY((uvec3(_GLF_IDENTITY(1u, 0u | (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u))) / 1u))))), ((uvec3(_GLF_IDENTITY(1u, 0u | (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u))) / 1u)))))) - uvec3(0u, 0u, 0u))))), mat4x3(1.0)), vec3(1.0)), mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(585.120)), bool(false))), max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))))), ivec4(1));
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     else
      {
       barrier();
      }
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 else
  {
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > ((29453 % 47993) & 0)); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          barrier();
         do
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), true && ((! (false)))) && true))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (injectionSwitch) - vec2(0.0, 0.0)).x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), true && ((! (false)))) && true))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (injectionSwitch) - vec2(0.0, 0.0)).x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), ! (! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), true && ((! (false)))) && true))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (injectionSwitch) - vec2(0.0, 0.0)).x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))))))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true)))
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
               barrier();
              }
            }
          }
        }
       if(_GLF_DEAD(false))
        barrier();
      }
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     do
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           else
            {
            }
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, min(1, 1)))), 1))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), bool(bvec3((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), true, true)))) || false)), (_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), true, true))), bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), true, true))), bvec2(bvec2(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), true, true)))))))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), true, true)))), bool(bool(bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), true, true)))))))))), (injectionSwitch.x < injectionSwitch.y))) || false)))
      {
       barrier();
      }
     else
      {
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     do
      {
       if(_GLF_DEAD(false))
        barrier();
       do
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))));
    }
   else
    {
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 for(int _injected_loop_counter = (int(_GLF_ZERO(0.0, injectionSwitch.x)) | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), float(mat2x3(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), 0.0, 1.0, 1.0, 0.0, 0.0)))), sqrt(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0))), (injectionSwitch) / vec2(1.0, 1.0)).y, bool(bvec4(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y) && true)))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           for(int _injected_loop_counter = (1 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
            {
             barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
          }
        }
       if(_GLF_DEAD(false))
        barrier();
      }
    }
  }
 if(_GLF_DEAD(false))
  {
   do
    {
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, true && (true))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))
      {
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
        }
      }
     else
      {
      }
    }
  }
 else
  {
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), vec2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))) + 0.0), 0.0) + (_GLF_FUZZED(injectionSwitch))) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) / vec2(1.0, 1.0))))).x, min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(7.1, -86.06)) : injectionSwitch))[1]))), _GLF_IDENTITY(vec2(0.0, 0.0), (_GLF_IDENTITY(vec2(0.0, 0.0), max(vec2(0.0, 0.0), vec2(0.0, 0.0)))) + vec2(0.0, 0.0)) + (_GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), mix(vec2(_GLF_FUZZED(83.39), (_GLF_FUZZED(injectionSwitch))[1]), vec2(_GLF_IDENTITY((_GLF_FUZZED(injectionSwitch))[0], max((_GLF_FUZZED(injectionSwitch))[0], (_GLF_FUZZED(injectionSwitch))[0])), _GLF_FUZZED(944.152)), bvec2(true, false))))) : injectionSwitch)).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), _GLF_IDENTITY(vec2(0.0, 0.0) + (_GLF_FUZZED(injectionSwitch)), vec2(1.0, 1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(vec2(0.0, 0.0) + (_GLF_FUZZED(injectionSwitch)), mat2(1.0) * (vec2(0.0, 0.0) + (_GLF_FUZZED(injectionSwitch)))), vec2(mat3(vec2(0.0, 0.0) + (_GLF_FUZZED(injectionSwitch)), 1.0, _GLF_IDENTITY(dot(vec4(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(9.0)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), 0.0, 1.0, 0.0, 1.0, round(length(normalize(1.0))))))))) : injectionSwitch)).x, min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), vec2(0.0, 0.0) + (_GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), (true ? _GLF_FUZZED(injectionSwitch) : _GLF_FUZZED(injectionSwitch))))) : injectionSwitch)).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), vec2(0.0, 0.0) + (_GLF_FUZZED(injectionSwitch))) : injectionSwitch)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), vec2(0.0, 0.0) + (_GLF_FUZZED(injectionSwitch))) : injectionSwitch)), mix(vec2((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), vec2(0.0, 0.0) + (_GLF_FUZZED(injectionSwitch))) : injectionSwitch)))[0], _GLF_FUZZED(-7364.1099)), vec2(_GLF_FUZZED(179.164), (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), vec2(0.0, 0.0) + (_GLF_FUZZED(injectionSwitch))) : injectionSwitch)))[1]), bvec2(false, true))), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), vec2(0.0, 0.0) + (_GLF_FUZZED(injectionSwitch))) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), vec2(0.0, 0.0) + (_GLF_FUZZED(injectionSwitch))) : injectionSwitch)))).x)))) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY((mat2(1.0)), (false ? _GLF_FUZZED(_GLF_IDENTITY(mat2(-7673.9181, -712.122, -8.1, -81.42), (mat2(-7673.9181, -712.122, -8.1, -81.42)) + mat2(0.0, 0.0, 0.0, 0.0))) : _GLF_IDENTITY((mat2(1.0)), ((mat2(1.0))) + mat2(0.0, 0.0, 0.0, 0.0)))) - mat2(0.0, _GLF_IDENTITY(0.0, exp(0.0) * (0.0)), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0)))), max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, _GLF_IDENTITY(_GLF_IDENTITY(max(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0), mix(float(_GLF_FUZZED(53.82)), float(max(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), bool(true))), clamp(_GLF_IDENTITY(max(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0), mix(float(_GLF_FUZZED(53.82)), float(max(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), bool(true))), _GLF_IDENTITY(max(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0), mix(float(_GLF_FUZZED(53.82)), float(max(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), bool(true))), _GLF_IDENTITY(max(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0), mix(float(_GLF_FUZZED(53.82)), float(max(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), bool(true)))))))))) * (injectionSwitch), mix(vec2((_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY((mat2(1.0)), transpose(transpose(_GLF_IDENTITY((mat2(1.0)), ((mat2(1.0))) - mat2(0.0, 0.0, 0.0, 0.0))))) - mat2(0.0, 0.0, 0.0, 0.0)) * (injectionSwitch), min(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY((mat2(1.0)), transpose(transpose(_GLF_IDENTITY((mat2(1.0)), ((mat2(1.0))) - mat2(0.0, 0.0, 0.0, 0.0))))) - mat2(0.0, 0.0, 0.0, 0.0)) * (injectionSwitch), max(_GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY((mat2(1.0)), transpose(transpose(_GLF_IDENTITY((mat2(1.0)), ((mat2(1.0))) - mat2(0.0, 0.0, 0.0, 0.0))))) - mat2(0.0, 0.0, 0.0, 0.0)) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY((mat2(1.0)), transpose(transpose(_GLF_IDENTITY((mat2(1.0)), ((mat2(1.0))) - mat2(0.0, 0.0, 0.0, 0.0))))) - mat2(0.0, 0.0, 0.0, 0.0)) * (injectionSwitch))), _GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY((mat2(1.0)), transpose(transpose(_GLF_IDENTITY((mat2(1.0)), ((mat2(1.0))) - mat2(0.0, 0.0, 0.0, 0.0))))) - mat2(0.0, 0.0, 0.0, 0.0)) * (injectionSwitch))))[0], (_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(78.93) : _GLF_IDENTITY(1.0, min(1.0, 1.0))))), (mat2(1.0)) - mat2(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(distance(vec2(9.1, -3.6), injectionSwitch)) : _GLF_IDENTITY(0.0, float(float(0.0))))), max(0.0, 0.0)), 0.0, 0.0)) * (injectionSwitch))[1]), vec2(_GLF_FUZZED((- _GLF_IDENTITY(-6.1, clamp(-6.1, _GLF_IDENTITY(-6.1, (-6.1) - 0.0), -6.1)))), _GLF_FUZZED(2801.5279)), bvec2(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))) && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(7.3), _GLF_FUZZED(9451.8095)), bvec2(false, false))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x3(injectionSwitch.y, abs(0.0), 1.0, 0.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0, abs(1.0))), clamp(float(mat4x3(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y, abs(0.0), 1.0, 0.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0, abs(1.0))), float(mat4x3(injectionSwitch.y, abs(0.0), 1.0, 0.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0, abs(1.0))), float(mat4x3(injectionSwitch.y, abs(0.0), 1.0, 0.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0, abs(1.0)))))))) ? _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) : injectionSwitch)).y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)).y))) && _GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_TRUE(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y))))))), ! (! ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), bool(bvec4(bool(bool((injectionSwitch.x > injectionSwitch.y))), true, false, false)))))) && true))))), true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), ! (! (false))))), _GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), ! (! ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false)))))) && true, false || (_GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), ! (! ((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y, ! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y), _GLF_IDENTITY(bool(bvec2(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y), true)), bool(bvec2(bool(bvec2(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y), true)), true)))))))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))) && true))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false)))))) && true, false || ((bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-0.4)), float(injectionSwitch.x), bool(true))))) > injectionSwitch.y))))))) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, log(1.0), 1.0, determinant(mat3(1.0, tan(0.0), 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-0.2))), _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)))))))), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, 1.0, 0.0, abs(sqrt(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-178.928)), bool(false))))), 0.0))))).y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)), float(_GLF_FUZZED(-53.57)), bool(false))) : _GLF_FUZZED(-1.0))) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)) && true)), _GLF_IDENTITY(! (! ((_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y))), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y))), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y)))), (bool((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y))))) || false)))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))), (! (! ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))))) || false)), true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(758.318) : injectionSwitch.y)))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))), bool(bool(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))))))), ! (! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))))))))), _GLF_IDENTITY(false, ! (! (false)))))) && true))))))), _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))))).y), ! (! ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch), clamp(_GLF_IDENTITY((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch), vec2(mat3x4((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch), 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch), clamp((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))), (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))).x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true))))))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY((0 ^ 0), (_GLF_IDENTITY((0 ^ 0), ((0 ^ 0)) - (4898 & 0))) | (_GLF_IDENTITY((0 ^ 0), (_GLF_IDENTITY((0 ^ 0), ~ (~ ((0 ^ 0))))) >> 0)))); _injected_loop_counter --)
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         do
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || false))) && true))));
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, ((true) && _GLF_IDENTITY(true, (true) && true)) && true))))
      {
       barrier();
      }
     else
      {
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, max(gl_WorkGroupID.x, gl_WorkGroupID.x)), (_GLF_IDENTITY(gl_WorkGroupID.x, max(gl_WorkGroupID.x, gl_WorkGroupID.x))) ^ 0u), gl_WorkGroupID.x, gl_WorkGroupID.x));
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(6731.4413) : injectionSwitch.y)))) * (workgroup_id)), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec3(! (false), false, false), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(! (false), false, false), bvec3(bvec4(bvec3(! (false), false, false), false))), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(! (false), false, false), bvec3(bvec4(bvec3(! (false), false, false), false))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(! (false), false, false), bvec3(bvec4(bvec3(! (false), false, false), false))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(! (false), false, false), bvec3(bvec4(bvec3(! (false), false, false), false))))), false))))))), true))))))) ? _GLF_FUZZED(usubBorrow(50666u, 119612u, num_workgroup)) : workgroup_id)), (_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(6731.4413) : injectionSwitch.y)))), 0u + (uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(6731.4413) : injectionSwitch.y)))))) * (workgroup_id)), uint(uvec3(_GLF_IDENTITY(workgroup_id, uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true))) ? _GLF_FUZZED(6731.4413) : injectionSwitch.y)))) * (workgroup_id)), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))))), (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (! ((_GLF_IDENTITY(false, ! (! (false))))))))) ? _GLF_FUZZED(usubBorrow(50666u, 119612u, num_workgroup)) : workgroup_id)), (_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(6731.4413) : injectionSwitch.y)))) * (workgroup_id)), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_IDENTITY(_GLF_FUZZED(usubBorrow(50666u, 119612u, num_workgroup)), (_GLF_FUZZED(usubBorrow(50666u, 119612u, num_workgroup))) << 0u) : workgroup_id)), ~ (~ (workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(6731.4413) : injectionSwitch.y)))) * (workgroup_id)), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_IDENTITY(_GLF_FUZZED(usubBorrow(50666u, 119612u, num_workgroup)), (_GLF_FUZZED(usubBorrow(50666u, 119612u, num_workgroup))) << 0u) : workgroup_id)))))) | 0u)) + 0u);
 uint subgroup_base = _GLF_struct_replacement_3._f0._f4.subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / uint(_GLF_ONE(1.0, injectionSwitch.y))), min(_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) >> (0u ^ 0u))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)) + subgroup_base + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) | (workgroup_base), ((workgroup_base) | _GLF_IDENTITY((workgroup_base), uint(uvec2((workgroup_base), 0u)))) / 1u)) + _GLF_IDENTITY(subgroup_base, ~ (~ (_GLF_IDENTITY(subgroup_base, 0u | (subgroup_base))))) + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u), (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)) + subgroup_base + _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) ^ 0u, 0u ^ ((subgroup_local_id) ^ 0u)))) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)) + subgroup_base + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u))), (false ? _GLF_FUZZED(uvec4(38653u, 7638u, 87687u, 125804u)[0]) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) | (workgroup_base), ((workgroup_base) | _GLF_IDENTITY((workgroup_base), uint(uvec2(_GLF_IDENTITY((workgroup_base), ((workgroup_base)) + 0u), 0u)))) / _GLF_IDENTITY(1u, (1u) | (0u << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), uint(uvec4(uint(7u), 0u, 1u, 1u)))))))) + _GLF_IDENTITY(subgroup_base, ~ (~ (_GLF_IDENTITY(subgroup_base, 0u | (subgroup_base))))) + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u), (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)) + subgroup_base + _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) ^ 0u, 0u ^ ((subgroup_local_id) ^ 0u)))) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)) + subgroup_base + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u)))))) << 0u);
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), true, true, false))))), _GLF_IDENTITY(true, false || (true)) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), ! (! (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), true, true, false))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), true, true, false))))), false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y, ! (! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(float(injectionSwitch.y), clamp(float(injectionSwitch.y), float(injectionSwitch.y), float(injectionSwitch.y))))), _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-609.042)), bool(false)))) * 1.0))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(float(injectionSwitch.y), _GLF_IDENTITY(clamp(float(injectionSwitch.y), float(injectionSwitch.y), float(injectionSwitch.y)), (true ? clamp(float(injectionSwitch.y), float(injectionSwitch.y), float(injectionSwitch.y)) : _GLF_FUZZED(545.691)))))), _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(748.043)), bool(false)))))), float(_GLF_FUZZED(-609.042)), bool(false)))) * 1.0)))) && true)), ! (! ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(float(injectionSwitch.y), clamp(float(injectionSwitch.y), float(injectionSwitch.y), float(injectionSwitch.y))))), _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-609.042)), bool(false)))) * 1.0))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(float(injectionSwitch.y), _GLF_IDENTITY(clamp(float(injectionSwitch.y), float(injectionSwitch.y), float(injectionSwitch.y)), (true ? clamp(float(injectionSwitch.y), float(injectionSwitch.y), float(injectionSwitch.y)) : _GLF_FUZZED(545.691)))))), _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(748.043)), bool(false)))))), float(_GLF_FUZZED(-609.042)), bool(false)))) * 1.0)))) && true))))))), _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), false || ((! (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), ! (! (! (! (injectionSwitch.x > injectionSwitch.y))))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), ! (! (! (! (injectionSwitch.x > injectionSwitch.y))))), true))))))), true && (bool(_GLF_IDENTITY(! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), false || ((! (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), ! (! (! (! (injectionSwitch.x > injectionSwitch.y))))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), ! (! (! (! (injectionSwitch.x > injectionSwitch.y))))), true)))))))))), (bool(bool(_GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), ! (! (! (! (injectionSwitch.x > injectionSwitch.y))))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), ! (! (! (! (injectionSwitch.x > injectionSwitch.y))))), true))))))))) || false)))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, (true) && true), false, _GLF_IDENTITY(true, (true) && true))))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
    }
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     do
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))));
    }
   else
    {
    }
  }
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)), _GLF_IDENTITY(1u, uint(uvec2(1u, 1u)))), (_GLF_IDENTITY(uvec2(workgroup_base, 1u), (_GLF_IDENTITY(uvec2(workgroup_base, 1u), (_GLF_IDENTITY(uvec2(workgroup_base, 1u), uvec2(0u, 0u) ^ (uvec2(workgroup_base, 1u)))) * uvec2(1u, 1u))) - uvec2(0u, 0u))) ^ uvec2(0u, 0u)))), ~ (~ (_GLF_IDENTITY(workgroup_base, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)), _GLF_IDENTITY(1u, uint(uvec2(1u, 1u)))), (_GLF_IDENTITY(uvec2(workgroup_base, 1u), (_GLF_IDENTITY(_GLF_IDENTITY(uvec2(workgroup_base, 1u), (_GLF_IDENTITY(uvec2(workgroup_base, 1u), uvec2(0u, 0u) ^ (uvec2(workgroup_base, 1u)))) * uvec2(1u, 1u)), _GLF_IDENTITY(uvec2(uvec4(_GLF_IDENTITY(uvec2(workgroup_base, 1u), (_GLF_IDENTITY(uvec2(workgroup_base, 1u), uvec2(0u, 0u) ^ (uvec2(workgroup_base, 1u)))) * uvec2(1u, 1u)), 0u, 1u)), (uvec2(uvec4(_GLF_IDENTITY(uvec2(workgroup_base, 1u), (_GLF_IDENTITY(uvec2(workgroup_base, 1u), uvec2(0u, 0u) ^ (uvec2(workgroup_base, 1u)))) * uvec2(1u, 1u)), 0u, 1u))) ^ uvec2(0u, 0u)))) - uvec2(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, uint(uint(0u))), 0u)))) | (~ (0u))))), 0u))) ^ uvec2(0u, _GLF_IDENTITY(0u, (0u) | 0u)))))))) + subgroup_base + _GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) | (subgroup_size), _GLF_IDENTITY(0u | ((subgroup_size) | (subgroup_size)), (0u | ((subgroup_size) | (subgroup_size))) | (0u | ((subgroup_size) | (subgroup_size))))))), _GLF_IDENTITY((_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), 0u ^ (((subgroup_local_id + 1) % subgroup_size)))), ((_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), 0u ^ (((subgroup_local_id + 1) % subgroup_size))))) | ((_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), 0u ^ (((subgroup_local_id + 1) % subgroup_size)))))) | 0u), (_GLF_IDENTITY(workgroup_base, uint(_GLF_IDENTITY(uvec2(workgroup_base, _GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, uint(uint(1u))), _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, ~ (~ (1u))), 1u)))))), (_GLF_IDENTITY(uvec2(workgroup_base, 1u), (_GLF_IDENTITY(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)), 1u), _GLF_IDENTITY((_GLF_IDENTITY(uvec2(workgroup_base, 1u), uvec2(_GLF_IDENTITY(0u, (0u) << 0u), 0u) ^ (uvec2(workgroup_base, 1u)))) * uvec2(1u, _GLF_IDENTITY(1u, (1u) / 1u)), uvec2(uvec2((_GLF_IDENTITY(uvec2(_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))), 1u), uvec2(0u, 0u) ^ (uvec2(workgroup_base, _GLF_IDENTITY(1u, min(1u, 1u)))))) * uvec2(1u, 1u))))), (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)), 1u), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uvec2(workgroup_base, 1u), uvec2(0u, 0u) ^ (uvec2(workgroup_base, 1u))), (_GLF_IDENTITY(uvec2(workgroup_base, 1u), uvec2(0u, 0u) ^ (uvec2(workgroup_base, 1u)))) / uvec2(1u, 1u))) * _GLF_IDENTITY(uvec2(1u, 1u), (uvec2(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))) | (uvec2(1u, 1u))), uvec2(uvec2((_GLF_IDENTITY(uvec2(workgroup_base, 1u), uvec2(0u, 0u) ^ (uvec2(workgroup_base, 1u)))) * uvec2(1u, 1u)))))) | uvec2(0u, 0u))) - uvec2(0u, 0u))) ^ uvec2(0u, 0u)))) + subgroup_base + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(0u ^ (((subgroup_local_id + 1) % subgroup_size)), clamp(0u ^ (((subgroup_local_id + 1) % subgroup_size)), _GLF_IDENTITY(0u ^ (((subgroup_local_id + 1) % subgroup_size)), (0u ^ (((subgroup_local_id + 1) % subgroup_size))) - 0u), 0u ^ (((subgroup_local_id + 1) % subgroup_size))))), (_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), clamp(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size))), 0u ^ (((subgroup_local_id + 1) % subgroup_size)))) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(0u ^ (((subgroup_local_id + 1) % subgroup_size)), clamp(0u ^ (((subgroup_local_id + 1) % subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_local_id) : 0u)) ^ (((subgroup_local_id + 1) % subgroup_size)), (0u ^ (((subgroup_local_id + 1) % subgroup_size))) - 0u), 0u ^ (((_GLF_IDENTITY(subgroup_local_id + 1, (true ? subgroup_local_id + 1 : _GLF_FUZZED(bitfieldExtract(subgroup_size, -79808, 79949))))) % subgroup_size))))), (_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), clamp(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size))), 0u ^ ((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (true ? (subgroup_local_id + 1) % subgroup_size : _GLF_FUZZED(subgroup_local_id))))))) / 1u)) * (1u & 1u))) | 0u)) - uint(_GLF_ZERO(0.0, injectionSwitch.x)));
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (true)))), (_GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), (true && (true)) && true))) && true)), _GLF_IDENTITY(! (! (false)), (! (! (false))) || _GLF_IDENTITY(false, false || (false))))))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(1.2)), bool(false))) > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(1.2)), bool(false))) > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(1.2)), bool(false))) > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(1.2)), bool(false))) > injectionSwitch.y)))) || false)) || false))))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       do
        {
         atomicStore(buf[virtual_gid], uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), 0 ^ (~ (1))))), (_GLF_IDENTITY(1, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(1, 0 | (1))), min((_GLF_IDENTITY(1, 0 | (1))), (_GLF_IDENTITY(1, 0 | (1)))))))) >> 0), clamp(_GLF_IDENTITY(1, (1) - _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, (0) * 1))))), 1, _GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_ONE(1.0, injectionSwitch.y)) * (1)), (1) | 0)))), _GLF_IDENTITY(4, (4) << 0), 64, _GLF_IDENTITY(4, (_GLF_IDENTITY(0, min(0, 0)) << _GLF_IDENTITY(int(8), int(8))) + (_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, clamp(4, 4, 4))))))));
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        barrier();
      }
    }
  }
 do
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if((subgroup_local_id % _GLF_IDENTITY(2, ~ (~ (2)))) == 0)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
           atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(2, int(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(2, 0 | (2))), (int(_GLF_IDENTITY(2, 0 | (2)))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), min(int(2), int(2)))))), (uint(_GLF_IDENTITY(2, int(_GLF_IDENTITY(_GLF_IDENTITY(int(2), ~ (~ (_GLF_IDENTITY(int(2), clamp(int(2), int(2), int(2)))))), min(int(2), int(2))))))) ^ 0u), (_GLF_IDENTITY(uint(2), _GLF_IDENTITY((uint(2)), ((uint(_GLF_IDENTITY(2, (2) << 0)))) + 0u) | (uint(2)))) | (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, ~ (~ (3u)))), uint(3u)))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(2, int(_GLF_IDENTITY(int(2), min(int(2), int(2)))))), _GLF_IDENTITY((uint(_GLF_IDENTITY(2, int(_GLF_IDENTITY(int(_GLF_IDENTITY(2, min(2, 2))), min(int(2), int(2))))))) ^ 0u, max((uint(_GLF_IDENTITY(2, int(_GLF_IDENTITY(int(_GLF_IDENTITY(2, min(2, 2))), min(int(2), int(2))))))) ^ 0u, (uint(_GLF_IDENTITY(2, int(_GLF_IDENTITY(int(_GLF_IDENTITY(2, min(2, 2))), min(int(2), int(2))))))) ^ 0u))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(2, int(_GLF_IDENTITY(ivec2(2, 1), (_GLF_IDENTITY(ivec2(2, 1), (ivec2(2, 1)) | (ivec2(2, 1)))) ^ (ivec2(-59388, 46163) & ivec2(0, 0)))))), (uint(2)) | (_GLF_IDENTITY(uint(2), 1u * (uint(2)))))) | (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, ~ (~ (3u)))), uint(3u)))), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(2, int(_GLF_IDENTITY(int(2), min(int(2), int(2)))))), (uint(_GLF_IDENTITY(2, int(_GLF_IDENTITY(int(2), min(int(2), int(_GLF_IDENTITY(_GLF_IDENTITY(2, min(2, 2)), (_GLF_IDENTITY(2, min(2, 2))) >> 0)))))))) ^ 0u), (_GLF_IDENTITY(uint(2), (uint(2)) | (uint(2)))) | (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, ~ (~ (3u)))), uint(_GLF_IDENTITY(3u, clamp(3u, 3u, _GLF_IDENTITY(3u, min(3u, _GLF_IDENTITY(3u, (3u) | 0u))))))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(2, int(_GLF_IDENTITY(int(2), min(int(2), int(2)))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(2, int(_GLF_IDENTITY(int(2), min(int(2), int(2)))))), ~ (~ (uint(_GLF_IDENTITY(2, int(_GLF_IDENTITY(int(2), min(int(2), int(2)))))))))) ^ 0u), (_GLF_IDENTITY(uint(2), (uint(2)) | (uint(2)))) | (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(3u, ~ (~ (3u)))), uint(3u)), (_GLF_IDENTITY(uint(_GLF_IDENTITY(3u, ~ (~ (3u)))), uint(3u))) ^ 0u)))), 0u ^ (_GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(2, _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(int(2), clamp(int(2), int(2), int(2))), min(int(2), int(2)))), (int(_GLF_IDENTITY(_GLF_IDENTITY(int(2), clamp(int(2), int(2), int(2))), min(int(2), int(2))))) << 0))), (uint(_GLF_IDENTITY(2, int(_GLF_IDENTITY(int(2), min(int(2), int(_GLF_IDENTITY(2, min(2, 2))))))))) ^ 0u), (_GLF_IDENTITY(uint(2), (uint(2)) | (uint(_GLF_IDENTITY(2, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (2)))))) | (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, ~ (~ (3u)))), uint(3u)))), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(2, int(_GLF_IDENTITY(int(2), min(int(2), int(2)))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(2, int(_GLF_IDENTITY(int(2), min(int(2), int(2)))))), ~ (~ (uint(_GLF_IDENTITY(2, int(_GLF_IDENTITY(int(2), min(int(2), int(2)))))))))) ^ 0u), (_GLF_IDENTITY(uint(2), (uint(2)) | (uint(2)))) | (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, ~ (~ (3u)))), uint(3u))))), max(max(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(2, int(_GLF_IDENTITY(int(2), min(int(2), int(2)))))), (uint(_GLF_IDENTITY(2, int(_GLF_IDENTITY(int(2), min(int(2), int(_GLF_IDENTITY(2, min(2, 2))))))))) ^ 0u), (_GLF_IDENTITY(uint(2), (uint(2)) | (uint(2)))) | (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, ~ (~ (3u)))), uint(3u)))), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(2, int(_GLF_IDENTITY(int(2), min(int(2), int(2)))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(2, int(_GLF_IDENTITY(int(2), min(int(_GLF_IDENTITY(2, clamp(2, 2, 2))), int(2)))))), ~ (~ (uint(_GLF_IDENTITY(2, int(_GLF_IDENTITY(int(2), min(int(2), int(2)))))))))) ^ 0u), (_GLF_IDENTITY(_GLF_IDENTITY(uint(2), (uint(2)) / (1u & 1u)), (uint(2)) | (uint(2)))) | (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, ~ (~ (3u)))), uint(3u))))), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(2, int(_GLF_IDENTITY(int(2), min(int(2), int(2)))))), (uint(_GLF_IDENTITY(2, int(_GLF_IDENTITY(int(2), min(int(2), int(_GLF_IDENTITY(_GLF_IDENTITY(2, min(2, 2)), ((((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))) << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))) * (_GLF_IDENTITY(2, min(2, _GLF_IDENTITY(2, clamp(2, 2, 2))))))))))))) ^ 0u), (_GLF_IDENTITY(uint(2), (uint(2)) | (uint(2)))) | (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(3u, ~ (~ (3u)))), ~ (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(3u, ~ (~ (3u)))), (uint(_GLF_IDENTITY(3u, ~ (~ (3u))))) >> 0u)))), uint(3u)))), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(2, int(_GLF_IDENTITY(int(2), min(int(2), int(2)))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(2, int(_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) ^ 0), min(int(2), int(2)))))), ~ (~ (uint(_GLF_IDENTITY(2, int(_GLF_IDENTITY(int(2), min(int(2), int(2)))))))))) ^ 0u), (_GLF_IDENTITY(uint(2), (uint(2)) | (uint(2)))) | (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, ~ (~ (3u)))), uint(3u)))))))))) : _GLF_FUZZED(subgroup_base))), 4, _GLF_IDENTITY(_GLF_IDENTITY(64, (64) + 0), clamp(64, 64, 64)), 4);
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
        }
       else
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           do
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y))))))
              {
               do
                {
                 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
                  {
                   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, clamp(_GLF_IDENTITY(_injected_loop_counter, min(_GLF_IDENTITY(_injected_loop_counter, 1 * (_injected_loop_counter)), _injected_loop_counter)), _injected_loop_counter, _injected_loop_counter)) < 1); _injected_loop_counter ++)
                    {
                     barrier();
                    }
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             else
              {
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         else
          {
          }
         atomicStore(buf[next_virtual_gid], uint(2), 4, _GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY(int(ivec2(64, 0)), int(_GLF_IDENTITY(ivec3(int(ivec2(64, 0)), 0, 1), min(ivec3(int(ivec2(64, 0)), 0, 1), ivec3(int(ivec2(64, 0)), 0, 1)))))), (_GLF_IDENTITY(64, _GLF_IDENTITY(1 * (64), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((1 * (64)), _GLF_IDENTITY(((1 * (64))) << 0, 0 ^ (_GLF_IDENTITY(((1 * (64))) << 0, (((1 * (64))) << 0) / 1)))), _GLF_IDENTITY(0 + (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, int(ivec2(1, 1))))) * (64)), (~ (1 * (64))) >> 0)), (0 + (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, int(ivec2(1, 1))))) * (64)), (~ (1 * (64))) >> 0))) >> 0)))))) - 0), 4);
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   else
    {
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)))); _injected_loop_counter ++)
    {
     barrier();
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 & 1)); _injected_loop_counter ++)
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      {
       do
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-29298))), ~ _GLF_IDENTITY((~ (0)), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ _GLF_IDENTITY(((~ _GLF_IDENTITY((0), ((0)) | 0))), min(((~ _GLF_IDENTITY((0), ((0)) | 0))), ((~ _GLF_IDENTITY((0), ((0)) | 0)))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true)))))) && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), false || (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, (0) >> 0)), bool(bvec4(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_IDENTITY(true, (true) || false), _GLF_IDENTITY(true, (true) && true), false)))))), ! (! (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((_GLF_IDENTITY(true, (true) && true)), ! (! ((_GLF_IDENTITY(true, (true) && true))))))))) && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), false || (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, (0) >> 0)), bool(bvec4(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_IDENTITY(true, (true) || false), _GLF_IDENTITY(true, (true) && true), false))))))))), ! (_GLF_IDENTITY(! (true && (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0))), bool(bool(! (true && (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | _GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, (0 << _GLF_IDENTITY(int(2), int(2))) + (0))))) > 0)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true)))))) && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), false || (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, _GLF_IDENTITY((0) >> 0, int(_GLF_IDENTITY(ivec4((0) >> 0, 1, 1, 1), (_GLF_IDENTITY(ivec4((0) >> 0, 1, 1, 1), (false ? _GLF_FUZZED(ivec4(59679, -52064, -52908, -99596)) : _GLF_IDENTITY(ivec4((0) >> 0, 1, 1, 1), (false ? _GLF_FUZZED(ivec4(74067, 24874, -88363, 44831)) : ivec4((0) >> 0, 1, 1, 1)))))) - ivec4(0, 0, 0, 0)))))), bool(bvec4(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_IDENTITY(true, (true) || false), _GLF_IDENTITY(true, (true) && true), false)))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true && (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0))), bool(bool(! (true && (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | 0) > 0)))))), ! (! (_GLF_IDENTITY(! (true && (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0))), bool(bool(! (true && (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | 0) > 0)))))))))))) || false)); _injected_loop_counter --)
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
              barrier();
             for(int _injected_loop_counter = (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0) | 0, (_GLF_IDENTITY(1, (1) | 0) | 0) | 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0))); _injected_loop_counter --)
              {
               barrier();
               if(_GLF_DEAD(false))
                barrier();
              }
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, mix(float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), vec2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), (true ? clamp(injectionSwitch, injectionSwitch, injectionSwitch) : _GLF_FUZZED(vec2(9.3, 89.40)))), 1.0, 1.0, log(1.0), 0.0), (mat3x2(_GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), (true ? clamp(injectionSwitch, injectionSwitch, injectionSwitch) : _GLF_FUZZED(vec2(9.3, 89.40)))), 1.0, 1.0, log(1.0), 0.0)) - mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))).x), float(_GLF_FUZZED(9.7)), bool(false))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) * mat2(1.0)).x, mix(float(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x), float(_GLF_FUZZED(9.7)), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, mix(float(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x), float(_GLF_FUZZED(9.7)), _GLF_IDENTITY(bool(false), (bool(false)) || false))))) > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(-7428.3384)) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), mix(vec2(_GLF_FUZZED(6.3), _GLF_IDENTITY((false ? _GLF_FUZZED(vec2(-7428.3384)) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[1], ((false ? _GLF_FUZZED(vec2(-7428.3384)) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[1]) + 0.0)), vec2((false ? _GLF_FUZZED(vec2(-7428.3384)) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[0], _GLF_FUZZED(-2.9)), bvec2(true, false)))))) * vec2(1.0, 1.0)), injectionSwitch, injectionSwitch)).y))))
              barrier();
            }
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        barrier();
      }
    }
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
