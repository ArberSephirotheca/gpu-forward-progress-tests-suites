#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(8544.9624)), float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), bool(true))) > injectionSwitch.y), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(8544.9624)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(8544.9624), float(vec3(_GLF_FUZZED(8544.9624), 1.0, cos(abs(0.0)))))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(8544.9624)), _GLF_IDENTITY(float(injectionSwitch.x), clamp(float(injectionSwitch.x), float(injectionSwitch.x), float(injectionSwitch.x))), bool(true))) > injectionSwitch.y))))))), bool(bvec3(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(8544.9624)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(8544.9624), mix(float(_GLF_FUZZED(0.5)), float(_GLF_IDENTITY(_GLF_FUZZED(8544.9624), min(_GLF_FUZZED(8544.9624), _GLF_FUZZED(8544.9624)))), bool(true)))), _GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) / 1.0), bool(true))) > injectionSwitch.y), true && _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(8544.9624)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(8544.9624)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))))))), true, true))))), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))), float(_GLF_FUZZED(2.1)), bool(false))) > injectionSwitch.y))) || false)), true), bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), true), true, true))))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false))) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && true)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), false || (false)), bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, false, true)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), true && (false)), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), min(_GLF_IDENTITY((injectionSwitch.y), (false ? _GLF_FUZZED(-89.89) : (injectionSwitch.y))), (injectionSwitch.y))) * determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), false || (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-3777.9441) : injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * determinant(mat3(1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(_GLF_IDENTITY(2.3, 1.0 * (2.3))) : 1.0)), 1.0, 1.0)), 1.0, 0.0, 0.0, 1.0)))))), (bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * _GLF_IDENTITY(determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(refract(3.9, -96.15, -884.083)) : determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))))))) || false)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, ! (! (false))), false, true))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_base + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec3(subgroup_size, 0u, 0u)))) >> 0u));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)).y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, 0.0, 1.0), (mat2(injectionSwitch.y, 0.0, 0.0, 1.0)) / mat2(1.0, 1.0, 1.0, 1.0))))))))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y), ! _GLF_IDENTITY((! (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, _GLF_IDENTITY(true, ! (! (true))), true))))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(! (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, true)))), bool(bool(_GLF_IDENTITY(! (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, true)))), false || (! (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, true)))))))))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, true))), ! (! (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, true))))))))), ! (! (! ((! (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, true))))))))))))))), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y))))) && true)))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(7.2))))) > injectionSwitch.y))))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0]))) / 1.0), injectionSwitch[1])).y))))
    barrier();
  }
 atomicStore(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) * 1u)], uint(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(true ? 1 : _GLF_FUZZED((mat3x4(-1761.5232, -1.8, -6.1, -8.7, 786.402, -8.8, 5810.4875, 4.5, 174.935, -5.9, 7.0, 2.8) , -87755)), min(true ? 1 : _GLF_FUZZED((mat3x4(-1761.5232, -1.8, -6.1, -8.7, 786.402, _GLF_IDENTITY(-8.8, (false ? _GLF_FUZZED(5817.0062) : -8.8)), 5810.4875, 4.5, 174.935, -5.9, 7.0, 2.8) , -87755)), true ? 1 : _GLF_FUZZED((mat3x4(-1761.5232, -1.8, -6.1, _GLF_IDENTITY(-8.7, (-8.7) / 1.0), 786.402, -8.8, 5810.4875, 4.5, _GLF_IDENTITY(174.935, (_GLF_IDENTITY(174.935, min(174.935, 174.935))) - 0.0), -5.9, 7.0, 2.8) , -87755)))))), ~ (~ _GLF_IDENTITY((1), ((1)) / 1)))), 4, 64, 4);
 if(_GLF_DEAD(false))
  return;
 if((subgroup_local_id % 2) == _GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), (true ? 0 : _GLF_FUZZED(-66649))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, true)))))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), true, false)))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), false || ((false))))))), ! (! (! (_GLF_IDENTITY((false), ! (! ((false))))))))))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), true && (_GLF_IDENTITY(false || (false), false || (false || (false))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), min(min(injectionSwitch, injectionSwitch), min(injectionSwitch, injectionSwitch)))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(4487.6563, -5294.5360)) : injectionSwitch)))).y)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) / vec2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(3428.1601)), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 1.0)).y)) && (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, _GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (4) >> 0), _GLF_IDENTITY(4, int(ivec4(4, 1, 0, 0))))));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, uint(uvec3(next_virtual_gid, 0u, 0u)))) - 0u, ((_GLF_IDENTITY(next_virtual_gid, uint(uvec3(next_virtual_gid, 0u, 0u)))) - 0u) | (0u | 0u))), _GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, min(_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY((next_virtual_gid) | (next_virtual_gid), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((next_virtual_gid) | (next_virtual_gid), min((next_virtual_gid) | (next_virtual_gid), (next_virtual_gid) | (next_virtual_gid))), (_GLF_IDENTITY(0u ^ uint(_GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(bitfieldReverse(125226u)) : 0u ^ uint(_GLF_ONE(1.0, injectionSwitch.y))))), (0u << _GLF_IDENTITY(uint(2u), uint(2u))), 0u), (_GLF_IDENTITY(uvec4(_GLF_IDENTITY((next_virtual_gid) | (next_virtual_gid), min((next_virtual_gid) | (next_virtual_gid), (next_virtual_gid) | (next_virtual_gid))), (0u ^ uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y)), injectionSwitch.y))))), (0u << _GLF_IDENTITY(uint(2u), uint(2u))), 0u), (uvec4(_GLF_IDENTITY((next_virtual_gid) | (next_virtual_gid), min((next_virtual_gid) | (next_virtual_gid), (next_virtual_gid) | (next_virtual_gid))), (0u ^ uint(_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(35.89)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), clamp(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(vec2(1.0, 1.0))).y) - 0.0), _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, injectionSwitch.y)), injectionSwitch.y))), _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) - 0.0, ((injectionSwitch.y) - 0.0) / 1.0)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y), max(_GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).y), min(clamp(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), min(_GLF_IDENTITY((injectionSwitch.y), 1.0 * ((injectionSwitch.y))), (injectionSwitch.y))) - 0.0), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y), _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y), max(clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y), _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y), (clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)) - 0.0))))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y), float(mat4(clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y), 1.0, 1.0, exp(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, abs(0.0), cos(0.0), 1.0, 0.0, 1.0))))))), float(_GLF_IDENTITY(mat2x4(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))), 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(_GLF_IDENTITY(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0)), (vec3(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0))) - vec3(0.0, 0.0, 0.0)), vec3(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-5382.4312))) : _GLF_FUZZED(66.66))), 1.0, 1.0))), abs(1.0), 1.0), mat4(1.0) * (mat2x4(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), 1.0 * (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), float(vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), 1.0, 0.0, 0.0))))), injectionSwitch.y))), 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), abs(1.0), 1.0))))), 1.0)), clamp(_GLF_IDENTITY(float(vec2(_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), mix(float(_GLF_FUZZED(3.5)), float((injectionSwitch.y)), bool(true))) - 0.0), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))), float(_GLF_IDENTITY(mat2x4(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(9042.9687) : 0.0))) / 1.0)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_ZERO(0.0, injectionSwitch.x)), injectionSwitch.y, injectionSwitch.y))))), 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), abs(1.0), 1.0), mat4(_GLF_IDENTITY(1.0, (1.0) / exp(0.0))) * (mat2x4(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))), 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), abs(1.0), 1.0))))), 1.0)), min(float(vec2(_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) / 1.0), injectionSwitch.y))), float(_GLF_IDENTITY(mat2x4(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-9.7, 7.2)) : injectionSwitch)).y, injectionSwitch.y)), injectionSwitch.y))), 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), abs(1.0), 1.0), mat4(1.0) * (mat2x4(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), sqrt(0.0) + ((injectionSwitch.y))) - 0.0), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))), 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), abs(1.0), 1.0))))), 1.0)), float(vec2(_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))), float(_GLF_IDENTITY(mat2x4(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))), 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), abs(1.0), 1.0), mat4(1.0) * (mat2x4(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))), 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), abs(1.0), 1.0))))), 1.0)))), float(vec2(_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) - 0.0), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))), float(_GLF_IDENTITY(mat2x4(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(6.5), _GLF_FUZZED(vec2(4.3, -628.389).s)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y))), 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), abs(1.0), 1.0), mat4(1.0) * (mat2x4(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))), 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(1416.2988)), float(1.0), bool(true))), 1.0, 1.0))), abs(1.0), 1.0))))), 1.0)), float(vec2(_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((false ? -1823.1485 : 146.864))), bool(false))), (injectionSwitch.y) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))), float(_GLF_IDENTITY(mat2x4(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))), 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), abs(1.0), 1.0), mat4(1.0) * (mat2x4(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))), 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), _GLF_IDENTITY(abs(1.0), (abs(1.0)) - 0.0), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(float(1.0), (float(1.0)) * _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))))))))))), 1.0))))), (_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))) / 1.0), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))), (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY(clamp(_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, max(2u, 2u))), min(uint(_GLF_IDENTITY(2u, max(2u, 2u))), uint(_GLF_IDENTITY(2u, max(2u, 2u)))))), (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, ~ (_GLF_IDENTITY(~ (2u), min(~ (2u), ~ (2u)))))), uint(2u))) | 0u), 0u << _GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY(0u << _GLF_IDENTITY(uint(2u), uint(2u)), (0u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), min(uint(2u), uint(2u))))) | 0u)), min(clamp(_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, max(2u, _GLF_IDENTITY(2u, (2u) >> 0u))))), _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(2u), uint(2u))), ~ (~ ((0u << _GLF_IDENTITY(uint(2u), uint(2u)))))) | 0u), _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, (0u << _GLF_IDENTITY(uint(4u), uint(4u)))))), uint(uvec3(_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, (0u << _GLF_IDENTITY(uint(4u), uint(4u)))))), 0u, 1u))))) << _GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY(0u << _GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(2u), uint(2u)), clamp(0u << _GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY(0u << _GLF_IDENTITY(uint(2u), uint(2u)), (0u << _GLF_IDENTITY(uint(6u), uint(6u))) ^ (0u << _GLF_IDENTITY(uint(2u), uint(2u)))), 0u << _GLF_IDENTITY(uint(2u), uint(2u))))) | 0u)), _GLF_IDENTITY(clamp(_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, max(2u, 2u)))), (0u << _GLF_IDENTITY(uint(2u), uint(2u))) | 0u), 0u << _GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY(0u << _GLF_IDENTITY(uint(2u), uint(2u)), (0u << _GLF_IDENTITY(uint(2u), uint(2u))) | _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, ~ (~ (0u))), _GLF_IDENTITY(0u, (0u) >> 0u))))), (clamp(_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, max(2u, 2u)))), (0u << _GLF_IDENTITY(uint(2u), uint(2u))) | 0u), 0u << _GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY(0u << _GLF_IDENTITY(uint(2u), uint(2u)), (0u << _GLF_IDENTITY(uint(2u), uint(2u))) | 0u))) | (clamp(_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, max(2u, 2u)))), (0u << _GLF_IDENTITY(uint(2u), uint(2u))) | 0u), 0u << _GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY(0u << _GLF_IDENTITY(uint(2u), uint(2u)), (0u << _GLF_IDENTITY(uint(2u), uint(2u))) | 0u)))))))), 0u)) << uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : 0u))) << 0u), _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u))))) ^ uvec4(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | (0u), (_GLF_IDENTITY((0u) | (0u), 1u * ((0u) | (0u)))) * 1u)), 0u, 0u))))), next_virtual_gid))), min((_GLF_IDENTITY(next_virtual_gid, min(_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY((next_virtual_gid) | (next_virtual_gid), _GLF_IDENTITY(min((next_virtual_gid) | (next_virtual_gid), (next_virtual_gid) | (next_virtual_gid)), uint(_GLF_IDENTITY(uvec3(min((next_virtual_gid) | (next_virtual_gid), (next_virtual_gid) | (next_virtual_gid)), 1u, 1u), uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(uvec3(min((next_virtual_gid) | (next_virtual_gid), (next_virtual_gid) | (next_virtual_gid)), 1u, 1u), min(uvec3(min((next_virtual_gid) | (next_virtual_gid), (next_virtual_gid) | (next_virtual_gid)), 1u, 1u), uvec3(min((next_virtual_gid) | (next_virtual_gid), (next_virtual_gid) | (next_virtual_gid)), 1u, 1u)))))))), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((next_virtual_gid) | (next_virtual_gid), min((next_virtual_gid) | (_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(uint(uvec2(next_virtual_gid, 1u)), (uint(uvec2(next_virtual_gid, 1u))) >> 0u))), (_GLF_IDENTITY(next_virtual_gid, uint(uvec3(next_virtual_gid, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)))) | _GLF_IDENTITY((next_virtual_gid), 0u ^ ((next_virtual_gid))))), (0u ^ _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), clamp(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ONE(1.0, injectionSwitch.y))))), (0u << _GLF_IDENTITY(uint(2u), uint(2u))), 0u), (_GLF_IDENTITY(uvec4(_GLF_IDENTITY((next_virtual_gid) | (next_virtual_gid), min(_GLF_IDENTITY((next_virtual_gid), (_GLF_IDENTITY((next_virtual_gid), ((next_virtual_gid)) * 1u)) | 0u) | (next_virtual_gid), (next_virtual_gid) | (next_virtual_gid))), (0u ^ uint(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(2u), uint(2u)), (0u & 33449u) + (0u << _GLF_IDENTITY(uint(2u), uint(2u))))), 0u), (uvec4(_GLF_IDENTITY((next_virtual_gid) | (next_virtual_gid), min(_GLF_IDENTITY((next_virtual_gid), (_GLF_IDENTITY((next_virtual_gid), ~ (~ ((next_virtual_gid))))) | ((next_virtual_gid))) | (next_virtual_gid), (next_virtual_gid) | (next_virtual_gid))), (0u ^ _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), (mat2(_GLF_ONE(1.0, injectionSwitch.y))) * mat2(1.0))).y))), min(_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))), injectionSwitch.y)), injectionSwitch.y))), (_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(8.0)))), float(_GLF_FUZZED(vec2(2753.3271, -5497.4404).s)), bool(false))))))) / 1.0), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6.3), _GLF_FUZZED(-6.2)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch, injectionSwitch))) / cos(vec2(0.0, 0.0)))) * mat2(1.0)) / _GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) * vec2(1.0, 1.0)))).y, injectionSwitch.y)), injectionSwitch.y)))))), (false ? _GLF_FUZZED(subgroup_id) : uint(_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) + 0.0)) - 0.0), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).y))), min(_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))), (_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / sqrt(vec2(1.0, 1.0))).y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + length(vec4(0.0, 0.0, 0.0, 0.0))), injectionSwitch.y)), injectionSwitch.y)))) / 1.0), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))))), _GLF_IDENTITY((_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(2u), uint(2u)), clamp(_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, max(2u, 2u)))), (0u << _GLF_IDENTITY(uint(2u), uint(2u))) | 0u), 0u << _GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(uint(2u), uint(2u))) >> 0u))), (_GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(uint(2u), uint(2u))) >> 0u))), ~ (~ ((~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(uint(2u), uint(2u))) >> 0u))))))) | 0u)), _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(2u), uint(2u))) | 0u, 0u ^ ((0u << _GLF_IDENTITY(uint(2u), uint(2u))) | 0u)))))), min((_GLF_IDENTITY(_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(2u), uint(2u)), uint(_GLF_IDENTITY(uvec3(0u << _GLF_IDENTITY(uint(2u), uint(2u)), 0u, 1u), (uvec3(0u << _GLF_IDENTITY(uint(2u), uint(2u)), 0u, 1u)) << uvec3(0u, 0u, 0u)))), clamp(_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, max(2u, 2u)))), (0u << _GLF_IDENTITY(uint(2u), uint(2u))) | 0u), 0u << _GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY(0u << _GLF_IDENTITY(uint(2u), uint(2u)), (0u << _GLF_IDENTITY(uint(2u), uint(2u))) | 0u)))), (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), ~ (~ (uint(2u))))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, max(2u, 2u)))), (0u << _GLF_IDENTITY(uint(2u), uint(2u))) | 0u), 0u << _GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY(0u << _GLF_IDENTITY(uint(2u), uint(2u)), (0u << _GLF_IDENTITY(uint(2u), uint(2u))) | 0u)), 0u ^ (clamp(_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, max(2u, 2u)))), (0u << _GLF_IDENTITY(uint(2u), uint(2u))) | 0u), 0u << _GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY(0u << _GLF_IDENTITY(uint(2u), uint(2u)), (0u << _GLF_IDENTITY(uint(2u), uint(2u))) | 0u)))))))), 0u)) << uvec4(0u, 0u, 0u, 0u))) ^ uvec4(0u, _GLF_IDENTITY(0u, (0u) | (0u)), 0u, 0u))))), next_virtual_gid))), (_GLF_IDENTITY(next_virtual_gid, min(_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY((next_virtual_gid) | (next_virtual_gid), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((next_virtual_gid) | _GLF_IDENTITY((next_virtual_gid), _GLF_IDENTITY(((next_virtual_gid)), (((next_virtual_gid))) | (((next_virtual_gid)))) << 0u), min((next_virtual_gid) | (next_virtual_gid), (next_virtual_gid) | (next_virtual_gid))), (_GLF_IDENTITY(0u, (0u) << 0u) ^ uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) / _GLF_ONE(1.0, injectionSwitch.y)))), (0u << _GLF_IDENTITY(uint(2u), uint(2u))), 0u), (_GLF_IDENTITY(uvec4(_GLF_IDENTITY((next_virtual_gid) | (next_virtual_gid), min((next_virtual_gid) | _GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) * 1u)) / 1u)), 0u | ((next_virtual_gid))), _GLF_IDENTITY((next_virtual_gid), 0u + ((next_virtual_gid))) | (next_virtual_gid))), (0u ^ uint(_GLF_ONE(1.0, injectionSwitch.y))), (0u << _GLF_IDENTITY(uint(2u), uint(2u))), 0u), (uvec4(_GLF_IDENTITY((next_virtual_gid) | (next_virtual_gid), min(_GLF_IDENTITY((next_virtual_gid), ((next_virtual_gid)) ^ 0u) | (next_virtual_gid), (next_virtual_gid) | (next_virtual_gid))), (0u ^ uint(_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), max(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), min(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))), min(_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, length(vec3(0.0, 0.0, 0.0)), abs(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0)))), 0.0, sqrt(1.0), 0.0, 0.0, sqrt(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0))).y), clamp((_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, length(vec3(0.0, 0.0, 0.0)), abs(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0)))), 0.0, sqrt(1.0), 0.0, 0.0, sqrt(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, 0.0)), injectionSwitch.x)), 1.0))).y), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, length(vec3(0.0, 0.0, 0.0)), abs(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0)))), 0.0, sqrt(1.0), 0.0, 0.0, sqrt(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0))).y), _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, length(vec3(0.0, 0.0, 0.0)), abs(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0)))), 0.0, sqrt(1.0), 0.0, 0.0, sqrt(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-279.827) : 1.0))))).y)), max(_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, length(vec3(0.0, 0.0, 0.0)), abs(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0)))), 0.0, sqrt(1.0), 0.0, 0.0, sqrt(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-279.827) : 1.0))))).y)), mix(float(_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, length(vec3(0.0, 0.0, 0.0)), abs(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0)))), 0.0, sqrt(1.0), 0.0, 0.0, sqrt(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-279.827) : 1.0))))).y)), min(((_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, length(vec3(0.0, 0.0, 0.0)), abs(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0)))), 0.0, sqrt(1.0), 0.0, 0.0, sqrt(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-279.827) : 1.0))))).y)), ((_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, length(vec3(0.0, 0.0, 0.0)), abs(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0)))), 0.0, sqrt(1.0), 0.0, 0.0, sqrt(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-279.827) : 1.0))))).y))))), float(_GLF_FUZZED(-629.136)), bool(false))), ((_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, length(vec3(0.0, 0.0, 0.0)), abs(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0)))), 0.0, sqrt(1.0), 0.0, 0.0, sqrt(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-279.827) : 1.0))))).y)))) + 0.0), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(7.9, 5.0)) : injectionSwitch)))).x), 1.0, length(vec3(0.0, 0.0, 0.0)), abs(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0)))), 0.0, sqrt(1.0), 0.0, 0.0, sqrt(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0))).y), clamp((_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, length(vec3(0.0, 0.0, 0.0)), abs(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0)))), 0.0, sqrt(1.0), 0.0, 0.0, _GLF_IDENTITY(sqrt(_GLF_ZERO(0.0, injectionSwitch.x)), min(sqrt(_GLF_ZERO(0.0, injectionSwitch.x)), sqrt(_GLF_ZERO(0.0, injectionSwitch.x)))), 1.0))).y), (_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, length(vec3(0.0, 0.0, 0.0)), abs(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0)))), 0.0, sqrt(1.0), 0.0, 0.0, sqrt(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0))).y), (_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(acosh(-1355.8352)) : _GLF_ZERO(0.0, injectionSwitch.x))), 1.0, length(vec3(0.0, 0.0, 0.0)), abs(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0)))), 0.0, sqrt(1.0), 0.0, 0.0, sqrt(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0))).y))))) - 0.0), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))), (_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), mix(float(_GLF_FUZZED(-54.40)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))) / 1.0)), bool(true))))) / 1.0), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) / 1.0), 0.0, 1.0, 0.0))), _GLF_FUZZED(-322.544)), vec2(_GLF_FUZZED(-823.219), (injectionSwitch)[1]), bvec2(false, true))).y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)), injectionSwitch.y))))))), (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(2u), uint(2u)), clamp(_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, max(2u, 2u)))), (0u << _GLF_IDENTITY(uint(2u), uint(2u))) | 0u), 0u << _GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY(0u << _GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(0u)), 0u ^ (_GLF_IDENTITY(uint(uint(0u)), min(uint(uint(0u)), uint(uint(0u))))))) << _GLF_IDENTITY(uint(2u), uint(2u))) | 0u)))), 0u)) << uvec4(0u, 0u, 0u, 0u))) ^ uvec4(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | _GLF_IDENTITY((0u), 0u ^ ((0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | _GLF_IDENTITY((0u), 0u ^ ((0u)))), (_GLF_IDENTITY(0u, (0u) | _GLF_IDENTITY((0u), 0u ^ ((0u))))) | (_GLF_IDENTITY(0u, (0u) | _GLF_IDENTITY((0u), 0u ^ ((0u))))))) << 0u), 0u, 0u))))), next_virtual_gid))))) - 0u)], uint(2), 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
        barrier();
       barrier();
      }
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    return;
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), _GLF_IDENTITY(false || (_GLF_DEAD(false)), ! (! (_GLF_IDENTITY(false || (_GLF_DEAD(false)), bool(_GLF_IDENTITY(bool(false || (_GLF_DEAD(false))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))) || (_GLF_DEAD(false)))), _GLF_IDENTITY((! (bool(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, ! (! (false))), false), false, true))))))) || (_GLF_DEAD(false))))), ((! (bool(false || (_GLF_DEAD(false)))))) && true) && true))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))), true && (bool(bvec2(false, true)))))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))), false || (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
  return;
 if(_GLF_DEAD(false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
