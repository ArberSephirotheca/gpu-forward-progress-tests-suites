#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec4 GLF_merged3_0_2_54_2_1_13_3_1_11GLF_merged2_0_1_16_1_1_13next_virtual_gidsubgroup_basesubgroup_sizevirtual_gid;
 uvec2 GLF_merged2_0_1_16_1_1_13next_virtual_gidsubgroup_base;
 GLF_merged3_0_2_54_2_1_13_3_1_11GLF_merged2_0_1_16_1_1_13next_virtual_gidsubgroup_basesubgroup_sizevirtual_gid.xy = GLF_merged2_0_1_16_1_1_13next_virtual_gidsubgroup_base;
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 GLF_merged3_0_2_54_2_1_13_3_1_11GLF_merged2_0_1_16_1_1_13next_virtual_gidsubgroup_basesubgroup_sizevirtual_gid.z = subgroup_size;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint subgroup_base = subgroup_id * GLF_merged3_0_2_54_2_1_13_3_1_11GLF_merged2_0_1_16_1_1_13next_virtual_gidsubgroup_basesubgroup_sizevirtual_gid.z;
 GLF_merged3_0_2_54_2_1_13_3_1_11GLF_merged2_0_1_16_1_1_13next_virtual_gidsubgroup_basesubgroup_sizevirtual_gid.xy.y = subgroup_base;
 uint virtual_gid = workgroup_base + GLF_merged3_0_2_54_2_1_13_3_1_11GLF_merged2_0_1_16_1_1_13next_virtual_gidsubgroup_basesubgroup_sizevirtual_gid.xy.y + subgroup_local_id;
 GLF_merged3_0_2_54_2_1_13_3_1_11GLF_merged2_0_1_16_1_1_13next_virtual_gidsubgroup_basesubgroup_sizevirtual_gid.w = virtual_gid;
 uint next_virtual_gid = workgroup_base + GLF_merged3_0_2_54_2_1_13_3_1_11GLF_merged2_0_1_16_1_1_13next_virtual_gidsubgroup_basesubgroup_sizevirtual_gid.xy.y + ((subgroup_local_id + 1) % GLF_merged3_0_2_54_2_1_13_3_1_11GLF_merged2_0_1_16_1_1_13next_virtual_gidsubgroup_basesubgroup_sizevirtual_gid.z);
 GLF_merged3_0_2_54_2_1_13_3_1_11GLF_merged2_0_1_16_1_1_13next_virtual_gidsubgroup_basesubgroup_sizevirtual_gid.xy.x = next_virtual_gid;
 atomicStore(buf[GLF_merged3_0_2_54_2_1_13_3_1_11GLF_merged2_0_1_16_1_1_13next_virtual_gidsubgroup_basesubgroup_sizevirtual_gid.w], uint(1), 4, 64, 4);
 if((subgroup_local_id % 2) == 0)
  {
   switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
    {
     case 60:
     ;
     case 0:
     atomicStore(buf[GLF_merged3_0_2_54_2_1_13_3_1_11GLF_merged2_0_1_16_1_1_13next_virtual_gidsubgroup_basesubgroup_sizevirtual_gid.xy.x], uint(2), 4, 64, 4);
     break;
     default:
     1;
    }
  }
 else
  {
   switch(_GLF_SWITCH(0))
    {
     case 8:
     mat3(-4.9, -1.3, 372.413, -2.2, 2.0, 52.82, -2.9, 50.11, 5.4);
     case 47:
     do
      {
       ivec2 _GLF_SWITCH_1_0v, _GLF_SWITCH_1_1v;
       ;
       if(true)
        {
         switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
          {
           case 27:
           ;
           case 35:
           mat2(-2.5, -75.83, 7.6, -462.015);
           case 0:
           case 70:
           uvec2 _GLF_SWITCH_1_2v, _GLF_SWITCH_1_3v;
           num_workgroup;
           case 28:
           case 54:
           case 99:
           while((mat2x3(0.2, -3.2, 1.7, 130.275, -8.5, 38.84) != mat2x3(-1853.8030, -7819.9139, -2.6, 65.56, -6275.4128, -6.1)))
            {
             mat3x4(-81.69, 3728.8524, 867.538, 20.58, -9935.8425, 1406.1422, -4259.6234, 833.978, -4.4, 8.8, -8321.9832, -3174.7315);
             ivec3(-30369, 49942, -82155);
             bool _GLF_SWITCH_1_4v[70], _GLF_SWITCH_1_5v;
             mat2 _GLF_SWITCH_1_6v, _GLF_SWITCH_1_7v[98];
             ivec4 _GLF_SWITCH_1_8v;
             vec4(460.854, 3846.7858, -8.0, -3.1);
            }
           ;
           break;
           default:
           1;
          }
        }
       findLSB(((GLF_merged3_0_2_54_2_1_13_3_1_11GLF_merged2_0_1_16_1_1_13next_virtual_gidsubgroup_basesubgroup_sizevirtual_gid.w & 199227u) << 23104u));
       uvec3(152872u, 141172u, 154869u);
       {
        switch(_GLF_SWITCH((0 >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) | 0)))))
         {
          case 0:
          case 70:
          case 40:
          (mat2x4(89.45, 1074.6886, -6.9, 9.8, -5442.9643, 9.7, 1828.1486, -31.37) , (- mat3x2(9.4, 218.405, 8208.0080, -5.8, -4286.9035, 1184.5854)));
          case 81:
          case 69:
          case 4:
          mat3(6270.8213, -61.52, 56.63, 549.917, -9148.3005, -7.0, -0.6, -3.7, 614.771);
          {
           mat4x3(-4.7, 1.5, 5.2, 2037.3207, -159.231, 74.90, 33.23, -80.51, 3.2, -7.5, 172.998, 516.013);
           ;
           mat3x2 _GLF_SWITCH_1_9v[81], _GLF_SWITCH_1_10v;
           isinf((5.1 / 434.849));
           bool _GLF_SWITCH_1_11v[85];
           injectionSwitch;
           ;
           uvec2 _GLF_SWITCH_1_12v[57];
          }
          case 38:
          for(          mat2x3(-671.980, -7.3, 1.3, 78.81, -4.8, -4.3);
 false; (ivec4(-84899, 472, -65027, -54016) / 61924))
           {
            isinf(max(vec2(-4.1, -52.59), -4.9));
            (mat3x4(7.3, -20.01, 9.9, 4.7, -51.30, -152.455, 5375.5327, -7057.4849, 9677.5882, -4764.1038, 60.37, -1.8) - mat3x4(-5.4, 3747.1382, -24.22, -688.432, 1763.9027, 2898.9939, 9.7, -8.8, -819.092, -8.8, -35.14, -6.0));
            mat3(-1.0, 4.7, -75.63, 413.800, 4.7, -4.0, -7165.8584, 4.6, 5850.5902);
            (mat3x4(mat3x2(439.583, -4.8, 2670.9160, -1.9, 41.54, 425.960)) * mat3(4970.1136, -3360.6639, 54.35, -4.0, -844.116, -8.9, 6.8, -14.46, 65.95));
            ;
            (max(uvec4(30452u, 182723u, 76816u, 165106u), uvec4(87502u, 11318u, 115059u, 8014u)) , bvec3(false, true, false));
            vec2(-94.84, -9211.0889);
            mat4(3.7, 268.885, 907.798, -2187.1442, -7.6, -24.36, 5328.3473, 8497.8325, -3530.2148, 49.51, -585.899, -7.1, -317.853, -2.6, -73.17, 464.147);
            vec3 _GLF_SWITCH_1_13v[76], _GLF_SWITCH_1_14v;
           }
          case 7:
          case 54:
          case 78:
          sign((36097 ^ _GLF_SWITCH_1_0v).rr);
          break;
          default:
          1;
         }
       }
       ;
       {
        while(false)
         {
          ;
          (uvec4(124948u, 111179u, 48603u, 18428u) & uvec4(74959u, 114216u, 18286u, 187061u));
          mat2x4(-6.7, 507.345, 8.3, 1.0, 8.2, -9104.2392, 3175.2402, -208.494);
          (GLF_merged3_0_2_54_2_1_13_3_1_11GLF_merged2_0_1_16_1_1_13next_virtual_gidsubgroup_basesubgroup_sizevirtual_gid.xy << workgroup_id);
         }
        float _GLF_SWITCH_1_15v;
        (mat3(185.196, -9533.7878, -61.93, -33.15, -28.66, -1.5, 61.74, 3745.4152, 49.25) / mat3(mat3x2(8.3, -0.7, -857.199, 26.27, -1.7, -37.10)));
        mat3 _GLF_SWITCH_1_16v, _GLF_SWITCH_1_17v;
        (ivec3(63325, -43222, -32640) % 63102);
       }
      }
     while(false);
     case 0:
     case 61:
     case 21:
     case 95:
     case 24:
     case 65:
     case 13:
     atomicStore(buf[GLF_merged3_0_2_54_2_1_13_3_1_11GLF_merged2_0_1_16_1_1_13next_virtual_gidsubgroup_basesubgroup_sizevirtual_gid.xy.x], uint(2), 4, 64, 4);
     break;
     case 19:
     vec2 _GLF_SWITCH_1_18v[40], _GLF_SWITCH_1_19v, _GLF_SWITCH_1_20v;
     case 33:
     for(     (mat4(-23.94, 3.2, -0.2, 4745.9307, 835.141, 4.7, -290.321, -67.35, -3.7, 0.6, -9.9, -43.61, -8.5, -0.5, -7.6, -9.6) * mat4(-9.9, -0.8, 121.515, 995.090, -8.7, -940.220, 4.1, 0.5, 5.0, -33.11, 48.94, 2.7, -0.4, -3.3, 8.8, -4.5));
 true; mat2(62.93, 5.9, -19.59, 49.11))
      {
       ivec3(ivec2(73507, -89590), 42264);
      }
     default:
     1;
    }
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
