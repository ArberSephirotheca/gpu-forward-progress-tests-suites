#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_1 {
 uvec3 _f0;
 mat3x4 _f1;
 mat2x3 _f2;
 bvec3 _f3;
 bvec2 _f4;
} ;

struct _GLF_struct_2 {
 mat4x2 _f0;
 _GLF_struct_1 _f1;
 bool _f2;
} ;

struct _GLF_struct_0 {
 uvec3 _f0;
 mat3x2 _f1;
 mat3 _f2;
} ;

struct _GLF_struct_3 {
 _GLF_struct_0 _f0;
 _GLF_struct_2 _f1;
 uint next_virtual_gid;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (bool(bvec3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (! (bool(bvec3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) | (gl_NumWorkGroups), ((gl_NumWorkGroups) | (gl_NumWorkGroups)) << uvec3(0u, 0u, 0u)))), ((_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) | (gl_NumWorkGroups), ((gl_NumWorkGroups) | (gl_NumWorkGroups)) << uvec3(0u, _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, ~ (~ (0u)))), 0u + (~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) >> 0u), ~ (~ (0u)))))))))), 0u))))) ^ uvec3(0u, 0u, 0u)) + uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 0u)), min(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups) | (gl_NumWorkGroups), max((gl_NumWorkGroups) | (gl_NumWorkGroups), _GLF_IDENTITY((gl_NumWorkGroups) | (gl_NumWorkGroups), ((gl_NumWorkGroups) | (gl_NumWorkGroups)) >> uvec3(0u, 0u, 0u)))), (false ? _GLF_FUZZED(uvec3(71784u, 112960u, 181680u)) : _GLF_IDENTITY((gl_NumWorkGroups) | (gl_NumWorkGroups), max((gl_NumWorkGroups) | (gl_NumWorkGroups), _GLF_IDENTITY((gl_NumWorkGroups) | (gl_NumWorkGroups), ((gl_NumWorkGroups) | (gl_NumWorkGroups)) >> uvec3(0u, 0u, 0u)))))), (_GLF_IDENTITY((gl_NumWorkGroups) | (gl_NumWorkGroups), ((gl_NumWorkGroups) | (gl_NumWorkGroups)) | uvec3(0u, 0u, 0u))) << _GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(uvec3(uvec3(0u, 0u, 0u))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(uvec4(gl_NumWorkGroups, 1u)), (uvec3(uvec4(gl_NumWorkGroups, 1u))) << uvec3(0u, 0u, 0u)))) / uvec3(1u, 1u, 1u)), _GLF_IDENTITY((gl_NumWorkGroups) | (gl_NumWorkGroups), ((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(1u), _GLF_IDENTITY(uvec3(1u), (uvec3(1u)) * uvec3(1u, 1u, 1u)))))) | (gl_NumWorkGroups)) << uvec3(0u, 0u, 0u))))) ^ uvec3(0u, 0u, 0u)) + uvec3(_GLF_IDENTITY(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(26399u) : _GLF_IDENTITY(0u, ~ (~ (0u))))), 0u)), min(0u, 0u)), 0u, 0u)), _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) | (gl_NumWorkGroups), ((gl_NumWorkGroups) | (gl_NumWorkGroups)) << uvec3(0u, 0u, 0u)))), ((_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) | (gl_NumWorkGroups), (_GLF_IDENTITY((gl_NumWorkGroups) | (gl_NumWorkGroups), ((gl_NumWorkGroups) | (gl_NumWorkGroups)) + uvec3(0u, 0u, 0u))) << uvec3(0u, 0u, 0u))))) ^ uvec3(0u, 0u, 0u)) + _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 0u), (true ? uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(117149u) : 0u))) : _GLF_FUZZED(clamp(uvec3(42228u, 75390u, 120967u), uvec3(178876u, 177489u, 108531u), uvec3(199246u, 23537u, 142821u)))))))).x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, _GLF_IDENTITY(false, false || (false))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, true && (true)) && (false))))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(subgroup_size) : workgroup_size)) * workgroup_id, (workgroup_size * _GLF_IDENTITY(workgroup_id, (true ? workgroup_id : _GLF_FUZZED(num_workgroup)))) - 0u);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))) || false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), false, true))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-3435.0858)), float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 1.0)))))), bool(true))) > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, false))), true, false, false)))))
    barrier();
   barrier();
  }
 uint subgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)), uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(float(192484u))), bool(false))))))), (uint(uvec2(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)), uint(_GLF_ONE(1.0, injectionSwitch.y))))) / 1u)))) * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), clamp(_GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), (false ? _GLF_FUZZED(workgroup_id) : clamp(subgroup_size, subgroup_size, subgroup_size))), clamp(subgroup_size, subgroup_size, subgroup_size), clamp(subgroup_size, subgroup_size, subgroup_size)))), (_GLF_TRUE(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), true && (_GLF_IDENTITY((! (true)), ! (! ((! (true)))))))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))), max(_GLF_IDENTITY((injectionSwitch) * mat2(_GLF_IDENTITY(1.0, (1.0) / 1.0)), mat2(1.0) * ((injectionSwitch) * mat2(1.0))), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(vec2(2.2, 4007.4313))))))).y)) ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), clamp(subgroup_size, subgroup_size, subgroup_size)) : _GLF_FUZZED(subgroup_local_id))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), (clamp(subgroup_size, subgroup_size, subgroup_size)) | 0u)), _GLF_IDENTITY((_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, true))), (_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, 0.0))) < _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, sqrt(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0))))) ? _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u))), 0u ^ ((_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, true))), (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)) : _GLF_FUZZED(subgroup_local_id)))))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), _GLF_IDENTITY((clamp(subgroup_size, subgroup_size, subgroup_size)) | 0u, ((clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) << (0u >> _GLF_IDENTITY(uint(8u), uint(8u)))), subgroup_size, subgroup_size)) | 0u) | 0u))), _GLF_IDENTITY((_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec3(true, true, true)))), bool(bvec3(! (_GLF_IDENTITY(true, bool(bvec3(true, true, true)))), _GLF_IDENTITY(true, (true) || false), true)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), float(vec3(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), sin(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, log(1.0), 1.0, 1.0, 1.0, length(0.0), 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, 1.0)), 0.0, sin(0.0), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec2(1.0, 0.0)), mix(float(float(vec2(1.0, 0.0))), float(_GLF_FUZZED((776.827 / -1787.9059))), bool(false)))), 0.0, 0.0))).x, 0.0, 0.0))) < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec3(subgroup_size, 1u, 0u)), (uint(uvec3(subgroup_size, 1u, 0u))) * _GLF_IDENTITY(1u, (1u) | (15797u & (0u >> _GLF_IDENTITY(uint(8u), uint(8u))))))))) : _GLF_FUZZED(subgroup_local_id)), 0u ^ ((_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, true))), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? clamp(subgroup_size, subgroup_size, subgroup_size) : _GLF_FUZZED(atomicAnd(workgroup_size, subgroup_size))))) : _GLF_FUZZED(subgroup_local_id)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), (clamp(subgroup_size, subgroup_size, subgroup_size)) | 0u)), max(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), (clamp(subgroup_size, subgroup_size, subgroup_size)) | 0u)), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), (clamp(subgroup_size, subgroup_size, subgroup_size)) | 0u)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, true))), (_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, 0.0))) < injectionSwitch.y)), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, true))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, 0.0))) < injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, 0.0))), (_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, 0.0)))) + determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, log(1.0), 0.0, 0.0))) < _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-1.2)), bool(false)))) && true))), ! (! (_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, true))), (_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, 0.0))) < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, true))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, 0.0))) < injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, 0.0))), (_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, 0.0)))) + determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, log(1.0), 0.0, 0.0))) < _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-1.2)), bool(false)))) && true))), ! (! (_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, true))), (_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, 0.0))) < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, true))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, 0.0))) < injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, 0.0))), (_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, 0.0)))) + determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, log(1.0), 0.0, 0.0))) < _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-1.2)), bool(false)))) && true))), ! (! (_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, true))), (_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, 0.0))) < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))))), ! (! ((_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, true))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, 0.0))) < injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, 0.0))), (_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, 0.0)))) + determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, log(1.0), 0.0, 0.0))) < _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-1.2)), bool(false)))) && true))), ! (! (_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, true))), (_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, 0.0))) < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))))))))), bool(bvec2(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, true))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, 0.0))) < injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, 0.0))), (_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, 0.0)))) + determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, log(1.0), 0.0, 0.0))) < _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-1.2)), bool(false)))) && true))), ! (! (_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, true))), (_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, 0.0))) < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))))), ! (! ((_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, true))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, 0.0))) < injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, 0.0))), (_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, 0.0)))) + determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, log(1.0), 0.0, 0.0))) < _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-1.2)), bool(false)))) && true))), ! (! (_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, true))), (_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, 0.0))) < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))))))))), true)))))) && true), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, bool(bvec2(true, true))), true, false, true))), bool(bvec2(true, true))), (_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, 0.0))) < injectionSwitch.y)), ! (! (_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, true))), (_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, 0.0))) < injectionSwitch.y)))))), ! (! (! (_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, true))), (_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, 0.0))) < injectionSwitch.y)), ! (! (_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), ! (! (_GLF_IDENTITY(bool(bvec2(true, true)), ! (! (bool(bvec2(true, true))))))))), (_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, 0.0))) < injectionSwitch.y)))))))))) || false))) ? _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)) : _GLF_FUZZED(subgroup_local_id)), 0u ^ ((_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec4(! (true), false, true, true)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec2(-9.1, -7.9).g), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(30.76)), bvec2(true, false))), injectionSwitch)).x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)) : _GLF_FUZZED(subgroup_local_id)))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), (clamp(subgroup_size, subgroup_size, subgroup_size)) | 0u)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, true))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), 1.0, 1.0, 0.0, 0.0))), injectionSwitch)).x, float(vec3(injectionSwitch.x, 0.0, 0.0))) < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 0.0, 1.0, 1.0))))))) ? _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))), 0u ^ ((_GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), ! (! (_GLF_IDENTITY(true, bool(bvec2(true, true)))))))), (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), subgroup_size)) : _GLF_FUZZED(subgroup_local_id)))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, true))), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec3(injectionSwitch.x, 0.0, 0.0)), (true ? _GLF_IDENTITY(float(vec3(injectionSwitch.x, 0.0, 0.0)), max(float(vec3(injectionSwitch.x, 0.0, 0.0)), float(vec3(injectionSwitch.x, 0.0, 0.0)))) : _GLF_FUZZED(6.1)))) < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 1u, 0u, 1u))), subgroup_size, subgroup_size)) : _GLF_FUZZED(subgroup_local_id)), _GLF_IDENTITY(0u ^ ((_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, true))), (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)) : _GLF_FUZZED(subgroup_local_id))), _GLF_IDENTITY(uint(uint(0u ^ ((_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, true))), (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)) : _GLF_FUZZED(subgroup_local_id))))), 0u + (uint(uint(0u ^ ((_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, true))), (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)) : _GLF_FUZZED(subgroup_local_id)))))))))), (false ? _GLF_FUZZED(usubBorrow(subgroup_local_id, workgroup_id, workgroup_base)) : _GLF_IDENTITY((_GLF_IDENTITY((_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, true))), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec3(injectionSwitch.x, 0.0, 0.0)), (true ? _GLF_IDENTITY(float(vec3(injectionSwitch.x, 0.0, 0.0)), max(float(vec3(injectionSwitch.x, 0.0, 0.0)), float(vec3(injectionSwitch.x, 0.0, 0.0)))) : _GLF_FUZZED(6.1)))) < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 1u, 0u, 1u))), subgroup_size, subgroup_size)) : _GLF_FUZZED(subgroup_local_id)), _GLF_IDENTITY(0u ^ ((_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, true))), (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)) : _GLF_FUZZED(subgroup_local_id))), _GLF_IDENTITY(uint(uint(0u ^ ((_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, true))), (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)) : _GLF_FUZZED(subgroup_local_id))))), 0u + (uint(uint(0u ^ ((_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, true))), (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)) : _GLF_FUZZED(subgroup_local_id)))))))))), max((_GLF_IDENTITY((_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, true))), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec3(injectionSwitch.x, 0.0, 0.0)), (true ? _GLF_IDENTITY(float(vec3(injectionSwitch.x, 0.0, 0.0)), max(float(vec3(injectionSwitch.x, 0.0, 0.0)), float(vec3(injectionSwitch.x, 0.0, 0.0)))) : _GLF_FUZZED(6.1)))) < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 1u, 0u, 1u))), subgroup_size, subgroup_size)) : _GLF_FUZZED(subgroup_local_id)), _GLF_IDENTITY(0u ^ ((_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, true))), (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)) : _GLF_FUZZED(subgroup_local_id))), _GLF_IDENTITY(uint(uint(0u ^ ((_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, true))), (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)) : _GLF_FUZZED(subgroup_local_id))))), 0u + (uint(uint(0u ^ ((_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, true))), (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)) : _GLF_FUZZED(subgroup_local_id)))))))))), (_GLF_IDENTITY((_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, true))), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec3(injectionSwitch.x, 0.0, 0.0)), (true ? _GLF_IDENTITY(float(vec3(injectionSwitch.x, 0.0, 0.0)), max(float(vec3(injectionSwitch.x, 0.0, 0.0)), float(vec3(injectionSwitch.x, 0.0, 0.0)))) : _GLF_FUZZED(6.1)))) < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 1u, 0u, 1u))), subgroup_size, subgroup_size)) : _GLF_FUZZED(subgroup_local_id)), _GLF_IDENTITY(0u ^ ((_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, true))), (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)) : _GLF_FUZZED(subgroup_local_id))), _GLF_IDENTITY(uint(uint(0u ^ ((_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, true))), (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)) : _GLF_FUZZED(subgroup_local_id))))), 0u + (uint(uint(0u ^ ((_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, true))), (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)) : _GLF_FUZZED(subgroup_local_id)))))))))))))) | 0u)))))), min(_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)), uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(float(192484u))), bool(false))))))), (uint(uvec2(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)), uint(_GLF_ONE(1.0, injectionSwitch.y))))) / 1u)))) * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), clamp(_GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), (false ? _GLF_FUZZED(workgroup_id) : clamp(subgroup_size, subgroup_size, subgroup_size))), clamp(subgroup_size, subgroup_size, subgroup_size), clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), subgroup_size)))), (_GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), ! (! (true))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), max(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), mat2(1.0) * ((injectionSwitch) * mat2(1.0))), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(vec2(2.2, 4007.4313))))))).y)) ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), clamp(subgroup_size, subgroup_size, subgroup_size)) : _GLF_FUZZED(subgroup_local_id))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), (clamp(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) | (subgroup_size))) ^ 0u), subgroup_size, subgroup_size)) | 0u)), _GLF_IDENTITY((_GLF_TRUE(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(bvec2(true, true), false))))), (_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, 0.0))) < _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, sqrt(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0))))) ? _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)) : _GLF_FUZZED(subgroup_local_id)), 0u ^ ((_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, true))), (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)) : _GLF_FUZZED(subgroup_local_id)))))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), _GLF_IDENTITY((clamp(subgroup_size, subgroup_size, subgroup_size)) | 0u, ((clamp(subgroup_size, subgroup_size, subgroup_size)) | 0u) | 0u))), _GLF_IDENTITY((_GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (true) || false), true, false, false))), bool(bvec2(true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec3(true, true, true)))), bool(bvec3(! (_GLF_IDENTITY(true, bool(bvec3(true, true, true)))), _GLF_IDENTITY(true, true && (true)), true)))))))), (_GLF_IDENTITY(injectionSwitch.x, float(vec3(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, _GLF_IDENTITY(sin(0.0), (sin(0.0)) / 1.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, log(1.0), 1.0, 1.0, 1.0, length(0.0), 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, 1.0)), 0.0, sin(0.0), 1.0, 0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0))))).x, 0.0, 0.0))) < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec3(subgroup_size, 1u, 0u)), (uint(uvec3(subgroup_size, 1u, 0u))) * 1u)))) : _GLF_FUZZED(subgroup_local_id)), 0u ^ ((_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, true))), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)) : _GLF_FUZZED(subgroup_local_id)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), (clamp(subgroup_size, subgroup_size, subgroup_size)) | 0u)), max(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), _GLF_IDENTITY((clamp(subgroup_size, subgroup_size, subgroup_size)) | 0u, ~ (_GLF_IDENTITY(~ ((clamp(subgroup_size, subgroup_size, subgroup_size)) | 0u), max(~ ((clamp(subgroup_size, subgroup_size, subgroup_size)) | 0u), ~ ((clamp(subgroup_size, subgroup_size, subgroup_size)) | 0u))))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), (clamp(subgroup_size, subgroup_size, subgroup_size)) | 0u)), 0u ^ (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), (clamp(subgroup_size, subgroup_size, subgroup_size)) | 0u)))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, true))), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec3(injectionSwitch.x, 0.0, 0.0)), (float(vec3(injectionSwitch.x, 0.0, 0.0))) / 1.0)) < _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, true))), (_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0))), 0.0))) < injectionSwitch.y)), ! (! (_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, true))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, 0.0))) < injectionSwitch.y), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, 0.0))) < injectionSwitch.y), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, 0.0))) < injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, 0.0))) < injectionSwitch.y), true, true, true)))))))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, true))), (_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, 0.0))) < injectionSwitch.y)), ! (! (_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, true))), (_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0))) < injectionSwitch.y)))))), ! (! (! (_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, true))), (_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, float(mat4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)))))))))) < injectionSwitch.y)), ! (! (_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, true))), (_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, 0.0))) < injectionSwitch.y)))))))))) || false))) ? _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)) : _GLF_FUZZED(subgroup_local_id), (_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, true))), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec3(injectionSwitch.x, 0.0, 0.0)), (float(vec3(injectionSwitch.x, 0.0, 0.0))) / 1.0)) < _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, true))), (_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0))), 0.0))) < injectionSwitch.y)), ! (! (_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, true))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, 0.0))) < injectionSwitch.y), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, 0.0))) < injectionSwitch.y), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, 0.0))) < injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, 0.0))) < injectionSwitch.y), true, true, true)))))))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, true))), (_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, 0.0))) < injectionSwitch.y)), ! (! (_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, true))), (_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0))) < injectionSwitch.y)))))), ! (! (! (_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, true))), (_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, float(mat4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)))))))))) < injectionSwitch.y)), ! (! (_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, true))), (_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, 0.0))) < injectionSwitch.y)))))))))) || false))) ? _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)) : _GLF_FUZZED(subgroup_local_id)) >> 0u)), 0u ^ ((_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec4(! (true), false, true, true)))))))), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), (clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) - 0.0)) < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec3(subgroup_size, (1u & 1u), 0u), (uvec3(subgroup_size, (1u & 1u), 0u)) / uvec3(1u, 1u, 1u)))))), clamp(subgroup_size, subgroup_size, subgroup_size)) : _GLF_FUZZED(subgroup_local_id)))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), (clamp(subgroup_size, subgroup_size, subgroup_size)) | 0u)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, true))), (_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, 0.0))) < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)) : _GLF_FUZZED(subgroup_local_id)), 0u ^ ((_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, true))), (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), subgroup_size)) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, true))), (_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, 0.0))) < injectionSwitch.y)), bool(bool(_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, true))), (_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, 0.0))) < injectionSwitch.y))))) ? _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)) : _GLF_FUZZED(subgroup_local_id)), 0u ^ ((_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, true))), (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)) : _GLF_FUZZED(subgroup_local_id))))) | 0u)))))), _GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)), uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(float(192484u))), bool(false))))))), (uint(uvec2(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)), uint(_GLF_ONE(1.0, injectionSwitch.y))))) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)), uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(float(192484u))), bool(false))))))), (uint(uvec2(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)), uint(_GLF_ONE(1.0, injectionSwitch.y))))) / 1u), uint(uvec4(_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)), uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(float(192484u))), bool(false))))))), (uint(uvec2(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)), uint(_GLF_ONE(1.0, injectionSwitch.y))))) / 1u), 1u, 0u, 0u)))) | (0u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), 0u + (uint(5u))))))))) * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), clamp(_GLF_IDENTITY(clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u), subgroup_size), (false ? _GLF_FUZZED(workgroup_id) : clamp(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size, subgroup_size))), clamp(subgroup_size, subgroup_size, subgroup_size), clamp(subgroup_size, subgroup_size, subgroup_size)))), (_GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), max(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), mat2(1.0) * ((injectionSwitch) * mat2(1.0))), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(_GLF_IDENTITY(vec2(2.2, 4007.4313), min(_GLF_IDENTITY(vec2(2.2, 4007.4313), vec2(0.0, 0.0) + (vec2(2.2, 4007.4313))), _GLF_IDENTITY(vec2(2.2, 4007.4313), (_GLF_IDENTITY(vec2(2.2, 4007.4313), mix(vec2((vec2(2.2, 4007.4313))[0], (vec2(2.2, 4007.4313))[1]), vec2(_GLF_FUZZED(1.6), _GLF_FUZZED(-5.8)), bvec2(false, false)))) - vec2(0.0, 0.0)))))))))).y)) ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), clamp(subgroup_size, subgroup_size, subgroup_size)) : _GLF_FUZZED(subgroup_local_id))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), _GLF_IDENTITY((clamp(subgroup_size, subgroup_size, subgroup_size)) | 0u, (_GLF_IDENTITY((clamp(subgroup_size, subgroup_size, subgroup_size)) | 0u, min((clamp(subgroup_size, subgroup_size, subgroup_size)) | 0u, (clamp(subgroup_size, subgroup_size, subgroup_size)) | 0u))) << 0u))), _GLF_IDENTITY((_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, true))), (_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, 0.0))) < _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, sqrt(0.0), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED((-835.354 * 2.3)), _GLF_FUZZED(801.502)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x), 1.0))))) ? _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)))) : _GLF_FUZZED(subgroup_local_id)), 0u ^ ((_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, true))), (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)) : _GLF_FUZZED(subgroup_local_id)))))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size), _GLF_IDENTITY((clamp(subgroup_size, subgroup_size, subgroup_size)) | 0u, ((_GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), max(clamp(subgroup_size, subgroup_size, subgroup_size), _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), min(clamp(subgroup_size, subgroup_size, subgroup_size), clamp(subgroup_size, subgroup_size, subgroup_size)))))) | 0u) | 0u))), _GLF_IDENTITY((_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec3(true, true, true)))), bool(bvec3(! (_GLF_IDENTITY(true, bool(bvec3(true, true, true)))), true, _GLF_IDENTITY(true, bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x)))).x, float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, sin(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, log(1.0), 1.0, 1.0, 1.0, length(0.0), 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, 1.0)), 0.0, sin(0.0), 1.0, 0.0, 0.0))), (_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, sin(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, log(1.0), 1.0, 1.0, 1.0, length(0.0), 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, 1.0)), 0.0, sin(0.0), 1.0, 0.0, 0.0)))) * mat2(1.0)).x, 0.0, 0.0))) < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec3(subgroup_size, 1u, 0u)), (uint(uvec3(subgroup_size, 1u, 0u))) * 1u)))) : _GLF_FUZZED(subgroup_local_id)), 0u ^ ((_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, true))), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)) ? _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)) : _GLF_FUZZED(subgroup_local_id)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), (clamp(subgroup_size, subgroup_size, subgroup_size)) | 0u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), (clamp(subgroup_size, subgroup_size, subgroup_size)) | 0u))), (~ (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), (clamp(subgroup_size, subgroup_size, subgroup_size)) | 0u)))) ^ 0u))), max(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), (clamp(subgroup_size, subgroup_size, subgroup_size)) | 0u)), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), (clamp(subgroup_size, subgroup_size, subgroup_size)) | 0u)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, true))), (_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, 0.0))) < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, true))), (_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, 0.0))) < injectionSwitch.y)), ! (! (_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, true))), (_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, 0.0))) < injectionSwitch.y)))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, true))), (_GLF_IDENTITY(injectionSwitch.x, float(vec3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x, 0.0, 0.0))) < injectionSwitch.y)), ! (! (_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, true))), (_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, 0.0))) < injectionSwitch.y)))))), ! (! (! (_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, true))), (_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, 0.0))) < injectionSwitch.y)), ! (! (_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), true && (bool(bvec2(true, true))))), (_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, 0.0))) < injectionSwitch.y)))))))))) || false))) ? _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)) : _GLF_FUZZED(subgroup_local_id)), 0u ^ ((_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec4(! (true), false, true, true)))))))), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)).x)) < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)) : _GLF_FUZZED(subgroup_local_id)))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), (clamp(subgroup_size, subgroup_size, subgroup_size)) | 0u)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, true))), (_GLF_IDENTITY(injectionSwitch.x, float(vec3(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-9521.1365) : injectionSwitch.x)), _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0))) < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), min(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) | (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))))) : _GLF_FUZZED(subgroup_local_id)), 0u ^ ((_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, true))), (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, true))), (injectionSwitch.x < injectionSwitch.y)))) ? _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)) : _GLF_FUZZED(subgroup_local_id)))), (_GLF_IDENTITY((_GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), ! (! (_GLF_IDENTITY(true, bool(bvec2(true, true)))))), (_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, _GLF_IDENTITY(0.0, (0.0) * determinant(mat2(1.0, 1.0, abs(0.0), 1.0)))))) < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)) : _GLF_FUZZED(subgroup_local_id)), 0u ^ (_GLF_IDENTITY((_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, true))), (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)) : _GLF_FUZZED(subgroup_local_id)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | ((_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, true))), (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)) : _GLF_FUZZED(subgroup_local_id))))))) | 0u))))))));
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 _GLF_struct_3 _GLF_struct_replacement_3 = _GLF_struct_3(_GLF_struct_0(uvec3(1u), mat3x2(_GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-1.4) : 1.0))), mat3(1.0)), _GLF_struct_2(mat4x2(1.0), _GLF_struct_1(uvec3(1u), mat3x4(1.0), mat2x3(1.0), bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY((true) || false, ((true) || false) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((true) || false, ! (_GLF_IDENTITY(! ((true) || false), ! _GLF_IDENTITY((! (! ((true) || false))), ! (_GLF_IDENTITY(! ((! (! ((true) || false)))), ! (! (_GLF_IDENTITY(! ((! (! ((true) || false)))), (! ((! (! ((true) || false))))) && true)))))))))), ! (! (! (_GLF_IDENTITY((true) || false, ! (_GLF_IDENTITY(! ((true) || false), ! (! (! ((true) || false)))))))))))))), bvec2(true)), true), _GLF_IDENTITY(workgroup_base + subgroup_base + (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u), subgroup_local_id)) + 1)) * 1u), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) * 1u)) / 1u, (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) * 1u)) / 1u, min((_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) * 1u)) / 1u, (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) * 1u)) / 1u))) | ((_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) * 1u)) / 1u))) % subgroup_size), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base + (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) * 1u), uint(uvec3(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) * 1u), (0u << _GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, clamp(7u, _GLF_IDENTITY(7u, max(7u, 7u)), _GLF_IDENTITY(7u, (7u) / 1u)))))), uint(_GLF_ONE(1.0, injectionSwitch.y))))) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, (0u | 0u))), ~ (~ (uint(uvec2(subgroup_size, (0u | 0u)))))))), clamp(workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size), workgroup_base + subgroup_base + (_GLF_IDENTITY((subgroup_local_id + 1), uint(uvec2((subgroup_local_id + 1), 0u))) % subgroup_size), _GLF_IDENTITY(workgroup_base + subgroup_base + ((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u + (subgroup_local_id), (0u + (subgroup_local_id)) - 0u)) + 1) % subgroup_size), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? workgroup_base + _GLF_IDENTITY(subgroup_base, uint(uvec3(subgroup_base, 0u, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - 0u), (_GLF_IDENTITY(0u, (0u) - 0u)) / 1u)) | (_GLF_IDENTITY(0u, (0u) - 0u))), 0u))))) + _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, min(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ~ (~ ((subgroup_local_id + 1) % subgroup_size))), _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)) % subgroup_size, min((_GLF_IDENTITY(subgroup_local_id, uint(uint(subgroup_local_id))) + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size))))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, min((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, min((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)))))), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(~ ((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, min((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, min((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)))))), uint(uint(~ ((_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u))), min((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, min((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size))))))))), 0u), (uvec2(_GLF_IDENTITY(_GLF_IDENTITY(~ ((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, min((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, min((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)))))), (~ ((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, min((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, min((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size))))))) ^ 0u), uint(uint(~ ((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, min((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, min((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size))))))))), 0u)) << uvec2(0u, 0u)))))) : _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(0u), uint(0u))) | (_GLF_FUZZED(num_workgroup)), ((0u << _GLF_IDENTITY(uint(0u), uint(0u))) | (_GLF_FUZZED(num_workgroup))) / 1u)))))), (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, clamp(subgroup_base, _GLF_IDENTITY(subgroup_base, (subgroup_base) | (subgroup_base)), subgroup_base)) + (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + 1))) % subgroup_size), clamp(workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size), workgroup_base + subgroup_base + (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1 : _GLF_FUZZED((-65353 % -10378))))), min((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1 : _GLF_FUZZED((-65353 % -10378))))), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) + _GLF_IDENTITY(1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1 : _GLF_FUZZED((-65353 % -10378))))))) % subgroup_size), _GLF_IDENTITY(workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(workgroup_base, 1u * (_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u))) + subgroup_base + (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + 1))) % subgroup_size) : _GLF_FUZZED(num_workgroup)), (_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(workgroup_base, 1u * (_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u))) + subgroup_base + (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + 1))) % subgroup_size) : _GLF_FUZZED(num_workgroup)), ~ (~ ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(workgroup_base, 1u * (_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u))) + subgroup_base + (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + 1))) % subgroup_size) : _GLF_FUZZED(num_workgroup)))))) | ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(workgroup_base, 1u * (_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u))) + subgroup_base + (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + 1))) % subgroup_size) : _GLF_FUZZED(num_workgroup)))))))) | 0u)) << 0u));
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 atomicStore(buf[_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid))], uint(1), _GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, 4))) | (0 >> _GLF_IDENTITY(int(4), int(4)))), 64, _GLF_IDENTITY(4, min(_GLF_IDENTITY(4, min(4, 4)), _GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec4(4, 0, (0 | 0), 0), ~ (~ (ivec4(4, 0, (0 | 0), 0)))))))));
 if((_GLF_IDENTITY(subgroup_local_id % 2, 0u | (subgroup_local_id % 2))) == 0)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[_GLF_struct_replacement_3.next_virtual_gid], uint(2), 4, _GLF_IDENTITY(64, 1 * (_GLF_IDENTITY(64, 1 * _GLF_IDENTITY((64), ((64)) - (0 & (_GLF_IDENTITY(-46306, (-46306) - 0) + 65491)))))), 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), bool(bool(bool(bvec2(false, true))))))) || false), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), 1.0, 0.0, 0.0, 0.0, 1.0))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! ((! _GLF_IDENTITY((false), _GLF_IDENTITY(((false)) && true, true && (((false)) && true))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   atomicStore(buf[_GLF_struct_replacement_3.next_virtual_gid], _GLF_IDENTITY(uint(2), _GLF_IDENTITY(max(uint(2), uint(2)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(max(uint(2), uint(2)), 0u, 0u, (0u << _GLF_IDENTITY(uint(8u), uint(8u)))), (uvec4(max(uint(2), uint(2)), 0u, 0u, (0u << _GLF_IDENTITY(uint(8u), uint(8u))))) / uvec4(1u, 1u, 1u, 1u))), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(max(uint(2), uint(2)), 0u, 0u, (0u << _GLF_IDENTITY(uint(8u), uint(8u)))), (uvec4(max(uint(2), uint(2)), 0u, 0u, (0u << _GLF_IDENTITY(uint(8u), uint(8u))))) / uvec4(1u, 1u, 1u, 1u))), (uint(_GLF_IDENTITY(uvec4(max(uint(2), uint(2)), 0u, 0u, (0u << _GLF_IDENTITY(uint(8u), uint(8u)))), (uvec4(max(uint(2), uint(2)), 0u, 0u, (0u << _GLF_IDENTITY(uint(8u), uint(8u))))) / uvec4(1u, 1u, 1u, 1u)))) + 0u), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(max(uint(2), uint(2)), 0u, 0u, (0u << _GLF_IDENTITY(uint(8u), uint(8u)))), (uvec4(max(uint(2), uint(2)), 0u, 0u, (0u << _GLF_IDENTITY(uint(8u), uint(8u))))) / uvec4(1u, 1u, 1u, 1u))), min(uint(_GLF_IDENTITY(uvec4(max(uint(2), uint(2)), 0u, 0u, (0u << _GLF_IDENTITY(uint(8u), uint(8u)))), (uvec4(max(uint(2), uint(2)), 0u, 0u, (0u << _GLF_IDENTITY(uint(8u), uint(8u))))) / uvec4(1u, 1u, 1u, 1u))), uint(_GLF_IDENTITY(uvec4(max(uint(2), uint(2)), 0u, 0u, (0u << _GLF_IDENTITY(uint(8u), uint(8u)))), (uvec4(max(uint(2), uint(2)), 0u, 0u, (0u << _GLF_IDENTITY(uint(8u), uint(8u))))) / uvec4(1u, 1u, 1u, 1u))))))))), _GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | (4))) << 0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, int(int(4))), 4)), 0 | (4)), int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, int(int(4))), 4)), 0 | (4)), 1))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, 0 + (4)), 4, 4)), _GLF_IDENTITY(0, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (0), 0 + (~ (0)))), (true ? (_GLF_IDENTITY(~ (0), 0 + (~ (0)))) : _GLF_FUZZED(15158)))) | _GLF_IDENTITY((4), _GLF_IDENTITY(((_GLF_IDENTITY(4, (4) | (4)))), (true ? ((4)) : _GLF_FUZZED(_GLF_IDENTITY(-91508, (_GLF_IDENTITY(-91508, 0 | (-91508))) / 1)))) * 1))))), 0 ^ ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, int(int(4))), 4)), 0 | (4)), int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, int(int(4))), 4)), 0 | (4)), 1))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, 0 + (4)), 4, 4)), _GLF_IDENTITY(0, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (0), 0 + (~ (0)))), (true ? (_GLF_IDENTITY(~ (0), 0 + (~ (0)))) : _GLF_FUZZED(15158)))) | _GLF_IDENTITY((4), _GLF_IDENTITY(((_GLF_IDENTITY(4, (4) | (4)))), (true ? ((4)) : _GLF_FUZZED(_GLF_IDENTITY(-91508, (_GLF_IDENTITY(-91508, 0 | (-91508))) / 1)))) * 1))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), 0 | (_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4), clamp((4), (4), (4))), min(_GLF_IDENTITY((4), ~ (~ ((4)))), (4))) - 0))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(4, 0 | (4)), max(_GLF_IDENTITY(4, 0 | (4)), _GLF_IDENTITY(4, 0 | (4)))))))))) | (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) ^ 0)) ^ 0), clamp(4, 4, 4)), (_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), ~ (~ (_GLF_IDENTITY(4, clamp(4, 4, 4)))))) - 0), 0 | (4)), 0 ^ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(8483))), 4, 4)), 0 | (4))), (true ? (_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(8483))), 4, 4)), 0 | (4))) : _GLF_FUZZED(-6146))))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (4)), clamp(4, 4, 4)), 0 | (_GLF_IDENTITY(4, int(ivec2(4, 0))))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), 0 | (4)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), 0 | (4)), (_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), 0 | (4))) << 0)) >> 0))))) + 0))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, int(_GLF_IDENTITY(int(4), 1 * (int(4))))), 4)), 0 | (4)), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4)))), _GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), ~ (_GLF_IDENTITY(~ (0), 0 + (~ (0))))) | _GLF_IDENTITY((4), _GLF_IDENTITY(((4)), (true ? ((4)) : _GLF_FUZZED(_GLF_IDENTITY(-91508, 0 + (-91508))))) * 1))))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) << 0)) / 1)) | 0), 0 ^ (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) << 0)) / 1)) | 0))), (_GLF_IDENTITY(4, (4) * 1)) - 0))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), 0 | (_GLF_IDENTITY(4, 0 | (4)))))))) | (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), (_GLF_IDENTITY(4, _GLF_IDENTITY(clamp(4, 4, 4), max(_GLF_IDENTITY(clamp(4, 4, 4), 0 ^ (clamp(4, 4, 4))), clamp(4, 4, 4))))) - 0), 0 | (4)), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), 0 | (4)))), int(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), (_GLF_IDENTITY(4, _GLF_IDENTITY(clamp(4, 4, 4), max(_GLF_IDENTITY(clamp(4, 4, 4), 0 ^ (clamp(4, 4, 4))), clamp(4, 4, 4))))) - 0), 0 | (4)), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), 0 | (4)))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), (_GLF_IDENTITY(4, _GLF_IDENTITY(clamp(4, 4, 4), max(_GLF_IDENTITY(clamp(4, 4, 4), 0 ^ (clamp(4, 4, 4))), clamp(4, 4, 4))))) - 0), 0 | (4)), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), 0 | (4)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), (_GLF_IDENTITY(4, _GLF_IDENTITY(clamp(4, 4, 4), max(_GLF_IDENTITY(clamp(4, 4, 4), 0 ^ (clamp(4, 4, 4))), clamp(4, 4, 4))))) - 0), 0 | (4)), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), 0 | (4))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (4)), clamp(4, 4, 4)), 0 | (_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec2(4, 0)), clamp(int(ivec2(4, 0)), int(ivec2(4, 0)), int(ivec2(4, 0))))))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), 0 | (4)))))) + 0)))) ^ _GLF_IDENTITY(0, (_GLF_IDENTITY(0, int(int(0)))) / 1)) + 0), 64, 4);
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))), false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
