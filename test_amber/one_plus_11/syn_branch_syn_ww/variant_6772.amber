#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   do
    {
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
    {
     case 0:
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     barrier();
     break;
     case 58:
     do
      {
       if(_GLF_DEAD(false))
        barrier();
       {
        if(true)
         {
          for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
           {
            mat3x4(-3845.1124, 7.2, 8.4, -0.8, -79.25, 481.784, 51.50, 9.4, -541.600, 3134.1172, -91.20, -148.765);
           }
          if(_GLF_WRAPPED_IF_FALSE(false))
           {
           }
          else
           {
            ;
           }
          bool _GLF_SWITCH_2_0v, _GLF_SWITCH_2_1v;
         }
        mat2x4 _GLF_SWITCH_2_2v, _GLF_SWITCH_2_3v;
        while(true)
         {
          mat4x2 _GLF_SWITCH_2_4v[31];
          mix(9.3, -28.63, false);
          if(_GLF_DEAD(false))
           barrier();
          ;
          do
           {
            for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
             {
              if(_GLF_DEAD(false))
               barrier();
             }
           }
          while(_GLF_WRAPPED_LOOP(false));
          if(_GLF_DEAD(false))
           break;
          ivec2 _GLF_SWITCH_2_5v, _GLF_SWITCH_2_6v, _GLF_SWITCH_2_7v[88];
          if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           {
           }
          else
           {
            mat2x3(62.96, 6.1, -549.042, -8555.9283, 5302.8726, -45.44);
           }
          if(_GLF_DEAD(false))
           barrier();
          mat3 _GLF_SWITCH_2_8v, _GLF_SWITCH_2_9v;
          mat4x2(8.5, 23.51, -1.1, 2.6, 39.51, 3.4, -43.40, 7746.0837);
         }
        if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))))
         continue;
        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
         break;
       }
       if(false)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         atanh(vec2(-2.3, -7.7));
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         while((false != true))
          {
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
          barrier();
         break;
        }
       vec2 _GLF_SWITCH_2_10v[77];
       float _GLF_SWITCH_2_11v;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       mat3x2(mat3(660.720, 9.0, -1196.1591, -94.56, -0.9, 8.2, 488.258, 8057.1933, -7.3));
       ivec4 _GLF_SWITCH_2_12v[9], _GLF_SWITCH_2_13v[1];
       if(_GLF_DEAD(false))
        return;
       mat4x2 _GLF_SWITCH_2_14v[61], _GLF_SWITCH_2_15v, _GLF_SWITCH_2_16v[64];
      }
     while((false ? false : true));
     case 71:
     mat4x3(723.976, 5624.6232, 8231.5247, 9.4, -7.7, -6.3, 6935.6284, -72.70, -650.711, -6270.4261, -83.28, 56.41);
     default:
     if(_GLF_DEAD(false))
      return;
     1;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         return;
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        {
         switch(_GLF_SWITCH(0))
          {
           case 84:
           ;
           case 82:
           mat3x2 _GLF_SWITCH_4_0v;
           case 0:
           case 12:
           case 35:
           case 62:
           case 19:
           case 93:
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             barrier();
            }
           break;
           default:
           1;
          }
        }
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           barrier();
          }
        }
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) || false)))
  {
   do
    {
     for(int _injected_loop_counter = (0 ^ (1 | 1)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        continue;
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
          {
           switch(_GLF_SWITCH(0))
            {
             case 43:
             do
              {
               bitfieldExtract(uvec3(190093u, 75127u, 79344u), -18656, _injected_loop_counter);
              }
             while(_GLF_WRAPPED_LOOP(false));
             case 0:
             case 28:
             case 55:
             case 37:
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             case 2:
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
              continue;
             case 42:
             case 3:
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               do
                {
                 switch(_GLF_SWITCH(0))
                  {
                   case 43:
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                       continue;
                       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                        barrier();
                      }
                     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                      }
                     else
                      {
                       for(uvec4 _GLF_SWITCH_0_0v, _GLF_SWITCH_0_1v[67], _GLF_SWITCH_0_2v; ((ivec3(-36576, 96712, -71838) == (ivec3(28524, -31224, -95155) & -98694))); mat2x4(6.3, -394.715, -2.5, -14.80, 2054.2713, -60.48, -3859.3781, -68.95))
                        {
                         if(_GLF_DEAD(false))
                          break;
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          continue;
                         (mat2x4(-6774.2436, -2.4, 3.1, -6620.1979, -646.457, 5.6, 1.0, 7.4) + dot(vec3(1.9, -108.435, 1.5), vec3(-12.77, 5.3, -57.44)));
                         for(                         993.552;
 true; ivec3(21605, 14598, 67317))
                          {
                           if(_GLF_WRAPPED_IF_FALSE(false))
                            {
                            }
                           else
                            {
                             (vec4(546.531, -7617.4732, -1991.0816, -2353.4938) - 93.27);
                            }
                           if(_GLF_DEAD(false))
                            {
                             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                              barrier();
                             continue;
                            }
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            break;
                          }
                         if(_GLF_DEAD(false))
                          {
                           if(_GLF_DEAD(false))
                            break;
                           return;
                          }
                         if(_GLF_DEAD(false))
                          return;
                         vec2 _GLF_SWITCH_0_3v, _GLF_SWITCH_0_4v, _GLF_SWITCH_0_5v;
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          {
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                           continue;
                          }
                         if(_GLF_DEAD(false))
                          barrier();
                         do
                          {
                           do
                            {
                             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                              {
                              }
                             else
                              {
                               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                barrier();
                               if(_GLF_DEAD(false))
                                break;
                              }
                             uvec4(70768u, 166462u, 105802u, 64008u);
                            }
                           while(_GLF_WRAPPED_LOOP(false));
                          }
                         while(_GLF_WRAPPED_LOOP(false));
                         if(_GLF_DEAD(false))
                          {
                           if(_GLF_DEAD(false))
                            barrier();
                           continue;
                          }
                         vec3 _GLF_SWITCH_0_6v, _GLF_SWITCH_0_7v[26];
                         if(_GLF_DEAD(false))
                          {
                           if(_GLF_WRAPPED_IF_TRUE(true))
                            {
                             switch(_GLF_SWITCH(0))
                              {
                               case 0:
                               case 55:
                               case 30:
                               case 59:
                               case 22:
                               case 75:
                               do
                                {
                                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                  barrier();
                                 barrier();
                                }
                               while(_GLF_WRAPPED_LOOP(false));
                               break;
                               case 15:
                               (-4.5 + mat3x4(1.3, -6.2, 691.688, 6.5, -234.741, 562.607, -565.543, -95.75, -716.119, 9729.9014, -985.548, 4.3));
                               default:
                               1;
                              }
                            }
                           else
                            {
                            }
                          }
                         while((4.4 > -651.797))
                          {
                           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
                            barrier();
                           ;
                           for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                            {
                             do
                              {
                               mat3x4(-1196.4649, 5.2, -67.61, 45.82, 8.0, -6171.9211, -3.4, -4.6, 5.8, 9956.1812, 5.8, -1.1);
                              }
                             while(_GLF_WRAPPED_LOOP(false));
                            }
                           {
                            (-24.06 != -43.28);
                            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                             {
                              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                               {
                                if(_GLF_DEAD(false))
                                 barrier();
                                continue;
                               }
                              if(_GLF_DEAD(false))
                               {
                                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                 barrier();
                                break;
                               }
                              barrier();
                              if(_GLF_WRAPPED_IF_TRUE(true))
                               {
                                if(_GLF_DEAD(false))
                                 {
                                  if(_GLF_DEAD(false))
                                   {
                                    if(_GLF_DEAD(false))
                                     barrier();
                                    return;
                                   }
                                  return;
                                 }
                               }
                              else
                               {
                               }
                              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                               barrier();
                              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                               barrier();
                             }
                            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                             return;
                            (false ? mix(bvec3(false, false, true), bvec3(true, false, false), equal(bvec3(true, true, false), bvec3(false, true, false))) : notEqual((ivec3(-6357, -91442, 45567) / -30091), ivec3(-24206, -30388, -89822)));
                            if(_GLF_DEAD(false))
                             barrier();
                            int _GLF_SWITCH_0_8v;
                            (mat4x2(4.8, 4.2, 10.04, 75.61, 601.457, 969.597, -7761.6056, -904.174) / mat4x2(8.4, -928.446, -782.001, 54.76, -7.0, -0.6, -8100.9955, 0.1));
                            mat3(1.3, 53.48, -0.6, 35.67, 478.083, 305.919, -856.163, 38.87, -8.0);
                            if(_GLF_DEAD(false))
                             break;
                           }
                           if(_GLF_DEAD(false))
                            {
                             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                              return;
                             continue;
                            }
                           do
                            {
                             mat4(5132.6048, 177.152, 31.27, -7682.2276, 28.82, 1514.1694, 8671.9449, -28.96, 42.47, 47.24, 8.4, -5.2, -1880.5800, -502.159, 3.4, -808.888);
                             if(_GLF_DEAD(false))
                              barrier();
                            }
                           while(_GLF_WRAPPED_LOOP(false));
                           uvec2(172972u, 177982u);
                           if(_GLF_DEAD(false))
                            break;
                           if(_GLF_DEAD(false))
                            {
                             if(_GLF_DEAD(false))
                              barrier();
                             barrier();
                            }
                          }
                         if(_GLF_DEAD(false))
                          barrier();
                         subgroup_size;
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          break;
                         if(_GLF_DEAD(false))
                          return;
                         if(_GLF_WRAPPED_IF_FALSE(false))
                          {
                           if(_GLF_DEAD(false))
                            barrier();
                          }
                         else
                          {
                           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            {
                            }
                           else
                            {
                             for(mat2 _GLF_SWITCH_0_9v, _GLF_SWITCH_0_10v, _GLF_SWITCH_0_11v; (_GLF_SWITCH_0_3v == floor(vec2(6.5, -91.28))); degrees(131.117))
                              {
                               acos(vec3(4051.2200, 9.4, -9.1));
                               if(_GLF_DEAD(false))
                                {
                                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                  continue;
                                 if(_GLF_DEAD(false))
                                  break;
                                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                  break;
                                 return;
                                 if(_GLF_DEAD(false))
                                  continue;
                                }
                              }
                            }
                          }
                         if(_GLF_DEAD(false))
                          {
                           if(_GLF_DEAD(false))
                            barrier();
                           continue;
                          }
                         if(_GLF_DEAD(false))
                          {
                           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
                            barrier();
                           if(_GLF_WRAPPED_IF_FALSE(false))
                            {
                            }
                           else
                            {
                             barrier();
                            }
                          }
                        }
                      }
                     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), false, true, true))))))
                      continue;
                    }
                   else
                    {
                     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                      barrier();
                    }
                   case 85:
                   while((injectionSwitch == injectionSwitch))
                    {
                     mat3x2 _GLF_SWITCH_0_12v[60];
                     if(_GLF_DEAD(false))
                      continue;
                     bvec3 _GLF_SWITCH_0_13v, _GLF_SWITCH_0_14v;
                     vec4 _GLF_SWITCH_0_15v, _GLF_SWITCH_0_16v, _GLF_SWITCH_0_17v;
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       (mat3x2(760.595, 96.82, 430.402, -1.7, -9.4, -18.02) * mat3(87.72, 947.895, 75.78, 5.1, 340.347, -462.981, -4085.3987, -0.0, 1276.7821));
                       if(_GLF_DEAD(false))
                        barrier();
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_DEAD(false))
                          break;
                         break;
                        }
                      }
                     mat2(2971.0174, -8.9, 3570.9991, -6054.9095);
                     if(_GLF_DEAD(false))
                      break;
                     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                      }
                     else
                      {
                       while((bvec4(false, false, false, true) != bvec4(false, true, true, true)))
                        {
                         for(mat4x2 _GLF_SWITCH_0_18v[48], _GLF_SWITCH_0_19v; false; vec3(7296.9016, 20.52, 7.9))
                          {
                           if(_GLF_DEAD(false))
                            break;
                           if(_GLF_DEAD(false))
                            {
                             if(_GLF_DEAD(false))
                              barrier();
                             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                              barrier();
                             break;
                            }
                           bvec2 _GLF_SWITCH_0_20v, _GLF_SWITCH_0_21v;
                           if(_GLF_WRAPPED_IF_TRUE(true))
                            {
                             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                              barrier();
                             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                              {
                               if(_GLF_WRAPPED_IF_TRUE(true))
                                {
                                 if(_GLF_WRAPPED_IF_TRUE(true))
                                  {
                                   if(_GLF_DEAD(false))
                                    barrier();
                                   return;
                                  }
                                 else
                                  {
                                  }
                                }
                               else
                                {
                                }
                              }
                            }
                           else
                            {
                            }
                           if(_GLF_WRAPPED_IF_TRUE(true))
                            {
                             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                              {
                               if(_GLF_DEAD(false))
                                barrier();
                              }
                             if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                              break;
                             if(_GLF_WRAPPED_IF_FALSE(false))
                              {
                              }
                             else
                              {
                               (min(uvec4(89848u, 47024u, 116944u, 61040u), uvec4(109041u, 193668u, 120271u, 199715u)) * uvec4(55805u, 125815u, 32852u, 3814u));
                              }
                            }
                           else
                            {
                            }
                           true;
                           if(_GLF_DEAD(false))
                            barrier();
                           mat2x3 _GLF_SWITCH_0_22v;
                           if(_GLF_DEAD(false))
                            break;
                           if(_GLF_DEAD(false))
                            {
                             if(_GLF_DEAD(false))
                              break;
                             barrier();
                            }
                           uvec3 _GLF_SWITCH_0_23v, _GLF_SWITCH_0_24v;
                           if(_GLF_WRAPPED_IF_FALSE(false))
                            {
                            }
                           else
                            {
                             for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                              {
                               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                return;
                               ivec2(-40918, 69263);
                               if(_GLF_DEAD(false))
                                {
                                 if(_GLF_DEAD(false))
                                  barrier();
                                 continue;
                                }
                              }
                             if(_GLF_DEAD(false))
                              continue;
                             do
                              {
                               if(_GLF_DEAD(false))
                                barrier();
                              }
                             while(_GLF_WRAPPED_LOOP(false));
                            }
                           if(_GLF_DEAD(false))
                            barrier();
                           if(_GLF_DEAD(false))
                            {
                             if(_GLF_WRAPPED_IF_TRUE(true))
                              {
                               if(_GLF_DEAD(false))
                                {
                                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                  barrier();
                                 return;
                                }
                              }
                             else
                              {
                               if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                                barrier();
                              }
                             for(int _injected_loop_counter = ((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((0 << _GLF_IDENTITY(int(3), int(3))) << _GLF_IDENTITY(int(5), int(5)))); _injected_loop_counter --)
                              {
                               if(_GLF_WRAPPED_IF_TRUE(true))
                                {
                                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                  {
                                   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                                    {
                                     return;
                                    }
                                   else
                                    {
                                    }
                                  }
                                }
                               else
                                {
                                }
                               if(_GLF_DEAD(false))
                                return;
                              }
                             continue;
                            }
                           if(_GLF_DEAD(false))
                            {
                             if(_GLF_DEAD(false))
                              break;
                             continue;
                            }
                           ivec4 _GLF_SWITCH_0_25v, _GLF_SWITCH_0_26v;
                           if(_GLF_DEAD(false))
                            break;
                           if(_GLF_DEAD(false))
                            barrier();
                           if(_GLF_DEAD(false))
                            barrier();
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                           _GLF_SWITCH_0_14v;
                           if(_GLF_DEAD(false))
                            break;
                          }
                         do
                          {
                           mat4x2(exp(injectionSwitch), injectionSwitch, degrees(vec2(2813.7220, -3905.6594)), injectionSwitch);
                          }
                         while(_GLF_WRAPPED_LOOP(false));
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                         if(_GLF_DEAD(false))
                          {
                           if(_GLF_DEAD(false))
                            barrier();
                           if(_GLF_DEAD(false))
                            continue;
                           continue;
                          }
                         if(_GLF_DEAD(false))
                          continue;
                         if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false)))
                          return;
                         mat2x4(mat4x2(396.620, 947.899, -7.4, -9319.8929, 683.385, 32.12, -4819.6245, 97.68));
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          continue;
                         if(_GLF_WRAPPED_IF_FALSE(false))
                          {
                          }
                         else
                          {
                           bvec4(false, true, true, true);
                          }
                         if(_GLF_WRAPPED_IF_TRUE(true))
                          {
                           if(_GLF_DEAD(false))
                            return;
                          }
                         else
                          {
                          }
                         if(_GLF_DEAD(false))
                          {
                           if(_GLF_DEAD(false))
                            break;
                           barrier();
                          }
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                         if(_GLF_WRAPPED_IF_FALSE(false))
                          {
                          }
                         else
                          {
                           false;
                          }
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          break;
                         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                          {
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                           do
                            {
                             if(_GLF_DEAD(false))
                              break;
                             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                              barrier();
                             do
                              {
                               mat4(mat2x4(556.879, -80.49, 6723.9333, 511.540, -3.5, 1.7, 7.9, -2.9));
                               if(_GLF_DEAD(false))
                                barrier();
                              }
                             while(_GLF_WRAPPED_LOOP(false));
                            }
                           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                          }
                         else
                          {
                          }
                         if(_GLF_DEAD(false))
                          break;
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          break;
                         {
                          if(_GLF_DEAD(false))
                           continue;
                          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                           barrier();
                          mat4x2 _GLF_SWITCH_0_27v, _GLF_SWITCH_0_28v;
                          if(_GLF_DEAD(false))
                           barrier();
                          if(_GLF_DEAD(false))
                           {
                            if(_GLF_WRAPPED_IF_TRUE(true))
                             {
                              if(_GLF_DEAD(false))
                               break;
                              do
                               {
                                barrier();
                               }
                              while(_GLF_WRAPPED_LOOP(false));
                             }
                            else
                             {
                              switch(_GLF_SWITCH(0))
                               {
                                case 63:
                                bitfieldExtract(ivec3(-50322, -87554, -87718), -73752, bitfieldExtract(_injected_loop_counter, -58121, -53700));
                                case 0:
                                case 78:
                                case 17:
                                case 93:
                                case 94:
                                if(_GLF_DEAD(false))
                                 barrier();
                                case 23:
                                case 42:
                                case 16:
                                if(_GLF_DEAD(false))
                                 return;
                                break;
                                case 50:
                                bvec4 _GLF_SWITCH_4_0v, _GLF_SWITCH_4_1v[59];
                                case 9:
                                (-- _GLF_SWITCH_0_28v);
                                default:
                                1;
                               }
                             }
                            if(_GLF_DEAD(false))
                             return;
                           }
                          if(_GLF_DEAD(false))
                           barrier();
                          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                           break;
                          if(_GLF_DEAD(false))
                           continue;
                          for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                           {
                            uvec4(uvec2(83870u, 39268u), uvec2(59834u, 197365u));
                           }
                          if(_GLF_WRAPPED_IF_FALSE(false))
                           {
                           }
                          else
                           {
                            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                             {
                              for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                               {
                                for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                                 {
                                  barrier();
                                 }
                               }
                              if(_GLF_DEAD(false))
                               barrier();
                             }
                            if(_GLF_WRAPPED_IF_TRUE(true))
                             {
                              switch(_GLF_SWITCH(0))
                               {
                                case 43:
                                (roundEven(59.14) + mat3x4(-4.8, -616.662, -5.6, 0.4, -11.56, 5277.4521, 9.8, 1.1, -4.2, 181.405, -7587.6150, 7.7));
                                case 0:
                                case 46:
                                case 90:
                                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                 {
                                  for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                                   {
                                    if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                     {
                                     }
                                    else
                                     {
                                      if(_GLF_DEAD(false))
                                       barrier();
                                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                       barrier();
                                      return;
                                     }
                                   }
                                 }
                                if(_GLF_DEAD(false))
                                 barrier();
                                break;
                                default:
                                if(_GLF_DEAD(false))
                                 barrier();
                                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                 barrier();
                                if(_GLF_WRAPPED_IF_FALSE(false))
                                 {
                                 }
                                else
                                 {
                                  1;
                                 }
                               }
                             }
                            else
                             {
                             }
                           }
                          bvec2 _GLF_SWITCH_0_29v;
                          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                           break;
                          if(_GLF_WRAPPED_IF_FALSE(false))
                           {
                           }
                          else
                           {
                            switch(_GLF_SWITCH((int(_GLF_ZERO(0.0, injectionSwitch.x)) | 0)))
                             {
                              case 65:
                              ivec2(-67893, -30704);
                              case 0:
                              case 64:
                              case 77:
                              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                               barrier();
                              case 74:
                              case 56:
                              case 92:
                              case 23:
                              case 71:
                              case 75:
                              mat3x2(4.4, -2.2, -7.8, -8.9, -47.24, 83.06);
                              break;
                              default:
                              1;
                             }
                           }
                         }
                         if(_GLF_DEAD(false))
                          barrier();
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          return;
                        }
                      }
                     for(uvec3 _GLF_SWITCH_0_30v[64], _GLF_SWITCH_0_31v; (mat2x4(-32.93, 3962.9995, -9.3, 31.66, -48.67, -0.8, 3542.1394, 9888.9190) != mat2x4(-6.4, 2.1, 5729.9377, -0.2, 310.568, -1000.8735, 2.6, -4783.0111)); _GLF_SWITCH_0_14v)
                      {
                       for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(3), int(3))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                        {
                         for(                         mat2(-82.88, -295.602, -9.7, -51.92);
 true; ivec2(55587, 50600))
                          {
                           for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                            {
                             if(_GLF_DEAD(false))
                              barrier();
                            }
                           if(_GLF_WRAPPED_IF_TRUE(true))
                            {
                             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                              continue;
                             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                              {
                               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                barrier();
                               if(_GLF_WRAPPED_IF_TRUE(true))
                                {
                                 if(_GLF_WRAPPED_IF_TRUE(true))
                                  {
                                   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                    {
                                    }
                                   else
                                    {
                                     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(4), int(4)))); _injected_loop_counter --)
                                      {
                                       switch(_GLF_SWITCH(0))
                                        {
                                         case 68:
                                         uvec4 _GLF_SWITCH_2_0v[52];
                                         case 0:
                                         case 4:
                                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                          continue;
                                         if(_GLF_DEAD(false))
                                          break;
                                         case 64:
                                         case 28:
                                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                          break;
                                         case 92:
                                         case 16:
                                         if(_GLF_WRAPPED_IF_FALSE(false))
                                          {
                                          }
                                         else
                                          {
                                           for(int _injected_loop_counter = (1 ^ int(_GLF_ONE(1.0, injectionSwitch.y))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                                            {
                                             switch(_GLF_SWITCH((0 << _GLF_IDENTITY(int(8), int(8)))))
                                              {
                                               case 88:
                                               (vec3(-675.837, -250.099, -469.522) - ceil(cosh(0.0)));
                                               case 92:
                                               _GLF_SWITCH_0_13v;
                                               case 0:
                                               case 47:
                                               case 74:
                                               case 39:
                                               if(_GLF_DEAD(false))
                                                barrier();
                                               case 83:
                                               case 1:
                                               case 18:
                                               case 90:
                                               if(_GLF_WRAPPED_IF_FALSE(false))
                                                {
                                                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                                  barrier();
                                                }
                                               else
                                                {
                                                 do
                                                  {
                                                   (mat3x2(-3.0, -1.0, -8.5, 3243.8048, -8783.8268, -1.2) - -0.4);
                                                  }
                                                 while(_GLF_WRAPPED_LOOP(false));
                                                }
                                               break;
                                               default:
                                               1;
                                              }
                                            }
                                          }
                                         break;
                                         default:
                                         1;
                                        }
                                       if(_GLF_DEAD(false))
                                        break;
                                      }
                                    }
                                  }
                                 else
                                  {
                                  }
                                }
                               else
                                {
                                }
                              }
                             else
                              {
                              }
                            }
                           else
                            {
                             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                              barrier();
                            }
                           do
                            {
                             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                              barrier();
                             if(_GLF_WRAPPED_IF_TRUE(true))
                              {
                               for(int _injected_loop_counter = (0 | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 + (int(3)))))); _injected_loop_counter --)
                                {
                                 if(_GLF_DEAD(false))
                                  barrier();
                                }
                              }
                             else
                              {
                              }
                             if(_GLF_DEAD(false))
                              barrier();
                             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                              {
                               if(_GLF_WRAPPED_IF_TRUE(true))
                                {
                                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                  barrier();
                                }
                               else
                                {
                                }
                               break;
                              }
                            }
                           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            {
                             if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                              break;
                             if(_GLF_DEAD(false))
                              break;
                            }
                           else
                            {
                             if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))))
                              break;
                             bvec2(true, false);
                            }
                           if(_GLF_DEAD(false))
                            {
                             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                              barrier();
                             barrier();
                            }
                           for(int _injected_loop_counter = (1 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                            {
                             (vec3(-6.2, -3.3, 7.7) , mat4x3(mat2x3(7.2, 0.2, 8.7, 899.684, 4.3, 8083.8827)));
                            }
                           uint _GLF_SWITCH_0_32v;
                           uvec3(179807u, 149605u, 118978u);
                          }
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          continue;
                        }
                       if(_GLF_DEAD(false))
                        {
                         switch(_GLF_SWITCH(0))
                          {
                           case 39:
                           if(_GLF_WRAPPED_IF_FALSE(false))
                            {
                            }
                           else
                            {
                             mat2x3(-354.094, 7.7, -460.598, -620.999, 7453.6798, 7.8);
                            }
                           case 53:
                           vec3(-5.5, 3.1, -89.17);
                           case 0:
                           case 83:
                           case 78:
                           case 21:
                           if(_GLF_DEAD(false))
                            return;
                           case 89:
                           continue;
                           break;
                           case 79:
                           mat2 _GLF_SWITCH_3_0v, _GLF_SWITCH_3_1v[2];
                           case 24:
                           mat2x4 _GLF_SWITCH_3_2v, _GLF_SWITCH_3_3v, _GLF_SWITCH_3_4v;
                           default:
                           1;
                          }
                        }
                       do
                        {
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          continue;
                         mat3x2(-4.6, -40.38, -78.86, -4318.3846, -4.0, -4.6);
                        }
                       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                      }
                    }
                   case 0:
                   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                    {
                     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
                      {
                       for(int _injected_loop_counter = (((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))) ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))); _injected_loop_counter ++)
                        {
                         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                          {
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            {
                             for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                              {
                               return;
                              }
                            }
                          }
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                        }
                       if(_GLF_DEAD(false))
                        {
                         do
                          {
                           return;
                          }
                         while(_GLF_WRAPPED_LOOP(false));
                        }
                       if(_GLF_DEAD(false))
                        barrier();
                      }
                     else
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                      }
                    }
                   else
                    {
                    }
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(false))
                      {
                       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (-44603 & 0)); _injected_loop_counter --)
                        {
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                         if(_GLF_WRAPPED_IF_FALSE(false))
                          {
                          }
                         else
                          {
                           for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), max(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x)))); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)))); _injected_loop_counter ++)
                            {
                             barrier();
                            }
                          }
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          continue;
                         if(_GLF_DEAD(false))
                          barrier();
                        }
                       if(_GLF_DEAD(false))
                        barrier();
                       if(_GLF_DEAD(false))
                        break;
                      }
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                        }
                       else
                        {
                         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                          {
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                           barrier();
                          }
                        }
                      }
                     else
                      {
                       barrier();
                      }
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                    }
                   if(_GLF_DEAD(false))
                    break;
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                       if(_GLF_DEAD(false))
                        break;
                       do
                        {
                         return;
                        }
                       while(_GLF_WRAPPED_LOOP(false));
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        continue;
                      }
                    }
                   else
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        continue;
                       break;
                      }
                     if(_GLF_DEAD(false))
                      {
                       do
                        {
                         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                          {
                           do
                            {
                             if(_GLF_WRAPPED_IF_FALSE(false))
                              {
                              }
                             else
                              {
                               switch(_GLF_SWITCH((1 ^ (((1 | 1) << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))))))
                                {
                                 case 96:
                                 uint _GLF_SWITCH_4_0v, _GLF_SWITCH_4_1v, _GLF_SWITCH_4_2v;
                                 case 40:
                                 mat2(13.18, 3878.2037, -0.8, -231.836);
                                 case 0:
                                 case 75:
                                 case 72:
                                 case 90:
                                 case 71:
                                 case 50:
                                 barrier();
                                 break;
                                 case 59:
                                 if(_GLF_WRAPPED_IF_FALSE(false))
                                  {
                                  }
                                 else
                                  {
                                   transpose((mat3x4(15.99, -254.866, -20.97, -7891.1466, -9.8, -621.788, -5.7, 9816.6425, -5043.4709, 11.47, -4.7, -127.316) * mat2x3(35.58, 6999.0329, 36.96, 9553.3807, -0.7, 359.313)));
                                   if(_GLF_DEAD(false))
                                    barrier();
                                  }
                                 default:
                                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                  barrier();
                                 if(_GLF_WRAPPED_IF_TRUE(true))
                                  {
                                   1;
                                   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                                    barrier();
                                  }
                                 else
                                  {
                                  }
                                }
                              }
                            }
                           while(_GLF_WRAPPED_LOOP(false));
                          }
                         else
                          {
                          }
                        }
                       while(_GLF_WRAPPED_LOOP(false));
                      }
                    }
                   if(_GLF_DEAD(false))
                    barrier();
                   case 4:
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                        }
                       else
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                        }
                       barrier();
                      }
                     break;
                    }
                   do
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                    }
                   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false))))
                    continue;
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        continue;
                       barrier();
                      }
                    }
                   case 95:
                   if(_GLF_DEAD(false))
                    break;
                   if(_GLF_DEAD(false))
                    barrier();
                   case 26:
                   case 57:
                   case 65:
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                       if(_GLF_WRAPPED_IF_TRUE(true))
                        {
                         do
                          {
                           return;
                          }
                         while(_GLF_WRAPPED_LOOP(false));
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          return;
                        }
                       else
                        {
                        }
                      }
                     break;
                    }
                   if(_GLF_DEAD(false))
                    barrier();
                   case 34:
                   case 10:
                   barrier();
                   break;
                   case 69:
                   {
                    if(_GLF_DEAD(false))
                     break;
                    for(                    mat2(mat4(782.331, 160.488, 3.9, 364.094, 8017.9086, -8.9, -2.1, -3491.0047, -664.075, -8677.4578, 48.32, -726.022, 9.4, 2.0, -5.5, -8841.5634));
 (min((70857 - ivec2(91818, -82684)), ivec2(-80545, -20902)) != ivec2(70835, 74748)); (uvec4(159099u, 80763u, 40572u, 36140u) ^ uvec4(193195u, 135985u, 31562u, 702u)))
                     {
                      if(_GLF_WRAPPED_IF_FALSE(false))
                       {
                       }
                      else
                       {
                        mat4x3(-487.981, 844.924, 7.8, -25.15, -9.9, 794.358, -229.393, -568.985, 896.320, -82.05, 524.034, -735.025);
                       }
                      if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
                       return;
                      if(_GLF_DEAD(false))
                       {
                        if(_GLF_WRAPPED_IF_TRUE(true))
                         {
                          if(_GLF_DEAD(false))
                           return;
                          return;
                         }
                        else
                         {
                         }
                       }
                      if(_GLF_DEAD(false))
                       barrier();
                      if(_GLF_DEAD(false))
                       continue;
                      if(_GLF_DEAD(false))
                       return;
                      if(_GLF_WRAPPED_IF_FALSE(false))
                       {
                       }
                      else
                       {
                        mat3(-451.612, 6804.2116, 8628.6823, -9696.4580, -64.59, 9.1, 5570.5017, 98.98, -9.8);
                       }
                      if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       {
                       }
                      else
                       {
                        if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                         {
                          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                           barrier();
                         }
                        else
                         {
                          if(_GLF_WRAPPED_IF_FALSE(false))
                           {
                           }
                          else
                           {
                            do
                             {
                              lessThanEqual(uvec3(10498u, 34639u, 98857u), uvec3(106149u, 129276u, 80641u));
                             }
                            while(_GLF_WRAPPED_LOOP(false));
                           }
                         }
                       }
                      if(_GLF_DEAD(false))
                       break;
                      uvec4 _GLF_SWITCH_0_33v;
                      if(_GLF_DEAD(false))
                       continue;
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       barrier();
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       return;
                      if(_GLF_DEAD(false))
                       {
                        switch(_GLF_SWITCH(0))
                         {
                          case 26:
                          mat4 _GLF_SWITCH_4_0v, _GLF_SWITCH_4_1v[15], _GLF_SWITCH_4_2v;
                          case 99:
                          vec2 _GLF_SWITCH_4_3v[78];
                          case 0:
                          if(_GLF_DEAD(false))
                           barrier();
                          case 96:
                          continue;
                          break;
                          default:
                          if(_GLF_DEAD(false))
                           barrier();
                          if(_GLF_WRAPPED_IF_FALSE(false))
                           {
                           }
                          else
                           {
                            if(_GLF_DEAD(false))
                             barrier();
                            1;
                           }
                         }
                       }
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       continue;
                      if(_GLF_DEAD(false))
                       barrier();
                     }
                    do
                     {
                      if(_GLF_DEAD(false))
                       {
                        if(_GLF_DEAD(false))
                         return;
                        barrier();
                       }
                     }
                    while(_GLF_WRAPPED_LOOP(false));
                    do
                     {
                      if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                       {
                        if(_GLF_DEAD(false))
                         barrier();
                        for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                         {
                          switch(_GLF_SWITCH(0))
                           {
                            case 50:
                            uint _GLF_SWITCH_1_0v;
                            case 0:
                            case 51:
                            if(_GLF_DEAD(false))
                             barrier();
                            case 52:
                            if(_GLF_DEAD(false))
                             continue;
                            if(_GLF_DEAD(false))
                             barrier();
                            case 39:
                            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                             barrier();
                            case 5:
                            for(int _injected_loop_counter = _GLF_IDENTITY((0 | 0), min((0 | 0), _GLF_IDENTITY((0 | 0), 0 | ((0 | 0))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 | ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) * 1))))); _injected_loop_counter ++)
                             {
                              while((false))
                               {
                                if(_GLF_WRAPPED_IF_FALSE(false))
                                 {
                                 }
                                else
                                 {
                                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                   {
                                    for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                                     {
                                      barrier();
                                     }
                                   }
                                  if(_GLF_WRAPPED_IF_TRUE(true))
                                   {
                                    if(_GLF_DEAD(false))
                                     barrier();
                                   }
                                  else
                                   {
                                   }
                                 }
                                for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                                 {
                                  for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(1), int(1)))); _injected_loop_counter --)
                                   {
                                    mat4x2(186.732, 11.88, -5.9, 6.5, -4318.6607, -0.7, -70.11, -5.9);
                                   }
                                 }
                                uvec4(14005u, 87612u, 66096u, 166506u);
                                if(_GLF_DEAD(false))
                                 {
                                  switch(_GLF_SWITCH(0))
                                   {
                                    case 0:
                                    case 98:
                                    case 26:
                                    case 52:
                                    case 42:
                                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                     barrier();
                                    if(_GLF_DEAD(false))
                                     break;
                                    case 10:
                                    case 55:
                                    case 84:
                                    case 97:
                                    case 50:
                                    if(_GLF_WRAPPED_IF_FALSE(false))
                                     {
                                     }
                                    else
                                     {
                                      for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                                       {
                                        barrier();
                                        if(_GLF_DEAD(false))
                                         {
                                          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                           barrier();
                                          break;
                                         }
                                       }
                                     }
                                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                     return;
                                    if(_GLF_DEAD(false))
                                     barrier();
                                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                     continue;
                                    break;
                                    if(_GLF_DEAD(false))
                                     barrier();
                                    case 56:
                                    transpose(mat2x4(3.9, 4.5, -8.0, -8.6, 233.715, 237.691, 3.6, 1.2));
                                    default:
                                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                     barrier();
                                    do
                                     {
                                      do
                                       {
                                        1;
                                       }
                                      while(_GLF_WRAPPED_LOOP(false));
                                     }
                                    while(_GLF_WRAPPED_LOOP(false));
                                   }
                                  if(_GLF_WRAPPED_IF_TRUE(true))
                                   {
                                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                     barrier();
                                   }
                                  else
                                   {
                                   }
                                  if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                                   return;
                                 }
                                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                 break;
                                if(_GLF_WRAPPED_IF_TRUE(true))
                                 {
                                  ;
                                 }
                                else
                                 {
                                 }
                                if(_GLF_WRAPPED_IF_TRUE(true))
                                 {
                                  do
                                   {
                                    if(_GLF_DEAD(false))
                                     {
                                      do
                                       {
                                        if(_GLF_DEAD(false))
                                         barrier();
                                       }
                                      while(_GLF_WRAPPED_LOOP(false));
                                      break;
                                     }
                                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                     continue;
                                    for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                                     {
                                      switch(_GLF_SWITCH(0))
                                       {
                                        case 31:
                                        if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                                         barrier();
                                        (transpose(mat2(6.0, 8277.3067, -2915.6356, -1.4)) * mat4x2(-844.684, 504.432, 5.8, 1.1, -0.1, -67.30, -9578.8980, 7678.5682));
                                        case 0:
                                        if(_GLF_DEAD(false))
                                         {
                                          if(_GLF_DEAD(false))
                                           {
                                            if(_GLF_DEAD(false))
                                             barrier();
                                            barrier();
                                           }
                                          barrier();
                                         }
                                        break;
                                        case 42:
                                        41858u;
                                        case 77:
                                        if(_GLF_WRAPPED_IF_TRUE(true))
                                         {
                                          if(_GLF_WRAPPED_IF_TRUE(true))
                                           {
                                            mix(log(injectionSwitch), smoothstep(max(vec2(775.175, -9.7), injectionSwitch), injectionSwitch, injectionSwitch), 4870.5474);
                                           }
                                          else
                                           {
                                           }
                                         }
                                        else
                                         {
                                         }
                                        default:
                                        1;
                                       }
                                     }
                                    if(_GLF_DEAD(false))
                                     return;
                                   }
                                  while(_GLF_WRAPPED_LOOP(false));
                                  if(_GLF_DEAD(false))
                                   barrier();
                                 }
                                else
                                 {
                                 }
                                uvec3 _GLF_SWITCH_0_34v;
                                if(_GLF_DEAD(false))
                                 continue;
                                if(_GLF_WRAPPED_IF_FALSE(false))
                                 {
                                  if(_GLF_DEAD(false))
                                   continue;
                                 }
                                else
                                 {
                                  do
                                   {
                                    ;
                                    if(_GLF_DEAD(false))
                                     continue;
                                    if(_GLF_DEAD(false))
                                     break;
                                   }
                                  while(_GLF_WRAPPED_LOOP(false));
                                  if(_GLF_DEAD(false))
                                   {
                                    if(_GLF_DEAD(false))
                                     break;
                                    continue;
                                   }
                                 }
                                if(_GLF_DEAD(false))
                                 return;
                                if(_GLF_DEAD(false))
                                 {
                                  if(_GLF_DEAD(false))
                                   continue;
                                  if(_GLF_DEAD(false))
                                   barrier();
                                  if(_GLF_WRAPPED_IF_FALSE(false))
                                   {
                                   }
                                  else
                                   {
                                    if(_GLF_WRAPPED_IF_FALSE(false))
                                     {
                                     }
                                    else
                                     {
                                      if(_GLF_WRAPPED_IF_TRUE(true))
                                       {
                                        return;
                                       }
                                      else
                                       {
                                       }
                                     }
                                   }
                                 }
                               }
                             }
                            break;
                            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                             {
                              switch(_GLF_SWITCH(0))
                               {
                                case 7:
                                mat4x2(550.929, -485.319, 82.46, 38.48, -7577.3912, -306.932, -24.81, 4.6);
                                case 69:
                                sqrt(vec2(7.7, -0.5));
                                case 0:
                                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                 barrier();
                                case 88:
                                if(_GLF_DEAD(false))
                                 barrier();
                                case 55:
                                case 84:
                                case 54:
                                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                 return;
                                continue;
                                if(_GLF_DEAD(false))
                                 barrier();
                                break;
                                default:
                                1;
                               }
                             }
                            case 37:
                            mat3 _GLF_SWITCH_1_1v;
                            if(_GLF_DEAD(false))
                             break;
                            default:
                            if(_GLF_WRAPPED_IF_TRUE(true))
                             {
                              switch(_GLF_SWITCH((0 ^ 0)))
                               {
                                case 90:
                                do
                                 {
                                  bvec3(true, true, true);
                                 }
                                while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                                case 2:
                                vec2 _GLF_SWITCH_4_0v, _GLF_SWITCH_4_1v, _GLF_SWITCH_4_2v;
                                case 0:
                                case 70:
                                case 93:
                                case 57:
                                case 91:
                                case 74:
                                case 76:
                                1;
                                break;
                                default:
                                1;
                               }
                             }
                            else
                             {
                             }
                           }
                         }
                       }
                      else
                       {
                       }
                      if(_GLF_DEAD(false))
                       {
                        for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                         {
                          do
                           {
                            return;
                           }
                          while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                         }
                       }
                     }
                    while(_GLF_WRAPPED_LOOP(false));
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                       do
                        {
                         if(_GLF_WRAPPED_IF_FALSE(false))
                          {
                          }
                         else
                          {
                           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 | int(_GLF_ZERO(0.0, injectionSwitch.x)))); _injected_loop_counter --)
                            {
                             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                              {
                               do
                                {
                                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                  continue;
                                 return;
                                }
                               while(_GLF_WRAPPED_LOOP(false));
                              }
                            }
                           if(_GLF_DEAD(false))
                            barrier();
                          }
                        }
                       while(_GLF_WRAPPED_LOOP(false));
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                         return;
                        }
                       if(_GLF_DEAD(false))
                        barrier();
                      }
                     else
                      {
                       switch(_GLF_SWITCH((0 >> _GLF_IDENTITY(int(1), int(1)))))
                        {
                         case 42:
                         if(_GLF_DEAD(false))
                          break;
                         do
                          {
                           bvec2(false, false);
                          }
                         while(_GLF_WRAPPED_LOOP(false));
                         case 0:
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          return;
                         case 38:
                         case 70:
                         if(_GLF_DEAD(false))
                          continue;
                         if(_GLF_DEAD(false))
                          {
                           if(_GLF_WRAPPED_IF_FALSE(false))
                            {
                            }
                           else
                            {
                             return;
                            }
                          }
                         case 3:
                         mat2x3(-242.216, 11.21, -9.4, 187.039, 0.8, -88.47);
                         if(_GLF_DEAD(false))
                          continue;
                         break;
                         default:
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          return;
                         1;
                         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), ! (! (bool(bvec4(false, true, false, true))))))))
                          continue;
                        }
                      }
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       mat3x4((mat2x3(-2.2, -1385.2076, -3.9, -1132.4236, -558.379, -4405.8152) * mat2(3.3, -2.7, 294.327, 3128.6191)));
                      }
                     if(_GLF_DEAD(false))
                      break;
                     if(_GLF_DEAD(false))
                      break;
                     for(int _injected_loop_counter = (int(_GLF_ZERO(0.0, injectionSwitch.x)) | int(_GLF_ZERO(0.0, injectionSwitch.x))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                      {
                       ;
                      }
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     if(_GLF_DEAD(false))
                      barrier();
                     (5.1 < floor(-1.6));
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_WRAPPED_IF_FALSE(false))
                          {
                          }
                         else
                          {
                           barrier();
                          }
                        }
                       mat2x4(mat4x2(262.310, 246.730, -67.63, 874.526, -84.95, -9.2, 1.9, -1569.6667));
                       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        {
                        }
                       else
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                        }
                       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                        return;
                       mat2x3(9714.7228, -984.457, 3412.2738, -8131.6773, 4919.4997, 865.866);
                       for(int _injected_loop_counter = (0 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), clamp(int(8), int(8), int(8)))))); _injected_loop_counter --)
                        {
                         if(_GLF_DEAD(false))
                          break;
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          {
                           for(int _injected_loop_counter = (0 & -86013); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                            {
                             barrier();
                            }
                          }
                         if(_GLF_DEAD(false))
                          return;
                         uvec3(144326u, 23868u, 4276u);
                        }
                      }
                     else
                      {
                      }
                     uvec3(128753u, 118999u, 192513u);
                     if(_GLF_DEAD(false))
                      return;
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                      }
                     else
                      {
                      }
                     do
                      {
                       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                        {
                         mat2x4(2.2, 3542.5216, 683.306, 92.64, -51.71, 6.3, -9520.7797, 1411.3218);
                        }
                       mat3x2 _GLF_SWITCH_0_35v[73], _GLF_SWITCH_0_36v, _GLF_SWITCH_0_37v[48];
                      }
                     while(true);
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                       do
                        {
                         barrier();
                        }
                       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                      }
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                       if(_GLF_WRAPPED_IF_TRUE(true))
                        {
                         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                          {
                           barrier();
                          }
                        }
                       else
                        {
                        }
                      }
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       (mat4x2(288.340, -947.823, 9.3, 0.4, 1858.3564, -472.103, 4.9, -7.0) / -4.9);
                      }
                    }
                    do
                     {
                      if(_GLF_DEAD(false))
                       break;
                      bvec3(false, false, true);
                     }
                    while(_GLF_WRAPPED_LOOP(false));
                    if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                     {
                      (uvec3(68978u, 125249u, 95889u) / uvec3(111671u, 174423u, 134186u));
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       barrier();
                      if(_GLF_DEAD(false))
                       return;
                     }
                    else
                     {
                     }
                    if(_GLF_DEAD(false))
                     barrier();
                    if(_GLF_DEAD(false))
                     break;
                    if(_GLF_WRAPPED_IF_FALSE(false))
                     {
                     }
                    else
                     {
                      for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                       {
                        if(_GLF_WRAPPED_IF_TRUE(true))
                         {
                          if(_GLF_DEAD(false))
                           {
                            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                             barrier();
                            barrier();
                           }
                         }
                        else
                         {
                         }
                       }
                     }
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     continue;
                    if(_GLF_DEAD(false))
                     barrier();
                    mat2x4(698.530, -1.5, -396.213, 94.60, -622.787, 28.94, 294.182, 0.4);
                    if(_GLF_DEAD(false))
                     continue;
                    if(_GLF_DEAD(false))
                     {
                      switch(_GLF_SWITCH((0 & -19131)))
                       {
                        case 97:
                        uvec2(148353u, 84748u);
                        case 0:
                        case 3:
                        case 99:
                        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                         continue;
                        case 42:
                        case 31:
                        case 91:
                        case 32:
                        case 80:
                        case 12:
                        return;
                        break;
                        default:
                        1;
                       }
                     }
                    for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                     {
                      if(_GLF_WRAPPED_IF_FALSE(false))
                       {
                       }
                      else
                       {
                        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                         barrier();
                       }
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       {
                        switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
                         {
                          case 53:
                          uint _GLF_SWITCH_4_0v[46], _GLF_SWITCH_4_1v[76];
                          case 67:
                          if(_GLF_DEAD(false))
                           barrier();
                          bvec4(true, false, true, true);
                          case 0:
                          case 77:
                          case 71:
                          case 22:
                          if(_GLF_DEAD(false))
                           barrier();
                          if(_GLF_WRAPPED_IF_TRUE(true))
                           {
                            if(_GLF_DEAD(false))
                             {
                              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                               barrier();
                              return;
                             }
                           }
                          else
                           {
                           }
                          case 1:
                          case 94:
                          case 49:
                          case 66:
                          return;
                          break;
                          default:
                          1;
                         }
                       }
                     }
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     barrier();
                    mat4x2(-335.695, -2734.1102, -569.539, -35.85, 506.449, 3.6, 42.89, -642.297);
                   }
                   case 23:
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(false))
                      continue;
                     return;
                    }
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(false))
                      continue;
                     continue;
                    }
                   ivec4(15222, ivec3(51264, -42294, -65037));
                   default:
                   1;
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             else
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
                  {
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       do
                        {
                         return;
                        }
                       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                      }
                    }
                  }
                 else
                  {
                  }
                }
               else
                {
                }
              }
             break;
             case 60:
             mat4x3 _GLF_SWITCH_3_0v;
             case 86:
             vec3 _GLF_SWITCH_3_1v[23], _GLF_SWITCH_3_2v, _GLF_SWITCH_3_3v[92];
             default:
             1;
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             barrier();
            }
          }
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 else
  {
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   switch(_GLF_SWITCH((0 << _GLF_IDENTITY(int(2), int(2)))))
    {
     case 96:
     {
      {
       while(all(notEqual(ivec2(44416, 6035), ivec2(-26137, -7220))))
        {
         ivec3(27486, 2033, -18433);
         ivec2 _GLF_SWITCH_4_0v[3], _GLF_SWITCH_4_1v, _GLF_SWITCH_4_2v;
        }
       (mat3(9586.1324, 8151.8862, 36.00, 1.7, -5.5, 34.87, -5549.2753, -60.03, 1125.3915));
       mat3x2(565.509, -4211.2021, -9148.7477, 4440.0731, -9.8, -2768.9782);
       (mat3x4(mat4x3(7736.6180, 3.6, -901.617, 5.1, -9700.2949, -7.1, 1022.8727, -1.2, -0.5, -0.4, 674.551, -5.7)) + transpose(mat4x3(-3.6, -9553.2312, 4722.7991, 5570.5991, 681.379, 263.657, 0.1, -910.174, -95.26, 2.5, -2375.5835, -93.31)));
       if(_GLF_DEAD(false))
        barrier();
       (bitfieldReverse(ivec2(90892, -60898)) + ivec2(-41951, -79752));
      }
      while(any(bvec3(false, false, true)))
       {
        {
         (mat3(625.496, 84.46, -1075.1290, -297.774, -75.32, 0.8, -87.71, 3716.4896, -493.715) + 1.6);
         mat2 _GLF_SWITCH_4_3v[61];
         mat2 _GLF_SWITCH_4_4v[72];
         ;
         if(_GLF_DEAD(false))
          barrier();
         mat4x3 _GLF_SWITCH_4_5v, _GLF_SWITCH_4_6v[7];
         ;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         uvec4 _GLF_SWITCH_4_7v, _GLF_SWITCH_4_8v, _GLF_SWITCH_4_9v;
         ivec3(-76342, 2779, 36688);
        }
        {
         mat3 _GLF_SWITCH_4_10v, _GLF_SWITCH_4_11v;
         mat3 _GLF_SWITCH_4_12v, _GLF_SWITCH_4_13v, _GLF_SWITCH_4_14v;
        }
        for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
         {
          for(          (subgroup_size / subgroup_size);
 (ivec4(-33266, -22648, 50811, 74869) == ivec4(55, -25955, (-92267 & ivec2(-98342, 33799)))); ivec4(99502, -57651, -53188, 51980))
           {
            true;
           }
         }
        if(_GLF_DEAD(false))
         barrier();
       }
      if(_GLF_DEAD(false))
       barrier();
     }
     case 26:
     mat3x4 _GLF_SWITCH_4_15v, _GLF_SWITCH_4_16v;
     case 0:
     case 23:
     case 21:
     case 25:
     switch(_GLF_SWITCH(((0 >> _GLF_IDENTITY(int(8), int(8))) | 0)))
      {
       case 67:
       bvec4(true, false, false, false);
       case 0:
       case 6:
       case 92:
       case 62:
       if(_GLF_DEAD(false))
        return;
       case 86:
       case 2:
       barrier();
       break;
       case 25:
       mat3x4 _GLF_SWITCH_3_0v, _GLF_SWITCH_3_1v;
       default:
       1;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     break;
     case 90:
     while(false)
      {
       ivec3 _GLF_SWITCH_4_17v, _GLF_SWITCH_4_18v, _GLF_SWITCH_4_19v;
       ;
       bitfieldExtract(_GLF_SWITCH_4_17v, 49326, -24177);
       mat2x4 _GLF_SWITCH_4_20v, _GLF_SWITCH_4_21v, _GLF_SWITCH_4_22v;
       while((bvec2(false, true) != bvec2(false, true)))
        {
         {
         }
        }
      }
     default:
     1;
    }
  }
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     barrier();
    }
   else
    {
    }
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 uint workgroup_base = workgroup_size * workgroup_id;
 uint subgroup_base = subgroup_id * subgroup_size;
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size);
 atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (1 ^ 1)); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          return;
        }
       else
        {
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         return;
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        {
         switch(_GLF_SWITCH(0))
          {
           case 0:
           case 12:
           case 11:
           if(_GLF_DEAD(false))
            continue;
           case 76:
           case 47:
           barrier();
           break;
           case 61:
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             mat2x4(-51.09, 88.84, 55.87, -7.1, 3.1, 889.645, 6282.9893, 4232.4760);
            }
           else
            {
            }
           default:
           1;
          }
        }
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    break;
  }
 do
  {
   if(_GLF_DEAD(false))
    return;
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  barrier();
 if((subgroup_local_id % 2) == 0)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         return;
        }
      }
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
      {
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
             return;
            }
           continue;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     do
      {
       do
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
            return;
          }
         if(_GLF_DEAD(false))
          continue;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
    }
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))))
    {
    }
   else
    {
     atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      {
       switch(_GLF_SWITCH((0 | 0)))
        {
         case 0:
         case 54:
         case 50:
         case 40:
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         case 17:
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) || false)))
          {
           if(_GLF_DEAD(false))
            {
             do
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((0 >> _GLF_IDENTITY(int(3), int(3))) ^ (1 & 1))); _injected_loop_counter ++)
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   return;
                  }
                }
               else
                {
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         else
          {
           switch(_GLF_SWITCH(0))
            {
             case 0:
             case 77:
             case 37:
             if(_GLF_DEAD(false))
              {
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                {
                 return;
                }
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 return;
                }
              }
             else
              {
              }
             case 53:
             case 17:
             case 2:
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             case 19:
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               for(int _injected_loop_counter = (0 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 & 1)); _injected_loop_counter ++)
                {
                 return;
                }
               if(_GLF_DEAD(false))
                barrier();
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             break;
             case 3:
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             while((24269 < -33354))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 ;
                }
               uvec3(uvec2(27905u, 105011u), subgroup_id);
               if(_GLF_DEAD(false))
                return;
               bvec2(false, true);
               mat4 _GLF_SWITCH_1_0v, _GLF_SWITCH_1_1v, _GLF_SWITCH_1_2v[76];
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 ivec2(10489, -10034);
                 if(_GLF_DEAD(false))
                  barrier();
                }
               else
                {
                }
               if(_GLF_DEAD(false))
                barrier();
               _GLF_SWITCH_1_0v;
               if(_GLF_DEAD(false))
                break;
               mat4x3 _GLF_SWITCH_1_3v;
               76165;
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             case 8:
             mat4 _GLF_SWITCH_1_4v, _GLF_SWITCH_1_5v, _GLF_SWITCH_1_6v[54];
             default:
             if(_GLF_DEAD(false))
              barrier();
             1;
            }
          }
         case 61:
         case 85:
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            return;
          }
         break;
         case 74:
         if(true)
          {
           mat4x2(-5.9, -2.1, 101.109, -5735.9888, 3301.0247, -333.388, 45.54, -8.8);
           ;
           if(_GLF_DEAD(false))
            barrier();
           floatBitsToInt(distance(-0.4, 534.681));
           (ivec2(56022, 80207) - 94015);
           mat4x3 _GLF_SWITCH_4_0v;
           transpose(mat3x2(6.0, -818.685, -431.079, 76.88, 6.8, 4.9));
           (workgroup_size % num_workgroup);
           if(_GLF_DEAD(false))
            barrier();
           (vec3(101.809, -2.8, 3.4) - vec3(7.8, 76.59, -7.7));
          }
         case 71:
         while((mat4(-1.4, 7706.5366, 5.8, 6.1, 3882.6290, 6.3, -4.2, 5.1, 39.03, 52.85, 8828.7741, -72.90, -950.965, -66.96, 696.132, 4.6) == mat4(mat3(-8.8, -353.695, 6.2, 823.673, 7222.8458, 4.6, 156.020, 3.4, 9.2))))
          {
           ;
          }
         default:
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         else
          {
           1;
          }
        }
      }
    }
   else
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       switch(_GLF_SWITCH(((1 ^ 1) | int(_GLF_ZERO(0.0, injectionSwitch.x)))))
        {
         case 36:
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         ivec4(-1312, (72767 | _injected_loop_counter), (ivec2(77032, 44564) << (~ ivec2(-40446, -64519))));
         case 8:
         do
          {
           mat3x2(-4.6, -71.55, -7.8, -727.759, -0.4, -392.993);
          }
         while(_GLF_WRAPPED_LOOP(false));
         case 0:
         case 20:
         do
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
              {
               switch(_GLF_SWITCH(0))
                {
                 case 0:
                 case 30:
                 case 32:
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 case 33:
                 case 24:
                 if(_GLF_DEAD(false))
                  barrier();
                 case 12:
                 return;
                 break;
                 case 98:
                 vec2 _GLF_SWITCH_3_0v, _GLF_SWITCH_3_1v, _GLF_SWITCH_3_2v;
                 case 22:
                 mat2x4 _GLF_SWITCH_3_3v[6], _GLF_SWITCH_3_4v;
                 default:
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 1;
                }
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            return;
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         break;
         case 97:
         bvec4 _GLF_SWITCH_1_0v, _GLF_SWITCH_1_1v[74];
         case 83:
         if(_GLF_DEAD(false))
          break;
         do
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               barrier();
              }
             else
              {
              }
            }
           ;
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           do
            {
             switch(_GLF_SWITCH(0))
              {
               case 85:
               if(_GLF_DEAD(false))
                barrier();
               vec4(-5185.1685, 0.0, -3573.3899, 6.4);
               case 0:
               case 25:
               case 51:
               if(_GLF_DEAD(false))
                return;
               break;
               default:
               1;
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
           break;
          }
         if(_GLF_DEAD(false))
          continue;
         default:
         do
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             1;
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(false))
          continue;
        }
       if(_GLF_DEAD(false))
        break;
      }
    }
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
        {
         case 64:
         mat3x2(-1.2, 8.8, -1534.0108, -1.4, 30.51, -3464.8169);
         case 0:
         case 3:
         case 75:
         case 6:
         if(_GLF_DEAD(false))
          barrier();
         case 5:
         case 4:
         case 1:
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
            }
           else
            {
            }
          }
         else
          {
          }
         break;
         case 56:
         uvec2 _GLF_SWITCH_3_0v, _GLF_SWITCH_3_1v[15], _GLF_SWITCH_3_2v[83];
         case 72:
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            barrier();
           mat4x2(mat2(-236.536, -611.069, 2.2, -1814.5233));
          }
         else
          {
          }
         default:
         1;
        }
      }
    }
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
