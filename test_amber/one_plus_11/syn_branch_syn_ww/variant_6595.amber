#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_16 {
 mat2x3 _f0;
 vec2 _f1;
} ;

struct _GLF_struct_15 {
 uint _f0;
 mat4x3 _f1;
 mat2x4 _f2;
 mat3 _f3;
} ;

struct _GLF_struct_14 {
 ivec4 _f0;
 mat4 _f1;
 vec3 _f2;
 uint _f3;
 uvec3 _f4;
 mat3 _f5;
} ;

struct _GLF_struct_13 {
 uint _f0;
 mat4 _f1;
 mat2 _f2;
 mat3x2 _f3;
 mat4x3 _f4;
} ;

struct _GLF_struct_17 {
 _GLF_struct_13 _f0;
 _GLF_struct_14 _f1;
 _GLF_struct_15 _f2;
 uvec2 GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size;
 _GLF_struct_16 _f3;
 bool _f4;
} ;

struct _GLF_struct_11 {
 int _f0;
 bool _f1;
 mat4x3 _f2;
 mat2x4 _f3;
 vec4 _f4;
} ;

struct _GLF_struct_10 {
 mat2x4 _f0;
 mat2 _f1;
} ;

struct _GLF_struct_9 {
 int _f0;
 uint _f1;
 mat4x3 _f2;
} ;

struct _GLF_struct_12 {
 ivec2 _f0;
 bvec3 _f1;
 _GLF_struct_9 _f2;
 uvec3 _f3;
 _GLF_struct_10 _f4;
 _GLF_struct_11 _f5;
 int _f6;
} ;

struct _GLF_struct_18 {
 _GLF_struct_12 _f0;
 _GLF_struct_17 _f1;
} ;

struct _GLF_struct_6 {
 float _f0;
 uvec4 _f1;
 mat4x3 _f2;
 vec4 _f3;
 bool _f4;
} ;

struct _GLF_struct_5 {
 mat3x2 _f0;
 mat3x2 _f1;
 mat3x2 _f2;
} ;

struct _GLF_struct_4 {
 ivec4 _f0;
 vec2 _f1;
 vec3 _f2;
} ;

struct _GLF_struct_7 {
 _GLF_struct_4 _f0;
 _GLF_struct_5 _f1;
 _GLF_struct_6 _f2;
 mat2x3 _f3;
} ;

struct _GLF_struct_2 {
 bool _f0;
 mat4x2 _f1;
 mat4 _f2;
} ;

struct _GLF_struct_1 {
 mat4 _f0;
 bvec3 _f1;
} ;

struct _GLF_struct_0 {
 mat4x2 _f0;
 mat2 _f1;
 vec3 _f2;
 ivec3 _f3;
} ;

struct _GLF_struct_3 {
 bool _f0;
 _GLF_struct_0 _f1;
 _GLF_struct_1 _f2;
 _GLF_struct_2 _f3;
} ;

struct _GLF_struct_8 {
 _GLF_struct_3 _f0;
 vec2 _f1;
 _GLF_struct_7 _f2;
 mat3x4 _f3;
 bvec3 _f4;
 uint virtual_gid;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 _GLF_struct_18 _GLF_struct_replacement_18;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, ! (! (true)))))), false || (! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, ! (! (true))))))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), false, _GLF_IDENTITY(true, ! (! (true))))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), false, _GLF_IDENTITY(true, ! (! (true))))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false)))) && true), false, _GLF_IDENTITY(true, ! (! (true))))))))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
  }
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || (bool(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, _GLF_IDENTITY(true, ! (! (true))), false))) || false)), true && (false))))))))))))) && true))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-4545.2599)), vec2(_GLF_FUZZED(22.37), _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(-91.81)), float((injectionSwitch)[1]), bool(true)))), bvec2(false, true))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(8.4), _GLF_FUZZED(16.72)), bvec2(false, false))))), min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-7975.5879)), bool(false)))))))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u)).x;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), false || (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))), ! (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (0.0) * 1.0) : _GLF_FUZZED(239.617)))), vec2(1.0, 1.0))) + (injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(sqrt(injectionSwitch)))).x > injectionSwitch.y)))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 0.0, 1.0, 0.0))))), (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(atan(-8073.2753)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, determinant(mat2(0.0, 0.0, 0.0, 0.0)), sqrt(0.0), 1.0, cos(0.0)))).x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))))) - determinant(mat2(0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)))))) > injectionSwitch.y))))
        return;
       barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 _GLF_struct_replacement_18._f1.GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.y = workgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, false || ((false) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec3(_GLF_IDENTITY(false, (false) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, false || ((false) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec3(_GLF_IDENTITY(false, (false) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, false || ((false) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec3(_GLF_IDENTITY(false, (false) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false, true))), false)))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, false || ((false) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec3(_GLF_IDENTITY(false, (false) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, false || ((false) && true))), _GLF_TRUE(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, false || (true)))), (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec3(_GLF_IDENTITY(false, (false) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, false || ((false) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, false || (_GLF_IDENTITY((false) && true, ((false) && true) && true)))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false, true))), false)))))))
    return;
   return;
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(~ (~ (gl_WorkGroupID)), uvec3(1u, 1u, 1u) * (~ (_GLF_IDENTITY(~ (gl_WorkGroupID), (_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | (~ (gl_WorkGroupID)))) << uvec3(0u, _GLF_IDENTITY(0u, (0u) / 1u), 0u)))))).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(1695.3253), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(782.462)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).y), ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(1695.3253), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(782.462)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).y)) && true)) && (_GLF_IDENTITY(false, (false) || false))), ! (! (false)))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))))) || false)))))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec3(_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false)))), _GLF_IDENTITY(false, (false) && true), true))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, determinant(mat2(0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))), 0.0))).x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(vec2(-1.3, 4.9).x)), vec2(_GLF_FUZZED(193.228), (injectionSwitch)[1]), bvec2(false, true))).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(_GLF_struct_replacement_18._f1.GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.y * workgroup_id, (true ? _GLF_struct_replacement_18._f1.GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.y * workgroup_id : _GLF_FUZZED((workgroup_size % workgroup_id))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3.8)), float(injectionSwitch.y), bool(true))) : _GLF_FUZZED(min(4.4, -1.3))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 _GLF_struct_replacement_18._f1.GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x = workgroup_base;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 _GLF_struct_8 _GLF_struct_replacement_8 = _GLF_struct_8(_GLF_struct_3(true, _GLF_struct_0(mat4x2(1.0), mat2(1.0), _GLF_IDENTITY(vec3(1.0), _GLF_IDENTITY(clamp(vec3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), vec3(1.0), vec3(1.0)), clamp(clamp(vec3(1.0), vec3(1.0), vec3(1.0)), clamp(vec3(1.0), vec3(1.0), vec3(1.0)), clamp(vec3(1.0), vec3(1.0), vec3(1.0))))), ivec3(1)), _GLF_struct_1(mat4(1.0), bvec3(true)), _GLF_struct_2(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, false, false))), bool(bvec2(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, (true) || false), false, true))), false, _GLF_IDENTITY(false, true && (false))))), false))), mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 1.0 * _GLF_IDENTITY((1.0), max((1.0), (1.0)))), (_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0 * (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(atan(-5.0)) : 1.0))), (_GLF_IDENTITY(false ? _GLF_FUZZED(intBitsToFloat(_GLF_IDENTITY(-59272, 0 ^ (-59272)))) : _GLF_IDENTITY(1.0 * (1.0), _GLF_IDENTITY(float(mat4(1.0 * (1.0), 1.0, round(length(normalize(1.0))), 0.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(vec3(19.86, -4.4, 741.070).b)), float(injectionSwitch.x), bool(true)))), 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0)), 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, float(mat3x4(0.0, round(length(normalize(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), vec3(1.0, 1.0, 1.0) * (vec3(1.0, 1.0, 1.0)))))), sqrt(0.0), cos(_GLF_ZERO(0.0, injectionSwitch.x)), 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0))), sin(0.0), 0.0, 1.0, sin(0.0), cos(0.0))), clamp(float(mat4(1.0 * (1.0), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(356.039)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), round(length(_GLF_IDENTITY(normalize(1.0), mix(float(normalize(_GLF_IDENTITY(1.0, (1.0) + 0.0))), float(_GLF_FUZZED(124.603)), bool(false))))), 0.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(vec3(19.86, -4.4, 741.070).b)), float(_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))), injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, 1.0, 0.0, determinant(mat2(1.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0, 1.0)))))), bool(true)))), 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0, 1.0, 0.0, sin(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))), 0.0, 1.0, _GLF_IDENTITY(sin(0.0), mix(float(sin(0.0)), float(_GLF_FUZZED((-601.820 + 1892.2424))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), cos(0.0))), float(mat4(1.0 * (1.0), 1.0, round(length(normalize(1.0))), 0.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(vec3(19.86, -4.4, 741.070).b)), float(injectionSwitch.x), bool(true)))), 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, sin(0.0), 0.0, 1.0, sin(0.0), cos(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0)), 0.0))))), _GLF_IDENTITY(float(mat4(1.0 * (1.0), _GLF_IDENTITY(1.0, (1.0) / 1.0), round(length(normalize(1.0))), 0.0, _GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-50.09), _GLF_FUZZED(-2471.0232)), vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, int(ivec4(1, 1, ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), 1))), 1, 1))]), bvec2(true, true))).x, mix(float(_GLF_FUZZED(vec3(_GLF_IDENTITY(19.86, (false ? _GLF_FUZZED(-2935.7990) : 19.86)), -4.4, 741.070).b)), float(injectionSwitch.x), bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), false || (bool(bvec2(true, true))))))))), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(sin(0.0), max(sin(0.0), sin(0.0))), 0.0, 1.0, sin(0.0), cos(0.0))), _GLF_IDENTITY(min(float(mat4(1.0 * (1.0), _GLF_IDENTITY(1.0, (1.0) / 1.0), round(length(normalize(1.0))), 0.0, _GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-50.09), _GLF_FUZZED(-2471.0232)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x, mix(float(_GLF_FUZZED(vec3(_GLF_IDENTITY(19.86, (false ? _GLF_FUZZED(-2935.7990) : 19.86)), -4.4, 741.070).b)), float(injectionSwitch.x), bool(true)))), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(sin(0.0), max(sin(0.0), sin(0.0))), 0.0, 1.0, sin(0.0), cos(0.0))), float(mat4(1.0 * (1.0), _GLF_IDENTITY(1.0, (1.0) / 1.0), round(length(normalize(1.0))), 0.0, _GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-50.09), _GLF_FUZZED(-2471.0232)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x, mix(float(_GLF_FUZZED(vec3(_GLF_IDENTITY(19.86, (false ? _GLF_FUZZED(-2935.7990) : 19.86)), -4.4, 741.070).b)), float(injectionSwitch.x), bool(true)))), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(sin(0.0), max(sin(0.0), sin(0.0))), 0.0, 1.0, sin(0.0), cos(0.0)))), clamp(min(float(mat4(1.0 * (1.0), _GLF_IDENTITY(1.0, (1.0) / 1.0), round(length(normalize(1.0))), 0.0, _GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-50.09), _GLF_FUZZED(-2471.0232)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x, mix(float(_GLF_FUZZED(vec3(_GLF_IDENTITY(19.86, (false ? _GLF_FUZZED(-2935.7990) : 19.86)), -4.4, 741.070).b)), float(injectionSwitch.x), bool(true)))), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(sin(0.0), max(sin(0.0), sin(0.0))), 0.0, 1.0, sin(0.0), cos(0.0))), float(mat4(1.0 * (1.0), _GLF_IDENTITY(1.0, (1.0) / 1.0), round(length(normalize(1.0))), 0.0, _GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-50.09), _GLF_FUZZED(-2471.0232)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x, mix(float(_GLF_FUZZED(vec3(_GLF_IDENTITY(19.86, (false ? _GLF_FUZZED(-2935.7990) : 19.86)), -4.4, 741.070).b)), float(injectionSwitch.x), bool(true)))), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(sin(0.0), max(sin(0.0), sin(0.0))), 0.0, 1.0, sin(0.0), cos(0.0)))), min(float(mat4(1.0 * (1.0), _GLF_IDENTITY(1.0, (1.0) / 1.0), round(length(normalize(1.0))), 0.0, _GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-50.09), _GLF_FUZZED(-2471.0232)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x, mix(float(_GLF_FUZZED(vec3(_GLF_IDENTITY(19.86, (false ? _GLF_FUZZED(-2935.7990) : 19.86)), -4.4, 741.070).b)), float(injectionSwitch.x), bool(true)))), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(sin(0.0), max(sin(0.0), sin(0.0))), 0.0, 1.0, sin(0.0), cos(0.0))), float(mat4(1.0 * (1.0), _GLF_IDENTITY(1.0, (1.0) / 1.0), round(length(normalize(1.0))), 0.0, _GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-50.09), _GLF_FUZZED(-2471.0232)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x, mix(float(_GLF_FUZZED(vec3(_GLF_IDENTITY(19.86, (false ? _GLF_FUZZED(-2935.7990) : 19.86)), -4.4, 741.070).b)), float(injectionSwitch.x), bool(true)))), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(sin(0.0), max(sin(0.0), sin(0.0))), 0.0, 1.0, sin(0.0), cos(0.0)))), min(float(mat4(1.0 * (1.0), _GLF_IDENTITY(1.0, (1.0) / 1.0), round(length(normalize(1.0))), 0.0, _GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-50.09), _GLF_FUZZED(-2471.0232)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x, mix(float(_GLF_FUZZED(vec3(_GLF_IDENTITY(19.86, (false ? _GLF_FUZZED(-2935.7990) : 19.86)), -4.4, 741.070).b)), float(injectionSwitch.x), bool(true)))), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(sin(0.0), max(sin(0.0), sin(0.0))), 0.0, 1.0, sin(0.0), cos(0.0))), float(mat4(1.0 * (1.0), _GLF_IDENTITY(1.0, (1.0) / 1.0), round(length(normalize(1.0))), 0.0, _GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-50.09), _GLF_FUZZED(-2471.0232)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x, mix(float(_GLF_FUZZED(vec3(_GLF_IDENTITY(19.86, (false ? _GLF_FUZZED(-2935.7990) : 19.86)), -4.4, 741.070).b)), float(injectionSwitch.x), bool(true)))), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(sin(0.0), max(sin(0.0), sin(0.0))), 0.0, 1.0, sin(0.0), cos(0.0)))))))))), (false ? _GLF_FUZZED(intBitsToFloat(-59272)) : _GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(7.5) : 1.0)) * (1.0), float(mat4(1.0 * (1.0), 1.0, round(_GLF_IDENTITY(length(normalize(1.0)), (length(normalize(1.0))) / cos(sqrt(0.0)))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, sin(0.0), 0.0, 1.0, sin(0.0), cos(0.0))))) / 1.0))))) / 1.0), max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, _GLF_IDENTITY((false ? _GLF_FUZZED(asin(-2341.4223)) : _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat2x4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))), mix(float(_GLF_FUZZED(1497.0621)), _GLF_IDENTITY(float(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-8.8)), bool(false)))), min(float(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-8.8)), bool(false)))), _GLF_IDENTITY(float(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-8.8)), bool(false)))), clamp(float(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-8.8)), bool(false)))), float(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-8.8)), bool(false)))), float(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-8.8)), bool(false)))))))), bool(true)))), float(_GLF_FUZZED(34.28)), bool(false)))), 1.0 * (_GLF_IDENTITY((false ? _GLF_FUZZED(asin(-2341.4223)) : _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(1497.0621)), float(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_IDENTITY(_GLF_FUZZED(-8.8), mix(float(_GLF_FUZZED(-8.8)), float(_GLF_FUZZED(968.704)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(_GLF_IDENTITY(false, false || (false)))))), _GLF_IDENTITY(bool(true), true && (bool(true)))))), float(_GLF_FUZZED(34.28)), bool(false)))), _GLF_IDENTITY(float(float((false ? _GLF_FUZZED(asin(-2341.4223)) : _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(1497.0621)), float(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-8.8)), bool(false)))), bool(true))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(1497.0621)), float(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-8.8)), bool(false)))), bool(true))), min(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(1497.0621)), float(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-8.8)), bool(false)))), bool(true))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(1497.0621)), float(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-8.8)), bool(false)))), bool(true))))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(1497.0621)), float(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-8.8)), bool(false)))), bool(true))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(1497.0621)), float(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-8.8)), bool(false)))), bool(true)))))), float(_GLF_FUZZED(34.28)), bool(false)))))), mix(float(_GLF_FUZZED(1125.1174)), float(float(float((false ? _GLF_FUZZED(asin(-2341.4223)) : _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(1497.0621)), float(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-8.8)), bool(false)))), bool(true)))), float(_GLF_FUZZED(34.28)), bool(false))))))), bool(true))))))))), (_GLF_IDENTITY(1.0, 1.0 * _GLF_IDENTITY(_GLF_IDENTITY((1.0), max(_GLF_IDENTITY((1.0), max(_GLF_IDENTITY((1.0), mix(float((1.0)), float(_GLF_FUZZED(-0.8)), bool(false))), (1.0))), (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(49.97)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), float(mat2(_GLF_IDENTITY((1.0), max((1.0), (1.0))), 0.0, 1.0, 1.0))))) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(1.0, 1.0 * (1.0)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, 1.0 * (1.0))) - 0.0), (true ? _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, 1.0 * (1.0))) - 0.0) : _GLF_FUZZED(-1.5))), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(true ? 1.0 : _GLF_FUZZED(340.538), max(true ? 1.0 : _GLF_FUZZED(340.538), _GLF_IDENTITY(true ? 1.0 : _GLF_FUZZED(340.538), min(true ? 1.0 : _GLF_FUZZED(340.538), true ? 1.0 : _GLF_FUZZED(340.538))))))) * (1.0)), float(float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 1.0 * (1.0)), max(_GLF_IDENTITY(1.0, 1.0 * (1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, 1.0 * (1.0)), mix(float(_GLF_IDENTITY(1.0, 1.0 * (1.0))), float(_GLF_IDENTITY(_GLF_FUZZED(-8.2), _GLF_IDENTITY(clamp(_GLF_FUZZED(-8.2), _GLF_FUZZED(-8.2), _GLF_FUZZED(-8.2)), (clamp(_GLF_FUZZED(-8.2), _GLF_FUZZED(-8.2), _GLF_FUZZED(-8.2))) - 0.0))), bool(false))))))))) / 1.0)))), mat4(1.0))), vec2(1.0), _GLF_struct_7(_GLF_struct_4(ivec4(_GLF_IDENTITY(1, min(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), _GLF_IDENTITY(min(1, 1), (true ? _GLF_IDENTITY(min(1, 1), max(_GLF_IDENTITY(min(1, 1), (min(1, 1)) ^ 0), min(_GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(int(1), (int(1)) - (0 >> _GLF_IDENTITY(int(3), int(3))))), min(int(_GLF_IDENTITY(int(1), (int(1)) - (0 >> _GLF_IDENTITY(int(3), int(3))))), int(_GLF_IDENTITY(int(1), (int(1)) - (0 >> _GLF_IDENTITY(int(3), int(3)))))))), 1))) : _GLF_FUZZED(90654)))), _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) / 1), _GLF_IDENTITY(1, (1) / 1)))))), vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0))), vec3(1.0)), _GLF_struct_5(mat3x2(1.0), mat3x2(1.0), mat3x2(1.0)), _GLF_struct_6(_GLF_IDENTITY(1.0, (1.0) / sqrt(exp(0.0))), uvec4(1u), mat4x3(1.0), vec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), float(mat4x3(1.0, 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(ldexp(349.168, -92800)))), 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(2171.3438) : 1.0)))), log(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, cos(0.0), 0.0))), (true ? 1.0 : _GLF_FUZZED(_GLF_IDENTITY(4.4, clamp(4.4, 4.4, _GLF_IDENTITY(4.4, mix(float(4.4), float(_GLF_FUZZED(-226.004)), bool(false))))))))), _GLF_IDENTITY(true, (true) || false)), mat2x3(1.0)), mat3x4(1.0), bvec3(true), _GLF_IDENTITY(_GLF_struct_replacement_18._f1.GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x + subgroup_base + subgroup_local_id, max(_GLF_struct_replacement_18._f1.GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x + subgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id)), clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_18._f1.GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x, 0u ^ (_GLF_IDENTITY(_GLF_struct_replacement_18._f1.GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x, (_GLF_struct_replacement_18._f1.GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x) / 1u))) + subgroup_base + subgroup_local_id, (_GLF_IDENTITY(_GLF_struct_replacement_18._f1.GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size, (_GLF_struct_replacement_18._f1.GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size) + uvec2(0u, 0u)).x + subgroup_base + subgroup_local_id) - 0u))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) && true)))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_struct_replacement_18._f1.GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size, (_GLF_IDENTITY(_GLF_struct_replacement_18._f1.GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size, min(_GLF_struct_replacement_18._f1.GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size, _GLF_struct_replacement_18._f1.GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size))) >> (uvec2(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, ~ (~ (0u))))), 0u) >> _GLF_IDENTITY(uvec2(0u), uvec2(0u)))).x + subgroup_base + _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, (true ? _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0), min(subgroup_local_id + 1, subgroup_local_id + 1)) : _GLF_FUZZED((-- _GLF_struct_replacement_18._f1.GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size[1]))))) % _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))), (((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1), 0 ^ (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1), ~ (~ (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1), (true ? int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1) : _GLF_FUZZED(26378))))))))), (_GLF_IDENTITY(true ? _GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id + 1, ~ (_GLF_IDENTITY(~ (subgroup_local_id + 1), min(~ (subgroup_local_id + 1), ~ (subgroup_local_id + 1))))), subgroup_local_id + 1)) : _GLF_FUZZED(_GLF_IDENTITY((-- _GLF_struct_replacement_18._f1.GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size[1]), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ ((-- _GLF_struct_replacement_18._f1.GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size[1])), (~ ((-- _GLF_struct_replacement_18._f1.GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size[1]))) / 1u), 1u * (~ ((-- _GLF_struct_replacement_18._f1.GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size[1]))))))), 0u | (_GLF_IDENTITY(true ? _GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (subgroup_local_id))))) + 1, subgroup_local_id + 1)) : _GLF_FUZZED((-- _GLF_struct_replacement_18._f1.GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size[1])), (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_base, (subgroup_base) - 0u)) : true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(uint(55137)) : _GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1)))))), min(subgroup_local_id + 1, subgroup_local_id + 1)) : _GLF_FUZZED((-- _GLF_struct_replacement_18._f1.GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size[1]))))))))) % subgroup_size)) / 1u);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0))), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))), (false ? _GLF_FUZZED(vec2(-8146.9063, 7329.6463)) : injectionSwitch)), injectionSwitch)).y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0)))), 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((395.934 * 5.9))), bool(false))), 0.0, 0.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-8146.9063, 7329.6463)) : injectionSwitch)), injectionSwitch)).y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0))), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(distance(injectionSwitch, vec2(-48.88, 765.610))) : 0.0)), 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-8146.9063, 7329.6463)) : injectionSwitch)), injectionSwitch)).y))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)) + (0.0)), abs(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, exp(0.0))), mix(float(_GLF_FUZZED(931.473)), float(float(mat3x4(_GLF_IDENTITY(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)) + (0.0)), abs(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, exp(0.0)))), bool(true)))), 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0))), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-8146.9063, 7329.6463)) : injectionSwitch)), injectionSwitch)), vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0))), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-8146.9063, 7329.6463)) : injectionSwitch)), injectionSwitch)))).y)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))))).y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_IDENTITY(false, ! (! (false))))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(783.602)), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(sin(0.0), clamp(sin(0.0), _GLF_IDENTITY(sin(0.0), (sin(0.0)) - 0.0), sin(0.0))))), bool(true))) > injectionSwitch.y))))
  barrier();
 atomicStore(buf[_GLF_struct_replacement_8.virtual_gid], uint(1), _GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, (4) - 0)), _GLF_IDENTITY((~ (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, 4))) >> (0 & -91199))) - 0))) * 1, ((~ (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, 4))) >> (0 & -91199))) - 0))) * 1) * 1)))), 64, 4);
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), clamp(max(injectionSwitch.y, injectionSwitch.y), max(injectionSwitch.y, injectionSwitch.y), max(injectionSwitch.y, injectionSwitch.y)))), clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((- -381.648))), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(-97.82))), injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id % 2), 0u ^ (_GLF_IDENTITY((subgroup_local_id % 2), ((subgroup_local_id % 2)) | ((subgroup_local_id % 2))))) == 0, false || ((subgroup_local_id % 2) == _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) + 0)) - 0))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) || false)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        return;
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + _GLF_ZERO(0.0, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-59.88 / -8.0))), _GLF_IDENTITY(bool(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(false)))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) || false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(2, int(ivec2(_GLF_IDENTITY(2, max(2, 2)), 1)))), _GLF_IDENTITY(4, (4) | (4)), 64, 4);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), true && (bool(bvec2(_GLF_DEAD(false), false))))), (_GLF_DEAD(false)) || _GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (false) || false), (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, true, false, false)))) || false)), bvec2(bvec4(bvec2(false, true), false, false))))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), (injectionSwitch.x > injectionSwitch.y))) && true), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))), false, false)))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, length(vec3(0.0, 0.0, 0.0)), determinant(mat3(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0, 1.0, sqrt(0.0), 1.0, 0.0, determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), 0.0, 0.0, 0.0, 0.0), transpose(transpose(mat3(injectionSwitch, 1.0, length(vec3(0.0, 0.0, 0.0)), determinant(mat3(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0, 1.0, sqrt(0.0), 1.0, 0.0, determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), 0.0, 0.0, 0.0, 0.0)))))), (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))), injectionSwitch)).y, (false ? _GLF_FUZZED(-9.4) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), max(_GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), vec2(vec2((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))))))), injectionSwitch)).y, mix(float(_GLF_FUZZED(-980.280)), float(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), max(_GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), vec2(vec2((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))))))), injectionSwitch)).y), bool(true)))))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(8.7), _GLF_FUZZED(117.612)), bvec2(false, false))).x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(39.63), _GLF_FUZZED(((6862.5539 + -25.34) / float(-72796)))), vec2((injectionSwitch)[_GLF_IDENTITY(0, ~ (~ (0)))], (injectionSwitch)[1]), bvec2(true, true))), vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(mat3x2((injectionSwitch) * mat2(1.0), 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0))))[_GLF_IDENTITY(0, 0 ^ (0))], clamp(injectionSwitch[0], injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))[0])), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))[1], injectionSwitch[1], injectionSwitch[1])), (true ? injectionSwitch[1] : _GLF_FUZZED(-1708.6553))))).y))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (! (bool(bool(injectionSwitch.x > injectionSwitch.y))))))))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! _GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false))), false, false, _GLF_IDENTITY(false, (false) && true))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-53.70)), vec2(_GLF_FUZZED(11.99), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1.5), _GLF_FUZZED(-386.624)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y))))
      barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(2), 4, _GLF_IDENTITY(64, (64) | (64)), _GLF_IDENTITY(4, 1 * (4)));
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
