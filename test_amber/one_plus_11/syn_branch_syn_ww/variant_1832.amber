#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_5 {
 bvec2 _f0;
 bvec3 _f1;
} ;

struct _GLF_struct_4 {
 mat3 _f0;
 mat4x2 _f1;
 mat2 _f2;
 ivec3 _f3;
} ;

struct _GLF_struct_3 {
 mat3x2 _f0;
 uvec2 _f1;
 mat3x4 _f2;
 ivec2 _f3;
 mat4x2 _f4;
} ;

struct _GLF_struct_2 {
 ivec3 _f0;
} ;

struct _GLF_struct_1 {
 uvec4 _f0;
 mat3 _f1;
} ;

struct _GLF_struct_0 {
 uvec2 _f0;
 ivec2 _f1;
 ivec2 _f2;
 uint _f3;
 ivec2 _f4;
 vec2 _f5;
} ;

struct _GLF_struct_6 {
 float _f0;
 _GLF_struct_0 _f1;
 _GLF_struct_1 _f2;
 uint workgroup_base;
 _GLF_struct_2 _f3;
 _GLF_struct_3 _f4;
 _GLF_struct_4 _f5;
 _GLF_struct_5 _f6;
} ;

struct _GLF_struct_7 {
 _GLF_struct_6 _f0;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x2(injectionSwitch.y, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, sqrt(1.0), 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, sqrt(1.0), 0.0))), 0.0, 1.0, sqrt(1.0)), mat3x2(mat4(mat3x2(injectionSwitch.y, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, sqrt(1.0), 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, sqrt(1.0), 0.0))), 0.0, 1.0, sqrt(1.0)))))))))))
    {
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   else
    {
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / cos(_GLF_IDENTITY(0.0, min(0.0, 0.0)))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
        continue;
       continue;
      }
     return;
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 _GLF_struct_7 _GLF_struct_replacement_7 = _GLF_struct_7(_GLF_struct_6(1.0, _GLF_struct_0(uvec2(1u), ivec2(1), ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 + (1))) | int(_GLF_ZERO(0.0, injectionSwitch.x)))), 1u, ivec2(1), vec2(1.0)), _GLF_struct_1(uvec4(1u), mat3(1.0)), _GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, 0u | (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, _GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(min(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) + 0u)), (0u << _GLF_IDENTITY(uint(0u), uint(0u))) ^ (min(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) + 0u))))), workgroup_size)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) | (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)))), clamp(_GLF_IDENTITY(workgroup_size, 0u | (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)))), _GLF_IDENTITY(workgroup_size, 0u | (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, _GLF_IDENTITY(workgroup_size, 0u ^ (_GLF_IDENTITY(workgroup_size, (workgroup_size) + 0u))))))), _GLF_IDENTITY(workgroup_size, 0u | (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)))))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)), 0u | (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, _GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size))))))), _GLF_IDENTITY(workgroup_size, 0u | (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)))))))), clamp(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, 0u | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)), (_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(clamp(workgroup_size, workgroup_size, workgroup_size), (clamp(workgroup_size, workgroup_size, workgroup_size)) | (clamp(workgroup_size, workgroup_size, workgroup_size))))) / 1u)), ((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)), (_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(clamp(workgroup_size, workgroup_size, workgroup_size), (clamp(workgroup_size, workgroup_size, workgroup_size)) | (clamp(workgroup_size, workgroup_size, workgroup_size))))) / 1u))) | ((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)), (_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(clamp(workgroup_size, workgroup_size, workgroup_size), (clamp(workgroup_size, workgroup_size, workgroup_size)) | (clamp(workgroup_size, workgroup_size, workgroup_size))))) / 1u))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, 0u | (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)))), clamp(_GLF_IDENTITY(workgroup_size, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)), clamp(_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)), _GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)), _GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)))))), _GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(0u, 0u + (0u)) | (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)))), _GLF_IDENTITY(workgroup_size, 0u | (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)))))), _GLF_IDENTITY(workgroup_size, 0u | (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)))), _GLF_IDENTITY(workgroup_size, 0u | (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(0u | (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size))), max(0u | (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size))), 0u | (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, 0u | (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)))), clamp(_GLF_IDENTITY(workgroup_size, 0u | (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)))), _GLF_IDENTITY(workgroup_size, 0u | (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, _GLF_IDENTITY(workgroup_size, 0u ^ (workgroup_size)), workgroup_size)))), _GLF_IDENTITY(workgroup_size, 0u | (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)))))), _GLF_IDENTITY(workgroup_size, 0u | (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)))), _GLF_IDENTITY(workgroup_size, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size))), (~ (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)))) - 0u)))))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(0u | (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size))), max(0u | (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size))), 0u | (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, 0u | (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)))), clamp(_GLF_IDENTITY(workgroup_size, 0u | (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)))), _GLF_IDENTITY(workgroup_size, 0u | (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, _GLF_IDENTITY(workgroup_size, 0u ^ (workgroup_size)), workgroup_size)))), _GLF_IDENTITY(workgroup_size, 0u | (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)))))), _GLF_IDENTITY(workgroup_size, 0u | (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)))), _GLF_IDENTITY(workgroup_size, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size))), (~ (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)))) - 0u))))))))) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(0u | (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size))), max(0u | (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size))), 0u | (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, 0u | (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)))), clamp(_GLF_IDENTITY(workgroup_size, 0u | (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)))), _GLF_IDENTITY(workgroup_size, 0u | (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, _GLF_IDENTITY(workgroup_size, 0u ^ (workgroup_size)), workgroup_size)))), _GLF_IDENTITY(workgroup_size, 0u | (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)))))), _GLF_IDENTITY(workgroup_size, 0u | (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)))), _GLF_IDENTITY(workgroup_size, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size))), (~ (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)))) - 0u)))))))), min(~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(0u | (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size))), max(0u | (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size))), 0u | (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, 0u | (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)))), clamp(_GLF_IDENTITY(workgroup_size, 0u | (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)))), _GLF_IDENTITY(workgroup_size, 0u | (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, _GLF_IDENTITY(workgroup_size, 0u ^ (workgroup_size)), workgroup_size)))), _GLF_IDENTITY(workgroup_size, 0u | (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)))))), _GLF_IDENTITY(workgroup_size, 0u | (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)))), _GLF_IDENTITY(workgroup_size, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size))), (~ (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)))) - 0u)))))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(0u | (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size))), max(0u | (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size))), 0u | (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, 0u | (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)))), clamp(_GLF_IDENTITY(workgroup_size, 0u | (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)))), _GLF_IDENTITY(workgroup_size, 0u | (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, _GLF_IDENTITY(workgroup_size, 0u ^ (workgroup_size)), workgroup_size)))), _GLF_IDENTITY(workgroup_size, 0u | (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)))))), _GLF_IDENTITY(workgroup_size, 0u | (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)))), _GLF_IDENTITY(workgroup_size, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size))), (~ (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)))) - 0u))))))))))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(0u | (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size))), (0u | (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)))) * 1u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, 0u | (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, _GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(workgroup_id) : workgroup_size)), workgroup_size)))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(workgroup_size, 0u | (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)))), _GLF_IDENTITY(workgroup_size, 0u | (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)))), _GLF_IDENTITY(workgroup_size, 0u | (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size))))), uint(uint(_GLF_IDENTITY(clamp(_GLF_IDENTITY(workgroup_size, 0u | (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)))), _GLF_IDENTITY(workgroup_size, 0u | (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)))), _GLF_IDENTITY(workgroup_size, 0u | (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size))))), (clamp(_GLF_IDENTITY(workgroup_size, 0u | (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)))), _GLF_IDENTITY(workgroup_size, 0u | (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)))), _GLF_IDENTITY(workgroup_size, 0u | (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)))))) << 0u))))), _GLF_IDENTITY(workgroup_size, 0u | (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)))), _GLF_IDENTITY(workgroup_size, 0u | (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size))))))))))) * workgroup_id, _GLF_struct_2(ivec3(_GLF_IDENTITY(1, ~ (~ (1))))), _GLF_struct_3(mat3x2(1.0), uvec2(1u), mat3x4(1.0), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-82744)))), ivec2(0, 0) ^ (ivec2(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-82744)))))), mat4x2(1.0)), _GLF_struct_4(mat3(1.0), mat4x2(1.0), mat2(1.0), ivec3(1)), _GLF_struct_5(bvec2(true), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(true), bvec3(_GLF_IDENTITY(bvec3(bvec3(true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(true)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(true)), false)), false)))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(true), bvec3(_GLF_IDENTITY(bvec3(bvec3(true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(true)), _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(true)), false)), false)))))), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), max(injectionSwitch, injectionSwitch)).x, mix(float(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x), float(_GLF_FUZZED(9580.8735)), bool(false))) < _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(370.197)), float(injectionSwitch.y), bool(true))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(3.5)), float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), bool(true)), max(mix(float(_GLF_FUZZED(3.5)), float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), bool(true)), mix(float(_GLF_FUZZED(3.5)), float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), bool(true)))))))))))))));
 uint subgroup_base = subgroup_id * subgroup_size;
 uint virtual_gid = _GLF_struct_replacement_7._f0.workgroup_base + subgroup_base + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id));
 for(int _injected_loop_counter = (((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), _GLF_IDENTITY(clamp(int(4), int(4), int(4)), clamp(clamp(int(4), int(4), int(4)), _GLF_IDENTITY(clamp(int(4), int(4), int(_GLF_IDENTITY(4, (4) << 0))), _GLF_IDENTITY(max(_GLF_IDENTITY(clamp(int(4), int(4), int(4)), min(clamp(int(4), int(4), int(4)), _GLF_IDENTITY(clamp(int(4), int(4), int(4)), 0 | (_GLF_IDENTITY(clamp(int(4), int(4), int(4)), min(clamp(int(4), int(4), int(4)), clamp(int(4), int(4), int(4)))))))), _GLF_IDENTITY(clamp(int(4), int(4), int(4)), max(clamp(int(4), int(4), int(4)), clamp(int(4), int(4), int(4))))), _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(max(_GLF_IDENTITY(clamp(int(4), int(4), int(4)), min(clamp(int(4), int(4), int(4)), _GLF_IDENTITY(clamp(int(4), int(4), int(_GLF_IDENTITY(4, (4) | 0))), 0 | (clamp(int(4), int(4), _GLF_IDENTITY(int(4), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(4), max(int(4), int(4)))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(4), max(int(4), int(4)))), (~ (_GLF_IDENTITY(int(4), max(int(4), int(4))))) - 0)) / 1)))))))), clamp(int(4), int(4), int(4))), ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), int(_GLF_ONE(1.0, injectionSwitch.y)), 1), (ivec4(max(_GLF_IDENTITY(clamp(int(4), int(4), int(4)), min(clamp(int(4), int(4), int(4)), _GLF_IDENTITY(clamp(int(4), int(4), int(4)), 0 | (clamp(int(4), int(4), int(4)))))), clamp(int(4), _GLF_IDENTITY(int(4), (int(4)) >> int(_GLF_ZERO(0.0, injectionSwitch.x))), int(4))), ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, max(6, _GLF_IDENTITY(6, (6) - 0)))))), int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) + vec2(0.0, 0.0)).y)), 1)) / ivec4(1, 1, 1, 1)), (_GLF_IDENTITY(_GLF_IDENTITY(ivec4(max(_GLF_IDENTITY(clamp(int(4), int(4), int(4)), min(clamp(int(4), int(4), int(4)), _GLF_IDENTITY(clamp(int(4), int(4), int(_GLF_IDENTITY(4, (4) | 0))), 0 | (clamp(int(4), int(4), _GLF_IDENTITY(int(4), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(4), max(int(4), int(4)))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(4), max(int(4), int(4)))), (~ (_GLF_IDENTITY(int(4), max(int(4), int(4))))) - 0)) / 1)))))))), clamp(int(4), int(4), int(4))), ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), int(_GLF_ONE(1.0, injectionSwitch.y)), 1), (ivec4(max(_GLF_IDENTITY(clamp(int(4), int(4), int(4)), min(clamp(int(4), int(4), int(4)), _GLF_IDENTITY(clamp(int(4), int(4), int(4)), 0 | (clamp(int(4), int(4), int(4)))))), clamp(int(4), _GLF_IDENTITY(int(4), (int(4)) >> int(_GLF_ZERO(0.0, injectionSwitch.x))), int(4))), ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, max(6, _GLF_IDENTITY(6, (6) - 0)))))), int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) + vec2(0.0, 0.0)).y)), 1)) / ivec4(1, 1, 1, 1)), (_GLF_IDENTITY(ivec4(max(_GLF_IDENTITY(clamp(int(4), int(4), int(4)), min(clamp(int(4), int(4), int(4)), _GLF_IDENTITY(clamp(int(4), int(4), int(_GLF_IDENTITY(4, (4) | 0))), 0 | (clamp(int(4), int(4), _GLF_IDENTITY(int(4), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(4), max(int(4), int(4)))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(4), max(int(4), int(4)))), (~ (_GLF_IDENTITY(int(4), max(int(4), int(4))))) - 0)) / 1)))))))), clamp(int(4), int(4), int(4))), ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), int(_GLF_ONE(1.0, injectionSwitch.y)), 1), (ivec4(max(_GLF_IDENTITY(clamp(int(4), int(4), int(4)), min(clamp(int(4), int(4), int(4)), _GLF_IDENTITY(clamp(int(4), int(4), int(4)), 0 | (clamp(int(4), int(4), int(4)))))), clamp(int(4), _GLF_IDENTITY(int(4), (int(4)) >> int(_GLF_ZERO(0.0, injectionSwitch.x))), int(4))), ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, max(6, _GLF_IDENTITY(6, (6) - 0)))))), int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) + vec2(0.0, 0.0)).y)), 1)) / ivec4(1, 1, 1, 1))) >> ivec4(0, 0, 0, 0))) - ivec4(0, 0, 0, 0))), (int(_GLF_IDENTITY(ivec4(max(_GLF_IDENTITY(clamp(int(4), int(4), int(4)), min(clamp(int(4), int(4), _GLF_IDENTITY(int(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, min(4, 4))))), (_GLF_IDENTITY(int(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, min(4, 4))))), 0 | (int(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, min(4, 4)))))))) >> 0)), _GLF_IDENTITY(clamp(int(4), int(4), int(4)), 0 | (clamp(int(4), int(4), int(4)))))), clamp(int(4), int(4), int(4))), _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), ~ (~ (((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6)))))), int(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, 1.0)), injectionSwitch.y)), 1), (ivec4(max(_GLF_IDENTITY(clamp(int(4), int(4), _GLF_IDENTITY(int(4), (int(4)) | (_GLF_IDENTITY(int(4), (int(4)) ^ 0)))), min(clamp(int(4), int(4), int(4)), _GLF_IDENTITY(clamp(int(4), int(4), int(4)), 0 | (clamp(int(4), int(4), int(4)))))), clamp(int(4), int(4), int(4))), ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), max(int(6), int(6))), int(6))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(6, 1 * (6))), int(6))), int(_GLF_ONE(1.0, injectionSwitch.y)), 1)) / _GLF_IDENTITY(ivec4(1, 1, 1, 1), (ivec4(1, 1, 1, 1)) | ivec4(0, _GLF_IDENTITY(0, max(0, 0)), 0, _GLF_IDENTITY(0, 0 ^ (0))))))) | 0))), _GLF_IDENTITY(clamp(int(4), _GLF_IDENTITY(int(4), clamp(_GLF_IDENTITY(int(4), (int(4)) | (int(4))), _GLF_IDENTITY(int(4), (true ? int(4) : _GLF_FUZZED(_GLF_IDENTITY(89838, min(89838, _GLF_IDENTITY(89838, int(ivec2(89838, 1)))))))), int(4))), int(4)), (clamp(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1))))), clamp(int(4), int(4), int(4))), (1 ^ 1) ^ (_GLF_IDENTITY(int(_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1))))), clamp(int(4), int(4), int(4))))), int(4), int(_GLF_IDENTITY(4, (4) - 0)))) ^ 0)))))) >> _GLF_IDENTITY(int(4), int(4))) | 1); _GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-60521) : 0))), _GLF_IDENTITY(int(0), (int(_GLF_IDENTITY(0, (0) / 1))) / 1)))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(_GLF_IDENTITY(0, (0) / 1))) / _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), ~ (~ (~ (1))))))))))))), ! _GLF_IDENTITY((! (_GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(_GLF_IDENTITY(0, (0) / 1))) / 1)))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((! (_GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(_GLF_IDENTITY(0, (0) * 1)), (int(_GLF_IDENTITY(0, (0) / 1))) / 1)))))), ! (! ((! (_GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(_GLF_IDENTITY(0, (0) ^ 0)), (int(_GLF_IDENTITY(0, (0) / 1))) / 1))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec2(_GLF_IDENTITY((! (_GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(_GLF_IDENTITY(0, (0) / 1))) / 1)))))), ! (! ((! (_GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-99188))), _GLF_IDENTITY(0, clamp(0, 0, 0)), 0))), _GLF_IDENTITY(int(_GLF_IDENTITY(0, (0) << (0 >> _GLF_IDENTITY(int(6), int(6))))), _GLF_IDENTITY((int(_GLF_IDENTITY(0, (0) / 1))), clamp((int(_GLF_IDENTITY(0, (0) / 1))), (int(_GLF_IDENTITY(0, (0) / _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-9293) : 1)), _GLF_IDENTITY(1, (1) - 0)))))), _GLF_IDENTITY((int(_GLF_IDENTITY(0, (0) / 1))), ((int(_GLF_IDENTITY(0, (0) / 1)))) - 0))) / 1))))))))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))) && true))); _injected_loop_counter --)
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       for(int _injected_loop_counter = int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * abs(vec2(1.0, 1.0))).y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, true)))), _GLF_IDENTITY(bool(bool(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, true)))))), (bool(bool(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, true))))))) && true)))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              return;
             return;
            }
           if(_GLF_DEAD(false))
            continue;
          }
         else
          {
          }
        }
      }
     else
      {
      }
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_struct_replacement_7._f0.workgroup_base + subgroup_base, max(_GLF_struct_replacement_7._f0.workgroup_base + subgroup_base, _GLF_struct_replacement_7._f0.workgroup_base + subgroup_base)) + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(min(1, 1), max(min(1, 1), min(1, 1))))))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, min(1, 1)), 1)), _GLF_IDENTITY(min(1, 1), max(min(1, 1), min(1, 1))))))), (0u | 1u) * _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + _GLF_IDENTITY(1, _GLF_IDENTITY(min(1, 1), max(min(1, 1), min(1, 1)))))))), (false ? _GLF_FUZZED(97460u) : ((_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + _GLF_IDENTITY(1, _GLF_IDENTITY(min(1, 1), max(min(1, 1), min(1, 1)))))))))))) << 0u) % _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u));
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  {
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    return;
  }
 for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(((1 & 1) | _GLF_IDENTITY(0, (0) / 1)), clamp(_GLF_IDENTITY(((1 & 1) | _GLF_IDENTITY(0, (0) / 1)), (((1 & 1) | _GLF_IDENTITY(0, (0) / 1))) | (((1 & 1) | _GLF_IDENTITY(0, (0) / 1)))), _GLF_IDENTITY(((1 & 1) | _GLF_IDENTITY(0, (0) / 1)), ~ (_GLF_IDENTITY(~ (((1 & 1) | _GLF_IDENTITY(0, (0) / 1))), (~ (((1 & 1) | _GLF_IDENTITY(0, (0) / 1)))) | (~ (((1 & 1) | _GLF_IDENTITY(0, (0) / 1))))))), _GLF_IDENTITY(((1 & 1) | _GLF_IDENTITY(0, (0) / _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) - 0), 1)))), ~ (~ (((1 & 1) | _GLF_IDENTITY(0, (0) / 1)))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(((1 & 1) | _GLF_IDENTITY(0, (0) / 1)), clamp(_GLF_IDENTITY(((1 & 1) | _GLF_IDENTITY(0, (0) / 1)), (((1 & 1) | _GLF_IDENTITY(0, (0) / 1))) | (((1 & 1) | _GLF_IDENTITY(0, (0) / 1)))), _GLF_IDENTITY(((1 & 1) | _GLF_IDENTITY(0, (0) / 1)), ~ (_GLF_IDENTITY(~ (((1 & 1) | _GLF_IDENTITY(0, (0) / 1))), (~ (((1 & 1) | _GLF_IDENTITY(0, (0) / 1)))) | (~ (((1 & 1) | _GLF_IDENTITY(0, (0) / 1))))))), _GLF_IDENTITY(((1 & 1) | _GLF_IDENTITY(0, (0) / 1)), ~ (~ (((1 & 1) | _GLF_IDENTITY(0, (0) / 1)))))))), bool(bvec4(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(((1 & 1) | _GLF_IDENTITY(0, (0) / 1)), clamp(_GLF_IDENTITY(((1 & 1) | _GLF_IDENTITY(0, (0) / 1)), (((1 & 1) | _GLF_IDENTITY(0, (0) / 1))) | (((1 & 1) | _GLF_IDENTITY(0, (0) / 1)))), _GLF_IDENTITY(((1 & 1) | _GLF_IDENTITY(0, (0) / 1)), ~ (_GLF_IDENTITY(~ (((1 & 1) | _GLF_IDENTITY(0, (0) / 1))), (~ (((1 & 1) | _GLF_IDENTITY(0, (0) / 1)))) | (~ (((1 & 1) | _GLF_IDENTITY(0, (0) / 1))))))), _GLF_IDENTITY(((1 & 1) | _GLF_IDENTITY(0, (0) / 1)), ~ (~ (((1 & 1) | _GLF_IDENTITY(0, (0) / 1)))))))), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(((1 & 1) | _GLF_IDENTITY(0, (0) / 1)), clamp(_GLF_IDENTITY(((1 & 1) | _GLF_IDENTITY(0, (0) / 1)), (((1 & 1) | _GLF_IDENTITY(0, (0) / 1))) | (((1 & 1) | _GLF_IDENTITY(0, (0) / 1)))), _GLF_IDENTITY(((1 & 1) | _GLF_IDENTITY(0, (0) / 1)), ~ (_GLF_IDENTITY(~ (((1 & 1) | _GLF_IDENTITY(0, (0) / 1))), (~ (((1 & 1) | _GLF_IDENTITY(0, (0) / 1)))) | (~ (((1 & 1) | _GLF_IDENTITY(0, (0) / 1))))))), _GLF_IDENTITY(((1 & 1) | _GLF_IDENTITY(0, (0) / 1)), ~ (~ (((1 & 1) | _GLF_IDENTITY(0, (0) / 1)))))))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(((1 & 1) | _GLF_IDENTITY(0, (0) / 1)), clamp(_GLF_IDENTITY(((1 & 1) | _GLF_IDENTITY(0, (0) / 1)), (((1 & 1) | _GLF_IDENTITY(0, (0) / 1))) | (((1 & 1) | _GLF_IDENTITY(0, (0) / 1)))), _GLF_IDENTITY(((1 & 1) | _GLF_IDENTITY(0, (0) / 1)), ~ (_GLF_IDENTITY(~ (((1 & 1) | _GLF_IDENTITY(0, (0) / 1))), (~ (((1 & 1) | _GLF_IDENTITY(0, (0) / 1)))) | (~ (((1 & 1) | _GLF_IDENTITY(0, (0) / 1))))))), _GLF_IDENTITY(((1 & 1) | _GLF_IDENTITY(0, (0) / 1)), ~ (~ (((1 & 1) | _GLF_IDENTITY(0, (0) / 1)))))))))))) || false), true, false, false))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(((1 & 1) | _GLF_IDENTITY(0, (0) / 1)), clamp(_GLF_IDENTITY(((1 & 1) | _GLF_IDENTITY(0, (0) / 1)), (((1 & 1) | _GLF_IDENTITY(0, (0) / 1))) | (((1 & 1) | _GLF_IDENTITY(0, (0) / 1)))), _GLF_IDENTITY(((1 & 1) | _GLF_IDENTITY(0, (0) / 1)), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((((1 & 1) | _GLF_IDENTITY(0, (0) / _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) - 0), 0), (ivec2(_GLF_IDENTITY(1, (1) - 0), 0)) | ivec2(0, 0))))))), min(_GLF_IDENTITY((((1 & 1) | _GLF_IDENTITY(0, (0) / _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) - 0), 0), (ivec2(_GLF_IDENTITY(1, (1) - 0), 0)) | ivec2(0, 0))))))), ((((1 & 1) | _GLF_IDENTITY(0, (0) / _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) - 0), 0), (ivec2(_GLF_IDENTITY(1, (1) - 0), 0)) | ivec2(0, 0)))))))) >> 0), (((1 & 1) | _GLF_IDENTITY(0, (0) / _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) - 0), 0), (ivec2(_GLF_IDENTITY(1, (1) - 0), 0)) | ivec2(0, 0))))))))), (~ (((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) << 0)) << 0) & 1) | _GLF_IDENTITY(0, (0) / 1)))) | (~ (((1 & 1) | _GLF_IDENTITY(0, (0) / 1))))))), _GLF_IDENTITY(((1 & 1) | _GLF_IDENTITY(0, (0) / 1)), ~ (~ (((1 & 1) | _GLF_IDENTITY(0, (0) / 1)))))))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(((1 & 1) | _GLF_IDENTITY(0, (0) / 1)), clamp(_GLF_IDENTITY(((1 & 1) | _GLF_IDENTITY(0, (0) / 1)), (((1 & 1) | _GLF_IDENTITY(0, (0) / 1))) | (((1 & 1) | _GLF_IDENTITY(0, (0) / 1)))), _GLF_IDENTITY(((1 & 1) | _GLF_IDENTITY(0, (0) / 1)), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((((1 & 1) | _GLF_IDENTITY(0, (0) / _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) - 0), 0), (ivec2(_GLF_IDENTITY(1, (1) - 0), 0)) | ivec2(0, 0))))))), min(_GLF_IDENTITY((((1 & 1) | _GLF_IDENTITY(0, (0) / _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) - 0), 0), (ivec2(_GLF_IDENTITY(1, (1) - 0), 0)) | ivec2(0, 0))))))), ((((1 & 1) | _GLF_IDENTITY(0, (0) / _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) - 0), 0), (ivec2(_GLF_IDENTITY(1, (1) - 0), 0)) | ivec2(0, 0)))))))) >> 0), (((1 & 1) | _GLF_IDENTITY(0, (0) / _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) - 0), 0), (ivec2(_GLF_IDENTITY(1, (1) - 0), 0)) | ivec2(0, 0))))))))), (~ (((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) << 0)) << 0) & 1) | _GLF_IDENTITY(0, (0) / 1)))) | (~ (((1 & 1) | _GLF_IDENTITY(0, (0) / 1))))))), _GLF_IDENTITY(((1 & 1) | _GLF_IDENTITY(0, (0) / 1)), ~ (~ (((1 & 1) | _GLF_IDENTITY(0, (0) / 1)))))))), bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(((1 & 1) | _GLF_IDENTITY(0, (0) / 1)), clamp(_GLF_IDENTITY(((1 & 1) | _GLF_IDENTITY(0, (0) / 1)), (((1 & 1) | _GLF_IDENTITY(0, (0) / 1))) | (((1 & 1) | _GLF_IDENTITY(0, (0) / 1)))), _GLF_IDENTITY(((1 & 1) | _GLF_IDENTITY(0, (0) / 1)), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((((1 & 1) | _GLF_IDENTITY(0, (0) / _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) - 0), 0), (ivec2(_GLF_IDENTITY(1, (1) - 0), 0)) | ivec2(0, 0))))))), min(_GLF_IDENTITY((((1 & 1) | _GLF_IDENTITY(0, (0) / _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) - 0), 0), (ivec2(_GLF_IDENTITY(1, (1) - 0), 0)) | ivec2(0, 0))))))), ((((1 & 1) | _GLF_IDENTITY(0, (0) / _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) - 0), 0), (ivec2(_GLF_IDENTITY(1, (1) - 0), 0)) | ivec2(0, 0)))))))) >> 0), (((1 & 1) | _GLF_IDENTITY(0, (0) / _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) - 0), 0), (ivec2(_GLF_IDENTITY(1, (1) - 0), 0)) | ivec2(0, 0))))))))), (~ (((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) << 0)) << 0) & 1) | _GLF_IDENTITY(0, (0) / 1)))) | (~ (((1 & 1) | _GLF_IDENTITY(0, (0) / 1))))))), _GLF_IDENTITY(((1 & 1) | _GLF_IDENTITY(0, (0) / 1)), ~ (~ (((1 & 1) | _GLF_IDENTITY(0, (0) / 1)))))))), false, true)))))))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(((1 & 1) | _GLF_IDENTITY(0, (0) / 1)), clamp(_GLF_IDENTITY(((1 & 1) | _GLF_IDENTITY(0, (0) / 1)), (((1 & 1) | _GLF_IDENTITY(0, (0) / 1))) | (((1 & 1) | _GLF_IDENTITY(0, (0) / 1)))), _GLF_IDENTITY(((1 & 1) | _GLF_IDENTITY(0, (0) / 1)), ~ (_GLF_IDENTITY(~ (((1 & 1) | _GLF_IDENTITY(0, (0) / 1))), (~ (((1 & 1) | _GLF_IDENTITY(0, (0) / 1)))) | (~ (((1 & 1) | _GLF_IDENTITY(0, (0) / 1))))))), _GLF_IDENTITY(((1 & 1) | _GLF_IDENTITY(0, (0) / 1)), ~ (~ (((1 & 1) | _GLF_IDENTITY(0, (0) / 1)))))))), bool(bvec4(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(((1 & 1) | _GLF_IDENTITY(0, (0) / 1)), clamp(_GLF_IDENTITY(((1 & 1) | _GLF_IDENTITY(0, (0) / 1)), (((1 & 1) | _GLF_IDENTITY(0, (0) / 1))) | (((1 & 1) | _GLF_IDENTITY(0, (0) / 1)))), _GLF_IDENTITY(((1 & 1) | _GLF_IDENTITY(0, (0) / 1)), ~ (_GLF_IDENTITY(~ (((1 & 1) | _GLF_IDENTITY(0, (0) / 1))), (~ (((1 & 1) | _GLF_IDENTITY(0, (0) / 1)))) | (~ (((1 & 1) | _GLF_IDENTITY(0, (0) / 1))))))), _GLF_IDENTITY(((1 & 1) | _GLF_IDENTITY(0, (0) / 1)), ~ (~ (((1 & 1) | _GLF_IDENTITY(0, (0) / 1)))))))), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(((1 & 1) | _GLF_IDENTITY(0, (0) / 1)), clamp(_GLF_IDENTITY(((1 & 1) | _GLF_IDENTITY(0, (0) / 1)), (((1 & 1) | _GLF_IDENTITY(0, (0) / 1))) | (((1 & 1) | _GLF_IDENTITY(0, (0) / 1)))), _GLF_IDENTITY(((1 & 1) | _GLF_IDENTITY(0, (0) / 1)), ~ (_GLF_IDENTITY(~ (((1 & 1) | _GLF_IDENTITY(0, (0) / 1))), (~ (((1 & 1) | _GLF_IDENTITY(0, (0) / 1)))) | (~ (((1 & 1) | _GLF_IDENTITY(0, (0) / 1))))))), _GLF_IDENTITY(((1 & 1) | _GLF_IDENTITY(0, (0) / 1)), ~ (~ (((1 & 1) | _GLF_IDENTITY(0, (0) / 1)))))))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(((1 & 1) | _GLF_IDENTITY(0, (0) / 1)), clamp(_GLF_IDENTITY(((1 & 1) | _GLF_IDENTITY(0, (0) / 1)), (((1 & 1) | _GLF_IDENTITY(0, (0) / 1))) | (((1 & 1) | _GLF_IDENTITY(0, (0) / 1)))), _GLF_IDENTITY(((1 & 1) | _GLF_IDENTITY(0, (0) / 1)), ~ (_GLF_IDENTITY(~ (((1 & 1) | _GLF_IDENTITY(0, (0) / 1))), (~ (((1 & 1) | _GLF_IDENTITY(0, (0) / 1)))) | (~ (((1 & 1) | _GLF_IDENTITY(0, (0) / 1))))))), _GLF_IDENTITY(((1 & 1) | _GLF_IDENTITY(0, (0) / 1)), ~ (~ (((1 & 1) | _GLF_IDENTITY(0, (0) / 1)))))))))))) || false), true, false, false))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(((1 & 1) | _GLF_IDENTITY(0, (0) / 1)), clamp(_GLF_IDENTITY(((1 & 1) | _GLF_IDENTITY(0, (0) / 1)), (((1 & 1) | _GLF_IDENTITY(0, (0) / 1))) | (((1 & 1) | _GLF_IDENTITY(0, (0) / 1)))), _GLF_IDENTITY(((1 & 1) | _GLF_IDENTITY(0, (0) / 1)), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((((1 & 1) | _GLF_IDENTITY(0, (0) / _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) - 0), 0), (ivec2(_GLF_IDENTITY(1, (1) - 0), 0)) | ivec2(0, 0))))))), min(_GLF_IDENTITY((((1 & 1) | _GLF_IDENTITY(0, (0) / _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) - 0), 0), (ivec2(_GLF_IDENTITY(1, (1) - 0), 0)) | ivec2(0, 0))))))), ((((1 & 1) | _GLF_IDENTITY(0, (0) / _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) - 0), 0), (ivec2(_GLF_IDENTITY(1, (1) - 0), 0)) | ivec2(0, 0)))))))) >> 0), (((1 & 1) | _GLF_IDENTITY(0, (0) / _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) - 0), 0), (ivec2(_GLF_IDENTITY(1, (1) - 0), 0)) | ivec2(0, 0))))))))), (~ (((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) << 0)) << 0) & 1) | _GLF_IDENTITY(0, (0) / 1)))) | (~ (((1 & 1) | _GLF_IDENTITY(0, (0) / 1))))))), _GLF_IDENTITY(((1 & 1) | _GLF_IDENTITY(0, (0) / 1)), ~ (~ (((1 & 1) | _GLF_IDENTITY(0, (0) / 1)))))))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(((1 & 1) | _GLF_IDENTITY(0, (0) / 1)), clamp(_GLF_IDENTITY(((1 & 1) | _GLF_IDENTITY(0, (0) / 1)), (((1 & 1) | _GLF_IDENTITY(0, (0) / 1))) | (((1 & 1) | _GLF_IDENTITY(0, (0) / 1)))), _GLF_IDENTITY(((1 & 1) | _GLF_IDENTITY(0, (0) / 1)), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((((1 & 1) | _GLF_IDENTITY(0, (0) / _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) - 0), 0), (ivec2(_GLF_IDENTITY(1, (1) - 0), 0)) | ivec2(0, 0))))))), min(_GLF_IDENTITY((((1 & 1) | _GLF_IDENTITY(0, (0) / _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) - 0), 0), (ivec2(_GLF_IDENTITY(1, (1) - 0), 0)) | ivec2(0, 0))))))), ((((1 & 1) | _GLF_IDENTITY(0, (0) / _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) - 0), 0), (ivec2(_GLF_IDENTITY(1, (1) - 0), 0)) | ivec2(0, 0)))))))) >> 0), (((1 & 1) | _GLF_IDENTITY(0, (0) / _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) - 0), 0), (ivec2(_GLF_IDENTITY(1, (1) - 0), 0)) | ivec2(0, 0))))))))), (~ (((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) << 0)) << 0) & 1) | _GLF_IDENTITY(0, (0) / 1)))) | (~ (((1 & 1) | _GLF_IDENTITY(0, (0) / 1))))))), _GLF_IDENTITY(((1 & 1) | _GLF_IDENTITY(0, (0) / 1)), ~ (~ (((1 & 1) | _GLF_IDENTITY(0, (0) / 1)))))))), bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(((1 & 1) | _GLF_IDENTITY(0, (0) / 1)), clamp(_GLF_IDENTITY(((1 & 1) | _GLF_IDENTITY(0, (0) / 1)), (((1 & 1) | _GLF_IDENTITY(0, (0) / 1))) | (((1 & 1) | _GLF_IDENTITY(0, (0) / 1)))), _GLF_IDENTITY(((1 & 1) | _GLF_IDENTITY(0, (0) / 1)), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((((1 & 1) | _GLF_IDENTITY(0, (0) / _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) - 0), 0), (ivec2(_GLF_IDENTITY(1, (1) - 0), 0)) | ivec2(0, 0))))))), min(_GLF_IDENTITY((((1 & 1) | _GLF_IDENTITY(0, (0) / _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) - 0), 0), (ivec2(_GLF_IDENTITY(1, (1) - 0), 0)) | ivec2(0, 0))))))), ((((1 & 1) | _GLF_IDENTITY(0, (0) / _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) - 0), 0), (ivec2(_GLF_IDENTITY(1, (1) - 0), 0)) | ivec2(0, 0)))))))) >> 0), (((1 & 1) | _GLF_IDENTITY(0, (0) / _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) - 0), 0), (ivec2(_GLF_IDENTITY(1, (1) - 0), 0)) | ivec2(0, 0))))))))), (~ (((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) << 0)) << 0) & 1) | _GLF_IDENTITY(0, (0) / 1)))) | (~ (((1 & 1) | _GLF_IDENTITY(0, (0) / 1))))))), _GLF_IDENTITY(((1 & 1) | _GLF_IDENTITY(0, (0) / 1)), ~ (~ (((1 & 1) | _GLF_IDENTITY(0, (0) / 1)))))))), false, true)))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(((1 & 1) | _GLF_IDENTITY(0, (0) / 1)), clamp(_GLF_IDENTITY(((1 & 1) | _GLF_IDENTITY(0, (0) / 1)), (((1 & 1) | _GLF_IDENTITY(0, (0) / 1))) | (((1 & 1) | _GLF_IDENTITY(0, (0) / 1)))), _GLF_IDENTITY(((1 & 1) | _GLF_IDENTITY(0, (0) / 1)), ~ (_GLF_IDENTITY(~ (((1 & 1) | _GLF_IDENTITY(0, (0) / 1))), (~ (((1 & 1) | _GLF_IDENTITY(0, (0) / 1)))) | (~ (((1 & 1) | _GLF_IDENTITY(0, (0) / 1))))))), _GLF_IDENTITY(((1 & 1) | _GLF_IDENTITY(0, (0) / 1)), ~ (~ (((1 & 1) | _GLF_IDENTITY(0, (0) / 1)))))))), bool(bvec4(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(((1 & 1) | _GLF_IDENTITY(0, (0) / 1)), clamp(_GLF_IDENTITY(((1 & 1) | _GLF_IDENTITY(0, (0) / 1)), (((1 & 1) | _GLF_IDENTITY(0, (0) / 1))) | (((1 & 1) | _GLF_IDENTITY(0, (0) / 1)))), _GLF_IDENTITY(((1 & 1) | _GLF_IDENTITY(0, (0) / 1)), ~ (_GLF_IDENTITY(~ (((1 & 1) | _GLF_IDENTITY(0, (0) / 1))), (~ (((1 & 1) | _GLF_IDENTITY(0, (0) / 1)))) | (~ (((1 & 1) | _GLF_IDENTITY(0, (0) / 1))))))), _GLF_IDENTITY(((1 & 1) | _GLF_IDENTITY(0, (0) / 1)), ~ (~ (((1 & 1) | _GLF_IDENTITY(0, (0) / 1)))))))), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(((1 & 1) | _GLF_IDENTITY(0, (0) / 1)), clamp(_GLF_IDENTITY(((1 & 1) | _GLF_IDENTITY(0, (0) / 1)), (((1 & 1) | _GLF_IDENTITY(0, (0) / 1))) | (((1 & 1) | _GLF_IDENTITY(0, (0) / 1)))), _GLF_IDENTITY(((1 & 1) | _GLF_IDENTITY(0, (0) / 1)), ~ (_GLF_IDENTITY(~ (((1 & 1) | _GLF_IDENTITY(0, (0) / 1))), (~ (((1 & 1) | _GLF_IDENTITY(0, (0) / 1)))) | (~ (((1 & 1) | _GLF_IDENTITY(0, (0) / 1))))))), _GLF_IDENTITY(((1 & 1) | _GLF_IDENTITY(0, (0) / 1)), ~ (~ (((1 & 1) | _GLF_IDENTITY(0, (0) / 1)))))))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(((1 & 1) | _GLF_IDENTITY(0, (0) / 1)), clamp(_GLF_IDENTITY(((1 & 1) | _GLF_IDENTITY(0, (0) / 1)), (((1 & 1) | _GLF_IDENTITY(0, (0) / 1))) | (((1 & 1) | _GLF_IDENTITY(0, (0) / 1)))), _GLF_IDENTITY(((1 & 1) | _GLF_IDENTITY(0, (0) / 1)), ~ (_GLF_IDENTITY(~ (((1 & 1) | _GLF_IDENTITY(0, (0) / 1))), (~ (((1 & 1) | _GLF_IDENTITY(0, (0) / 1)))) | (~ (((1 & 1) | _GLF_IDENTITY(0, (0) / 1))))))), _GLF_IDENTITY(((1 & 1) | _GLF_IDENTITY(0, (0) / 1)), ~ (~ (((1 & 1) | _GLF_IDENTITY(0, (0) / 1)))))))))))) || false), true, false, false))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(((1 & 1) | _GLF_IDENTITY(0, (0) / 1)), clamp(_GLF_IDENTITY(((1 & 1) | _GLF_IDENTITY(0, (0) / 1)), (((1 & 1) | _GLF_IDENTITY(0, (0) / 1))) | (((1 & 1) | _GLF_IDENTITY(0, (0) / 1)))), _GLF_IDENTITY(((1 & 1) | _GLF_IDENTITY(0, (0) / 1)), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((((1 & 1) | _GLF_IDENTITY(0, (0) / _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) - 0), 0), (ivec2(_GLF_IDENTITY(1, (1) - 0), 0)) | ivec2(0, 0))))))), min(_GLF_IDENTITY((((1 & 1) | _GLF_IDENTITY(0, (0) / _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) - 0), 0), (ivec2(_GLF_IDENTITY(1, (1) - 0), 0)) | ivec2(0, 0))))))), ((((1 & 1) | _GLF_IDENTITY(0, (0) / _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) - 0), 0), (ivec2(_GLF_IDENTITY(1, (1) - 0), 0)) | ivec2(0, 0)))))))) >> 0), (((1 & 1) | _GLF_IDENTITY(0, (0) / _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) - 0), 0), (ivec2(_GLF_IDENTITY(1, (1) - 0), 0)) | ivec2(0, 0))))))))), (~ (((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) << 0)) << 0) & 1) | _GLF_IDENTITY(0, (0) / 1)))) | (~ (((1 & 1) | _GLF_IDENTITY(0, (0) / 1))))))), _GLF_IDENTITY(((1 & 1) | _GLF_IDENTITY(0, (0) / 1)), ~ (~ (((1 & 1) | _GLF_IDENTITY(0, (0) / 1)))))))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(((1 & 1) | _GLF_IDENTITY(0, (0) / 1)), clamp(_GLF_IDENTITY(((1 & 1) | _GLF_IDENTITY(0, (0) / 1)), (((1 & 1) | _GLF_IDENTITY(0, (0) / 1))) | (((1 & 1) | _GLF_IDENTITY(0, (0) / 1)))), _GLF_IDENTITY(((1 & 1) | _GLF_IDENTITY(0, (0) / 1)), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((((1 & 1) | _GLF_IDENTITY(0, (0) / _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) - 0), 0), (ivec2(_GLF_IDENTITY(1, (1) - 0), 0)) | ivec2(0, 0))))))), min(_GLF_IDENTITY((((1 & 1) | _GLF_IDENTITY(0, (0) / _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) - 0), 0), (ivec2(_GLF_IDENTITY(1, (1) - 0), 0)) | ivec2(0, 0))))))), ((((1 & 1) | _GLF_IDENTITY(0, (0) / _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) - 0), 0), (ivec2(_GLF_IDENTITY(1, (1) - 0), 0)) | ivec2(0, 0)))))))) >> 0), (((1 & 1) | _GLF_IDENTITY(0, (0) / _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) - 0), 0), (ivec2(_GLF_IDENTITY(1, (1) - 0), 0)) | ivec2(0, 0))))))))), (~ (((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) << 0)) << 0) & 1) | _GLF_IDENTITY(0, (0) / 1)))) | (~ (((1 & 1) | _GLF_IDENTITY(0, (0) / 1))))))), _GLF_IDENTITY(((1 & 1) | _GLF_IDENTITY(0, (0) / 1)), ~ (~ (((1 & 1) | _GLF_IDENTITY(0, (0) / 1)))))))), bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(((1 & 1) | _GLF_IDENTITY(0, (0) / 1)), clamp(_GLF_IDENTITY(((1 & 1) | _GLF_IDENTITY(0, (0) / 1)), (((1 & 1) | _GLF_IDENTITY(0, (0) / 1))) | (((1 & 1) | _GLF_IDENTITY(0, (0) / 1)))), _GLF_IDENTITY(((1 & 1) | _GLF_IDENTITY(0, (0) / 1)), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((((1 & 1) | _GLF_IDENTITY(0, (0) / _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) - 0), 0), (ivec2(_GLF_IDENTITY(1, (1) - 0), 0)) | ivec2(0, 0))))))), min(_GLF_IDENTITY((((1 & 1) | _GLF_IDENTITY(0, (0) / _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) - 0), 0), (ivec2(_GLF_IDENTITY(1, (1) - 0), 0)) | ivec2(0, 0))))))), ((((1 & 1) | _GLF_IDENTITY(0, (0) / _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) - 0), 0), (ivec2(_GLF_IDENTITY(1, (1) - 0), 0)) | ivec2(0, 0)))))))) >> 0), (((1 & 1) | _GLF_IDENTITY(0, (0) / _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) - 0), 0), (ivec2(_GLF_IDENTITY(1, (1) - 0), 0)) | ivec2(0, 0))))))))), (~ (((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) << 0)) << 0) & 1) | _GLF_IDENTITY(0, (0) / 1)))) | (~ (((1 & 1) | _GLF_IDENTITY(0, (0) / 1))))))), _GLF_IDENTITY(((1 & 1) | _GLF_IDENTITY(0, (0) / 1)), ~ (~ (((1 & 1) | _GLF_IDENTITY(0, (0) / 1)))))))), false, true))))))))))) && true))) || false); _injected_loop_counter ++)
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))))), ! (! (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
        }
       else
        {
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      break;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
  {
   for(int _injected_loop_counter = (0 & 84537); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        break;
       continue;
      }
     if(_GLF_DEAD(false))
      break;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(((false)) && true, bool(bvec2((_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ((false)) || false)))) && true, true)))) && true)))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))), _GLF_IDENTITY(((false)) && true, bool(bvec2(((false)) && true, true)))) && true)), ! (_GLF_IDENTITY(! (true && (_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(((false)) && true, bool(bvec2(((false)) && true, true)))) && true))), _GLF_IDENTITY(! (! (! (true && (_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(((false)) && true, bool(bvec2(((false)) && true, true)))) && true))))), (! (! (! (true && (_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(((false)) && true, bool(bvec2(((false)) && true, true)))) && true)))))) || false)))))), true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, false)), bool(bvec3(bool(bvec4(false, false, false, false)), true, false)))), false))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
  }
 else
  {
  }
 do
  {
   if((subgroup_local_id % 2) == _GLF_IDENTITY(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(floatBitsToInt(461.414)))), (_GLF_IDENTITY(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(floatBitsToInt(461.414)))), (_GLF_IDENTITY(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(floatBitsToInt(461.414)))), (false ? _GLF_FUZZED(-16476) : _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(floatBitsToInt(461.414))))))) | 0)) | (_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(floatBitsToInt(461.414)))))))
    {
     if(_GLF_DEAD(false))
      continue;
     atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
    }
   else
    {
     for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      continue;
     atomicStore(buf[next_virtual_gid], uint(2), 4, 64, _GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), max(_GLF_IDENTITY(~ (_GLF_IDENTITY(4, int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(ivec4(-60535, 62928, 614, _GLF_IDENTITY(-61299, (_GLF_IDENTITY(-61299, (-61299) + 0)) << (int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(5), int(5))))).y) : _GLF_IDENTITY(4, 0 ^ (4)))), ~ (~ (_GLF_IDENTITY(4, (false ? _GLF_FUZZED(ivec4(-60535, 62928, 614, _GLF_IDENTITY(-61299, _GLF_IDENTITY((_GLF_IDENTITY(-61299, (-61299) + 0)), 0 | ((_GLF_IDENTITY(-61299, (-61299) + 0)))) << (int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) << 0), int(5))))).y) : _GLF_IDENTITY(4, 0 ^ (4))))))), 0)))), (~ (4)) + 0), ~ (4))))));
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
