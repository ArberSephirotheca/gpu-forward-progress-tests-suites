#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_15 {
 mat3x2 _f0;
 bvec3 _f1;
 vec3 _f2;
 ivec2 _f3;
 float _f4;
} ;

struct _GLF_struct_16 {
 mat4 _f0;
 _GLF_struct_15 _f1;
 mat3x4 _f2;
} ;

struct _GLF_struct_13 {
 mat3 _f0;
 ivec3 _f1;
 mat4x2 _f2;
 mat3x2 _f3;
 uvec2 _f4;
 uint workgroup_size;
 mat2x4 _f5;
} ;

struct _GLF_struct_12 {
 mat2x3 _f0;
 mat4x2 _f1;
 mat2x4 _f2;
 mat4x2 _f3;
 int _f4;
 ivec3 _f5;
} ;

struct _GLF_struct_14 {
 _GLF_struct_12 _f0;
 _GLF_struct_13 _f1;
} ;

struct _GLF_struct_10 {
 bvec2 _f0;
 uvec2 _f1;
 bvec4 _f2;
} ;

struct _GLF_struct_11 {
 _GLF_struct_10 _f0;
 int _f1;
} ;

struct _GLF_struct_17 {
 _GLF_struct_11 _f0;
 _GLF_struct_14 _f1;
 _GLF_struct_16 _f2;
 uvec3 _f3;
 float _f4;
 mat2x4 _f5;
 mat3 _f6;
} ;

struct _GLF_struct_7 {
 mat4x2 _f0;
 uvec2 _f1;
 ivec4 _f2;
 int _f3;
 ivec4 _f4;
 float _f5;
} ;

struct _GLF_struct_8 {
 mat2x3 _f0;
 mat3x4 _f1;
 mat2x3 _f2;
 _GLF_struct_7 _f3;
 bvec4 _f4;
} ;

struct _GLF_struct_5 {
 mat3 _f0;
} ;

struct _GLF_struct_4 {
 mat3x2 _f0;
 mat3x4 _f1;
} ;

struct _GLF_struct_6 {
 _GLF_struct_4 _f0;
 _GLF_struct_5 _f1;
 bvec3 _f2;
 bvec3 _f3;
 bvec2 _f4;
} ;

struct _GLF_struct_2 {
 bool _f0;
 vec2 _f1;
 uvec3 _f2;
 bvec4 _f3;
 uint _f4;
 ivec4 _f5;
} ;

struct _GLF_struct_1 {
 mat2x3 _f0;
 int _f1;
 vec4 _f2;
 vec3 _f3;
} ;

struct _GLF_struct_0 {
 ivec3 _f0;
 int _f1;
 ivec3 _f2;
 mat3x2 _f3;
 mat3 _f4;
 uvec3 _f5;
 bool _f6;
} ;

struct _GLF_struct_3 {
 bvec4 _f0;
 _GLF_struct_0 _f1;
 _GLF_struct_1 _f2;
 _GLF_struct_2 _f3;
} ;

struct _GLF_struct_9 {
 _GLF_struct_3 _f0;
 vec4 _f1;
 ivec4 _f2;
 float _f3;
 uint subgroup_local_id;
 _GLF_struct_6 _f4;
 _GLF_struct_8 _f5;
 uvec4 _f6;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = _GLF_IDENTITY(16, (_GLF_IDENTITY(16, (16) << _GLF_IDENTITY((0 << _GLF_IDENTITY(int(7), int(7))), ~ (~ ((0 << _GLF_IDENTITY(int(7), int(7)))))))) | (16));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))), (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)))) || false)))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))) || false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 _GLF_struct_9 _GLF_struct_replacement_9 = _GLF_struct_9(_GLF_struct_3(bvec4(true), _GLF_struct_0(ivec3(_GLF_IDENTITY(1, (1) | 0)), 1, ivec3(1), mat3x2(1.0), mat3(1.0), _GLF_IDENTITY(uvec3(1u), uvec3(uvec4(uvec3(1u), 1u))), true), _GLF_struct_1(mat2x3(1.0), 1, vec4(1.0), vec3(1.0)), _GLF_struct_2(true, vec2(1.0), uvec3(1u), bvec4(true), 1u, ivec4(1))), vec4(1.0), ivec4(1), 1.0, gl_SubgroupInvocationID, _GLF_struct_6(_GLF_struct_4(mat3x2(1.0), mat3x4(1.0)), _GLF_struct_5(mat3(1.0)), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, (true) || false)), bvec3(bvec3(bvec3(_GLF_IDENTITY(true, (true) || false))))), bvec3(true), bvec2(true)), _GLF_struct_8(mat2x3(1.0), mat3x4(1.0), mat2x3(1.0), _GLF_struct_7(mat4x2(1.0), uvec2(_GLF_IDENTITY(1u, (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), (_GLF_IDENTITY(bool(true), ! (! (bool(true))))) || false))))), true && (_GLF_IDENTITY(true, _GLF_IDENTITY(true && (_GLF_IDENTITY(true, bool(bool(true)))), bool(bvec4(_GLF_IDENTITY(true && (_GLF_IDENTITY(true, bool(bool(true)))), (true && (_GLF_IDENTITY(true, bool(bool(true))))) && true), true, true, true)))))) ? 1u : _GLF_FUZZED(57017u)))), ivec4(1), _GLF_IDENTITY(1, int(_GLF_IDENTITY(int(1), int(ivec4(int(1), 1, 1, 1))))), ivec4(1), 1.0), bvec4(true)), uvec4(1u));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), false))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7.8), _GLF_FUZZED((-6.7 + _GLF_IDENTITY(-37.38, max(-37.38, _GLF_IDENTITY(-37.38, (false ? _GLF_FUZZED(9.8) : -37.38))))))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 _GLF_struct_17 _GLF_struct_replacement_17 = _GLF_struct_17(_GLF_struct_11(_GLF_struct_10(bvec2(true), uvec2(1u), bvec4(true)), 1), _GLF_struct_14(_GLF_struct_12(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x4(1.0, 1.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (0.0) * 1.0) : _GLF_FUZZED(roundEven(94.04)))), 1.0, 1.0, 0.0, 0.0, sqrt(1.0))), (true ? float(mat2x4(1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, sqrt(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))))))) : _GLF_FUZZED(_GLF_IDENTITY(43.40, float(_GLF_IDENTITY(mat4(43.40, 0.0, 1.0, 1.0, cos(0.0), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(1.0, 1.0, 0.0), mat3(1.0) * (vec3(1.0, 1.0, 0.0))), vec3(0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)))), dot(vec3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0), vec3(0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-60.33) : 0.0)), (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-60.33) : 0.0))) - 0.0), 1.0, 1.0))))), 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(length(vec2(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(3.0)), bool(false))), _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)), 0.0)), _GLF_IDENTITY(max(_GLF_IDENTITY(length(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), (length(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0))) + 0.0), _GLF_IDENTITY(length(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), min(_GLF_IDENTITY(length(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), max(length(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), length(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)))), _GLF_IDENTITY(length(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), min(length(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), length(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0))))))), min(_GLF_IDENTITY(max(_GLF_IDENTITY(length(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), (length(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0))) + 0.0), _GLF_IDENTITY(length(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), min(_GLF_IDENTITY(length(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), max(length(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), length(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)))), _GLF_IDENTITY(length(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), min(length(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), length(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0))))))), mix(float(max(_GLF_IDENTITY(length(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), (length(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0))) + 0.0), _GLF_IDENTITY(length(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), min(_GLF_IDENTITY(length(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), max(length(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), length(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)))), _GLF_IDENTITY(length(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), min(length(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), length(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)))))))), float(_GLF_FUZZED(-367.994)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), max(_GLF_IDENTITY(length(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), (length(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0))) + 0.0), _GLF_IDENTITY(length(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), min(_GLF_IDENTITY(length(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), max(length(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), length(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)))), _GLF_IDENTITY(length(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), min(length(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), length(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)))))))))), (_GLF_IDENTITY(length(_GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(3.0)), bool(false))), _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)), 0.0), mix(vec2((vec2(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(3.0)), bool(false))), _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)), 0.0))[0], _GLF_FUZZED(-2.4)), vec2(_GLF_FUZZED(986.335), (vec2(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(3.0)), bool(false))), _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)), 0.0))[1]), bvec2(false, true)))), _GLF_IDENTITY(max(_GLF_IDENTITY(length(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), (length(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0))) + 0.0), _GLF_IDENTITY(length(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), min(_GLF_IDENTITY(length(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), max(length(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), length(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)))), _GLF_IDENTITY(_GLF_IDENTITY(length(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), min(length(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), length(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)))), (_GLF_IDENTITY(length(vec2(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(float(0.0))), 0.0, 0.0)), 0.0)), min(length(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), length(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0))))) / _GLF_IDENTITY(dot(vec2(abs(0.0), 1.0), vec2(0.0, 1.0)), dot(vec2(abs(0.0), 1.0), vec2(0.0, 1.0))))))), min(_GLF_IDENTITY(max(_GLF_IDENTITY(length(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), (length(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0))) + 0.0), _GLF_IDENTITY(_GLF_IDENTITY(length(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), min(_GLF_IDENTITY(length(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), max(length(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), length(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)))), _GLF_IDENTITY(length(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), min(length(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), length(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)))))), float(mat4x3(_GLF_IDENTITY(length(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), min(_GLF_IDENTITY(length(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), max(length(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), length(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)))), _GLF_IDENTITY(length(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), min(length(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), length(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)))))), determinant(mat3(abs(0.0), 0.0, 0.0, 1.0, tan(0.0), 0.0, 0.0, 1.0, 0.0)), exp(0.0), 1.0, 1.0, 0.0, 0.0, sqrt(0.0), 0.0, 0.0, 1.0, 0.0)))), mix(float(max(_GLF_IDENTITY(length(vec2(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 0.0)), (length(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0))) + 0.0), _GLF_IDENTITY(length(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), min(_GLF_IDENTITY(length(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), max(length(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), length(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)))), _GLF_IDENTITY(length(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), min(length(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), length(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)))))))), float(_GLF_FUZZED(-367.994)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), max(_GLF_IDENTITY(length(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), (length(vec2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(clamp(0.0, 0.0, 0.0), (clamp(0.0, 0.0, 0.0)) / _GLF_IDENTITY(dot(vec3(0.0, cos(0.0), log(1.0)), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, cos(0.0), log(1.0)), vec3(0.0, 1.0, 0.0))))), 0.0))) + 0.0), _GLF_IDENTITY(length(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), min(_GLF_IDENTITY(length(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), max(length(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), length(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)))), _GLF_IDENTITY(length(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), min(length(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), length(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(8.3) : 0.0))))))))))))))) - 0.0), 1.0, 1.0, 0.0, sqrt(1.0)), mat4(1.0) * (mat4(43.40, 0.0, 1.0, 1.0, cos(0.0), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(1.0, 1.0, 0.0), mat3(1.0) * (vec3(1.0, 1.0, 0.0))), vec3(0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)))), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-60.33) : 0.0)), (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-60.33) : 0.0))) - 0.0), 1.0, 1.0))))), 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(length(vec2(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(3.0)), bool(false))), _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)), 0.0)), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(length(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), clamp(length(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), length(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), length(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)))), (length(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0))) + 0.0), _GLF_IDENTITY(length(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), min(_GLF_IDENTITY(length(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), max(length(vec2(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, float(vec2(0.0, _GLF_ZERO(0.0, injectionSwitch.x)))), 0.0)), 0.0)), length(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-569.220) : 0.0)))), 0.0)))), _GLF_IDENTITY(length(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), min(length(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), length(vec2(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0, 0.0)), 0.0))))))), min(_GLF_IDENTITY(max(_GLF_IDENTITY(length(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), (length(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0))) + 0.0), _GLF_IDENTITY(length(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), min(_GLF_IDENTITY(length(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), max(length(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), length(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)))), _GLF_IDENTITY(length(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), min(length(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), length(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0))))))), mix(float(max(_GLF_IDENTITY(length(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), (length(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0))) + 0.0), _GLF_IDENTITY(_GLF_IDENTITY(length(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), min(_GLF_IDENTITY(length(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), max(length(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), length(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)))), _GLF_IDENTITY(length(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), min(length(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), length(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)))))), mix(float(_GLF_FUZZED(4.3)), float(_GLF_IDENTITY(length(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), min(_GLF_IDENTITY(length(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), max(length(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), length(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)))), _GLF_IDENTITY(length(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), min(length(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), length(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0))))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), float(_GLF_FUZZED(-367.994)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), max(_GLF_IDENTITY(length(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), (length(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0))) + 0.0), _GLF_IDENTITY(length(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), _GLF_IDENTITY(0.0, (0.0) * 1.0))), min(_GLF_IDENTITY(length(vec2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(0.0, tan(length(0.0))), clamp(vec2(0.0, tan(length(0.0))), vec2(0.0, tan(length(0.0))), vec2(0.0, tan(length(0.0)))))), (float(_GLF_IDENTITY(vec2(0.0, tan(length(0.0))), clamp(vec2(0.0, tan(length(0.0))), vec2(0.0, tan(length(0.0))), vec2(0.0, tan(length(0.0))))))) * _GLF_ONE(1.0, injectionSwitch.y))), clamp(0.0, 0.0, 0.0)), 0.0)), max(length(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), length(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)))), _GLF_IDENTITY(length(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), min(length(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), length(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)))))))))), 1.0, 1.0, 0.0, sqrt(1.0)))))))))), min(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x4(1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, sqrt(1.0))), (true ? float(mat2x4(1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, sqrt(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))))))) : _GLF_FUZZED(_GLF_IDENTITY(43.40, float(mat4(43.40, 0.0, 1.0, 1.0, cos(0.0), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)))), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))))), 0.0, 1.0, 1.0, 1.0, 1.0, length(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), _GLF_IDENTITY(1.0, float(mat3x4(1.0, 1.0, 1.0, 1.0, 1.0, 0.0, sin(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-0.2)), bool(false)))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x4(0.0, 1.0, 0.0, 1.0, length(vec2(0.0, 0.0)), 1.0, 1.0, 0.0)), max(float(mat2x4(0.0, 1.0, 0.0, 1.0, length(vec2(0.0, 0.0)), 1.0, 1.0, 0.0)), float(mat2x4(0.0, 1.0, 0.0, 1.0, length(vec2(0.0, 0.0)), 1.0, 1.0, 0.0))))), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), 0.0))), 1.0, 0.0, sqrt(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-4.4)), float(1.0), bool(true))))))))))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x4(1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, sqrt(1.0))), (_GLF_IDENTITY(true, (true) && true) ? float(mat2x4(1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, sqrt(_GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))), (clamp(1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))) - sin(0.0)))))) : _GLF_FUZZED(_GLF_IDENTITY(43.40, float(mat4(43.40, 0.0, 1.0, 1.0, cos(0.0), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))), max(_GLF_IDENTITY(vec3(0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))), (false ? _GLF_FUZZED(vec3(8.8, 61.78, -3.5)) : vec3(0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))))), _GLF_IDENTITY(vec3(0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))), max(vec3(0.0, 0.0, determinant(mat4(1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0))), vec3(0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)))))))), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))))), 0.0, 1.0, 1.0, 1.0, 1.0, length(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), 1.0, 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0)), _GLF_IDENTITY(sqrt(1.0), mix(float(sqrt(1.0)), float(_GLF_FUZZED(77.71)), bool(false))))))))))))), mat4x2(1.0), mat2x4(1.0), mat4x2(1.0), 1, ivec3(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) - 0))))), _GLF_struct_13(mat3(1.0), ivec3(1), mat4x2(1.0), mat3x2(1.0), _GLF_IDENTITY(uvec2(1u), _GLF_IDENTITY(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec2(1u), _GLF_IDENTITY(max(uvec2(1u), uvec2(_GLF_IDENTITY(1u, max(1u, 1u)))), (max(uvec2(1u), uvec2(1u))) >> uvec2(0u, 0u))), 0u), uvec3(1u, 1u, 1u) * (uvec3(_GLF_IDENTITY(uvec2(1u), max(uvec2(1u), uvec2(1u))), 0u)))), min(uvec2(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec2(1u), max(uvec2(1u), uvec2(1u))), 0u), uvec3(1u, 1u, 1u) * (uvec3(_GLF_IDENTITY(uvec2(1u), max(uvec2(1u), uvec2(1u))), 0u)))), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec2(1u), max(uvec2(1u), uvec2(1u))), 0u), uvec3(_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec2(1u, 1u)), clamp(_GLF_IDENTITY(uint(uvec2(1u, 1u)), (uint(uvec2(1u, 1u))) - 0u), uint(uvec2(1u, 1u)), uint(uvec2(1u, 1u))))), 1u, 1u) * (uvec3(_GLF_IDENTITY(uvec2(1u), max(uvec2(1u), uvec2(1u))), 0u)))), (true ? uvec2(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec2(1u), max(uvec2(1u), _GLF_IDENTITY(uvec2(1u), max(uvec2(1u), _GLF_IDENTITY(uvec2(1u), uvec2(uvec4(uvec2(1u), 1u, 0u))))))), 0u), uvec3(1u, 1u, 1u) * (uvec3(_GLF_IDENTITY(uvec2(1u), max(uvec2(1u), uvec2(1u))), 0u)))) : _GLF_FUZZED(uvec2(18141u, 146432u)))))), min(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec2(1u), max(uvec2(1u), uvec2(1u))), 0u), _GLF_IDENTITY(uvec3(1u, 1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, uint(uvec4(1u, 1u, _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) + 0u)) + 0u), _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_size))), 1u), (uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) + 0u)) + 0u), _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_size))), 1u)) | (uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) + 0u)) + 0u), _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_size))), 1u))))), 1u)))) | uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x4(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0, 0.0)), max(float(mat2x4(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0, 0.0)), float(mat2x4(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0, 0.0))))), injectionSwitch.x)))))), min(uvec3(1u, 1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec4(1u, 1u, 1u, 1u)), (_GLF_IDENTITY(uint(uvec4(1u, 1u, 1u, 1u)), ~ (~ (uint(uvec4(1u, 1u, 1u, 1u)))))) / (0u | 1u)))) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uvec3(1u, 1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, uint(uvec4(1u, 1u, 1u, 1u)))) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) * (uvec3(_GLF_IDENTITY(uvec2(1u), max(uvec2(1u), uvec2(1u))), 0u)))), min(uvec2(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec2(1u), max(uvec2(1u), uvec2(1u))), 0u), uvec3(1u, 1u, 1u) * (uvec3(_GLF_IDENTITY(uvec2(1u), max(uvec2(1u), uvec2(1u))), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) ^ 0u)) | (0u)))))), uvec2(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec2(1u), max(uvec2(1u), uvec2(1u))), 0u), uvec3(1u, 1u, 1u) * (uvec3(_GLF_IDENTITY(uvec2(1u), max(uvec2(1u), uvec2(1u))), 0u))), clamp(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec2(1u), max(uvec2(1u), uvec2(1u))), 0u), uvec3(1u, 1u, 1u) * (uvec3(_GLF_IDENTITY(uvec2(1u), max(uvec2(1u), uvec2(1u))), 0u))), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec2(1u), max(uvec2(1u), uvec2(1u))), 0u), uvec3(1u, 1u, 1u) * (uvec3(_GLF_IDENTITY(uvec2(1u), max(uvec2(1u), uvec2(1u))), 0u))), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec2(1u), max(uvec2(1u), uvec2(1u))), 0u), uvec3(1u, 1u, 1u) * (uvec3(_GLF_IDENTITY(uvec2(1u), max(uvec2(1u), uvec2(1u))), 0u)))))))), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec2(1u), max(uvec2(1u), uvec2(1u))), 0u), _GLF_IDENTITY(uvec3(1u, 1u, 1u), uvec3(_GLF_IDENTITY(uvec3(uvec3(1u, 1u, 1u)), min(uvec3(uvec3(1u, 1u, 1u)), uvec3(uvec3(1u, 1u, 1u)))))) * (uvec3(_GLF_IDENTITY(uvec2(1u), max(uvec2(1u), uvec2(1u))), 0u)))), min(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec2(1u), max(uvec2(1u), uvec2(1u))), 0u), uvec3(1u, 1u, 1u) * (uvec3(_GLF_IDENTITY(uvec2(1u), max(uvec2(1u), uvec2(1u))), 0u)))), (true ? uvec2(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec2(1u), max(uvec2(1u), uvec2(1u))), 0u), uvec3(1u, 1u, 1u) * (uvec3(_GLF_IDENTITY(uvec2(1u), max(uvec2(1u), uvec2(1u))), 0u)))) : _GLF_FUZZED((num_workgroup * uvec2(39912u, 54888u))))), uvec2(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec2(1u), max(uvec2(1u), uvec2(1u))), 0u), uvec3(_GLF_IDENTITY(1u, (0u << _GLF_IDENTITY(uint(6u), uint(6u))) ^ (_GLF_IDENTITY(1u, (1u) << 0u))), 1u, 1u) * (uvec3(_GLF_IDENTITY(uvec2(1u), max(uvec2(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u))), uvec2(1u))), 0u))))))))), gl_WorkGroupSize.x, mat2x4(1.0))), _GLF_struct_16(mat4(1.0), _GLF_struct_15(mat3x2(1.0), bvec3(true), vec3(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 1 * (1))) + 0)), (ivec2(1)) | (_GLF_IDENTITY(ivec2(1), ivec2(0, 0) ^ (ivec2(1))))), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), mat3x4(1.0)), uvec3(1u), 1.0, mat2x4(1.0), mat3(1.0));
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = _GLF_struct_replacement_17._f1._f1.workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)) + _GLF_struct_replacement_9.subgroup_local_id, max(workgroup_base + subgroup_id * subgroup_size + _GLF_struct_replacement_9.subgroup_local_id, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + _GLF_struct_replacement_9.subgroup_local_id, (workgroup_base + subgroup_id * subgroup_size + _GLF_struct_replacement_9.subgroup_local_id) ^ 0u)));
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(subgroup_id) : workgroup_base)) + subgroup_id * subgroup_size + _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_struct_replacement_9.subgroup_local_id + 1) % subgroup_size), (((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_9.subgroup_local_id + 1, (_GLF_struct_replacement_9.subgroup_local_id + 1) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_9.subgroup_local_id, ~ (_GLF_IDENTITY(~ (_GLF_struct_replacement_9.subgroup_local_id), (~ (_GLF_struct_replacement_9.subgroup_local_id)) / 1u))) + 1, (_GLF_IDENTITY(_GLF_struct_replacement_9.subgroup_local_id, uint(uvec2(_GLF_struct_replacement_9.subgroup_local_id, 0u))) + 1) / 1u)) ^ 0u)) % subgroup_size)) >> 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_struct_replacement_9.subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY((((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_9.subgroup_local_id + 1, (_GLF_struct_replacement_9.subgroup_local_id + 1) / 1u), (_GLF_IDENTITY(_GLF_struct_replacement_9.subgroup_local_id + 1, (_GLF_IDENTITY(_GLF_struct_replacement_9.subgroup_local_id, uint(uvec2(_GLF_struct_replacement_9.subgroup_local_id, 0u))) + 1) / 1u)) ^ 0u)) % subgroup_size)), _GLF_IDENTITY(uint(uint((((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_9.subgroup_local_id + 1, (_GLF_struct_replacement_9.subgroup_local_id + 1) / 1u), (_GLF_IDENTITY(_GLF_struct_replacement_9.subgroup_local_id + 1, (_GLF_IDENTITY(_GLF_struct_replacement_9.subgroup_local_id, uint(uvec2(_GLF_struct_replacement_9.subgroup_local_id, 0u))) + 1) / 1u)) ^ 0u)) % subgroup_size)))), (uint(uint((((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_9.subgroup_local_id + 1, (_GLF_struct_replacement_9.subgroup_local_id + 1) / 1u), (_GLF_IDENTITY(_GLF_struct_replacement_9.subgroup_local_id + 1, (_GLF_IDENTITY(_GLF_struct_replacement_9.subgroup_local_id, uint(uvec2(_GLF_struct_replacement_9.subgroup_local_id, 0u))) + 1) / 1u)) ^ 0u)) % subgroup_size))))) << 0u)) >> 0u), 0u | (_GLF_IDENTITY(((_GLF_struct_replacement_9.subgroup_local_id + 1) % subgroup_size), (((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_9.subgroup_local_id + 1, (_GLF_struct_replacement_9.subgroup_local_id + 1) / 1u), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_9.subgroup_local_id + 1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_9.subgroup_local_id, uint(uvec2(_GLF_IDENTITY(_GLF_struct_replacement_9.subgroup_local_id, (true ? _GLF_struct_replacement_9.subgroup_local_id : _GLF_FUZZED(workgroup_base))), 0u))) + 1), ((_GLF_IDENTITY(_GLF_struct_replacement_9.subgroup_local_id, uint(uvec2(_GLF_IDENTITY(_GLF_struct_replacement_9.subgroup_local_id, (true ? _GLF_struct_replacement_9.subgroup_local_id : _GLF_FUZZED(workgroup_base))), 0u))) + 1)) >> 0u) / 1u)) ^ 0u, max(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_9.subgroup_local_id + 1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_9.subgroup_local_id, uint(uvec2(_GLF_IDENTITY(_GLF_struct_replacement_9.subgroup_local_id, (true ? _GLF_struct_replacement_9.subgroup_local_id : _GLF_FUZZED(workgroup_base))), 0u))) + 1), ((_GLF_IDENTITY(_GLF_struct_replacement_9.subgroup_local_id, uint(uvec2(_GLF_IDENTITY(_GLF_struct_replacement_9.subgroup_local_id, (true ? _GLF_struct_replacement_9.subgroup_local_id : _GLF_FUZZED(workgroup_base))), 0u))) + 1)) >> 0u) / 1u)) ^ 0u, ((_GLF_IDENTITY(_GLF_struct_replacement_9.subgroup_local_id + 1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_9.subgroup_local_id, uint(uvec2(_GLF_IDENTITY(_GLF_struct_replacement_9.subgroup_local_id, (true ? _GLF_struct_replacement_9.subgroup_local_id : _GLF_FUZZED(workgroup_base))), 0u))) + 1), ((_GLF_IDENTITY(_GLF_struct_replacement_9.subgroup_local_id, uint(uvec2(_GLF_IDENTITY(_GLF_struct_replacement_9.subgroup_local_id, (true ? _GLF_struct_replacement_9.subgroup_local_id : _GLF_FUZZED(workgroup_base))), 0u))) + 1)) >> 0u) / 1u)) ^ 0u) / 1u), (_GLF_IDENTITY(_GLF_struct_replacement_9.subgroup_local_id + 1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_9.subgroup_local_id, uint(uvec2(_GLF_IDENTITY(_GLF_struct_replacement_9.subgroup_local_id, (true ? _GLF_struct_replacement_9.subgroup_local_id : _GLF_FUZZED(workgroup_base))), 0u))) + 1), ((_GLF_IDENTITY(_GLF_struct_replacement_9.subgroup_local_id, uint(uvec2(_GLF_IDENTITY(_GLF_struct_replacement_9.subgroup_local_id, (true ? _GLF_struct_replacement_9.subgroup_local_id : _GLF_FUZZED(workgroup_base))), 0u))) + 1)) >> 0u) / 1u)) ^ 0u)))) % subgroup_size)) >> 0u)))), ~ (~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_struct_replacement_9.subgroup_local_id + 1) % subgroup_size), (((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_9.subgroup_local_id + 1, (_GLF_IDENTITY(_GLF_struct_replacement_9.subgroup_local_id + 1, (_GLF_struct_replacement_9.subgroup_local_id + 1) - 0u)) / 1u), (_GLF_IDENTITY(_GLF_struct_replacement_9.subgroup_local_id + 1, (_GLF_IDENTITY(_GLF_struct_replacement_9.subgroup_local_id, uint(uvec2(_GLF_struct_replacement_9.subgroup_local_id, 0u))) + 1) / 1u)) ^ 0u)) % subgroup_size)) >> 0u), 0u | (_GLF_IDENTITY(((_GLF_struct_replacement_9.subgroup_local_id + 1) % subgroup_size), (((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_9.subgroup_local_id + 1, (_GLF_struct_replacement_9.subgroup_local_id + _GLF_IDENTITY(1, 1 * (1))) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_9.subgroup_local_id + 1, (_GLF_IDENTITY(_GLF_struct_replacement_9.subgroup_local_id, uint(uvec2(_GLF_struct_replacement_9.subgroup_local_id, 0u))) + 1) / 1u), (_GLF_IDENTITY(_GLF_struct_replacement_9.subgroup_local_id + 1, (_GLF_IDENTITY(_GLF_struct_replacement_9.subgroup_local_id, uint(uvec2(_GLF_struct_replacement_9.subgroup_local_id, 0u))) + 1) / 1u)) | (_GLF_IDENTITY(_GLF_struct_replacement_9.subgroup_local_id + 1, (_GLF_IDENTITY(_GLF_struct_replacement_9.subgroup_local_id, uint(uvec2(_GLF_struct_replacement_9.subgroup_local_id, 0u))) + 1) / 1u)))) ^ _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(53091u))))) % subgroup_size)) >> 0u)))))))));
 buf[virtual_gid] = 1;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_9.subgroup_local_id + 1, ~ (~ (_GLF_struct_replacement_9.subgroup_local_id + 1))) < subgroup_size, ! (! (_GLF_struct_replacement_9.subgroup_local_id + 1 < subgroup_size))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   int i = 0;
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(2), min(_GLF_IDENTITY(uint(2), min(_GLF_IDENTITY(uint(2), _GLF_IDENTITY((false ? _GLF_FUZZED(bitfieldInsert(next_virtual_gid, subgroup_size, 66655, _GLF_IDENTITY(i, ~ (~ (i))))) : uint(2)), 0u ^ ((false ? _GLF_FUZZED(bitfieldInsert(next_virtual_gid, subgroup_size, 66655, _GLF_IDENTITY(i, ~ (~ (i))))) : uint(2))))), uint(2))), uint(2))), 4, 64, _GLF_IDENTITY(4, clamp(4, 4, 4)));
   if(_GLF_DEAD(false))
    return;
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
          return;
         continue;
        }
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), true, false, true))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(false || (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false || (! _GLF_IDENTITY(((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(_GLF_IDENTITY(bvec3(false || (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true), bvec3(bvec3(bvec3(false || (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true)))))))), true && (bool(bool(_GLF_IDENTITY(false || (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(_GLF_IDENTITY(bvec3(false || (! ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))), true, true), bvec3(bvec3(bvec3(false || (_GLF_IDENTITY(! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true, true)))))))))))))) && true)))
      barrier();
     if(_GLF_DEAD(false))
      continue;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), max(vec2(injectionSwitch[0], injectionSwitch[1]), _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), (vec2(injectionSwitch[0], injectionSwitch[1])) + vec2(0.0, 0.0))))).x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))), bool(bvec3(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))), false, true))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))));
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(round(length(normalize(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((_GLF_IDENTITY(808.567 / -0.1, _GLF_IDENTITY((808.567 / -0.1), (false ? _GLF_FUZZED(sqrt(-5.0)) : (808.567 / -0.1))) * 1.0)))), float(0.0), bool(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) && true)))), 1.0)))))), (true ? round(length(normalize(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((808.567 / -0.1))), float(0.0), bool(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, false || (true)))), (_GLF_IDENTITY(true, false || (true))) && true)))), 1.0)))))) : _GLF_FUZZED(2.2))) * (injectionSwitch.y)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, round(length(normalize(_GLF_IDENTITY(dot(vec2(0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), vec2(_GLF_IDENTITY(0.0, (0.0) - _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(sqrt(1.0), 0.0, 0.0)), dot(vec3(0.0, 1.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, min(1.0, 1.0)) : _GLF_FUZZED(-3086.4923)))), vec3(sqrt(1.0), 0.0, 0.0)))), 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))))) * _GLF_IDENTITY((injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.y), float(mat2x3(_GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), (injectionSwitch.y))), 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), abs(1.0), 0.0)))) - _GLF_ZERO(0.0, injectionSwitch.x))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y, _GLF_IDENTITY(round(length(normalize(_GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(vec2(0.0, 1.0), vec2(mat2x3(vec2(0.0, 1.0), 1.0, 1.0, 0.0, 1.0))), 1.0, 0.0, 0.0, 1.0, 1.0, cos(0.0), 1.0, 0.0, 1.0, 1.0), transpose(transpose(mat3x4(_GLF_IDENTITY(vec2(0.0, 1.0), vec2(mat2x3(vec2(0.0, 1.0), 1.0, 1.0, 0.0, 1.0))), 1.0, 0.0, 0.0, 1.0, 1.0, cos(0.0), 1.0, 0.0, 1.0, 1.0)))))), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))))), _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(round(length(_GLF_IDENTITY(normalize(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), min(normalize(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), normalize(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))))))), min(round(length(normalize(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec2(0.0, 1.0)), (float(vec2(0.0, 1.0))) - 0.0)), 1.0), vec2(0.0, 1.0)))))), _GLF_IDENTITY(round(length(normalize(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))))), float(mat3x2(round(length(normalize(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))))), 0.0, 0.0, 1.0, 1.0, 1.0))))), 0.0)), max(float(vec2(_GLF_IDENTITY(round(length(normalize(_GLF_IDENTITY(dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), mix(vec2(_GLF_FUZZED(-1.2), _GLF_FUZZED(7824.9260)), vec2(_GLF_IDENTITY((vec2(0.0, 1.0))[0], 1.0 * ((vec2(0.0, 1.0))[0])), (vec2(0.0, 1.0))[1]), bvec2(true, true)))), dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), mat2(1.0) * (vec2(0.0, 1.0)))))))), min(round(length(normalize(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))))), _GLF_IDENTITY(round(length(_GLF_IDENTITY(normalize(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), (normalize(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(4.0)), float(1.0), bool(true))), 1.0)))), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))) - length(0.0)))), float(mat3x2(round(length(normalize(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))))), 0.0, 0.0, 1.0, 1.0, 1.0))))), 0.0)), float(vec2(_GLF_IDENTITY(round(length(normalize(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))))), min(round(length(normalize(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(round(length(normalize(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))))), float(mat3x2(round(length(normalize(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))))), 0.0, 0.0, 1.0, 1.0, 1.0))), clamp(_GLF_IDENTITY(round(length(normalize(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)), vec2(0.0, 1.0)))))), float(mat3x2(round(length(normalize(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))))), 0.0, 0.0, 1.0, 1.0, 1.0))), _GLF_IDENTITY(round(length(normalize(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))))), float(mat3x2(round(length(normalize(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))))), 0.0, 0.0, 1.0, 1.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(round(length(normalize(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))))), mix(float(_GLF_FUZZED(vec2(321.351, -7.8).s)), float(round(length(normalize(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))))), bool(true))), float(mat3x2(round(length(normalize(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))))), 0.0, 0.0, 1.0, 1.0, 1.0))))))), 0.0))))) * (injectionSwitch.y)) : _GLF_FUZZED(length(_GLF_IDENTITY(-22.61, max(-22.61, -22.61))))))), float(_GLF_FUZZED(vec2(-794.654, -559.029).y)), bool(false))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), true, true))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), ! (! (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))), true && (injectionSwitch.x > injectionSwitch.y)))), ! (! (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)) && true)), ! _GLF_IDENTITY((! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)))))), ! (! (injectionSwitch.x > injectionSwitch.y)))) || _GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, true))))), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true, false, false))))), (_GLF_IDENTITY((! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / cos(0.0)), 1.0, 0.0, log(1.0), 1.0, exp(0.0), length(vec2(0.0, 0.0)), 1.0, 0.0, 0.0, 0.0, 0.0))), ! (! (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false, false))))), ((! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(79.60), _GLF_FUZZED(269.482)), bvec2(false, false))).y)))), true, _GLF_IDENTITY(false, false || (false)), false)))))) || false)) || _GLF_IDENTITY(false, true && (false)))), bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY(! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0)).x > injectionSwitch.y))))), ! (! (! _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), true)), bool(bool(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), true)), (bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), true))) || false))))))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(bool(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(true, ! (! (true))), true))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-33.89)), bool(false))) > injectionSwitch.y, ! (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-33.89)), bool(false))) > injectionSwitch.y, ! (! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 0.0), mat2(1.0) * (_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 0.0), (true ? mat2(injectionSwitch, 0.0, 0.0) : _GLF_FUZZED(mat2(318.659, 7.9, 2643.1400, -1083.0536)))))))).x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (! (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-33.89)), bool(false))) > injectionSwitch.y, ! (! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 0.0), mat2(1.0) * (_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 0.0), (true ? mat2(injectionSwitch, 0.0, 0.0) : _GLF_FUZZED(mat2(318.659, 7.9, 2643.1400, -1083.0536)))))))).x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), bool(bvec3(bool(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(true, ! (! (true))), true)))) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_ZERO(0.0, injectionSwitch.x)) > injectionSwitch.y), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(bool(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(true, ! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), true && ((_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)))))), ((! (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))))) && _GLF_IDENTITY(true, bool(bvec3(true, false, true))))), true))), (_GLF_IDENTITY(bool(! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), cos(0.0)))).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-33.89)), bool(false))) > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, ! (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))))))), bool(bvec3(bool(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || false)))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(mat2(-0.7, 82.98, 2.5, -45.50)[0]) : _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))))).y))))), _GLF_IDENTITY(true, ! (! (true))), true)))) && true), (_GLF_IDENTITY(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false))), ! (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-509.031)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, ! (! (true))) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y), true && _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (((injectionSwitch.x > injectionSwitch.y)))))) && true))), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && _GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), false || (((injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (((injectionSwitch.x > injectionSwitch.y)))))) && true))), false, true)), bool(_GLF_IDENTITY(bool(bool(bvec3((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (((injectionSwitch.x > injectionSwitch.y)))))) && _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), (bool(true)) || false)))))), false, true))), ! (! (bool(bool(bvec3((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (((injectionSwitch.x > injectionSwitch.y)))))) && true))), false, true)))))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-509.031)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-509.031)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y), true, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && _GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (((injectionSwitch.x > injectionSwitch.y)))))) && true), (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (((injectionSwitch.x > injectionSwitch.y)))))) && true)) && true))), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y), true && _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), (((injectionSwitch.x > injectionSwitch.y))) || false), (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (((injectionSwitch.x > injectionSwitch.y)))))) && true))), false, true)), bool(_GLF_IDENTITY(bool(bool(bvec3((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (((injectionSwitch.x > injectionSwitch.y))), (! (((injectionSwitch.x > injectionSwitch.y)))) && true)))) && true))), false, true))), _GLF_IDENTITY(! (! (bool(bool(bvec3((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-9.6))) > injectionSwitch.y)), (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (((injectionSwitch.x > injectionSwitch.y)))))) && true))), false, true))))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))), (! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))))) && true))) || (_GLF_IDENTITY(! (! (bool(bool(bvec3((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (((injectionSwitch.x > injectionSwitch.y)))), true && (! (! (((injectionSwitch.x > injectionSwitch.y)))))))) && true))), false, true))))), (! (! (bool(bool(bvec3((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(sqrt(injectionSwitch)) : injectionSwitch)).x > injectionSwitch.y)))))) && true))), false, true)))))) || false))))))))))))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec3(bool(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! ((! (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! ((! (injectionSwitch.x > injectionSwitch.y))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, (true) || false), false, false))), ! (! (true))), true))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-33.89)), bool(false))) > injectionSwitch.y, ! (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sqrt(vec2(0.0, 0.0))).y), true && ((injectionSwitch.x > injectionSwitch.y))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-33.89)), bool(false))) > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(4.7), _GLF_FUZZED(-36.13)), bvec2(false, false))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(54.65), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(81.46)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))).y)), ! (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))), ! (! ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))), ! (! ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))), ! (! ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))))))))) && true)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x)), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))) > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-33.89)), bool(false))) > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec4(injectionSwitch.y, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), vec3(round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0)), dot(vec3(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), vec3(round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0))), 0.0), mix(vec4((vec4(injectionSwitch.y, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), vec3(round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0)), dot(vec3(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), vec3(round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0))), 0.0))[0], _GLF_FUZZED(-2524.0152), _GLF_FUZZED(-3978.0326), (vec4(injectionSwitch.y, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), vec3(round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0)), dot(vec3(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), vec3(round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0))), 0.0))[3]), vec4(_GLF_FUZZED(40.43), (vec4(injectionSwitch.y, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), vec3(round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0)), dot(vec3(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), vec3(round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0))), 0.0))[1], (vec4(injectionSwitch.y, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), vec3(round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0)), dot(vec3(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), vec3(round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0))), 0.0))[2], _GLF_FUZZED(0.0)), bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), ! (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec3(bool(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y, ! (! (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), mix(vec2(_GLF_FUZZED(97.48), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))[1]), vec2((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))[0], _GLF_FUZZED(974.276)), bvec2(true, false))))))).y, ! (! (injectionSwitch.x > injectionSwitch.y))), false, true, true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(true, ! (! (true))), true)))) && true)) && true))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-289.205)), float(1.0), bool(true))), 1.0, 1.0, 1.0, 0.0), (mat3(injectionSwitch.x, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-289.205)), float(1.0), bool(true))), 1.0, 1.0, 1.0, 0.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))), injectionSwitch.x)))) > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, (false) && true) || (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, (injectionSwitch.x) - _GLF_ZERO(0.0, injectionSwitch.x)) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) && true), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), mix(float(_GLF_FUZZED(9.7)), float(min(injectionSwitch.x, injectionSwitch.x)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) < injectionSwitch.y)), true, true)))) || false)))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))), ! (! ((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))), ! (! ((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))), ! (! ((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, _GLF_IDENTITY(false, (false) || false), false)), (bool(bvec3(true, _GLF_IDENTITY(false, (false) || false), false))) && true)))))))))))))))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))) || false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   for(int _injected_loop_counter = _GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, 0)), _GLF_IDENTITY((_GLF_IDENTITY(0, _GLF_IDENTITY(_GLF_IDENTITY((0) ^ 0, max((0) ^ 0, (0) ^ 0)), _GLF_IDENTITY((_GLF_IDENTITY((0) ^ 0, ~ (~ ((0) ^ 0)))), ((_GLF_IDENTITY((0) ^ 0, ~ (~ ((0) ^ 0))))) / 1) >> 0))), 1 * ((_GLF_IDENTITY(0, _GLF_IDENTITY(_GLF_IDENTITY((0) ^ 0, max((0) ^ 0, (0) ^ 0)), _GLF_IDENTITY((_GLF_IDENTITY((0) ^ 0, ~ (~ ((0) ^ 0)))), ((_GLF_IDENTITY((0) ^ 0, ~ (~ ((0) ^ 0))))) / 1) >> 0))))) | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     atomicStore(buf[next_virtual_gid], uint(2), 4, _GLF_IDENTITY(64, ~ (~ (64))), 4);
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
