#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 0) uniform buf0 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || false)));
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         else
          {
          }
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
  }
 uvec4 GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_size;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = 16;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_size.z = subgroup_size;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(true, (true) && true) ? gl_NumWorkGroups.x : _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), (_GLF_FUZZED(subgroup_size)) + _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_size))))));
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) / 1))), (0 | 1) * (_injected_loop_counter)), _GLF_IDENTITY(_injected_loop_counter, ~ (~ (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) << 0)))))) != (_GLF_IDENTITY(_GLF_IDENTITY(0 | 0, (_GLF_IDENTITY(0 | 0, 0 ^ (0 | 0))) | (0 | 0)), max(0 | 0, 0 | 0)))); _injected_loop_counter --)
    {
     GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_size.y = num_workgroup;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_size.w = workgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)), ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))))) || false)))))))), true && (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))) || false))))))), true && (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), false || _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), bool(_GLF_IDENTITY(bool(false), ! _GLF_IDENTITY((! (bool(false))), bool(bool(_GLF_IDENTITY((! (bool(false))), bool(bvec3((! _GLF_IDENTITY((bool(false)), ! (! (_GLF_IDENTITY((bool(false)), ! (! ((bool(false))))))))), false, false))))))))) || (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), bool(_GLF_IDENTITY(bool(false), ! _GLF_IDENTITY((! (bool(false))), bool(bool(_GLF_IDENTITY((! (bool(false))), bool(bvec3((! _GLF_IDENTITY((bool(false)), ! (! (_GLF_IDENTITY((bool(false)), ! (! ((bool(false))))))))), false, false))))))))) || (_GLF_IDENTITY(false, bool(bvec3(false, false, true))))))) && true)), (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))))))))))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y)), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2((injectionSwitch) * mat2(1.0), 0.0, 0.0), (false ? _GLF_FUZZED(mat2(9.0, 4.0, 523.126, -4.3)) : mat2((injectionSwitch) * mat2(1.0), 0.0, 0.0)))), vec2(mat3x2(vec2(_GLF_IDENTITY(mat2((injectionSwitch) * mat2(1.0), 0.0, 0.0), (false ? _GLF_FUZZED(mat2(9.0, 4.0, 523.126, -4.3)) : mat2((injectionSwitch) * mat2(1.0), 0.0, 0.0)))), 0.0, 0.0, 1.0, 0.0))))).y)))))))), true && (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), false || (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), bool(_GLF_IDENTITY(bool(false), ! _GLF_IDENTITY(_GLF_IDENTITY((! (bool(false))), bool(bool(_GLF_IDENTITY((! (bool(false))), bool(bvec3((! (bool(false))), false, false)))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((! (bool(false))), bool(bool(_GLF_IDENTITY((! (bool(false))), bool(bvec3((! (bool(false))), false, false)))))), false, false, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec4(_GLF_IDENTITY((! (bool(false))), bool(bool(_GLF_IDENTITY((! (bool(false))), bool(bvec3((! (bool(false))), false, false)))))), false, false, false)))))))) || (false)))), (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, abs(1.0), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 1.0, 0.0, 0.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0))).x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), false, true, true))))))
  {
   do
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     do
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           do
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           barrier();
          }
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
     do
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) ^ 0)) ^ _GLF_IDENTITY(0, (0) / 1)) != 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((_GLF_IDENTITY(false, false || (false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))), ! (! ((! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((_GLF_IDENTITY(false, false || (false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))))))))
      {
      }
     else
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _GLF_IDENTITY(_injected_loop_counter ++, ~ _GLF_IDENTITY((~ (_injected_loop_counter ++)), ~ (~ ((~ (_injected_loop_counter ++)))))))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
            }
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))));
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) * uvec3(1u, 1u, 1u))))).x;
 uint workgroup_base = GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_size.w * workgroup_id;
 for(int _injected_loop_counter = _GLF_IDENTITY(1, (1) ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 1, false || (_injected_loop_counter != 1))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && (false)), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, true && (false)), false, false))))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ((false)) && true)), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, true && (false)), false, false)))))))))))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, int(ivec3(_injected_loop_counter, 0, 0))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) ? _GLF_FUZZED(findMSB(-40864)) : _injected_loop_counter, _GLF_IDENTITY(int(int(false ? _GLF_FUZZED(findMSB(-40864)) : _injected_loop_counter)), (int(int(false ? _GLF_FUZZED(findMSB(-40864)) : _injected_loop_counter))) / 1)), _GLF_IDENTITY(_GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(false ? _GLF_FUZZED(findMSB(-40864)) : _injected_loop_counter, (false ? _GLF_FUZZED(findMSB(-40864)) : _injected_loop_counter) | (false ? _GLF_FUZZED(findMSB(-40864)) : _injected_loop_counter)), (0 ^ 0), (0 | 0))), int(_GLF_IDENTITY(int(int(ivec3(_GLF_IDENTITY(false ? _GLF_FUZZED(findMSB(-40864)) : _injected_loop_counter, _GLF_IDENTITY((false ? _GLF_FUZZED(findMSB(-40864)) : _injected_loop_counter), 0 | ((false ? _GLF_FUZZED(findMSB(-40864)) : _injected_loop_counter))) | (false ? _GLF_FUZZED(findMSB(-40864)) : _injected_loop_counter)), (0 ^ 0), (0 | 0)))), clamp(int(int(ivec3(_GLF_IDENTITY(false ? _GLF_FUZZED(findMSB(-40864)) : _injected_loop_counter, (false ? _GLF_FUZZED(findMSB(-40864)) : _injected_loop_counter) | (false ? _GLF_FUZZED(findMSB(-40864)) : _injected_loop_counter)), (0 ^ 0), (0 | 0)))), int(int(ivec3(_GLF_IDENTITY(false ? _GLF_FUZZED(findMSB(-40864)) : _injected_loop_counter, (false ? _GLF_FUZZED(findMSB(-40864)) : _injected_loop_counter) | (false ? _GLF_FUZZED(findMSB(-40864)) : _injected_loop_counter)), (0 ^ 0), (0 | 0)))), int(int(ivec3(_GLF_IDENTITY(false ? _GLF_FUZZED(findMSB(-40864)) : _injected_loop_counter, (false ? _GLF_FUZZED(findMSB(-40864)) : _injected_loop_counter) | _GLF_IDENTITY((false ? _GLF_FUZZED(findMSB(-40864)) : _injected_loop_counter), (_GLF_IDENTITY((false ? _GLF_FUZZED(findMSB(-40864)) : _injected_loop_counter), ((false ? _GLF_FUZZED(findMSB(-40864)) : _injected_loop_counter)) | 0)) | 0)), (0 ^ 0), (0 | 0)))))))), max(_GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(false ? _GLF_FUZZED(findMSB(-40864)) : _injected_loop_counter, (false ? _GLF_FUZZED(findMSB(-40864)) : _injected_loop_counter) | (false ? _GLF_FUZZED(findMSB(-40864)) : _injected_loop_counter)), (0 ^ 0), (0 | 0))), int(_GLF_IDENTITY(int(int(ivec3(_GLF_IDENTITY(false ? _GLF_FUZZED(findMSB(-40864)) : _injected_loop_counter, (false ? _GLF_FUZZED(findMSB(-40864)) : _injected_loop_counter) | (false ? _GLF_FUZZED(findMSB(-40864)) : _injected_loop_counter)), _GLF_IDENTITY((0 ^ 0), ((0 ^ 0)) | ((0 ^ 0))), (_GLF_IDENTITY(0 | 0, (0 | 0) << 0))))), clamp(int(int(ivec3(_GLF_IDENTITY(false ? _GLF_FUZZED(findMSB(-40864)) : _injected_loop_counter, (_GLF_IDENTITY(false ? _GLF_FUZZED(findMSB(-40864)) : _injected_loop_counter, clamp(false ? _GLF_FUZZED(findMSB(-40864)) : _injected_loop_counter, false ? _GLF_FUZZED(findMSB(-40864)) : _injected_loop_counter, false ? _GLF_FUZZED(findMSB(-40864)) : _injected_loop_counter))) | (false ? _GLF_FUZZED(findMSB(-40864)) : _injected_loop_counter)), (0 ^ 0), (0 | 0)))), int(int(ivec3(_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(findMSB(-40864)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-34558) : _GLF_FUZZED(findMSB(-40864)))) : _injected_loop_counter, _GLF_IDENTITY((false ? _GLF_FUZZED(findMSB(-40864)) : _injected_loop_counter) | (false ? _GLF_FUZZED(findMSB(-40864)) : _injected_loop_counter), ((false ? _GLF_FUZZED(findMSB(-40864)) : _injected_loop_counter) | (false ? _GLF_FUZZED(findMSB(-40864)) : _injected_loop_counter)) ^ 0)), (0 ^ 0), (0 | 0)))), int(int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(findMSB(-40864)) : _injected_loop_counter, (false ? _GLF_FUZZED(findMSB(-40864)) : _injected_loop_counter) | (false ? _GLF_FUZZED(findMSB(-40864)) : _injected_loop_counter)), int(int(_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(findMSB(-40864)) : _injected_loop_counter, (false ? _GLF_FUZZED(findMSB(-40864)) : _injected_loop_counter) | (false ? _GLF_FUZZED(findMSB(-40864)) : _injected_loop_counter)), min(_GLF_IDENTITY(false ? _GLF_FUZZED(findMSB(-40864)) : _injected_loop_counter, (false ? _GLF_FUZZED(findMSB(-40864)) : _injected_loop_counter) | (false ? _GLF_FUZZED(findMSB(-40864)) : _injected_loop_counter)), _GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(findMSB(-40864)) : _injected_loop_counter, (false ? _GLF_FUZZED(findMSB(-40864)) : _injected_loop_counter) | (false ? _GLF_FUZZED(findMSB(-40864)) : _injected_loop_counter)), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(false ? _GLF_FUZZED(findMSB(-40864)) : _injected_loop_counter, (false ? _GLF_FUZZED(findMSB(-40864)) : _injected_loop_counter) | (false ? _GLF_FUZZED(findMSB(-40864)) : _injected_loop_counter))))))))), (0 ^ 0), (0 | 0)))))))), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(false ? _GLF_FUZZED(findMSB(-40864)) : _injected_loop_counter, (false ? _GLF_FUZZED(_GLF_IDENTITY(findMSB(-40864), (findMSB(-40864)) ^ 0)) : _injected_loop_counter) | (false ? _GLF_FUZZED(findMSB(-40864)) : _injected_loop_counter)), (0 ^ 0), (0 | 0))), int(_GLF_IDENTITY(int(int(ivec3(_GLF_IDENTITY(false ? _GLF_FUZZED(findMSB(-40864)) : _injected_loop_counter, (false ? _GLF_FUZZED(findMSB(-40864)) : _injected_loop_counter) | (false ? _GLF_FUZZED(findMSB(-40864)) : _injected_loop_counter)), (0 ^ 0), (0 | 0)))), clamp(int(int(ivec3(_GLF_IDENTITY(false ? _GLF_FUZZED(findMSB(-40864)) : _injected_loop_counter, (false ? _GLF_FUZZED(findMSB(-40864)) : _injected_loop_counter) | (false ? _GLF_FUZZED(findMSB(-40864)) : _injected_loop_counter)), (0 ^ 0), (0 | 0)))), int(int(ivec3(_GLF_IDENTITY(false ? _GLF_FUZZED(findMSB(-40864)) : _injected_loop_counter, (false ? _GLF_FUZZED(findMSB(-40864)) : _injected_loop_counter) | (false ? _GLF_FUZZED(findMSB(-40864)) : _injected_loop_counter)), (0 ^ 0), (0 | 0)))), int(int(ivec3(_GLF_IDENTITY(false ? _GLF_FUZZED(findMSB(-40864)) : _injected_loop_counter, (false ? _GLF_FUZZED(findMSB(-40864)) : _injected_loop_counter) | (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(findMSB(-40864)) : _injected_loop_counter)), (0 ^ 0), (0 | 0))))))))))))) > 0); _injected_loop_counter --)
      {
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_size.z + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_size.z, ~ (~ (subgroup_id * GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_size.z))), clamp(workgroup_base + subgroup_id * GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_size.z, workgroup_base + subgroup_id * GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_size.z, workgroup_base + subgroup_id * GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_size.z)) + ((_GLF_IDENTITY(subgroup_local_id, ~ (~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)), 0u + ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)))), 1u * (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)), 0u + ((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))) | 0u)))))))) + 1) % _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_size.z, ~ (_GLF_IDENTITY(~ (GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_size.z), clamp(~ (GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_size.z), ~ (GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_size.z), _GLF_IDENTITY(~ (GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_size.z), (false ? _GLF_FUZZED(144863u) : ~ (GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_size.z))))))));
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_size.x = next_virtual_gid;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       do
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
            {
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(false))
              {
               do
                {
                 barrier();
                }
               while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).x > injectionSwitch.y))) || false), true, true, true))))))));
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             barrier();
            }
          }
         else
          {
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))));
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), bool(bool(bool(bvec2(_GLF_DEAD(false), true)))))))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bool(! (true))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     do
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         do
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (true)) && (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), true, true)))))))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          barrier();
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | 0) > 0); _injected_loop_counter --)
  {
   do
    {
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec4(_GLF_WRAPPED_IF_FALSE(false), false, false, true)))) && true))
      {
      }
     else
      {
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(76.53) : injectionSwitch.x)) < injectionSwitch.y))), bool(bvec4(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(76.53) : injectionSwitch.x)) < injectionSwitch.y))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
        {
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec3(_GLF_WRAPPED_IF_FALSE(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       else
        {
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     else
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 barrier();
                }
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 barrier();
                }
               else
                {
                }
               if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))))))
                barrier();
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
            }
           else
            {
            }
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 ^ 1)); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
      }
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(3), int(3)))); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
          {
           barrier();
          }
         else
          {
          }
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))));
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     _GLF_IDENTITY(buf[virtual_gid] = 1, 0u + (buf[virtual_gid] = 1));
    }
   else
    {
    }
  }
 else
  {
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))))) || false, (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y))), true && ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))))) || false) || false), _GLF_IDENTITY(true, (true) || false) && (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false, true && (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / sqrt(vec2(1.0, 1.0))).x > injectionSwitch.y))), bool(bvec2((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / sqrt(vec2(1.0, 1.0))).x > injectionSwitch.y))), false))), false || (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true && ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-461.287, 7.3)), clamp(_GLF_FUZZED(vec2(-461.287, 7.3)), _GLF_IDENTITY(_GLF_FUZZED(vec2(-461.287, 7.3)), vec2(1.0, 1.0) * (_GLF_FUZZED(vec2(-461.287, 7.3)))), _GLF_IDENTITY(_GLF_FUZZED(vec2(-461.287, 7.3)), (true ? _GLF_FUZZED(vec2(-461.287, 7.3)) : _GLF_FUZZED(injectionSwitch))))) : injectionSwitch)).x > injectionSwitch.y)))), (true && ((_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-461.287, 7.3)) : injectionSwitch)).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-461.287, 7.3)) : injectionSwitch)).x > injectionSwitch.y)) || false))))) || false)))) || false))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y))))))))) || false, true && (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false, true && (_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / sqrt(_GLF_IDENTITY(vec2(1.0, 1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? vec2(1.0, 1.0) : _GLF_FUZZED(vec2(8193.1165, 4558.6290)))))).x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(-3070.4662) : injectionSwitch[1])))).y))), false || (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-461.287, 7.3)) : injectionSwitch)).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-461.287, 7.3)) : injectionSwitch)).x, 1.0 * (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-461.287, 7.3)) : injectionSwitch)).x)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-461.287, 7.3)) : injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-461.287, 7.3)) : injectionSwitch)).x)) > injectionSwitch.y))))))) || _GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y))))))))) || false, true && (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false, true && (_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / sqrt(_GLF_IDENTITY(vec2(1.0, 1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? vec2(1.0, 1.0) : _GLF_FUZZED(vec2(8193.1165, 4558.6290)))))).x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(-3070.4662) : injectionSwitch[1])))).y))), false || (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-461.287, 7.3)) : injectionSwitch)).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-461.287, 7.3)) : injectionSwitch)).x, 1.0 * (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-461.287, 7.3)) : injectionSwitch)).x)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-461.287, 7.3)) : injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-461.287, 7.3)) : injectionSwitch)).x)) > injectionSwitch.y))))))) || _GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), true && (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || false)) && true))), false || (_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (false))), (injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x < injectionSwitch.y), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x < injectionSwitch.y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x < injectionSwitch.y)), ! (! (! ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x < injectionSwitch.y)))))))))) && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), injectionSwitch.y))))))))))) || false, true && (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))))) || false, true && (_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / sqrt(_GLF_IDENTITY(vec2(1.0, 1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? vec2(1.0, 1.0) : _GLF_FUZZED(vec2(8193.1165, 4558.6290)))))).x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(-3070.4662) : injectionSwitch[1])))).y))), false || (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, false || (true)) && ((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-461.287, 7.3)) : injectionSwitch)).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-461.287, 7.3)) : injectionSwitch)).x, 1.0 * (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-461.287, 7.3)) : injectionSwitch)).x)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-461.287, 7.3)) : injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-461.287, 7.3)) : injectionSwitch)).x)) > injectionSwitch.y))))))) || _GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))) && true))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, true)))) || false), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), false || _GLF_IDENTITY((_GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), true && ((_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), ! (! (! (! ((injectionSwitch.x > injectionSwitch.y)))))))))))), ((_GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), true && ((_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))) || false, true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(vec4(539.795, 9.5, -4.3, 84.20)[1]) : injectionSwitch.y))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))))), true && ((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(abs(vec2(90.25, 743.628))) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0)), (false ? _GLF_FUZZED(injectionSwitch) : vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0))))))).x, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(abs(vec2(90.25, 743.628))) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0)), (false ? _GLF_FUZZED(injectionSwitch) : vec2(mat4x2(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0))))))).x) - 0.0) > injectionSwitch.y, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(abs(vec2(90.25, 743.628))) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0)), (false ? _GLF_FUZZED(injectionSwitch) : vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0))))))).x, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(abs(vec2(90.25, 743.628))) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0)), (false ? _GLF_FUZZED(injectionSwitch) : vec2(mat4x2(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0))))))).x) - 0.0) > injectionSwitch.y)))))))))) || _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), ! (! (bool(false))))) && true)), bool(bvec2(bool(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), ! (! (bool(false))))) && true)), false))))))), true && (_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(sqrt(vec2(1.0, 1.0)), min(_GLF_IDENTITY(sqrt(vec2(1.0, 1.0)), vec2(mat3x4(sqrt(vec2(1.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))), sqrt(vec2(1.0, 1.0))))).x > injectionSwitch.y))), false || (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-461.287, 7.3)) : injectionSwitch)).x > injectionSwitch.y), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (true ? mat2(1.0) * (injectionSwitch) : _GLF_FUZZED(injectionSwitch))), mat2(1.0) * (injectionSwitch)))), (false ? _GLF_FUZZED(vec2(-461.287, 7.3)) : injectionSwitch)).x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) || false))), true && ((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (true))))) && ((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), false || (! (! (false)))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), false || (! (! (false)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), false || (! (! (false)))))))), (_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), false || (! (! (false))))))), (_GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), false || (! (! (false))))))), bool(bvec3((_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), false || (! (! (false))))))), true, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)) && true)))) ? _GLF_FUZZED(abs(vec2(90.25, 743.628))) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0)), (false ? _GLF_FUZZED(injectionSwitch) : vec2(mat4x2(injectionSwitch, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 0.0))))))).x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(5.7, -6.9)) : injectionSwitch)), _GLF_IDENTITY((false ? _GLF_FUZZED(abs(vec2(90.25, 743.628))) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0)), (false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), max(_GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch))) : vec2(mat4x2(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(mix(-5.7, -993.786, -7.3)))))))))), (_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)) ? (false ? _GLF_FUZZED(abs(vec2(90.25, 743.628))) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec4(0.0, 1.0, 1.0, 0.0)), max(float(vec4(0.0, 1.0, 1.0, 0.0)), float(vec4(0.0, 1.0, 1.0, 0.0))))), 1.0, 0.0, 1.0, 0.0)), (false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), max(_GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch))) : vec2(mat4x2(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(mix(-5.7, -993.786, -7.3)))))))))) : _GLF_FUZZED((- injectionSwitch))))).x) - 0.0) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(injectionSwitch, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(vec3(-41.92, -1.2, 782.076).r))), 0.0, 1.0, 1.0, determinant(mat2(1.0, log(1.0), 0.0, 1.0)), 0.0, 1.0, 1.0, sin(0.0), 1.0, 0.0)), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(vec2(mat4(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, determinant(mat2(1.0, log(1.0), 0.0, 1.0)), 0.0, 1.0, 1.0, sin(0.0), 1.0, 0.0)), clamp(vec2(mat4(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, determinant(mat2(1.0, log(1.0), 0.0, 1.0)), 0.0, 1.0, 1.0, sin(0.0), 1.0, 0.0)), vec2(mat4(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, determinant(mat2(1.0, log(1.0), 0.0, 1.0)), 0.0, 1.0, 1.0, sin(0.0), 1.0, 0.0)), vec2(mat4(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, determinant(mat2(1.0, log(1.0), 0.0, 1.0)), 0.0, 1.0, 1.0, sin(0.0), 1.0, 0.0))))))).y))))))) || _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(false, bool(bool(false))))), true && (_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / sqrt(vec2(1.0, 1.0))).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / sqrt(vec2(1.0, 1.0))).x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))), min(vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))), vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))))))).y)))))), false || (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && _GLF_IDENTITY(((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(vec2(-461.287, 7.3)) : injectionSwitch)).x > injectionSwitch.y)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(vec2(-461.287, 7.3)) : injectionSwitch)).x > injectionSwitch.y)))), bool(bvec4(_GLF_IDENTITY(((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(vec2(-461.287, 7.3)) : injectionSwitch)).x > injectionSwitch.y)))), bool(bvec4(((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(vec2(-461.287, 7.3)) : injectionSwitch)).x > injectionSwitch.y)))), false, false, false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), _GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(vec2(-461.287, 7.3)) : injectionSwitch)).x > injectionSwitch.y)))), bool(bvec4(_GLF_IDENTITY(((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(vec2(-461.287, 7.3)) : injectionSwitch)).x > injectionSwitch.y)))), bool(bvec4(((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(vec2(-461.287, 7.3)) : injectionSwitch)).x > injectionSwitch.y)))), false, false, false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(bool(bvec2(bool(_GLF_IDENTITY(((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(vec2(-461.287, 7.3)) : injectionSwitch)).x > injectionSwitch.y)))), bool(bvec4(_GLF_IDENTITY(((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(vec2(-461.287, 7.3)) : injectionSwitch)).x > injectionSwitch.y)))), bool(bvec4(((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(vec2(-461.287, 7.3)) : injectionSwitch)).x > injectionSwitch.y)))), false, false, false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), bool(bvec4(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(vec2(-461.287, 7.3)) : injectionSwitch)).x > injectionSwitch.y)))), bool(bvec4(_GLF_IDENTITY(((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(vec2(-461.287, 7.3)) : injectionSwitch)).x > injectionSwitch.y)))), bool(bvec4(((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(vec2(-461.287, 7.3)) : injectionSwitch)).x > injectionSwitch.y)))), false, false, false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), _GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(vec2(-461.287, 7.3)) : injectionSwitch)).x > injectionSwitch.y)))), bool(bvec4(_GLF_IDENTITY(((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(vec2(-461.287, 7.3)) : injectionSwitch)).x > injectionSwitch.y)))), bool(bvec4(((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(vec2(-461.287, 7.3)) : injectionSwitch)).x > injectionSwitch.y)))), false, false, false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(bool(bvec2(bool(_GLF_IDENTITY(((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(vec2(-461.287, 7.3)) : injectionSwitch)).x > injectionSwitch.y)))), bool(bvec4(_GLF_IDENTITY(((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(vec2(-461.287, 7.3)) : injectionSwitch)).x > injectionSwitch.y)))), bool(bvec4(((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(vec2(-461.287, 7.3)) : injectionSwitch)).x > injectionSwitch.y)))), false, false, false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), false, true, true))))))) || false))))))))) && true))
  {
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, true))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))));
   if(_GLF_DEAD(false))
    barrier();
  }
 if(subgroup_local_id + _GLF_IDENTITY(1, (1) ^ (0 >> _GLF_IDENTITY(int(0), int(0)))) < _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_size.z, (GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_size.z) - _GLF_IDENTITY(0u, _GLF_IDENTITY((0u), ((0u)) | (_GLF_IDENTITY((0u), ((0u)) | 0u))) | 0u)), (GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_size.z) ^ (0u << _GLF_IDENTITY(uint(3u), uint(3u)))))
  {
   int i = 0;
   atomicStore(buf[_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_size, clamp(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_size, clamp(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_size, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_size, (GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_size) ^ uvec4(0u, 0u, 0u, 0u))) << uvec4(0u, 0u, 0u, 0u)), GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_size, _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_size, clamp(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_size, GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_size, GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_size)))), GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_size, GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_size)).x], uint(2), 4, 64, 4);
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, bool(bool(false)))), (true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (_GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), true))))))))) && true))))
    {
     do
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, false, true)))));
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), true && (_GLF_WRAPPED_IF_FALSE(false)))), true && (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), true && (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && true))))))))))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       do
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     atomicStore(buf[GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_size.x], uint(2), 4, 64, 4);
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
