#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 0) uniform buf0 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))), 1.0, 1.0, sqrt(0.0), 0.0, 1.0, 1.0), transpose(transpose(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), 0.0))), 1.0, 1.0, sqrt(0.0), 0.0, 1.0, 1.0))))), _GLF_IDENTITY(_GLF_IDENTITY(vec2(mat2x4(_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))), 1.0, 1.0, sqrt(0.0), 0.0, 1.0, 1.0), transpose(transpose(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))), 1.0, 1.0, _GLF_IDENTITY(sqrt(0.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-9.7) : sqrt(0.0))), 0.0, 1.0, 1.0))))), (vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))), 1.0, 1.0, sqrt(0.0), 0.0, 1.0, 1.0), transpose(transpose(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))), 1.0, 1.0, _GLF_IDENTITY(sqrt(0.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-9.7) : sqrt(0.0))), 0.0, 1.0, 1.0)))))) + vec2(0.0, 0.0)), 0.0, 1.0, cos(0.0), 1.0, 0.0, 1.0)), (true ? vec2(mat2x4(_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))), 1.0, 1.0, sqrt(0.0), 0.0, 1.0, 1.0), transpose(transpose(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))), 1.0, 1.0, _GLF_IDENTITY(sqrt(0.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-9.7) : sqrt(0.0))), 0.0, 1.0, 1.0))))), (vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))), 1.0, 1.0, sqrt(0.0), 0.0, 1.0, 1.0), transpose(transpose(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))), 1.0, 1.0, _GLF_IDENTITY(sqrt(0.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-9.7) : sqrt(0.0))), 0.0, 1.0, 1.0)))))) + vec2(0.0, 0.0)), 0.0, 1.0, cos(0.0), 1.0, 0.0, 1.0)) : _GLF_FUZZED(injectionSwitch))), (vec2(mat2x4(vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))), 1.0, 1.0, sqrt(0.0), 0.0, 1.0, 1.0), transpose(transpose(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))), 1.0, 1.0, _GLF_IDENTITY(sqrt(0.0), min(sqrt(0.0), sqrt(0.0))), 0.0, 1.0, 1.0))))), 0.0, 1.0, cos(0.0), 1.0, 0.0, 1.0))) / vec2(1.0, 1.0)))).y))))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   for(int _injected_loop_counter = int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) - 0.0)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _GLF_IDENTITY(_injected_loop_counter --, (true ? _GLF_IDENTITY(_injected_loop_counter --, 0 ^ (_injected_loop_counter --)) : _GLF_FUZZED(findMSB(_injected_loop_counter)))))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), (_GLF_IDENTITY(int(0), int(0))) | (_GLF_IDENTITY(int(0), int(0)))))))); _injected_loop_counter --)
      {
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))), bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)))))
            {
            }
           else
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(5, _GLF_IDENTITY(int(ivec3(5, 1, 0)), int(ivec4(int(_GLF_IDENTITY(ivec3(5, 1, 0), ~ (~ (_GLF_IDENTITY(ivec3(5, 1, 0), ~ (~ (ivec3(5, 1, 0)))))))), 0, 0, (1 ^ 1)))))), _GLF_IDENTITY(int(5), int(int(int(5)))))) >> _GLF_IDENTITY(int(5), int(5))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_injected_loop_counter != ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(5, 0 + (5))), (int(_GLF_IDENTITY(5, 0 + (5)))) | (int(_GLF_IDENTITY(5, 0 + (5))))), int(5))) >> _GLF_IDENTITY(int(5), int(5))), _GLF_IDENTITY(bool(bvec4(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))), false, true, false)), bool(bvec3(_GLF_IDENTITY(bool(bvec4(_injected_loop_counter != ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (_GLF_IDENTITY(int(5), 0 | (int(5)))) >> 0), int(5))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) >> 0), int(5))), false, true, false)), bool(bvec4(bool(bvec4(_injected_loop_counter != ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), (1 << _GLF_IDENTITY(int(5), int(5))) >> int(_GLF_ZERO(0.0, injectionSwitch.x)))) >> _GLF_IDENTITY(int(5), int(5))), _GLF_IDENTITY(false, true && (false)), true, false)), false, false, true))), false, true)))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), _GLF_IDENTITY(true, false || (true))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_injected_loop_counter != (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(5), int(5))), ((0 >> _GLF_IDENTITY(int(2), int(2))) | _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (0) / 1), 0))) | ((1 << _GLF_IDENTITY(int(5), int(5))))) >> _GLF_IDENTITY(int(5), int(5))), bool(bvec4(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(_GLF_IDENTITY(int(5), max(_GLF_IDENTITY(int(5), clamp(_GLF_IDENTITY(int(5), (int(5)) << 0), int(5), int(5))), int(5))), (_GLF_IDENTITY(int(5), max(_GLF_IDENTITY(int(5), clamp(_GLF_IDENTITY(int(5), (int(5)) << 0), int(5), int(5))), int(5)))) | int(_GLF_ZERO(0.0, injectionSwitch.x))))), false, true, false))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-8.7))) < injectionSwitch.y)), true))))), bool(bvec3(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))), bool(bvec4(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), min(_GLF_IDENTITY(int(5), ~ (~ (_GLF_IDENTITY(int(5), 0 | (int(5)))))), int(5))), int(5))), false, _GLF_IDENTITY(true, (true) || false), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), min(int(5), int(5))), int(5))), bool(bvec4(_injected_loop_counter != ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(int(5), int(5))) << 0)) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_IDENTITY(int((_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(int(5), int(5))) << 0)) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (~ (int((_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(int(5), int(5))) << 0)) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(5, ~ (~ (_GLF_IDENTITY(5, int(ivec4(5, 0, 1, 1)))))), (5) / int(_GLF_ONE(1.0, injectionSwitch.y)))), int(5))))))), false, true, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), true, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY((false), true && ((false))), true, false, true))) || false)))))); _GLF_IDENTITY(_injected_loop_counter ++, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_injected_loop_counter) : _injected_loop_counter ++)))
              {
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                {
                 barrier();
                }
              }
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (true ? injectionSwitch[1] : _GLF_FUZZED(-90.04))))).x > injectionSwitch.y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = 16;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y) * 1.0)))))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) || false)))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
      }
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 ^ 1)); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (false))))) || false), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (! (! (false)))))), (! (_GLF_IDENTITY(false, ! (! (false))))) || false), false), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (false))))) || false), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (! (! (false)))))), (! (_GLF_IDENTITY(false, ! (! (false))))) || false), false), true))), false, false)))))))))
  {
  }
 else
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
    {
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY(bool(bool(_GLF_WRAPPED_IF_TRUE(true))), ! (! (bool(bool(_GLF_WRAPPED_IF_TRUE(true))))))))
      {
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), false || (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) && true))), true && (_GLF_WRAPPED_IF_TRUE(true))))
        {
         if(_GLF_DEAD(false))
          {
           do
            {
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       else
        {
        }
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), bool(bvec3(true, true, false)))))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
        }
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = int(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_IDENTITY(_GLF_FUZZED(4259.7434), clamp(_GLF_FUZZED(4259.7434), _GLF_FUZZED(4259.7434), _GLF_FUZZED(4259.7434)))), bool(false))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0))))), 0.0, 0.0)), injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), _GLF_IDENTITY((1) | (1), int(ivec4((1) | (1), 1, _GLF_IDENTITY(0, int(int(_GLF_IDENTITY(0, max(0, 0))))), 0))))); _injected_loop_counter ++)
          {
           barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               barrier();
              }
            }
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
          }
        }
      }
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), false || (bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 do
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || false) || false)))
        barrier();
       do
        {
         do
          {
           do
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               barrier();
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))));
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, max(1, 1))); _injected_loop_counter ++)
        {
         barrier();
        }
      }
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         do
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), max((_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), ((_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))) + 0.0))) - 0.0))), true)))))
                {
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                  {
                   barrier();
                  }
                }
              }
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (false) && true)))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               do
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 do
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), ~ (~ (_GLF_IDENTITY(int(0), int(0)))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                    {
                     barrier();
                    }
                   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 ^ 1)); _injected_loop_counter --)
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   barrier();
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   do
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
                      barrier();
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                   barrier();
                  }
                 do
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(false), false)), (bool(bvec2(_GLF_WRAPPED_LOOP(false), false))) || false)));
                 if(_GLF_DEAD(false))
                  barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
            }
           else
            {
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       else
        {
        }
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(5, min(5, _GLF_IDENTITY(5, ~ (~ (5)))))), int(5)))); _injected_loop_counter ++)
        {
         if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_DEAD(false)) || false))
          {
           do
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               barrier();
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0))) + (injectionSwitch.y)), 0.0 + (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, min(0.0, 0.0)))), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))), 0.0))) + (injectionSwitch.y)))), _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, injectionSwitch.y)), 0.0, 0.0), (true ? vec3(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0) : _GLF_FUZZED(vec3(-665.159, _GLF_IDENTITY(3.8, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-6.6) : 3.8)), -8.9))))), max(float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0), (true ? vec3(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(-36.15, -690.692)) : injectionSwitch)).y, injectionSwitch.y)), 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(0.0, (0.0) / _GLF_ONE(1.0, injectionSwitch.y)), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) / abs(1.0)))), determinant(mat3(sin(0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), transpose(transpose(_GLF_IDENTITY(mat3(_GLF_IDENTITY(0.0, (0.0) / _GLF_ONE(1.0, injectionSwitch.y)), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, determinant(mat3(sin(0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(mat3(mat3(_GLF_IDENTITY(mat3(_GLF_IDENTITY(0.0, (0.0) / _GLF_ONE(1.0, injectionSwitch.y)), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, determinant(mat3(sin(0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), mat3(mat3(mat3(_GLF_IDENTITY(0.0, (0.0) / _GLF_ONE(1.0, injectionSwitch.y)), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, determinant(mat3(sin(0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))))), mat3(_GLF_IDENTITY(mat4(mat3(mat3(_GLF_IDENTITY(mat3(_GLF_IDENTITY(0.0, (0.0) / _GLF_ONE(1.0, injectionSwitch.y)), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, determinant(mat3(sin(0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), mat3(mat3(mat3(_GLF_IDENTITY(0.0, (0.0) / _GLF_ONE(1.0, injectionSwitch.y)), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, determinant(mat3(sin(0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))))), (mat4(mat3(mat3(_GLF_IDENTITY(mat3(_GLF_IDENTITY(0.0, (0.0) / _GLF_ONE(1.0, injectionSwitch.y)), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, determinant(mat3(sin(0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), mat3(mat3(mat3(_GLF_IDENTITY(0.0, (0.0) / _GLF_ONE(1.0, injectionSwitch.y)), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, determinant(mat3(sin(0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))))))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))))))), float(vec4(float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(0.0, (0.0) / _GLF_ONE(1.0, injectionSwitch.y)), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, determinant(mat3(sin(0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), transpose(transpose(mat3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(float(0.0), (float(0.0)) / 1.0)))) / _GLF_ONE(1.0, injectionSwitch.y)), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, determinant(mat3(sin(0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))), 1.0, 0.0, 0.0))))) : _GLF_FUZZED(vec3(_GLF_IDENTITY(-665.159, 0.0 + (_GLF_IDENTITY(-665.159, 0.0 + (-665.159)))), 3.8, -8.9))))), float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0), (true ? vec3(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, sqrt(1.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), clamp(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), exp(0.0)), (mat4x3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, sqrt(1.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), clamp(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), exp(0.0))) * mat4(1.0)))).y, injectionSwitch.y)), 0.0, 0.0) : _GLF_FUZZED(vec3(-665.159, 3.8, -8.9))))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     do
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
     if(_GLF_DEAD(false))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   else
    {
    }
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
    }
   else
    {
    }
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((0u), min((0u), (0u))) << 0u)) + (gl_WorkGroupID)), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, _GLF_IDENTITY(0u, (0u) / 1u), _GLF_IDENTITY(0u, (0u) << 0u)) + (gl_WorkGroupID)))).x));
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
            barrier();
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
            }
           else
            {
            }
          }
         else
          {
          }
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, true))))
            barrier();
          }
        }
       do
        {
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, false)))))));
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-94.53) : _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-8.4))))) : _GLF_FUZZED(748.602))), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) * 1.0)) - 0.0)))), injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + abs(vec2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-638.404, min(-638.404, _GLF_IDENTITY(-638.404, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(-638.404, clamp(-638.404, -638.404, -638.404)) : _GLF_FUZZED(-37.72))))))), float(0.0), bool(true))), 0.0))).x)) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), 1.0 * (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) / 1.0, mix(float((injectionSwitch.y) / 1.0), float(_GLF_FUZZED(-414.676)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(float(mat3x2(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, 1.0)), clamp(float(mat3x2(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, 1.0)), float(mat3x2(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, 1.0)), float(mat3x2(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, 1.0)))), float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(float(mat3x2(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, 1.0)), clamp(float(mat3x2(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, 1.0)), float(mat3x2(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, 1.0)), float(mat3x2(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, 1.0)))), 0.0, 1.0, 0.0), (vec4(_GLF_IDENTITY(float(mat3x2(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, 1.0)), clamp(float(mat3x2(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, 1.0)), float(mat3x2(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, 1.0)), float(mat3x2(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, 1.0)))), 0.0, 1.0, 0.0)) / vec4(1.0, 1.0, 1.0, 1.0)))), float(mat2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(float(mat3x2(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, 1.0)), clamp(float(mat3x2(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, 1.0)), float(mat3x2(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, 1.0)), float(mat3x2(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, 1.0)))), float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(float(mat3x2(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, 1.0)), clamp(float(mat3x2(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, 1.0)), float(mat3x2(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, 1.0)), float(mat3x2(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, 1.0)))), 0.0, 1.0, 0.0), (vec4(_GLF_IDENTITY(float(mat3x2(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, 1.0)), clamp(float(mat3x2(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, 1.0)), float(mat3x2(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, 1.0)), float(mat3x2(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, 1.0)))), 0.0, 1.0, 0.0)) / vec4(1.0, 1.0, 1.0, 1.0)))), (_GLF_IDENTITY(_GLF_IDENTITY(float(mat3x2(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, 1.0)), clamp(float(mat3x2(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, 1.0)), float(mat3x2(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, 1.0)), float(mat3x2(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, 1.0)))), float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(float(mat3x2(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, 1.0)), clamp(float(mat3x2(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, 1.0)), float(mat3x2(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, 1.0)), float(mat3x2(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, 1.0)))), 0.0, 1.0, 0.0), (vec4(_GLF_IDENTITY(float(mat3x2(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, 1.0)), clamp(float(mat3x2(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, 1.0)), float(mat3x2(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, 1.0)), float(mat3x2(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, 1.0)))), 0.0, 1.0, 0.0)) / vec4(1.0, 1.0, 1.0, 1.0))))) * round(length(normalize(1.0)))), abs(0.0), 1.0, 1.0))))))))))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             do
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   barrier();
                  }
                 else
                  {
                  }
                }
              }
             while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false)))));
            }
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
    }
   else
    {
    }
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, uint(uvec2(workgroup_size * workgroup_id, 0u)));
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false)))), false || (bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false)))), false || (bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))))), bool(bvec2(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false)))), false || (bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))))), true)))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (false))));
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           barrier();
          }
        }
       else
        {
        }
      }
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), vec2(0.0, 0.0)))).x, injectionSwitch.x), (max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), vec2(0.0, 0.0)))).x, injectionSwitch.x)) - 0.0))), _GLF_IDENTITY(clamp(max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(ldexp(vec2(-5739.3277, 9834.8000), ivec2(69492, -39311))) : injectionSwitch)).x)))), min(clamp(max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(ldexp(vec2(-5739.3277, 9834.8000), ivec2(69492, -39311))) : injectionSwitch)).x)))), clamp(max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-102.949), _GLF_FUZZED(5.6)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(299.890), _GLF_FUZZED((+ -6010.0041))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x, max(injectionSwitch.x, injectionSwitch.x))), max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(ldexp(vec2(-5739.3277, 9834.8000), ivec2(69492, -39311))) : injectionSwitch)).x)))))))) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x3(injectionSwitch.y, _GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0)), vec3(1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, 1.0 * (0.0))), float(_GLF_FUZZED(-1.5)), bool(false))), 0.0)), dot(vec3(1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0), vec3(1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))), 0.0), vec3(length(0.0), 1.0, 0.0)), dot(vec3(0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), (dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))) - 0.0)), 0.0), vec3(length(0.0), 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-9.2)), float(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(6.6)), bool(false)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), 1.0, 1.0, 0.0, 1.0)), max(float(mat2x3(injectionSwitch.y, _GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, float(mat2x3(0.0, sqrt(1.0), 0.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0), vec3(length(0.0), 1.0, 0.0)), dot(vec3(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, float(vec4(0.0, 1.0, 0.0, tan(0.0)))), _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((-564.963 / 424.176))), float(0.0), bool(true))))))), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), _GLF_IDENTITY(vec3(1.0, 0.0, 0.0), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(mat2x3(-91.12, 9.2, -8784.0565, 53.85, 82.48, -244.340)[1]) : vec3(1.0, 0.0, 0.0), (true ? _GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(mat2x3(-91.12, 9.2, -8784.0565, 53.85, 82.48, -244.340)[1]) : vec3(1.0, 0.0, 0.0) : _GLF_FUZZED(vec3(5.7, 4808.5043, 922.561)))))))), 0.0), vec3(length(0.0), 1.0, 0.0)))), 1.0, 1.0, 0.0, 1.0)), float(mat2x3(_GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-9571.2107))), _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0), max((0.0), (0.0))) / _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))))), ((_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))))) * 1.0) / abs(cos(0.0))))), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0), vec3(length(0.0), 1.0, 0.0)), dot(vec3(0.0, _GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) / 1.0, _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY((0.0) / 1.0, float(mat2x4(_GLF_IDENTITY((0.0) / 1.0, float(mat3x2((0.0) / 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))), cos(0.0), 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0))), round(length(normalize(1.0))), abs(0.0), 1.0, 0.0, 1.0)), mix(float(_GLF_FUZZED(float(true))), float(float(mat2x3(_GLF_IDENTITY((0.0) / 1.0, float(mat2x4(_GLF_IDENTITY((0.0) / 1.0, float(mat3x2((0.0) / 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))), cos(0.0), 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0))), round(length(normalize(1.0))), abs(0.0), 1.0, 0.0, 1.0))), bool(true))))), 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0), vec3(length(0.0), 1.0, 0.0)))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(_GLF_IDENTITY(8173.8646, (false ? _GLF_FUZZED(distance(vec3(580.166, -0.3, 5342.8711), pow(vec3(5183.7578, -81.24, 5.9), vec3(2.8, 4559.7311, -89.62)))) : 8173.8646)))), float(1.0), bool(true)), max(mix(float(_GLF_FUZZED(_GLF_IDENTITY(8173.8646, (false ? _GLF_FUZZED(distance(vec3(580.166, -0.3, 5342.8711), pow(vec3(5183.7578, -81.24, 5.9), vec3(2.8, 4559.7311, -89.62)))) : 8173.8646)))), float(1.0), bool(true)), mix(float(_GLF_FUZZED(_GLF_IDENTITY(8173.8646, (false ? _GLF_FUZZED(distance(vec3(580.166, -0.3, 5342.8711), pow(vec3(5183.7578, -81.24, 5.9), vec3(2.8, 4559.7311, -89.62)))) : 8173.8646)))), float(1.0), bool(true))))), 1.0, 1.0, length(sqrt(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, 0.0 + (0.0))), float(_GLF_FUZZED(4091.0391)), bool(false))), 0.0))), 1.0, log(1.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_FUZZED(vec3(-268.368, 6.9, 27.58).x)), bool(false))), abs(0.0), 0.0), (_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(8173.8646), max(_GLF_IDENTITY(_GLF_FUZZED(8173.8646), mix(float(_GLF_FUZZED(8173.8646)), float(_GLF_FUZZED(69.68)), bool(false))), _GLF_FUZZED(8173.8646)))), float(1.0), bool(true))), 1.0, 1.0, length(sqrt(vec4(0.0, 0.0, 0.0, 0.0))), 1.0, log(1.0), 0.0, 0.0, 0.0, 1.0, abs(0.0), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(1.9)), float(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(1023.0206)), bool(false)))), bool(true)))), transpose(transpose(mat3x4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(8173.8646)), float(1.0), bool(true))), 1.0, 1.0, length(sqrt(vec4(0.0, 0.0, 0.0, 0.0))), 1.0, log(1.0), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, abs(_GLF_IDENTITY(0.0, (0.0) + log(1.0))), 0.0))))) - mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), (float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(8173.8646)), float(1.0), bool(true))), 1.0, 1.0, length(sqrt(vec4(0.0, 0.0, 0.0, 0.0))), 1.0, log(1.0), 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(mat4x3(0.0, 0.0, 1.0, 1.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0)), 0.0, 1.0, 0.0, 1.0, log(1.0), 0.0))), 0.0, 0.0)), 0.0, 1.0, abs(0.0), 0.0), (_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(8173.8646)), float(1.0), bool(true))), 1.0, 1.0, length(sqrt(vec4(0.0, 0.0, 0.0, 0.0))), 1.0, log(1.0), 0.0, 0.0, 0.0, 1.0, abs(0.0), 0.0), transpose(transpose(mat3x4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(8173.8646)), float(1.0), bool(true))), 1.0, 1.0, length(sqrt(vec4(0.0, 0.0, 0.0, 0.0))), 1.0, log(1.0), 0.0, 0.0, 0.0, 1.0, abs(0.0), 0.0))))) - mat3x4(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-301.384)), float(0.0), bool(true))), 0.0, 0.0, 0.0, 0.0)))) / 1.0)), 1.0, 0.0, 1.0)))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), vec2(0.0, 0.0)))).x, injectionSwitch.x), (max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), vec2(0.0, 0.0)))).x, injectionSwitch.x)) - 0.0))), _GLF_IDENTITY(clamp(max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(ldexp(vec2(-5739.3277, 9834.8000), ivec2(69492, -39311))) : injectionSwitch)).x)))), min(clamp(max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(ldexp(vec2(-5739.3277, 9834.8000), ivec2(69492, -39311))) : injectionSwitch)).x)))), clamp(max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-102.949), _GLF_FUZZED(5.6)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(299.890), _GLF_FUZZED((+ -6010.0041))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x, max(injectionSwitch.x, injectionSwitch.x))), max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(ldexp(vec2(-5739.3277, 9834.8000), ivec2(69492, -39311))) : injectionSwitch)).x)))))))) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x3(injectionSwitch.y, _GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0)), vec3(1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, 1.0 * (0.0))), float(_GLF_FUZZED(-1.5)), bool(false))), 0.0)), dot(vec3(1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0), vec3(1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))), 0.0), vec3(length(0.0), 1.0, 0.0)), dot(vec3(0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), (dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))) - 0.0)), 0.0), vec3(length(0.0), 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-9.2)), float(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(6.6)), bool(false)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), 1.0, 1.0, 0.0, 1.0)), max(float(mat2x3(injectionSwitch.y, _GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, float(mat2x3(0.0, sqrt(1.0), 0.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0), vec3(length(0.0), 1.0, 0.0)), dot(vec3(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, float(vec4(0.0, 1.0, 0.0, tan(0.0)))), _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((-564.963 / 424.176))), float(0.0), bool(true))))))), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), _GLF_IDENTITY(vec3(1.0, 0.0, 0.0), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(mat2x3(-91.12, 9.2, -8784.0565, 53.85, 82.48, -244.340)[1]) : vec3(1.0, 0.0, 0.0), (true ? _GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(mat2x3(-91.12, 9.2, -8784.0565, 53.85, 82.48, -244.340)[1]) : vec3(1.0, 0.0, 0.0) : _GLF_FUZZED(vec3(5.7, 4808.5043, 922.561)))))))), 0.0), vec3(length(0.0), 1.0, 0.0)))), 1.0, 1.0, 0.0, 1.0)), float(mat2x3(_GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-9571.2107))), _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0), max((0.0), (0.0))) / _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))))), ((_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))))) * 1.0) / abs(cos(0.0))))), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0), vec3(length(0.0), 1.0, 0.0)), dot(vec3(0.0, _GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) / 1.0, _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY((0.0) / 1.0, float(mat2x4(_GLF_IDENTITY((0.0) / 1.0, float(mat3x2((0.0) / 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))), cos(0.0), 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0))), round(length(normalize(1.0))), abs(0.0), 1.0, 0.0, 1.0)), mix(float(_GLF_FUZZED(float(true))), float(float(mat2x3(_GLF_IDENTITY((0.0) / 1.0, float(mat2x4(_GLF_IDENTITY((0.0) / 1.0, float(mat3x2((0.0) / 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))), cos(0.0), 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0))), round(length(normalize(1.0))), abs(0.0), 1.0, 0.0, 1.0))), bool(true))))), 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0), vec3(length(0.0), 1.0, 0.0)))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(_GLF_IDENTITY(8173.8646, (false ? _GLF_FUZZED(distance(vec3(580.166, -0.3, 5342.8711), pow(vec3(5183.7578, -81.24, 5.9), vec3(2.8, 4559.7311, -89.62)))) : 8173.8646)))), float(1.0), bool(true)), max(mix(float(_GLF_FUZZED(_GLF_IDENTITY(8173.8646, (false ? _GLF_FUZZED(distance(vec3(580.166, -0.3, 5342.8711), pow(vec3(5183.7578, -81.24, 5.9), vec3(2.8, 4559.7311, -89.62)))) : 8173.8646)))), float(1.0), bool(true)), mix(float(_GLF_FUZZED(_GLF_IDENTITY(8173.8646, (false ? _GLF_FUZZED(distance(vec3(580.166, -0.3, 5342.8711), pow(vec3(5183.7578, -81.24, 5.9), vec3(2.8, 4559.7311, -89.62)))) : 8173.8646)))), float(1.0), bool(true))))), 1.0, 1.0, length(sqrt(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, 0.0 + (0.0))), float(_GLF_FUZZED(4091.0391)), bool(false))), 0.0))), 1.0, log(1.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_FUZZED(vec3(-268.368, 6.9, 27.58).x)), bool(false))), abs(0.0), 0.0), (_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(8173.8646), max(_GLF_IDENTITY(_GLF_FUZZED(8173.8646), mix(float(_GLF_FUZZED(8173.8646)), float(_GLF_FUZZED(69.68)), bool(false))), _GLF_FUZZED(8173.8646)))), float(1.0), bool(true))), 1.0, 1.0, length(sqrt(vec4(0.0, 0.0, 0.0, 0.0))), 1.0, log(1.0), 0.0, 0.0, 0.0, 1.0, abs(0.0), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(1.9)), float(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(1023.0206)), bool(false)))), bool(true)))), transpose(transpose(mat3x4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(8173.8646)), float(1.0), bool(true))), 1.0, 1.0, length(sqrt(vec4(0.0, 0.0, 0.0, 0.0))), 1.0, log(1.0), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, abs(_GLF_IDENTITY(0.0, (0.0) + log(1.0))), 0.0))))) - mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), (float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(8173.8646)), float(1.0), bool(true))), 1.0, 1.0, length(sqrt(vec4(0.0, 0.0, 0.0, 0.0))), 1.0, log(1.0), 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(mat4x3(0.0, 0.0, 1.0, 1.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0)), 0.0, 1.0, 0.0, 1.0, log(1.0), 0.0))), 0.0, 0.0)), 0.0, 1.0, abs(0.0), 0.0), (_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(8173.8646)), float(1.0), bool(true))), 1.0, 1.0, length(sqrt(vec4(0.0, 0.0, 0.0, 0.0))), 1.0, log(1.0), 0.0, 0.0, 0.0, 1.0, abs(0.0), 0.0), transpose(transpose(mat3x4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(8173.8646)), float(1.0), bool(true))), 1.0, 1.0, length(sqrt(vec4(0.0, 0.0, 0.0, 0.0))), 1.0, log(1.0), 0.0, 0.0, 0.0, 1.0, abs(0.0), 0.0))))) - mat3x4(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-301.384)), float(0.0), bool(true))), 0.0, 0.0, 0.0, 0.0)))) / 1.0)), 1.0, 0.0, 1.0)))))), ! (! ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), vec2(0.0, 0.0)))).x, injectionSwitch.x), (max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), vec2(0.0, 0.0)))).x, injectionSwitch.x)) - 0.0))), _GLF_IDENTITY(clamp(max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(ldexp(vec2(-5739.3277, 9834.8000), ivec2(69492, -39311))) : injectionSwitch)).x)))), min(clamp(max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(ldexp(vec2(-5739.3277, 9834.8000), ivec2(69492, -39311))) : injectionSwitch)).x)))), clamp(max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-102.949), _GLF_FUZZED(5.6)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(299.890), _GLF_FUZZED((+ -6010.0041))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x, max(injectionSwitch.x, injectionSwitch.x))), max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(ldexp(vec2(-5739.3277, 9834.8000), ivec2(69492, -39311))) : injectionSwitch)).x)))))))) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x3(injectionSwitch.y, _GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0)), vec3(1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, 1.0 * (0.0))), float(_GLF_FUZZED(-1.5)), bool(false))), 0.0)), dot(vec3(1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0), vec3(1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))), 0.0), vec3(length(0.0), 1.0, 0.0)), dot(vec3(0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), (dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))) - 0.0)), 0.0), vec3(length(0.0), 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-9.2)), float(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(6.6)), bool(false)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), 1.0, 1.0, 0.0, 1.0)), max(float(mat2x3(injectionSwitch.y, _GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, float(mat2x3(0.0, sqrt(1.0), 0.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0), vec3(length(0.0), 1.0, 0.0)), dot(vec3(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, float(vec4(0.0, 1.0, 0.0, tan(0.0)))), _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((-564.963 / 424.176))), float(0.0), bool(true))))))), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), _GLF_IDENTITY(vec3(1.0, 0.0, 0.0), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(mat2x3(-91.12, 9.2, -8784.0565, 53.85, 82.48, -244.340)[1]) : vec3(1.0, 0.0, 0.0), (true ? _GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(mat2x3(-91.12, 9.2, -8784.0565, 53.85, 82.48, -244.340)[1]) : vec3(1.0, 0.0, 0.0) : _GLF_FUZZED(vec3(5.7, 4808.5043, 922.561)))))))), 0.0), vec3(length(0.0), 1.0, 0.0)))), 1.0, 1.0, 0.0, 1.0)), float(mat2x3(_GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-9571.2107))), _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0), max((0.0), (0.0))) / _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))))), ((_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))))) * 1.0) / abs(cos(0.0))))), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0), vec3(length(0.0), 1.0, 0.0)), dot(vec3(0.0, _GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) / 1.0, _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY((0.0) / 1.0, float(mat2x4(_GLF_IDENTITY((0.0) / 1.0, float(mat3x2((0.0) / 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))), cos(0.0), 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0))), round(length(normalize(1.0))), abs(0.0), 1.0, 0.0, 1.0)), mix(float(_GLF_FUZZED(float(true))), float(float(mat2x3(_GLF_IDENTITY((0.0) / 1.0, float(mat2x4(_GLF_IDENTITY((0.0) / 1.0, float(mat3x2((0.0) / 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))), cos(0.0), 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0))), round(length(normalize(1.0))), abs(0.0), 1.0, 0.0, 1.0))), bool(true))))), 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0), vec3(length(0.0), 1.0, 0.0)))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(_GLF_IDENTITY(8173.8646, (false ? _GLF_FUZZED(distance(vec3(580.166, -0.3, 5342.8711), pow(vec3(5183.7578, -81.24, 5.9), vec3(2.8, 4559.7311, -89.62)))) : 8173.8646)))), float(1.0), bool(true)), max(mix(float(_GLF_FUZZED(_GLF_IDENTITY(8173.8646, (false ? _GLF_FUZZED(distance(vec3(580.166, -0.3, 5342.8711), pow(vec3(5183.7578, -81.24, 5.9), vec3(2.8, 4559.7311, -89.62)))) : 8173.8646)))), float(1.0), bool(true)), mix(float(_GLF_FUZZED(_GLF_IDENTITY(8173.8646, (false ? _GLF_FUZZED(distance(vec3(580.166, -0.3, 5342.8711), pow(vec3(5183.7578, -81.24, 5.9), vec3(2.8, 4559.7311, -89.62)))) : 8173.8646)))), float(1.0), bool(true))))), 1.0, 1.0, length(sqrt(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, 0.0 + (0.0))), float(_GLF_FUZZED(4091.0391)), bool(false))), 0.0))), 1.0, log(1.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_FUZZED(vec3(-268.368, 6.9, 27.58).x)), bool(false))), abs(0.0), 0.0), (_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(8173.8646), max(_GLF_IDENTITY(_GLF_FUZZED(8173.8646), mix(float(_GLF_FUZZED(8173.8646)), float(_GLF_FUZZED(69.68)), bool(false))), _GLF_FUZZED(8173.8646)))), float(1.0), bool(true))), 1.0, 1.0, length(sqrt(vec4(0.0, 0.0, 0.0, 0.0))), 1.0, log(1.0), 0.0, 0.0, 0.0, 1.0, abs(0.0), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(1.9)), float(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(1023.0206)), bool(false)))), bool(true)))), transpose(transpose(mat3x4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(8173.8646)), float(1.0), bool(true))), 1.0, 1.0, length(sqrt(vec4(0.0, 0.0, 0.0, 0.0))), 1.0, log(1.0), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, abs(_GLF_IDENTITY(0.0, (0.0) + log(1.0))), 0.0))))) - mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), (float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(8173.8646)), float(1.0), bool(true))), 1.0, 1.0, length(sqrt(vec4(0.0, 0.0, 0.0, 0.0))), 1.0, log(1.0), 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(mat4x3(0.0, 0.0, 1.0, 1.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0)), 0.0, 1.0, 0.0, 1.0, log(1.0), 0.0))), 0.0, 0.0)), 0.0, 1.0, abs(0.0), 0.0), (_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(8173.8646)), float(1.0), bool(true))), 1.0, 1.0, length(sqrt(vec4(0.0, 0.0, 0.0, 0.0))), 1.0, log(1.0), 0.0, 0.0, 0.0, 1.0, abs(0.0), 0.0), transpose(transpose(mat3x4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(8173.8646)), float(1.0), bool(true))), 1.0, 1.0, length(sqrt(vec4(0.0, 0.0, 0.0, 0.0))), 1.0, log(1.0), 0.0, 0.0, 0.0, 1.0, abs(0.0), 0.0))))) - mat3x4(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-301.384)), float(0.0), bool(true))), 0.0, 0.0, 0.0, 0.0)))) / 1.0)), 1.0, 0.0, 1.0)))))))))))))))
  {
   do
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         do
          {
           if(_GLF_DEAD(false))
            barrier();
           do
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         while(_GLF_WRAPPED_LOOP(false));
         do
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && true)))
            {
             do
              {
               for(int _injected_loop_counter = _GLF_IDENTITY(0, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY((0), ((0)) | 0), ~ (~ (~ (0))))), max((_GLF_IDENTITY(~ _GLF_IDENTITY((0), ((0)) | 0), ~ (~ (~ (0))))), (_GLF_IDENTITY(~ _GLF_IDENTITY((0), ((0)) | 0), ~ (~ (~ (0)))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, int(ivec4(_GLF_IDENTITY(1, (1) - 0), 0, 1, 1)))); _injected_loop_counter ++)
                {
                 for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0)); _injected_loop_counter --)
                  {
                   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     barrier();
                    }
                  }
                }
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))) || false), (injectionSwitch.x > injectionSwitch.y))));
             if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_IDENTITY(true, false || (true))))
              {
               do
                {
                 for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))), false || (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))))) || false))); _injected_loop_counter --)
                  {
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (int(_GLF_ONE(1.0, injectionSwitch.y)) ^ 1)); _injected_loop_counter --)
                      {
                       barrier();
                      }
                    }
                   else
                    {
                    }
                  }
                }
               while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ((_GLF_IDENTITY(false, (false) && true))) || false)))));
              }
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              {
               do
                {
                 do
                  {
                   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                    }
                   else
                    {
                     barrier();
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                {
                 do
                  {
                   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_TRUE(true), false, false), bvec3(bvec3(bvec3(_GLF_WRAPPED_IF_TRUE(true), false, false)))))))
                    {
                     barrier();
                    }
                   else
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))) || false)))))
                      barrier();
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
               barrier();
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                }
               else
                {
                }
              }
             barrier();
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && true)))
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 barrier();
                }
               else
                {
                }
              }
            }
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
            }
          }
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
      }
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > ((0 >> _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), int(ivec4(int(8), ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))), (0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) * 1))), 0))))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) - 0), (int(4)) / 1)))); _injected_loop_counter --)
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))));
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), _GLF_IDENTITY(min((injectionSwitch.x), (injectionSwitch.x)), (min((injectionSwitch.x), (injectionSwitch.x))) * 1.0)) - 0.0), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x))), float(_GLF_FUZZED(28.74)), bool(false))) > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), _GLF_IDENTITY(min((injectionSwitch.x), (injectionSwitch.x)), (min((injectionSwitch.x), (injectionSwitch.x))) * 1.0)) - 0.0), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x))), float(_GLF_FUZZED(28.74)), bool(false))) > injectionSwitch.y), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))));
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      barrier();
    }
   else
    {
    }
   do
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), true && (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))))))))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             barrier();
            }
          }
        }
      }
     else
      {
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))));
   if(_GLF_DEAD(false))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size)))))) ^ 0u) + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     barrier();
    }
   else
    {
    }
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u))), clamp(subgroup_size, subgroup_size, subgroup_size)), min(subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u))), clamp(subgroup_size, subgroup_size, subgroup_size)), subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u))), clamp(subgroup_size, subgroup_size, subgroup_size)))) + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - (0u | 0u)), subgroup_local_id)) + 1), max(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - (_GLF_IDENTITY(0u | 0u, 0u + (_GLF_IDENTITY(0u | 0u, min(0u | 0u, 0u | 0u)))))), subgroup_local_id)) + 1), 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - (0u | 0u)), subgroup_local_id)) + 1, 0u ^ (_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) - _GLF_IDENTITY((0u | 0u), clamp((0u | 0u), (0u | 0u), (0u | 0u))), ((subgroup_local_id) - (0u | 0u)) - 0u)), subgroup_local_id)) + 1))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - (0u | 0u)), subgroup_local_id)) + 1), 0u ^ ((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - (0u | 0u)), subgroup_local_id), min(max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - (0u | 0u)), subgroup_local_id), _GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), min((subgroup_local_id), (subgroup_local_id))) - (0u | 0u)), subgroup_local_id), (max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - (0u | 0u)), subgroup_local_id)) * 1u)))) + 1)))) | (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - (0u | 0u)), subgroup_local_id)) + 1), ((_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((subgroup_local_id), (true ? (subgroup_local_id) : _GLF_FUZZED(virtual_gid))), 0u, 0u), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY((subgroup_local_id), (true ? (subgroup_local_id) : _GLF_FUZZED(virtual_gid))), 0u, 0u), uvec3(0u, 0u, 0u) ^ (uvec3(_GLF_IDENTITY((subgroup_local_id), (true ? (subgroup_local_id) : _GLF_FUZZED(virtual_gid))), 0u, 0u))))))) - (0u | 0u)), _GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)), ~ (~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u))))), ~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)), ~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)))))))) + 1)) - 0u))))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), _GLF_IDENTITY(0u + ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)))), (0u + ((subgroup_local_id))) * 1u)) - (0u | 0u)), subgroup_local_id)) + 1), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2((_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) ^ 0u) + ((subgroup_local_id)), (0u + ((subgroup_local_id))) * 1u)) - (_GLF_IDENTITY(0u | 0u, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u | 0u, uint(_GLF_IDENTITY(uint(0u | 0u), (uint(0u | 0u)) << 0u))), 0u, 0u), ~ (~ (uvec3(_GLF_IDENTITY(0u | 0u, uint(_GLF_IDENTITY(uint(0u | 0u), (uint(0u | 0u)) << 0u))), 0u, 0u)))))))), subgroup_local_id)) + 1), 0u), _GLF_IDENTITY(uvec2(uvec2(uvec2((_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), _GLF_IDENTITY((subgroup_local_id), _GLF_IDENTITY(0u + ((subgroup_local_id)), (0u + ((subgroup_local_id))) * 1u)) - (0u | 0u)), subgroup_local_id)) + 1), 0u))), (uvec2(uvec2(uvec2((_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), _GLF_IDENTITY(0u + ((subgroup_local_id)), (0u + ((subgroup_local_id))) * 1u)) - (0u | 0u)), subgroup_local_id)) + 1), 0u)))) - _GLF_IDENTITY(uvec2(0u, 0u), clamp(uvec2(0u, 0u), uvec2(0u, 0u), uvec2(0u, 0u)))))), (uint(_GLF_IDENTITY(uvec2((_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), _GLF_IDENTITY(0u + ((subgroup_local_id)), _GLF_IDENTITY((0u + ((subgroup_local_id))), ((0u + ((subgroup_local_id)))) | 0u) * 1u)) - (0u | 0u)), subgroup_local_id)) + 1), 0u), _GLF_IDENTITY(uvec2(uvec2(uvec2((_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), _GLF_IDENTITY(0u + ((subgroup_local_id)), (0u + ((subgroup_local_id))) * 1u)) - (0u | 0u)), subgroup_local_id)) + 1), 0u))), (uvec2(uvec2(uvec2((_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), _GLF_IDENTITY(0u + ((subgroup_local_id)), (0u + ((subgroup_local_id))) * 1u)) - (0u | 0u)), subgroup_local_id)) + 1), 0u)))) - uvec2(0u, 0u))))) >> 0u)))) % subgroup_size), 0u ^ (workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), clamp(subgroup_size, subgroup_size, subgroup_size)) + ((_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)) + 1) % subgroup_size)));
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 0, true && (_injected_loop_counter != 0))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (1 ^ 1)); _injected_loop_counter --)
        {
         barrier();
        }
      }
     for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))));
 buf[virtual_gid] = _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 | (1))) | 0))), (_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) >> 0)))) | 0))), (true ? _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(1, (1) ^ 0), 1)), (int(ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) | (1))) | (1))) ^ 0), 1))) >> 0))))), ((_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(1, (1) ^ 0), 1)), (int(ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) | (1))) | (1))) ^ 0), 1))) >> 0)))))) | (_GLF_IDENTITY((_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(1, (1) ^ 0), 1)), (int(ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) | (1))) | (1))) ^ 0), 1))) >> 0))))), int(ivec4((_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(1, (1) ^ 0), 1)), (int(ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) | (1))) | (1))) ^ 0), 1))) >> 0))))), 1, 1, int(_GLF_ONE(1.0, injectionSwitch.y))))))) | 0))) : _GLF_FUZZED(64076))) : _GLF_FUZZED(_GLF_IDENTITY(96617, (96617) / _GLF_IDENTITY(1, (1) / 1))), min(_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) >> 0)))) | 0))), (true ? _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(1, (1) ^ 0), 1)), (int(ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) | (1))) | (1))) ^ 0), 1))) >> 0))))), ((_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(1, (1) ^ 0), 1)), (int(ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) | (1))) | (1))) ^ 0), 1))) >> 0)))))) | (_GLF_IDENTITY((_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(1, (1) ^ 0), 1)), (int(ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) | (1))) | (1))) ^ 0), 1))) >> 0))))), int(ivec4((_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(1, (1) ^ 0), 1)), (int(ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) | (1))) | (1))) ^ 0), 1))) >> 0))))), 1, 1, int(_GLF_ONE(1.0, injectionSwitch.y))))))) | 0))) : _GLF_FUZZED(64076))) : _GLF_FUZZED(_GLF_IDENTITY(96617, (96617) / _GLF_IDENTITY(1, (1) / 1))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) >> 0)))) | 0))), (true ? _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(1, (1) ^ 0), 1)), (int(ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) | (1))) | (1))) ^ 0), 1))) >> 0))))), ((_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(1, (1) ^ 0), 1)), (int(ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) | (1))) | (1))) ^ 0), 1))) >> 0)))))) | (_GLF_IDENTITY((_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(1, (1) ^ 0), 1)), (int(ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) | (1))) | (1))) ^ 0), 1))) >> 0))))), int(ivec4((_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(1, (1) ^ 0), 1)), (int(ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) | (1))) | (1))) ^ 0), 1))) >> 0))))), 1, 1, int(_GLF_ONE(1.0, injectionSwitch.y))))))) | 0))) : _GLF_FUZZED(64076))) : _GLF_FUZZED(_GLF_IDENTITY(96617, (96617) / _GLF_IDENTITY(1, (1) / 1)))) | (true ? _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) >> 0)))) | 0))), (true ? _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(1, (1) ^ 0), 1)), (int(ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) | (1))) | (1))) ^ 0), 1))) >> 0))))), ((_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(1, (1) ^ 0), 1)), (int(ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) | (1))) | (1))) ^ 0), 1))) >> 0)))))) | (_GLF_IDENTITY((_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(1, (1) ^ 0), 1)), (int(ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) | (1))) | (1))) ^ 0), 1))) >> 0))))), int(ivec4((_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(1, (1) ^ 0), 1)), (int(ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) | (1))) | (1))) ^ 0), 1))) >> 0))))), 1, 1, int(_GLF_ONE(1.0, injectionSwitch.y))))))) | 0))) : _GLF_FUZZED(64076))) : _GLF_FUZZED(_GLF_IDENTITY(96617, (96617) / _GLF_IDENTITY(1, (1) / 1))))), _GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) >> 0)))) | 0))), (true ? _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(1, (1) ^ 0), 1)), (int(ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) | (1))) | (1))) ^ 0), 1))) >> 0))))), ((_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(1, (1) ^ 0), 1)), (int(ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) | (1))) | (1))) ^ 0), 1))) >> 0)))))) | (_GLF_IDENTITY((_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(1, (1) ^ 0), 1)), (int(ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) | (1))) | (1))) ^ 0), 1))) >> 0))))), int(ivec4((_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(1, (1) ^ 0), 1)), (int(ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) | (1))) | (1))) ^ 0), 1))) >> 0))))), 1, 1, int(_GLF_ONE(1.0, injectionSwitch.y))))))) | 0))) : _GLF_FUZZED(64076))) : _GLF_FUZZED(_GLF_IDENTITY(96617, (96617) / _GLF_IDENTITY(1, (1) / 1))), 0 ^ (true ? _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) >> 0)))) | 0))), (true ? _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(1, (1) ^ 0), 1)), (int(ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) | (1))) | (1))) ^ 0), 1))) >> 0))))), ((_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(1, (1) ^ 0), 1)), (int(ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) | (1))) | (1))) ^ 0), 1))) >> 0)))))) | (_GLF_IDENTITY((_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(1, (1) ^ 0), 1)), (int(ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) | (1))) | (1))) ^ 0), 1))) >> 0))))), int(ivec4((_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(1, (1) ^ 0), 1)), (int(ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) | (1))) | (1))) ^ 0), 1))) >> 0))))), 1, 1, int(_GLF_ONE(1.0, injectionSwitch.y))))))) | 0))) : _GLF_FUZZED(64076))) : _GLF_FUZZED(_GLF_IDENTITY(96617, (96617) / _GLF_IDENTITY(1, (1) / 1)))))))));
 if(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
      }
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > ((_GLF_IDENTITY(0 | 0, (_GLF_IDENTITY(0 | 0, (0 | 0) >> _GLF_IDENTITY(0, (false ? _GLF_FUZZED(65813) : 0)))) * 1)) ^ (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), clamp(int(5), _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(ivec3(int(5), 0, 1)), _GLF_IDENTITY((int(ivec3(int(5), 0, 1))) | (int(ivec3(int(5), 0, 1))), ((int(ivec3(int(5), 0, 1))) | (int(ivec3(int(5), 0, 1)))) / (1 & 1)))), _GLF_IDENTITY(int(_GLF_IDENTITY(5, (5) | 0)), _GLF_IDENTITY(int(ivec2(int(5), 1)), (false ? _GLF_FUZZED(_injected_loop_counter) : int(ivec2(int(5), 1))))))), int(5))))); _injected_loop_counter --)
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
      }
    }
   int i = 0;
   if(_GLF_DEAD(false))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   do
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
        barrier();
       do
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))), bool(bvec4(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))), ! (! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))))), true, true, _GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) || false) && (false))))))))
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, 0 + (_injected_loop_counter)) != int(_GLF_ONE(1.0, injectionSwitch.y)), ! (! (_GLF_IDENTITY(_injected_loop_counter, 0 + (_injected_loop_counter)) != int(_GLF_ONE(1.0, injectionSwitch.y)))))); _injected_loop_counter ++)
            {
             for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                      }
                     else
                      {
                      }
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       barrier();
                      }
                    }
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
                  barrier();
                }
              }
            }
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
            }
           for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(_GLF_IDENTITY(2, _GLF_IDENTITY((2) ^ 0, min((2) ^ 0, (2) ^ 0)))), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(int(2), int(ivec3(int(2), 0, 0))), _GLF_IDENTITY(0, (0) ^ 0))), (_GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(int(2), ~ (~ (_GLF_IDENTITY(int(2), ~ (~ (int(2))))))), 0)), (_GLF_IDENTITY(int(ivec2(int(2), 0)), (true ? int(ivec2(int(2), 0)) : _GLF_FUZZED(-35673)))) >> _GLF_IDENTITY(_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) ^ 0), 0, 0)), (_GLF_IDENTITY(0, _GLF_IDENTITY(clamp(_GLF_IDENTITY(0, (0) ^ 0), 0, 0), clamp(clamp(_GLF_IDENTITY(0, (0) ^ 0), 0, 0), clamp(_GLF_IDENTITY(0, _GLF_IDENTITY((0), (false ? _GLF_FUZZED(i) : (0))) ^ 0), 0, 0), clamp(_GLF_IDENTITY(0, (0) ^ 0), 0, 0))))) | (_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) ^ 0), 0, 0)))))) / 1)))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << _GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(ivec4(-5504, 15306, 86849, 42736)[3]) : 0)), 1 * (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(ivec4(-5504, 15306, 86849, 42736)[3]) : 0))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-3836.3182) : injectionSwitch.x))) - log(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(647.453)))))))); _injected_loop_counter --)
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 0, (_injected_loop_counter != 0) || false)); _GLF_IDENTITY(_injected_loop_counter --, 0 ^ (_injected_loop_counter --)))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
              }
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
            barrier();
           if(_GLF_DEAD(false))
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 barrier();
                }
              }
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (false))) || false)));
      }
     else
      {
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED((uintBitsToFloat(uvec2(111177u, 16074u)) + 20.83))), vec2(1.0, 1.0) * _GLF_IDENTITY(((true ? injectionSwitch : _GLF_FUZZED((uintBitsToFloat(uvec2(_GLF_IDENTITY(111177u, ~ (~ (111177u))), 16074u)) + 20.83)))), _GLF_IDENTITY(vec2(mat2x4(((true ? injectionSwitch : _GLF_FUZZED((uintBitsToFloat(uvec2(_GLF_IDENTITY(111177u, ~ (~ (111177u))), 16074u)) + 20.83)))), 0.0, abs(0.0), 1.0, 0.0, 0.0, 1.0)), (true ? vec2(mat2x4(((true ? injectionSwitch : _GLF_FUZZED((uintBitsToFloat(uvec2(_GLF_IDENTITY(111177u, ~ (~ (111177u))), 16074u)) + 20.83)))), 0.0, abs(0.0), 1.0, 0.0, 0.0, 1.0)) : _GLF_FUZZED(injectionSwitch)))))).x, float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED((uintBitsToFloat(uvec2(111177u, 16074u)) + 20.83))), vec2(1.0, 1.0) * _GLF_IDENTITY(((true ? injectionSwitch : _GLF_FUZZED((uintBitsToFloat(uvec2(_GLF_IDENTITY(111177u, ~ (~ (111177u))), 16074u)) + 20.83)))), _GLF_IDENTITY(vec2(mat2x4(((true ? injectionSwitch : _GLF_FUZZED((uintBitsToFloat(uvec2(_GLF_IDENTITY(111177u, ~ (~ (111177u))), 16074u)) + 20.83)))), 0.0, abs(0.0), 1.0, 0.0, 0.0, 1.0)), (true ? vec2(mat2x4(((true ? injectionSwitch : _GLF_FUZZED((uintBitsToFloat(uvec2(_GLF_IDENTITY(111177u, ~ (~ (111177u))), 16074u)) + 20.83)))), 0.0, abs(0.0), 1.0, 0.0, 0.0, 1.0)) : _GLF_FUZZED(injectionSwitch)))))).x, 0.0, 1.0), vec3(0.0, 0.0, 0.0) + (_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED((uintBitsToFloat(uvec2(111177u, 16074u)) + 20.83))), vec2(1.0, 1.0) * _GLF_IDENTITY(((true ? injectionSwitch : _GLF_FUZZED((uintBitsToFloat(uvec2(_GLF_IDENTITY(111177u, ~ (~ (111177u))), 16074u)) + 20.83)))), _GLF_IDENTITY(vec2(mat2x4(((true ? injectionSwitch : _GLF_FUZZED((uintBitsToFloat(uvec2(_GLF_IDENTITY(111177u, ~ (~ (111177u))), 16074u)) + 20.83)))), 0.0, abs(0.0), 1.0, 0.0, 0.0, 1.0)), (true ? vec2(mat2x4(((true ? injectionSwitch : _GLF_FUZZED((uintBitsToFloat(uvec2(_GLF_IDENTITY(111177u, ~ (~ (111177u))), 16074u)) + 20.83)))), 0.0, abs(0.0), 1.0, 0.0, 0.0, 1.0)) : _GLF_FUZZED(injectionSwitch)))))).x, 0.0, 1.0), (vec3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED((uintBitsToFloat(uvec2(111177u, 16074u)) + 20.83))), vec2(1.0, 1.0) * _GLF_IDENTITY(((true ? injectionSwitch : _GLF_FUZZED((uintBitsToFloat(uvec2(_GLF_IDENTITY(111177u, ~ (~ (111177u))), 16074u)) + 20.83)))), _GLF_IDENTITY(vec2(mat2x4(((true ? injectionSwitch : _GLF_FUZZED((uintBitsToFloat(uvec2(_GLF_IDENTITY(111177u, ~ (~ (111177u))), 16074u)) + 20.83)))), 0.0, abs(0.0), 1.0, 0.0, 0.0, 1.0)), (true ? vec2(mat2x4(((true ? injectionSwitch : _GLF_FUZZED((uintBitsToFloat(uvec2(_GLF_IDENTITY(111177u, ~ (~ (111177u))), 16074u)) + 20.83)))), 0.0, abs(0.0), 1.0, 0.0, 0.0, 1.0)) : _GLF_FUZZED(injectionSwitch)))))).x, 0.0, 1.0)) - vec3(0.0, 0.0, 0.0)))))) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(0.7)), bool(false))))) > injectionSwitch.y)))) && true)), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED((uintBitsToFloat(uvec2(111177u, 16074u)) + 20.83))), vec2(1.0, 1.0) * _GLF_IDENTITY(((true ? injectionSwitch : _GLF_FUZZED((uintBitsToFloat(uvec2(_GLF_IDENTITY(111177u, ~ (~ (111177u))), 16074u)) + 20.83)))), _GLF_IDENTITY(vec2(mat2x4(((true ? injectionSwitch : _GLF_FUZZED((uintBitsToFloat(uvec2(_GLF_IDENTITY(111177u, ~ (~ (111177u))), 16074u)) + 20.83)))), 0.0, abs(0.0), 1.0, 0.0, 0.0, 1.0)), (true ? vec2(mat2x4(((true ? injectionSwitch : _GLF_FUZZED((uintBitsToFloat(uvec2(_GLF_IDENTITY(111177u, ~ (~ (111177u))), 16074u)) + 20.83)))), 0.0, abs(0.0), 1.0, 0.0, 0.0, 1.0)) : _GLF_FUZZED(injectionSwitch)))))).x, float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED((uintBitsToFloat(uvec2(111177u, 16074u)) + 20.83))), vec2(1.0, 1.0) * _GLF_IDENTITY(((true ? injectionSwitch : _GLF_FUZZED((uintBitsToFloat(uvec2(_GLF_IDENTITY(111177u, ~ (~ (111177u))), 16074u)) + 20.83)))), _GLF_IDENTITY(vec2(mat2x4(((true ? injectionSwitch : _GLF_FUZZED((uintBitsToFloat(uvec2(_GLF_IDENTITY(111177u, ~ (~ (111177u))), 16074u)) + 20.83)))), 0.0, abs(0.0), 1.0, 0.0, 0.0, 1.0)), (true ? vec2(mat2x4(((true ? injectionSwitch : _GLF_FUZZED((uintBitsToFloat(uvec2(_GLF_IDENTITY(111177u, ~ (~ (111177u))), 16074u)) + 20.83)))), 0.0, abs(0.0), 1.0, 0.0, 0.0, 1.0)) : _GLF_FUZZED(injectionSwitch)))))).x, 0.0, 1.0), vec3(0.0, 0.0, 0.0) + (_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED((uintBitsToFloat(uvec2(111177u, 16074u)) + 20.83))), vec2(1.0, 1.0) * _GLF_IDENTITY(((true ? injectionSwitch : _GLF_FUZZED((uintBitsToFloat(uvec2(_GLF_IDENTITY(111177u, ~ (~ (111177u))), 16074u)) + 20.83)))), _GLF_IDENTITY(vec2(mat2x4(((true ? injectionSwitch : _GLF_FUZZED((uintBitsToFloat(uvec2(_GLF_IDENTITY(111177u, ~ (~ (111177u))), 16074u)) + 20.83)))), 0.0, abs(0.0), 1.0, 0.0, 0.0, 1.0)), (true ? vec2(mat2x4(((true ? injectionSwitch : _GLF_FUZZED((uintBitsToFloat(uvec2(_GLF_IDENTITY(111177u, ~ (~ (111177u))), 16074u)) + 20.83)))), 0.0, abs(0.0), 1.0, 0.0, 0.0, 1.0)) : _GLF_FUZZED(injectionSwitch)))))).x, 0.0, 1.0), (vec3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED((uintBitsToFloat(uvec2(111177u, 16074u)) + 20.83))), vec2(1.0, 1.0) * _GLF_IDENTITY(((true ? injectionSwitch : _GLF_FUZZED((uintBitsToFloat(uvec2(_GLF_IDENTITY(111177u, ~ (~ (111177u))), 16074u)) + 20.83)))), _GLF_IDENTITY(vec2(mat2x4(((true ? injectionSwitch : _GLF_FUZZED((uintBitsToFloat(uvec2(_GLF_IDENTITY(111177u, ~ (~ (111177u))), 16074u)) + 20.83)))), 0.0, abs(0.0), 1.0, 0.0, 0.0, 1.0)), (true ? vec2(mat2x4(((true ? injectionSwitch : _GLF_FUZZED((uintBitsToFloat(uvec2(_GLF_IDENTITY(111177u, ~ (~ (111177u))), 16074u)) + 20.83)))), 0.0, abs(0.0), 1.0, 0.0, 0.0, 1.0)) : _GLF_FUZZED(injectionSwitch)))))).x, 0.0, 1.0)) - vec3(0.0, 0.0, 0.0)))))) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(0.7)), bool(false))))) > injectionSwitch.y)))) && true)), true, true)), bool(_GLF_IDENTITY(bvec3(bool(bvec3((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED((uintBitsToFloat(uvec2(111177u, 16074u)) + 20.83))), vec2(1.0, 1.0) * _GLF_IDENTITY(((true ? injectionSwitch : _GLF_FUZZED((uintBitsToFloat(uvec2(_GLF_IDENTITY(111177u, ~ (~ (111177u))), 16074u)) + 20.83)))), _GLF_IDENTITY(vec2(mat2x4(((true ? injectionSwitch : _GLF_FUZZED((uintBitsToFloat(uvec2(_GLF_IDENTITY(111177u, ~ (~ (111177u))), 16074u)) + 20.83)))), 0.0, abs(0.0), 1.0, 0.0, 0.0, 1.0)), (true ? vec2(mat2x4(((true ? injectionSwitch : _GLF_FUZZED((uintBitsToFloat(uvec2(_GLF_IDENTITY(111177u, ~ (~ (111177u))), 16074u)) + 20.83)))), 0.0, abs(0.0), 1.0, 0.0, 0.0, 1.0)) : _GLF_FUZZED(injectionSwitch)))))).x, float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED((uintBitsToFloat(uvec2(111177u, 16074u)) + 20.83))), vec2(1.0, 1.0) * _GLF_IDENTITY(((true ? injectionSwitch : _GLF_FUZZED((uintBitsToFloat(uvec2(_GLF_IDENTITY(111177u, ~ (~ (111177u))), 16074u)) + 20.83)))), _GLF_IDENTITY(vec2(mat2x4(((true ? injectionSwitch : _GLF_FUZZED((uintBitsToFloat(uvec2(_GLF_IDENTITY(111177u, ~ (~ (111177u))), 16074u)) + 20.83)))), 0.0, abs(0.0), 1.0, 0.0, 0.0, 1.0)), (true ? vec2(mat2x4(((true ? injectionSwitch : _GLF_FUZZED((uintBitsToFloat(uvec2(_GLF_IDENTITY(111177u, ~ (~ (111177u))), 16074u)) + 20.83)))), 0.0, abs(0.0), 1.0, 0.0, 0.0, 1.0)) : _GLF_FUZZED(injectionSwitch)))))).x, 0.0, 1.0), vec3(0.0, 0.0, 0.0) + (_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED((uintBitsToFloat(uvec2(111177u, 16074u)) + 20.83))), vec2(1.0, 1.0) * _GLF_IDENTITY(((true ? injectionSwitch : _GLF_FUZZED((uintBitsToFloat(uvec2(_GLF_IDENTITY(111177u, ~ (~ (111177u))), 16074u)) + 20.83)))), _GLF_IDENTITY(vec2(mat2x4(((true ? injectionSwitch : _GLF_FUZZED((uintBitsToFloat(uvec2(_GLF_IDENTITY(111177u, ~ (~ (111177u))), 16074u)) + 20.83)))), 0.0, abs(0.0), 1.0, 0.0, 0.0, 1.0)), (true ? vec2(mat2x4(((true ? injectionSwitch : _GLF_FUZZED((uintBitsToFloat(uvec2(_GLF_IDENTITY(111177u, ~ (~ (111177u))), 16074u)) + 20.83)))), 0.0, abs(0.0), 1.0, 0.0, 0.0, 1.0)) : _GLF_FUZZED(injectionSwitch)))))).x, 0.0, 1.0), (vec3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED((uintBitsToFloat(uvec2(111177u, 16074u)) + 20.83))), vec2(1.0, 1.0) * _GLF_IDENTITY(((true ? injectionSwitch : _GLF_FUZZED((uintBitsToFloat(uvec2(_GLF_IDENTITY(111177u, ~ (~ (111177u))), 16074u)) + 20.83)))), _GLF_IDENTITY(vec2(mat2x4(((true ? injectionSwitch : _GLF_FUZZED((uintBitsToFloat(uvec2(_GLF_IDENTITY(111177u, ~ (~ (111177u))), 16074u)) + 20.83)))), 0.0, abs(0.0), 1.0, 0.0, 0.0, 1.0)), (true ? vec2(mat2x4(((true ? injectionSwitch : _GLF_FUZZED((uintBitsToFloat(uvec2(_GLF_IDENTITY(111177u, ~ (~ (111177u))), 16074u)) + 20.83)))), 0.0, abs(0.0), 1.0, 0.0, 0.0, 1.0)) : _GLF_FUZZED(injectionSwitch)))))).x, 0.0, 1.0)) - vec3(0.0, 0.0, 0.0)))))) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(0.7)), bool(false))))) > injectionSwitch.y)))) && true)), true, true)), true, false), bvec3(bvec3(bvec3(bool(bvec3((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED((uintBitsToFloat(uvec2(111177u, 16074u)) + 20.83))), vec2(1.0, 1.0) * _GLF_IDENTITY(((true ? injectionSwitch : _GLF_FUZZED((uintBitsToFloat(uvec2(_GLF_IDENTITY(111177u, ~ (~ (111177u))), 16074u)) + 20.83)))), _GLF_IDENTITY(vec2(mat2x4(((true ? injectionSwitch : _GLF_FUZZED((uintBitsToFloat(uvec2(_GLF_IDENTITY(111177u, ~ (~ (111177u))), 16074u)) + 20.83)))), 0.0, abs(0.0), 1.0, 0.0, 0.0, 1.0)), (true ? vec2(mat2x4(((true ? injectionSwitch : _GLF_FUZZED((uintBitsToFloat(uvec2(_GLF_IDENTITY(111177u, ~ (~ (111177u))), 16074u)) + 20.83)))), 0.0, abs(0.0), 1.0, 0.0, 0.0, 1.0)) : _GLF_FUZZED(injectionSwitch)))))).x, float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED((uintBitsToFloat(uvec2(111177u, 16074u)) + 20.83))), vec2(1.0, 1.0) * _GLF_IDENTITY(((true ? injectionSwitch : _GLF_FUZZED((uintBitsToFloat(uvec2(_GLF_IDENTITY(111177u, ~ (~ (111177u))), 16074u)) + 20.83)))), _GLF_IDENTITY(vec2(mat2x4(((true ? injectionSwitch : _GLF_FUZZED((uintBitsToFloat(uvec2(_GLF_IDENTITY(111177u, ~ (~ (111177u))), 16074u)) + 20.83)))), 0.0, abs(0.0), 1.0, 0.0, 0.0, 1.0)), (true ? vec2(mat2x4(((true ? injectionSwitch : _GLF_FUZZED((uintBitsToFloat(uvec2(_GLF_IDENTITY(111177u, ~ (~ (111177u))), 16074u)) + 20.83)))), 0.0, abs(0.0), 1.0, 0.0, 0.0, 1.0)) : _GLF_FUZZED(injectionSwitch)))))).x, 0.0, 1.0), vec3(0.0, 0.0, 0.0) + (_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED((uintBitsToFloat(uvec2(111177u, 16074u)) + 20.83))), vec2(1.0, 1.0) * _GLF_IDENTITY(((true ? injectionSwitch : _GLF_FUZZED((uintBitsToFloat(uvec2(_GLF_IDENTITY(111177u, ~ (~ (111177u))), 16074u)) + 20.83)))), _GLF_IDENTITY(vec2(mat2x4(((true ? injectionSwitch : _GLF_FUZZED((uintBitsToFloat(uvec2(_GLF_IDENTITY(111177u, ~ (~ (111177u))), 16074u)) + 20.83)))), 0.0, abs(0.0), 1.0, 0.0, 0.0, 1.0)), (true ? vec2(mat2x4(((true ? injectionSwitch : _GLF_FUZZED((uintBitsToFloat(uvec2(_GLF_IDENTITY(111177u, ~ (~ (111177u))), 16074u)) + 20.83)))), 0.0, abs(0.0), 1.0, 0.0, 0.0, 1.0)) : _GLF_FUZZED(injectionSwitch)))))).x, 0.0, 1.0), (vec3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED((uintBitsToFloat(uvec2(111177u, 16074u)) + 20.83))), vec2(1.0, 1.0) * _GLF_IDENTITY(((true ? injectionSwitch : _GLF_FUZZED((uintBitsToFloat(uvec2(_GLF_IDENTITY(111177u, ~ (~ (111177u))), 16074u)) + 20.83)))), _GLF_IDENTITY(vec2(mat2x4(((true ? injectionSwitch : _GLF_FUZZED((uintBitsToFloat(uvec2(_GLF_IDENTITY(111177u, ~ (~ (111177u))), 16074u)) + 20.83)))), 0.0, abs(0.0), 1.0, 0.0, 0.0, 1.0)), (true ? vec2(mat2x4(((true ? injectionSwitch : _GLF_FUZZED((uintBitsToFloat(uvec2(_GLF_IDENTITY(111177u, ~ (~ (111177u))), 16074u)) + 20.83)))), 0.0, abs(0.0), 1.0, 0.0, 0.0, 1.0)) : _GLF_FUZZED(injectionSwitch)))))).x, 0.0, 1.0)) - vec3(0.0, 0.0, 0.0)))))) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(0.7)), bool(false))))) > injectionSwitch.y)))) && true)), true, true)), true, false))))))) || false))))
      {
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     barrier();
    }
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < 1) || false)); _injected_loop_counter ++)
    {
     atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(2, max(2, 2))), 4, 64, 4);
    }
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, (1 ^ 1), int(_GLF_ZERO(0.0, injectionSwitch.x))), (ivec3(1, (1 ^ 1), int(_GLF_ZERO(0.0, injectionSwitch.x)))) << ivec3(0, 0, 0)))) << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), max(int(7), int(7))))), int(_GLF_ZERO(0.0, injectionSwitch.x)) | ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(7, (7) / 1)), _GLF_IDENTITY(int(7), max(int(7), int(7))))))), min(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, (1 ^ 1), int(_GLF_ZERO(0.0, injectionSwitch.x))), (ivec3(1, (1 ^ 1), int(_GLF_ZERO(0.0, injectionSwitch.x)))) << ivec3(0, 0, 0)))) << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), max(int(7), int(7))))), int(_GLF_ZERO(0.0, injectionSwitch.x)) | ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(7, (7) / 1)), _GLF_IDENTITY(int(7), max(int(7), int(7))))))), (_GLF_IDENTITY((_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, (1 ^ 1), int(_GLF_ZERO(0.0, injectionSwitch.x))), (ivec3(1, (1 ^ 1), int(_GLF_ZERO(0.0, injectionSwitch.x)))) << ivec3(0, 0, 0)))) << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), max(int(7), int(7))))), int(_GLF_ZERO(0.0, injectionSwitch.x)) | ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(7, (7) / 1)), _GLF_IDENTITY(int(7), max(int(7), int(7)))))))) ^ 0), _GLF_IDENTITY((_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, (1 ^ 1), int(_GLF_ZERO(0.0, injectionSwitch.x))), (ivec3(1, (1 ^ 1), int(_GLF_ZERO(0.0, injectionSwitch.x)))) << ivec3(0, 0, 0)))) << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), max(int(7), int(7))))), int(_GLF_ZERO(0.0, injectionSwitch.x)) | ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(7, (7) / 1)), _GLF_IDENTITY(int(7), max(int(7), int(7))))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(7), (_GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7)))) | (int(7))), int(7)), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (_GLF_IDENTITY(int(7), (int(7)) | (int(7)))) | (_GLF_IDENTITY(int(7), max(_GLF_IDENTITY(int(7), (1 | 1) * (int(7))), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7))))))))), ((_GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (_GLF_IDENTITY(int(7), (int(7)) | (int(7)))) | (_GLF_IDENTITY(int(7), max(_GLF_IDENTITY(int(7), (1 | 1) * (int(7))), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7)))))))))) / 1)))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           barrier();
          }
        }
      }
    }
   do
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(int(int(7)))), clamp(int(7), int(7), int(7)))))); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)), injectionSwitch)).y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), true, false, true)), ! (! (bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), true, false, true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), false || (bool(bvec4(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), true, false, true)), ! (! (bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), true, false, true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))))) && true))))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           do
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)), (_GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)), true && (bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))) || false))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 1.0, tan(0.0), 0.0, 1.0, 1.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0, 0.0, 0.0))))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, 0 + (_injected_loop_counter)) != (0 << _GLF_IDENTITY(int(1), int(1)))); _injected_loop_counter --)
        {
         barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
          barrier();
        }
      }
    }
   else
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(sqrt(-4.4)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), transpose(transpose(_GLF_IDENTITY(mat2(1.0), mat2(mat4x3(mat2(1.0)))))))))).x < injectionSwitch.y) || false), true))))))) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), true, false)), false || (bool(bvec3(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true), true, false)))))))
        {
         do
          {
           atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(2), max(uint(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, clamp(2, 2, 2))))) ^ _GLF_IDENTITY(0, int(int(0))))), _GLF_IDENTITY(uint(2), max(_GLF_IDENTITY(uint(2), 1u * (uint(2))), _GLF_IDENTITY(uint(2), 0u + (uint(_GLF_IDENTITY(2, ~ (~ (2)))))))))), 4, 64, 4);
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bvec2(bvec3(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), true)))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bvec2(bvec3(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), true)))))), _GLF_IDENTITY(false, bool(bool(false)))), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bvec2(bvec3(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), true)))))), _GLF_IDENTITY(false, bool(bool(false)))))))))));
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        barrier();
      }
    }
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
