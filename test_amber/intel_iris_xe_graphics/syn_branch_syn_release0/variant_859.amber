#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_3 {
 uvec2 _f0;
} ;

struct _GLF_struct_2 {
 ivec4 _f0;
 uvec4 _f1;
} ;

struct _GLF_struct_1 {
 mat4x3 _f0;
 ivec2 _f1;
} ;

struct _GLF_struct_4 {
 _GLF_struct_1 _f0;
 _GLF_struct_2 _f1;
 _GLF_struct_3 _f2;
 mat4x3 _f3;
} ;

struct _GLF_struct_0 {
 mat4 _f0;
 uint subgroup_size;
} ;

struct _GLF_struct_5 {
 _GLF_struct_0 _f0;
 _GLF_struct_4 _f1;
} ;

layout(set = 0, binding = 0) uniform buf0 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_5 _GLF_struct_replacement_5 = _GLF_struct_5(_GLF_struct_0(mat4(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x2(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 1.0, 1.0)), (_GLF_IDENTITY(true ? float(mat4x2(1.0, 1.0, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), 0.0, 1.0, 0.0, 1.0, 1.0)) : _GLF_FUZZED(4.2), (false ? _GLF_FUZZED((float(-29468))) : true ? float(mat4x2(1.0, 1.0, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), 0.0, 1.0, 0.0, 1.0, 1.0)) : _GLF_FUZZED(4.2))))))) * _GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-1.9) : 1.0)), min(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-1.9) : 1.0)), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-1.9) : 1.0)))))), 16), _GLF_struct_4(_GLF_struct_1(mat4x3(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, min(1.0, 1.0)) : _GLF_FUZZED(-8983.0599)))), ivec2(1)), _GLF_struct_2(_GLF_IDENTITY(ivec4(1), max(_GLF_IDENTITY(ivec4(1), (ivec4(1)) | (ivec4(1))), ivec4(1))), uvec4(1u)), _GLF_struct_3(uvec2(1u)), mat4x3(1.0)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), true && ((_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))), _GLF_IDENTITY(true, bool(bvec2(true, true))) && (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec3(false, _GLF_IDENTITY(true, bool(bool(true))), false)))))), _GLF_IDENTITY(true, (true) || false) && (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec3(false, true, false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec3(false, true, false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec3(false, true, false))))))))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), true && (! (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))), true && (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), false || ((_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), false || ((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), false)))))))))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), true && (bool(false)))), (bool(_GLF_IDENTITY(bool(false), true && (bool(false))))) && true)))), _GLF_IDENTITY(bool(bvec3(bool(bvec2((_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), false)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x < injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), false || (bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) < injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))))))), true)), ! (! (bool(bvec3(_GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), false)), (bool(bvec2((_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), false))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))))))))) || _GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(_GLF_IDENTITY(! (! ((false))), true && _GLF_IDENTITY((! (! ((false)))), ((! (! ((false))))) || false)), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (! ((false))), true && (! (! ((false))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(! (! ((false))), _GLF_IDENTITY(true && (! (! ((false)))), ! (! (true && (! (! ((_GLF_IDENTITY(false, ! (! (false))))))))))))), bool(bool((! (_GLF_IDENTITY(! (! ((false))), _GLF_IDENTITY(true && (! (! ((false)))), ! (! (true && (! (! ((_GLF_IDENTITY(false, ! (! (false))))))))))))))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0) : _GLF_FUZZED(-6154.9070))))), false)))), false || (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ! (_GLF_IDENTITY(! ((false)), ! (! (! ((false))))))), (_GLF_IDENTITY((false), ! (! ((false))))) || _GLF_IDENTITY(false, false || (false)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec3(! (false), false, true), bvec3(bvec3(bvec3(! (false), false, true)))))))), _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), true && (! (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))), _GLF_IDENTITY(true, false || (true)) && (! (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), true && (! (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))), true && (! (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))))))))) || _GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(! (! ((false))), true && (_GLF_IDENTITY(! (! ((false))), true && (! (! ((false)))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY((false), ! _GLF_IDENTITY((! ((false))), bool(bvec4((! ((false))), false, true, true)))), (_GLF_IDENTITY((false), _GLF_IDENTITY(! (! ((false))), ! (_GLF_IDENTITY(! (! (! ((false)))), ! (_GLF_IDENTITY(! (! (! (! ((false))))), false || (! (! (! (! ((false))))))))))))) || false))))), ! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ((false)) && true)), ! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), _GLF_IDENTITY(true && (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), true, _GLF_IDENTITY(false, (false) && true)))), (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))) || false))), bool(bvec2(true && (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec4(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false))))), false))), (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))) || false))), false)))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))) || false), bool(bvec3(false, true, false)))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, (true) && true), false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), true && (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, false)), bvec3(bvec4(bvec3(bvec3(false, true, false)), true))))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, false)), bvec3(bvec4(bvec3(bvec3(false, true, false)), true))))))), true)))))), true && (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))))))))))), _GLF_IDENTITY(true && (! (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, ! (! (true))), false))))), ! _GLF_IDENTITY((! (true && (! (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))))), true && ((! (true && (! (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))))))))))))) || _GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), false || (_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), (_GLF_IDENTITY((false), ! (! ((false))))) || false))))))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), false || (! (_GLF_IDENTITY(false, ! (! (false)))))), bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), false || (! (_GLF_IDENTITY(false, ! (! (false)))))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))) && true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true)))) && true))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * _GLF_IDENTITY(workgroup_id, 0u | (workgroup_id))) >> _GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((_GLF_IDENTITY(85286u * workgroup_id, (0u | 0u) + (_GLF_IDENTITY(85286u * workgroup_id, clamp(85286u * workgroup_id, 85286u * workgroup_id, 85286u * workgroup_id)))))) : 0u)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_IDENTITY(_GLF_FUZZED(-95.82), max(_GLF_FUZZED(-95.82), _GLF_FUZZED(-95.82))) : _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec4(! (_GLF_DEAD(false)), true, false, true)), bool(bvec2(bool(bvec4(! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), true, false, true)), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), (bool(bvec4(false, true, false, true))) && true)))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), true, false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, true))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, float(mat2x4(injectionSwitch.y, 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0, 0.0)))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_5._f0.subgroup_size, max(subgroup_id * _GLF_struct_replacement_5._f0.subgroup_size, _GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_5._f0.subgroup_size, clamp(subgroup_id * _GLF_struct_replacement_5._f0.subgroup_size, subgroup_id * _GLF_struct_replacement_5._f0.subgroup_size, subgroup_id * _GLF_struct_replacement_5._f0.subgroup_size)))) + subgroup_local_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(min(subgroup_id, subgroup_id), (min(subgroup_id, subgroup_id)) | (min(subgroup_id, subgroup_id)))) * _GLF_struct_replacement_5._f0.subgroup_size, (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(min(subgroup_id, subgroup_id), (min(subgroup_id, subgroup_id)) | (min(subgroup_id, subgroup_id)))) * _GLF_struct_replacement_5._f0.subgroup_size)) + ((subgroup_local_id + 1) % _GLF_struct_replacement_5._f0.subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 buf[virtual_gid] = 1;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec2(bool(bvec2(false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(3.4), _GLF_FUZZED(-1.3)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)), mix(vec2((mix(vec2(_GLF_FUZZED(3.4), _GLF_FUZZED(-1.3)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))[0], _GLF_FUZZED(float(10456))), vec2(_GLF_FUZZED(-58.82), (mix(vec2(_GLF_FUZZED(3.4), _GLF_FUZZED(-1.3)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))[1]), bvec2(false, true)))).x > injectionSwitch.y)), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY((-11.82 - float(-83755)), (false ? _GLF_FUZZED(-81.24) : (-11.82 - float(-83755))))), (_GLF_FUZZED((-11.82 - float(-83755)))) / 1.0)), vec2(_GLF_FUZZED(229.271), (injectionSwitch)[1]), bvec2(false, true))).y)), false), true, true)), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-647.154)), float(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED((-79.74 / -9574.6942))))), bool(true))) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))), false), _GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), bool(bool(! (! (true)))))), true)))))))))), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec2(bool(bvec2(false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(3.4), _GLF_FUZZED(-1.3)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)), mix(vec2((mix(vec2(_GLF_FUZZED(3.4), _GLF_FUZZED(-1.3)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))[0], _GLF_IDENTITY(_GLF_FUZZED(float(10456)), 0.0 + (_GLF_IDENTITY(_GLF_FUZZED(float(10456)), 1.0 * (_GLF_FUZZED(float(10456))))))), vec2(_GLF_FUZZED(-58.82), (mix(vec2(_GLF_FUZZED(3.4), _GLF_FUZZED(-1.3)), vec2((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) * vec2(1.0, 1.0)), (injectionSwitch) * mat2(1.0)))))[0], (injectionSwitch)[1]), bvec2(true, true)))[1]), bvec2(false, true)))).x > injectionSwitch.y)), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY((-11.82 - float(-83755)), (false ? _GLF_FUZZED(-81.24) : (-11.82 - float(-83755))))), (_GLF_FUZZED((-11.82 - float(-83755)))) / 1.0)), vec2(_GLF_FUZZED(229.271), (injectionSwitch)[1]), bvec2(false, true))).y)), false), true, true)), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))))), false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-647.154)), float(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED((-79.74 / _GLF_IDENTITY(-9574.6942, min(_GLF_IDENTITY(-9574.6942, mix(float(-9574.6942), float(_GLF_FUZZED(-9.0)), bool(false))), -9574.6942))))))), bool(true))) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))), false), _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(! (! (true)), (! (! (true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bool(! (! (true)))))), true))))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, true)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bvec3(true, false, false))))) && (false))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1 < _GLF_IDENTITY(_GLF_struct_replacement_5._f0.subgroup_size, (true ? _GLF_IDENTITY(_GLF_struct_replacement_5._f0.subgroup_size, 1u * (_GLF_struct_replacement_5._f0.subgroup_size)) : _GLF_FUZZED(subgroup_id))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(1.3))) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(1.3))) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) - 0.0, _GLF_IDENTITY(float(mat4((injectionSwitch.y) - 0.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, determinant(mat3(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) * _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)))))), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0)), _GLF_IDENTITY(1.0, (1.0) / _GLF_ONE(1.0, injectionSwitch.y)), 0.0, 0.0)), (float(_GLF_IDENTITY(mat4((injectionSwitch.y) - 0.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, determinant(mat3(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, _GLF_IDENTITY(1.0, float(mat2x4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, tan(0.0), 0.0))), 0.0))), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0), (true ? mat4((injectionSwitch.y) - 0.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, determinant(mat3(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, _GLF_IDENTITY(1.0, float(mat2x4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, tan(0.0), 0.0))), 0.0))), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0) : _GLF_FUZZED(mat4(-5894.7701, 6.1, -49.48, -20.99, 40.85, -196.084, -87.48, 4.7, -3000.3833, -22.27, 2.2, 2745.0076, 673.533, -3.6, 5.1, 846.976)))))) / 1.0)))))))), (bool(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(1.3))) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) - 0.0, _GLF_IDENTITY(float(mat4(_GLF_IDENTITY((injectionSwitch.y) - 0.0, clamp((injectionSwitch.y) - 0.0, (injectionSwitch.y) - 0.0, (injectionSwitch.y) - 0.0)), 1.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, determinant(mat3(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0)), (float(mat4((injectionSwitch.y) - 0.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, determinant(mat3(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0))) / 1.0))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), bvec2(bvec3(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), true))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   int i = 0;
   atomicStore(buf[next_virtual_gid], uint(2), _GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(4, ((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) >> 0))) >> _GLF_IDENTITY(int(2), int(2))) * (4)), _GLF_IDENTITY(int(ivec4(4, 0, int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, cos(0.0)), _GLF_IDENTITY(vec2(1.0, 0.0), mix(vec2((vec2(1.0, 0.0))[0], (vec2(1.0, 0.0))[1]), vec2(_GLF_FUZZED(78.33), _GLF_FUZZED(_GLF_IDENTITY(-8.3, clamp(-8.3, -8.3, -8.3)))), bvec2(false, false)))), min(dot(vec2(0.0, cos(0.0)), _GLF_IDENTITY(vec2(1.0, 0.0), mix(vec2((vec2(1.0, 0.0))[0], (vec2(1.0, 0.0))[1]), vec2(_GLF_FUZZED(78.33), _GLF_FUZZED(-8.3)), bvec2(false, false)))), dot(vec2(0.0, cos(0.0)), _GLF_IDENTITY(vec2(1.0, 0.0), mix(vec2((vec2(1.0, 0.0))[0], (vec2(1.0, 0.0))[1]), vec2(_GLF_FUZZED(78.33), _GLF_FUZZED(-8.3)), bvec2(false, false)))))), dot(vec2(0.0, cos(0.0)), vec2(1.0, 0.0))) + (_GLF_ONE(1.0, injectionSwitch.y)), max(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, cos(0.0)), _GLF_IDENTITY(vec2(1.0, 0.0), mix(vec2((vec2(1.0, 0.0))[0], (vec2(1.0, 0.0))[1]), vec2(_GLF_FUZZED(78.33), _GLF_FUZZED(_GLF_IDENTITY(-8.3, clamp(-8.3, -8.3, -8.3)))), bvec2(false, false)))), min(dot(vec2(0.0, cos(0.0)), _GLF_IDENTITY(vec2(1.0, 0.0), mix(vec2((vec2(1.0, 0.0))[0], (vec2(1.0, 0.0))[1]), vec2(_GLF_FUZZED(78.33), _GLF_FUZZED(-8.3)), bvec2(false, false)))), dot(vec2(0.0, cos(0.0)), _GLF_IDENTITY(vec2(1.0, 0.0), mix(vec2((vec2(1.0, 0.0))[0], (vec2(1.0, 0.0))[1]), vec2(_GLF_FUZZED(78.33), _GLF_FUZZED(-8.3)), bvec2(false, false)))))), dot(vec2(0.0, cos(0.0)), vec2(1.0, 0.0))) + (_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, cos(0.0)), _GLF_IDENTITY(vec2(1.0, 0.0), mix(vec2((vec2(1.0, 0.0))[0], (vec2(1.0, 0.0))[1]), vec2(_GLF_FUZZED(78.33), _GLF_FUZZED(_GLF_IDENTITY(-8.3, clamp(-8.3, -8.3, -8.3)))), bvec2(false, false)))), min(dot(vec2(0.0, cos(0.0)), _GLF_IDENTITY(vec2(1.0, 0.0), mix(vec2((vec2(1.0, 0.0))[0], (vec2(1.0, 0.0))[1]), vec2(_GLF_FUZZED(78.33), _GLF_FUZZED(-8.3)), bvec2(false, false)))), dot(vec2(0.0, cos(0.0)), _GLF_IDENTITY(vec2(1.0, 0.0), mix(vec2((vec2(1.0, 0.0))[0], (vec2(1.0, 0.0))[1]), vec2(_GLF_FUZZED(78.33), _GLF_FUZZED(-8.3)), bvec2(false, false)))))), dot(vec2(0.0, cos(0.0)), vec2(1.0, 0.0))) + (_GLF_ONE(1.0, injectionSwitch.y)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, cos(0.0)), _GLF_IDENTITY(vec2(1.0, 0.0), mix(vec2((vec2(1.0, 0.0))[0], (vec2(1.0, 0.0))[1]), vec2(_GLF_FUZZED(78.33), _GLF_FUZZED(_GLF_IDENTITY(-8.3, clamp(-8.3, -8.3, -8.3)))), bvec2(false, false)))), min(dot(vec2(0.0, cos(0.0)), _GLF_IDENTITY(vec2(1.0, 0.0), mix(vec2((vec2(1.0, 0.0))[0], (vec2(1.0, 0.0))[1]), vec2(_GLF_FUZZED(78.33), _GLF_FUZZED(-8.3)), bvec2(false, false)))), dot(vec2(0.0, cos(0.0)), _GLF_IDENTITY(vec2(1.0, 0.0), mix(vec2((vec2(1.0, 0.0))[0], (vec2(1.0, 0.0))[1]), vec2(_GLF_FUZZED(78.33), _GLF_FUZZED(-8.3)), bvec2(false, false)))))), dot(vec2(0.0, cos(0.0)), vec2(1.0, 0.0))) + (_GLF_ONE(1.0, injectionSwitch.y))), float(_GLF_FUZZED(-3066.2789)), bool(false))))))), 0)), ~ (~ (int(ivec4(4, 0, int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, cos(0.0)), _GLF_IDENTITY(vec2(1.0, 0.0), mix(vec2((vec2(1.0, 0.0))[0], (vec2(1.0, 0.0))[1]), vec2(_GLF_FUZZED(78.33), _GLF_FUZZED(_GLF_IDENTITY(-8.3, clamp(-8.3, -8.3, -8.3)))), bvec2(false, false)))), min(dot(vec2(0.0, cos(0.0)), _GLF_IDENTITY(vec2(1.0, 0.0), mix(vec2((vec2(1.0, 0.0))[0], (vec2(1.0, 0.0))[1]), vec2(_GLF_FUZZED(78.33), _GLF_FUZZED(-8.3)), bvec2(false, false)))), dot(vec2(0.0, cos(0.0)), _GLF_IDENTITY(vec2(1.0, 0.0), mix(vec2((vec2(1.0, 0.0))[0], (vec2(1.0, 0.0))[1]), vec2(_GLF_FUZZED(78.33), _GLF_FUZZED(-8.3)), bvec2(false, false)))))), dot(vec2(0.0, cos(0.0)), vec2(1.0, 0.0))) + (_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, cos(0.0)), _GLF_IDENTITY(vec2(1.0, 0.0), mix(vec2((vec2(1.0, 0.0))[0], (vec2(1.0, 0.0))[1]), vec2(_GLF_FUZZED(_GLF_IDENTITY(78.33, (78.33) / cos(0.0))), _GLF_FUZZED(_GLF_IDENTITY(-8.3, clamp(-8.3, -8.3, -8.3)))), bvec2(false, false)))), min(dot(vec2(0.0, cos(0.0)), _GLF_IDENTITY(vec2(1.0, 0.0), mix(vec2((vec2(1.0, 0.0))[0], (vec2(1.0, 0.0))[1]), vec2(_GLF_FUZZED(78.33), _GLF_FUZZED(-8.3)), bvec2(false, false)))), dot(vec2(0.0, cos(0.0)), _GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0, 0.0), mix(vec2((vec2(1.0, 0.0))[0], (vec2(1.0, 0.0))[1]), vec2(_GLF_FUZZED(78.33), _GLF_FUZZED(-8.3)), bvec2(false, false))), vec2(mat4x3(_GLF_IDENTITY(vec2(1.0, 0.0), mix(vec2((vec2(1.0, 0.0))[0], (vec2(1.0, 0.0))[1]), vec2(_GLF_FUZZED(78.33), _GLF_FUZZED(-8.3)), bvec2(false, false))), 1.0, determinant(mat4(0.0, 0.0, 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, sqrt(0.0), 0.0, 0.0)), round(length(normalize(abs(vec2(1.0, 1.0))))), 1.0, abs(1.0), 1.0, 0.0, 1.0, abs(0.0), 1.0)))))), dot(vec2(0.0, cos(0.0)), vec2(1.0, 0.0))) + (_GLF_ONE(1.0, injectionSwitch.y))) - 0.0))), 0))))))) >> (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, (1) / 1) : _GLF_FUZZED(-64095)))), (_GLF_IDENTITY(int(_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, (1) / 1) : _GLF_FUZZED(-64095)))), ~ (~ (int(_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, (1) / 1) : _GLF_FUZZED(-64095)))))))) / 1), _GLF_IDENTITY(int(1), ~ (_GLF_IDENTITY(~ (int(1)), (~ (int(1))) / 1)))))), 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), (mat2(1.0) * (injectionSwitch)) / _GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-12.69)), float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(float(_GLF_FUZZED(-12.69)), 0.0 + (_GLF_IDENTITY(float(_GLF_FUZZED(-12.69)), max(float(_GLF_FUZZED(-12.69)), float(_GLF_FUZZED(-12.69)))))), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(abs(1.0), 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(abs(1.0), 0.0, 0.0, 0.0))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), (mat2(_GLF_IDENTITY(float(_GLF_FUZZED(-12.69)), 0.0 + (_GLF_IDENTITY(float(_GLF_FUZZED(-12.69)), max(float(_GLF_FUZZED(-12.69)), float(_GLF_FUZZED(-12.69)))))), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(abs(1.0), 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(abs(1.0), 0.0, 0.0, 0.0))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x))) - mat2(0.0, 0.0, 0.0, 0.0)))), float(_GLF_IDENTITY(1.0, float(mat2x4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0)))), bool(true))), 1.0), (vec2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-12.69)), float(1.0), bool(true))), 1.0)) * mat2(1.0)))).y, _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), (mat2(1.0) * (injectionSwitch)) / _GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-12.69)), float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(float(_GLF_FUZZED(-12.69)), 0.0 + (_GLF_IDENTITY(float(_GLF_FUZZED(-12.69)), max(float(_GLF_FUZZED(-12.69)), float(_GLF_FUZZED(-12.69)))))), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(abs(1.0), 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(abs(1.0), 0.0, 0.0, 0.0))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), (mat2(_GLF_IDENTITY(float(_GLF_FUZZED(-12.69)), 0.0 + (_GLF_IDENTITY(float(_GLF_FUZZED(-12.69)), max(float(_GLF_FUZZED(-12.69)), float(_GLF_FUZZED(-12.69)))))), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(abs(1.0), 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(abs(1.0), 0.0, 0.0, 0.0))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x))) - mat2(0.0, 0.0, 0.0, 0.0)))), float(_GLF_IDENTITY(1.0, float(mat2x4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0)))), bool(true))), 1.0), (vec2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-12.69)), float(1.0), bool(true))), 1.0)) * mat2(1.0)))).y, 0.0, 0.0, 0.0, 0.0, 1.0)), mix(float(_GLF_FUZZED((1758.6653 / 9.7))), float(float(mat2x3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), (mat2(1.0) * (injectionSwitch)) / _GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-12.69)), float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(float(_GLF_FUZZED(-12.69)), 0.0 + (_GLF_IDENTITY(float(_GLF_FUZZED(-12.69)), max(float(_GLF_FUZZED(-12.69)), float(_GLF_FUZZED(-12.69)))))), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(abs(1.0), 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(abs(1.0), 0.0, 0.0, 0.0))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), (mat2(_GLF_IDENTITY(float(_GLF_FUZZED(-12.69)), 0.0 + (_GLF_IDENTITY(float(_GLF_FUZZED(-12.69)), max(float(_GLF_FUZZED(-12.69)), float(_GLF_FUZZED(-12.69)))))), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(abs(1.0), 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(abs(1.0), 0.0, 0.0, 0.0))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x))) - mat2(0.0, 0.0, 0.0, 0.0)))), float(_GLF_IDENTITY(1.0, float(mat2x4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0)))), bool(true))), 1.0), (vec2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-12.69)), float(1.0), bool(true))), 1.0)) * mat2(1.0)))).y, 0.0, 0.0, 0.0, 0.0, 1.0))), bool(true)))), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / vec2(1.0, 1.0))) / vec2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-12.69)), float(1.0), bool(true)), mix(float(mix(float(_GLF_FUZZED(-12.69)), float(1.0), bool(true))), float(_GLF_FUZZED(vec2(4.7, 2.4).r)), bool(false)))), 1.0))).y, 0.0 + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / vec2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-12.69)), float(1.0), bool(true))), 1.0))).y)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / vec2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-12.69)), float(1.0), bool(true)), mix(float(_GLF_FUZZED(float(-99860))), float(mix(float(_GLF_FUZZED(-12.69)), float(1.0), bool(true))), bool(true)))), 1.0))).y), float(mat3x4(min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0))) / vec2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-12.69)), float(1.0), bool(true))), 1.0))).y, 0.0 + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / vec2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-12.69)), float(1.0), bool(true))), 1.0))).y)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / vec2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-12.69)), float(1.0), bool(true))), 1.0)), (_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / vec2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-12.69)), float(1.0), bool(true))), 1.0))) * vec2(1.0, 1.0))).y), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), true), true, true)), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), true), true, true)), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), true), true, true)), bvec2(bvec3(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), true), true, true)), true))), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec2(bvec2(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), true), true, true)), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), true), true, true)), bvec2(bvec3(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), true), true, true)), true))), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), true), true, true)), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), true), true, true)), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true), (injectionSwitch.x > injectionSwitch.y)), true))), true), true, true)), bvec2(bvec3(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), true), true, true)), true))), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec2(bvec2(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), true), true, true)), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x2(injectionSwitch.x, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), sqrt(0.0), 0.0, 1.0, 1.0)), mix(float(_GLF_FUZZED(float(true))), float(float(mat4x2(injectionSwitch.x, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), sqrt(0.0), 0.0, 1.0, 1.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) > injectionSwitch.y)), true))), true), true, true)), bvec2(bvec3(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), true), true, true)), true))), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), true))), true), true, true)), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, bool(bvec4(true, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true), _GLF_IDENTITY(true, true && (true)), true)), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), true), true, true)), bvec2(bvec3(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))).x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), true), true, true)), true))), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec2(bvec2(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))), true), true, true)), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), true), true, true)), bvec2(bvec3(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), true), true, true)), true))), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), true))), true), true, true)), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, bool(bvec4(true, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true), _GLF_IDENTITY(true, true && (true)), true)), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), true), true, true)), bvec2(bvec3(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))).x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), true), true, true)), true))), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec2(bvec2(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))), true), true, true)), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), true), true, true)), bvec2(bvec3(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), true), true, true)), true))), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), true))), true), true, true)), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, bool(bvec4(true, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true), _GLF_IDENTITY(true, true && (true)), true)), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), true), true, true)), bvec2(bvec3(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))).x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), true), true, true)), true))), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec2(bvec2(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))), true), true, true)), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), true), true, true)), bvec2(bvec3(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), true), true, true)), true))), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), false, true))))))))) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], 1.0 * _GLF_IDENTITY(((injectionSwitch)[0]), (true ? ((injectionSwitch)[0]) : _GLF_FUZZED(-115.599)))), _GLF_FUZZED(-5137.8910)), vec2(_GLF_FUZZED(-5.7), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[1]), _GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true)))))) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(2), max(uint(2), _GLF_IDENTITY(_GLF_IDENTITY(uint(2), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(uint(2), (uint(2)) + 0u))), min(uint(2), uint(2))))), 4, _GLF_IDENTITY(64, 0 ^ (64)), 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))), _GLF_IDENTITY((_GLF_DEAD(false)) || _GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY((_GLF_DEAD(false)) || _GLF_IDENTITY(false, true && (false)), ((_GLF_DEAD(false)) || _GLF_IDENTITY(false, true && (false))) || false)) && true)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), _GLF_IDENTITY((injectionSwitch), vec2(vec2(_GLF_IDENTITY((injectionSwitch), vec2(_GLF_IDENTITY(mat2((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-9.8), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_FUZZED(3.8)), float((injectionSwitch)[0]), bool(true))), _GLF_FUZZED(1377.8289)), bvec2(true, false)))), 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0)), mat2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (mat2((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-9.8), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_FUZZED(3.8)), float((injectionSwitch)[0]), bool(true))), _GLF_FUZZED(1377.8289)), bvec2(true, false)))), 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))))))))))) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), _GLF_IDENTITY((injectionSwitch), vec2(vec2(_GLF_IDENTITY((injectionSwitch), vec2(mat2((injectionSwitch), 0.0, 0.0)))))))) - vec2(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) - 0.0))).x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(exp2(22.09)) : _GLF_ZERO(0.0, injectionSwitch.x))))).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), _GLF_IDENTITY((injectionSwitch), vec2(vec2(_GLF_IDENTITY((injectionSwitch), vec2(mat2((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))), 0.0, 0.0)))))))) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).x > injectionSwitch.y))))))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), _GLF_IDENTITY((injectionSwitch), vec2(vec2(_GLF_IDENTITY((injectionSwitch), vec2(mat2((injectionSwitch), 0.0, 0.0)))))))) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), max((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * abs(vec2(1.0, 1.0)))), _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY((injectionSwitch), vec2(mat2((injectionSwitch), 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0))) - 0.0)))))), mat2(1.0) * (vec2(vec2(_GLF_IDENTITY((injectionSwitch), vec2(mat2((injectionSwitch), 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0))) - 0.0))))))))))) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), _GLF_IDENTITY((injectionSwitch), vec2(vec2(_GLF_IDENTITY((injectionSwitch), vec2(mat2((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0), mat2(1.0) * (vec2(1.0, 1.0))) * (injectionSwitch))), 0.0, 0.0)))))))) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).x > injectionSwitch.y))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
