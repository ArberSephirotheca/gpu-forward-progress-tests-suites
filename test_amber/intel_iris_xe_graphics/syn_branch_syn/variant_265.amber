#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_23 {
 mat4x2 _f0;
 uint _f1;
} ;

struct _GLF_struct_21 {
 mat4 _f0;
 mat3 _f1;
} ;

struct _GLF_struct_22 {
 _GLF_struct_21 _f0;
 vec3 _f1;
} ;

struct _GLF_struct_19 {
 vec2 _f0;
 mat2x4 _f1;
} ;

struct _GLF_struct_18 {
 bool _f0;
 mat4x3 _f1;
 mat3x2 _f2;
 uvec4 _f3;
 uint _f4;
 vec4 _f5;
} ;

struct _GLF_struct_17 {
 vec3 _f0;
 mat4x2 _f1;
 float _f2;
 mat4 _f3;
 vec4 _f4;
 int _f5;
} ;

struct _GLF_struct_20 {
 _GLF_struct_17 _f0;
 _GLF_struct_18 _f1;
 _GLF_struct_19 _f2;
 mat4x2 _f3;
} ;

struct _GLF_struct_15 {
 mat2x3 _f0;
 bvec4 _f1;
} ;

struct _GLF_struct_16 {
 _GLF_struct_15 _f0;
 mat3x2 _f1;
 uvec3 _f2;
 bvec4 _f3;
} ;

struct _GLF_struct_24 {
 uint workgroup_size;
 _GLF_struct_16 _f0;
 _GLF_struct_20 _f1;
 _GLF_struct_22 _f2;
 mat4 _f3;
 _GLF_struct_23 _f4;
 vec4 _f5;
 uvec4 _f6;
} ;

struct _GLF_struct_12 {
 int _f0;
 mat2x4 _f1;
 mat4 _f2;
 mat3x4 _f3;
} ;

struct _GLF_struct_11 {
 mat3x2 _f0;
 uvec2 _f1;
 vec4 _f2;
 uvec2 _f3;
 ivec3 _f4;
} ;

struct _GLF_struct_10 {
 mat3 _f0;
} ;

struct _GLF_struct_13 {
 _GLF_struct_10 _f0;
 _GLF_struct_11 _f1;
 float _f2;
 _GLF_struct_12 _f3;
 mat3x2 _f4;
 mat2x4 _f5;
 mat2x4 _f6;
} ;

struct _GLF_struct_9 {
 mat2x3 _f0;
 mat3 _f1;
 ivec2 _f2;
} ;

struct _GLF_struct_7 {
 ivec2 _f0;
 int _f1;
 mat2 _f2;
 float _f3;
} ;

struct _GLF_struct_6 {
 mat4x2 _f0;
 mat4 _f1;
 mat4 _f2;
 vec3 _f3;
 ivec4 _f4;
 mat2x4 _f5;
 bool _f6;
} ;

struct _GLF_struct_8 {
 _GLF_struct_6 _f0;
 vec2 _f1;
 uint workgroup_id;
 mat2x4 _f2;
 _GLF_struct_7 _f3;
 mat3x2 _f4;
} ;

struct _GLF_struct_5 {
 mat2x3 _f0;
 ivec3 _f1;
} ;

struct _GLF_struct_4 {
 ivec4 _f0;
} ;

struct _GLF_struct_14 {
 bvec2 _f0;
 _GLF_struct_4 _f1;
 _GLF_struct_5 _f2;
 bool _f3;
 _GLF_struct_8 _f4;
 _GLF_struct_9 _f5;
 _GLF_struct_13 _f6;
} ;

struct _GLF_struct_1 {
 bvec2 _f0;
 uint _f1;
 bvec3 _f2;
 mat2x4 _f3;
 uvec4 _f4;
} ;

struct _GLF_struct_0 {
 bool _f0;
} ;

struct _GLF_struct_2 {
 _GLF_struct_0 _f0;
 int _f1;
 _GLF_struct_1 _f2;
 mat3x4 _f3;
} ;

struct _GLF_struct_3 {
 _GLF_struct_2 _f0;
 uint workgroup_base;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) || false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, cos(log(vec2(1.0, 1.0))) * (injectionSwitch)).x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
    return;
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec2(! (_GLF_DEAD(false)), true))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))), bool(bvec3(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))), false, true)))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(2.0)), bool(false)))) + log(1.0))), ((injectionSwitch.x > injectionSwitch.y)) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y), ((injectionSwitch.x > injectionSwitch.y)) && true), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, tan(0.0), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, log(1.0)), vec2(0.0, 1.0)), dot(vec2(1.0, log(1.0)), vec2(0.0, 1.0)))))) > injectionSwitch.y))))))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec3(bool(false), true, true)))))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(5966.5910)), bool(false)), (true ? mix(float(injectionSwitch.y), float(_GLF_FUZZED(5966.5910)), bool(false)) : _GLF_FUZZED(-4.0)))))), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true), false)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_IDENTITY(true, false || (true))))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (injectionSwitch))[1])), vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0, sin(0.0), 1.0, cos(0.0), 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(0.5))), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(5237.2984))), 1.0, abs(0.0)))).y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 _GLF_struct_24 _GLF_struct_replacement_24 = _GLF_struct_24(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), (gl_WorkGroupSize) >> (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) >> (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u)))) / uvec3(1u, 1u, 1u), uvec3(0u, 0u, 0u) ^ ((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) >> (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u)))) / uvec3(1u, 1u, 1u)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) >> (uvec3(0u, 0u, 0u) ^ uvec3(_GLF_IDENTITY(0u, 0u | (0u)), 0u, 0u))), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) >> (uvec3(0u, 0u, 0u) ^ uvec3(_GLF_IDENTITY(0u, 0u | (0u)), 0u, 0u))), 0u), ~ (_GLF_IDENTITY(~ (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) >> (uvec3(0u, 0u, 0u) ^ uvec3(_GLF_IDENTITY(0u, 0u | (0u)), 0u, 0u))), (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) >> (uvec3(0u, 0u, 0u) ^ uvec3(_GLF_IDENTITY(0u, 0u | (0u)), 0u, 0u)))) ^ uvec3(0u, 0u, 0u)), 0u)), (~ (uvec4(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) >> (uvec3(0u, 0u, 0u) ^ uvec3(_GLF_IDENTITY(0u, 0u | (0u)), 0u, _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), 0u | (uint(0u)))))))), 0u))) | (~ (uvec4(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) >> (uvec3(0u, 0u, 0u) ^ uvec3(_GLF_IDENTITY(0u, 0u | (0u)), 0u, 0u))), 0u))))))), (true ? uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) >> (uvec3(0u, 0u, 0u) ^ uvec3(_GLF_IDENTITY(0u, 0u | (0u)), 0u, 0u))), 0u), ~ (_GLF_IDENTITY(~ (uvec4(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) >> (uvec3(0u, 0u, 0u) ^ uvec3(_GLF_IDENTITY(0u, 0u | (0u)), 0u, 0u))), 0u)), (~ (uvec4(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) >> (uvec3(0u, 0u, 0u) ^ uvec3(_GLF_IDENTITY(0u, 0u | (0u)), 0u, 0u))), 0u))) | (~ (uvec4(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) >> (uvec3(0u, 0u, 0u) ^ uvec3(_GLF_IDENTITY(0u, 0u | (0u)), 0u, 0u))), 0u))))))) : _GLF_FUZZED(uvec3(9044u, 142160u, 76029u))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) >> (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))), (true ? _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) >> _GLF_IDENTITY(_GLF_IDENTITY((uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u)), (uvec3(0u, 0u, 0u) ^ uvec3(1u, 1u, 1u)) * (_GLF_IDENTITY((uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u)), clamp((uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u)), (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u)), (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u)))))), _GLF_IDENTITY(uvec3(1u, 1u, 1u) * _GLF_IDENTITY(((uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))), (((uvec3(0u, 0u, 0u) ^ uvec3(0u, _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, uint(uvec3(0u, 0u, 0u)))))), _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, ~ (~ (0u))), 0u)))))) - (uvec3(0u, 0u, _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) | 0u), 0u, _GLF_IDENTITY(0u, max(0u, 0u))))) >> _GLF_IDENTITY(uvec3(7u), uvec3(7u)))), (_GLF_IDENTITY(uvec3(1u, 1u, 1u) * _GLF_IDENTITY(((uvec3(0u, 0u, 0u) ^ _GLF_IDENTITY(uvec3(0u, 0u, 0u), min(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))))), (((uvec3(0u, 0u, 0u) ^ _GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(uvec3(uvec3(0u, 0u, 0u))))))) - (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(7u), uvec3(7u)))), (false ? _GLF_FUZZED(mix(uvec3(96902u, _GLF_IDENTITY(191856u, (191856u) << 0u), _GLF_IDENTITY(14498u, (14498u) + (0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), 1u * (uint(2u))))))), uvec3(67141u, 5336u, 130823u), _GLF_IDENTITY(bvec3(true, true, true), bvec3(bvec4(bvec3(true, true, true), true))))) : uvec3(1u, 1u, 1u) * _GLF_IDENTITY(((uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))), _GLF_IDENTITY((((uvec3(0u, 0u, 0u) ^ uvec3(0u, _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec3(0u, 1u, 1u), min(uvec3(0u, 1u, 1u), uvec3(0u, 1u, 1u))))))), 0u)))) - (uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) << 0u)) >> _GLF_IDENTITY(uvec3(7u), uvec3(7u))), ((((uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u)))) - (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(_GLF_IDENTITY(uvec3(7u), clamp(uvec3(7u), uvec3(7u), uvec3(7u))), uvec3(7u)))) - uvec3(0u, 0u, 0u)))))) | (uvec3(1u, 1u, 1u) * _GLF_IDENTITY(((_GLF_IDENTITY(uvec3(0u, 0u, 0u), (true ? uvec3(0u, 0u, 0u) : _GLF_FUZZED(uvec3(92680u, 170434u, 155270u)))) ^ uvec3(0u, 0u, 0u))), (((uvec3(0u, 0u, 0u) ^ uvec3(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u)))) - (uvec3(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, ~ (~ (0u))))), 0u) >> _GLF_IDENTITY(uvec3(7u), uvec3(7u)))))))) : _GLF_FUZZED(uvec3(173310u, 141303u, 23467u)))), _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize) >> (uvec3(_GLF_IDENTITY(0u, ~ (~ (0u))), _GLF_IDENTITY(0u, (0u) ^ 0u), 0u) ^ uvec3(0u, 0u, 0u)), _GLF_IDENTITY((_GLF_IDENTITY((gl_WorkGroupSize) >> (uvec3(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u, 0u) ^ uvec3(0u, 0u, 0u)), (_GLF_IDENTITY((gl_WorkGroupSize), (_GLF_IDENTITY((gl_WorkGroupSize), ~ (~ ((gl_WorkGroupSize))))) | (_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize), min((gl_WorkGroupSize), (gl_WorkGroupSize))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((gl_WorkGroupSize), min((gl_WorkGroupSize), (gl_WorkGroupSize)))), (_GLF_IDENTITY(~ (_GLF_IDENTITY((gl_WorkGroupSize), min((gl_WorkGroupSize), (gl_WorkGroupSize)))), max(~ (_GLF_IDENTITY((gl_WorkGroupSize), min((gl_WorkGroupSize), (gl_WorkGroupSize)))), ~ (_GLF_IDENTITY((gl_WorkGroupSize), min((gl_WorkGroupSize), (gl_WorkGroupSize))))))) | (_GLF_IDENTITY(~ (_GLF_IDENTITY((gl_WorkGroupSize), min((gl_WorkGroupSize), (gl_WorkGroupSize)))), clamp(~ (_GLF_IDENTITY((gl_WorkGroupSize), min((gl_WorkGroupSize), (gl_WorkGroupSize)))), ~ (_GLF_IDENTITY((gl_WorkGroupSize), min((gl_WorkGroupSize), (gl_WorkGroupSize)))), ~ (_GLF_IDENTITY((gl_WorkGroupSize), min((gl_WorkGroupSize), (gl_WorkGroupSize)))))))))))) >> (uvec3(_GLF_IDENTITY(0u, ~ (~ (0u))), _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, uint(uint(0u))), 0u)))), 0u) ^ uvec3(0u, 0u, 0u))) - (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(_GLF_IDENTITY(5u, (5u) / (1u | 1u))), uvec3(_GLF_IDENTITY(5u, (5u) - 0u)))))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY((gl_WorkGroupSize) >> (uvec3(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u, 0u) ^ uvec3(0u, 0u, 0u)), (_GLF_IDENTITY((gl_WorkGroupSize), (_GLF_IDENTITY((gl_WorkGroupSize), ~ (~ ((gl_WorkGroupSize))))) | (_GLF_IDENTITY((gl_WorkGroupSize), min((gl_WorkGroupSize), (gl_WorkGroupSize))))) >> (uvec3(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u, 0u) ^ uvec3(0u, 0u, 0u))) - (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(_GLF_IDENTITY(5u, (5u) / (1u | 1u))), uvec3(_GLF_IDENTITY(5u, (5u) - 0u))))))), (true ? ~ ((_GLF_IDENTITY((gl_WorkGroupSize) >> (uvec3(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u, 0u) ^ uvec3(0u, 0u, 0u)), (_GLF_IDENTITY((gl_WorkGroupSize), (_GLF_IDENTITY((gl_WorkGroupSize), ~ (~ ((gl_WorkGroupSize))))) | (_GLF_IDENTITY((gl_WorkGroupSize), min((gl_WorkGroupSize), (gl_WorkGroupSize))))) >> (uvec3(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u, 0u) ^ uvec3(0u, 0u, 0u))) - (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(_GLF_IDENTITY(5u, (5u) / (1u | 1u))), uvec3(_GLF_IDENTITY(5u, (5u) - 0u))))))) : _GLF_FUZZED(uvec3(37945u, 62870u, 7440u)))))) | ((gl_WorkGroupSize) >> (uvec3(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u, 0u) ^ uvec3(0u, 0u, 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize) >> (uvec3(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u, 0u) ^ uvec3(0u, 0u, 0u)), _GLF_IDENTITY((_GLF_IDENTITY((gl_WorkGroupSize) >> (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))), (_GLF_IDENTITY(0u, ~ (~ (0u)))) / (1u ^ 0u)), 0u, 0u) ^ uvec3(0u, 0u, 0u)), (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u)))), (_GLF_IDENTITY((gl_WorkGroupSize), ~ (~ ((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))))))) | _GLF_IDENTITY((_GLF_IDENTITY((gl_WorkGroupSize), min((gl_WorkGroupSize), (gl_WorkGroupSize)))), (_GLF_IDENTITY((_GLF_IDENTITY((gl_WorkGroupSize), min((gl_WorkGroupSize), (gl_WorkGroupSize)))), ((_GLF_IDENTITY((gl_WorkGroupSize), min((gl_WorkGroupSize), (gl_WorkGroupSize))))) << uvec3(0u, 0u, 0u))) - uvec3(0u, 0u, 0u))) >> (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u ^ (_GLF_IDENTITY(0u, ~ (~ (0u))))), 0u, 0u) ^ uvec3(0u, 0u, 0u))) - (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(_GLF_IDENTITY(5u, (5u) / (1u | 1u))), uvec3(_GLF_IDENTITY(5u, (5u) - 0u)))))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY((gl_WorkGroupSize) >> (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec3(0u, 0u, 1u), (uvec3(0u, 0u, 1u)) | (uvec3(0u, 0u, 1u))))), ~ (~ (0u))), 0u, 0u) ^ uvec3(0u, 0u, 0u)), (_GLF_IDENTITY((gl_WorkGroupSize), (_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize), ~ (~ ((gl_WorkGroupSize)))), max(_GLF_IDENTITY((gl_WorkGroupSize), ~ (~ ((gl_WorkGroupSize)))), _GLF_IDENTITY((gl_WorkGroupSize), ~ (~ ((gl_WorkGroupSize))))))) | (_GLF_IDENTITY((gl_WorkGroupSize), min((gl_WorkGroupSize), (gl_WorkGroupSize))))) >> (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u, 0u) ^ uvec3(0u, 0u, 0u), uvec3(_GLF_IDENTITY(uvec4(uvec3(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u, 0u) ^ uvec3(0u, 0u, 0u), 0u), (true ? uvec4(uvec3(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u, 0u) ^ uvec3(0u, 0u, 0u), 0u) : _GLF_FUZZED(uvec4(196278u, 110073u, 184593u, 39690u)))))))) - (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(_GLF_IDENTITY(5u, (5u) / (_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_id) : 1u)) | 1u))), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(5u, (5u) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY(5u, (5u) - 0u), (_GLF_IDENTITY(5u, (5u) - 0u)) ^ 0u)) / 1u))))))), (_GLF_IDENTITY(true ? ~ ((_GLF_IDENTITY((gl_WorkGroupSize) >> (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) << 0u))), 0u, 0u), min(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) << 0u))), 0u, 0u), (uvec3(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) << 0u))), 0u, 0u)) + uvec3(0u, 0u, 0u)), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) << 0u))), 0u, 0u), uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) << 0u))), 0u, 0u), clamp(uvec3(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) << 0u))), 0u, 0u), uvec3(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) << 0u))), 0u, 0u), uvec3(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) << 0u))), 0u, 0u))), 1u), (uvec4(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) << 0u))), 0u, 0u), clamp(uvec3(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) << 0u))), 0u, 0u), uvec3(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) << 0u))), 0u, 0u), uvec3(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) << 0u))), 0u, 0u))), 1u)) >> uvec4(0u, 0u, 0u, 0u)))))) ^ _GLF_IDENTITY(uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4(uvec3(0u, 0u, 0u), 1u), (_GLF_IDENTITY(uvec4(uvec3(0u, 0u, 0u), 1u), max(uvec4(uvec3(0u, 0u, 0u), 1u), uvec4(uvec3(0u, 0u, 0u), 1u)))) << uvec4(0u, 0u, 0u, 0u))), uvec3(0u, 0u, 0u) + (uvec3(_GLF_IDENTITY(uvec4(uvec3(0u, 0u, 0u), 1u), (_GLF_IDENTITY(uvec4(uvec3(0u, 0u, 0u), 1u), max(uvec4(uvec3(0u, 0u, 0u), 1u), uvec4(uvec3(0u, 0u, 0u), 1u)))) << uvec4(0u, 0u, 0u, 0u))))))), (_GLF_IDENTITY((gl_WorkGroupSize), (_GLF_IDENTITY((gl_WorkGroupSize), ~ (~ ((gl_WorkGroupSize))))) | (_GLF_IDENTITY((gl_WorkGroupSize), min((gl_WorkGroupSize), (gl_WorkGroupSize))))) >> (uvec3(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u, 0u) ^ uvec3(0u, 0u, 0u))) - (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(_GLF_IDENTITY(5u, (5u) / (1u | 1u))), uvec3(_GLF_IDENTITY(5u, (5u) - _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) ^ 0u), 0u))))))))) : _GLF_FUZZED(uvec3(37945u, 62870u, 7440u)), clamp(true ? ~ ((_GLF_IDENTITY((gl_WorkGroupSize) >> (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) << 0u))), 0u, 0u), min(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) << 0u))), 0u, 0u), (uvec3(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) << 0u))), 0u, 0u)) + uvec3(0u, 0u, 0u)), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) << 0u))), 0u, 0u), uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) << 0u))), 0u, 0u), clamp(uvec3(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) << 0u))), 0u, 0u), uvec3(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) << 0u))), 0u, 0u), uvec3(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) << 0u))), 0u, 0u))), 1u), (uvec4(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) << 0u))), 0u, 0u), clamp(uvec3(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) << 0u))), 0u, 0u), uvec3(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) << 0u))), 0u, 0u), uvec3(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) << 0u))), 0u, 0u))), 1u)) >> uvec4(0u, 0u, 0u, 0u)))))) ^ _GLF_IDENTITY(uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4(uvec3(0u, 0u, 0u), 1u), (_GLF_IDENTITY(uvec4(uvec3(0u, 0u, 0u), 1u), max(uvec4(uvec3(0u, 0u, 0u), 1u), uvec4(uvec3(0u, 0u, 0u), 1u)))) << uvec4(0u, 0u, 0u, 0u))), uvec3(0u, 0u, 0u) + (uvec3(_GLF_IDENTITY(uvec4(uvec3(0u, 0u, 0u), 1u), (_GLF_IDENTITY(uvec4(uvec3(0u, 0u, 0u), 1u), max(uvec4(uvec3(0u, 0u, 0u), 1u), uvec4(uvec3(0u, 0u, 0u), 1u)))) << uvec4(0u, 0u, 0u, 0u))))))), (_GLF_IDENTITY((gl_WorkGroupSize), (_GLF_IDENTITY((gl_WorkGroupSize), ~ (~ ((gl_WorkGroupSize))))) | (_GLF_IDENTITY((gl_WorkGroupSize), min((gl_WorkGroupSize), (gl_WorkGroupSize))))) >> (uvec3(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u, 0u) ^ uvec3(0u, 0u, 0u))) - (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(_GLF_IDENTITY(5u, (5u) / (1u | 1u))), uvec3(_GLF_IDENTITY(5u, (5u) - _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) ^ 0u), 0u))))))))) : _GLF_FUZZED(uvec3(37945u, 62870u, 7440u)), true ? ~ ((_GLF_IDENTITY((gl_WorkGroupSize) >> (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) << 0u))), 0u, 0u), min(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) << 0u))), 0u, 0u), (uvec3(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) << 0u))), 0u, 0u)) + uvec3(0u, 0u, 0u)), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) << 0u))), 0u, 0u), uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) << 0u))), 0u, 0u), clamp(uvec3(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) << 0u))), 0u, 0u), uvec3(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) << 0u))), 0u, 0u), uvec3(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) << 0u))), 0u, 0u))), 1u), (uvec4(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) << 0u))), 0u, 0u), clamp(uvec3(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) << 0u))), 0u, 0u), uvec3(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) << 0u))), 0u, 0u), uvec3(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) << 0u))), 0u, 0u))), 1u)) >> uvec4(0u, 0u, 0u, 0u)))))) ^ _GLF_IDENTITY(uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4(uvec3(0u, 0u, 0u), 1u), (_GLF_IDENTITY(uvec4(uvec3(0u, 0u, 0u), 1u), max(uvec4(uvec3(0u, 0u, 0u), 1u), uvec4(uvec3(0u, 0u, 0u), 1u)))) << uvec4(0u, 0u, 0u, 0u))), uvec3(0u, 0u, 0u) + (uvec3(_GLF_IDENTITY(uvec4(uvec3(0u, 0u, 0u), 1u), (_GLF_IDENTITY(uvec4(uvec3(0u, 0u, 0u), 1u), max(uvec4(uvec3(0u, 0u, 0u), 1u), uvec4(uvec3(0u, 0u, 0u), 1u)))) << uvec4(0u, 0u, 0u, 0u))))))), (_GLF_IDENTITY((gl_WorkGroupSize), (_GLF_IDENTITY((gl_WorkGroupSize), ~ (~ ((gl_WorkGroupSize))))) | (_GLF_IDENTITY((gl_WorkGroupSize), min((gl_WorkGroupSize), (gl_WorkGroupSize))))) >> (uvec3(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u, 0u) ^ uvec3(0u, 0u, 0u))) - (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(_GLF_IDENTITY(5u, (5u) / (1u | 1u))), uvec3(_GLF_IDENTITY(5u, (5u) - _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) ^ 0u), 0u))))))))) : _GLF_FUZZED(uvec3(37945u, 62870u, 7440u)), true ? ~ ((_GLF_IDENTITY((gl_WorkGroupSize) >> (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) << 0u))), 0u, 0u), min(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) << 0u))), 0u, 0u), (uvec3(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) << 0u))), 0u, 0u)) + uvec3(0u, 0u, 0u)), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) << 0u))), 0u, 0u), uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) << 0u))), 0u, 0u), clamp(uvec3(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) << 0u))), 0u, 0u), uvec3(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) << 0u))), 0u, 0u), uvec3(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) << 0u))), 0u, 0u))), 1u), (uvec4(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) << 0u))), 0u, 0u), clamp(uvec3(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) << 0u))), 0u, 0u), uvec3(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) << 0u))), 0u, 0u), uvec3(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) << 0u))), 0u, 0u))), 1u)) >> uvec4(0u, 0u, 0u, 0u)))))) ^ _GLF_IDENTITY(uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4(uvec3(0u, 0u, 0u), 1u), (_GLF_IDENTITY(uvec4(uvec3(0u, 0u, 0u), 1u), max(uvec4(uvec3(0u, 0u, 0u), 1u), uvec4(uvec3(0u, 0u, 0u), 1u)))) << uvec4(0u, 0u, 0u, 0u))), uvec3(0u, 0u, 0u) + (uvec3(_GLF_IDENTITY(uvec4(uvec3(0u, 0u, 0u), 1u), (_GLF_IDENTITY(uvec4(uvec3(0u, 0u, 0u), 1u), max(uvec4(uvec3(0u, 0u, 0u), 1u), uvec4(uvec3(0u, 0u, 0u), 1u)))) << uvec4(0u, 0u, 0u, 0u))))))), (_GLF_IDENTITY((gl_WorkGroupSize), (_GLF_IDENTITY((gl_WorkGroupSize), ~ (~ ((gl_WorkGroupSize))))) | (_GLF_IDENTITY((gl_WorkGroupSize), min((gl_WorkGroupSize), (gl_WorkGroupSize))))) >> (uvec3(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u, 0u) ^ uvec3(0u, 0u, 0u))) - (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(_GLF_IDENTITY(5u, (5u) / (1u | 1u))), uvec3(_GLF_IDENTITY(5u, (5u) - _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) ^ 0u), 0u))))))))) : _GLF_FUZZED(uvec3(37945u, 62870u, 7440u)))))))) | ((gl_WorkGroupSize) >> (uvec3(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u, 0u) ^ uvec3(0u, 0u, 0u)))), min(_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize) >> (uvec3(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u, 0u) ^ uvec3(0u, 0u, 0u)), _GLF_IDENTITY((_GLF_IDENTITY((gl_WorkGroupSize) >> (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), ~ (~ (0u))), 0u, 0u) ^ uvec3(0u, 0u, 0u)), (_GLF_IDENTITY((gl_WorkGroupSize), (_GLF_IDENTITY((gl_WorkGroupSize), ~ (~ ((gl_WorkGroupSize))))) | (_GLF_IDENTITY((gl_WorkGroupSize), min((gl_WorkGroupSize), (gl_WorkGroupSize))))) >> (uvec3(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u, 0u) ^ uvec3(0u, 0u, 0u))) - (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(_GLF_IDENTITY(5u, (5u) / (1u | 1u))), uvec3(_GLF_IDENTITY(5u, (5u) - 0u)))))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY((gl_WorkGroupSize) >> (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u, 0u), clamp(uvec3(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u, 0u), uvec3(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u, 0u), uvec3(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u, 0u))) ^ uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize), ((gl_WorkGroupSize)) | ((gl_WorkGroupSize))), (_GLF_IDENTITY((gl_WorkGroupSize), ~ (~ ((gl_WorkGroupSize))))) | (_GLF_IDENTITY((gl_WorkGroupSize), min((gl_WorkGroupSize), (gl_WorkGroupSize))))) >> (uvec3(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u, 0u) ^ uvec3(0u, 0u, 0u))) - (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(_GLF_IDENTITY(5u, _GLF_IDENTITY((5u), ~ (~ ((5u)))) / (1u | 1u))), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(5u, _GLF_IDENTITY((5u) - 0u, min((5u) - 0u, (5u) - 0u)))), (uvec3(_GLF_IDENTITY(5u, _GLF_IDENTITY((5u) - 0u, min((5u) - 0u, (5u) - 0u))))) | (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(5u, _GLF_IDENTITY((5u) - 0u, min((5u) - 0u, (5u) - 0u)))), (uvec3(_GLF_IDENTITY(5u, _GLF_IDENTITY((5u) - 0u, min((5u) - 0u, (5u) - 0u))))) / ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(6u), uvec3(6u))) >> _GLF_IDENTITY(uvec3(6u), uvec3(6u))))))))))), (true ? ~ ((_GLF_IDENTITY((gl_WorkGroupSize) >> (uvec3(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u, 0u) ^ uvec3(0u, 0u, 0u)), (_GLF_IDENTITY((gl_WorkGroupSize), (_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize), ~ (~ ((gl_WorkGroupSize)))), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY((gl_WorkGroupSize), ~ (~ ((gl_WorkGroupSize))))))) | (_GLF_IDENTITY((gl_WorkGroupSize), min((gl_WorkGroupSize), (gl_WorkGroupSize))))) >> (uvec3(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u, 0u) ^ uvec3(0u, 0u, 0u))) - (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(_GLF_IDENTITY(5u, (5u) / (1u | _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, (1u) / 1u)))) | (_GLF_IDENTITY(1u, (1u) | (1u))))))), uvec3(_GLF_IDENTITY(5u, (5u) - 0u))))))) : _GLF_FUZZED(uvec3(37945u, 62870u, 7440u)))))) | ((gl_WorkGroupSize) >> (uvec3(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u, 0u) ^ uvec3(0u, 0u, 0u)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize), clamp((gl_WorkGroupSize), (gl_WorkGroupSize), (gl_WorkGroupSize))) >> (uvec3(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u, 0u) ^ uvec3(0u, 0u, 0u)), _GLF_IDENTITY((_GLF_IDENTITY((gl_WorkGroupSize) >> (uvec3(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u, 0u) ^ uvec3(0u, 0u, 0u)), (_GLF_IDENTITY((gl_WorkGroupSize), (_GLF_IDENTITY((gl_WorkGroupSize), ~ (~ ((gl_WorkGroupSize))))) | (_GLF_IDENTITY((gl_WorkGroupSize), min((_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)), gl_WorkGroupSize))), (gl_WorkGroupSize))))) >> (uvec3(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u, 0u) ^ uvec3(0u, 0u, 0u))) - (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(_GLF_IDENTITY(5u, (5u) / (1u | 1u))), uvec3(_GLF_IDENTITY(5u, (5u) - 0u)))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ ((_GLF_IDENTITY((gl_WorkGroupSize) >> (uvec3(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u, 0u) ^ uvec3(0u, 0u, 0u)), (_GLF_IDENTITY((gl_WorkGroupSize), (_GLF_IDENTITY((gl_WorkGroupSize), ~ (~ ((gl_WorkGroupSize))))) | (_GLF_IDENTITY((gl_WorkGroupSize), min((gl_WorkGroupSize), (gl_WorkGroupSize))))) >> (uvec3(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u, 0u) ^ uvec3(0u, 0u, 0u))) - (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(_GLF_IDENTITY(5u, (5u) / (1u | 1u))), uvec3(_GLF_IDENTITY(5u, (5u) - 0u))))))), (~ ((_GLF_IDENTITY((gl_WorkGroupSize) >> (uvec3(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u, 0u) ^ uvec3(0u, 0u, 0u)), (_GLF_IDENTITY((gl_WorkGroupSize), (_GLF_IDENTITY((gl_WorkGroupSize), ~ (~ ((gl_WorkGroupSize))))) | (_GLF_IDENTITY((gl_WorkGroupSize), min((gl_WorkGroupSize), (gl_WorkGroupSize))))) >> (uvec3(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u, 0u) ^ uvec3(0u, 0u, 0u))) - (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(_GLF_IDENTITY(5u, (5u) / (1u | 1u))), uvec3(_GLF_IDENTITY(5u, (5u) - 0u)))))))) | (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(1u), uvec3(1u)))), (true ? ~ ((_GLF_IDENTITY((gl_WorkGroupSize) >> (uvec3(_GLF_IDENTITY(0u, ~ (~ _GLF_IDENTITY((0u), ((0u)) / 1u))), 0u, 0u) ^ uvec3(0u, 0u, 0u)), (_GLF_IDENTITY((gl_WorkGroupSize), (_GLF_IDENTITY((gl_WorkGroupSize), ~ (~ ((gl_WorkGroupSize))))) | (_GLF_IDENTITY((gl_WorkGroupSize), min(_GLF_IDENTITY((gl_WorkGroupSize), min((gl_WorkGroupSize), (gl_WorkGroupSize))), (gl_WorkGroupSize))))) >> (uvec3(_GLF_IDENTITY(0u, _GLF_IDENTITY(~ (~ (0u)), 0u ^ (~ (~ (0u))))), 0u, 0u) ^ uvec3(0u, 0u, 0u))) - (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(_GLF_IDENTITY(5u, (5u) / (1u | 1u))), uvec3(_GLF_IDENTITY(5u, (5u) - 0u))))))) : _GLF_FUZZED(uvec3(37945u, 62870u, 7440u)))))) | ((gl_WorkGroupSize) >> (uvec3(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u, 0u) ^ uvec3(0u, 0u, 0u))))))), _GLF_IDENTITY((gl_WorkGroupSize) >> (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), ~ (~ (0u))), 0u, 0u) ^ uvec3(0u, 0u, 0u)), _GLF_IDENTITY((_GLF_IDENTITY((gl_WorkGroupSize) >> (uvec3(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u, 0u) ^ uvec3(0u, 0u, 0u)), (_GLF_IDENTITY((gl_WorkGroupSize), (_GLF_IDENTITY((gl_WorkGroupSize), ~ (~ ((gl_WorkGroupSize))))) | (_GLF_IDENTITY((gl_WorkGroupSize), min((gl_WorkGroupSize), (gl_WorkGroupSize))))) >> (uvec3(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u, 0u) ^ uvec3(0u, 0u, 0u))) - (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(_GLF_IDENTITY(5u, (5u) / (1u | 1u))), uvec3(_GLF_IDENTITY(5u, (5u) - 0u)))))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY((gl_WorkGroupSize) >> (uvec3(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u, 0u) ^ uvec3(0u, 0u, 0u)), (_GLF_IDENTITY((gl_WorkGroupSize), (_GLF_IDENTITY((gl_WorkGroupSize), ~ (~ ((gl_WorkGroupSize))))) | (_GLF_IDENTITY((gl_WorkGroupSize), min((gl_WorkGroupSize), (gl_WorkGroupSize))))) >> (uvec3(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u, 0u) ^ uvec3(0u, 0u, 0u))) - (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(_GLF_IDENTITY(5u, (5u) / (1u | 1u))), uvec3(_GLF_IDENTITY(5u, (5u) - 0u))))))), (true ? ~ ((_GLF_IDENTITY((gl_WorkGroupSize) >> (uvec3(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u, 0u) ^ uvec3(0u, 0u, 0u)), (_GLF_IDENTITY((gl_WorkGroupSize), (_GLF_IDENTITY((gl_WorkGroupSize), ~ (~ ((gl_WorkGroupSize))))) | (_GLF_IDENTITY((gl_WorkGroupSize), min((gl_WorkGroupSize), (gl_WorkGroupSize))))) >> (uvec3(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u, 0u) ^ uvec3(0u, 0u, 0u))) - (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(_GLF_IDENTITY(5u, (5u) / (1u | 1u))), uvec3(_GLF_IDENTITY(5u, _GLF_IDENTITY((5u) - 0u, max((5u) - 0u, (5u) - 0u))))))))) : _GLF_FUZZED(uvec3(37945u, _GLF_IDENTITY(62870u, max(62870u, _GLF_IDENTITY(62870u, (62870u) >> 0u))), 7440u)))))) | ((gl_WorkGroupSize) >> (uvec3(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u, 0u) ^ uvec3(0u, 0u, 0u))))))) ^ uvec3(0u, 0u, 0u))), _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(0u, 0u, 0u))))), ((_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize), _GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize), min((gl_WorkGroupSize), (gl_WorkGroupSize))), min((gl_WorkGroupSize), (gl_WorkGroupSize))) : _GLF_FUZZED(uvec3(192901u, 106108u, 54774u))), max((true ? _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize), min((gl_WorkGroupSize), (gl_WorkGroupSize))), min((gl_WorkGroupSize), (gl_WorkGroupSize))) : _GLF_FUZZED(uvec3(192901u, 106108u, 54774u))), (true ? _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize), min((gl_WorkGroupSize), (gl_WorkGroupSize))), min((gl_WorkGroupSize), (gl_WorkGroupSize))) : _GLF_FUZZED(uvec3(192901u, 106108u, 54774u)))))) - uvec3(0u, 0u, 0u)))))) * ((uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)), _GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uvec3(2u), uvec3(2u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(2u, (2u) - 0u)), uvec3(2u)), uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(2u, (2u) - 0u)), uvec3(2u)))))) >> (_GLF_IDENTITY(uvec3(0u, 0u, 0u), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) | _GLF_IDENTITY((uvec3(0u, 0u, 0u)), ((uvec3(0u, 0u, 0u))) ^ (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(4u), uvec3(4u))))), max(_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) | (uvec3(0u, 0u, 0u))), _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) | (uvec3(0u, 0u, 0u)))))) / (_GLF_IDENTITY(uvec3(1u, 1u, 1u), (_GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) | (_GLF_IDENTITY(uvec3(1u, 1u, 1u), uvec3(uvec3(uvec3(1u, 1u, 1u))))))) | uvec3(_GLF_IDENTITY(0u, uint(uvec3(_GLF_IDENTITY(0u, 1u * (0u)), ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 1u))), 0u, 0u)) & uvec3(_GLF_IDENTITY(1u, (1u) - (0u | 0u)), 1u, _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (1u) | 0u)))))) ^ uvec3(0u, 0u, 0u)))))) | (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) >> (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u)), clamp(_GLF_IDENTITY((gl_WorkGroupSize) >> (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u)), ((gl_WorkGroupSize) >> (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))) | _GLF_IDENTITY(((gl_WorkGroupSize) >> (uvec3(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u, 0u) ^ uvec3(0u, 0u, 0u))), uvec3(uvec3(((gl_WorkGroupSize) >> (uvec3(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u, 0u) ^ uvec3(0u, 0u, 0u))))))), _GLF_IDENTITY((gl_WorkGroupSize) >> (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u)), (_GLF_IDENTITY((gl_WorkGroupSize) >> (uvec3(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, 0u | (0u)), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> 0u)) >> 0u), 0u)), 0u, 0u) ^ uvec3(0u, 0u, 0u)), ~ (~ ((gl_WorkGroupSize) >> (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u)))))) | ((gl_WorkGroupSize) >> (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u)))), (gl_WorkGroupSize) >> (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))))))).x, _GLF_struct_16(_GLF_struct_15(mat2x3(1.0), bvec4(true)), mat3x2(1.0), uvec3(1u), bvec4(true)), _GLF_struct_20(_GLF_struct_17(vec3(1.0), mat4x2(1.0), 1.0, mat4(1.0), vec4(1.0), 1), _GLF_struct_18(_GLF_IDENTITY(true, _GLF_IDENTITY((true), ((true)) || false) && true), mat4x3(1.0), mat3x2(_GLF_IDENTITY(1.0, min(1.0, 1.0))), uvec4(_GLF_IDENTITY(1u, 0u | (_GLF_IDENTITY(1u, min(1u, 1u))))), 1u, vec4(_GLF_IDENTITY(1.0, float(mat3x4(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, log(_GLF_IDENTITY(abs(1.0), (false ? _GLF_FUZZED(3.3) : abs(1.0)))), 0.0, 1.0, 1.0))))), _GLF_struct_19(vec2(1.0), mat2x4(1.0)), mat4x2(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0, 1.0)))), _GLF_struct_22(_GLF_struct_21(_GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, (1.0) / _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))))), mat4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0, 0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(vec4(801.260, 8092.7037, 994.301, -832.283).r))), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED(fract(1.8)) : _GLF_IDENTITY(0.0, (0.0) * 1.0))), 0.0, 0.0) + (mat4(1.0))), mat3(1.0)), _GLF_IDENTITY(vec3(1.0), min(vec3(1.0), _GLF_IDENTITY(vec3(1.0), (true ? vec3(1.0) : _GLF_FUZZED(vec3(342.785, 280.657, 1.6))))))), mat4(1.0), _GLF_struct_23(mat4x2(1.0), 1u), vec4(1.0), _GLF_IDENTITY(_GLF_IDENTITY(uvec4(1u), min(uvec4(1u), _GLF_IDENTITY(uvec4(1u), (uvec4(1u)) | (_GLF_IDENTITY(uvec4(1u), min(uvec4(1u), uvec4(1u))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(1u), min(uvec4(1u), _GLF_IDENTITY(uvec4(1u), (uvec4(1u)) | (_GLF_IDENTITY(uvec4(1u), min(uvec4(1u), uvec4(1u))))))), uvec4(1u, 1u, 1u, 1u) * (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(1u), min(uvec4(1u), _GLF_IDENTITY(uvec4(1u), (uvec4(1u)) | (_GLF_IDENTITY(uvec4(1u), min(uvec4(1u), uvec4(1u))))))), clamp(_GLF_IDENTITY(uvec4(1u), min(uvec4(1u), _GLF_IDENTITY(uvec4(1u), (uvec4(1u)) | (_GLF_IDENTITY(uvec4(1u), min(uvec4(1u), uvec4(1u))))))), _GLF_IDENTITY(uvec4(1u), min(uvec4(1u), _GLF_IDENTITY(uvec4(1u), (uvec4(1u)) | (_GLF_IDENTITY(uvec4(1u), min(uvec4(1u), uvec4(1u))))))), _GLF_IDENTITY(uvec4(1u), min(uvec4(1u), _GLF_IDENTITY(uvec4(1u), (uvec4(1u)) | (_GLF_IDENTITY(uvec4(1u), min(uvec4(1u), uvec4(1u))))))))))), _GLF_IDENTITY(uvec4(1u), min(uvec4(1u), _GLF_IDENTITY(uvec4(1u), (uvec4(1u)) | (_GLF_IDENTITY(uvec4(1u), min(uvec4(1u), uvec4(1u))))))))));
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_14 _GLF_struct_replacement_14 = _GLF_struct_14(bvec2(true), _GLF_struct_4(ivec4(1)), _GLF_struct_5(mat2x3(1.0), _GLF_IDENTITY(ivec3(1), min(ivec3(1), ivec3(1)))), true, _GLF_struct_8(_GLF_struct_6(mat4x2(1.0), mat4(1.0), mat4(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) / determinant(mat2(determinant(mat4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(4120.7623)), float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), bool(true))), (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(4120.7623)), float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), bool(true)))) + 0.0), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)), 0.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-1.1) : 1.0)), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(8.9) : 0.0)), 1.0, 1.0, 1.0)))), max((1.0) / determinant(mat2(determinant(mat4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(4120.7623)), float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), bool(true))), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)), 0.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-1.1) : 1.0)), 0.0, 1.0, 1.0, 1.0)))), _GLF_IDENTITY(_GLF_IDENTITY((1.0), ((1.0)) - _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)))), clamp(_GLF_IDENTITY((1.0), ((1.0)) - _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY((1.0), ((1.0)) - _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY((1.0), ((1.0)) - _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)))))) / determinant(mat2(determinant(mat4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(4120.7623)), float(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0))), bool(true))), clamp(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(4120.7623)), float(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0))), bool(true))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(4120.7623)), float(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0))), bool(true))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(4120.7623)), float(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0))), bool(true))))), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(vec4(-40.79, 4116.4685, 28.27, -535.303).y) : 0.0)), 1.0, determinant(mat3(1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-1.1) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 0.0, 1.0, 1.0, 1.0)))))))), _GLF_IDENTITY(vec3(1.0), min(_GLF_IDENTITY(vec3(1.0), min(_GLF_IDENTITY(vec3(1.0), mix(vec3((vec3(1.0))[0], _GLF_FUZZED(6552.2171), _GLF_FUZZED(3708.3233)), vec3(_GLF_FUZZED(235.100), (vec3(1.0))[1], (vec3(1.0))[2]), bvec3(false, true, true))), vec3(1.0))), _GLF_IDENTITY(vec3(1.0), mix(vec3(_GLF_FUZZED((-5.1 * -80.50)), _GLF_FUZZED(-729.882), _GLF_IDENTITY((vec3(1.0))[2], float(mat3x2((vec3(1.0))[2], 1.0, 1.0, 1.0, 1.0, sqrt(1.0))))), vec3((vec3(1.0))[0], (vec3(1.0))[1], _GLF_FUZZED(8.6)), bvec3(true, true, false))))), ivec4(1), mat2x4(1.0), true), vec2(1.0), gl_WorkGroupID.x, mat2x4(1.0), _GLF_struct_7(ivec2(1), 1, mat2(1.0), 1.0), mat3x2(1.0)), _GLF_struct_9(mat2x3(1.0), mat3(1.0), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(_GLF_IDENTITY(-40579, _GLF_IDENTITY(int(ivec2(-40579, 1)), (int(ivec2(-40579, 1))) >> 0))) : _GLF_IDENTITY(1, ~ (~ (1)))))), (_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(_GLF_IDENTITY(-40579, _GLF_IDENTITY(int(ivec2(-40579, 1)), (int(ivec2(-40579, 1))) >> 0))) : _GLF_IDENTITY(1, ~ (~ (1)))))), min(ivec2(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(_GLF_IDENTITY(-40579, _GLF_IDENTITY(int(ivec2(-40579, 1)), (int(ivec2(-40579, 1))) >> 0))) : _GLF_IDENTITY(1, ~ (~ (1)))))), ivec2(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(_GLF_IDENTITY(-40579, _GLF_IDENTITY(int(ivec2(-40579, 1)), (int(ivec2(-40579, 1))) >> 0))) : _GLF_IDENTITY(1, ~ (~ (1))))))))) ^ ivec2(0, 0))), _GLF_struct_13(_GLF_struct_10(mat3(1.0)), _GLF_struct_11(mat3x2(1.0), uvec2(1u), vec4(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 1.0, 0.0, sqrt(1.0), 1.0, 0.0))), 1.0, 0.0, 0.0, 1.0, 1.0), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (mat3x2(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 1.0, 0.0, sqrt(1.0), 1.0, 0.0))), 1.0, 0.0, 0.0, 1.0, 1.0)))))), uvec2(1u), ivec3(1)), 1.0, _GLF_struct_12(1, mat2x4(1.0), mat4(1.0), mat3x4(1.0)), mat3x2(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x4(1.0, 0.0, 1.0, 0.0, sqrt(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)))), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0))), 1.0, 0.0), mat2x4(mat2x4(_GLF_IDENTITY(mat2x4(1.0, 0.0, 1.0, 0.0, sqrt(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)))), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0))), 1.0, 0.0), (mat2x4(1.0, 0.0, 1.0, 0.0, sqrt(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)))), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0))), 1.0, 0.0)) + mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))))), mat2x4(1.0), mat2x4(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) || false)), true && (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) || false)))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_3 _GLF_struct_replacement_3 = _GLF_struct_3(_GLF_struct_2(_GLF_struct_0(true), 1, _GLF_struct_1(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), bool(bvec4(true, _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), true && _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), true && ((_GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))), false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), bool(bvec4(true, _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), true && _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))), ! (! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))))))))), false)))), true && ((_GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))), false)))))))), 1u, bvec3(true), mat2x4(1.0), uvec4(1u)), mat3x4(1.0)), _GLF_struct_replacement_24.workgroup_size * _GLF_struct_replacement_14._f4.workgroup_id);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))) / 1.0), 0.0, 1.0, log(1.0), 1.0, 0.0, 0.0, 1.0)))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint virtual_gid = _GLF_struct_replacement_3.workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_struct_replacement_3.workgroup_base, (_GLF_struct_replacement_3.workgroup_base) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))) + subgroup_id * subgroup_size + _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), 0u ^ (((subgroup_local_id + 1) % subgroup_size))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), 0u ^ (((subgroup_local_id + 1) % subgroup_size))), ~ (~ (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), 0u ^ (((subgroup_local_id + 1) % subgroup_size)))))), _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), 0u ^ (((subgroup_local_id + 1) % subgroup_size))), _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), 0u ^ (((subgroup_local_id + 1) % subgroup_size)))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false)))), (true && (_GLF_DEAD(false))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), bool(bvec2(_GLF_IDENTITY((! (_GLF_DEAD(false))), bool(bvec4((! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, (false) || false)))), false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))), ! (_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))), (! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))))) || false))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) && true)))))
  return;
 buf[virtual_gid] = _GLF_IDENTITY(1, (1) << 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(acosh(8248.0330)) : _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))) > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(cosh(injectionSwitch)))).y))))
  return;
 if(subgroup_local_id + 1 < subgroup_size)
  {
   int i = 0;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true && ((! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))) > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), bool(bool(false)))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), bool(bool(false)))))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), bool(bool(false)))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * sqrt(vec2(1.0, 1.0))), 0.0, 1.0), mat2(mat2x4(mat2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * sqrt(vec2(1.0, 1.0))), 0.0, 1.0)))))))[0], _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))), vec2(_GLF_FUZZED(8.0), _GLF_IDENTITY(_GLF_FUZZED(0.1), mix(float(_GLF_FUZZED(0.1)), float(_GLF_FUZZED(4833.0135)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bvec2(false, false))).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           return;
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && true)))
          barrier();
         return;
        }
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))), ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(false, bool(bvec2(false, true))), false)), false || (bool(bvec3(false, _GLF_IDENTITY(false, bool(bvec2(false, true))), false)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   buf[next_virtual_gid] = 2;
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))) || false, ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))) || false), (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))) || false), false || (! ((_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))) || false)))) && true)))), (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false))), bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false))), false, true))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, round(length(normalize(1.0))), 0.0, sqrt(0.0), 1.0, 0.0), (mat2x3(injectionSwitch.x, round(length(normalize(1.0))), 0.0, sqrt(0.0), 1.0, 0.0)) + mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), clamp(_GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, round(length(normalize(1.0))), 0.0, sqrt(0.0), 1.0, 0.0), (mat2x3(injectionSwitch.x, round(length(normalize(1.0))), 0.0, sqrt(0.0), 1.0, 0.0)) + mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), (float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, round(length(normalize(1.0))), 0.0, sqrt(0.0), 1.0, 0.0), (mat2x3(injectionSwitch.x, round(length(normalize(1.0))), 0.0, sqrt(0.0), 1.0, 0.0)) + mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) + 0.0), _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, round(length(normalize(1.0))), 0.0, sqrt(0.0), 1.0, 0.0), (mat2x3(injectionSwitch.x, round(length(normalize(1.0))), 0.0, sqrt(0.0), 1.0, 0.0)) + mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), (float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, round(length(normalize(1.0))), 0.0, sqrt(0.0), 1.0, 0.0), (mat2x3(injectionSwitch.x, round(length(normalize(1.0))), 0.0, sqrt(0.0), 1.0, 0.0)) + mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) * 1.0), float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, round(length(normalize(1.0))), 0.0, sqrt(0.0), 1.0, 0.0), (mat2x3(injectionSwitch.x, round(length(normalize(1.0))), 0.0, sqrt(0.0), 1.0, 0.0)) + mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   buf[next_virtual_gid] = 2;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(bool(bvec3(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), false)), false || (bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, true)), _GLF_IDENTITY(true, ! (! (true))) && (bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, true)))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, true)), _GLF_IDENTITY(true, ! (! (true))) && (bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, true)))), bool(bvec4(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, true)), _GLF_IDENTITY(true, ! (! (true))) && (bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, true)))), true, true, true)))) || false))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, true)), _GLF_IDENTITY(true, ! (! (true))) && (bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, true)))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, true)), _GLF_IDENTITY(true, ! (! (true))) && (bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, true)))), bool(bvec4(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, true)), _GLF_IDENTITY(true, ! (! (true))) && (bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, true)))), true, true, true)))) || false))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, true)), _GLF_IDENTITY(true, ! (! (true))) && (bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, true)))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, true)), _GLF_IDENTITY(true, ! (! (true))) && (bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, true)))), bool(bvec4(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, true)), _GLF_IDENTITY(true, ! (! (true))) && (bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, true)))), true, true, true)))) || false))), false)), true && (bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, true)), _GLF_IDENTITY(true, ! (! (true))) && (bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, true)))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, true)), _GLF_IDENTITY(true, ! (! (true))) && (bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, true)))), bool(bvec4(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, true)), _GLF_IDENTITY(true, ! (! (true))) && (bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, true)))), true, true, true)))) || false))), false))))), false, false, false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
