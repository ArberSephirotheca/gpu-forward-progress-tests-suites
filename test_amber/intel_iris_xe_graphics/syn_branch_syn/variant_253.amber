#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)))))))))))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - tan(vec2(0.0, 0.0))).x, mix(float(_GLF_FUZZED(8103.7826)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, abs(1.0), 1.0, 0.0, 1.0))).y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, abs(1.0), 1.0, 0.0, 1.0))).y)))), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(32.48, -9893.4016)), mix(vec2((_GLF_FUZZED(vec2(_GLF_IDENTITY(32.48, float(mat4x3(32.48, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, log(1.0)), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, log(1.0)), _GLF_IDENTITY(vec3(1.0, 0.0, 0.0), max(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))))), 1.0, 1.0, 0.0, 0.0, 1.0, exp(0.0)))), -9893.4016)))[0], (_GLF_FUZZED(vec2(32.48, -9893.4016)))[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(-237.835), _GLF_FUZZED(-8086.9760)), mix(vec2(_GLF_FUZZED(-0.1), (vec2(_GLF_FUZZED(-237.835), _GLF_FUZZED(-8086.9760)))[1]), vec2((vec2(_GLF_FUZZED(-237.835), _GLF_FUZZED(-8086.9760)))[0], _GLF_FUZZED(8.0)), bvec2(true, false))), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 0.0, log(1.0), 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-80.89)), bool(false))), 1.0, 0.0, 0.0))), (injectionSwitch.y) - 0.0)))))) : _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) / vec2(1.0, 1.0)))).x, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(_GLF_IDENTITY(_GLF_IDENTITY(32.48, min(_GLF_IDENTITY(32.48, max(32.48, 32.48)), 32.48)), 1.0 * (32.48)), -9893.4016)) : injectionSwitch)).x) - _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, 0.0))), (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true))))) ? _GLF_FUZZED((_GLF_IDENTITY(0.6, (true ? _GLF_IDENTITY(0.6, clamp(_GLF_IDENTITY(_GLF_IDENTITY(0.6, max(0.6, 0.6)), (false ? _GLF_FUZZED(78.85) : _GLF_IDENTITY(0.6, max(0.6, 0.6)))), 0.6, 0.6)) : _GLF_FUZZED(_GLF_IDENTITY(76.65, 0.0 + (_GLF_IDENTITY(76.65, max(76.65, 76.65))))))) * -47.30)) : _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(_GLF_IDENTITY(vec2(32.48, -9893.4016), mix(vec2(_GLF_FUZZED(2.8), _GLF_FUZZED(1.9)), vec2(_GLF_IDENTITY((vec2(_GLF_IDENTITY(32.48, (_GLF_IDENTITY(false ? _GLF_FUZZED(3.0) : 32.48, _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(false ? _GLF_FUZZED(3.0) : 32.48, (false ? _GLF_FUZZED(-437.668) : _GLF_IDENTITY(false ? _GLF_FUZZED(3.0) : 32.48, clamp(false ? _GLF_FUZZED(3.0) : 32.48, false ? _GLF_FUZZED(3.0) : 32.48, _GLF_IDENTITY(false ? _GLF_FUZZED(3.0) : 32.48, (true ? false ? _GLF_FUZZED(3.0) : 32.48 : _GLF_FUZZED(60.88))))))), length(vec4(0.0, 0.0, 0.0, 0.0)), determinant(mat2(1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0)))) + 0.0))), 0.0, 1.0)), log(abs(1.0)))), min(_GLF_IDENTITY(float(vec4(_GLF_IDENTITY(false ? _GLF_FUZZED(3.0) : 32.48, (false ? _GLF_FUZZED(-437.668) : false ? _GLF_FUZZED(3.0) : 32.48)), length(vec4(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(determinant(mat2(1.0, 0.0, 0.0, 1.0)), min(determinant(mat2(1.0, 0.0, 0.0, 1.0)), determinant(mat2(1.0, 0.0, 0.0, 1.0)))), log(abs(1.0)))), mix(float(_GLF_FUZZED(-796.470)), float(float(vec4(_GLF_IDENTITY(false ? _GLF_FUZZED(3.0) : 32.48, (false ? _GLF_FUZZED(-437.668) : false ? _GLF_FUZZED(3.0) : 32.48)), length(vec4(0.0, 0.0, 0.0, 0.0)), determinant(mat2(1.0, 0.0, 0.0, 1.0)), log(abs(1.0))))), bool(true))), float(vec4(_GLF_IDENTITY(false ? _GLF_FUZZED(3.0) : 32.48, (_GLF_IDENTITY(false ? _GLF_FUZZED(-437.668) : false ? _GLF_FUZZED(3.0) : 32.48, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(false ? _GLF_FUZZED(-437.668) : false ? _GLF_FUZZED(3.0) : 32.48, 0.0, cos(0.0), 1.0, 1.0, 1.0), (true ? mat2x3(false ? _GLF_FUZZED(-437.668) : false ? _GLF_FUZZED(3.0) : 32.48, 0.0, cos(0.0), 1.0, 1.0, 1.0) : _GLF_FUZZED(mat2x3(3323.8884, -672.356, -4371.1305, 75.77, -918.064, 865.667))))), min(float(_GLF_IDENTITY(mat2x3(false ? _GLF_FUZZED(-437.668) : false ? _GLF_FUZZED(3.0) : 32.48, 0.0, cos(0.0), 1.0, 1.0, 1.0), (true ? mat2x3(false ? _GLF_FUZZED(-437.668) : false ? _GLF_FUZZED(3.0) : 32.48, 0.0, cos(0.0), 1.0, 1.0, 1.0) : _GLF_FUZZED(mat2x3(3323.8884, -672.356, -4371.1305, 75.77, -918.064, 865.667))))), float(_GLF_IDENTITY(mat2x3(false ? _GLF_FUZZED(-437.668) : false ? _GLF_FUZZED(3.0) : 32.48, 0.0, cos(0.0), 1.0, 1.0, 1.0), (true ? mat2x3(false ? _GLF_FUZZED(-437.668) : false ? _GLF_FUZZED(3.0) : 32.48, 0.0, cos(0.0), 1.0, 1.0, 1.0) : _GLF_FUZZED(mat2x3(3323.8884, -672.356, -4371.1305, 75.77, -918.064, 865.667)))))))))), length(vec4(0.0, 0.0, 0.0, 0.0)), determinant(mat2(1.0, 0.0, 0.0, 1.0)), log(abs(1.0))))))))), -9893.4016))[0], max(_GLF_IDENTITY((vec2(_GLF_IDENTITY(32.48, (_GLF_IDENTITY(false ? _GLF_FUZZED(3.0) : 32.48, _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(false ? _GLF_FUZZED(3.0) : 32.48, (false ? _GLF_FUZZED(-437.668) : _GLF_IDENTITY(false ? _GLF_FUZZED(3.0) : 32.48, clamp(false ? _GLF_FUZZED(3.0) : 32.48, false ? _GLF_FUZZED(3.0) : 32.48, _GLF_IDENTITY(false ? _GLF_FUZZED(3.0) : 32.48, (true ? false ? _GLF_FUZZED(3.0) : 32.48 : _GLF_FUZZED(60.88))))))), length(vec4(0.0, 0.0, 0.0, 0.0)), determinant(mat2(1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0)))) + 0.0))), 0.0, 1.0)), log(abs(1.0)))), min(_GLF_IDENTITY(float(vec4(_GLF_IDENTITY(false ? _GLF_FUZZED(3.0) : 32.48, (false ? _GLF_FUZZED(-437.668) : false ? _GLF_FUZZED(3.0) : 32.48)), length(vec4(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(determinant(mat2(1.0, 0.0, 0.0, 1.0)), min(determinant(mat2(1.0, 0.0, 0.0, 1.0)), determinant(mat2(1.0, 0.0, 0.0, 1.0)))), log(abs(1.0)))), mix(float(_GLF_FUZZED(-796.470)), float(float(vec4(_GLF_IDENTITY(false ? _GLF_FUZZED(3.0) : 32.48, (false ? _GLF_FUZZED(-437.668) : false ? _GLF_FUZZED(3.0) : 32.48)), length(vec4(0.0, 0.0, 0.0, 0.0)), determinant(mat2(1.0, 0.0, 0.0, 1.0)), log(abs(1.0))))), bool(true))), float(vec4(_GLF_IDENTITY(false ? _GLF_FUZZED(3.0) : 32.48, (_GLF_IDENTITY(false ? _GLF_FUZZED(-437.668) : false ? _GLF_FUZZED(3.0) : 32.48, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(false ? _GLF_FUZZED(-437.668) : false ? _GLF_FUZZED(3.0) : 32.48, 0.0, cos(0.0), 1.0, 1.0, 1.0), (true ? mat2x3(false ? _GLF_FUZZED(-437.668) : false ? _GLF_FUZZED(3.0) : 32.48, 0.0, cos(0.0), 1.0, 1.0, 1.0) : _GLF_FUZZED(mat2x3(3323.8884, -672.356, -4371.1305, 75.77, -918.064, 865.667))))), min(float(_GLF_IDENTITY(mat2x3(false ? _GLF_FUZZED(-437.668) : false ? _GLF_FUZZED(3.0) : 32.48, 0.0, cos(0.0), 1.0, 1.0, 1.0), (true ? mat2x3(false ? _GLF_FUZZED(-437.668) : false ? _GLF_FUZZED(3.0) : 32.48, 0.0, cos(0.0), 1.0, 1.0, 1.0) : _GLF_FUZZED(mat2x3(3323.8884, -672.356, -4371.1305, 75.77, -918.064, 865.667))))), float(_GLF_IDENTITY(mat2x3(false ? _GLF_FUZZED(-437.668) : false ? _GLF_FUZZED(3.0) : 32.48, 0.0, cos(0.0), 1.0, 1.0, 1.0), (true ? mat2x3(false ? _GLF_FUZZED(-437.668) : false ? _GLF_FUZZED(3.0) : 32.48, 0.0, cos(0.0), 1.0, 1.0, 1.0) : _GLF_FUZZED(mat2x3(3323.8884, -672.356, -4371.1305, 75.77, -918.064, 865.667)))))))))), length(vec4(0.0, 0.0, 0.0, 0.0)), determinant(mat2(1.0, 0.0, 0.0, 1.0)), log(abs(1.0))))))))), -9893.4016))[0], mix(float(_GLF_IDENTITY((vec2(_GLF_IDENTITY(32.48, (_GLF_IDENTITY(false ? _GLF_FUZZED(3.0) : 32.48, _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(false ? _GLF_FUZZED(3.0) : 32.48, (false ? _GLF_FUZZED(-437.668) : _GLF_IDENTITY(false ? _GLF_FUZZED(3.0) : 32.48, clamp(false ? _GLF_FUZZED(3.0) : 32.48, false ? _GLF_FUZZED(3.0) : 32.48, _GLF_IDENTITY(false ? _GLF_FUZZED(3.0) : 32.48, (true ? false ? _GLF_FUZZED(3.0) : 32.48 : _GLF_FUZZED(60.88))))))), length(vec4(0.0, 0.0, 0.0, 0.0)), determinant(mat2(1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0)))) + 0.0))), 0.0, 1.0)), log(abs(1.0)))), min(_GLF_IDENTITY(float(vec4(_GLF_IDENTITY(false ? _GLF_FUZZED(3.0) : 32.48, (false ? _GLF_FUZZED(-437.668) : false ? _GLF_FUZZED(3.0) : 32.48)), length(vec4(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(determinant(mat2(1.0, 0.0, 0.0, 1.0)), min(determinant(mat2(1.0, 0.0, 0.0, 1.0)), determinant(mat2(1.0, 0.0, 0.0, 1.0)))), log(abs(1.0)))), mix(float(_GLF_FUZZED(-796.470)), float(float(vec4(_GLF_IDENTITY(false ? _GLF_FUZZED(3.0) : 32.48, (false ? _GLF_FUZZED(-437.668) : false ? _GLF_FUZZED(3.0) : 32.48)), length(vec4(0.0, 0.0, 0.0, 0.0)), determinant(mat2(1.0, 0.0, 0.0, 1.0)), log(abs(1.0))))), bool(true))), float(vec4(_GLF_IDENTITY(false ? _GLF_FUZZED(3.0) : 32.48, (_GLF_IDENTITY(false ? _GLF_FUZZED(-437.668) : false ? _GLF_FUZZED(3.0) : 32.48, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(false ? _GLF_FUZZED(-437.668) : false ? _GLF_FUZZED(3.0) : 32.48, 0.0, cos(0.0), 1.0, 1.0, 1.0), (true ? mat2x3(false ? _GLF_FUZZED(-437.668) : false ? _GLF_FUZZED(3.0) : 32.48, 0.0, cos(0.0), 1.0, 1.0, 1.0) : _GLF_FUZZED(mat2x3(3323.8884, -672.356, -4371.1305, 75.77, -918.064, 865.667))))), min(float(_GLF_IDENTITY(mat2x3(false ? _GLF_FUZZED(-437.668) : false ? _GLF_FUZZED(3.0) : 32.48, 0.0, cos(0.0), 1.0, 1.0, 1.0), (true ? mat2x3(false ? _GLF_FUZZED(-437.668) : false ? _GLF_FUZZED(3.0) : 32.48, 0.0, cos(0.0), 1.0, 1.0, 1.0) : _GLF_FUZZED(mat2x3(3323.8884, -672.356, -4371.1305, 75.77, -918.064, 865.667))))), float(_GLF_IDENTITY(mat2x3(false ? _GLF_FUZZED(-437.668) : false ? _GLF_FUZZED(3.0) : 32.48, 0.0, cos(0.0), 1.0, 1.0, 1.0), (true ? mat2x3(false ? _GLF_FUZZED(-437.668) : false ? _GLF_FUZZED(3.0) : 32.48, 0.0, cos(0.0), 1.0, 1.0, 1.0) : _GLF_FUZZED(mat2x3(3323.8884, -672.356, -4371.1305, 75.77, -918.064, 865.667)))))))))), length(vec4(0.0, 0.0, 0.0, 0.0)), determinant(mat2(1.0, 0.0, 0.0, 1.0)), log(abs(1.0))))))))), -9893.4016))[0], ((vec2(_GLF_IDENTITY(32.48, (_GLF_IDENTITY(false ? _GLF_FUZZED(3.0) : 32.48, _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(false ? _GLF_FUZZED(3.0) : 32.48, (false ? _GLF_FUZZED(-437.668) : _GLF_IDENTITY(false ? _GLF_FUZZED(3.0) : 32.48, clamp(false ? _GLF_FUZZED(3.0) : 32.48, false ? _GLF_FUZZED(3.0) : 32.48, _GLF_IDENTITY(false ? _GLF_FUZZED(3.0) : 32.48, (true ? false ? _GLF_FUZZED(3.0) : 32.48 : _GLF_FUZZED(60.88))))))), length(vec4(0.0, 0.0, 0.0, 0.0)), determinant(mat2(1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0)))) + 0.0))), 0.0, 1.0)), log(abs(1.0)))), min(_GLF_IDENTITY(float(vec4(_GLF_IDENTITY(false ? _GLF_FUZZED(3.0) : 32.48, (false ? _GLF_FUZZED(-437.668) : false ? _GLF_FUZZED(3.0) : 32.48)), length(vec4(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(determinant(mat2(1.0, 0.0, 0.0, 1.0)), min(determinant(mat2(1.0, 0.0, 0.0, 1.0)), determinant(mat2(1.0, 0.0, 0.0, 1.0)))), log(abs(1.0)))), mix(float(_GLF_FUZZED(-796.470)), float(float(vec4(_GLF_IDENTITY(false ? _GLF_FUZZED(3.0) : 32.48, (false ? _GLF_FUZZED(-437.668) : false ? _GLF_FUZZED(3.0) : 32.48)), length(vec4(0.0, 0.0, 0.0, 0.0)), determinant(mat2(1.0, 0.0, 0.0, 1.0)), log(abs(1.0))))), bool(true))), float(vec4(_GLF_IDENTITY(false ? _GLF_FUZZED(3.0) : 32.48, (_GLF_IDENTITY(false ? _GLF_FUZZED(-437.668) : false ? _GLF_FUZZED(3.0) : 32.48, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(false ? _GLF_FUZZED(-437.668) : false ? _GLF_FUZZED(3.0) : 32.48, 0.0, cos(0.0), 1.0, 1.0, 1.0), (true ? mat2x3(false ? _GLF_FUZZED(-437.668) : false ? _GLF_FUZZED(3.0) : 32.48, 0.0, cos(0.0), 1.0, 1.0, 1.0) : _GLF_FUZZED(mat2x3(3323.8884, -672.356, -4371.1305, 75.77, -918.064, 865.667))))), min(float(_GLF_IDENTITY(mat2x3(false ? _GLF_FUZZED(-437.668) : false ? _GLF_FUZZED(3.0) : 32.48, 0.0, cos(0.0), 1.0, 1.0, 1.0), (true ? mat2x3(false ? _GLF_FUZZED(-437.668) : false ? _GLF_FUZZED(3.0) : 32.48, 0.0, cos(0.0), 1.0, 1.0, 1.0) : _GLF_FUZZED(mat2x3(3323.8884, -672.356, -4371.1305, 75.77, -918.064, 865.667))))), float(_GLF_IDENTITY(mat2x3(false ? _GLF_FUZZED(-437.668) : false ? _GLF_FUZZED(3.0) : 32.48, 0.0, cos(0.0), 1.0, 1.0, 1.0), (true ? mat2x3(false ? _GLF_FUZZED(-437.668) : false ? _GLF_FUZZED(3.0) : 32.48, 0.0, cos(0.0), 1.0, 1.0, 1.0) : _GLF_FUZZED(mat2x3(3323.8884, -672.356, -4371.1305, 75.77, -918.064, 865.667)))))))))), length(vec4(0.0, 0.0, 0.0, 0.0)), determinant(mat2(1.0, 0.0, 0.0, 1.0)), log(abs(1.0))))))))), -9893.4016))[0]) - 0.0)), float(_GLF_FUZZED(45.95)), bool(false))), (vec2(_GLF_IDENTITY(32.48, (_GLF_IDENTITY(false ? _GLF_FUZZED(3.0) : 32.48, _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(false ? _GLF_FUZZED(3.0) : 32.48, (false ? _GLF_FUZZED(-437.668) : _GLF_IDENTITY(false ? _GLF_FUZZED(3.0) : 32.48, clamp(false ? _GLF_FUZZED(3.0) : 32.48, false ? _GLF_FUZZED(3.0) : 32.48, _GLF_IDENTITY(false ? _GLF_FUZZED(3.0) : 32.48, (true ? false ? _GLF_FUZZED(3.0) : 32.48 : _GLF_FUZZED(60.88))))))), length(vec4(0.0, 0.0, 0.0, 0.0)), determinant(mat2(1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0)))) + 0.0))), 0.0, 1.0)), log(abs(1.0)))), min(_GLF_IDENTITY(float(vec4(_GLF_IDENTITY(false ? _GLF_FUZZED(3.0) : 32.48, (false ? _GLF_FUZZED(-437.668) : false ? _GLF_FUZZED(3.0) : 32.48)), length(vec4(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(determinant(mat2(1.0, 0.0, 0.0, 1.0)), min(determinant(mat2(1.0, 0.0, 0.0, 1.0)), determinant(mat2(1.0, 0.0, 0.0, 1.0)))), log(abs(1.0)))), mix(float(_GLF_FUZZED(-796.470)), float(float(vec4(_GLF_IDENTITY(false ? _GLF_FUZZED(3.0) : 32.48, (false ? _GLF_FUZZED(-437.668) : false ? _GLF_FUZZED(3.0) : 32.48)), length(vec4(0.0, 0.0, 0.0, 0.0)), determinant(mat2(1.0, 0.0, 0.0, 1.0)), log(abs(1.0))))), bool(true))), float(vec4(_GLF_IDENTITY(false ? _GLF_FUZZED(3.0) : 32.48, (_GLF_IDENTITY(false ? _GLF_FUZZED(-437.668) : false ? _GLF_FUZZED(3.0) : 32.48, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(false ? _GLF_FUZZED(-437.668) : false ? _GLF_FUZZED(3.0) : 32.48, 0.0, cos(0.0), 1.0, 1.0, 1.0), (true ? mat2x3(false ? _GLF_FUZZED(-437.668) : false ? _GLF_FUZZED(3.0) : 32.48, 0.0, cos(0.0), 1.0, 1.0, 1.0) : _GLF_FUZZED(mat2x3(3323.8884, -672.356, -4371.1305, 75.77, -918.064, 865.667))))), min(float(_GLF_IDENTITY(mat2x3(false ? _GLF_FUZZED(-437.668) : false ? _GLF_FUZZED(3.0) : 32.48, 0.0, cos(0.0), 1.0, 1.0, 1.0), (true ? mat2x3(false ? _GLF_FUZZED(-437.668) : false ? _GLF_FUZZED(3.0) : 32.48, 0.0, cos(0.0), 1.0, 1.0, 1.0) : _GLF_FUZZED(mat2x3(3323.8884, -672.356, -4371.1305, 75.77, -918.064, 865.667))))), float(_GLF_IDENTITY(mat2x3(false ? _GLF_FUZZED(-437.668) : false ? _GLF_FUZZED(3.0) : 32.48, 0.0, cos(0.0), 1.0, 1.0, 1.0), (true ? mat2x3(false ? _GLF_FUZZED(-437.668) : false ? _GLF_FUZZED(3.0) : 32.48, 0.0, cos(0.0), 1.0, 1.0, 1.0) : _GLF_FUZZED(mat2x3(3323.8884, -672.356, -4371.1305, 75.77, -918.064, 865.667)))))))))), length(vec4(0.0, 0.0, 0.0, 0.0)), determinant(mat2(1.0, 0.0, 0.0, 1.0)), log(abs(1.0))))))))), -9893.4016))[0])), (vec2(32.48, -9893.4016))[1]), bvec2(true, true)))) : injectionSwitch)).x)) > injectionSwitch.y)), false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(true, ! (! (true))), true), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(true, ! (! (true))), true), false))))), false, _GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, false, false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, false, true)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) || false))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), true)))))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || _GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(6.4)), bool(false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-7.9)), bool(false))), _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 1.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, 1.0, 0.0)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(max(gl_NumWorkGroups, gl_NumWorkGroups), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true) ? _GLF_FUZZED(uvec3(111245u, 66263u, 26505u)) : max(gl_NumWorkGroups, gl_NumWorkGroups)))))).x, _GLF_IDENTITY(((68247u % 25330u) & 0u) | (_GLF_IDENTITY(gl_NumWorkGroups.x, 0u + (gl_NumWorkGroups.x))), max(((68247u % 25330u) & 0u) | (_GLF_IDENTITY(gl_NumWorkGroups.x, 0u + (_GLF_IDENTITY(gl_NumWorkGroups, (false ? _GLF_FUZZED(uvec3(181440u, 123570u, 49844u)) : gl_NumWorkGroups)).x))), _GLF_IDENTITY(((68247u % 25330u) & 0u) | (_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), (false ? _GLF_FUZZED(5144u) : 0u + (gl_NumWorkGroups.x))))), (true ? ((68247u % 25330u) & 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)).x, 0u + (gl_NumWorkGroups.x))) : _GLF_FUZZED(subgroup_size))))));
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), (_GLF_IDENTITY(false, ! (! (false)))) || false)), ! (! (_GLF_DEAD(false)))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(false)), true && _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_DEAD(false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((_GLF_DEAD(false))), _GLF_IDENTITY((((_GLF_DEAD(false)))) && true, true && (_GLF_IDENTITY((((_GLF_DEAD(false)))) && true, ((((_GLF_DEAD(false)))) && true) && true))))), (! (_GLF_IDENTITY(((_GLF_DEAD(false))), (((_GLF_DEAD(false)))) && true))) || false))), (((_GLF_DEAD(false)))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))))), ! (! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(false)), true && _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_DEAD(false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((_GLF_DEAD(false))), _GLF_IDENTITY((((_GLF_DEAD(false)))) && true, true && (_GLF_IDENTITY((((_GLF_DEAD(false)))) && true, ((((_GLF_DEAD(false)))) && true) && true))))), (! (_GLF_IDENTITY(((_GLF_DEAD(false))), (((_GLF_DEAD(false)))) && true))) || false))), (_GLF_IDENTITY(((_GLF_DEAD(false))), false || (((_GLF_DEAD(false)))))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))))), ! (! (! _GLF_IDENTITY((_GLF_DEAD(false)), true && _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_DEAD(false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_DEAD(false))), _GLF_IDENTITY((((_GLF_DEAD(false)))) && true, true && (_GLF_IDENTITY((((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))) && true, ((((_GLF_DEAD(false)))) && true) && _GLF_IDENTITY(true, bool(bvec4(true, false, true, false))))))), (_GLF_IDENTITY(((_GLF_DEAD(false))), _GLF_IDENTITY((((_GLF_DEAD(false)))) && true, true && (_GLF_IDENTITY((((_GLF_DEAD(false)))) && true, ((((_GLF_DEAD(false)))) && true) && true))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_IDENTITY(((_GLF_DEAD(false))), (((_GLF_DEAD(false)))) && true))) || false))), (((_GLF_DEAD(false)))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), ! (_GLF_IDENTITY(! ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))), ! (! (! ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))))))))))))))))))), true), true, true)))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true), true, true)))), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true), true, true))))) || false)))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), false || ((false))) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))) || false)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))) || false)))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(25.37, 6.8)) : injectionSwitch)).y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED((vec2(-6.6, -30.10) / vec2(-148.748, -65.85))))).x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (false ? _GLF_FUZZED(injectionSwitch[1]) : injectionSwitch[0])), injectionSwitch[1])).y)))) && _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (subgroup_id * subgroup_size)) + subgroup_local_id) / _GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(1u, (false ? _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (false ? _GLF_FUZZED(subgroup_size) : _GLF_FUZZED(num_workgroup)))) ^ 0u) : 1u)), max(_GLF_IDENTITY(1u, (false ? _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (false ? _GLF_FUZZED(subgroup_size) : _GLF_FUZZED(num_workgroup)))) ^ 0u) : 1u)), _GLF_IDENTITY(1u, (false ? _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (false ? _GLF_FUZZED(subgroup_size) : _GLF_FUZZED(num_workgroup)))) ^ 0u) : 1u)))), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(2u, (2u) << 0u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2u, (2u) << 0u), (_GLF_IDENTITY(2u, (2u) << 0u)) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY(2u, (2u) << 0u), (_GLF_IDENTITY(2u, (2u) << 0u)) - 0u)) ^ (0u << _GLF_IDENTITY(uint(1u), uint(1u)))))))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2u, (2u) << 0u), min(_GLF_IDENTITY(2u, (2u) << 0u), _GLF_IDENTITY(2u, (2u) << _GLF_IDENTITY(0u, (0u) / 1u)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(2u, (2u) << 0u), (_GLF_IDENTITY(2u, (2u) << 0u)) - 0u)))))) | (uint(_GLF_IDENTITY(_GLF_IDENTITY(2u, (2u) << 0u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(2u, (2u) << 0u), (_GLF_IDENTITY(2u, (2u) << 0u)) - 0u)))))))))), clamp(uvec2(_GLF_IDENTITY(1u, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (false ? _GLF_FUZZED(subgroup_size) : _GLF_FUZZED(num_workgroup)))) ^ 0u) : _GLF_IDENTITY(1u, min(1u, 1u)))), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(2u, (2u) << 0u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(2u, (2u) << 0u), (_GLF_IDENTITY(2u, (2u) << 0u)) - 0u))))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(2u, (2u) << 0u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(2u, (2u) << 0u), (_GLF_IDENTITY(2u, (2u) << 0u)) - 0u)))))) | (uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2u, min(2u, _GLF_IDENTITY(2u, min(2u, 2u)))), _GLF_IDENTITY((2u), ((2u)) << 0u) << 0u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(2u, (2u) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(2u, (2u) << 0u), (_GLF_IDENTITY(2u, (_GLF_IDENTITY(2u, uint(uint(2u)))) << 0u)) - 0u)) - 0u)))))))))), uvec2(_GLF_IDENTITY(1u, (false ? _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (false ? _GLF_FUZZED(subgroup_size) : _GLF_FUZZED(num_workgroup)))) ^ 0u) : 1u)), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(2u, _GLF_IDENTITY((2u) << 0u, (true ? _GLF_IDENTITY((2u) << 0u, ((2u) << 0u) - 0u) : _GLF_FUZZED(packUnorm4x8(vec4(3.6, -662.976, 2369.7004, -2.0)))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(2u, (2u) << 0u), (_GLF_IDENTITY(2u, (2u) << 0u)) - 0u))))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(2u, (2u) << 0u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(2u, (2u) << 0u), (_GLF_IDENTITY(2u, (2u) << 0u)) - 0u)))))) | (uint(_GLF_IDENTITY(_GLF_IDENTITY(2u, (2u) << 0u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(2u, _GLF_IDENTITY((2u) << 0u, min((2u) << 0u, _GLF_IDENTITY((2u) << 0u, ~ (~ ((2u) << 0u)))))), (_GLF_IDENTITY(2u, (2u) << 0u)) - 0u)))))))))), uvec2(_GLF_IDENTITY(1u, (false ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(num_workgroup, 0u ^ (_GLF_IDENTITY(num_workgroup, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(num_workgroup, (_GLF_IDENTITY(num_workgroup, clamp(num_workgroup, num_workgroup, num_workgroup))) | (_GLF_IDENTITY(num_workgroup, (num_workgroup) | (num_workgroup)))), 0u | (num_workgroup))))))), (_GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (false ? _GLF_FUZZED(subgroup_size) : _GLF_FUZZED(num_workgroup)))) ^ 0u) : 1u)), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(2u, (2u) << 0u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(2u, (2u) << 0u), (_GLF_IDENTITY(2u, (2u) << 0u)) - 0u))))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(2u, (2u) << 0u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(2u, (2u) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(2u, (2u) << 0u), clamp(_GLF_IDENTITY(2u, (2u) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(2u, (2u) << 0u), (_GLF_IDENTITY(2u, (2u) << 0u)) + 0u), _GLF_IDENTITY(2u, (2u) << 0u)))) - 0u)))))) | (uint(_GLF_IDENTITY(_GLF_IDENTITY(2u, (2u) << 0u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(2u, (2u) << 0u), (_GLF_IDENTITY(2u, (2u) << 0u)) - 0u))))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2u, (2u) << 0u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(2u, (2u) << 0u), (_GLF_IDENTITY(2u, (2u) << 0u)) - 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(2u, (2u) << 0u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(2u, (2u) << 0u), (_GLF_IDENTITY(2u, (2u) << 0u)) - 0u))))) | (_GLF_IDENTITY(_GLF_IDENTITY(2u, (2u) << 0u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(2u, (2u) << 0u), (_GLF_IDENTITY(2u, (2u) << 0u)) - 0u))))))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(2u, (2u) << 0u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(2u, (2u) << 0u), (_GLF_IDENTITY(2u, (2u) << 0u)) - 0u)))))) | (uint(_GLF_IDENTITY(_GLF_IDENTITY(2u, (2u) << 0u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(2u, (2u) << 0u), (_GLF_IDENTITY(2u, (2u) << 0u)) - 0u)))))))) >> 0u)))))))), _GLF_IDENTITY(1u, 0u ^ (1u)))));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), ~ (~ (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u)))))))) + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), true && (bool(! (false))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 buf[virtual_gid] = _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) | (1))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)))), (vec2(vec2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch))))) - vec2(0.0, 0.0))).y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true) || (false), bool(bvec4(false || (false), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), true, false))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), subgroup_local_id)) + 1 < subgroup_size, ! (! (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(93733) : _GLF_IDENTITY(1, 0 | (1)))), min(subgroup_local_id + 1, subgroup_local_id + 1)) < _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED((virtual_gid | subgroup_local_id)) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) - 0u)) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1]))))) / vec2(1.0, 1.0)).y))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY(mix(float(_GLF_FUZZED(-3.4)), float(injectionSwitch[0]), bool(true)), (mix(float(_GLF_FUZZED(-3.4)), float(injectionSwitch[0]), bool(true))) - 0.0)), injectionSwitch[1])).y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false), true && (_GLF_IDENTITY(false, bool(bool(false)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), true)))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) && true)), ! (! (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) && true)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), vec2(1.0, 1.0) * (vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)))).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y)) || false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(unpackSnorm2x16(virtual_gid)) : injectionSwitch)).x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(float(92442u))), float(injectionSwitch.y), bool(true)))))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)) || false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))) && true))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (false)) && true)), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (false)) && true)), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (false)) && true)), true && (! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), ! (! (! (false))))))) && true)))))))))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y)))))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-7.2)), float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), bool(true))), 1.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat3(660.108, -424.897, 512.877, -2.4, 3.3, 0.1, 1697.1264, 5.9, -9965.9932)) : mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, max(1, 1))])), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0))))).y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   int i = 0;
   buf[next_virtual_gid] = 2;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(1.9), (injectionSwitch)[1]), vec2((injectionSwitch)[_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-61050)))], _GLF_IDENTITY(_GLF_FUZZED((3.8 - -8.9)), max(_GLF_FUZZED((3.8 - -8.9)), _GLF_FUZZED((3.8 - -8.9))))), bvec2(true, false))).y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   buf[next_virtual_gid] = _GLF_IDENTITY(2, 0 + (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(18749) : 2))) << 0)));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
