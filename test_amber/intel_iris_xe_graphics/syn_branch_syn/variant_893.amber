#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(37.31), min(_GLF_FUZZED(37.31), _GLF_FUZZED(37.31)))), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(_GLF_IDENTITY(2.4, min(_GLF_IDENTITY(2.4, (2.4) * 1.0), 2.4)))))))), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(37.31), min(_GLF_FUZZED(37.31), _GLF_FUZZED(37.31)))), float(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), (false ? _GLF_FUZZED(-5.0) : _GLF_IDENTITY(float(mat3(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), max(float(mat3(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), float(mat3(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)))))))), bool(true))), _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(_GLF_IDENTITY(2.4, min(_GLF_IDENTITY(2.4, (2.4) * 1.0), 2.4))))))))), ! (_GLF_IDENTITY(! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(37.31), min(_GLF_FUZZED(37.31), _GLF_FUZZED(37.31)))), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(_GLF_IDENTITY(2.4, min(_GLF_IDENTITY(2.4, (2.4) * 1.0), 2.4)))))))))), ! (! (! (! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(37.31), min(_GLF_FUZZED(37.31), _GLF_FUZZED(37.31)))), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(_GLF_IDENTITY(2.4, min(_GLF_IDENTITY(2.4, (2.4) * 1.0), 2.4))))))))))))))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(5.6, -0.5)) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false)))))))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), false || (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((vec2(167.650, -1613.8578) + -8.7)) : injectionSwitch)).x > injectionSwitch.y)))))), false || _GLF_IDENTITY((! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (! ((! (injectionSwitch.x > injectionSwitch.y)))), bool(bool(! (! ((! (injectionSwitch.x > injectionSwitch.y))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (! ((! (injectionSwitch.x > injectionSwitch.y)))), bool(bool(! (! ((! (injectionSwitch.x > injectionSwitch.y))))))), ! (! (_GLF_IDENTITY(! (! ((! (injectionSwitch.x > injectionSwitch.y)))), bool(bool(! (! ((! (injectionSwitch.x > injectionSwitch.y))))))))))))))))))), ! (! ((injectionSwitch.x > injectionSwitch.y))))))), ((! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, tan(0.0), 1.0, 1.0))) > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, true), true, false)))))))), ! (_GLF_IDENTITY(! (! ((! (injectionSwitch.x > injectionSwitch.y)))), bool(bool(! (! ((! (injectionSwitch.x > injectionSwitch.y))))))))))))), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))) && true))))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))) || false)))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0))))), 1.0) * (injectionSwitch)).y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y)), false, true, _GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(974.109) : injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bool(false))), true), true, false)))))))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             return;
            }
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           return;
           if(_GLF_DEAD(false))
            return;
          }
         return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(vec2(1.0, 1.0))).y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(vec2(1.0, 1.0))).y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(vec2(1.0, 1.0))).y)))))) && true)))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
            return;
           return;
           if(_GLF_DEAD(false))
            return;
          }
         return;
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(abs(vec2(0.0, 0.0)), clamp(abs(vec2(0.0, 0.0)), _GLF_IDENTITY(abs(vec2(0.0, 0.0)), (abs(vec2(0.0, 0.0))) / vec2(1.0, 1.0)), abs(vec2(0.0, 0.0))))).x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) >> uvec3(0u, 0u, 0u)).x, (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) >> uvec3(0u, 0u, 0u)).x) ^ 0u), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) >> uvec3(0u, 0u, 0u)).x, (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) >> uvec3(0u, 0u, _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) >> 0u), (_GLF_IDENTITY(0u, (0u) >> 0u)) ^ 0u), 0u)))).x) | (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) >> _GLF_IDENTITY(uvec3(0u, 0u, 0u), (_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) - uvec3(0u, 0u, 0u))) | uvec3(0u, 0u, 0u))).x))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch))), (true ? _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) - vec2(0.0, 0.0), (_GLF_IDENTITY((injectionSwitch) - vec2(0.0, 0.0), ((injectionSwitch) - vec2(0.0, 0.0)) - vec2(0.0, 0.0))) * vec2(1.0, 1.0))), injectionSwitch))), min((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch))), (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-99.80), _GLF_FUZZED(8.2)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) - vec2(0.0, 0.0)), injectionSwitch))))) : _GLF_FUZZED(vec2(-2.7, 1.3))))).y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-2139.1945))), injectionSwitch.y)), clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(asinh(injectionSwitch)) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) ? (injectionSwitch) : _GLF_FUZZED(vec2(69.99, -92.31)))) + vec2(0.0, 0.0)))).y)), bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true, (true) && true) ? injectionSwitch.y : _GLF_FUZZED(-2139.1945))), injectionSwitch.y)), clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), (false ? _GLF_FUZZED(asinh(injectionSwitch)) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + _GLF_IDENTITY(vec2(0.0, 0.0), mix(vec2(_GLF_FUZZED(3.4), _GLF_FUZZED((-9.9 / -18.94))), vec2(_GLF_IDENTITY((vec2(0.0, 0.0))[0], min((vec2(0.0, 0.0))[0], _GLF_IDENTITY((vec2(0.0, 0.0))[0], float(mat4x3((vec2(0.0, 0.0))[0], 1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, 0.0))))), (vec2(0.0, 0.0))[1]), bvec2(true, true)))))).y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))) && true), false, true, false)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(! (! (injectionSwitch.x > injectionSwitch.y)), false, false, true)), bool(bool(_GLF_IDENTITY(bool(bvec4(! (! (injectionSwitch.x > injectionSwitch.y)), false, false, true)), (bool(bvec4(! (! (injectionSwitch.x > injectionSwitch.y)), false, false, true))) && true))))))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-1.8)), vec2(_GLF_FUZZED(3.8), (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))[1]), bvec2(false, true))).x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y))))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false)))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(1213.9914), _GLF_FUZZED(-5.7)), bvec2(false, false))).y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - determinant(mat3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 1.0, 0.0, log(1.0), 1.0, 0.0, 0.0))))))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  return;
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, 0u | (workgroup_base + subgroup_id * subgroup_size))) | uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 1.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, exp(0.0), determinant(mat3(sin(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 1.0)))))), clamp(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u) + _GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), max(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))))), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))), _GLF_IDENTITY((uint(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))), ((uint(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))))) | ((uint(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))))) | 0u), uint(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))))), uint(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))))))), (subgroup_id * _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), max(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))))), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))), _GLF_IDENTITY((uint(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))), ((uint(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))))) | ((uint(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))))) | 0u), uint(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))))), uint(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))))))) >> 0u))), workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + _GLF_IDENTITY(subgroup_id, 0u + (subgroup_id)) * subgroup_size) | 0u))) + subgroup_local_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), (! (false)) || false))))), (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-10.07))), mix(float(_GLF_FUZZED(296.668)), float(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(_GLF_IDENTITY(-10.07, clamp(-10.07, -10.07, _GLF_IDENTITY(-10.07, min(-10.07, -10.07)))))))), bool(true))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false)))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, 1.0, 1.0)))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && true)))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(34.42)), bool(false))), 0.0)), injectionSwitch)).x > injectionSwitch.y)) || _GLF_IDENTITY((false), bool(bvec3((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false)))), false || (_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false))))))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 buf[virtual_gid] = 1;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   int i = 0;
   buf[next_virtual_gid] = 2;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, true)), bool(bvec4(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), false, true)), false, false, true)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! _GLF_IDENTITY((false), ! (! ((false))))), ((! (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           return;
           if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, false)))))))
            return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (true && (false)))))))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))), bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))), ! (! (bool(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))))))))))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
        return;
       return;
      }
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   buf[next_virtual_gid] = _GLF_IDENTITY(2, (_GLF_IDENTITY(_GLF_IDENTITY(2, (2) - 0), max(_GLF_IDENTITY(2, _GLF_IDENTITY((2), int(_GLF_IDENTITY(int((2)), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(int((2)), 0), (ivec2(int((2)), _GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, 0)), _GLF_IDENTITY(int(int(_GLF_IDENTITY(0, clamp(0, 0, 0)))), 0 | (int(int(_GLF_IDENTITY(0, clamp(0, 0, 0))))))))) | _GLF_IDENTITY(ivec2(0, _GLF_IDENTITY(0, (0) >> 0)), (_GLF_IDENTITY(ivec2(0, 0), ~ (~ (_GLF_IDENTITY(ivec2(0, _GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (0) ^ 0)))), clamp(_GLF_IDENTITY(ivec2(0, 0), (ivec2(0, 0)) ^ ivec2(0, 0)), ivec2(0, 0), ivec2(0, 0))))))) >> ivec2(0, 0)))), int(ivec2(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(int((2)), 0), _GLF_IDENTITY((ivec2(_GLF_IDENTITY(int((2)), _GLF_IDENTITY(_GLF_IDENTITY(max(int((2)), int((2))), min(_GLF_IDENTITY(max(int((2)), int((2))), (max(_GLF_IDENTITY(int((2)), min(int((2)), int((2)))), int((2)))) * 1), max(int((2)), int((2))))), (false ? _GLF_FUZZED(39900) : max(int((2)), int((2)))))), 0)), max(_GLF_IDENTITY((ivec2(_GLF_IDENTITY(int((2)), _GLF_IDENTITY(_GLF_IDENTITY(max(int((2)), int((2))), min(_GLF_IDENTITY(max(int((2)), int((2))), (max(_GLF_IDENTITY(int((2)), min(int((2)), int((2)))), int((_GLF_IDENTITY(2, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(2, ~ (~ (2))), 0), (true ? ivec2(_GLF_IDENTITY(2, ~ (~ (2))), 0) : _GLF_FUZZED(ivec2(-34320, 63855))))), (int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(2, ~ (~ (2))), 0), (true ? ivec2(_GLF_IDENTITY(2, ~ (~ (2))), 0) : _GLF_FUZZED(ivec2(-34320, 63855)))))) * 1)))))) * 1), max(int((2)), int((2))))), (false ? _GLF_FUZZED(39900) : max(int((2)), int((2)))))), 0)), ivec2(0, 0) | ((ivec2(_GLF_IDENTITY(int((2)), _GLF_IDENTITY(_GLF_IDENTITY(max(int((2)), int((_GLF_IDENTITY(2, (2) | (2))))), min(_GLF_IDENTITY(max(int((2)), int((2))), (max(_GLF_IDENTITY(int((_GLF_IDENTITY(2, (2) - int(_GLF_ZERO(0.0, injectionSwitch.x))))), min(int((2)), int((2)))), int((2)))) * 1), max(int((2)), int((2))))), (false ? _GLF_FUZZED(39900) : max(int((2)), int((2)))))), 0)))), (ivec2(_GLF_IDENTITY(int((2)), _GLF_IDENTITY(_GLF_IDENTITY(max(int((2)), int((2))), min(_GLF_IDENTITY(max(int((2)), int((2))), (max(_GLF_IDENTITY(int((2)), min(int((2)), int((2)))), int((2)))) * 1), max(int((2)), int((2))))), (false ? _GLF_FUZZED(39900) : max(int((2)), int((2)))))), 0)))) | _GLF_IDENTITY(ivec2(0, 0), (true ? ivec2(0, 0) : _GLF_FUZZED((- ivec2(80116, -33892))))))), clamp(int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(int((2)), 0), (ivec2(int((2)), 0)) / ivec2(1, 1)), _GLF_IDENTITY((ivec2(_GLF_IDENTITY(_GLF_IDENTITY(int((2)), int(_GLF_ZERO(0.0, injectionSwitch.x)) | (int((2)))), _GLF_IDENTITY(_GLF_IDENTITY(max(int((2)), int((2))), min(_GLF_IDENTITY(max(int((2)), int((2))), (max(_GLF_IDENTITY(int((2)), min(int((2)), int((2)))), int((2)))) * 1), max(int((2)), int((2))))), (false ? _GLF_FUZZED(39900) : max(int((2)), int((2)))))), 0)), max(_GLF_IDENTITY((ivec2(_GLF_IDENTITY(int((2)), _GLF_IDENTITY(_GLF_IDENTITY(max(int((2)), int((2))), min(_GLF_IDENTITY(_GLF_IDENTITY(max(int((2)), int((2))), max(max(int((2)), int((2))), _GLF_IDENTITY(max(int((2)), int((2))), min(max(int((2)), int((2))), max(int((2)), int((2))))))), (max(_GLF_IDENTITY(int((2)), min(int((2)), int((2)))), int((2)))) * 1), max(int((2)), int((2))))), (false ? _GLF_FUZZED(39900) : max(int((2)), int((2)))))), 0)), ivec2(0, 0) | ((ivec2(_GLF_IDENTITY(int((2)), _GLF_IDENTITY(_GLF_IDENTITY(max(int((2)), int((2))), min(_GLF_IDENTITY(max(int((2)), int((2))), (max(_GLF_IDENTITY(int((2)), min(int((2)), int((2)))), int((2)))) * 1), max(int((2)), int((2))))), (false ? _GLF_FUZZED(39900) : max(int((2)), int((2)))))), 0)))), (ivec2(_GLF_IDENTITY(int((2)), _GLF_IDENTITY(_GLF_IDENTITY(max(int((2)), int((2))), min(_GLF_IDENTITY(max(int((2)), int((2))), (max(_GLF_IDENTITY(int((2)), min(int(_GLF_IDENTITY((2), (_GLF_IDENTITY((2), clamp((2), (2), (2)))) >> 0)), int((2)))), int((2)))) * 1), max(int((2)), int((2))))), (false ? _GLF_FUZZED(39900) : max(int((2)), int((2)))))), 0)))) | ivec2(0, 0))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(int((2)), 0), _GLF_IDENTITY((ivec2(_GLF_IDENTITY(int((2)), _GLF_IDENTITY(_GLF_IDENTITY(max(int((2)), int((2))), min(_GLF_IDENTITY(max(int((2)), int((2))), (max(_GLF_IDENTITY(int((2)), min(int((2)), int((2)))), int((2)))) * 1), max(int((2)), int((2))))), (false ? _GLF_FUZZED(39900) : max(int((2)), int((2)))))), 0)), max(_GLF_IDENTITY((ivec2(_GLF_IDENTITY(int((2)), _GLF_IDENTITY(_GLF_IDENTITY(max(int((2)), int((2))), min(_GLF_IDENTITY(max(int((2)), int((2))), (max(_GLF_IDENTITY(int((2)), min(int((2)), int((2)))), int((2)))) * 1), max(int((2)), int((2))))), (false ? _GLF_FUZZED(39900) : max(int((2)), int((2)))))), 0)), ivec2(0, 0) | ((_GLF_IDENTITY(ivec2(_GLF_IDENTITY(int((2)), _GLF_IDENTITY(_GLF_IDENTITY(max(int((2)), int((2))), min(_GLF_IDENTITY(max(int((2)), int((2))), (max(_GLF_IDENTITY(int((2)), min(int((2)), int((2)))), int((2)))) * 1), max(int((2)), int((2))))), (false ? _GLF_FUZZED(39900) : max(int((2)), int((2)))))), 0), (ivec2(_GLF_IDENTITY(int((2)), _GLF_IDENTITY(_GLF_IDENTITY(max(int((2)), int((2))), min(_GLF_IDENTITY(max(int((2)), int((2))), (max(_GLF_IDENTITY(int((2)), min(int((2)), int((2)))), int((2)))) * 1), max(int((2)), int((2))))), (false ? _GLF_FUZZED(39900) : max(int((2)), int((2)))))), 0)) ^ ivec2(0, 0))))), (ivec2(_GLF_IDENTITY(int((2)), _GLF_IDENTITY(_GLF_IDENTITY(max(int((2)), int((2))), min(_GLF_IDENTITY(max(int((2)), int((2))), (max(_GLF_IDENTITY(int((2)), min(int((2)), int((2)))), int((2)))) * 1), max(int((2)), int((2))))), (false ? _GLF_FUZZED(39900) : max(int((2)), int((2)))))), 0)))) | ivec2(0, 0))), min(int(_GLF_IDENTITY(ivec2(int((2)), 0), _GLF_IDENTITY((ivec2(_GLF_IDENTITY(int((2)), _GLF_IDENTITY(_GLF_IDENTITY(max(int((2)), int((2))), min(_GLF_IDENTITY(max(int((2)), int((2))), (max(_GLF_IDENTITY(int((2)), min(int((2)), int((2)))), int((2)))) * 1), max(int((2)), int((2))))), (false ? _GLF_FUZZED(39900) : max(int((2)), int((2)))))), 0)), max(_GLF_IDENTITY((ivec2(_GLF_IDENTITY(int((2)), _GLF_IDENTITY(_GLF_IDENTITY(max(int((2)), int((2))), min(_GLF_IDENTITY(max(int((2)), int((2))), (max(_GLF_IDENTITY(int((2)), min(int((2)), int((2)))), int((2)))) * 1), max(int((2)), int((2))))), (false ? _GLF_FUZZED(39900) : max(int((2)), int((2)))))), 0)), ivec2(0, 0) | ((ivec2(_GLF_IDENTITY(int((2)), _GLF_IDENTITY(_GLF_IDENTITY(max(int((2)), int((2))), min(_GLF_IDENTITY(max(int((2)), int((2))), (max(_GLF_IDENTITY(int((2)), min(int((2)), int((2)))), int((2)))) * 1), max(int((2)), int((2))))), (false ? _GLF_FUZZED(39900) : max(int((2)), int((2)))))), 0)))), (ivec2(_GLF_IDENTITY(int((2)), _GLF_IDENTITY(_GLF_IDENTITY(max(int((2)), int((2))), min(_GLF_IDENTITY(max(int((2)), int((2))), (max(_GLF_IDENTITY(int((2)), min(int((2)), int((2)))), int((2)))) * 1), max(int((2)), int((2))))), (false ? _GLF_FUZZED(39900) : max(int((2)), int((2)))))), 0)))) | ivec2(0, 0))), int(_GLF_IDENTITY(ivec2(int((2)), 0), _GLF_IDENTITY((ivec2(_GLF_IDENTITY(int((2)), _GLF_IDENTITY(_GLF_IDENTITY(max(int((2)), int((2))), min(_GLF_IDENTITY(max(int((2)), int((2))), (max(_GLF_IDENTITY(int((2)), min(int((2)), int((2)))), int((2)))) * 1), max(int(_GLF_IDENTITY((2), int(ivec3((2), 0, (0 << _GLF_IDENTITY(int(5), int(5))))))), int((2))))), (false ? _GLF_FUZZED(39900) : max(int((2)), int((2)))))), 0)), max(_GLF_IDENTITY((ivec2(_GLF_IDENTITY(int((2)), _GLF_IDENTITY(_GLF_IDENTITY(max(int((2)), int((2))), min(_GLF_IDENTITY(max(int((2)), int((2))), (max(_GLF_IDENTITY(int((2)), min(int((2)), int((2)))), int((2)))) * 1), max(int((2)), int((2))))), (false ? _GLF_FUZZED(39900) : max(int((2)), int((2)))))), 0)), ivec2(0, 0) | ((ivec2(_GLF_IDENTITY(int((2)), _GLF_IDENTITY(_GLF_IDENTITY(max(int((2)), int((2))), min(_GLF_IDENTITY(max(int((2)), int((2))), (max(_GLF_IDENTITY(int((2)), min(int((2)), int((2)))), int((2)))) * 1), max(int((2)), int((2))))), (false ? _GLF_FUZZED(39900) : max(int((2)), int((2)))))), 0)))), (ivec2(_GLF_IDENTITY(int((2)), _GLF_IDENTITY(_GLF_IDENTITY(max(int((2)), int((2))), min(_GLF_IDENTITY(max(int((2)), int((2))), (max(_GLF_IDENTITY(int((2)), min(int((2)), int((2)))), int((2)))) * 1), max(int((2)), int((2))))), (false ? _GLF_FUZZED(39900) : max(int((2)), int((2)))))), 0)))) | ivec2(0, 0))))), int(_GLF_IDENTITY(ivec2(int((2)), 0), _GLF_IDENTITY((ivec2(_GLF_IDENTITY(int((2)), _GLF_IDENTITY(_GLF_IDENTITY(max(int((2)), int((2))), min(_GLF_IDENTITY(max(int((2)), int((2))), _GLF_IDENTITY((max(_GLF_IDENTITY(int((2)), min(int((2)), int((2)))), int((2)))) * 1, ~ (_GLF_IDENTITY(~ ((max(_GLF_IDENTITY(int((2)), min(int((2)), int((2)))), int((2)))) * 1), (~ ((max(_GLF_IDENTITY(int((2)), min(int((2)), int((2)))), int((2)))) * 1)) | 0)))), max(int((2)), int((2))))), (false ? _GLF_FUZZED(39900) : max(int((2)), int((2)))))), 0)), max(_GLF_IDENTITY(_GLF_IDENTITY((ivec2(_GLF_IDENTITY(int((2)), _GLF_IDENTITY(_GLF_IDENTITY(max(int((2)), int((2))), min(_GLF_IDENTITY(max(int((2)), int((2))), (max(_GLF_IDENTITY(int((2)), min(int((2)), int((2)))), int((2)))) * 1), max(int((2)), int((2))))), (false ? _GLF_FUZZED(39900) : max(int((2)), int((2)))))), 0)), min((ivec2(_GLF_IDENTITY(int((2)), _GLF_IDENTITY(_GLF_IDENTITY(max(int((2)), int((2))), min(_GLF_IDENTITY(max(int((2)), int((2))), (max(_GLF_IDENTITY(int((2)), min(int((2)), int((2)))), int((2)))) * 1), max(int((2)), int((2))))), (false ? _GLF_FUZZED(39900) : max(int((2)), int((2)))))), 0)), _GLF_IDENTITY((ivec2(_GLF_IDENTITY(int((2)), _GLF_IDENTITY(_GLF_IDENTITY(max(int((2)), int((2))), min(_GLF_IDENTITY(max(int((2)), int((2))), (max(_GLF_IDENTITY(int((2)), min(int((2)), int((2)))), int((2)))) * 1), max(int((2)), int((2))))), (false ? _GLF_FUZZED(39900) : max(int((2)), int((2)))))), 0)), (false ? _GLF_FUZZED((ivec2(-61494, -68700) & ivec2(43211, -69040))) : (ivec2(_GLF_IDENTITY(int((2)), _GLF_IDENTITY(_GLF_IDENTITY(max(int((2)), int((2))), min(_GLF_IDENTITY(max(int((2)), int((2))), (max(_GLF_IDENTITY(int((2)), min(int((2)), int((2)))), int((2)))) * 1), max(int((2)), int((2))))), (false ? _GLF_FUZZED(39900) : max(int((2)), int((2)))))), 0)))))), ivec2(0, 0) | ((ivec2(_GLF_IDENTITY(int((2)), _GLF_IDENTITY(_GLF_IDENTITY(max(int((2)), int((2))), min(_GLF_IDENTITY(max(int((2)), int((2))), (max(_GLF_IDENTITY(int((2)), min(int((2)), int((2)))), int((2)))) * 1), max(int((2)), int((2))))), (false ? _GLF_FUZZED(39900) : max(int((2)), int((2)))))), 0)))), (ivec2(_GLF_IDENTITY(int((2)), _GLF_IDENTITY(_GLF_IDENTITY(max(int((2)), int((2))), min(_GLF_IDENTITY(max(int((2)), int((2))), (max(_GLF_IDENTITY(int((2)), min(int((2)), int((2)))), int((2)))) * 1), max(int((2)), int((2))))), (false ? _GLF_FUZZED(39900) : max(int((2)), int((2)))))), 0)))) | ivec2(0, 0))))), _GLF_IDENTITY(0, (0) ^ 0))))))) * 1), _GLF_IDENTITY(2, 0 ^ (2))))) << 0);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(false, (false) || false))), bool(bool(false)))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(false, (false) || false))), bool(bool(false))))))) || false)))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! (_GLF_IDENTITY((false) || false, true && (_GLF_IDENTITY((false) || false, ((false) || false) && true)))))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) && true), ! _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) && true)), _GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), bool(bool(! (_GLF_IDENTITY(false, true && (false)))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), bool(bvec4(! (_GLF_IDENTITY(false, true && (false))), true, true, _GLF_IDENTITY(true, (true) || false))))) || false))), (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ((false)) || false)), true && (! (_GLF_IDENTITY((false), ((false)) || false)))))), ! (! (_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), bool(bvec2((false), false))))))))) && true)))), (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_IDENTITY((false), ! (! ((false)))) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_IDENTITY((false), ! (! ((false)))) && true)))))) && true)), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((_GLF_IDENTITY(false, false || (false)))))) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), true && (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! ((false)), (! ((false))) && true), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(! ((false)), (! ((false))) && true), false), false)))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! ((false)), (! ((false))) && true), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(! ((false)), (! ((false))) && true), false), false)))), bool(bool(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! ((false)), (! ((false))) && true), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(! ((false)), (! ((false))) && true), false), false)))))))))), (_GLF_IDENTITY(! ((false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! ((false)), (! _GLF_IDENTITY(((false)), bool(bvec3(((false)), true, true)))) && true), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(! ((false)), _GLF_IDENTITY((! ((false))), bool(_GLF_IDENTITY(bool((! ((false)))), (bool((! ((false))))) && true))) && true), false), false)))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! ((false)), (! ((false))) && true), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(! ((false)), (! ((false))) && true), false), false)))), bool(bool(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! ((false)), (! ((false))) && true), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(! ((false)), (! ((false))) && true), false), false))))))))))) && true))))) && true)))), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_IDENTITY((false), ! (! ((false)))) && true))) && true)), true, true, true)), ! (! (_GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY(false, true && (false)) || (false)))))) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), true && (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! ((false)), (! ((false))) && true), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(! ((false)), (! ((false))) && true), false), false)))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! ((false)), (! ((false))) && true), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(! ((false)), (! ((false))) && true), false), false)))), bool(bool(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! ((false)), (! ((false))) && true), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(! ((false)), (! ((false))) && true), false), false)))))))))))))) && true)))), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_IDENTITY((false), ! (! ((false)))) && true))) && true)), true, _GLF_IDENTITY(true, bool(bool(true))), true)), (bool(bvec4((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((_GLF_IDENTITY(false, false || (false)))))) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), true && (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! ((false)), (! (_GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false))))) && true), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(! ((false)), (! ((false))) && true), false), false)))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! ((false)), (! ((false))) && true), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(! ((false)), (! ((false))) && true), false), false)))), bool(bool(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! ((false)), (! ((false))) && true), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(! ((false)), (! ((false))) && true), false), false)))))))))))))) && true)))), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_IDENTITY(true, ! (! (true))))))))))), _GLF_IDENTITY((false), ! (! ((false)))) && true))) && true)), true, true, true))) && true))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) && true), ! _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) && true)), _GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), bool(bool(! (_GLF_IDENTITY(false, true && (false)))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), bool(bvec4(! (_GLF_IDENTITY(false, true && (false))), true, true, true)))) || false))), (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ((false)) || false)), true && (! (_GLF_IDENTITY((false), ((false)) || false)))))), ! (! (_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), bool(bvec2((false), false))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) || false), ! (! (_GLF_IDENTITY((false), ((false)) || false))))))), true && (! (_GLF_IDENTITY((false), ((false)) || false)))))), ! (! (_GLF_IDENTITY((false), _GLF_IDENTITY(! (! (_GLF_IDENTITY((false), bool(bvec2((false), false))))), (_GLF_IDENTITY(! (! (_GLF_IDENTITY((false), bool(bvec2((false), false))))), true && (! (! (_GLF_IDENTITY((false), bool(bvec2((false), false)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) && true)))), (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_IDENTITY((false), ! (! ((false)))) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_IDENTITY((false), ! (! ((false)))) && true)))))) && true)), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((_GLF_IDENTITY(false, false || (false)))))) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), true && (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! ((false)), (! ((false))) && true), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(! ((false)), (! ((false))) && true), false), false)))), false || _GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! ((false)), (! ((false))) && true), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(! ((false)), (! ((false))) && true), false), false)))), bool(bool(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! ((false)), (! ((false))) && true), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(! ((false)), (! ((false))) && true), false), false)))))))), bool(bvec4((_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! ((false)), (! ((false))) && true), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(! ((false)), (! ((false))) && true), false), false)))), bool(bool(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! ((false)), (! ((false))) && true), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(! ((false)), (! ((false))) && true), false), false)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))))))) && true)))), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_IDENTITY((false), ! (! ((false)))) && true))) && true)), true, true, true)), ! (! (_GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ((_GLF_IDENTITY(false, false || (false)))) || false)), ! (! ((_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ((_GLF_IDENTITY(false, false || (false)))) || false))))))) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), true && (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! ((false)), (! ((false))) && true), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(! ((false)), (! ((false))) && true), false), false)))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! ((false)), (! ((false))) && true), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(! ((false)), (! ((false))) && true), false), false)))), bool(bool(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! ((false)), (! ((false))) && true), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(! ((false)), (! ((false))) && true), false), false)))))))))))))) && true)))), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_IDENTITY((false), ! (! ((false)))) && true))) && true)), true, true, true)), (bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((_GLF_IDENTITY(false, false || (false)))))) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), true && (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! ((false)), (! ((false))) && true), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(! ((false)), (! ((false))) && true), false), false)))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! ((false)), (! ((false))) && true), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(! ((false)), (! ((false))) && true), false), false)))), bool(bool(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! ((false)), (! ((false))) && true), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(! ((false)), (! ((false))) && true), false), false)))))))))))))) && true)))), (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((_GLF_IDENTITY(false, false || (false)))))) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), true && (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! ((false)), (! ((false))) && true), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(! ((false)), (! ((false))) && true), false), false)))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! ((false)), (! ((false))) && true), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(! ((false)), (! ((false))) && true), false), false)))), bool(bool(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! ((false)), (! ((false))) && true), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(! ((false)), (! ((false))) && true), false), false)))))))))))))) && true)))), (! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((_GLF_IDENTITY(false, false || (false)))))) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), true && (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! ((false)), (! ((false))) && true), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(! ((false)), (! ((false))) && true), false), false)))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! ((false)), (! ((false))) && true), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(! ((false)), (! ((false))) && true), false), false)))), bool(bool(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! ((false)), (! ((false))) && true), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(! ((false)), (! ((false))) && true), false), false)))))))))))))) && true))))) || false)) && true), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_IDENTITY((false), ! (! ((false)))) && true))) && true)), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, false)), false || (bool(bvec3(true, false, false))))), true, true))) && true))))))))), false || (_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) && true), ! _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) && true)), _GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), bool(bool(! (_GLF_IDENTITY(false, true && (false)))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), bool(bvec4(! (_GLF_IDENTITY(false, true && (false))), true, true, true)))) || false))), (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(bvec4((false), true, true, true)))) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ((false)) || false)), true && (! (_GLF_IDENTITY((false), ((false)) || false)))))), ! (! (_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), bool(bvec2((false), false))))))))) && true)))), (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_IDENTITY((false), ! (! ((false)))) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_IDENTITY((false), ! (! ((false)))) && true)))))) && true)), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((_GLF_IDENTITY(false, false || (false)))))) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), true && (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! ((false)), (! ((false))) && true), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(! ((false)), (! ((false))) && true), false), false)))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! ((false)), (! ((false))) && true), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(! ((false)), (! ((false))) && true), false), false)))), bool(bool(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! ((false)), (! ((false))) && true), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(! ((false)), (! ((false))) && true), false), false)))))))))))))) && true)))), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_IDENTITY((false), ! (! ((false)))) && true))) && true)), true, true, true)), ! (! (_GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((_GLF_IDENTITY(false, false || (false)))))) && true), (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((_GLF_IDENTITY(false, false || (false)))))) && true)) || false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), true && (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! ((false)), (! ((false))) && true), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(! ((false)), (! ((false))) && true), false), false)))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! ((false)), (! ((false))) && true), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(! ((false)), (! ((false))) && true), false), false)))), bool(bool(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! ((false)), (! ((false))) && true), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(! ((false)), (! ((false))) && true), false), false)))))))))))))) && true)))), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_IDENTITY((false), ! (! ((false)))) && true))) && true)), true, true, true)), (bool(bvec4((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((_GLF_IDENTITY(false, false || (false)))))) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! (! ((false))))) || false), ! (! ((false)))), true && (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! ((false)), (! ((false))) && true), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(! ((false)), (! ((false))) && true), false), false)))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! ((false)), (! ((false))) && true), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(! ((false)), (! ((false))) && true), false), false)))), bool(bool(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! ((false)), (! ((false))) && true), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(! ((false)), (! ((false))) && true), false), false)))))))))))))) && true)))), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_IDENTITY((false), ! (! _GLF_IDENTITY(((false)), (((false))) && true))) && true))) && true)), true, true, true))) && true)))))))))))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) && true), ! _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) && true)), _GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), bool(bool(! (_GLF_IDENTITY(false, true && (false)))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), bool(bvec4(! (_GLF_IDENTITY(false, true && (false))), true, true, true)))) || false))), (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ((false)) || false)), true && (! (_GLF_IDENTITY((false), ((false)) || false)))))), ! (! (_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), bool(bvec2((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))), false))))))))) && true)))), (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_IDENTITY((false), ! (! ((false)))) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true)))))), _GLF_IDENTITY((false), ! (! ((false)))) && true)))))) && true)), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((_GLF_IDENTITY(false, false || (false)))))) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), true && (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! ((false)), (! ((false))) && true), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(! ((false)), (! ((false))) && true), false), false)))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! ((false)), (! ((false))) && true), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(! ((false)), (! ((false))) && true), false), false)))), bool(bool(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! ((false)), (! ((false))) && true), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(! ((false)), (! ((false))) && true), false), false)))))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), true && (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! ((false)), (! ((false))) && true), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(! ((false)), (_GLF_IDENTITY(! ((false)), ! (_GLF_IDENTITY(! (! ((false))), (! (! ((false)))) && true)))) && true), false), false)))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! ((false)), (! ((false))) && true), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(! ((false)), (_GLF_IDENTITY(! ((false)), bool(_GLF_IDENTITY(bool(! ((false))), false || (bool(! ((false)))))))) && _GLF_IDENTITY(true, (true) || false)), false), false)))), bool(bool(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! ((false)), (! ((false))) && true), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(! ((false)), (! ((false))) && true), false), false))))))))))))))) || false) && true)))), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_IDENTITY((false), ! (! ((false)))) && true))) && true)), true, true, true)), ! (! (_GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((_GLF_IDENTITY(false, false || (false)))))) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), true && (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! ((false)), (! ((false))) && true), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(! ((false)), (! ((false))) && true), false), false)))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! ((false)), (! ((false))) && true), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(! ((false)), (! ((false))) && true), false), false)))), bool(bool(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! ((false)), (! ((false))) && _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true))))), false), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(! ((false)), (! ((false))) && true), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))), false)), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(! ((false)), (! ((false))) && true), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))), false)), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(! ((false)), (! ((false))) && true), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))), false)), bvec2(bvec2(bvec2(bvec3(bvec2(_GLF_IDENTITY(! ((false)), (! ((false))) && true), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))), false))))), true))))), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(! ((false)), (! ((false))) && true), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))), false)), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(! ((false)), (! ((false))) && true), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))), false)), bvec2(bvec2(bvec2(bvec3(bvec2(_GLF_IDENTITY(! ((false)), (! ((false))) && true), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))), false))))), true))))))), bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(! ((false)), (! ((false))) && true), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))), false)), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(! ((false)), (! ((false))) && true), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))), false)), bvec2(bvec2(bvec2(bvec3(bvec2(_GLF_IDENTITY(! ((false)), (! ((false))) && true), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))), false))))), true)))))))))))))))))))))))) && true)))), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_IDENTITY((false), ! (! ((false)))) && true))) && true)), true, true, true)), (bool(bvec4((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((_GLF_IDENTITY(false, false || (false)))))) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), true && (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! ((false)), (! ((false))) && true), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(! ((false)), (! ((false))) && true), false), false)))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! ((false)), (! ((false))) && true), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(! ((false)), (! ((false))) && true), false), false)))), bool(bool(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! ((false)), (! ((false))) && true), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(! ((false)), (! ((false))) && true), false), false)))))))))))))) && true)))), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_IDENTITY((false), ! (! ((false)))) && true))) && true)), true, true, true))) && true))))))))), false || (_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) && true), ! _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) && true)), _GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), bool(bool(! (_GLF_IDENTITY(false, true && (false)))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))))), bool(bvec4(! (_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), ! (! (! ((false))))))))), true, true, true)))) || false))), (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ((false)) || false)), true && (! (_GLF_IDENTITY((false), ((false)) || false)))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), bool(bvec2((false), false)))))))), true && (! (! (_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), bool(bvec2((false), false))))))))))) && true)))), (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_IDENTITY((false), ! (! ((false)))) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_IDENTITY((false), ! (! ((false)))) && true)))))) && true)), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((_GLF_IDENTITY(false, false || (false)))))) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), true && (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! ((false)), (! ((false))) && true), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! ((false)), ! (_GLF_IDENTITY(! (! ((false))), bool(bool(! (! ((false)))))))), (! ((false))) && true), false), false)))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! ((false)), (! ((false))) && true), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(! ((false)), (! ((_GLF_IDENTITY(false, ! (! (false)))))) && true), false), false)))), bool(bool(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! ((false)), (! ((false))) && true), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(! ((false)), (! ((false))) && true), _GLF_IDENTITY(false, true && (false))), false)))))))))))))) && true)))), (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec2(false, true))), _GLF_IDENTITY((false), ! (! ((false)))) && true))) && true)), true, true, true)), ! (! (_GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((_GLF_IDENTITY(false, false || (false)))))) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), true && (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! ((false)), (! ((false))) && true), false), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(! ((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), (! ((false))) && true), false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(_GLF_IDENTITY(! ((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), (! ((false))) && true), false), false)), true))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! ((false)), (! ((false))) && true), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(! ((false)), (! ((false))) && true), false), false)))), bool(bool(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! ((_GLF_IDENTITY(false, (false) || false))), (! ((_GLF_IDENTITY(false, (false) && true)))) && true), false), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(! ((false)), (! _GLF_IDENTITY(((false)), (((false))) || false)) && true), false), false), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(! ((false)), (! _GLF_IDENTITY(((false)), (((false))) || false)) && true), false), false))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(! ((false)), (! _GLF_IDENTITY(((false)), (((false))) || false)) && true), false), false)))))))))))))))))))) && true)))), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_IDENTITY((false), ! (! ((false)))) && true))) && true)), true, true, true)), (bool(bvec4((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((_GLF_IDENTITY(false, false || (false)))))) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), true && (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! ((false)), (! ((false))) && true), false), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(! ((false)), (! ((false))) && true), false)), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(! ((false)), (! ((false))) && true), false)))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(! ((false)), (! ((false))) && true), false)), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(! ((false)), (! ((false))) && true), false)))))), false, true)))), bvec2(bvec3(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY((false), ((false)) || false)), (! ((false))) && true), false), false)))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! ((false)), (! ((false))) && true), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(! ((false)), (! _GLF_IDENTITY(((false)), bool(bvec2(((false)), true)))) && true), false), false)))), bool(bool(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! ((false)), (! ((false))) && true), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(! ((false)), (! ((false))) && true), false), false)))))))))))))) && true)))), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_IDENTITY((false), ! (! ((false)))) && true))) && true)), true, true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) || false)))) && true))))))))))))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
        }
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), (! (_GLF_IDENTITY(false, (false) && true))) || false)))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), false))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec3((injectionSwitch.x < injectionSwitch.y), true, false)))) && (false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
        }
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), false || (_GLF_IDENTITY(false, (false) && true))), true)), ! (_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))), bool(bvec4(! (bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))), false, true, true))))))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0) : _GLF_FUZZED(-60.48))))))))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
        }
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_DEAD(false)) || false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-3.3) : injectionSwitch.x))) / 1.0) > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
