#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_3 {
 mat4 _f0;
 mat3x2 _f1;
 uvec2 _f2;
 bvec4 _f3;
 uvec4 _f4;
 vec2 _f5;
} ;

struct _GLF_struct_4 {
 _GLF_struct_3 _f0;
 ivec2 _f1;
 mat3 _f2;
} ;

struct _GLF_struct_1 {
 ivec2 _f0;
 uvec3 _f1;
 mat2x4 _f2;
 bvec3 _f3;
 mat2 _f4;
} ;

struct _GLF_struct_0 {
 bvec2 _f0;
 mat4x2 _f1;
} ;

struct _GLF_struct_2 {
 uvec3 _f0;
 _GLF_struct_0 _f1;
 mat4 _f2;
 _GLF_struct_1 _f3;
} ;

struct _GLF_struct_5 {
 mat3x4 _f0;
 _GLF_struct_2 _f1;
 mat3 _f2;
 _GLF_struct_4 _f3;
 mat4x3 _f4;
 uint subgroup_local_id;
} ;

layout(set = 0, binding = 0) uniform buf0 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_5 _GLF_struct_replacement_5 = _GLF_struct_5(mat3x4(1.0), _GLF_struct_2(uvec3(1u), _GLF_struct_0(bvec2(true), mat4x2(1.0)), mat4(1.0), _GLF_struct_1(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, clamp(1, 1, 1))), (true ? ivec2(1) : _GLF_FUZZED(ivec2(_GLF_IDENTITY(17029, min(_GLF_IDENTITY(17029, (17029) | (_GLF_IDENTITY(17029, int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)) ^ (17029)))), 17029)), 68812)))), _GLF_IDENTITY((_GLF_IDENTITY(ivec2(1), (true ? ivec2(1) : _GLF_IDENTITY(_GLF_FUZZED(ivec2(17029, 68812)), min(_GLF_IDENTITY(_GLF_FUZZED(ivec2(17029, 68812)), max(_GLF_FUZZED(ivec2(17029, 68812)), _GLF_FUZZED(ivec2(17029, 68812)))), _GLF_IDENTITY(_GLF_FUZZED(ivec2(17029, 68812)), ivec2(0, 0) | (_GLF_FUZZED(ivec2(17029, 68812))))))))) ^ ivec2(0, 0), min((_GLF_IDENTITY(ivec2(1), (true ? ivec2(1) : _GLF_FUZZED(ivec2(17029, 68812))))) ^ ivec2(0, 0), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(ivec2(1), (true ? ivec2(_GLF_IDENTITY(1, (1) ^ 0)) : _GLF_FUZZED(ivec2(17029, 68812))))), ivec2(1, 1) * ((_GLF_IDENTITY(ivec2(1), (true ? ivec2(_GLF_IDENTITY(1, (1) ^ 0)) : _GLF_FUZZED(ivec2(17029, 68812))))))) ^ ivec2(0, 0), ~ (~ ((_GLF_IDENTITY(ivec2(1), (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bool(! (true))))))) && true) ? ivec2(1) : _GLF_FUZZED(ivec2(17029, _GLF_IDENTITY(68812, 0 | (68812))))))) ^ ivec2(0, 0))))))), _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x)) ^ (uvec3(1u))), mat2x4(1.0), _GLF_IDENTITY(bvec3(true), bvec3(_GLF_IDENTITY(bvec3(bvec3(true)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(true))), bvec3(bvec4(bvec3(bvec3(bvec3(true))), true))))))), _GLF_IDENTITY(mat2(1.0), (true ? _GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(_GLF_IDENTITY(1.3, (1.3) / 1.0), -6.5, -725.119, -5.1)) : mat2(1.0))) : _GLF_FUZZED(mat2(5.1, -799.333, -4.4, 2982.2509)))))), mat3(1.0), _GLF_struct_4(_GLF_struct_3(_GLF_IDENTITY(mat4(1.0), (mat4(1.0)) * mat4(_GLF_ONE(1.0, injectionSwitch.y))), mat3x2(_GLF_IDENTITY(1.0, float(mat3x2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(5943.4005)), float(_GLF_IDENTITY(1.0, 0.0 + (1.0))), bool(true))))), 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_ZERO(0.0, injectionSwitch.x) + (0.0)), 0.0)))), uvec2(1u), bvec4(true), uvec4(1u), vec2(1.0)), ivec2(1), mat3(1.0)), mat4x3(1.0), gl_SubgroupInvocationID);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec2(false, true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, ~ (_GLF_IDENTITY(~ (gl_NumWorkGroups), uvec3(uvec4(~ (gl_NumWorkGroups), _GLF_IDENTITY(1u, (1u) >> 0u)))))).x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (bool(_GLF_DEAD(false))), true && (! (bool(_GLF_DEAD(false)))))), ! (! ((_GLF_IDENTITY(! (bool(_GLF_DEAD(false))), true && (! (bool(_GLF_DEAD(false))))))))))), bool(bvec2(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(true, (true) || false))))), ! (! (bool(_GLF_DEAD(false)))))), true))), bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_DEAD(false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(bool(_GLF_DEAD(false)), true, false), bvec3(bvec4(bvec3(bool(_GLF_DEAD(false)), true, false), true)))), (bool(_GLF_IDENTITY(bvec3(bool(_GLF_DEAD(false)), true, false), bvec3(bvec4(bvec3(bool(_GLF_DEAD(false)), true, false), true))))) && true)), ! (! (bool(_GLF_DEAD(false)))))), true, false, true)))))), false || (_GLF_DEAD(false)))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_DEAD(false)))))), bool(bvec4(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_DEAD(false)))))), true, false, true)))))), _GLF_IDENTITY(false || (_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (false || (_GLF_DEAD(false))), bool(bvec3(! (false || (_GLF_DEAD(false))), true, true))))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_DEAD(false)))))), bool(bvec4(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_DEAD(false)))))), true, false, true)))))), false || (_GLF_DEAD(false))))))))), bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : workgroup_size, 0u | (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : workgroup_size)))) * _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(uint(uvec3(workgroup_id, 0u, 0u)), uint(uvec3(uint(uvec3(workgroup_id, 0u, 0u)), 0u, 1u)))), (_GLF_IDENTITY(workgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : workgroup_size)) * _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(uint(uvec3(workgroup_id, 0u, 0u)), uint(uvec3(uint(uvec3(workgroup_id, 0u, 0u)), 0u, 1u))))) ^ 0u);
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(workgroup_base))), clamp(_GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(workgroup_base))), _GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(workgroup_base))), _GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(workgroup_base))))), workgroup_base)), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, 1u, 1u))), (_GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, _GLF_IDENTITY(1u, 0u ^ (1u)), 1u)))) / 1u)) * 1u)) << 0u, min(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, 1u, 1u))), (_GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, _GLF_IDENTITY(1u, 0u ^ (1u)), 1u)))) / 1u)) * 1u)) << 0u, (true ? _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, 1u, 1u))), (_GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, _GLF_IDENTITY(1u, 0u ^ (1u)), 1u)))) / 1u)) * 1u)) << 0u, max((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 0u + (workgroup_base))) << (0u ^ 0u)), uint(uvec3(workgroup_base, 1u, 1u))), (_GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, _GLF_IDENTITY(1u, 0u ^ (1u)), 1u)))) / 1u)) * 1u)) << 0u, (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, 1u, 1u))), (_GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, _GLF_IDENTITY(1u, 0u ^ (1u)), 1u)))) / 1u)) * 1u)) << 0u)), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, 1u, 1u))), (_GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, _GLF_IDENTITY(1u, 0u ^ (1u)), 1u)))) / 1u)) * 1u)) << 0u, max((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, 1u, 1u))), (_GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, _GLF_IDENTITY(1u, 0u ^ (1u)), 1u)))) / 1u)) * 1u)) << 0u, (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, 1u, 1u))), (_GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, _GLF_IDENTITY(1u, 0u ^ (1u)), 1u)))) / 1u)) * 1u)) << _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))) | (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, 1u, 1u))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, _GLF_IDENTITY(1u, 0u ^ (1u)), 1u)))), ((_GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, _GLF_IDENTITY(1u, 0u ^ (1u)), 1u))))) | ((_GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, _GLF_IDENTITY(1u, 0u ^ (1u)), 1u)))))) / 1u)) * 1u)) << 0u, max((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, 1u, 1u))), (_GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, _GLF_IDENTITY(1u, 0u ^ (_GLF_IDENTITY(1u, (1u) >> 0u))), 1u)))) / 1u)) * 1u)) << 0u, (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, 1u, 1u))), (_GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, _GLF_IDENTITY(1u, 0u ^ (1u)), 1u)))) / 1u)) * 1u)) << 0u)), max(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, 1u, 1u))), (_GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, _GLF_IDENTITY(1u, 0u ^ (1u)), 1u)))) / 1u)) * 1u)) << 0u, max((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, 1u, 1u))), (_GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, _GLF_IDENTITY(1u, _GLF_IDENTITY(0u, 0u | (0u)) ^ (1u)), 1u)))) / 1u)) * 1u)) << 0u, (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, 1u, 1u))), (_GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, _GLF_IDENTITY(1u, 0u ^ (1u)), 1u)))) / 1u)) * 1u)) << 0u)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, 1u, 1u))), (_GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, _GLF_IDENTITY(1u, 0u ^ (1u)), 1u)))) / 1u)) * 1u)) << 0u, max((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, 1u, 1u))), (_GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, _GLF_IDENTITY(1u, 0u ^ (1u)), 1u)))) / 1u)) * 1u)) << 0u, (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, 1u, 1u))), (_GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, _GLF_IDENTITY(1u, 0u ^ (1u)), 1u)))) / 1u)) * 1u)) << 0u)), uint(uvec4(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, 1u, 1u))), (_GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, _GLF_IDENTITY(1u, 0u ^ (1u)), 1u)))) / 1u)) * 1u)) << 0u, max((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u)) | (_GLF_IDENTITY(workgroup_base, uint(uvec4(workgroup_base, 1u, 1u, 1u))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, 1u, 1u))), (_GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, 1u, 1u)))) / 1u), (_GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), 0u ^ (1u)), 1u)))) / 1u)) * 1u)) << 0u, (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, 1u, 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, _GLF_IDENTITY(1u, 0u ^ (1u)), 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, _GLF_IDENTITY(1u, 0u ^ (1u)), 1u))), ~ (~ (_GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, _GLF_IDENTITY(1u, _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, 0u ^ (0u)))) ^ (1u)), 1u))))))) / 1u)) / 1u)) * 1u)) << 0u)), 1u, 0u, 0u))))))) : _GLF_FUZZED(workgroup_size))), (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, 1u, 1u))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(1u, 0u ^ (1u)), (_GLF_IDENTITY(1u, 0u ^ (1u))) ^ 0u), 1u)))), clamp((_GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(1u, 0u ^ (1u)), (_GLF_IDENTITY(1u, 0u ^ (1u))) ^ 0u), 1u)))), (_GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(1u, 0u ^ (1u)), (_GLF_IDENTITY(1u, 0u ^ (1u))) ^ 0u), 1u)))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(1u, 0u ^ (1u)), (_GLF_IDENTITY(1u, 0u ^ (1u))) ^ 0u), 1u)))), ((_GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(1u, 0u ^ (1u)), (_GLF_IDENTITY(1u, 0u ^ (1u))) ^ 0u), 1u))))) >> 0u))) / 1u)) * 1u)) << 0u))) + subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_size))), subgroup_size, subgroup_size)), clamp(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, _GLF_IDENTITY(1u, _GLF_IDENTITY((1u) << _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) | 0u), 0u)), max((1u) << _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) | 0u), 0u)), (1u) << _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) | 0u), 0u))))), 1u))), uint(_GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY((1u ^ 1u), clamp((1u ^ 1u), (1u ^ 1u), (1u ^ 1u))) | (uint(uvec2(subgroup_id, uint(_GLF_ONE(1.0, injectionSwitch.y)))))), (_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, _GLF_IDENTITY(1u, (1u) << _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | 0u, ((0u) | 0u) << 0u)), 0u))), 1u))), uint(_GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY((1u ^ 1u), clamp((1u ^ 1u), (1u ^ 1u), (1u ^ 1u))) | (uint(uvec2(subgroup_id, uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2(injectionSwitch.y, 0.0, 1.0, 1.0)), float(mat3x2(float(mat2(injectionSwitch.y, 0.0, 1.0, 1.0)), 1.0, 1.0, 0.0, 0.0, 1.0))))))))))) | (_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, _GLF_IDENTITY(1u, (1u) << _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) | 0u), 0u))), 1u))), uint(_GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY((1u ^ 1u), clamp((1u ^ 1u), (1u ^ 1u), (1u ^ 1u))) | (uint(uvec2(subgroup_id, uint(_GLF_ONE(1.0, injectionSwitch.y))))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec2(subgroup_id, uint(_GLF_ONE(1.0, injectionSwitch.y)))), (1u ^ 1u) | (uint(uvec2(subgroup_id, _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(uvec3(uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, 1u)))))))), (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(subgroup_id, uint(_GLF_ONE(1.0, injectionSwitch.y)))), (1u ^ 1u) | (uint(uvec2(subgroup_id, _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(uvec3(uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, 1u))))))), max(_GLF_IDENTITY(uint(uvec2(subgroup_id, uint(_GLF_ONE(1.0, injectionSwitch.y)))), (1u ^ 1u) | (uint(uvec2(subgroup_id, _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(uvec3(uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, 1u))))))), _GLF_IDENTITY(uint(uvec2(subgroup_id, uint(_GLF_ONE(1.0, injectionSwitch.y)))), (1u ^ 1u) | (uint(uvec2(subgroup_id, _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(uvec3(uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, 1u))))))))))) - (0u & 142916u)), _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec2(subgroup_id, uint(_GLF_ONE(1.0, injectionSwitch.y)))), (1u ^ 1u) | (uint(uvec2(subgroup_id, uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, float(vec4(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 1.0, 0.0, 0.0)))))))))))) * subgroup_size, workgroup_base + subgroup_id * subgroup_size, workgroup_base + _GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) - (1u ^ 1u)))) * subgroup_size)) + _GLF_struct_replacement_5.subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, clamp(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size)) + _GLF_struct_replacement_5.subgroup_local_id, clamp(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(clamp(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) << 0u), workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size), clamp(clamp(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size), _GLF_IDENTITY(clamp(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size), uint(uvec3(clamp(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size), 0u, 1u))), clamp(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size)))) + _GLF_struct_replacement_5.subgroup_local_id, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, 0u + (workgroup_base + subgroup_id * subgroup_size)), workgroup_base + subgroup_id * subgroup_size, workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size))) | (subgroup_id * subgroup_size)), ((uint(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y)) << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))) * (subgroup_id * _GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(atomicCompSwap(workgroup_base, subgroup_id, num_workgroup)))))))) + _GLF_struct_replacement_5.subgroup_local_id, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))) >> 0u) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), (subgroup_id) - 0u) * subgroup_size, workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size)) + _GLF_struct_replacement_5.subgroup_local_id))) ^ 0u);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, 1u * (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY((workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) + _GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size))), _GLF_IDENTITY(uint(uvec4(uint(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size))), 0u, 0u, 1u)), (uint(uvec4(uint(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size))), 0u, 0u, 1u))) - 0u)))), (false ? _GLF_FUZZED(subgroup_size) : workgroup_base + subgroup_id * subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY((subgroup_id), clamp((subgroup_id), (subgroup_id), _GLF_IDENTITY((subgroup_id), ((subgroup_id)) + 0u))))) >> 0u) * subgroup_size, (false ? _GLF_FUZZED(subgroup_size) : workgroup_base + subgroup_id * subgroup_size)), 0u ^ (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u) * subgroup_size, (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(uvec2(workgroup_base + subgroup_id * subgroup_size, 0u)))))))) + 0u)), ((_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u) * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x)) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), (workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u), clamp(subgroup_size, subgroup_size, subgroup_size))) ^ 0u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(atomicXor(subgroup_id, workgroup_id)) : subgroup_size)), subgroup_size))) ^ 0u), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) ^ 0u), (_GLF_IDENTITY(false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) ^ 0u), (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) ^ 0u)) << 0u))), 1u, 1u))))))))) | (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))) | (subgroup_id))) >> 0u, _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))) | (subgroup_id))) >> 0u, ((_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))) | (subgroup_id))) >> 0u) >> (0u << _GLF_IDENTITY(uint(5u), uint(5u))))) + 0u, uint(uvec2(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))) | (subgroup_id))) >> 0u, ((_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))) | (subgroup_id))) >> 0u) >> (0u << _GLF_IDENTITY(uint(5u), uint(5u))))) + 0u, ((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))) | (subgroup_id))) >> 0u, ((_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))) | (subgroup_id))) >> 0u) >> (0u << _GLF_IDENTITY(uint(5u), uint(5u))))) + 0u) / 1u), 1u))))) * subgroup_size, (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_FUZZED(subgroup_size), 1u, 0u), (uvec3(_GLF_FUZZED(subgroup_size), 1u, 0u)) / uvec3(1u, 1u, 1u)), ~ (_GLF_IDENTITY(~ (uvec3(_GLF_FUZZED(subgroup_size), 1u, 0u)), uvec3(0u, 0u, 0u) | (~ _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((uvec3(_GLF_FUZZED(subgroup_size), 1u, 0u)), (_GLF_IDENTITY((uvec3(_GLF_FUZZED(subgroup_size), 1u, 0u)), (true ? _GLF_IDENTITY((uvec3(_GLF_FUZZED(subgroup_size), 1u, 0u)), ((uvec3(_GLF_FUZZED(subgroup_size), 1u, 0u))) | ((uvec3(_GLF_FUZZED(subgroup_size), 1u, 0u)))) : _GLF_FUZZED(uvec3(94886u, 38350u, 101943u))))) / uvec3(1u, 1u, 1u)), min((uvec3(_GLF_FUZZED(subgroup_size), 1u, 0u)), _GLF_IDENTITY((uvec3(_GLF_FUZZED(subgroup_size), 1u, 0u)), (_GLF_IDENTITY((uvec3(_GLF_FUZZED(subgroup_size), 1u, 0u)), ((uvec3(_GLF_FUZZED(subgroup_size), 1u, 0u))) >> uvec3(0u, 0u, 0u))) | ((uvec3(_GLF_FUZZED(subgroup_size), 1u, 0u)))))), (_GLF_IDENTITY((uvec3(_GLF_FUZZED(subgroup_size), 1u, 0u)), min((uvec3(_GLF_FUZZED(subgroup_size), 1u, 0u)), _GLF_IDENTITY((uvec3(_GLF_FUZZED(subgroup_size), 1u, 0u)), (_GLF_IDENTITY((uvec3(_GLF_FUZZED(subgroup_size), 1u, 0u)), ((uvec3(_GLF_FUZZED(subgroup_size), 1u, 0u))) >> uvec3(0u, 0u, 0u))) | ((uvec3(_GLF_FUZZED(subgroup_size), 1u, 0u))))))) - uvec3(0u, 0u, 0u))))))), ~ (~ (uint(_GLF_IDENTITY(uvec3(_GLF_FUZZED(subgroup_size), 1u, 0u), ~ (_GLF_IDENTITY(~ (uvec3(_GLF_FUZZED(subgroup_size), 1u, 0u)), uvec3(0u, 0u, 0u) | (~ _GLF_IDENTITY((uvec3(_GLF_FUZZED(subgroup_size), 1u, 0u)), max((uvec3(_GLF_FUZZED(subgroup_size), 1u, 0u)), _GLF_IDENTITY((uvec3(_GLF_FUZZED(subgroup_size), 1u, 0u)), (true ? (uvec3(_GLF_FUZZED(subgroup_size), 1u, 0u)) : _GLF_FUZZED(uvec3(193903u, 144352u, 77513u).yxx)))))))))))))) : _GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)) + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)))))) - 0u)))) + ((_GLF_struct_replacement_5.subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), ~ (~ (1)))) % subgroup_size);
 buf[virtual_gid] = 1;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_5.subgroup_local_id + 1, _GLF_IDENTITY(0u | (_GLF_struct_replacement_5.subgroup_local_id + 1), 0u | (0u | (_GLF_struct_replacement_5.subgroup_local_id + 1)))), ~ (~ (_GLF_struct_replacement_5.subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-59869) : 1))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_5.subgroup_local_id + 1, 0u | (_GLF_struct_replacement_5.subgroup_local_id + 1)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_5.subgroup_local_id + 1, min(_GLF_struct_replacement_5.subgroup_local_id + 1, _GLF_struct_replacement_5.subgroup_local_id + 1)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_5.subgroup_local_id + 1, clamp(_GLF_struct_replacement_5.subgroup_local_id + 1, _GLF_struct_replacement_5.subgroup_local_id + 1, _GLF_IDENTITY(_GLF_struct_replacement_5.subgroup_local_id + 1, (_GLF_struct_replacement_5.subgroup_local_id + 1) ^ 0u))), (_GLF_struct_replacement_5.subgroup_local_id + 1) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))) ^ 0u))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_5.subgroup_local_id + 1, 0u | (_GLF_struct_replacement_5.subgroup_local_id + 1)), ~ (~ (_GLF_struct_replacement_5.subgroup_local_id + 1))), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_5.subgroup_local_id + 1, 0u | (_GLF_struct_replacement_5.subgroup_local_id + 1)), ~ (~ (_GLF_struct_replacement_5.subgroup_local_id + 1))), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_5.subgroup_local_id + 1, 0u | (_GLF_IDENTITY(_GLF_struct_replacement_5.subgroup_local_id + 1, max(_GLF_IDENTITY(_GLF_struct_replacement_5.subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec4(_GLF_struct_replacement_5.subgroup_local_id + 1, 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec4(_GLF_struct_replacement_5.subgroup_local_id + 1, 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))) - uvec4(0u, 0u, 0u, 0u)))), _GLF_struct_replacement_5.subgroup_local_id + 1)))), ~ (~ (_GLF_struct_replacement_5.subgroup_local_id + 1))), 0u, 0u))))), (uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_5.subgroup_local_id + 1, 0u | (_GLF_struct_replacement_5.subgroup_local_id + 1)), ~ (~ (_GLF_struct_replacement_5.subgroup_local_id + 1))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_5.subgroup_local_id + 1, 0u | (_GLF_struct_replacement_5.subgroup_local_id + 1)), ~ (~ (_GLF_struct_replacement_5.subgroup_local_id + 1))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_5.subgroup_local_id + 1, 0u | (_GLF_struct_replacement_5.subgroup_local_id + 1)), ~ (~ (_GLF_struct_replacement_5.subgroup_local_id + 1))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_5.subgroup_local_id + 1, 0u | (_GLF_struct_replacement_5.subgroup_local_id + 1)), ~ (~ (_GLF_struct_replacement_5.subgroup_local_id + 1)))))) ^ 0u), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_5.subgroup_local_id + 1, 0u | (_GLF_struct_replacement_5.subgroup_local_id + 1)), ~ (~ (_GLF_struct_replacement_5.subgroup_local_id + 1))), 0u, 0u))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_5.subgroup_local_id + 1, 0u | (_GLF_struct_replacement_5.subgroup_local_id + 1)), ~ (~ (_GLF_struct_replacement_5.subgroup_local_id + 1))), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_5.subgroup_local_id + 1, 0u | (_GLF_struct_replacement_5.subgroup_local_id + 1)), ~ (~ (_GLF_struct_replacement_5.subgroup_local_id + 1))), 0u, 0u)))))))) | (uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_5.subgroup_local_id + 1, 0u | (_GLF_struct_replacement_5.subgroup_local_id + 1)), ~ (~ (_GLF_struct_replacement_5.subgroup_local_id + 1))), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_5.subgroup_local_id + 1, 0u | (_GLF_struct_replacement_5.subgroup_local_id + 1)), ~ (~ (_GLF_struct_replacement_5.subgroup_local_id + 1))), 0u, 0u)))))))))), (_GLF_struct_replacement_5.subgroup_local_id + 1) | (_GLF_struct_replacement_5.subgroup_local_id + 1)) < subgroup_size)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / 1.0))), injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1.7)), float(injectionSwitch.y), bool(true)))))))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))) * _GLF_IDENTITY(exp(vec2(0.0, 0.0)), (exp(vec2(0.0, 0.0))) * vec2(1.0, 1.0))), clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(exp(vec2(0.0, 0.0)), min(exp(vec2(0.0, 0.0)), exp(vec2(0.0, 0.0))))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * exp(vec2(0.0, 0.0)), vec2(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * _GLF_IDENTITY(_GLF_IDENTITY(exp(vec2(0.0, 0.0)), clamp(exp(_GLF_IDENTITY(vec2(0.0, 0.0), (false ? _GLF_FUZZED(abs(injectionSwitch)) : vec2(0.0, 0.0)))), exp(vec2(0.0, 0.0)), exp(vec2(0.0, 0.0)))), min(exp(_GLF_IDENTITY(vec2(0.0, 0.0), max(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), _GLF_IDENTITY(vec2(0.0, 0.0), mix(vec2(_GLF_FUZZED(-22.92), (vec2(0.0, 0.0))[1]), vec2((vec2(0.0, 0.0))[0], _GLF_FUZZED(4.4)), bvec2(true, false)))))))), exp(vec2(0.0, 0.0)))), min((injectionSwitch) * _GLF_IDENTITY(exp(vec2(0.0, 0.0)), _GLF_IDENTITY(min(exp(vec2(0.0, 0.0)), _GLF_IDENTITY(exp(vec2(0.0, 0.0)), (_GLF_IDENTITY(exp(vec2(0.0, 0.0)), vec2(mat2x3(exp(vec2(0.0, 0.0)), 0.0, 0.0, length(vec2(0.0, 0.0)), 0.0)))) / vec2(1.0, 1.0))), (_GLF_IDENTITY(min(exp(vec2(0.0, 0.0)), _GLF_IDENTITY(exp(vec2(0.0, 0.0)), (_GLF_IDENTITY(exp(vec2(0.0, 0.0)), vec2(mat2x3(exp(vec2(0.0, 0.0)), 0.0, 0.0, length(vec2(0.0, 0.0)), 0.0)))) / vec2(1.0, 1.0))), (min(exp(vec2(0.0, 0.0)), _GLF_IDENTITY(exp(vec2(0.0, 0.0)), (_GLF_IDENTITY(exp(vec2(0.0, 0.0)), vec2(mat2x3(exp(vec2(0.0, 0.0)), 0.0, 0.0, length(vec2(0.0, 0.0)), 0.0)))) / vec2(1.0, 1.0)))) * mat2(1.0))) + vec2(0.0, 0.0))), (injectionSwitch) * _GLF_IDENTITY(exp(vec2(0.0, 0.0)), min(exp(vec2(0.0, 0.0)), exp(vec2(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, float(float(0.0))), _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), float(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0)))), sin(0.0), 0.0, 1.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, abs(0.0), sqrt(0.0), 0.0, 1.0, 1.0, abs(0.0), 0.0, sin(0.0), 1.0)), 1.0, 1.0, 1.0, cos(0.0), 0.0, 1.0))), round(length(normalize(vec2(1.0, 1.0)))), 0.0)), (float(vec3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), round(length(normalize(vec2(1.0, 1.0)))), 0.0))) / 1.0)))))))), clamp((injectionSwitch) * _GLF_IDENTITY(exp(vec2(0.0, 0.0)), mix(vec2((exp(vec2(0.0, 0.0)))[0], _GLF_FUZZED(7206.6496)), vec2(_GLF_FUZZED(float(true)), _GLF_IDENTITY((exp(vec2(0.0, 0.0)))[1], (_GLF_IDENTITY((exp(vec2(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(4.2) : 0.0)), 0.0)))[1], (false ? _GLF_FUZZED(844.824) : (exp(vec2(0.0, 0.0)))[1]))) + 0.0)), bvec2(false, true))), (injectionSwitch) * exp(vec2(0.0, 0.0)), (injectionSwitch) * exp(vec2(0.0, 0.0)))), sqrt(1.0), 1.0, sin(0.0), 1.0, determinant(mat4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - abs(0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-6910.0075)), float(0.0), bool(true))), _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(_GLF_IDENTITY(vec2(0.0, 0.0), max(_GLF_IDENTITY(vec2(0.0, 0.0), min(vec2(0.0, 0.0), vec2(0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0))))), vec2(0.0, 0.0))))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(_GLF_IDENTITY(vec2(0.0, 0.0), max(_GLF_IDENTITY(vec2(0.0, 0.0), min(vec2(0.0, 0.0), vec2(0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0))))), vec2(0.0, 0.0))))))), clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(_GLF_IDENTITY(vec2(0.0, 0.0), _GLF_IDENTITY(max(_GLF_IDENTITY(vec2(0.0, 0.0), min(vec2(0.0, 0.0), vec2(0.0, 0.0))), vec2(0.0, 0.0)), (_GLF_IDENTITY(max(_GLF_IDENTITY(vec2(0.0, 0.0), min(vec2(0.0, 0.0), vec2(0.0, 0.0))), vec2(0.0, 0.0)), vec2(0.0, 0.0) + (max(_GLF_IDENTITY(vec2(0.0, 0.0), min(vec2(0.0, 0.0), vec2(0.0, 0.0))), vec2(0.0, 0.0))))) * vec2(1.0, 1.0))))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(_GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, sqrt(1.0)), mat2x3(mat2x3(mat2x3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, sqrt(1.0))))))), 0.0), _GLF_IDENTITY(max(_GLF_IDENTITY(vec2(0.0, 0.0), min(vec2(0.0, 0.0), vec2(0.0, 0.0))), vec2(0.0, 0.0)), (max(_GLF_IDENTITY(vec2(0.0, 0.0), min(vec2(0.0, 0.0), vec2(0.0, 0.0))), vec2(0.0, 0.0))) * vec2(1.0, 1.0))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))), _GLF_IDENTITY((injectionSwitch) * _GLF_IDENTITY(exp(_GLF_IDENTITY(vec2(0.0, 0.0), max(_GLF_IDENTITY(vec2(0.0, 0.0), min(vec2(0.0, 0.0), vec2(0.0, 0.0))), vec2(0.0, 0.0)))), min(exp(_GLF_IDENTITY(vec2(0.0, 0.0), max(_GLF_IDENTITY(vec2(0.0, 0.0), min(vec2(0.0, 0.0), vec2(0.0, 0.0))), vec2(0.0, 0.0)))), exp(_GLF_IDENTITY(vec2(0.0, 0.0), max(_GLF_IDENTITY(vec2(0.0, 0.0), min(vec2(0.0, 0.0), vec2(0.0, 0.0))), vec2(0.0, 0.0)))))), ((injectionSwitch) * exp(_GLF_IDENTITY(vec2(0.0, 0.0), max(_GLF_IDENTITY(vec2(0.0, 0.0), min(vec2(0.0, 0.0), vec2(0.0, 0.0))), vec2(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0))))) * mat2(1.0))), _GLF_IDENTITY(vec2(mat4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(exp(_GLF_IDENTITY(_GLF_IDENTITY(vec2(0.0, 0.0), max(_GLF_IDENTITY(vec2(0.0, 0.0), min(vec2(0.0, 0.0), vec2(0.0, 0.0))), vec2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0))), min(_GLF_IDENTITY(_GLF_IDENTITY(vec2(0.0, 0.0), max(_GLF_IDENTITY(vec2(0.0, 0.0), min(vec2(0.0, 0.0), vec2(0.0, 0.0))), vec2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0))), min(_GLF_IDENTITY(vec2(0.0, 0.0), max(_GLF_IDENTITY(vec2(0.0, 0.0), min(vec2(0.0, 0.0), vec2(0.0, 0.0))), vec2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0))), _GLF_IDENTITY(vec2(0.0, 0.0), max(_GLF_IDENTITY(vec2(0.0, 0.0), min(vec2(0.0, 0.0), vec2(0.0, 0.0))), vec2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0))))), _GLF_IDENTITY(vec2(0.0, 0.0), max(_GLF_IDENTITY(vec2(0.0, 0.0), min(vec2(0.0, 0.0), vec2(0.0, 0.0))), vec2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)))))), abs(vec2(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(-5.5)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) + (exp(_GLF_IDENTITY(vec2(0.0, 0.0), max(_GLF_IDENTITY(vec2(0.0, 0.0), min(vec2(0.0, 0.0), vec2(0.0, 0.0))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-609.494) : _GLF_IDENTITY(0.0, min(0.0, 0.0))))) - 0.0), 0.0), clamp(_GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0), transpose(transpose(mat2(injectionSwitch.y, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0)))))))) ? _GLF_FUZZED(-609.494) : _GLF_IDENTITY(0.0, min(0.0, 0.0))))) - 0.0), 0.0), sin(vec2(0.0, 0.0)) + (vec2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-609.494) : _GLF_IDENTITY(0.0, min(0.0, 0.0))))) - 0.0), 0.0))), vec2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-609.494) : _GLF_IDENTITY(0.0, min(0.0, 0.0))))) - 0.0), 0.0), vec2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-609.494) : _GLF_IDENTITY(0.0, min(0.0, 0.0))))) - 0.0), 0.0))))))))), abs(0.0), 0.0, 0.0, abs(1.0), 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(9.3)), bool(false))), 1.0, 1.0, 1.0, 0.0, cos(0.0), 1.0)), vec2(mat2x4(vec2(mat4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(_GLF_IDENTITY(vec2(0.0, 0.0), max(_GLF_IDENTITY(vec2(0.0, 0.0), min(vec2(0.0, 0.0), vec2(0.0, 0.0))), vec2(0.0, 0.0))))), abs(0.0), 0.0, 0.0, abs(1.0), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, cos(0.0), 1.0)), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0)))))), min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 0.0, 0.0)), clamp(_GLF_IDENTITY(vec2(vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 0.0, 0.0)), clamp(vec2(vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 0.0, 0.0)), vec2(vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 0.0, 0.0)), vec2(vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 0.0, 0.0)))), vec2(vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 0.0, 0.0)), vec2(vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 0.0, 0.0)))))) * exp(vec2(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(0.3) : 0.0)), 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))))), (injectionSwitch) * _GLF_IDENTITY(exp(vec2(0.0, 0.0)), _GLF_IDENTITY(sin(vec2(0.0, 0.0)) + (_GLF_IDENTITY(exp(vec2(0.0, 0.0)), vec2(vec2(exp(vec2(0.0, 0.0)))))), clamp(sin(vec2(0.0, 0.0)) + (_GLF_IDENTITY(exp(vec2(0.0, 0.0)), vec2(vec2(exp(vec2(0.0, 0.0)))))), sin(vec2(0.0, 0.0)) + (_GLF_IDENTITY(_GLF_IDENTITY(exp(vec2(0.0, 0.0)), (_GLF_IDENTITY(exp(vec2(0.0, 0.0)), mix(vec2(_GLF_FUZZED(-7.1), (exp(vec2(0.0, 0.0)))[1]), vec2((exp(vec2(0.0, 0.0)))[0], _GLF_FUZZED(-6.9)), bvec2(true, false)))) + vec2(0.0, 0.0)), vec2(vec2(exp(vec2(0.0, 0.0)))))), sin(vec2(0.0, 0.0)) + (_GLF_IDENTITY(exp(vec2(0.0, 0.0)), vec2(vec2(exp(vec2(0.0, 0.0)))))))))), mat2(1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)))))))), _GLF_IDENTITY((injectionSwitch) * _GLF_IDENTITY(exp(vec2(0.0, 0.0)), _GLF_IDENTITY(sin(vec2(0.0, 0.0)) + (_GLF_IDENTITY(exp(vec2(0.0, 0.0)), vec2(vec2(exp(vec2(0.0, 0.0)))))), clamp(sin(vec2(0.0, 0.0)) + (_GLF_IDENTITY(exp(vec2(0.0, 0.0)), vec2(vec2(exp(vec2(0.0, 0.0)))))), sin(vec2(0.0, 0.0)) + (_GLF_IDENTITY(exp(vec2(0.0, 0.0)), vec2(vec2(exp(vec2(0.0, 0.0)))))), sin(vec2(0.0, 0.0)) + (_GLF_IDENTITY(exp(vec2(0.0, 0.0)), vec2(vec2(exp(vec2(0.0, 0.0))))))))), (true ? (injectionSwitch) * _GLF_IDENTITY(exp(vec2(0.0, 0.0)), _GLF_IDENTITY(sin(vec2(0.0, 0.0)) + (_GLF_IDENTITY(exp(vec2(0.0, 0.0)), vec2(vec2(exp(vec2(0.0, 0.0)))))), clamp(sin(vec2(0.0, 0.0)) + (_GLF_IDENTITY(exp(vec2(0.0, 0.0)), vec2(vec2(exp(vec2(0.0, 0.0)))))), sin(vec2(0.0, 0.0)) + (_GLF_IDENTITY(exp(vec2(0.0, 0.0)), vec2(vec2(exp(vec2(0.0, 0.0)))))), sin(vec2(0.0, 0.0)) + (_GLF_IDENTITY(exp(vec2(0.0, 0.0)), _GLF_IDENTITY(vec2(vec2(exp(vec2(0.0, 0.0)))), max(vec2(vec2(exp(vec2(0.0, 0.0)))), vec2(vec2(exp(vec2(0.0, 0.0))))))))))) : _GLF_FUZZED(injectionSwitch)))))))))).y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(7755.7721), ((injectionSwitch))[1]), vec2(((injectionSwitch))[0], _GLF_FUZZED((61.84 / 3.7))), bvec2(true, false))) * vec2(1.0, 1.0)).y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(false, ! (! (false)))))) && true)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y), false || ((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))), false || (bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec4(injectionSwitch.y, 1.0, 0.0, 0.0), mat4(1.0) * (vec4(injectionSwitch.y, 1.0, 0.0, 0.0))))))))))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   int i = 0;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
    barrier();
   _GLF_IDENTITY(buf[next_virtual_gid] = 2, (0u & 20811u) | (_GLF_IDENTITY(buf[next_virtual_gid] = 2, (buf[next_virtual_gid] = 2) ^ 0u)));
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bvec2(false, false)), false || (bool(bvec2(false, false)))), false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bvec2(false, false)), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec3(_GLF_IDENTITY(! (false), bool(bvec2(! (false), true))), true, true))), ! (! (! (false)))))) || (bool(bvec2(false, false)))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(bvec2(false, false)), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))) || (bool(bvec2(false, false)))), false, true), false))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bvec2(false, false)), false || (bool(bvec2(false, false)))), false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bvec2(false, false)), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec3(_GLF_IDENTITY(! (false), bool(bvec2(! (false), true))), true, true))), ! (! (! (false)))))) || (bool(bvec2(false, false)))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(bvec2(false, false)), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))) || (bool(bvec2(false, false)))), false, true), false))))))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bvec2(false, false)), false || (bool(bvec2(false, false)))), false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bvec2(false, false)), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec3(_GLF_IDENTITY(! (false), bool(bvec2(! (false), true))), true, true))), ! (! (! (false)))))) || (bool(bvec2(false, false)))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(bvec2(false, false)), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))) || (bool(bvec2(false, false)))), false, true), false)))))))) && true)) && true)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   buf[next_virtual_gid] = 2;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
