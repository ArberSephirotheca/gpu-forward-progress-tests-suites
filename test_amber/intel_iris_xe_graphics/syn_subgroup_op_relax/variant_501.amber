#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 0) uniform buf0 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 buf[virtual_gid] = 1;
 if(subgroup_local_id + 1 < subgroup_size)
  {
   switch(_GLF_SWITCH(0))
    {
     case 57:
     ;
     case 9:
     uvec2 _GLF_SWITCH_1_0v;
     case 0:
     case 59:
     atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 0);
     case 12:
     subgroupAll(false);
     break;
     case 96:
     ivec4 _GLF_SWITCH_1_1v[40], _GLF_SWITCH_1_2v;
     case 20:
     for(     notEqual(_GLF_SWITCH_1_2v, _GLF_SWITCH_1_2v);
 true; mat3(-817.087, -47.06, -9.8, -9.2, -9.1, 882.663, 68.18, 907.411, -773.757))
      {
       bvec2 _GLF_SWITCH_1_3v, _GLF_SWITCH_1_4v[53];
       ;
       for(vec2 _GLF_SWITCH_1_5v, _GLF_SWITCH_1_6v[50]; true; true)
        {
         mat4x3(mat3x2(-145.793, 4.9, 43.96, -623.217, -4.7, 33.07));
         for(mat3x4 _GLF_SWITCH_1_7v, _GLF_SWITCH_1_8v; true; vec3(6.0, 34.41, 763.445))
          {
           88411;
           bvec4(false, true, true, false);
           mat2x4((-32.20 - mat4x2(46.86, 2445.6414, -0.3, 1601.9958, 1949.1234, -9.1, -4.0, 32.23)));
          }
         if(all(bvec3(true, false, false)))
          {
          }
         mat3x2(5.1, -88.95, 43.95, -6.8, -0.9, -4.4);
         if(false)
          {
          }
         else
          {
           false;
           ivec3 _GLF_SWITCH_1_9v, _GLF_SWITCH_1_10v[20];
           greaterThan(clamp(uvec4(163087u, 34044u, 123358u, 156862u), uvec4(194335u, 170551u, 105481u, 95616u), uvec4(149213u, 94631u, 63827u, 10920u)), uvec4(5869u, 88104u, 107927u, 177103u));
           ivec4 _GLF_SWITCH_1_11v, _GLF_SWITCH_1_12v, _GLF_SWITCH_1_13v;
           mat2x4(-32.83, -5.7, 8.2, -6.2, -1.9, -200.747, 221.660, 3.2);
          }
        }
       mat3(-4.5, 8203.4836, -4747.2666, 11.67, -8056.5944, 1.0, 154.144, 7.9, -8.4);
       ;
       while(false)
        {
         uvec3(subgroup_id, uvec2(157694u, 42394u));
         -58482;
         {
          ;
         }
         _GLF_SWITCH_1_3v;
         float _GLF_SWITCH_1_14v, _GLF_SWITCH_1_15v;
        }
       uvec2(63171u, 20537u);
      }
     default:
     1;
    }
  }
 else
  {
   switch(_GLF_SWITCH(0))
    {
     case 10:
     mat2x4 _GLF_SWITCH_2_0v[1];
     case 0:
     case 34:
     case 21:
     case 53:
     case 62:
     case 63:
     case 76:
     case 28:
     case 88:
     switch(_GLF_SWITCH((((0 & 46338) ^ 0) << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (int(5)) / 1)))))
      {
       case 38:
       while(false)
        {
        }
       case 0:
       case 9:
       case 74:
       case 64:
       case 12:
       case 56:
       case 88:
       atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 0);
       case 61:
       case 57:
       case 14:
       subgroupAll(true);
       break;
       case 19:
       if(false)
        {
         uvec4(45675u, 188094u, 16665u, 11819u);
         mat4x2 _GLF_SWITCH_0_0v, _GLF_SWITCH_0_1v, _GLF_SWITCH_0_2v;
         if(true)
          {
          }
         if(false)
          {
           for(           mat4x3(892.102, -4.0, 0.1, -8559.7404, -8888.8135, -8.6, 8.9, 1.0, 2.1, -64.05, -0.6, -3278.2044);
 true; ivec3(59279, -13376, -50033))
            {
             uvec4 _GLF_SWITCH_0_3v, _GLF_SWITCH_0_4v;
            }
           if((matrixCompMult((-1324.5496 + mat3x2(-457.202, 1.4, 2.2, 3.4, -4.3, -21.69)), mat3x2(5.2, 3.2, 269.683, -402.546, -3897.4293, 8.6)) != mat3x2(-768.186, 8978.8907, 740.922, -756.047, 9.0, -3.2)))
            {
             vec2 _GLF_SWITCH_0_5v[5], _GLF_SWITCH_0_6v;
             ;
             mat4x3(-134.387, 8485.0289, -4.3, 8.7, -0.6, 3.3, 5.2, 566.121, 4715.2724, 541.866, 89.22, -24.91);
             vec2 _GLF_SWITCH_0_7v[73];
             uint _GLF_SWITCH_0_8v, _GLF_SWITCH_0_9v, _GLF_SWITCH_0_10v;
            }
           while((mat2x3(-6307.5207, 2.5, -7.9, -2.6, 546.543, -0.0) == outerProduct(vec3(-4.2, -6.8, 5903.9904), injectionSwitch)))
            {
             mat3x4 _GLF_SWITCH_0_11v, _GLF_SWITCH_0_12v, _GLF_SWITCH_0_13v[56];
             (vec4(262.072, -237.782, 66.42, 1063.2941) * vec4(-637.306, -1.5, -694.233, -72.08));
             mat3 _GLF_SWITCH_0_14v[42], _GLF_SWITCH_0_15v;
             ;
             float _GLF_SWITCH_0_16v[49], _GLF_SWITCH_0_17v[49];
             ivec3(-16517, 3707, 47243);
            }
           mat4 _GLF_SWITCH_0_18v, _GLF_SWITCH_0_19v, _GLF_SWITCH_0_20v;
           for(uvec3 _GLF_SWITCH_0_21v[37]; false; bvec2(true, true))
            {
             mat2x4(-175.304, -2.6, 2.8, 563.558, 256.149, 3352.9141, -9761.7341, 23.32);
             ;
             mat3x2(4508.3096, 27.64, -9.3, -9.4, -5091.3869, 95.81);
             (bvec2(true, false).t ? uvec4(2681u, 30755u, 38318u, 21787u) : uvec4(22573u, 7269u, 164698u, 22401u));
             ;
             mat3 _GLF_SWITCH_0_22v[67], _GLF_SWITCH_0_23v[46];
             ;
             mat2x4 _GLF_SWITCH_0_24v, _GLF_SWITCH_0_25v, _GLF_SWITCH_0_26v[87];
            }
           do
            {
             mat3x2 _GLF_SWITCH_0_27v, _GLF_SWITCH_0_28v, _GLF_SWITCH_0_29v[59];
            }
           while(false);
          }
         clamp(ivec4(-23836, 44409, 63805, 6984), ivec4(-48250, -22775, 59378, 12274), ivec4(3272, 46481, 52985, -98329));
         bvec3 _GLF_SWITCH_0_30v, _GLF_SWITCH_0_31v, _GLF_SWITCH_0_32v;
        }
       else
        {
         for(         ((mat3x2(-3.0, 87.12, 8.5, 4.9, -19.61, 98.66) - -8.2) - outerProduct(vec2(-5.1, 5236.6999), vec3(3.0, 92.03, 4.3)));
 isnan(-22.24); bvec2(true, true))
          {
          }
         if(false)
          {
           mat2x3(mat2x4(420.685, 2036.7428, 1.5, -4095.6282, -33.04, -770.282, 27.55, 483.353));
           mat2x3(mat3(mat3x4(369.585, 71.18, -5.7, -395.877, -135.260, 793.254, -181.063, 9.5, 0.7, 9.6, 4519.6984, -2.7)));
           for(mat3x4 _GLF_SWITCH_0_33v[75], _GLF_SWITCH_0_34v[51], _GLF_SWITCH_0_35v; (uvec4(14845u, 62203u, 102425u, 89009u) != uvec4(150532u, 70419u, 76750u, 8835u)); uvec3(199520u, 101957u, 187153u))
            {
             (true != false);
             mat2x4(-9.7, -4923.8646, -3.9, 0.0, 463.807, -422.725, 4305.1163, 2.9);
             (mat2(-13.97, 6.9, -589.538, -57.44) + -6.5);
             ;
            }
           mat2x4 _GLF_SWITCH_0_36v;
          }
         mat2 _GLF_SWITCH_0_37v, _GLF_SWITCH_0_38v, _GLF_SWITCH_0_39v;
         (- mat3x2(12.21, 0.6, -4189.8284, -276.642, -0.6, 282.235));
         sinh(vec2(83.93, 2.1));
         if(bool(-2140.0171))
          {
           float _GLF_SWITCH_0_40v, _GLF_SWITCH_0_41v, _GLF_SWITCH_0_42v[22];
           ivec4 _GLF_SWITCH_0_43v, _GLF_SWITCH_0_44v[62];
           while((atomicAdd(subgroup_id, subgroup_local_id) >= num_workgroup))
            {
             mat3x2 _GLF_SWITCH_0_45v[88];
             vec3(-8.6, -721.568, -7.0);
             uvec3 _GLF_SWITCH_0_46v, _GLF_SWITCH_0_47v, _GLF_SWITCH_0_48v;
             mat4 _GLF_SWITCH_0_49v, _GLF_SWITCH_0_50v[89], _GLF_SWITCH_0_51v;
            }
           if(true)
            {
             mat2x3(mat3x2(-585.638, -89.60, -7.4, 4.1, 5327.9460, -8.0));
             bool _GLF_SWITCH_0_52v;
             mat2x4 _GLF_SWITCH_0_53v, _GLF_SWITCH_0_54v[4], _GLF_SWITCH_0_55v;
             mat2x3(7.0, 8671.1049, -221.455, -6.4, -213.456, 0.5);
             mat2(22.09, 1.8, 16.82, 35.55);
             ivec2 _GLF_SWITCH_0_56v, _GLF_SWITCH_0_57v;
             uvec2(90013u, 153399u);
             mat3(-68.15, 12.97, 1.5, -76.29, -266.223, 5.4, 649.015, -3.3, -84.32);
            }
           if((uvec2(uvec4(78703u, 82074u, 153199u, 193633u)) == uvec2(29212u, 98620u)))
            {
             ;
            }
           else
            {
             mat3x4(90.74, 1.7, 434.808, -48.23, -9.3, -4.4, -8.8, -2.1, -295.418, -2.0, -23.53, -3.3);
             mat4x3 _GLF_SWITCH_0_58v, _GLF_SWITCH_0_59v, _GLF_SWITCH_0_60v;
             ivec4 _GLF_SWITCH_0_61v, _GLF_SWITCH_0_62v[83];
             ivec2(69808, -44850);
             vec3 _GLF_SWITCH_0_63v, _GLF_SWITCH_0_64v[18];
            }
           mat4x3(-44.92, 94.19, -93.40, 7.1, -2.1, -1.2, 51.64, 493.686, 305.727, 72.73, -941.822, 5.0);
           ivec4 _GLF_SWITCH_0_65v, _GLF_SWITCH_0_66v, _GLF_SWITCH_0_67v;
           equal(uvec3(28764u, 21893u, 72283u), uvec2(86589u, 154397u).yyx);
           if(true)
            {
             vec3 _GLF_SWITCH_0_68v, _GLF_SWITCH_0_69v;
             _GLF_SWITCH_0_66v.wy;
             (mat3x2(-56.60, 3.0, 2.2, 9.9, -3530.1343, 1.5) + distance(vec2(5.7, -91.88), vec2(6.1, -6.8)));
             vec2 _GLF_SWITCH_0_70v, _GLF_SWITCH_0_71v, _GLF_SWITCH_0_72v;
            }
           else
            {
             bvec3 _GLF_SWITCH_0_73v, _GLF_SWITCH_0_74v[54], _GLF_SWITCH_0_75v[28];
             vec2 _GLF_SWITCH_0_76v[52];
             bvec2 _GLF_SWITCH_0_77v[82], _GLF_SWITCH_0_78v[46], _GLF_SWITCH_0_79v;
             mat4x3(-32.43, 184.686, 996.827, -57.03, -16.40, -3.5, -4.6, 4182.8597, -710.423, -3.0, -7.8, -473.522);
             bvec2 _GLF_SWITCH_0_80v, _GLF_SWITCH_0_81v[53], _GLF_SWITCH_0_82v[22];
             mat2x3 _GLF_SWITCH_0_83v[36], _GLF_SWITCH_0_84v;
            }
          }
        }
       case 31:
       mat3x2(5834.4601, 2245.9549, -5.0, 3.7, -722.139, 5.7);
       default:
       1;
      }
     break;
     case 56:
     max(-4.6, -5.7);
     default:
     1;
    }
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
