#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 do
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), false || ((! (false))))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (false))), true), false))), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! (! ((false))))) && true))), true))))))), _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), bool(bvec4(_GLF_IDENTITY(false || (true), bool(bool(false || (true)))), true, true, true)))), _GLF_IDENTITY(false, false || (false)) || (true)), true), bvec3(bvec4(bvec3(_GLF_DEAD(false), true, true), false)))), _GLF_IDENTITY(false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true))), true), bvec3(bvec4(bvec3(_GLF_DEAD(false), true, true), _GLF_IDENTITY(false, bool(bvec2(false, false)))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true), true))), true)))))), true, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bvec2(bvec4(bvec2(true, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), bool(bvec4(true && (true), false, false, false))))))), false, false)), bvec2(bvec3(bvec2(bvec4(bvec2(true, true), false, false)), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false))) && true)))))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)) || false)), true, true), false)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false)), true, true), false)))))), true))))), false || (false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), bvec3(bvec4(bvec3(_GLF_DEAD(false), true, true), _GLF_IDENTITY(false, bool(bvec2(false, false)))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), bvec3(bvec3(bvec3(_GLF_DEAD(false), true, true)))), true)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (! (_GLF_DEAD(false))), (! (! (_GLF_DEAD(false)))) && true))))), true, true)))), true)))))), _GLF_IDENTITY(false, bool(bvec2(false, false)))))), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), _GLF_IDENTITY(bvec2(bvec4(bvec2(true, true), false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), true && (! ((false))))))))) || false))), bvec2(bvec3(bvec2(bvec4(bvec2(true, true), false, false)), false))))))), bvec3(bvec4(bvec3(_GLF_DEAD(false), true, true), _GLF_IDENTITY(false, ! (! (false)))))), true))))))))))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       do
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) / ((((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))) << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))))])).x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 0.0))), injectionSwitch)).y, false)))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) / ((((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))) << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))))])).x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 0.0))), injectionSwitch)).y, false)))))))))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec2(bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))))))), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))))))), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))))))), true, false))))), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))))))), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))))))), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))))))), true, false))))), false, true)), bvec2(bvec3(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))))))), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))))))), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))))))), true, false))))), false, true)), false)))))), false))))))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             barrier();
            }
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_IDENTITY(_GLF_FUZZED(bitfieldExtract(_injected_loop_counter, _injected_loop_counter, _GLF_IDENTITY(-32725, min(_GLF_IDENTITY(-32725, (-32725) + 0), -32725)))), 0 | (_GLF_IDENTITY(_GLF_FUZZED(bitfieldExtract(_injected_loop_counter, _injected_loop_counter, -32725)), max(_GLF_FUZZED(bitfieldExtract(_injected_loop_counter, _injected_loop_counter, _GLF_IDENTITY(-32725, (-32725) >> 0))), _GLF_FUZZED(bitfieldExtract(_injected_loop_counter, _injected_loop_counter, -32725)))))) : 1)), _GLF_IDENTITY(0, (0) ^ 0) ^ (_GLF_IDENTITY(1, (false ? _GLF_IDENTITY(_GLF_FUZZED(bitfieldExtract(_injected_loop_counter, _injected_loop_counter, _GLF_IDENTITY(-32725, min(_GLF_IDENTITY(-32725, (-32725) + 0), -32725)))), 0 | (_GLF_IDENTITY(_GLF_FUZZED(bitfieldExtract(_injected_loop_counter, _injected_loop_counter, -32725)), max(_GLF_FUZZED(bitfieldExtract(_injected_loop_counter, _injected_loop_counter, _GLF_IDENTITY(-32725, (-32725) >> 0))), _GLF_FUZZED(bitfieldExtract(_injected_loop_counter, _injected_loop_counter, -32725)))))) : 1)))) & 1) << _GLF_IDENTITY(int(2), int(2))), (((_GLF_IDENTITY(1, (false ? _GLF_IDENTITY(_GLF_FUZZED(bitfieldExtract(_GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter))), _injected_loop_counter, _GLF_IDENTITY(-32725, min(_GLF_IDENTITY(-32725, _GLF_IDENTITY((-32725) + 0, (true ? (-32725) + 0 : _GLF_FUZZED(_injected_loop_counter)))), -32725)))), 0 | (_GLF_IDENTITY(_GLF_FUZZED(bitfieldExtract(_injected_loop_counter, _injected_loop_counter, -32725)), max(_GLF_FUZZED(bitfieldExtract(_injected_loop_counter, _injected_loop_counter, _GLF_IDENTITY(-32725, (-32725) >> 0))), _GLF_FUZZED(bitfieldExtract(_injected_loop_counter, _injected_loop_counter, -32725)))))) : 1)) & 1) << _GLF_IDENTITY(int(_GLF_IDENTITY(2, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(2, (_GLF_IDENTITY(true ? 2 : _GLF_FUZZED(mix(_injected_loop_counter, 23091, true)), (true ? 2 : _GLF_FUZZED(mix(_injected_loop_counter, 23091, true))) ^ (0 >> _GLF_IDENTITY(int(1), int(1))))))), (~ (_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(mix(_injected_loop_counter, _GLF_IDENTITY(23091, int(ivec3(23091, 0, (0 << _GLF_IDENTITY(int(1), int(1)))))), true)))))) | (~ (_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(mix(_injected_loop_counter, 23091, true)))))))))), int(2)))) - (0 ^ 0)) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), min(int(2), int(2)))))); _GLF_IDENTITY(_injected_loop_counter ++, _GLF_IDENTITY(_GLF_IDENTITY((_injected_loop_counter ++) - int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), injectionSwitch)).x)), (true ? _GLF_IDENTITY((_injected_loop_counter ++) - int(_GLF_ZERO(0.0, injectionSwitch.x)), 0 | (_GLF_IDENTITY((_injected_loop_counter ++) - int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))), _GLF_IDENTITY((_GLF_IDENTITY((_injected_loop_counter ++) - int(_GLF_ZERO(0.0, injectionSwitch.x)), 1 * (_GLF_IDENTITY(_GLF_IDENTITY((_injected_loop_counter ++), (true ? _GLF_IDENTITY((_injected_loop_counter ++), ((_injected_loop_counter ++)) + (0 & -90666)) : _GLF_FUZZED(_injected_loop_counter))) - int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(length(vec3(-887.027, 2.7, -5.4))) : _GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), injectionSwitch.x)))), (true ? _GLF_IDENTITY((_injected_loop_counter ++), (true ? _GLF_IDENTITY((_injected_loop_counter ++), ((_injected_loop_counter ++)) + (0 & _GLF_IDENTITY(-90666, max(-90666, -90666)))) : _GLF_FUZZED(_injected_loop_counter))) - int(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, log(1.0)), vec2(1.0, 1.0)), dot(vec2(0.0, log(1.0)), vec2(1.0, 1.0))), 0.0, 1.0, 1.0, 1.0, 0.0))), injectionSwitch.x), (false ? _GLF_IDENTITY(_GLF_FUZZED(length(vec3(-887.027, 2.7, -5.4))), min(_GLF_FUZZED(length(vec3(-887.027, 2.7, -5.4))), _GLF_IDENTITY(_GLF_FUZZED(length(vec3(-887.027, 2.7, -5.4))), (_GLF_FUZZED(length(vec3(-887.027, 2.7, -5.4)))) / 1.0))) : _GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), injectionSwitch.x)))) : _GLF_FUZZED(12291)))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY((_injected_loop_counter ++) - int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))))), 1 * ((_injected_loop_counter ++) - int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_IDENTITY(_GLF_FUZZED(length(vec3(-887.027, 2.7, -5.4))), (_GLF_FUZZED(length(vec3(-887.027, 2.7, -5.4)))) / 1.0) : _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat2x4(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))))))))), ((_GLF_IDENTITY((_injected_loop_counter ++) - _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) | (int(_GLF_ZERO(0.0, injectionSwitch.x))))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x)))), 1 * ((_injected_loop_counter ++) - int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(length(vec3(-887.027, 2.7, -5.4))) : _GLF_ZERO(0.0, injectionSwitch.x)))))))) * 1)), (~ (_GLF_IDENTITY((_GLF_IDENTITY((_injected_loop_counter ++) - int(_GLF_ZERO(0.0, injectionSwitch.x)), 1 * ((_injected_loop_counter ++) - int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_IDENTITY(_GLF_FUZZED(length(vec3(-887.027, 2.7, -5.4))), (_GLF_IDENTITY(_GLF_FUZZED(length(vec3(-887.027, 2.7, -5.4))), (_GLF_FUZZED(length(vec3(-887.027, 2.7, -5.4)))) / sqrt(1.0))) / determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))) : _GLF_ZERO(0.0, injectionSwitch.x))))))), ((_GLF_IDENTITY((_injected_loop_counter ++) - int(_GLF_ZERO(0.0, injectionSwitch.x)), 1 * ((_GLF_IDENTITY(_injected_loop_counter ++, 0 | (_injected_loop_counter ++))) - int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(length(vec3(-887.027, 2.7, _GLF_IDENTITY(-5.4, clamp(_GLF_IDENTITY(-5.4, (true ? -5.4 : _GLF_FUZZED(-5.9))), -5.4, -5.4))))) : _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(smoothstep(injectionSwitch, injectionSwitch, vec2(3845.3330, -9.3))))).x)))))))) * 1))) >> 0))) << _GLF_IDENTITY(0, (0) + 0)))) : _GLF_FUZZED(-86748))), (_GLF_IDENTITY((_injected_loop_counter ++) - int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), injectionSwitch)).x)), (true ? _GLF_IDENTITY((_injected_loop_counter ++) - int(_GLF_ZERO(0.0, injectionSwitch.x)), 0 | (_GLF_IDENTITY((_injected_loop_counter ++) - int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))), _GLF_IDENTITY((_GLF_IDENTITY((_injected_loop_counter ++) - int(_GLF_ZERO(0.0, injectionSwitch.x)), 1 * (_GLF_IDENTITY(_GLF_IDENTITY((_injected_loop_counter ++), (true ? _GLF_IDENTITY((_injected_loop_counter ++), ((_injected_loop_counter ++)) + (0 & -90666)) : _GLF_FUZZED(_injected_loop_counter))) - int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(length(vec3(-887.027, 2.7, -5.4))) : _GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), injectionSwitch.x)))), (true ? _GLF_IDENTITY((_injected_loop_counter ++), (true ? _GLF_IDENTITY((_injected_loop_counter ++), ((_injected_loop_counter ++)) + (0 & _GLF_IDENTITY(-90666, max(-90666, -90666)))) : _GLF_FUZZED(_injected_loop_counter))) - int(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, log(1.0)), vec2(1.0, 1.0)), dot(vec2(0.0, log(1.0)), vec2(1.0, 1.0))), 0.0, 1.0, 1.0, 1.0, 0.0))), injectionSwitch.x), (false ? _GLF_IDENTITY(_GLF_FUZZED(length(vec3(-887.027, 2.7, -5.4))), min(_GLF_FUZZED(length(vec3(-887.027, 2.7, -5.4))), _GLF_IDENTITY(_GLF_FUZZED(length(vec3(-887.027, 2.7, -5.4))), (_GLF_FUZZED(length(vec3(-887.027, 2.7, -5.4)))) / 1.0))) : _GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), injectionSwitch.x)))) : _GLF_FUZZED(12291)))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY((_injected_loop_counter ++) - int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))))), 1 * ((_injected_loop_counter ++) - int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_IDENTITY(_GLF_FUZZED(length(vec3(-887.027, 2.7, -5.4))), (_GLF_FUZZED(length(vec3(-887.027, 2.7, -5.4)))) / 1.0) : _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat2x4(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))))))))), ((_GLF_IDENTITY((_injected_loop_counter ++) - _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) | (int(_GLF_ZERO(0.0, injectionSwitch.x))))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x)))), 1 * ((_injected_loop_counter ++) - int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(length(vec3(-887.027, 2.7, -5.4))) : _GLF_ZERO(0.0, injectionSwitch.x)))))))) * 1)), (~ (_GLF_IDENTITY((_GLF_IDENTITY((_injected_loop_counter ++) - int(_GLF_ZERO(0.0, injectionSwitch.x)), 1 * ((_injected_loop_counter ++) - int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_IDENTITY(_GLF_FUZZED(length(vec3(-887.027, 2.7, -5.4))), (_GLF_IDENTITY(_GLF_FUZZED(length(vec3(-887.027, 2.7, -5.4))), (_GLF_FUZZED(length(vec3(-887.027, 2.7, -5.4)))) / sqrt(1.0))) / determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))) : _GLF_ZERO(0.0, injectionSwitch.x))))))), ((_GLF_IDENTITY((_injected_loop_counter ++) - int(_GLF_ZERO(0.0, injectionSwitch.x)), 1 * ((_GLF_IDENTITY(_injected_loop_counter ++, 0 | (_injected_loop_counter ++))) - int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(length(vec3(-887.027, 2.7, _GLF_IDENTITY(-5.4, clamp(_GLF_IDENTITY(-5.4, (true ? -5.4 : _GLF_FUZZED(-5.9))), -5.4, -5.4))))) : _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(smoothstep(injectionSwitch, injectionSwitch, vec2(3845.3330, -9.3))))).x)))))))) * 1))) >> 0))) << _GLF_IDENTITY(0, (0) + 0)))) : _GLF_FUZZED(-86748)))) >> 0)))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               do
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(69.65)), bool(false))))), _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(69.65)), bool(false))))), 0.0, 0.0, 0.0)), 1.0 * (float(vec4(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(69.65)), bool(false))))), 0.0, 0.0, 0.0))))) > injectionSwitch.y))));
              }
             else
              {
              }
            }
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   else
    {
    }
  }
 uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  {
   do
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(78304u) : 0u)), 0u) ^ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u)))).x, min(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_NumWorkGroups.x), (~ (gl_NumWorkGroups.x)) | 0u), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(_GLF_IDENTITY(gl_NumWorkGroups.x, max(_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(103291u) : gl_NumWorkGroups.x)), _GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, gl_NumWorkGroups.x)))), _GLF_IDENTITY(gl_NumWorkGroups.x, min(gl_NumWorkGroups.x, gl_NumWorkGroups.x)), gl_NumWorkGroups.x))), uint(uvec2(_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 0u + (gl_NumWorkGroups.x))))), (~ (gl_NumWorkGroups.x)) >> 0u), 1u))), 0u, 0u, 1u), uvec4(1u, 1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (1u)))) << 0u), _GLF_IDENTITY(1u, min(1u, 1u))) * (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(~ (gl_NumWorkGroups.x), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(~ (gl_NumWorkGroups.x), (~ (gl_NumWorkGroups.x)) >> 0u), 1u), (uvec2(_GLF_IDENTITY(~ (gl_NumWorkGroups.x), (~ (gl_NumWorkGroups.x)) >> 0u), 1u)) + (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(7u), uvec2(7u)))))), 0u, 0u, 1u), max(uvec4(_GLF_IDENTITY(~ (gl_NumWorkGroups.x), uint(uvec2(_GLF_IDENTITY(~ (gl_NumWorkGroups.x), (~ (gl_NumWorkGroups.x)) >> 0u), 1u))), 0u, 0u, _GLF_IDENTITY(1u, (179608u & 0u) | (1u))), uvec4(_GLF_IDENTITY(~ (gl_NumWorkGroups.x), uint(uvec2(_GLF_IDENTITY(~ (gl_NumWorkGroups.x), (~ (gl_NumWorkGroups.x)) >> 0u), 1u))), 0u, 0u, 1u))))))))))), (gl_NumWorkGroups.x) - 0u);
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u);
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size), ((workgroup_size)) / 1u) | (workgroup_size))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(workgroup_size), (uint(workgroup_size)) >> 0u), clamp(_GLF_IDENTITY(uint(workgroup_size), (uint(workgroup_size)) >> 0u), _GLF_IDENTITY(uint(workgroup_size), (uint(workgroup_size)) >> 0u), _GLF_IDENTITY(uint(workgroup_size), (uint(workgroup_size)) >> 0u)))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(uint(workgroup_size), _GLF_IDENTITY((uint(workgroup_size)), clamp(_GLF_IDENTITY((uint(workgroup_size)), 0u ^ ((uint(workgroup_size)))), (uint(workgroup_size)), (uint(workgroup_size)))) >> 0u))), (false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))), min(uint(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))), uint(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))), min(uint(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))), uint(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))))))), (_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))), min(uint(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))), uint(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))))))) >> (0u << _GLF_IDENTITY(uint(4u), uint(4u)))), _GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))), min(uint(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))), uint(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))))))))) : _GLF_IDENTITY(~ ((_GLF_IDENTITY(uint(workgroup_size), (uint(workgroup_size)) >> 0u))), (~ ((_GLF_IDENTITY(uint(workgroup_size), (uint(workgroup_size)) >> 0u)))) >> 0u))))) | (_GLF_IDENTITY(uint(workgroup_size), (true ? uint(workgroup_size) : _GLF_FUZZED(floatBitsToUint(-9952.6592)))))), 0u ^ (uint(workgroup_size)))), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(workgroup_size, 0u | (workgroup_size))), 0u ^ _GLF_IDENTITY((uint(_GLF_IDENTITY(workgroup_size, min(_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(subgroup_size) : workgroup_size)), workgroup_size)))), min((uint(workgroup_size)), _GLF_IDENTITY((uint(workgroup_size)), 0u ^ ((uint(workgroup_size))))))))), (false ? _GLF_FUZZED(num_workgroup) : (uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(workgroup_size, 0u | (workgroup_size))), 0u ^ _GLF_IDENTITY((uint(_GLF_IDENTITY(workgroup_size, min(_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(subgroup_size) : workgroup_size)), workgroup_size)))), min((uint(workgroup_size)), _GLF_IDENTITY((uint(workgroup_size)), 0u ^ ((uint(workgroup_size))))))))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(uint(workgroup_size), 0u ^ (_GLF_IDENTITY(uint(workgroup_size), (_GLF_IDENTITY(uint(workgroup_size), 0u | (uint(workgroup_size)))) | 0u))))), (false ? _GLF_FUZZED(83314u) : ~ (uint(_GLF_IDENTITY(uint(workgroup_size), 0u ^ (_GLF_IDENTITY(uint(workgroup_size), (_GLF_IDENTITY(uint(workgroup_size), _GLF_IDENTITY(0u | (uint(workgroup_size)), min(0u | (uint(workgroup_size)), 0u | (uint(workgroup_size)))))) | 0u))))))), min(~ (uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(workgroup_size), clamp(uint(workgroup_size), uint(workgroup_size), _GLF_IDENTITY(uint(workgroup_size), (uint(workgroup_size)) / 1u))), 0u ^ (uint(workgroup_size))), (_GLF_IDENTITY(uint(workgroup_size), 0u ^ (uint(workgroup_size)))) >> (uint(_GLF_ZERO(0.0, injectionSwitch.x)) | 0u)))), ~ (uint(_GLF_IDENTITY(uint(workgroup_size), 0u ^ (uint(workgroup_size)))))))))))))) << _GLF_IDENTITY((135853u & 0u), ((135853u & 0u)) | ((135853u & 0u)))) * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)) + _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, 1u * (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)))) * subgroup_size) / 1u, _GLF_IDENTITY(((workgroup_base + subgroup_id * subgroup_size) / 1u), (((workgroup_base + subgroup_id * subgroup_size) / 1u)) | (((workgroup_base + subgroup_id * subgroup_size) / 1u))) / 1u), min((workgroup_base + _GLF_IDENTITY(subgroup_id, (true ? _GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u) : _GLF_FUZZED(subgroup_local_id))) * subgroup_size) / 1u, (workgroup_base + subgroup_id * subgroup_size) / 1u))))) + subgroup_local_id) / _GLF_IDENTITY(1u, (1u) + uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | 0u)) - 0u);
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uvec2(subgroup_local_id + 1, (1u ^ 0u))), (uint(uvec2(subgroup_local_id + 1, (1u ^ 0u)))) / 1u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uvec2(subgroup_local_id + 1, (1u ^ 0u))), (uint(uvec2(subgroup_local_id + 1, (1u ^ 0u)))) / 1u)), 0u), (uvec2(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uvec2(subgroup_local_id + 1, (1u ^ 0u))), (uint(uvec2(subgroup_local_id + 1, (1u ^ 0u)))) / 1u)), 0u)) ^ uvec2(0u, 0u))), min(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uvec2(subgroup_local_id + 1, (1u ^ 0u))), (uint(uvec2(subgroup_local_id + 1, (1u ^ 0u)))) / 1u)), 0u), (uvec2(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uvec2(subgroup_local_id + 1, (1u ^ 0u))), (uint(uvec2(subgroup_local_id + 1, (1u ^ 0u)))) / 1u)), 0u)) ^ uvec2(0u, 0u))), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uvec2(subgroup_local_id + 1, (1u ^ 0u))), (uint(uvec2(subgroup_local_id + 1, (1u ^ 0u)))) / 1u)), 0u), (uvec2(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uvec2(subgroup_local_id + 1, (1u ^ 0u))), (uint(uvec2(subgroup_local_id + 1, (1u ^ 0u)))) / 1u)), 0u)) ^ uvec2(0u, 0u))))))) % _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size) | (subgroup_size), (true ? (subgroup_size) | (subgroup_size) : _GLF_FUZZED(58358u))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size) | (subgroup_size), (true ? (subgroup_size) | (subgroup_size) : _GLF_FUZZED(58358u))), (_GLF_IDENTITY((subgroup_size) | (subgroup_size), (true ? (subgroup_size) | (subgroup_size) : _GLF_FUZZED(58358u)))) << 0u), min(_GLF_IDENTITY((subgroup_size) | _GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), clamp((subgroup_size), (subgroup_size), (subgroup_size)))) * 1u), (true ? (subgroup_size) | (subgroup_size) : _GLF_FUZZED(58358u))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size) | (subgroup_size), (true ? (subgroup_size) | (subgroup_size) : _GLF_FUZZED(58358u))), (_GLF_IDENTITY((subgroup_size) | (_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec3(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u), (uvec3(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)) | (uvec3(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)))))), (true ? (subgroup_size) | (subgroup_size) : _GLF_FUZZED(58358u)))) << 0u)))) << 0u))) - _GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), injectionSwitch)), 0.0, 1.0, 1.0, abs(0.0)))).x)), uint(uvec2(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), injectionSwitch)), 0.0, 1.0, 1.0, abs(0.0)))).x)), 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size) | (subgroup_size), (true ? (subgroup_size) | (subgroup_size) : _GLF_FUZZED(58358u))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size) | (subgroup_size), (true ? (subgroup_size) | (subgroup_size) : _GLF_FUZZED(58358u))), (_GLF_IDENTITY((subgroup_size) | (subgroup_size), (true ? (subgroup_size) | (subgroup_size) : _GLF_FUZZED(58358u)))) << 0u), min(_GLF_IDENTITY((subgroup_size) | _GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), clamp((subgroup_size), (subgroup_size), (subgroup_size)))) * 1u), (true ? (subgroup_size) | (subgroup_size) : _GLF_FUZZED(58358u))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size) | (subgroup_size), (true ? (subgroup_size) | (subgroup_size) : _GLF_FUZZED(58358u))), (_GLF_IDENTITY((subgroup_size) | (_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec3(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u), (uvec3(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)) | (uvec3(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)))))), (true ? (subgroup_size) | (subgroup_size) : _GLF_FUZZED(58358u)))) << 0u)))) << 0u))) - _GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), injectionSwitch)), 0.0, 1.0, 1.0, abs(0.0)))).x)), uint(uvec2(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), injectionSwitch)), 0.0, 1.0, 1.0, abs(0.0)))).x)), 0u))))) ^ 0u), subgroup_size)));
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter)), min(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - (0 >> _GLF_IDENTITY(int(7), int(7)))))) != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
    {
     _GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid] = _GLF_IDENTITY(1, 0 ^ (1)), _GLF_IDENTITY(0u | (buf[virtual_gid] = 1), (0u | (buf[virtual_gid] = 1)) * 1u)), (_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid] = 1, 0u ^ (_GLF_IDENTITY(buf[virtual_gid] = 1, ~ (~ (_GLF_IDENTITY(buf[virtual_gid] = _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, clamp(1, 1, 1))))) | (1)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (buf[virtual_gid] = _GLF_IDENTITY(1, (1) | (1))))))))), _GLF_IDENTITY(0u, max(0u, 0u)) | (buf[virtual_gid] = 1))) * _GLF_IDENTITY(1u, max(1u, 1u)));
    }
  }
 if(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(max(_GLF_IDENTITY(1, int(ivec4(1, 1, 0, 1))), _GLF_IDENTITY(1, (1) >> 0)), (max(1, _GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-91578) : 0))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (1) >> _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-91578) : 0)))), 0 | (~ (_GLF_IDENTITY(1, (1) >> _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-91578) : 0)))))))))) | (max(1, _GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), int(int(_GLF_IDENTITY(1, (1) >> 0))))))), (false ? _GLF_IDENTITY(_GLF_FUZZED(79904), _GLF_IDENTITY(clamp(_GLF_FUZZED(79904), _GLF_FUZZED(79904), _GLF_FUZZED(79904)), clamp(clamp(_GLF_FUZZED(79904), _GLF_FUZZED(_GLF_IDENTITY(79904, (_GLF_IDENTITY(79904, min(79904, 79904))) | (79904))), _GLF_FUZZED(79904)), clamp(_GLF_FUZZED(_GLF_IDENTITY(79904, (false ? _GLF_FUZZED(-75836) : 79904))), _GLF_FUZZED(79904), _GLF_FUZZED(79904)), _GLF_IDENTITY(clamp(_GLF_FUZZED(79904), _GLF_FUZZED(79904), _GLF_FUZZED(79904)), (false ? _GLF_FUZZED(-40814) : clamp(_GLF_FUZZED(79904), _GLF_FUZZED(79904), _GLF_FUZZED(79904))))))) : max(1, _GLF_IDENTITY(1, _GLF_IDENTITY((1), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((1), (false ? _GLF_FUZZED(ivec2(-50759, -46689)[1]) : (1))), min(_GLF_IDENTITY((1), (false ? _GLF_FUZZED(ivec2(-50759, -46689)[1]) : (1))), _GLF_IDENTITY((1), (false ? _GLF_FUZZED(ivec2(-50759, -46689)[1]) : (1)))))) | ((1)), 0 | (((1)) | ((1))))) >> 0))))), (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false)))) ? subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), max(1, 1)) : _GLF_FUZZED(num_workgroup))) < _GLF_IDENTITY(subgroup_size, 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)), ((_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_size), (false ? _GLF_FUZZED(subgroup_local_id) : ~ (subgroup_size)))), clamp((_GLF_IDENTITY(~ (subgroup_size), (false ? _GLF_FUZZED(subgroup_local_id) : ~ (subgroup_size)))), (_GLF_IDENTITY(~ (subgroup_size), (false ? _GLF_FUZZED(subgroup_local_id) : ~ (subgroup_size)))), (_GLF_IDENTITY(~ (subgroup_size), (false ? _GLF_FUZZED(subgroup_local_id) : ~ (subgroup_size)))))))) << 0u))) ^ 0u)))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 & 1)); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY((1 & _GLF_IDENTITY(1, int(ivec2(1, 1)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1, ~ (~ (1))) & 1), (_GLF_IDENTITY((_GLF_IDENTITY(1, _GLF_IDENTITY((1) | 0, min(_GLF_IDENTITY((1) | 0, int(int((1) | 0))), (1) | 0))) & 1), ((1 & 1)) | 0)) | ((1 & 1))), (0 | 0) ^ (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1, ~ (~ (1))) & 1), (_GLF_IDENTITY((_GLF_IDENTITY(1, (1) | 0) & 1), ((1 & 1)) | 0)) | ((1 & 1))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(1, ~ (~ (1))) & 1), (_GLF_IDENTITY((_GLF_IDENTITY(1, (1) | 0) & 1), ((1 & 1)) | 0)) | ((1 & 1))), _GLF_IDENTITY((_GLF_IDENTITY(1, ~ (~ (1))) & 1), (_GLF_IDENTITY((_GLF_IDENTITY(1, (1) | 0) & 1), ((1 & 1)) | 0)) | ((1 & 1))), _GLF_IDENTITY((_GLF_IDENTITY(1, ~ (~ (1))) & 1), (_GLF_IDENTITY((_GLF_IDENTITY(1, (1) | 0) & 1), ((1 & 1)) | 0)) | ((1 & 1))))))))))); _injected_loop_counter ++)
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)) || false)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-914.835)), vec2(_GLF_FUZZED(float(true)), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).y))) || false))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), ! (! (bool(bvec3(false, true, false))))))))), true)), (bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true))) && true))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[0], (injectionSwitch)[_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, max(1, 1)), 1)), _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 0 ^ (1)), 1))))]), vec2(_GLF_IDENTITY(_GLF_FUZZED(8.1), (true ? _GLF_FUZZED(8.1) : _GLF_FUZZED(-9.1))), _GLF_FUZZED(-87.45)), bvec2(false, false))).y))))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(float(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(2.5))))))))))
        {
        }
       else
        {
         barrier();
        }
      }
    }
   for(int _injected_loop_counter = _GLF_IDENTITY(1, ~ (~ (1))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), (int(0)) << (_GLF_IDENTITY(0 ^ 0, (_GLF_IDENTITY(0 ^ 0, 0 ^ (0 ^ 0))) >> int(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) >> 0), 0 | (_GLF_IDENTITY(0, (0) >> 0)))), (int(0)) * _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, max(1, 1))))))), ~ (~ (_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) * (0 ^ 1)), (0) >> 0)), (int(0)) * _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, 0 ^ _GLF_IDENTITY((1), (_GLF_IDENTITY((1), min((1), (1)))) | 0)))))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) - 0.0), 1.0, cos(0.0), determinant(mat3(1.0, _GLF_IDENTITY(round(length(_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), (false ? _GLF_FUZZED(vec2(-517.385, 6.4)) : _GLF_IDENTITY(normalize(vec2(1.0, 1.0)), (normalize(vec2(1.0, 1.0))) / vec2(1.0, 1.0)))))), (round(length(_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), (false ? _GLF_FUZZED(vec2(_GLF_IDENTITY(-517.385, (_GLF_IDENTITY(-517.385, (true ? -517.385 : _GLF_FUZZED(-7.4)))) - 0.0), 6.4)) : _GLF_IDENTITY(normalize(vec2(1.0, 1.0)), (normalize(vec2(1.0, 1.0))) / vec2(1.0, 1.0))))))) / 1.0), 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(76.29))), 0.0, 1.0)), _GLF_IDENTITY(abs(cos(0.0)), float(mat4x2(abs(cos(0.0)), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))), 0.0))), vec2(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 0.0, 1.0, cos(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, min(0.0, 0.0))), float(_GLF_FUZZED(-0.8)), bool(false))))), 0.0, 0.0))), determinant(mat3(1.0, round(length(normalize(vec2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(5.3)), float(1.0), bool(true))), 1.0)))), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), abs(_GLF_IDENTITY(cos(0.0), min(cos(0.0), cos(0.0)))), 0.0)), (vec2(mat4x2(injectionSwitch, 0.0, 1.0, cos(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), determinant(mat3(1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), abs(_GLF_IDENTITY(cos(0.0), min(cos(0.0), cos(0.0)))), 0.0))) * mat2(1.0))), clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 1.0, _GLF_IDENTITY(cos(_GLF_IDENTITY(0.0, float(mat3(0.0, 0.0, 0.0, log(1.0), 0.0, sqrt(0.0), cos(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0)))), mix(float(_GLF_FUZZED(399.258)), float(cos(_GLF_IDENTITY(0.0, float(mat3(0.0, 0.0, 0.0, log(1.0), 0.0, sqrt(0.0), cos(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0))))), bool(true))), determinant(mat3(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(mat3x2(1.0, 0.0, 0.0, 1.0, 0.0, 0.0))), 1.0)), round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), abs(cos(0.0)), 0.0))), _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 1.0, cos(0.0), determinant(mat3(1.0, round(length(normalize(vec2(1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(523.712)), bool(false))))), _GLF_IDENTITY(1.0, float(float(1.0))), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-9.3))))), _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), (_GLF_IDENTITY((1.0), ((1.0)) - 0.0)) / 1.0) / 1.0))))))), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), abs(cos(0.0)), 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 1.0, cos(0.0), determinant(mat3(1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), abs(cos(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) + _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-52.84)), bool(false)))))), 0.0))), (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 1.0, cos(0.0), determinant(mat3(1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) * 1.0))), _GLF_IDENTITY(abs(cos(0.0)), float(mat4x3(_GLF_IDENTITY(abs(cos(0.0)), (abs(cos(0.0))) / 1.0), 0.0, 0.0, 0.0, sqrt(0.0), 1.0, 0.0, 1.0, sqrt(0.0), 1.0, 0.0, 1.0))), 0.0)))) * mat2(1.0)))), 1.0, cos(0.0), 1.0, 1.0, 0.0, 0.0))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) * mat2(1.0)).x))); _injected_loop_counter --)
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) ^ 0) != 0, bool(bvec3(_injected_loop_counter != 0, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), true))))), false)))); _GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter --, (((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))) | 0) * (_GLF_IDENTITY(_injected_loop_counter --, 0 ^ _GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter --, (_GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) >> 0)) - 0)), 0 ^ ((_GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) - 0))))))), (false ? _GLF_FUZZED(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(82830, (82830) ^ 0), -33709, _GLF_IDENTITY(-70721, (-70721) | (_GLF_IDENTITY(-70721, 0 ^ (-70721)))), 39576), clamp(ivec4(_GLF_IDENTITY(82830, (82830) ^ 0), -33709, -70721, 39576), ivec4(_GLF_IDENTITY(82830, (82830) ^ 0), -33709, -70721, 39576), ivec4(_GLF_IDENTITY(82830, (82830) ^ _GLF_IDENTITY(0, ~ (~ (0)))), -33709, -70721, 39576)))[0]) : _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) - int(_GLF_ZERO(0.0, injectionSwitch.x))))))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
      }
    }
   atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(5.2) : injectionSwitch.y)))), false, false))), ! _GLF_IDENTITY((! (true)), false || ((! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec2(! (true), true)))))))))) ? next_virtual_gid : _GLF_IDENTITY(_GLF_FUZZED(next_virtual_gid), 0u | (_GLF_FUZZED(next_virtual_gid))))), _GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))), ! _GLF_IDENTITY(_GLF_IDENTITY((! (true)), ((! (true))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))), false || ((! _GLF_IDENTITY((true), ! (! ((true)))))))) ? next_virtual_gid : _GLF_IDENTITY(_GLF_FUZZED(next_virtual_gid), 0u | (_GLF_FUZZED(next_virtual_gid)))))) | (_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))), ! _GLF_IDENTITY((! (true)), false || ((! (_GLF_IDENTITY(true, (true) && true)))))) ? next_virtual_gid : _GLF_IDENTITY(_GLF_FUZZED(next_virtual_gid), 0u | (_GLF_FUZZED(next_virtual_gid)))))), (_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))), ! _GLF_IDENTITY(_GLF_IDENTITY((! (true)), ((! (true))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))), false || ((! _GLF_IDENTITY((true), ! (! ((true)))))))) ? next_virtual_gid : _GLF_IDENTITY(_GLF_FUZZED(next_virtual_gid), 0u | (_GLF_FUZZED(next_virtual_gid)))))) | (_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))), ! _GLF_IDENTITY((! (true)), false || ((! (_GLF_IDENTITY(true, (true) && true)))))) ? next_virtual_gid : _GLF_IDENTITY(_GLF_FUZZED(next_virtual_gid), 0u | (_GLF_FUZZED(next_virtual_gid)))))), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))), ! _GLF_IDENTITY(_GLF_IDENTITY((! (true)), ((! (true))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))), false || ((! _GLF_IDENTITY((true), ! (! ((true)))))))) ? next_virtual_gid : _GLF_IDENTITY(_GLF_FUZZED(next_virtual_gid), 0u | (_GLF_FUZZED(next_virtual_gid)))))) | (_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))), ! _GLF_IDENTITY((! (true)), false || ((! (_GLF_IDENTITY(true, (true) && true)))))) ? next_virtual_gid : _GLF_IDENTITY(_GLF_FUZZED(next_virtual_gid), 0u | (_GLF_FUZZED(next_virtual_gid)))))), uint(uint((_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))), ! _GLF_IDENTITY(_GLF_IDENTITY((! (true)), ((! (true))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))), false || ((! _GLF_IDENTITY((true), ! (! ((true)))))))) ? next_virtual_gid : _GLF_IDENTITY(_GLF_FUZZED(next_virtual_gid), 0u | (_GLF_FUZZED(next_virtual_gid)))))) | (_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))), ! _GLF_IDENTITY((! (true)), false || ((! (_GLF_IDENTITY(true, (true) && true)))))) ? next_virtual_gid : _GLF_IDENTITY(_GLF_FUZZED(next_virtual_gid), 0u | (_GLF_FUZZED(next_virtual_gid)))))))))))) - (0u << _GLF_IDENTITY(uint(6u), uint(6u)))))], uint(2), 4, 64, 0);
   do
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         subgroupAll(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))) || (false), ! (! (false || (false))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! (! (false || (_GLF_IDENTITY(false, ! (! (false)))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, false)))), ((_GLF_IDENTITY(false, bool(bvec2(false, false))))) && true) || false) || (_GLF_IDENTITY(false, true && (false))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) || false), true && (bool(bvec2(false, false))))) || (false))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) || false) || (false), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), true && (bool(bvec2(false, false)))), bool(bvec3(_GLF_IDENTITY(bool(bvec2(false, false)), true && (bool(bvec2(false, false)))), false, true)))) || (false))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) || false) || (false), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), true && (bool(bvec2(false, false))))) || (false))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) || false) || (false), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), true && (bool(bvec2(false, false))))) || (false)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false)))))))), (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false) || (false), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false)))))))), (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false, ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false)))))))), (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false), (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false)))))))), (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)) && true)))) || (false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), true && (bool(bvec2(false, false)))), ! (! (_GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true && (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), true))), false)))))))))) || (false))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))), _GLF_IDENTITY(false, bool(bool(false))))))) || false) || (false), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false)))) || (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) && true), false)), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false)))) || (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false)), ((! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false)))) || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))), (false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y)))))))))) || false))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, false)))) || false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 1.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(1.0), 1.0)))) - 0.0) > injectionSwitch.y)) || ((_GLF_IDENTITY(false, bool(bvec2(false, false)))) || false))) || (false), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), true && (bool(bvec2(false, false))))) || (false))))))))))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, false)))), ((_GLF_IDENTITY(false, bool(bvec2(false, false))))) || false) || false) || (false), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false)))))))), true && (bool(bvec2(false, false))))) || (false))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, false)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, false)))), ! (! ((_GLF_IDENTITY(false, bool(bvec2(false, false)))))))))) || false) || (false), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false)), true && (bool(bvec2(false, false))))) || (false))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) || false) || (false), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false)))), true && (bool(bvec2(false, false))))) || (false)))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) || false) || (false), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), true && (bool(bvec2(false, false))))) || (false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, bool(bvec2(false, false)))))) || false) || (false), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), true && (bool(bvec2(false, false))))) || (false)))))))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) || false) || (false), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), true && (bool(bvec2(false, false))))) || (false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, bool(bvec2(false, false)))))) || false) || (false), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), true && (bool(bvec2(false, false))))) || (false)))))))), bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) || false) || (false), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), true && (bool(bvec2(false, false))))) || (false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, bool(bvec2(false, false)))))) || false) || (false), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), true && (bool(bvec2(false, false))))) || (false)))))))), true, true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) || false) || (false), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), true && (bool(bvec2(false, false))))) || (false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) || false) || (false), (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) || false) || (false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) || false) || (false))), ! (! (bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) || false) || (false)))))))) && true), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), true && (bool(bvec2(false, false))))) || (false)))))))), true), bvec2(bvec4(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) || false) || (false), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), true && (bool(bvec2(false, false)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), true && (bool(bvec2(false, false)))), ! (! (_GLF_IDENTITY(bool(bvec2(false, false)), true && (bool(bvec2(false, false)))))))))) || (false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) || false) || (false), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), true && (bool(bvec2(false, false))))) || (false)))))))), true), false, true)))))))))))))))))) || false))));
        }
       else
        {
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 1.0), (mat2(injectionSwitch, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 1.0)) + mat2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))).y)) && (false))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), ! (! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 1.0), (mat2(_GLF_IDENTITY(injectionSwitch, vec2(vec4(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), 1.0, 1.0))), _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_FUZZED(256.903)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) + mat2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x))))).y)) && (false)))))) || false)))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
      }
     else
      {
      }
    }
  }
 else
  {
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) / 1)) / 1), (true ? _GLF_IDENTITY(2, (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) | (2))) / 1)) / 1) : _GLF_FUZZED(-95998))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, ~ (~ (2)))) - 0), _GLF_IDENTITY(clamp(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, 0 + (2))) / 1), 2, 2), min(_GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, 0 + (2))) / 1), 2, 2), clamp(clamp(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, 0 + (2))) / 1), 2, 2), clamp(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, 0 + (2))) / 1), 2, 2), clamp(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, 0 + (2))) / 1), 2, 2))), 0 ^ (_GLF_IDENTITY(clamp(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, 0 + (2))) / 1), 2, 2), clamp(clamp(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, 0 + (2))) / _GLF_IDENTITY(1, (1) | (1))), 2, 2), clamp(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, 0 + (2))) / 1), 2, 2), clamp(_GLF_IDENTITY(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, 0 + (2))) / 1), max(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, 0 + (2))) / 1), _GLF_IDENTITY(2, (_GLF_IDENTITY(2, 0 + (2))) / 1))), 2, 2))))), clamp(_GLF_IDENTITY(2, (_GLF_IDENTITY(_GLF_IDENTITY(2, 0 + (2)), (_GLF_IDENTITY(2, 0 + (_GLF_IDENTITY(2, (2) >> 0)))) | 0)) / _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (1), (~ (1)) - 0), int(ivec2(~ (1), 0)))))), 2, 2)))), ~ (~ _GLF_IDENTITY((2), min((2), _GLF_IDENTITY(_GLF_IDENTITY((2), ((2)) + (0 | 0)), (_GLF_IDENTITY((2), ((2)) + (0 | 0))) ^ 0))))), 0 + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY((2) + 0, ((2) + 0) | ((2) + 0))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY((2) >> int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), 1.0, 0.0, 0.0)), 1.0 * (float(vec4(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), 1.0, 0.0, 0.0))))), _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(0 | ((2) >> int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x))))), max(_GLF_IDENTITY(0 | ((2) >> int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x))))), min(0 | ((2) >> int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x))))), 0 | ((2) >> int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x))))))), 0 | ((2) >> int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x))))))))), (2) / 1), 2, 2)), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((2), min((2), (2))), (~ _GLF_IDENTITY((2), min((2), (2)))) - 0), 0 ^ (~ _GLF_IDENTITY(_GLF_IDENTITY((2), ((2)) / 1), min((2), (2)))))))))) * _GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((1), clamp((1), (1), _GLF_IDENTITY((1), ~ (~ ((1)))))) >> 0, int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY((1), clamp((1), (1), _GLF_IDENTITY((1), ~ (~ ((1)))))) >> 0, (_GLF_IDENTITY((1), clamp((1), (1), _GLF_IDENTITY((1), ~ (~ ((1)))))) >> 0) >> 0), 1, 1)))))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(2, (_GLF_IDENTITY(_GLF_IDENTITY(2, (2) | (0 << _GLF_IDENTITY(int(4), int(4)))), (_GLF_IDENTITY(2, int(ivec2(2, 1)))) / 1)) / 1), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, 0 + (2))) / 1), _GLF_IDENTITY(2, int(ivec3(_GLF_IDENTITY(2, min(2, 2)), 0, 1))), 2)), ~ (~ _GLF_IDENTITY((2), min((_GLF_IDENTITY(2, min(2, 2))), _GLF_IDENTITY((2), ((2)) + (0 | 0)))))), 0 + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(2, min(2, 2))))) | (_GLF_IDENTITY(2, (2) | (0 | 0))))) + 0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) >> int(_GLF_ZERO(0.0, injectionSwitch.x))), (2) / 1), 2, 2)), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((2), min((2), (2))), 0 ^ (~ _GLF_IDENTITY(_GLF_IDENTITY((2), ((2)) - 0), min((2), (2))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, 0 + (2))) / 1), _GLF_IDENTITY(2, int(ivec3(_GLF_IDENTITY(2, min(2, 2)), 0, 1))), 2)), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((2), min((2), _GLF_IDENTITY((2), ((2)) + (0 | 0)))), clamp(_GLF_IDENTITY(~ _GLF_IDENTITY((2), min((2), _GLF_IDENTITY((2), ((2)) + (0 | 0)))), (~ _GLF_IDENTITY((2), min((2), _GLF_IDENTITY((2), ((2)) + (0 | 0))))) - 0), ~ _GLF_IDENTITY((2), min((2), _GLF_IDENTITY((2), ((2)) + (0 | 0)))), ~ _GLF_IDENTITY((2), min((2), _GLF_IDENTITY((2), ((2)) + (0 | 0)))))))), 0 + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) + 0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) >> int(_GLF_ZERO(0.0, injectionSwitch.x))), (2) / 1), 2, 2)), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((2), min((2), (2))), 0 ^ (~ _GLF_IDENTITY(_GLF_IDENTITY((2), ((2)) - 0), min((2), (2))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, 0 + (2))) / 1), _GLF_IDENTITY(2, int(ivec3(_GLF_IDENTITY(2, min(2, 2)), 0, 1))), 2)), ~ (~ _GLF_IDENTITY((2), min((2), _GLF_IDENTITY((2), ((2)) + (0 | 0)))))), 0 + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) + 0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) >> int(_GLF_ZERO(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-59.45) : 0.0)), injectionSwitch.x))), (2) / 1), 2, 2)), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((2), min((2), (2))), 0 ^ (~ _GLF_IDENTITY(_GLF_IDENTITY((2), ((2)) - 0), min((2), (2)))))))))) | 0)) / (1 & 1))) * _GLF_IDENTITY(1, _GLF_IDENTITY((1), clamp((1), (1), _GLF_IDENTITY((1), ~ (~ ((1)))))) >> 0)))) ^ _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), (_GLF_IDENTITY(0u, (0u) | (0u))) >> 0u), _GLF_IDENTITY(0u, (0u) | (0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), uint(uvec3(_GLF_IDENTITY(0u, (0u) | (0u)), 1u, 0u))))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), (_GLF_IDENTITY(0u, (0u) | (0u))) >> 0u), _GLF_IDENTITY(0u, (0u) | (0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), uint(uvec3(_GLF_IDENTITY(0u, (0u) | (0u)), 1u, 0u))))), max(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), (_GLF_IDENTITY(0u, (0u) | (0u))) >> 0u), _GLF_IDENTITY(0u, (0u) | (0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), uint(uvec3(_GLF_IDENTITY(0u, (0u) | (0u)), 1u, 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), (_GLF_IDENTITY(0u, (0u) | (0u))) >> 0u), _GLF_IDENTITY(0u, (0u) | (0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), uint(uvec3(_GLF_IDENTITY(0u, (0u) | (0u)), 1u, 0u))))))), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), (_GLF_IDENTITY(0u, (0u) | (0u))) >> 0u), _GLF_IDENTITY(0u, (0u) | (0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), uint(uvec3(_GLF_IDENTITY(0u, (0u) | (0u)), 1u, 0u)))))))), 4, _GLF_IDENTITY(64, int(_GLF_IDENTITY(ivec4(64, 0, 1, 0), (ivec4(64, 0, 1, 0)) | (ivec4(64, 0, 1, 0))))), _GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) * (1 ^ 0)), ~ (~ (0))));
   subgroupAll(true);
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
