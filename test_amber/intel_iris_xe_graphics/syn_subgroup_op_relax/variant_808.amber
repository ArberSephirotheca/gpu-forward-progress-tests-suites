#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_0 {
 mat3x4 _f0;
 mat3x2 _f1;
 mat3 _f2;
 float _f3;
} ;

struct _GLF_struct_1 {
 ivec4 _f0;
 vec3 _f1;
 bvec2 _f2;
 _GLF_struct_0 _f3;
 uvec2 _f4;
} ;

struct _GLF_struct_2 {
 uint virtual_gid;
 _GLF_struct_1 _f0;
 int _f1;
 bvec3 _f2;
 mat2x3 _f3;
} ;

layout(set = 0, binding = 0) uniform buf0 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((false ? _GLF_FUZZED(atanh(3052.7765)) : injectionSwitch.x), (true ? (false ? _GLF_FUZZED(atanh(3052.7765)) : injectionSwitch.x) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(5.1, clamp(5.1, 5.1, 5.1))), min(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(5.1, clamp(5.1, 5.1, 5.1))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x4(_GLF_FUZZED(_GLF_IDENTITY(5.1, clamp(5.1, 5.1, 5.1))), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat2x4(85.29, -7.1, 7.9, -268.412, 3.3, -29.17, 90.90, -444.599)) : mat2x4(_GLF_FUZZED(_GLF_IDENTITY(5.1, clamp(5.1, 5.1, 5.1))), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)))), (float(_GLF_IDENTITY(mat2x4(_GLF_FUZZED(_GLF_IDENTITY(5.1, clamp(5.1, 5.1, 5.1))), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat2x4(85.29, -7.1, 7.9, -268.412, 3.3, -29.17, 90.90, -444.599)) : mat2x4(_GLF_FUZZED(_GLF_IDENTITY(5.1, clamp(5.1, 5.1, 5.1))), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0))))) + 0.0)), _GLF_FUZZED(_GLF_IDENTITY(5.1, clamp(5.1, 5.1, 5.1)))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(atanh(3052.7765)) : injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(atanh(3052.7765)) : injectionSwitch.x))) / _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(abs(1.0), 0.0)), dot(vec2(1.0, 0.0), vec2(abs(1.0), 0.0)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((false ? _GLF_FUZZED(atanh(_GLF_IDENTITY(3052.7765, (3052.7765) - 0.0))) : injectionSwitch.x), max((false ? _GLF_FUZZED(atanh(_GLF_IDENTITY(3052.7765, (3052.7765) - 0.0))) : injectionSwitch.x), (false ? _GLF_FUZZED(atanh(_GLF_IDENTITY(3052.7765, (3052.7765) - 0.0))) : injectionSwitch.x)))), mix(float(_GLF_FUZZED(-5.3)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(atanh(_GLF_IDENTITY(3052.7765, min(3052.7765, 3052.7765)))) : injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(atanh(3052.7765)) : injectionSwitch.x))) / 1.0)), bool(true))))), _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), _GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 1.0, 0.0))))))) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0))))).x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint subgroup_size = 16;
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), true, true)), _GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), true, true))) && true, ((bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), true, true))) && true) || _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) ^ _GLF_IDENTITY((gl_WorkGroupSize), uvec3(0u, 0u, 0u) | ((gl_WorkGroupSize)))).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))) && true)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(true, false || _GLF_IDENTITY((_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec3(bvec2(true, false), true)))))), true && ((_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec3(bvec2(true, false), true))))))))), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((false) && true, ! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((false), bool(bvec4((false), false, true, _GLF_IDENTITY(false, (false) || false)))) && true), true && (! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), false, true, false))) && true, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), false, true, false))) && true, (_GLF_IDENTITY((false), bool(bvec4((false), false, true, false))) && true) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) && true), bool(bvec4((false), false, true, false))) && true, (_GLF_IDENTITY((false), bool(bvec4((false), false, true, false))) && true) || false)) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))))))))))), true && (! ((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)))) && true))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((false), bool(bvec4((false), false, true, _GLF_IDENTITY(false, (false) || false)))) && true), true && (! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), false, true, false))) && true, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), false, true, false))) && true, (_GLF_IDENTITY((false), bool(bvec4((false), false, true, false))) && true) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) && true), bool(bvec4((false), false, true, false))) && true, (_GLF_IDENTITY((false), bool(bvec4((false), false, true, false))) && true) || false)) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))))))))))), true && (! ((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)))) && true))), true, true)))))), true, true), true)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false), (injectionSwitch.x > injectionSwitch.y))) || false)) && true)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(5u, (0u & 150543u) ^ (5u)), (_GLF_IDENTITY(5u, (0u & 150543u) ^ (5u))) | (_GLF_IDENTITY(5u, (0u & 150543u) ^ (5u))))), uint(5u))) * (workgroup_size * workgroup_id));
 _GLF_struct_2 _GLF_struct_replacement_2 = _GLF_struct_2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u)) + 0u), (workgroup_base) | 0u) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)) * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), ~ (~ (_GLF_IDENTITY(subgroup_size, (false ? _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_FUZZED(num_workgroup)) | (_GLF_FUZZED(num_workgroup))) : subgroup_size))))), clamp(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(clamp(subgroup_id, subgroup_id, subgroup_id), clamp(clamp(subgroup_id, subgroup_id, subgroup_id), _GLF_IDENTITY(clamp(subgroup_id, subgroup_id, subgroup_id), (clamp(subgroup_id, subgroup_id, subgroup_id)) + 0u), _GLF_IDENTITY(clamp(subgroup_id, subgroup_id, subgroup_id), clamp(_GLF_IDENTITY(clamp(subgroup_id, subgroup_id, subgroup_id), (clamp(subgroup_id, subgroup_id, subgroup_id)) * 1u), clamp(subgroup_id, subgroup_id, subgroup_id), clamp(subgroup_id, subgroup_id, subgroup_id)))))) * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) >> (65874u & 0u))) << 0u), ~ (~ (_GLF_IDENTITY(subgroup_size, (false ? _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_FUZZED(num_workgroup)) | (_GLF_FUZZED(num_workgroup))) : subgroup_size))))), _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)) * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) << 0u), ~ (~ (_GLF_IDENTITY(subgroup_size, (false ? _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_FUZZED(num_workgroup)) | (_GLF_FUZZED(num_workgroup))) : subgroup_size))))), _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)) * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), ~ (~ (_GLF_IDENTITY(subgroup_size, (false ? _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_FUZZED(num_workgroup)) | (_GLF_FUZZED(num_workgroup))) : subgroup_size))))))) + subgroup_local_id, _GLF_struct_1(ivec4(1), vec3(1.0), bvec2(true), _GLF_struct_0(mat3x4(1.0), mat3x2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-2.0)), float(1.0), bool(true)))), mat3(1.0), 1.0), uvec2(1u)), 1, bvec3(true), mat2x3(1.0));
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false)))) && true))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), _GLF_IDENTITY(float(_GLF_FUZZED(14.59)), _GLF_IDENTITY(_GLF_IDENTITY((float(_GLF_FUZZED(14.59))) - 0.0, clamp(_GLF_IDENTITY((float(_GLF_FUZZED(14.59))) - 0.0, _GLF_IDENTITY(float(mat4((float(_GLF_FUZZED(14.59))) - 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 1.0)), min(float(mat4((float(_GLF_FUZZED(14.59))) - 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 1.0)), float(mat4((float(_GLF_FUZZED(14.59))) - 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 1.0))))), _GLF_IDENTITY((float(_GLF_FUZZED(14.59))) - 0.0, max(_GLF_IDENTITY((float(_GLF_FUZZED(14.59))) - 0.0, float(mat3x4((float(_GLF_FUZZED(14.59))) - 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0))), (float(_GLF_FUZZED(14.59))) - 0.0)), _GLF_IDENTITY((float(_GLF_FUZZED(14.59))) - 0.0, min((float(_GLF_FUZZED(14.59))) - 0.0, (float(_GLF_FUZZED(14.59))) - 0.0)))), mix(float(_GLF_FUZZED((+ 502.366))), float(_GLF_IDENTITY((float(_GLF_FUZZED(14.59))) - 0.0, clamp(_GLF_IDENTITY((float(_GLF_FUZZED(14.59))) - 0.0, _GLF_IDENTITY(float(mat4((float(_GLF_FUZZED(14.59))) - 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 1.0)), min(float(mat4((float(_GLF_FUZZED(14.59))) - 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 1.0)), float(mat4((float(_GLF_FUZZED(14.59))) - 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 1.0))))), _GLF_IDENTITY((float(_GLF_FUZZED(14.59))) - 0.0, max(_GLF_IDENTITY((float(_GLF_FUZZED(14.59))) - 0.0, float(mat3x4((float(_GLF_FUZZED(14.59))) - 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0))), (float(_GLF_FUZZED(14.59))) - 0.0)), _GLF_IDENTITY((float(_GLF_FUZZED(14.59))) - 0.0, min((float(_GLF_FUZZED(14.59))) - 0.0, (float(_GLF_FUZZED(14.59))) - 0.0))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(false))), (false ? _GLF_FUZZED(-9486.2235) : _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), _GLF_IDENTITY(float(_GLF_FUZZED(14.59)), _GLF_IDENTITY(_GLF_IDENTITY((float(_GLF_FUZZED(14.59))) - 0.0, clamp(_GLF_IDENTITY((_GLF_IDENTITY(float(_GLF_FUZZED(14.59)), float(mat2x3(float(_GLF_FUZZED(14.59)), 1.0, 1.0, 1.0, 0.0, exp(0.0))))) - 0.0, _GLF_IDENTITY(float(mat4((float(_GLF_FUZZED(_GLF_IDENTITY(14.59, (14.59) + 0.0)))) - 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 1.0)), min(float(mat4((float(_GLF_FUZZED(14.59))) - _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0.0, (0.0) * 1.0) : _GLF_FUZZED(4.4))), 0.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 1.0)), float(mat4((float(_GLF_FUZZED(14.59))) - _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 1.0))))), _GLF_IDENTITY((float(_GLF_FUZZED(14.59))) - 0.0, max(_GLF_IDENTITY((float(_GLF_FUZZED(14.59))) - 0.0, float(mat3x4((float(_GLF_FUZZED(14.59))) - 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0))), (float(_GLF_FUZZED(14.59))) - 0.0)), _GLF_IDENTITY((float(_GLF_FUZZED(14.59))) - 0.0, min((float(_GLF_FUZZED(14.59))) - 0.0, (float(_GLF_FUZZED(14.59))) - 0.0)))), mix(float(_GLF_FUZZED((+ 502.366))), float(_GLF_IDENTITY((float(_GLF_FUZZED(14.59))) - 0.0, clamp(_GLF_IDENTITY((float(_GLF_FUZZED(14.59))) - 0.0, _GLF_IDENTITY(float(mat4((float(_GLF_FUZZED(14.59))) - 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 1.0)), min(float(mat4((float(_GLF_FUZZED(14.59))) - 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 1.0)), float(mat4((float(_GLF_FUZZED(14.59))) - 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 1.0))))), _GLF_IDENTITY((float(_GLF_FUZZED(14.59))) - 0.0, max(_GLF_IDENTITY((float(_GLF_FUZZED(14.59))) - 0.0, float(mat3x4((float(_GLF_FUZZED(14.59))) - 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0))), (float(_GLF_FUZZED(14.59))) - 0.0)), _GLF_IDENTITY(_GLF_IDENTITY((float(_GLF_FUZZED(14.59))) - 0.0, min((float(_GLF_FUZZED(14.59))) - 0.0, (float(_GLF_FUZZED(14.59))) - 0.0)), (_GLF_IDENTITY((float(_GLF_FUZZED(14.59))) - 0.0, min((float(_GLF_FUZZED(14.59))) - _GLF_IDENTITY(0.0, (0.0) + 0.0), (float(_GLF_FUZZED(14.59))) - 0.0))) / 1.0)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(false))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), _GLF_IDENTITY(float(_GLF_FUZZED(14.59)), _GLF_IDENTITY(_GLF_IDENTITY((float(_GLF_FUZZED(14.59))) - 0.0, clamp(_GLF_IDENTITY((float(_GLF_FUZZED(14.59))) - 0.0, _GLF_IDENTITY(float(mat4((float(_GLF_FUZZED(14.59))) - 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 1.0)), min(float(mat4((float(_GLF_FUZZED(14.59))) - 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 1.0)), float(mat4((float(_GLF_FUZZED(14.59))) - 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 1.0))))), _GLF_IDENTITY((float(_GLF_FUZZED(14.59))) - 0.0, max(_GLF_IDENTITY((float(_GLF_FUZZED(14.59))) - 0.0, float(mat3x4((float(_GLF_FUZZED(14.59))) - 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0))), (float(_GLF_FUZZED(14.59))) - 0.0)), _GLF_IDENTITY((float(_GLF_FUZZED(14.59))) - 0.0, min((float(_GLF_FUZZED(14.59))) - 0.0, (float(_GLF_FUZZED(14.59))) - 0.0)))), mix(float(_GLF_FUZZED((+ 502.366))), float(_GLF_IDENTITY((float(_GLF_FUZZED(14.59))) - 0.0, clamp(_GLF_IDENTITY((float(_GLF_FUZZED(14.59))) - 0.0, _GLF_IDENTITY(float(mat4((float(_GLF_FUZZED(14.59))) - 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 1.0)), min(float(mat4((float(_GLF_FUZZED(14.59))) - 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 1.0)), float(mat4((float(_GLF_FUZZED(14.59))) - 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 1.0))))), _GLF_IDENTITY((float(_GLF_FUZZED(14.59))) - 0.0, max(_GLF_IDENTITY((float(_GLF_FUZZED(14.59))) - 0.0, float(mat3x4((float(_GLF_FUZZED(14.59))) - 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0))), (float(_GLF_FUZZED(14.59))) - 0.0)), _GLF_IDENTITY((float(_GLF_FUZZED(14.59))) - 0.0, min((float(_GLF_FUZZED(14.59))) - 0.0, (float(_GLF_FUZZED(14.59))) - 0.0))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(false))), (false ? _GLF_FUZZED(-9486.2235) : _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), _GLF_IDENTITY(float(_GLF_FUZZED(14.59)), _GLF_IDENTITY(_GLF_IDENTITY((float(_GLF_FUZZED(14.59))) - 0.0, clamp(_GLF_IDENTITY((_GLF_IDENTITY(float(_GLF_FUZZED(14.59)), float(mat2x3(float(_GLF_FUZZED(14.59)), 1.0, 1.0, 1.0, 0.0, exp(0.0))))) - 0.0, _GLF_IDENTITY(float(mat4((float(_GLF_FUZZED(_GLF_IDENTITY(14.59, (14.59) + 0.0)))) - 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 1.0)), min(float(mat4((float(_GLF_FUZZED(14.59))) - _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0.0, (0.0) * 1.0) : _GLF_FUZZED(4.4))), 0.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 1.0)), float(mat4((float(_GLF_FUZZED(14.59))) - _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 1.0))))), _GLF_IDENTITY((float(_GLF_FUZZED(14.59))) - 0.0, max(_GLF_IDENTITY((float(_GLF_FUZZED(14.59))) - 0.0, float(mat3x4((float(_GLF_FUZZED(14.59))) - 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0))), (float(_GLF_FUZZED(14.59))) - 0.0)), _GLF_IDENTITY((float(_GLF_FUZZED(14.59))) - 0.0, min((float(_GLF_FUZZED(14.59))) - 0.0, (float(_GLF_FUZZED(14.59))) - 0.0)))), mix(float(_GLF_FUZZED((+ 502.366))), float(_GLF_IDENTITY((float(_GLF_FUZZED(14.59))) - 0.0, clamp(_GLF_IDENTITY((float(_GLF_FUZZED(14.59))) - 0.0, _GLF_IDENTITY(float(mat4((float(_GLF_FUZZED(14.59))) - 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 1.0)), min(float(mat4((float(_GLF_FUZZED(14.59))) - 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 1.0)), float(mat4((float(_GLF_FUZZED(14.59))) - 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 1.0))))), _GLF_IDENTITY((float(_GLF_FUZZED(14.59))) - 0.0, max(_GLF_IDENTITY((float(_GLF_FUZZED(14.59))) - 0.0, float(mat3x4((float(_GLF_FUZZED(14.59))) - 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0))), (float(_GLF_FUZZED(14.59))) - 0.0)), _GLF_IDENTITY(_GLF_IDENTITY((float(_GLF_FUZZED(14.59))) - 0.0, min((float(_GLF_FUZZED(14.59))) - 0.0, (float(_GLF_FUZZED(14.59))) - 0.0)), (_GLF_IDENTITY((float(_GLF_FUZZED(14.59))) - 0.0, min((float(_GLF_FUZZED(14.59))) - _GLF_IDENTITY(0.0, (0.0) + 0.0), (float(_GLF_FUZZED(14.59))) - 0.0))) / 1.0)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(false))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), _GLF_IDENTITY(float(_GLF_FUZZED(14.59)), _GLF_IDENTITY(_GLF_IDENTITY((float(_GLF_FUZZED(14.59))) - 0.0, clamp(_GLF_IDENTITY((float(_GLF_FUZZED(14.59))) - 0.0, _GLF_IDENTITY(float(mat4((float(_GLF_FUZZED(14.59))) - 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 1.0)), min(float(mat4((float(_GLF_FUZZED(14.59))) - 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, sqrt(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0), (true ? vec2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0) : _GLF_FUZZED(injectionSwitch)))))), float(_GLF_FUZZED(float(61094))), bool(false)))), 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(abs(1.0), float(mat4x3(abs(1.0), 0.0, 0.0, 1.0, 1.0, 0.0, exp(0.0), 1.0, sin(0.0), 0.0, 1.0, 0.0))), 0.0, 0.0, 1.0)), float(mat4(_GLF_IDENTITY((float(_GLF_FUZZED(14.59))) - 0.0, ((float(_GLF_FUZZED(14.59))) - 0.0) * _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))), 0.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 1.0))))), _GLF_IDENTITY((float(_GLF_FUZZED(14.59))) - 0.0, max(_GLF_IDENTITY((float(_GLF_FUZZED(14.59))) - 0.0, float(mat3x4((float(_GLF_FUZZED(_GLF_IDENTITY(14.59, float(float(14.59)))))) - 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0))), (float(_GLF_FUZZED(14.59))) - 0.0)), _GLF_IDENTITY((float(_GLF_FUZZED(14.59))) - 0.0, min((float(_GLF_FUZZED(14.59))) - 0.0, (float(_GLF_IDENTITY(_GLF_FUZZED(14.59), clamp(_GLF_FUZZED(14.59), _GLF_FUZZED(14.59), _GLF_IDENTITY(_GLF_FUZZED(14.59), max(_GLF_FUZZED(14.59), _GLF_FUZZED(14.59))))))) - 0.0)))), mix(float(_GLF_FUZZED((+ 502.366))), float(_GLF_IDENTITY((float(_GLF_FUZZED(14.59))) - 0.0, clamp(_GLF_IDENTITY((float(_GLF_FUZZED(14.59))) - 0.0, _GLF_IDENTITY(float(mat4((float(_GLF_FUZZED(14.59))) - 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, (0.0) - 0.0))))), 0.0, 0.0, 0.0, abs(1.0), _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-5806.1488)), float(0.0), bool(true)))), float(_GLF_FUZZED(512.892)), bool(false))), 0.0, 1.0)), min(float(mat4((float(_GLF_FUZZED(14.59))) - 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0)), float(mat4((float(_GLF_FUZZED(14.59))) - 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 1.0))))), _GLF_IDENTITY((float(_GLF_FUZZED(14.59))) - 0.0, max(_GLF_IDENTITY((float(_GLF_FUZZED(14.59))) - 0.0, float(mat3x4((float(_GLF_FUZZED(14.59))) - 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0))), (float(_GLF_FUZZED(14.59))) - 0.0)), _GLF_IDENTITY((float(_GLF_FUZZED(14.59))) - 0.0, min((float(_GLF_FUZZED(14.59))) - 0.0, (float(_GLF_FUZZED(14.59))) - 0.0))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(false))), (false ? _GLF_FUZZED(-9486.2235) : _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), _GLF_IDENTITY(float(_GLF_FUZZED(14.59)), _GLF_IDENTITY(_GLF_IDENTITY((float(_GLF_FUZZED(14.59))) - 0.0, clamp(_GLF_IDENTITY((_GLF_IDENTITY(float(_GLF_FUZZED(14.59)), float(mat2x3(float(_GLF_FUZZED(14.59)), 1.0, 1.0, 1.0, 0.0, exp(0.0))))) - 0.0, _GLF_IDENTITY(float(mat4((float(_GLF_FUZZED(_GLF_IDENTITY(14.59, (14.59) + 0.0)))) - 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 1.0)), min(float(mat4((float(_GLF_FUZZED(14.59))) - _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0.0, (0.0) * 1.0) : _GLF_FUZZED(4.4))), 0.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 1.0)), float(mat4((float(_GLF_FUZZED(14.59))) - _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 1.0))))), _GLF_IDENTITY((_GLF_IDENTITY(float(_GLF_FUZZED(14.59)), max(float(_GLF_FUZZED(14.59)), float(_GLF_FUZZED(14.59))))) - 0.0, max(_GLF_IDENTITY((float(_GLF_FUZZED(14.59))) - 0.0, float(mat3x4((float(_GLF_FUZZED(14.59))) - 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0))), (float(_GLF_FUZZED(14.59))) - 0.0)), _GLF_IDENTITY((float(_GLF_FUZZED(14.59))) - 0.0, min((float(_GLF_FUZZED(14.59))) - 0.0, (float(_GLF_FUZZED(14.59))) - 0.0)))), mix(float(_GLF_FUZZED((+ 502.366))), float(_GLF_IDENTITY((float(_GLF_FUZZED(14.59))) - 0.0, clamp(_GLF_IDENTITY((float(_GLF_FUZZED(14.59))) - 0.0, _GLF_IDENTITY(float(mat4((float(_GLF_FUZZED(14.59))) - 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 1.0)), min(float(mat4((float(_GLF_FUZZED(14.59))) - 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) * 1.0)) * 1.0), 1.0)), sqrt(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 1.0)), float(mat4((float(_GLF_FUZZED(14.59))) - 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, 0.0, 0.0, 1.0, sqrt(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, _GLF_IDENTITY(0.0, tan(0.0) + (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(3.0)), float(0.0), bool(true))))), 1.0))))), _GLF_IDENTITY((float(_GLF_FUZZED(14.59))) - 0.0, max(_GLF_IDENTITY((float(_GLF_FUZZED(14.59))) - 0.0, float(mat3x4((float(_GLF_FUZZED(14.59))) - _GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0))), (float(_GLF_FUZZED(14.59))) - 0.0)), _GLF_IDENTITY(_GLF_IDENTITY((float(_GLF_FUZZED(14.59))) - 0.0, min((float(_GLF_FUZZED(14.59))) - 0.0, (float(_GLF_FUZZED(14.59))) - 0.0)), (_GLF_IDENTITY(_GLF_IDENTITY((float(_GLF_FUZZED(14.59))) - 0.0, ((float(_GLF_FUZZED(14.59))) - 0.0) - 0.0), min((float(_GLF_FUZZED(14.59))) - _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) + 0.0), 1.0 * (_GLF_IDENTITY(0.0, (0.0) + 0.0))), (float(_GLF_FUZZED(14.59))) - 0.0))) / 1.0)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(false)))))) - abs(0.0))) * 1.0), injectionSwitch.y)) : _GLF_FUZZED(length(smoothstep(_GLF_IDENTITY(-8080.2148, (false ? _GLF_FUZZED(-4.9) : -8080.2148)), 7.4, vec4(-712.265, 7.1, 8.6, 8.2)))), mix(float(_GLF_FUZZED(-14.49)), float(_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7.1), _GLF_FUZZED(-4085.0403)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y), _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_FUZZED(14.59)), (float(_GLF_FUZZED(14.59))) + 0.0), (float(_GLF_FUZZED(14.59))) - 0.0), bool(false)), max(mix(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7.1), _GLF_FUZZED(-4085.0403)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false)))))).y), _GLF_IDENTITY(float(_GLF_FUZZED(14.59)), (float(_GLF_FUZZED(14.59))) - 0.0), bool(false)), _GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7.1), _GLF_FUZZED(-4085.0403)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y), _GLF_IDENTITY(float(_GLF_FUZZED(14.59)), (float(_GLF_FUZZED(14.59))) - 0.0), bool(false)), max(mix(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7.1), _GLF_FUZZED(-4085.0403)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y), (true ? float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7.1), _GLF_FUZZED(-4085.0403)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y) : _GLF_FUZZED(1811.5878))), _GLF_IDENTITY(float(_GLF_FUZZED(14.59)), (float(_GLF_FUZZED(14.59))) - 0.0), bool(false)), mix(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7.1), _GLF_FUZZED(-4085.0403)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(44.87)), bool(false))) < injectionSwitch.y))))).y), _GLF_IDENTITY(float(_GLF_FUZZED(14.59)), _GLF_IDENTITY((float(_GLF_FUZZED(14.59))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(95.69) : _GLF_IDENTITY((float(_GLF_FUZZED(14.59))), ((float(_GLF_FUZZED(14.59)))) - 0.0))) - 0.0), bool(false))))))), max(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7.1), _GLF_FUZZED(-4085.0403)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y), _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_FUZZED(14.59)), (float(_GLF_FUZZED(14.59))) + 0.0), (float(_GLF_FUZZED(14.59))) - 0.0), bool(false)), max(mix(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7.1), _GLF_FUZZED(-4085.0403)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false)))))).y), _GLF_IDENTITY(float(_GLF_FUZZED(14.59)), (float(_GLF_FUZZED(14.59))) - 0.0), bool(false)), _GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7.1), _GLF_FUZZED(-4085.0403)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y), _GLF_IDENTITY(float(_GLF_FUZZED(14.59)), (float(_GLF_FUZZED(14.59))) - 0.0), bool(false)), max(mix(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7.1), _GLF_FUZZED(-4085.0403)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y), (true ? float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7.1), _GLF_FUZZED(-4085.0403)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y) : _GLF_FUZZED(1811.5878))), _GLF_IDENTITY(float(_GLF_FUZZED(14.59)), (float(_GLF_FUZZED(14.59))) - 0.0), bool(false)), mix(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7.1), _GLF_FUZZED(-4085.0403)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(44.87)), bool(false))) < injectionSwitch.y))))).y), _GLF_IDENTITY(float(_GLF_FUZZED(14.59)), _GLF_IDENTITY((float(_GLF_FUZZED(14.59))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(95.69) : _GLF_IDENTITY((float(_GLF_FUZZED(14.59))), ((float(_GLF_FUZZED(14.59)))) - 0.0))) - 0.0), bool(false))))))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7.1), _GLF_FUZZED(-4085.0403)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y), _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_FUZZED(14.59)), (float(_GLF_FUZZED(14.59))) + 0.0), (float(_GLF_FUZZED(14.59))) - 0.0), bool(false)), max(mix(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7.1), _GLF_FUZZED(-4085.0403)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false)))))).y), _GLF_IDENTITY(float(_GLF_FUZZED(14.59)), (float(_GLF_FUZZED(14.59))) - 0.0), bool(false)), _GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7.1), _GLF_FUZZED(-4085.0403)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y), _GLF_IDENTITY(float(_GLF_FUZZED(14.59)), (float(_GLF_FUZZED(14.59))) - 0.0), bool(false)), max(mix(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7.1), _GLF_FUZZED(-4085.0403)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y), (true ? float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7.1), _GLF_FUZZED(-4085.0403)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y) : _GLF_FUZZED(1811.5878))), _GLF_IDENTITY(float(_GLF_FUZZED(14.59)), (float(_GLF_FUZZED(14.59))) - 0.0), bool(false)), mix(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7.1), _GLF_FUZZED(-4085.0403)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(44.87)), bool(false))) < injectionSwitch.y))))).y), _GLF_IDENTITY(float(_GLF_FUZZED(14.59)), _GLF_IDENTITY((float(_GLF_FUZZED(14.59))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(95.69) : _GLF_IDENTITY((float(_GLF_FUZZED(14.59))), ((float(_GLF_FUZZED(14.59)))) - 0.0))) - 0.0), bool(false))))))))), injectionSwitch.y)) : _GLF_FUZZED(length(smoothstep(-8080.2148, 7.4, _GLF_IDENTITY(vec4(-712.265, 7.1, 8.6, 8.2), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(-712.265, 7.1, 8.6, 8.2)))))), 1.0 * (true ? _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(515.521)), float(injectionSwitch.y), bool(true))), mix(float(_GLF_FUZZED((true ? 672.230 : -3826.0894))), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-43.00 - -17.43)), _GLF_FUZZED(2.0)), vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), bvec2(true, true))).y, injectionSwitch.y))), float(_GLF_FUZZED((738.323))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(float(_GLF_FUZZED(14.59)), (float(_GLF_FUZZED(14.59))) - 0.0), bool(false))), injectionSwitch.y)) : _GLF_FUZZED(_GLF_IDENTITY(length(smoothstep(-8080.2148, 7.4, vec4(-712.265, 7.1, 8.6, 8.2))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(length(smoothstep(-8080.2148, 7.4, vec4(-712.265, 7.1, 8.6, 8.2))), clamp(length(smoothstep(-8080.2148, 7.4, vec4(-712.265, 7.1, 8.6, 8.2))), _GLF_IDENTITY(length(smoothstep(-8080.2148, 7.4, vec4(-712.265, 7.1, 8.6, 8.2))), (length(smoothstep(-8080.2148, 7.4, vec4(-712.265, 7.1, 8.6, 8.2)))) - 0.0), length(smoothstep(-8080.2148, 7.4, vec4(-712.265, 7.1, 8.6, 8.2))))) : _GLF_FUZZED(-748.328))))))), bool(true)))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), ~ (~ (_GLF_IDENTITY((subgroup_local_id), uint(uvec4((subgroup_local_id), 1u, 1u, 1u)))))) >> 0u), clamp(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), ~ (~ (_GLF_IDENTITY((subgroup_local_id), uint(uvec4((subgroup_local_id), 1u, _GLF_IDENTITY(1u, (1u) >> 0u), 1u)))))) >> 0u), _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), ~ (~ (_GLF_IDENTITY((subgroup_local_id), uint(uvec4((subgroup_local_id), 1u, 1u, 1u)))))) >> 0u), _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), ~ (~ (_GLF_IDENTITY((subgroup_local_id), uint(uvec4((subgroup_local_id), 1u, 1u, 1u)))))) >> 0u)))) | (subgroup_local_id)) + 1, (_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uint(subgroup_local_id + 1), 0u | (uint(subgroup_local_id + _GLF_IDENTITY(1, (1) ^ 0))))))) << 0u)) % subgroup_size, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uint(subgroup_local_id + 1), 0u | (uint(subgroup_local_id + _GLF_IDENTITY(1, (1) ^ 0))))))) << 0u), (true ? _GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(subgroup_local_id + 1), 0u | (uint(subgroup_local_id + _GLF_IDENTITY(1, (1) ^ 0)))), clamp(_GLF_IDENTITY(uint(subgroup_local_id + 1), 0u | (uint(subgroup_local_id + _GLF_IDENTITY(1, (1) ^ 0)))), _GLF_IDENTITY(uint(subgroup_local_id + 1), 0u | (uint(subgroup_local_id + _GLF_IDENTITY(1, (1) ^ 0)))), _GLF_IDENTITY(uint(subgroup_local_id + 1), 0u | (uint(subgroup_local_id + _GLF_IDENTITY(1, (1) ^ 0))))))))) << 0u) : _GLF_FUZZED(num_workgroup)))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uint(subgroup_local_id + 1), 0u | (uint(subgroup_local_id + _GLF_IDENTITY(1, (1) ^ 0))))))) << 0u), _GLF_IDENTITY((true ? _GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uint(subgroup_local_id + 1), 0u | (uint(subgroup_local_id + _GLF_IDENTITY(1, (1) ^ 0))))))) << 0u) : _GLF_FUZZED(num_workgroup)), (171977u & 0u) + (_GLF_IDENTITY((true ? _GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uint(subgroup_local_id + 1), 0u | (uint(subgroup_local_id + _GLF_IDENTITY(1, (1) ^ 0))))))) << 0u) : _GLF_FUZZED(num_workgroup)), ~ (~ ((true ? _GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uint(subgroup_local_id + 1), 0u | (uint(subgroup_local_id + _GLF_IDENTITY(1, (1) ^ 0))))))) << 0u) : _GLF_FUZZED(num_workgroup))))))))), 0u ^ ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uint(subgroup_local_id + 1), 0u | (uint(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) ^ 0), clamp(subgroup_local_id + _GLF_IDENTITY(1, (1) ^ 0), subgroup_local_id + _GLF_IDENTITY(1, (1) ^ 0), subgroup_local_id + _GLF_IDENTITY(1, (1) ^ 0))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uint(subgroup_local_id + 1), 0u | (uint(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) ^ 0), clamp(subgroup_local_id + _GLF_IDENTITY(1, (1) ^ 0), subgroup_local_id + _GLF_IDENTITY(1, (1) ^ 0), subgroup_local_id + _GLF_IDENTITY(1, (1) ^ 0))))))))), max((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uint(subgroup_local_id + 1), 0u | (uint(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) ^ 0), clamp(subgroup_local_id + _GLF_IDENTITY(1, (1) ^ 0), subgroup_local_id + _GLF_IDENTITY(1, (1) ^ 0), subgroup_local_id + _GLF_IDENTITY(1, (1) ^ 0))))))))), (_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uint(subgroup_local_id + 1), 0u | (uint(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) ^ 0), clamp(subgroup_local_id + _GLF_IDENTITY(1, (1) ^ 0), subgroup_local_id + _GLF_IDENTITY(1, (1) ^ 0), subgroup_local_id + _GLF_IDENTITY(1, (1) ^ 0)))))))))))) ^ (0u | 0u)) << 0u), (_GLF_IDENTITY(true ? _GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uint(subgroup_local_id + 1), 0u | (uint(subgroup_local_id + _GLF_IDENTITY(1, (1) ^ 0))))))) << 0u) : _GLF_FUZZED(num_workgroup), ~ (~ (true ? _GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uint(subgroup_local_id + 1), 0u | (uint(subgroup_local_id + _GLF_IDENTITY(1, (1) ^ 0))))))) << 0u) : _GLF_FUZZED(num_workgroup))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uint(subgroup_local_id + 1), 0u | (uint(subgroup_local_id + _GLF_IDENTITY(1, (1) ^ 0))))))) << 0u, ((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uint(subgroup_local_id + 1), 0u | (uint(subgroup_local_id + _GLF_IDENTITY(1, (1) ^ 0))))))) << 0u) | 0u)), (true ? _GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uint(subgroup_local_id + 1), 0u | (uint(subgroup_local_id + _GLF_IDENTITY(1, (1) ^ 0))))))) << 0u) : _GLF_FUZZED(num_workgroup)))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uint(subgroup_local_id + 1), 0u | (uint(subgroup_local_id + _GLF_IDENTITY(1, (1) ^ 0))))))) << 0u), (true ? _GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uint(subgroup_local_id + 1), 0u | (uint(subgroup_local_id + _GLF_IDENTITY(1, (1) ^ 0))))))) << 0u) : _GLF_FUZZED(num_workgroup)))))) % subgroup_size), max(~ ((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(subgroup_local_id + 1), 1u * (uint(subgroup_local_id + 1))), 0u | (uint(subgroup_local_id + _GLF_IDENTITY(1, (1) ^ 0)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(subgroup_local_id + _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (1))), 0u + (uint(subgroup_local_id + 1))), 0u | (uint(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), min(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), 0 | (_GLF_IDENTITY(1, (1) ^ 0))), _GLF_IDENTITY(1, (1) ^ 0)))))))))))) << 0u)) % subgroup_size), ~ ((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-8062) : _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-33795) : 1)))))), uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(subgroup_local_id + 1), max(uint(subgroup_local_id + 1), uint(subgroup_local_id + 1))), 0u | (uint(subgroup_local_id + _GLF_IDENTITY(1, (1) ^ 0))))))) << 0u)) % subgroup_size))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), (! ((false))) && true))) && _GLF_IDENTITY(true, (true) && true)) && true))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))))
        barrier();
       return;
      }
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 buf[_GLF_struct_replacement_2.virtual_gid] = _GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), (_GLF_IDENTITY(1, ~ _GLF_IDENTITY(_GLF_IDENTITY((~ (1)), 0 | (_GLF_IDENTITY((~ (1)), min((~ (1)), (~ (1)))))), (false ? _GLF_FUZZED(19418) : _GLF_IDENTITY((_GLF_IDENTITY(~ (1), ~ (~ (~ (1))))), 0 | (_GLF_IDENTITY((~ (1)), min((~ (1)), (_GLF_IDENTITY(~ (1), max(~ (1), ~ (1)))))))))))) - 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, true)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(uint(2), (false ? _GLF_FUZZED(workgroup_size) : uint(2))), 0u | (uint(2))), _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(4, int(ivec4(_GLF_IDENTITY(4, (4) >> int(_GLF_ZERO(0.0, injectionSwitch.x))), 1, 0, 0))), _GLF_IDENTITY((4) | (4), 0 + ((4) | (4))))))), 64, _GLF_IDENTITY(0, _GLF_IDENTITY(clamp(0, 0, 0), int(ivec4(_GLF_IDENTITY(clamp(0, 0, 0), _GLF_IDENTITY((clamp(0, 0, 0)) << 0, int(ivec4((_GLF_IDENTITY(clamp(0, 0, 0), int(ivec4(_GLF_IDENTITY(clamp(0, 0, 0), max(clamp(0, 0, 0), clamp(0, 0, 0))), (1 ^ 1), 0, (1 & 1))))) << 0, 1, 1, 0)))), 1, 0, 0)))));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   subgroupAll(false);
  }
 else
  {
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, 0 | (0)))));
   subgroupAll(true);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) / 1.0, min(_GLF_IDENTITY((injectionSwitch.y) / 1.0, max((injectionSwitch.y) / 1.0, (injectionSwitch.y) / 1.0)), _GLF_IDENTITY((injectionSwitch.y) / 1.0, max((injectionSwitch.y) / 1.0, _GLF_IDENTITY((injectionSwitch.y) / 1.0, clamp((injectionSwitch.y) / 1.0, (injectionSwitch.y) / 1.0, (injectionSwitch.y) / 1.0)))))))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))) || false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-12.82) : injectionSwitch.x)) > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, true, true, true))), (injectionSwitch.x < injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, _GLF_IDENTITY(false, ! (! (false))) || (true)) && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(749.081)), bool(false)), float(mat3(mix(float(injectionSwitch.x), float(_GLF_FUZZED(749.081)), bool(false)), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0)))) > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), true, true, true)))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), true, true, true)))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), true, true, true)))))))) && true))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(1.0, (1.0) + log(1.0))) * (injectionSwitch)).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, exp(0.0) * (injectionSwitch.y)), injectionSwitch.y)))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, exp(0.0) * (injectionSwitch.y)), injectionSwitch.y)))), false, false)))))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(false))
    barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
