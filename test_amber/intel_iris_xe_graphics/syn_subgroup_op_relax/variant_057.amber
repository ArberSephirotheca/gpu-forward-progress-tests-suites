#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool((false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bool((false))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool((false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((bool(bool((false)))), _GLF_IDENTITY(bool(bvec4((bool(bool((false)))), false, true, true)), _GLF_IDENTITY(bool(bvec2(bool(bvec4((bool(bool((false)))), false, true, true)), false)), ! (! (bool(bvec2(bool(bvec4((bool(bool((false)))), false, true, true)), false)))))))))))), ((_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool((false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((bool(bool((false)))), _GLF_IDENTITY(bool(bvec4((bool(bool((false)))), false, true, true)), _GLF_IDENTITY(bool(bvec2(bool(bvec4((bool(bool((false)))), false, true, true)), false)), ! (! (bool(bvec2(bool(bvec4((bool(bool((false)))), false, true, true)), false))))))))))))) || false), false || ((_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool((false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bool((false)))))))))))))))) || _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((false) || false, ! (! ((false) || false))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY((vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1])))) * abs(vec2(1.0, 1.0)), clamp((vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1])))) * abs(vec2(1.0, 1.0)), _GLF_IDENTITY((vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1])))) * abs(vec2(1.0, 1.0)), ((vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1])))) * abs(vec2(1.0, 1.0))) - vec2(0.0, 0.0)), (vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1])))) * abs(vec2(1.0, 1.0))))), min(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], min(_GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1])), (injectionSwitch)[1]))), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[_GLF_IDENTITY(1, (1) | (1))], (injectionSwitch)[1]))), max(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, exp(0.0), 1.0, 0.0, 0.0, abs(1.0), 1.0, 1.0)), mix(vec2(_GLF_FUZZED(-0.7), _GLF_FUZZED(-71.41)), vec2(_GLF_IDENTITY((vec2(mat3(injectionSwitch, exp(0.0), 1.0, 0.0, 0.0, abs(1.0), 1.0, 1.0)))[0], ((vec2(mat3(injectionSwitch, exp(0.0), 1.0, 0.0, 0.0, abs(1.0), 1.0, 1.0)))[0]) / 1.0), (vec2(mat3(injectionSwitch, exp(0.0), 1.0, 0.0, 0.0, abs(1.0), 1.0, 1.0)))[1]), bvec2(true, true)))))[1]))), vec2((injectionSwitch)[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_IDENTITY(true ? _GLF_IDENTITY(0, (0) / 1) : _GLF_FUZZED(99533), max(_GLF_IDENTITY(true ? 0 : _GLF_FUZZED(99533), (true ? 0 : _GLF_FUZZED(99533)) ^ 0), true ? 0 : _GLF_FUZZED(99533)))))) / 1)], _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))))))), vec2(_GLF_FUZZED(697.410), _GLF_FUZZED(-650.319)), bvec2(false, false))).y))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool((false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bool((false))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool((false))), _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((bool(bool((false)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((bool(bool((false)))), bool(_GLF_IDENTITY(bool((bool(bool((false))))), (bool((bool(bool((false)))))) && true))), false, true, true)), _GLF_IDENTITY(bool(bvec2(bool(bvec4((bool(bool((false)))), false, true, true)), false)), ! (! (bool(bvec2(bool(bvec4((bool(bool((false)))), false, true, true)), false)))))))))))), ((_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool((false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY(_GLF_IDENTITY((bool(bool((false)))), _GLF_IDENTITY(bool(bvec4((bool(bool((false)))), false, true, true)), _GLF_IDENTITY(bool(bvec2(bool(bvec4((bool(bool((false)))), false, true, true)), false)), ! (! (bool(bvec2(bool(bvec4((bool(bool((false)))), false, true, true)), false))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY((bool(bool((false)))), _GLF_IDENTITY(bool(bvec4((bool(bool((false)))), false, true, true)), _GLF_IDENTITY(bool(bvec2(bool(bvec4((bool(bool((false)))), false, true, true)), false)), ! (! (bool(bvec2(bool(bvec4((bool(bool((false)))), false, true, true)), false))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY((bool(bool((false)))), _GLF_IDENTITY(bool(bvec4((bool(bool((false)))), false, true, true)), _GLF_IDENTITY(bool(bvec2(bool(bvec4((bool(bool((false)))), false, true, true)), false)), ! (! (bool(bvec2(bool(bvec4((bool(bool((false)))), false, true, true)), false))))))), ! (! (_GLF_IDENTITY((bool(bool((false)))), _GLF_IDENTITY(bool(bvec4((bool(bool((false)))), false, true, true)), _GLF_IDENTITY(bool(bvec2(bool(bvec4((bool(bool((false)))), false, true, true)), false)), ! (! (bool(bvec2(bool(bvec4((bool(bool((false)))), false, true, true)), false)))))))))))))))))))) || false), false || ((_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool((false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bool((false)))))))))))))))) || _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((false) || false, ! (! ((false) || false))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY((vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1])))) * abs(vec2(1.0, 1.0)), clamp((vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1])))) * abs(vec2(1.0, 1.0)), _GLF_IDENTITY((vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1])))) * abs(vec2(1.0, 1.0)), ((vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1])))) * abs(vec2(1.0, 1.0))) - vec2(0.0, 0.0)), (vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1])))) * abs(vec2(1.0, 1.0))))), min(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], min(_GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1])), (injectionSwitch)[1]))), min(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], min(_GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1])), (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], min(_GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1])), (injectionSwitch)[1]))))), _GLF_IDENTITY(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[_GLF_IDENTITY(1, (1) | (1))], (injectionSwitch)[1]))), max(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, exp(0.0), 1.0, 0.0, 0.0, abs(1.0), 1.0, 1.0)), mix(vec2(_GLF_FUZZED(-0.7), _GLF_FUZZED(-71.41)), vec2(_GLF_IDENTITY((vec2(mat3(injectionSwitch, exp(0.0), 1.0, 0.0, 0.0, abs(1.0), 1.0, 1.0)))[0], ((vec2(mat3(injectionSwitch, exp(0.0), 1.0, 0.0, 0.0, abs(1.0), 1.0, 1.0)))[0]) / 1.0), (vec2(mat3(injectionSwitch, exp(0.0), 1.0, 0.0, 0.0, abs(1.0), 1.0, 1.0)))[1]), bvec2(true, true)))))[1]))), vec2((injectionSwitch)[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_IDENTITY(true ? _GLF_IDENTITY(0, (0) / 1) : _GLF_FUZZED(99533), max(_GLF_IDENTITY(true ? 0 : _GLF_FUZZED(99533), (true ? 0 : _GLF_FUZZED(99533)) ^ 0), true ? 0 : _GLF_FUZZED(99533)))))) / 1)], _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))))), (_GLF_IDENTITY(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[_GLF_IDENTITY(1, (1) | (1))], (injectionSwitch)[1]))), max(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, exp(0.0), 1.0, 0.0, 0.0, abs(1.0), 1.0, 1.0)), mix(vec2(_GLF_FUZZED(-0.7), _GLF_FUZZED(-71.41)), vec2(_GLF_IDENTITY((vec2(mat3(injectionSwitch, exp(0.0), 1.0, 0.0, 0.0, abs(1.0), 1.0, 1.0)))[0], ((vec2(mat3(injectionSwitch, exp(0.0), 1.0, 0.0, 0.0, abs(1.0), 1.0, 1.0)))[0]) / 1.0), (vec2(mat3(injectionSwitch, exp(0.0), 1.0, 0.0, 0.0, abs(1.0), 1.0, 1.0)))[1]), bvec2(true, true)))))[1]))), vec2((injectionSwitch)[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_IDENTITY(true ? _GLF_IDENTITY(0, (0) / 1) : _GLF_FUZZED(99533), max(_GLF_IDENTITY(true ? 0 : _GLF_FUZZED(99533), (true ? 0 : _GLF_FUZZED(99533)) ^ 0), true ? 0 : _GLF_FUZZED(99533)))))) / 1)], _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))))), max(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[_GLF_IDENTITY(1, (1) | (1))], (injectionSwitch)[1]))), max(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, exp(0.0), 1.0, 0.0, 0.0, abs(1.0), 1.0, 1.0)), mix(vec2(_GLF_FUZZED(-0.7), _GLF_FUZZED(-71.41)), vec2(_GLF_IDENTITY((vec2(mat3(injectionSwitch, exp(0.0), 1.0, 0.0, 0.0, abs(1.0), 1.0, 1.0)))[0], ((vec2(mat3(injectionSwitch, exp(0.0), 1.0, 0.0, 0.0, abs(1.0), 1.0, 1.0)))[0]) / 1.0), (vec2(mat3(injectionSwitch, exp(0.0), 1.0, 0.0, 0.0, abs(1.0), 1.0, 1.0)))[1]), bvec2(true, true)))))[1]))), vec2((injectionSwitch)[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_IDENTITY(true ? _GLF_IDENTITY(0, (0) / 1) : _GLF_FUZZED(99533), max(_GLF_IDENTITY(true ? 0 : _GLF_FUZZED(99533), (true ? 0 : _GLF_FUZZED(99533)) ^ 0), true ? 0 : _GLF_FUZZED(99533)))))) / 1)], _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))))), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[_GLF_IDENTITY(1, (1) | (1))], (injectionSwitch)[1]))), max(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, exp(0.0), 1.0, 0.0, 0.0, abs(1.0), 1.0, 1.0)), mix(vec2(_GLF_FUZZED(-0.7), _GLF_FUZZED(-71.41)), vec2(_GLF_IDENTITY((vec2(mat3(injectionSwitch, exp(0.0), 1.0, 0.0, 0.0, abs(1.0), 1.0, 1.0)))[0], ((vec2(mat3(injectionSwitch, exp(0.0), 1.0, 0.0, 0.0, abs(1.0), 1.0, 1.0)))[0]) / 1.0), (vec2(mat3(injectionSwitch, exp(0.0), 1.0, 0.0, 0.0, abs(1.0), 1.0, 1.0)))[1]), bvec2(true, true)))))[1]))), vec2((injectionSwitch)[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_IDENTITY(true ? _GLF_IDENTITY(0, (0) / 1) : _GLF_FUZZED(99533), max(_GLF_IDENTITY(true ? 0 : _GLF_FUZZED(99533), (true ? 0 : _GLF_FUZZED(99533)) ^ 0), true ? 0 : _GLF_FUZZED(99533)))))) / 1)], _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1])))))))) * vec2(1.0, 1.0)))), vec2(_GLF_FUZZED(697.410), _GLF_FUZZED(_GLF_IDENTITY(-650.319, float(vec2(-650.319, 1.0))))), bvec2(false, false))).y)))) || false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ((false)) || false)), true && (! ((false))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 uint subgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(16, int(_GLF_IDENTITY(ivec4(16, 1, 0, 0), (true ? ivec4(16, 1, 0, 0) : _GLF_FUZZED(ivec4(-65626, -85780, 78294, -84994)))))), (_GLF_IDENTITY(16, (16) | (16))) * (1 & 1));
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))), true, false)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), true && ((false))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (_GLF_IDENTITY(false, (false) && true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / round(length(normalize(vec2(1.0, 1.0)))))) * 1.0) > injectionSwitch.y)), ! (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), mix(vec2(_GLF_FUZZED(-350.307), (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_FUZZED(_GLF_IDENTITY(-295.504, float(_GLF_IDENTITY(mat2(-295.504, 1.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, log(1.0), 0.0, 1.0, 0.0, sqrt(0.0))), 1.0), (mat2(-295.504, 1.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(log(1.0), 0.0 + (_GLF_IDENTITY(log(1.0), float(mat4x3(log(1.0), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0))))), 0.0, 1.0, 0.0, _GLF_IDENTITY(sqrt(0.0), min(sqrt(0.0), sqrt(0.0))))), 1.0)) + mat2(0.0, 0.0, 0.0, 0.0)))))), float(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), min(~ (0), ~ (0)))))) | int(_GLF_ZERO(0.0, injectionSwitch.x)))]) - 0.0)))), bool(true))), _GLF_FUZZED(-9.0)), (vec2(_GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(0, (0 | 0) ^ (0))], mix(float(_GLF_FUZZED(_GLF_IDENTITY(-295.504, float(_GLF_IDENTITY(mat2(-295.504, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(7.2)), bool(false))), determinant(mat3(0.0, 0.0, 0.0, 1.0, log(1.0), 0.0, 1.0, 0.0, sqrt(0.0))), 1.0), (mat2(-295.504, 1.0, determinant(mat3(0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4(1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0)), float(_GLF_IDENTITY(mat4x3(float(mat4(1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0), mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4x3(float(mat4(1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)))))), _GLF_IDENTITY(log(1.0), 0.0 + _GLF_IDENTITY((_GLF_IDENTITY(log(1.0), float(mat4x3(log(1.0), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0)))), clamp((_GLF_IDENTITY(log(1.0), float(mat4x3(log(1.0), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0)))), (_GLF_IDENTITY(log(1.0), float(mat4x3(log(1.0), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0)))), _GLF_IDENTITY((_GLF_IDENTITY(log(1.0), float(mat4x3(log(1.0), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0)))), (true ? _GLF_IDENTITY((_GLF_IDENTITY(log(1.0), float(mat4x3(log(1.0), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0)))), (true ? (_GLF_IDENTITY(log(1.0), float(mat4x3(log(1.0), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0)))) : _GLF_FUZZED(627.971))) : _GLF_FUZZED(5.8)))))), 0.0, 1.0, 0.0, sqrt(0.0))), 1.0)) + mat2(0.0, 0.0, 0.0, 0.0)))))), float(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) - 0.0)))), bool(true))), _GLF_FUZZED(-9.0))) - vec2(0.0, 0.0)), bvec2(true, false))).x > injectionSwitch.y))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false, bool(bool(false))) || (_GLF_DEAD(false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bool(true)))))) && (false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)) * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || _GLF_IDENTITY(false, ! (! (false))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), false || (false || (false))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) >> (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), clamp(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u)))))) + _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)))
    barrier();
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, (true ? 1 : _GLF_IDENTITY(_GLF_FUZZED(97250), (true ? _GLF_IDENTITY(_GLF_FUZZED(97250), (_GLF_FUZZED(97250)) >> 0) : _GLF_FUZZED(53497)))))), min((_GLF_IDENTITY(1, (true ? 1 : _GLF_IDENTITY(_GLF_FUZZED(97250), (true ? _GLF_IDENTITY(_GLF_FUZZED(97250), (_GLF_FUZZED(97250)) >> 0) : _GLF_FUZZED(53497)))))), _GLF_IDENTITY((_GLF_IDENTITY(1, (true ? 1 : _GLF_IDENTITY(_GLF_FUZZED(97250), (true ? _GLF_IDENTITY(_GLF_FUZZED(97250), (_GLF_FUZZED(97250)) >> 0) : _GLF_FUZZED(53497)))))), max((_GLF_IDENTITY(1, (true ? 1 : _GLF_IDENTITY(_GLF_FUZZED(97250), (true ? _GLF_IDENTITY(_GLF_FUZZED(97250), (_GLF_FUZZED(97250)) >> 0) : _GLF_FUZZED(53497)))))), (_GLF_IDENTITY(1, (true ? 1 : _GLF_IDENTITY(_GLF_FUZZED(97250), (true ? _GLF_IDENTITY(_GLF_FUZZED(97250), (_GLF_FUZZED(97250)) >> 0) : _GLF_FUZZED(53497)))))))))) / 1)) ^ _GLF_IDENTITY(0, (0) - 0), _GLF_IDENTITY((false ? _GLF_FUZZED(82792) : (_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY((_GLF_IDENTITY(true ? 1 : _GLF_FUZZED(97250), (true ? 1 : _GLF_FUZZED(97250)) | (true ? 1 : _GLF_FUZZED(97250)))), (false ? _GLF_FUZZED(-27142) : (_GLF_IDENTITY(true ? 1 : _GLF_FUZZED(97250), (true ? 1 : _GLF_FUZZED(_GLF_IDENTITY(97250, (97250) | 0))) | (true ? 1 : _GLF_FUZZED(97250)))))))) / 1)) ^ 0), max((false ? _GLF_FUZZED(82792) : (_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), (_GLF_IDENTITY(true ? 1 : _GLF_FUZZED(97250), (true ? 1 : _GLF_FUZZED(97250)) | (true ? 1 : _GLF_FUZZED(97250)))))) / 1, (false ? _GLF_FUZZED(-21900) : (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), (_GLF_IDENTITY(true ? _GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) - 0) : _GLF_FUZZED(97250), (true ? 1 : _GLF_FUZZED(97250)) | (true ? 1 : _GLF_FUZZED(97250)))))) / 1)))) ^ 0), (false ? _GLF_FUZZED(82792) : (_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) / 1), _GLF_IDENTITY(1, 0 ^ (1)))), (1) >> 0), (_GLF_IDENTITY(true ? 1 : _GLF_FUZZED(_GLF_IDENTITY(97250, int(ivec4(_GLF_IDENTITY(97250, clamp(97250, 97250, 97250)), (0 | 0), (1 ^ 1), 1)))), (true ? _GLF_IDENTITY(1, min(1, 1)) : _GLF_FUZZED(97250)) | _GLF_IDENTITY((true ? 1 : _GLF_FUZZED(97250)), 0 | ((true ? 1 : _GLF_FUZZED(_GLF_IDENTITY(97250, (97250) | (_GLF_IDENTITY(97250, clamp(97250, 97250, 97250)))))))))))) / 1)) ^ _GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, _GLF_IDENTITY(~ (~ (0)), (~ (~ (0))) >> _GLF_IDENTITY(0, (0) - 0))))))))), (false ? _GLF_FUZZED(93687) : _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, (true ? 1 : _GLF_IDENTITY(_GLF_FUZZED(97250), (true ? _GLF_IDENTITY(_GLF_FUZZED(97250), (_GLF_FUZZED(97250)) >> 0) : _GLF_FUZZED(53497)))))), min((_GLF_IDENTITY(1, (true ? 1 : _GLF_IDENTITY(_GLF_FUZZED(97250), (true ? _GLF_IDENTITY(_GLF_FUZZED(97250), (_GLF_FUZZED(97250)) >> 0) : _GLF_FUZZED(53497)))))), _GLF_IDENTITY((_GLF_IDENTITY(1, (true ? 1 : _GLF_IDENTITY(_GLF_FUZZED(97250), (true ? _GLF_IDENTITY(_GLF_FUZZED(97250), (_GLF_FUZZED(97250)) >> 0) : _GLF_FUZZED(53497)))))), max((_GLF_IDENTITY(1, (true ? 1 : _GLF_IDENTITY(_GLF_FUZZED(97250), (true ? _GLF_IDENTITY(_GLF_FUZZED(97250), (_GLF_FUZZED(97250)) >> 0) : _GLF_FUZZED(53497)))))), (_GLF_IDENTITY(1, (true ? 1 : _GLF_IDENTITY(_GLF_FUZZED(97250), (true ? _GLF_IDENTITY(_GLF_FUZZED(97250), (_GLF_FUZZED(97250)) >> 0) : _GLF_FUZZED(53497)))))))))) / 1)) ^ _GLF_IDENTITY(0, (0) - 0), _GLF_IDENTITY((false ? _GLF_FUZZED(82792) : (_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY((_GLF_IDENTITY(true ? 1 : _GLF_FUZZED(97250), (true ? 1 : _GLF_FUZZED(97250)) | (true ? 1 : _GLF_FUZZED(97250)))), (false ? _GLF_FUZZED(-27142) : (_GLF_IDENTITY(true ? 1 : _GLF_FUZZED(97250), (true ? 1 : _GLF_FUZZED(_GLF_IDENTITY(97250, (97250) | 0))) | (true ? 1 : _GLF_FUZZED(97250)))))))) / 1)) ^ 0), max((false ? _GLF_FUZZED(82792) : (_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), (_GLF_IDENTITY(true ? 1 : _GLF_FUZZED(97250), (true ? 1 : _GLF_FUZZED(97250)) | (true ? 1 : _GLF_FUZZED(97250)))))) / 1, (false ? _GLF_FUZZED(-21900) : (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), (_GLF_IDENTITY(true ? _GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) - 0) : _GLF_FUZZED(97250), (true ? 1 : _GLF_FUZZED(97250)) | (true ? 1 : _GLF_FUZZED(97250)))))) / 1)))) ^ 0), (false ? _GLF_FUZZED(82792) : (_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) / 1), _GLF_IDENTITY(1, 0 ^ (1)))), (1) >> 0), (_GLF_IDENTITY(true ? 1 : _GLF_FUZZED(_GLF_IDENTITY(97250, int(ivec4(_GLF_IDENTITY(97250, clamp(97250, 97250, 97250)), (0 | 0), (1 ^ 1), 1)))), (true ? _GLF_IDENTITY(1, min(1, 1)) : _GLF_FUZZED(97250)) | _GLF_IDENTITY((true ? 1 : _GLF_FUZZED(97250)), 0 | ((true ? 1 : _GLF_FUZZED(_GLF_IDENTITY(97250, (97250) | (_GLF_IDENTITY(97250, clamp(97250, 97250, 97250)))))))))))) / 1)) ^ _GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, _GLF_IDENTITY(~ (~ (0)), (~ (~ (0))) >> _GLF_IDENTITY(0, (0) - 0))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, (true ? 1 : _GLF_IDENTITY(_GLF_FUZZED(97250), (true ? _GLF_IDENTITY(_GLF_FUZZED(97250), (_GLF_FUZZED(97250)) >> 0) : _GLF_FUZZED(53497)))))), min((_GLF_IDENTITY(1, (true ? 1 : _GLF_IDENTITY(_GLF_FUZZED(97250), (true ? _GLF_IDENTITY(_GLF_FUZZED(97250), (_GLF_FUZZED(97250)) >> 0) : _GLF_FUZZED(53497)))))), _GLF_IDENTITY((_GLF_IDENTITY(1, (true ? 1 : _GLF_IDENTITY(_GLF_FUZZED(97250), (true ? _GLF_IDENTITY(_GLF_FUZZED(97250), (_GLF_FUZZED(97250)) >> 0) : _GLF_FUZZED(53497)))))), max((_GLF_IDENTITY(1, (true ? 1 : _GLF_IDENTITY(_GLF_FUZZED(97250), (true ? _GLF_IDENTITY(_GLF_FUZZED(97250), (_GLF_FUZZED(97250)) >> 0) : _GLF_FUZZED(53497)))))), (_GLF_IDENTITY(1, (true ? 1 : _GLF_IDENTITY(_GLF_FUZZED(97250), (true ? _GLF_IDENTITY(_GLF_FUZZED(97250), (_GLF_FUZZED(97250)) >> 0) : _GLF_FUZZED(53497)))))))))) / 1)) ^ _GLF_IDENTITY(0, (0) - 0), _GLF_IDENTITY((false ? _GLF_FUZZED(82792) : (_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY((_GLF_IDENTITY(true ? 1 : _GLF_FUZZED(97250), (true ? 1 : _GLF_FUZZED(97250)) | (true ? 1 : _GLF_FUZZED(97250)))), (false ? _GLF_FUZZED(-27142) : (_GLF_IDENTITY(true ? 1 : _GLF_FUZZED(97250), (true ? 1 : _GLF_FUZZED(_GLF_IDENTITY(97250, (97250) | 0))) | (true ? 1 : _GLF_FUZZED(97250)))))))) / 1)) ^ 0), max((false ? _GLF_FUZZED(82792) : (_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), (_GLF_IDENTITY(true ? 1 : _GLF_FUZZED(97250), (true ? 1 : _GLF_FUZZED(97250)) | (true ? 1 : _GLF_FUZZED(97250)))))) / 1, (false ? _GLF_FUZZED(-21900) : (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), (_GLF_IDENTITY(true ? _GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) - 0) : _GLF_FUZZED(97250), (true ? 1 : _GLF_FUZZED(97250)) | (true ? 1 : _GLF_FUZZED(97250)))))) / 1)))) ^ 0), (false ? _GLF_FUZZED(82792) : (_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) / 1), _GLF_IDENTITY(1, 0 ^ (1)))), (1) >> 0), (_GLF_IDENTITY(true ? 1 : _GLF_FUZZED(_GLF_IDENTITY(97250, int(ivec4(_GLF_IDENTITY(97250, clamp(97250, 97250, 97250)), (0 | 0), (1 ^ 1), 1)))), (true ? _GLF_IDENTITY(1, min(1, 1)) : _GLF_FUZZED(97250)) | _GLF_IDENTITY((true ? 1 : _GLF_FUZZED(97250)), 0 | ((true ? 1 : _GLF_FUZZED(_GLF_IDENTITY(97250, (97250) | (_GLF_IDENTITY(97250, clamp(97250, 97250, 97250)))))))))))) / 1)) ^ _GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, _GLF_IDENTITY(~ (~ (0)), (~ (~ (0))) >> _GLF_IDENTITY(0, (0) - 0)))))))))) | (_GLF_IDENTITY((_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, (true ? 1 : _GLF_IDENTITY(_GLF_FUZZED(97250), (true ? _GLF_IDENTITY(_GLF_FUZZED(97250), (_GLF_FUZZED(97250)) >> 0) : _GLF_FUZZED(53497)))))), min((_GLF_IDENTITY(1, (true ? 1 : _GLF_IDENTITY(_GLF_FUZZED(97250), (true ? _GLF_IDENTITY(_GLF_FUZZED(97250), (_GLF_FUZZED(97250)) >> 0) : _GLF_FUZZED(53497)))))), _GLF_IDENTITY((_GLF_IDENTITY(1, (true ? 1 : _GLF_IDENTITY(_GLF_FUZZED(97250), (true ? _GLF_IDENTITY(_GLF_FUZZED(97250), (_GLF_FUZZED(97250)) >> 0) : _GLF_FUZZED(53497)))))), max((_GLF_IDENTITY(1, (true ? 1 : _GLF_IDENTITY(_GLF_FUZZED(97250), (true ? _GLF_IDENTITY(_GLF_FUZZED(97250), (_GLF_FUZZED(97250)) >> 0) : _GLF_FUZZED(53497)))))), (_GLF_IDENTITY(1, (true ? 1 : _GLF_IDENTITY(_GLF_FUZZED(97250), (true ? _GLF_IDENTITY(_GLF_FUZZED(97250), (_GLF_FUZZED(97250)) >> 0) : _GLF_FUZZED(53497)))))))))) / 1)) ^ _GLF_IDENTITY(0, (0) - 0), _GLF_IDENTITY((false ? _GLF_FUZZED(82792) : (_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY((_GLF_IDENTITY(true ? 1 : _GLF_FUZZED(97250), (true ? 1 : _GLF_FUZZED(97250)) | (true ? 1 : _GLF_FUZZED(97250)))), (false ? _GLF_FUZZED(-27142) : (_GLF_IDENTITY(true ? 1 : _GLF_FUZZED(97250), (true ? 1 : _GLF_FUZZED(_GLF_IDENTITY(97250, (97250) | 0))) | (true ? 1 : _GLF_FUZZED(97250)))))))) / 1)) ^ 0), max((false ? _GLF_FUZZED(82792) : (_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), (_GLF_IDENTITY(true ? 1 : _GLF_FUZZED(97250), (true ? 1 : _GLF_FUZZED(97250)) | (true ? 1 : _GLF_FUZZED(97250)))))) / 1, (false ? _GLF_FUZZED(-21900) : (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), (_GLF_IDENTITY(true ? _GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) - 0) : _GLF_FUZZED(97250), (true ? 1 : _GLF_FUZZED(97250)) | (true ? 1 : _GLF_FUZZED(97250)))))) / 1)))) ^ 0), (false ? _GLF_FUZZED(82792) : (_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) / 1), _GLF_IDENTITY(1, 0 ^ (1)))), (1) >> 0), (_GLF_IDENTITY(true ? 1 : _GLF_FUZZED(_GLF_IDENTITY(97250, int(ivec4(_GLF_IDENTITY(97250, clamp(97250, 97250, 97250)), (0 | 0), (1 ^ 1), 1)))), (true ? _GLF_IDENTITY(1, min(1, 1)) : _GLF_FUZZED(97250)) | _GLF_IDENTITY((true ? 1 : _GLF_FUZZED(97250)), 0 | ((true ? 1 : _GLF_FUZZED(_GLF_IDENTITY(97250, (97250) | (_GLF_IDENTITY(97250, clamp(97250, 97250, 97250)))))))))))) / 1)) ^ _GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, _GLF_IDENTITY(~ (~ (0)), (~ (~ (0))) >> _GLF_IDENTITY(0, (0) - 0))))))))))))))) % subgroup_size, ~ (~ ((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec3(true, true, true)))))))) ? 1 : _GLF_IDENTITY(_GLF_FUZZED(97250), (_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(97250), (_GLF_FUZZED(97250)) << int(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_FUZZED(97250)) >> 0) : _GLF_FUZZED(53497), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(97250), (_GLF_FUZZED(97250)) << int(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_FUZZED(97250)) >> 0) : _GLF_FUZZED(53497)) | 0)))))) / 1)) ^ 0, _GLF_IDENTITY((false ? _GLF_FUZZED(82792) : (_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) >> 0)) >> 0), _GLF_IDENTITY((_GLF_IDENTITY(true ? 1 : _GLF_FUZZED(97250), (_GLF_IDENTITY(true ? 1 : _GLF_FUZZED(97250), (false ? _GLF_FUZZED(-73468) : _GLF_IDENTITY(true ? 1 : _GLF_FUZZED(97250), int(_GLF_ZERO(0.0, injectionSwitch.x)) | (true ? 1 : _GLF_FUZZED(97250)))))) | (true ? 1 : _GLF_FUZZED(97250)))), (false ? _GLF_FUZZED(-27142) : (_GLF_IDENTITY(true ? 1 : _GLF_FUZZED(97250), (true ? 1 : _GLF_FUZZED(97250)) | (true ? 1 : _GLF_FUZZED(97250)))))))) / 1)) ^ 0), max((false ? _GLF_FUZZED(82792) : _GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec2(1, 1)))) >> 0), (_GLF_IDENTITY(true ? 1 : _GLF_FUZZED(97250), (true ? 1 : _GLF_FUZZED(97250)) | (true ? 1 : _GLF_FUZZED(97250)))))) / 1)), (_GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), (_GLF_IDENTITY(true ? 1 : _GLF_FUZZED(97250), (true ? 1 : _GLF_FUZZED(97250)) | (true ? 1 : _GLF_FUZZED(97250)))))) / 1)), ((_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), (_GLF_IDENTITY(true ? 1 : _GLF_FUZZED(97250), (true ? 1 : _GLF_FUZZED(97250)) | (true ? 1 : _GLF_FUZZED(97250)))))) / 1))) << 0)) / int(_GLF_ONE(1.0, injectionSwitch.y))) ^ _GLF_IDENTITY(0, _GLF_IDENTITY(0 | (0), (0 | (0)) * 1))), (false ? _GLF_FUZZED(82792) : _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) / 1), _GLF_IDENTITY(1, 0 ^ (1)))), (1) >> 0), (_GLF_IDENTITY(true ? 1 : _GLF_FUZZED(97250), (true ? _GLF_IDENTITY(1, min(1, 1)) : _GLF_FUZZED(97250)) | _GLF_IDENTITY((_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) ? 1 : _GLF_FUZZED(97250)), 0 | ((_GLF_IDENTITY(true, true && (true)) ? 1 : _GLF_FUZZED(97250)))))))) / 1)), int(_GLF_IDENTITY(int((_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) / 1), _GLF_IDENTITY(1, 0 ^ (1)))), (1) >> 0), (_GLF_IDENTITY(true ? 1 : _GLF_FUZZED(97250), (true ? _GLF_IDENTITY(1, min(1, 1)) : _GLF_FUZZED(97250)) | _GLF_IDENTITY((_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) ? 1 : _GLF_FUZZED(97250)), 0 | ((_GLF_IDENTITY(true, true && (true)) ? 1 : _GLF_FUZZED(97250)))))))) / 1))), 0 ^ (_GLF_IDENTITY(int((_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) / 1), _GLF_IDENTITY(1, 0 ^ (1)))), (1) >> 0), (_GLF_IDENTITY(true ? 1 : _GLF_FUZZED(97250), (true ? _GLF_IDENTITY(1, min(1, 1)) : _GLF_FUZZED(97250)) | _GLF_IDENTITY((_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) ? 1 : _GLF_FUZZED(97250)), 0 | ((_GLF_IDENTITY(true, true && (true)) ? 1 : _GLF_FUZZED(97250)))))))) / 1))), (int((_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) / 1), _GLF_IDENTITY(1, 0 ^ (1)))), (1) >> 0), (_GLF_IDENTITY(true ? 1 : _GLF_FUZZED(97250), (true ? _GLF_IDENTITY(1, min(1, 1)) : _GLF_FUZZED(97250)) | _GLF_IDENTITY((_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) ? 1 : _GLF_FUZZED(97250)), 0 | ((_GLF_IDENTITY(true, true && (true)) ? 1 : _GLF_FUZZED(97250)))))))) / 1)))) - 0))))), (_GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) / 1), _GLF_IDENTITY(1, 0 ^ (1)))), (1) >> 0), (_GLF_IDENTITY(_GLF_IDENTITY(true ? 1 : _GLF_FUZZED(97250), ~ (~ (true ? 1 : _GLF_FUZZED(97250)))), (true ? _GLF_IDENTITY(1, min(1, 1)) : _GLF_FUZZED(97250)) | _GLF_IDENTITY((_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) ? 1 : _GLF_FUZZED(97250)), 0 | ((_GLF_IDENTITY(true, true && (true)) ? 1 : _GLF_FUZZED(97250)))))))) / 1)), (false ? _GLF_FUZZED(-45507) : (_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) / 1), _GLF_IDENTITY(1, 0 ^ (1)))), (1) >> 0), int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) / 1), _GLF_IDENTITY(1, 0 ^ (1)))), (1) >> 0), 0, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))), (_GLF_IDENTITY(true ? 1 : _GLF_FUZZED(97250), (true ? _GLF_IDENTITY(1, min(1, 1)) : _GLF_FUZZED(97250)) | _GLF_IDENTITY((_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) ? 1 : _GLF_FUZZED(97250)), 0 | ((_GLF_IDENTITY(true, true && (true)) ? 1 : _GLF_FUZZED(97250)))))))) / 1))))) | ((_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) / 1), _GLF_IDENTITY(1, 0 ^ (1)))), (1) >> 0), (_GLF_IDENTITY(true ? 1 : _GLF_FUZZED(_GLF_IDENTITY(97250, min(97250, _GLF_IDENTITY(97250, (97250) ^ 0)))), (true ? _GLF_IDENTITY(1, min(1, 1)) : _GLF_FUZZED(97250)) | _GLF_IDENTITY((_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) ? 1 : _GLF_FUZZED(97250)), 0 | ((_GLF_IDENTITY(true, true && (true)) ? 1 : _GLF_FUZZED(97250)))))))) / 1)))) ^ _GLF_IDENTITY(0, _GLF_IDENTITY(0 ^ (_GLF_IDENTITY(0, _GLF_IDENTITY(~ (~ (0)), (~ (~ (0))) >> _GLF_IDENTITY(0, (0) - _GLF_IDENTITY(0, ~ (~ (0))))))), max(0 ^ (_GLF_IDENTITY(0, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (0)), (~ (~ (0))) >> _GLF_IDENTITY(0, (0) - 0)), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(~ (~ _GLF_IDENTITY((0), ((0)) << 0)), (~ (~ (0))) >> _GLF_IDENTITY(0, (0) - 0)), 0, 1), ~ (~ (ivec3(_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (0)), ~ (~ (~ (~ (0))))), (~ (~ (0))) >> _GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0), (0) - 0)), 0, 1)))))))), 0 ^ (_GLF_IDENTITY(0, _GLF_IDENTITY(~ (~ (0)), (~ (~ (0))) >> _GLF_IDENTITY(0, (0) - 0))))))))))))) % subgroup_size))));
 buf[virtual_gid] = 1;
 if(_GLF_DEAD(false))
  barrier();
 if(subgroup_local_id + _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) / 1))) < subgroup_size)
  {
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(2), (uint(2)) / 1u), 4, 64, 0);
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, true))))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, false))))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) + abs(vec2(0.0, 0.0))).x), 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0)))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) - 0.0) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-3026.0877, 13.78))))) - vec2(0.0, 0.0)).y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(_GLF_IDENTITY(false, (false) && true));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
      barrier();
     barrier();
    }
  }
 else
  {
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 0);
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(_GLF_IDENTITY(true, false || (true)));
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), ! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))) || false)), _GLF_IDENTITY(bool(bool((_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))))), ! (! (bool(_GLF_IDENTITY(bool((_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))), bool(bvec4(_GLF_IDENTITY(bool((_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))), bool(bvec4(bool((_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), false || ((false)))))))), false || (bool(bool(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), false || ((false))))))))))), false, false))), _GLF_IDENTITY(false, bool(bool(false))), false, _GLF_IDENTITY(true, (true) || false)))))))))), ((! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))) || false)), _GLF_IDENTITY(bool(bool((_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))))), ! (! (bool(_GLF_IDENTITY(bool((_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))), ((_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))) && true)), bool(bvec4(bool((_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))))), _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false))))), false, false))), false, false, true)))))))))) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
