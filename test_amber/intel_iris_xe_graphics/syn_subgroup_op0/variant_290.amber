#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   return;
  }
 uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(87.17) : _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), ((injectionSwitch.x)) / round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))) + 0.0)))), float(_GLF_FUZZED(-2.9)), bool(false)), max(mix(float(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(87.17) : _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)))), float(_GLF_FUZZED(-2.9)), bool(false)), _GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(false ? _GLF_FUZZED(87.17) : _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), (false ? _GLF_FUZZED(87.17) : _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)) - 0.0)))), float(_GLF_FUZZED(-2.9)), bool(false)), min(mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, determinant(mat3(0.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, 1.0, 0.0, 0.0)), abs(0.0), determinant(mat4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, log(1.0), 1.0, 0.0)), 1.0, 0.0, 0.0, 0.0), transpose(_GLF_IDENTITY(transpose(mat3(injectionSwitch, determinant(mat3(0.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, 1.0, 0.0, 0.0)), abs(0.0), determinant(mat4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, log(1.0), 1.0, 0.0)), 1.0, 0.0, 0.0, 0.0)), (transpose(mat3(injectionSwitch, determinant(mat3(0.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, 1.0, 0.0, 0.0)), abs(0.0), determinant(mat4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, log(1.0), 1.0, 0.0)), 1.0, 0.0, 0.0, 0.0))) * mat3(1.0)))))).x, (false ? _GLF_FUZZED(87.17) : _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)))), float(_GLF_FUZZED(-2.9)), bool(false)), mix(float(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(87.17) : _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)))), float(_GLF_FUZZED(-2.9)), bool(false))))))) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(87.17) : _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), ((injectionSwitch.x)) / round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))) + 0.0)))), float(_GLF_FUZZED(-2.9)), bool(false)), max(mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(87.17) : _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))), max(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(87.17) : _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))), _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(87.17) : _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)))))), float(_GLF_FUZZED(-2.9)), bool(false)), _GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(false ? _GLF_FUZZED(87.17) : _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), (false ? _GLF_FUZZED(87.17) : _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)) - 0.0)))), float(_GLF_FUZZED(-2.9)), bool(false)), min(mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, determinant(mat3(0.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, 1.0, 0.0, 0.0)), abs(0.0), determinant(mat4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, log(1.0), 1.0, 0.0)), 1.0, 0.0, 0.0, 0.0), transpose(_GLF_IDENTITY(transpose(mat3(injectionSwitch, determinant(mat3(0.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, 1.0, 0.0, 0.0)), abs(0.0), determinant(mat4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, log(_GLF_IDENTITY(1.0, max(1.0, 1.0))), 1.0, 0.0)), 1.0, 0.0, 0.0, 0.0)), (transpose(mat3(injectionSwitch, determinant(mat3(0.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, 1.0, 0.0, 0.0)), abs(0.0), determinant(mat4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, log(1.0), 1.0, 0.0)), 1.0, 0.0, 0.0, 0.0))) * mat3(1.0)))))).x, (false ? _GLF_FUZZED(87.17) : _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)))), float(_GLF_FUZZED(-2.9)), bool(false)), mix(float(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(87.17) : _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)))), float(_GLF_FUZZED(-2.9)), bool(false))))))) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) && true) && (false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)).x;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), bool(bvec4(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (! (! (_GLF_IDENTITY(false, (false) && true)))))))) && true)), true, false, _GLF_IDENTITY(true, ! (! (true)))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), bool(bvec4(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (! (! (_GLF_IDENTITY(false, (false) && true)))))))) && true)), true, false, _GLF_IDENTITY(true, ! (! (true)))))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), bool(bvec4(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (! (! (_GLF_IDENTITY(false, (false) && true)))))))) && true)), true, false, _GLF_IDENTITY(true, ! (! (true))))))))) || false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), bool(bvec4(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (! (! (_GLF_IDENTITY(false, (false) && true)))))))) && true)), true, false, _GLF_IDENTITY(true, ! (! (true)))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), bool(bvec4(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (! (! (_GLF_IDENTITY(false, (false) && true)))))))) && true)), true, false, _GLF_IDENTITY(true, ! (! (true)))))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), bool(bvec4(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (! (! (_GLF_IDENTITY(false, (false) && true)))))))) && true)), true, false, _GLF_IDENTITY(true, ! (! (true))))))))) || false))), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), bool(bvec4(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (! (! (_GLF_IDENTITY(false, (false) && true)))))))) && true)), true, false, _GLF_IDENTITY(true, ! (! (true)))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), bool(bvec4(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (! (! (_GLF_IDENTITY(false, (false) && true)))))))) && true)), true, false, _GLF_IDENTITY(true, ! (! (true)))))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), bool(bvec4(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (! (! (_GLF_IDENTITY(false, (false) && true)))))))) && true)), true, false, _GLF_IDENTITY(true, ! (! (true))))))))) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), bool(bvec4(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (! (! (_GLF_IDENTITY(false, (false) && true)))))))) && true)), true, false, _GLF_IDENTITY(true, ! (! (true)))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), bool(bvec4(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (! (! (_GLF_IDENTITY(false, (false) && true)))))))) && true)), true, false, _GLF_IDENTITY(true, ! (! (true)))))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), bool(bvec4(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (! (! (_GLF_IDENTITY(false, (false) && true)))))))) && true)), true, false, _GLF_IDENTITY(true, ! (! (true))))))))) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, false || (true)))), bool(bvec4(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bool(_GLF_IDENTITY(! (true), false || (! (true)))))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bool(_GLF_IDENTITY(! (true), false || (! (true)))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bool(_GLF_IDENTITY(! (true), false || (! (true)))))))))), bool(bvec4((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bool(_GLF_IDENTITY(! (true), false || (! (true)))))))))), false, false, true)))) && true)))))))))) && true)), true, false, _GLF_IDENTITY(true, ! (! (true)))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), bool(bvec4(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! _GLF_IDENTITY((! (! (_GLF_IDENTITY(false, (false) && true)))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((! (! (_GLF_IDENTITY(false, (false) && true)))), _GLF_IDENTITY(bool(bvec4((! (! (_GLF_IDENTITY(false, (false) && true)))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(bool(bvec4((! (! (_GLF_IDENTITY(false, (false) && true)))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false, true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(bool(bvec3(_GLF_IDENTITY((! (! (_GLF_IDENTITY(false, (false) && true)))), _GLF_IDENTITY(bool(bvec4((! (! (_GLF_IDENTITY(false, (false) && true)))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(bool(bvec4((! (! (_GLF_IDENTITY(false, (false) && true)))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false, true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false, true)))))))) && true)), true, false, _GLF_IDENTITY(true, ! (! (true)))))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), bool(bvec4(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) && true))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) && true))), (! (! (_GLF_IDENTITY(false, (false) && true)))) || false)), ! (! (bool(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) && true))), (! (! (_GLF_IDENTITY(false, (false) && true)))) || false)))))))))))) && true)), true, false, _GLF_IDENTITY(true, ! (! (true))))))))) || false)))))))))) || false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, 0u ^ _GLF_IDENTITY((workgroup_id), clamp((workgroup_id), _GLF_IDENTITY((workgroup_id), ((workgroup_id)) ^ (137930u & 0u)), _GLF_IDENTITY((workgroup_id), clamp((_GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id))), (workgroup_id), _GLF_IDENTITY((workgroup_id), 0u ^ ((workgroup_id)))))))), (_GLF_IDENTITY(workgroup_id, 0u ^ _GLF_IDENTITY((workgroup_id), clamp((workgroup_id), (workgroup_id), _GLF_IDENTITY((workgroup_id), _GLF_IDENTITY(clamp((workgroup_id), (workgroup_id), _GLF_IDENTITY((workgroup_id), 0u ^ ((_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id)))) / ((1u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), min(uint(4u), uint(4u))))) >> _GLF_IDENTITY(uint(4u), uint(4u)))))))), _GLF_IDENTITY((clamp(_GLF_IDENTITY((workgroup_id), min((workgroup_id), (workgroup_id))), (workgroup_id), _GLF_IDENTITY((workgroup_id), 0u ^ ((workgroup_id))))), ((clamp(_GLF_IDENTITY((workgroup_id), min((workgroup_id), (workgroup_id))), (workgroup_id), _GLF_IDENTITY((workgroup_id), 0u ^ ((workgroup_id)))))) >> 0u) - 0u)))))) / 1u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, 0u ^ _GLF_IDENTITY((workgroup_id), clamp((workgroup_id), _GLF_IDENTITY((workgroup_id), ((workgroup_id)) ^ (137930u & 0u)), _GLF_IDENTITY((workgroup_id), clamp((_GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id))), (workgroup_id), _GLF_IDENTITY((workgroup_id), 0u ^ ((workgroup_id)))))))), (_GLF_IDENTITY(workgroup_id, 0u ^ _GLF_IDENTITY((workgroup_id), clamp((workgroup_id), (workgroup_id), _GLF_IDENTITY((workgroup_id), _GLF_IDENTITY(clamp((workgroup_id), (workgroup_id), _GLF_IDENTITY((workgroup_id), 0u ^ ((_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id)))) / ((1u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), min(uint(4u), uint(4u))))) >> _GLF_IDENTITY(uint(4u), uint(4u)))))))), _GLF_IDENTITY((clamp(_GLF_IDENTITY((workgroup_id), min((workgroup_id), (workgroup_id))), (workgroup_id), _GLF_IDENTITY((workgroup_id), 0u ^ ((workgroup_id))))), ((clamp(_GLF_IDENTITY((workgroup_id), min((workgroup_id), (workgroup_id))), (workgroup_id), _GLF_IDENTITY((workgroup_id), 0u ^ ((workgroup_id)))))) >> 0u) - 0u)))))) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, 0u ^ _GLF_IDENTITY((workgroup_id), clamp((workgroup_id), _GLF_IDENTITY((workgroup_id), ((workgroup_id)) ^ (137930u & 0u)), _GLF_IDENTITY((workgroup_id), clamp((_GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id))), (workgroup_id), _GLF_IDENTITY((workgroup_id), 0u ^ ((workgroup_id)))))))), (_GLF_IDENTITY(workgroup_id, 0u ^ _GLF_IDENTITY((workgroup_id), clamp((workgroup_id), (workgroup_id), _GLF_IDENTITY((workgroup_id), _GLF_IDENTITY(clamp((workgroup_id), (workgroup_id), _GLF_IDENTITY((workgroup_id), 0u ^ ((_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id)))) / ((1u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), min(uint(4u), uint(4u))))) >> _GLF_IDENTITY(uint(4u), uint(4u)))))))), _GLF_IDENTITY((clamp(_GLF_IDENTITY((workgroup_id), min((workgroup_id), (workgroup_id))), (workgroup_id), _GLF_IDENTITY((workgroup_id), 0u ^ ((workgroup_id))))), ((clamp(_GLF_IDENTITY((workgroup_id), min((workgroup_id), (workgroup_id))), (workgroup_id), _GLF_IDENTITY((workgroup_id), 0u ^ ((workgroup_id)))))) >> 0u) - 0u)))))) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, 0u ^ _GLF_IDENTITY((workgroup_id), clamp((workgroup_id), _GLF_IDENTITY((workgroup_id), ((workgroup_id)) ^ (137930u & 0u)), _GLF_IDENTITY((workgroup_id), clamp((_GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id))), (workgroup_id), _GLF_IDENTITY((workgroup_id), 0u ^ ((workgroup_id)))))))), (_GLF_IDENTITY(workgroup_id, 0u ^ _GLF_IDENTITY((workgroup_id), clamp((workgroup_id), (workgroup_id), _GLF_IDENTITY((workgroup_id), _GLF_IDENTITY(clamp((workgroup_id), (workgroup_id), _GLF_IDENTITY((workgroup_id), 0u ^ ((_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id)))) / ((1u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), min(uint(4u), uint(4u))))) >> _GLF_IDENTITY(uint(4u), uint(4u)))))))), _GLF_IDENTITY((clamp(_GLF_IDENTITY((workgroup_id), min((workgroup_id), (workgroup_id))), (workgroup_id), _GLF_IDENTITY((workgroup_id), 0u ^ ((workgroup_id))))), ((clamp(_GLF_IDENTITY((workgroup_id), min((workgroup_id), (workgroup_id))), (workgroup_id), _GLF_IDENTITY((workgroup_id), 0u ^ ((workgroup_id)))))) >> 0u) - 0u)))))) / 1u)));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))), (workgroup_base + subgroup_id * subgroup_size) >> (0u ^ 0u)) + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((true ? _GLF_IDENTITY(subgroup_id, 1u * _GLF_IDENTITY((subgroup_id), (_GLF_IDENTITY((subgroup_id), min((subgroup_id), _GLF_IDENTITY((subgroup_id), min((subgroup_id), (subgroup_id)))))) << (0u << _GLF_IDENTITY(uint(5u), uint(5u))))) : _GLF_FUZZED(subgroup_id)), (_GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : (true ? _GLF_IDENTITY(subgroup_id, 1u * (subgroup_id)) : _GLF_FUZZED(subgroup_id)), (false ? _GLF_FUZZED(num_workgroup) : (true ? _GLF_IDENTITY(subgroup_id, 1u * (subgroup_id)) : _GLF_FUZZED(subgroup_id))) << 0u)))) * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1), 1u * _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id))) << 0u) + 1), min((subgroup_local_id + 1), (subgroup_local_id + 1))), ((subgroup_local_id + 1)) >> 0u)), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (subgroup_local_id + 1))), ((subgroup_local_id + 1)) >> 0u))), min(~ ((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(min((subgroup_local_id + 1), (subgroup_local_id + 1)), clamp(min((subgroup_local_id + 1), (subgroup_local_id + 1)), min((subgroup_local_id + 1), (subgroup_local_id + 1)), _GLF_IDENTITY(min((subgroup_local_id + 1), (subgroup_local_id + 1)), max(min((subgroup_local_id + 1), (subgroup_local_id + 1)), min((subgroup_local_id + 1), (subgroup_local_id + 1))))))), ((subgroup_local_id + 1)) >> 0u))), _GLF_IDENTITY(~ ((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (subgroup_local_id + 1))), ((subgroup_local_id + 1)) >> 0u))), (~ ((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + _GLF_IDENTITY(1, 0 | (1))))), ((subgroup_local_id + 1)) >> 0u)))) >> 0u)))))) % subgroup_size), _GLF_IDENTITY(~ (~ _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, 0u | ((subgroup_local_id + 1) % subgroup_size)))), ((workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) - 0)))) % subgroup_size, 0u | ((subgroup_local_id + 1) % subgroup_size))))) | ((workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, 0u | ((subgroup_local_id + 1) % subgroup_size))))))), _GLF_IDENTITY((_GLF_IDENTITY(~ (~ (workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, 0u | ((subgroup_local_id + 1) % subgroup_size))))), (~ (~ (workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, 0u | ((subgroup_local_id + 1) % subgroup_size)))))) << 0u)) * _GLF_IDENTITY(1u, min(1u, 1u)), ((_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, 0u | ((subgroup_local_id + 1) % subgroup_size))), (workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, 0u | ((subgroup_local_id + 1) % subgroup_size)))) | (workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, 0u | ((subgroup_local_id + 1) % subgroup_size))))))), (~ (~ (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u) + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, 0u | ((subgroup_local_id + 1) % subgroup_size)))))) << 0u), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, 0u | ((subgroup_local_id + 1) % subgroup_size))))), (~ (~ (workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, 0u | ((subgroup_local_id + 1) % subgroup_size)))))) << 0u), uint(uvec2(_GLF_IDENTITY(~ (~ (workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, 0u | ((subgroup_local_id + 1) % subgroup_size))))), (~ (~ (workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, 0u | ((subgroup_local_id + 1) % subgroup_size)))))) << 0u), 0u)))) / 1u, ((_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_local_id + 1 : _GLF_FUZZED(174501u)))) % subgroup_size, 0u | ((subgroup_local_id + 1) % subgroup_size))))), (~ (~ (workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, 0u | ((subgroup_local_id + 1) % subgroup_size)))))) << 0u), uint(uvec2(_GLF_IDENTITY(~ (~ (workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, 0u | ((subgroup_local_id + 1) % subgroup_size))))), (~ (~ (workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, 0u | (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint((subgroup_local_id + 1) % subgroup_size), uint(uvec2(uint((subgroup_local_id + 1) % subgroup_size), 1u)))), uint(uvec2(uint(_GLF_IDENTITY(uint((subgroup_local_id + 1) % subgroup_size), uint(uvec2(uint((subgroup_local_id + 1) % subgroup_size), 1u)))), 1u)))))))))) << 0u), 0u)))) / 1u) - 0u))) * 1u) + 0u)));
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))))), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), ! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))), ! (_GLF_IDENTITY(! ((! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))), (! ((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))), true && (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), min(injectionSwitch.x, injectionSwitch.x)), float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), min(injectionSwitch.x, injectionSwitch.x)), 1.0, length(sin(0.0))))) > injectionSwitch.y))))))))))) || false)))), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(float(15708)) : injectionSwitch.x)), injectionSwitch.x)), injectionSwitch.x), (false ? _GLF_FUZZED(2.8) : min(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(4149.3295)), bool(false))), injectionSwitch.x)), injectionSwitch.x)))), injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 1.0, 1.0))))), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-17.64, -14.33)) : _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))).y))))), true, false)), bool(bvec4(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(vec4(injectionSwitch, 1.0, sin(0.0))), (vec2(vec4(injectionSwitch, 1.0, sin(0.0)))) + vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), min(vec2(vec4(injectionSwitch, 1.0, sin(0.0))), _GLF_IDENTITY(vec2(vec4(injectionSwitch, 1.0, sin(0.0))), min(vec2(vec4(injectionSwitch, 1.0, sin(0.0))), vec2(vec4(injectionSwitch, 1.0, sin(0.0)))))))).x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-14.34), _GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(vec2(-297.229, -756.328))))[_GLF_IDENTITY(1, (_GLF_IDENTITY(true, true && (true)) ? 1 : _GLF_FUZZED(54778)))]), vec2((_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)))[0], _GLF_FUZZED(57.97)), bvec2(true, false))).y), ! _GLF_IDENTITY((! _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(vec4(injectionSwitch, 1.0, sin(0.0))), (vec2(vec4(injectionSwitch, 1.0, sin(0.0)))) + vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(min(vec2(vec4(injectionSwitch, 1.0, sin(0.0))), _GLF_IDENTITY(vec2(vec4(injectionSwitch, 1.0, sin(0.0))), min(vec2(vec4(injectionSwitch, 1.0, sin(0.0))), vec2(vec4(injectionSwitch, 1.0, sin(0.0)))))), (_GLF_IDENTITY(min(vec2(vec4(injectionSwitch, 1.0, sin(0.0))), _GLF_IDENTITY(vec2(vec4(injectionSwitch, 1.0, sin(0.0))), min(vec2(vec4(injectionSwitch, 1.0, sin(0.0))), vec2(vec4(injectionSwitch, 1.0, sin(0.0)))))), min(_GLF_IDENTITY(min(vec2(vec4(injectionSwitch, 1.0, sin(0.0))), _GLF_IDENTITY(vec2(vec4(injectionSwitch, 1.0, sin(0.0))), min(vec2(vec4(injectionSwitch, 1.0, sin(0.0))), vec2(vec4(injectionSwitch, 1.0, sin(0.0)))))), (min(vec2(vec4(injectionSwitch, 1.0, sin(0.0))), _GLF_IDENTITY(vec2(vec4(injectionSwitch, 1.0, sin(0.0))), min(vec2(vec4(injectionSwitch, 1.0, sin(0.0))), vec2(vec4(injectionSwitch, 1.0, sin(0.0))))))) * mat2(1.0)), min(vec2(vec4(injectionSwitch, 1.0, sin(0.0))), _GLF_IDENTITY(vec2(vec4(injectionSwitch, 1.0, sin(0.0))), min(vec2(vec4(injectionSwitch, 1.0, sin(0.0))), vec2(vec4(injectionSwitch, 1.0, sin(0.0))))))))) / cos(vec2(0.0, 0.0))))).x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(-14.34), mix(float(_GLF_FUZZED(-922.861)), float(_GLF_FUZZED(-14.34)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (injectionSwitch)[1]), vec2((_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))) * (injectionSwitch)))[0], _GLF_FUZZED(57.97)), bvec2(true, false))).y)), ! (! (_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(vec4(injectionSwitch, 1.0, sin(0.0))), (vec2(vec4(injectionSwitch, 1.0, sin(0.0)))) + vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(min(vec2(vec4(injectionSwitch, 1.0, sin(0.0))), _GLF_IDENTITY(vec2(vec4(injectionSwitch, 1.0, sin(0.0))), min(vec2(vec4(injectionSwitch, 1.0, sin(0.0))), vec2(vec4(injectionSwitch, 1.0, sin(0.0)))))), (_GLF_IDENTITY(min(vec2(vec4(injectionSwitch, 1.0, sin(0.0))), _GLF_IDENTITY(vec2(vec4(injectionSwitch, 1.0, sin(0.0))), min(vec2(vec4(injectionSwitch, 1.0, sin(0.0))), vec2(vec4(injectionSwitch, 1.0, sin(0.0)))))), min(_GLF_IDENTITY(min(vec2(vec4(injectionSwitch, 1.0, sin(0.0))), _GLF_IDENTITY(vec2(vec4(injectionSwitch, 1.0, sin(0.0))), min(vec2(vec4(injectionSwitch, 1.0, sin(0.0))), vec2(vec4(injectionSwitch, 1.0, sin(0.0)))))), (min(vec2(vec4(injectionSwitch, 1.0, sin(0.0))), _GLF_IDENTITY(vec2(vec4(injectionSwitch, 1.0, sin(0.0))), min(vec2(vec4(injectionSwitch, 1.0, sin(0.0))), vec2(vec4(injectionSwitch, 1.0, sin(0.0))))))) * mat2(1.0)), min(vec2(vec4(injectionSwitch, 1.0, sin(0.0))), _GLF_IDENTITY(vec2(vec4(injectionSwitch, 1.0, sin(0.0))), min(vec2(vec4(injectionSwitch, 1.0, sin(0.0))), vec2(vec4(injectionSwitch, 1.0, sin(0.0))))))))) / cos(vec2(0.0, 0.0))))).x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(-14.34), mix(float(_GLF_FUZZED(-922.861)), float(_GLF_FUZZED(-14.34)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (injectionSwitch)[1]), vec2((_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))) * (injectionSwitch)))[0], _GLF_FUZZED(57.97)), bvec2(true, false))).y)), ! (! (((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(vec4(injectionSwitch, 1.0, sin(0.0))), (vec2(vec4(injectionSwitch, 1.0, sin(0.0)))) + vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(min(vec2(vec4(injectionSwitch, 1.0, sin(0.0))), _GLF_IDENTITY(vec2(vec4(injectionSwitch, 1.0, sin(0.0))), min(vec2(vec4(injectionSwitch, 1.0, sin(0.0))), vec2(vec4(injectionSwitch, 1.0, sin(0.0)))))), (_GLF_IDENTITY(min(vec2(vec4(injectionSwitch, 1.0, sin(0.0))), _GLF_IDENTITY(vec2(vec4(injectionSwitch, 1.0, sin(0.0))), min(vec2(vec4(injectionSwitch, 1.0, sin(0.0))), vec2(vec4(injectionSwitch, 1.0, sin(0.0)))))), min(_GLF_IDENTITY(min(vec2(vec4(injectionSwitch, 1.0, sin(0.0))), _GLF_IDENTITY(vec2(vec4(injectionSwitch, 1.0, sin(0.0))), min(vec2(vec4(injectionSwitch, 1.0, sin(0.0))), vec2(vec4(injectionSwitch, 1.0, sin(0.0)))))), (min(vec2(vec4(injectionSwitch, 1.0, sin(0.0))), _GLF_IDENTITY(vec2(vec4(injectionSwitch, 1.0, sin(0.0))), min(vec2(vec4(injectionSwitch, 1.0, sin(0.0))), vec2(vec4(injectionSwitch, 1.0, sin(0.0))))))) * mat2(1.0)), min(vec2(vec4(injectionSwitch, 1.0, sin(0.0))), _GLF_IDENTITY(vec2(vec4(injectionSwitch, 1.0, sin(0.0))), min(vec2(vec4(injectionSwitch, 1.0, sin(0.0))), vec2(vec4(injectionSwitch, 1.0, sin(0.0))))))))) / cos(vec2(0.0, 0.0))))).x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(-14.34), mix(float(_GLF_FUZZED(-922.861)), float(_GLF_FUZZED(-14.34)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (injectionSwitch)[1]), vec2((_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))) * (injectionSwitch)))[0], _GLF_FUZZED(57.97)), bvec2(true, false))).y))))))))), ! (! (_GLF_IDENTITY((! _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(vec4(injectionSwitch, 1.0, sin(0.0))), (vec2(vec4(injectionSwitch, 1.0, sin(0.0)))) + vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(min(vec2(vec4(injectionSwitch, 1.0, sin(0.0))), _GLF_IDENTITY(vec2(vec4(injectionSwitch, 1.0, sin(0.0))), min(vec2(vec4(injectionSwitch, 1.0, sin(0.0))), vec2(vec4(injectionSwitch, 1.0, sin(0.0)))))), (_GLF_IDENTITY(min(vec2(vec4(injectionSwitch, 1.0, sin(0.0))), _GLF_IDENTITY(vec2(vec4(injectionSwitch, 1.0, sin(0.0))), min(vec2(vec4(injectionSwitch, 1.0, sin(0.0))), vec2(vec4(injectionSwitch, 1.0, sin(0.0)))))), min(_GLF_IDENTITY(min(vec2(vec4(injectionSwitch, 1.0, sin(0.0))), _GLF_IDENTITY(vec2(vec4(injectionSwitch, 1.0, sin(0.0))), min(vec2(vec4(injectionSwitch, 1.0, sin(0.0))), vec2(vec4(injectionSwitch, 1.0, sin(0.0)))))), (min(vec2(vec4(injectionSwitch, 1.0, sin(0.0))), _GLF_IDENTITY(vec2(vec4(injectionSwitch, 1.0, sin(0.0))), min(vec2(vec4(injectionSwitch, 1.0, sin(0.0))), vec2(vec4(injectionSwitch, 1.0, sin(0.0))))))) * mat2(1.0)), min(vec2(vec4(injectionSwitch, 1.0, sin(0.0))), _GLF_IDENTITY(vec2(vec4(injectionSwitch, 1.0, sin(0.0))), min(vec2(vec4(injectionSwitch, 1.0, sin(0.0))), vec2(vec4(injectionSwitch, 1.0, sin(0.0))))))))) / cos(vec2(0.0, 0.0))))).x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(-14.34), mix(float(_GLF_FUZZED(-922.861)), float(_GLF_FUZZED(-14.34)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (injectionSwitch)[1]), vec2((_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))) * (injectionSwitch)))[0], _GLF_FUZZED(57.97)), bvec2(true, false))).y)), ! (! (_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(vec4(injectionSwitch, 1.0, sin(0.0))), (vec2(vec4(injectionSwitch, 1.0, sin(0.0)))) + vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(min(vec2(vec4(injectionSwitch, 1.0, sin(0.0))), _GLF_IDENTITY(vec2(vec4(injectionSwitch, 1.0, sin(0.0))), min(vec2(vec4(injectionSwitch, 1.0, sin(0.0))), vec2(vec4(injectionSwitch, 1.0, sin(0.0)))))), (_GLF_IDENTITY(min(vec2(vec4(injectionSwitch, 1.0, sin(0.0))), _GLF_IDENTITY(vec2(vec4(injectionSwitch, 1.0, sin(0.0))), min(vec2(vec4(injectionSwitch, 1.0, sin(0.0))), vec2(vec4(injectionSwitch, 1.0, sin(0.0)))))), min(_GLF_IDENTITY(min(vec2(vec4(injectionSwitch, 1.0, sin(0.0))), _GLF_IDENTITY(vec2(vec4(injectionSwitch, 1.0, sin(0.0))), min(vec2(vec4(injectionSwitch, 1.0, sin(0.0))), vec2(vec4(injectionSwitch, 1.0, sin(0.0)))))), (min(vec2(vec4(injectionSwitch, 1.0, sin(0.0))), _GLF_IDENTITY(vec2(vec4(injectionSwitch, 1.0, sin(0.0))), min(vec2(vec4(injectionSwitch, 1.0, sin(0.0))), vec2(vec4(injectionSwitch, 1.0, sin(0.0))))))) * mat2(1.0)), min(vec2(vec4(injectionSwitch, 1.0, sin(0.0))), _GLF_IDENTITY(vec2(vec4(injectionSwitch, 1.0, sin(0.0))), min(vec2(vec4(injectionSwitch, 1.0, sin(0.0))), vec2(vec4(injectionSwitch, 1.0, sin(0.0))))))))) / cos(vec2(0.0, 0.0))))).x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(-14.34), mix(float(_GLF_FUZZED(-922.861)), float(_GLF_FUZZED(-14.34)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (injectionSwitch)[1]), vec2((_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))) * (injectionSwitch)))[0], _GLF_FUZZED(57.97)), bvec2(true, false))).y)), ! (! (((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(vec4(injectionSwitch, 1.0, sin(0.0))), (vec2(vec4(injectionSwitch, 1.0, sin(0.0)))) + vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(min(vec2(vec4(injectionSwitch, 1.0, sin(0.0))), _GLF_IDENTITY(vec2(vec4(injectionSwitch, 1.0, sin(0.0))), min(vec2(vec4(injectionSwitch, 1.0, sin(0.0))), vec2(vec4(injectionSwitch, 1.0, sin(0.0)))))), (_GLF_IDENTITY(min(vec2(vec4(injectionSwitch, 1.0, sin(0.0))), _GLF_IDENTITY(vec2(vec4(injectionSwitch, 1.0, sin(0.0))), min(vec2(vec4(injectionSwitch, 1.0, sin(0.0))), vec2(vec4(injectionSwitch, 1.0, sin(0.0)))))), min(_GLF_IDENTITY(min(vec2(vec4(injectionSwitch, 1.0, sin(0.0))), _GLF_IDENTITY(vec2(vec4(injectionSwitch, 1.0, sin(0.0))), min(vec2(vec4(injectionSwitch, 1.0, sin(0.0))), vec2(vec4(injectionSwitch, 1.0, sin(0.0)))))), (min(vec2(vec4(injectionSwitch, 1.0, sin(0.0))), _GLF_IDENTITY(vec2(vec4(injectionSwitch, 1.0, sin(0.0))), min(vec2(vec4(injectionSwitch, 1.0, sin(0.0))), vec2(vec4(injectionSwitch, 1.0, sin(0.0))))))) * mat2(1.0)), min(vec2(vec4(injectionSwitch, 1.0, sin(0.0))), _GLF_IDENTITY(vec2(vec4(injectionSwitch, 1.0, sin(0.0))), min(vec2(vec4(injectionSwitch, 1.0, sin(0.0))), vec2(vec4(injectionSwitch, 1.0, sin(0.0))))))))) / cos(vec2(0.0, 0.0))))).x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(-14.34), mix(float(_GLF_FUZZED(-922.861)), float(_GLF_FUZZED(-14.34)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (injectionSwitch)[1]), vec2((_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))) * (injectionSwitch)))[0], _GLF_FUZZED(57.97)), bvec2(true, false))).y))))))))), bool(bvec2((! _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(vec4(injectionSwitch, 1.0, sin(0.0))), (vec2(vec4(injectionSwitch, 1.0, sin(0.0)))) + vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(min(vec2(vec4(injectionSwitch, 1.0, sin(0.0))), _GLF_IDENTITY(vec2(vec4(injectionSwitch, 1.0, sin(0.0))), min(vec2(vec4(injectionSwitch, 1.0, sin(0.0))), vec2(vec4(injectionSwitch, 1.0, sin(0.0)))))), (_GLF_IDENTITY(min(vec2(vec4(injectionSwitch, 1.0, sin(0.0))), _GLF_IDENTITY(vec2(vec4(injectionSwitch, 1.0, sin(0.0))), min(vec2(vec4(injectionSwitch, 1.0, sin(0.0))), vec2(vec4(injectionSwitch, 1.0, sin(0.0)))))), min(_GLF_IDENTITY(min(vec2(vec4(injectionSwitch, 1.0, sin(0.0))), _GLF_IDENTITY(vec2(vec4(injectionSwitch, 1.0, sin(0.0))), min(vec2(vec4(injectionSwitch, 1.0, sin(0.0))), vec2(vec4(injectionSwitch, 1.0, sin(0.0)))))), (min(vec2(vec4(injectionSwitch, 1.0, sin(0.0))), _GLF_IDENTITY(vec2(vec4(injectionSwitch, 1.0, sin(0.0))), min(vec2(vec4(injectionSwitch, 1.0, sin(0.0))), vec2(vec4(injectionSwitch, 1.0, sin(0.0))))))) * mat2(1.0)), min(vec2(vec4(injectionSwitch, 1.0, sin(0.0))), _GLF_IDENTITY(vec2(vec4(injectionSwitch, 1.0, sin(0.0))), min(vec2(vec4(injectionSwitch, 1.0, sin(0.0))), vec2(vec4(injectionSwitch, 1.0, sin(0.0))))))))) / cos(vec2(0.0, 0.0))))).x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(-14.34), mix(float(_GLF_FUZZED(-922.861)), float(_GLF_FUZZED(-14.34)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (injectionSwitch)[1]), vec2((_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))) * (injectionSwitch)))[0], _GLF_FUZZED(57.97)), bvec2(true, false))).y)), ! (! (_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(vec4(injectionSwitch, 1.0, sin(0.0))), (vec2(vec4(injectionSwitch, 1.0, sin(0.0)))) + vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(min(vec2(vec4(injectionSwitch, 1.0, sin(0.0))), _GLF_IDENTITY(vec2(vec4(injectionSwitch, 1.0, sin(0.0))), min(vec2(vec4(injectionSwitch, 1.0, sin(0.0))), vec2(vec4(injectionSwitch, 1.0, sin(0.0)))))), (_GLF_IDENTITY(min(vec2(vec4(injectionSwitch, 1.0, sin(0.0))), _GLF_IDENTITY(vec2(vec4(injectionSwitch, 1.0, sin(0.0))), min(vec2(vec4(injectionSwitch, 1.0, sin(0.0))), vec2(vec4(injectionSwitch, 1.0, sin(0.0)))))), min(_GLF_IDENTITY(min(vec2(vec4(injectionSwitch, 1.0, sin(0.0))), _GLF_IDENTITY(vec2(vec4(injectionSwitch, 1.0, sin(0.0))), min(vec2(vec4(injectionSwitch, 1.0, sin(0.0))), vec2(vec4(injectionSwitch, 1.0, sin(0.0)))))), (min(vec2(vec4(injectionSwitch, 1.0, sin(0.0))), _GLF_IDENTITY(vec2(vec4(injectionSwitch, 1.0, sin(0.0))), min(vec2(vec4(injectionSwitch, 1.0, sin(0.0))), vec2(vec4(injectionSwitch, 1.0, sin(0.0))))))) * mat2(1.0)), min(vec2(vec4(injectionSwitch, 1.0, sin(0.0))), _GLF_IDENTITY(vec2(vec4(injectionSwitch, 1.0, sin(0.0))), min(vec2(vec4(injectionSwitch, 1.0, sin(0.0))), vec2(vec4(injectionSwitch, 1.0, sin(0.0))))))))) / cos(vec2(0.0, 0.0))))).x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(-14.34), mix(float(_GLF_FUZZED(-922.861)), float(_GLF_FUZZED(-14.34)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (injectionSwitch)[1]), vec2((_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))) * (injectionSwitch)))[0], _GLF_FUZZED(57.97)), bvec2(true, false))).y)), ! (! (((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(vec4(injectionSwitch, 1.0, sin(0.0))), (vec2(vec4(injectionSwitch, 1.0, sin(0.0)))) + vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(min(vec2(vec4(injectionSwitch, 1.0, sin(0.0))), _GLF_IDENTITY(vec2(vec4(injectionSwitch, 1.0, sin(0.0))), min(vec2(vec4(injectionSwitch, 1.0, sin(0.0))), vec2(vec4(injectionSwitch, 1.0, sin(0.0)))))), (_GLF_IDENTITY(min(vec2(vec4(injectionSwitch, 1.0, sin(0.0))), _GLF_IDENTITY(vec2(vec4(injectionSwitch, 1.0, sin(0.0))), min(vec2(vec4(injectionSwitch, 1.0, sin(0.0))), vec2(vec4(injectionSwitch, 1.0, sin(0.0)))))), min(_GLF_IDENTITY(min(vec2(vec4(injectionSwitch, 1.0, sin(0.0))), _GLF_IDENTITY(vec2(vec4(injectionSwitch, 1.0, sin(0.0))), min(vec2(vec4(injectionSwitch, 1.0, sin(0.0))), vec2(vec4(injectionSwitch, 1.0, sin(0.0)))))), (min(vec2(vec4(injectionSwitch, 1.0, sin(0.0))), _GLF_IDENTITY(vec2(vec4(injectionSwitch, 1.0, sin(0.0))), min(vec2(vec4(injectionSwitch, 1.0, sin(0.0))), vec2(vec4(injectionSwitch, 1.0, sin(0.0))))))) * mat2(1.0)), min(vec2(vec4(injectionSwitch, 1.0, sin(0.0))), _GLF_IDENTITY(vec2(vec4(injectionSwitch, 1.0, sin(0.0))), min(vec2(vec4(injectionSwitch, 1.0, sin(0.0))), vec2(vec4(injectionSwitch, 1.0, sin(0.0))))))))) / cos(vec2(0.0, 0.0))))).x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(-14.34), mix(float(_GLF_FUZZED(-922.861)), float(_GLF_FUZZED(-14.34)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (injectionSwitch)[1]), vec2((_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))) * (injectionSwitch)))[0], _GLF_FUZZED(57.97)), bvec2(true, false))).y))))))))), false))))))))), true, false)), true, false, _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 _GLF_IDENTITY(buf[virtual_gid] = _GLF_IDENTITY(1, _GLF_IDENTITY((1) ^ (0 >> _GLF_IDENTITY(int(6), int(6))), 0 ^ ((1) ^ (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), 0 + (_GLF_IDENTITY(int(6), int(6)))))))), (_GLF_IDENTITY(buf[virtual_gid] = _GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY((1) ^ (0 >> _GLF_IDENTITY(int(6), int(6))), ((1) ^ (0 >> _GLF_IDENTITY(int(6), int(6)))) >> 0)), _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid] = _GLF_IDENTITY(1, (1) ^ (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(6), max(int(6), _GLF_IDENTITY(int(6), 0 | (int(6))))), int(6)))), (buf[virtual_gid] = _GLF_IDENTITY(1, (1) ^ (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(6), max(int(6), _GLF_IDENTITY(int(6), 0 | (int(6))))), int(6))))) >> 0u)) / 1u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (buf[virtual_gid] = _GLF_IDENTITY(1, (1) ^ (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(6), max(int(6), _GLF_IDENTITY(int(6), 0 | (_GLF_IDENTITY(int(6), min(int(6), int(6))))))), int(6))))) / 1u : _GLF_FUZZED(num_workgroup))))) / uint(_GLF_ONE(1.0, injectionSwitch.y)));
 if(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(max(subgroup_size, subgroup_size), 0u | (max(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), subgroup_size)))))
  {
   _GLF_IDENTITY(buf[next_virtual_gid] = 2, (buf[next_virtual_gid] = _GLF_IDENTITY(2, max(2, 2))) / 1u);
   subgroupAll(false);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))), ! (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)), ! (! (bool(_GLF_IDENTITY(bool(false), (bool(false)) && true))))))))))))))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), true))))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   buf[next_virtual_gid] = 2;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(float(-50840))), vec2(_GLF_FUZZED((- -535.566)), (injectionSwitch)[1]), bvec2(false, true))), (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-141.823)), vec2(_GLF_FUZZED(-75.14), (injectionSwitch)[_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), 0 ^ (~ (1)))))]), bvec2(false, true))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-141.823)), vec2(_GLF_FUZZED(-75.14), (injectionSwitch)[1]), bvec2(false, true))), mix(vec2((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(-141.823), max(_GLF_FUZZED(-141.823), _GLF_FUZZED(-141.823)))), vec2(_GLF_FUZZED(-75.14), (injectionSwitch)[_GLF_IDENTITY(1, (1) - 0)]), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))), true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))[0], _GLF_FUZZED(-24.63)), vec2(_GLF_FUZZED(7.3), (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-141.823, max(_GLF_IDENTITY(-141.823, max(-141.823, -141.823)), -141.823)))), vec2(_GLF_FUZZED(-75.14), (injectionSwitch)[1]), bvec2(false, true))))[1]), bvec2(false, true))) : _GLF_FUZZED(injectionSwitch))).x, (injectionSwitch.x) - 0.0)) + 0.0) > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), (_GLF_IDENTITY(min(injectionSwitch, injectionSwitch), clamp(min(injectionSwitch, injectionSwitch), min(injectionSwitch, injectionSwitch), min(injectionSwitch, injectionSwitch)))) / vec2(1.0, 1.0))).x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), true, true, false))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   subgroupAll(true);
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
