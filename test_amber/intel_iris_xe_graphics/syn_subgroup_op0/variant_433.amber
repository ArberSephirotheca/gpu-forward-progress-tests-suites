#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 0) uniform buf0 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = (1 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _GLF_IDENTITY(_injected_loop_counter --, ~ (~ (_injected_loop_counter --))))
    {
     do
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             do
              {
               return;
               if(_GLF_DEAD(false))
                break;
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_DEAD(false))
              continue;
            }
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          break;
        }
       else
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
          continue;
        }
      }
     while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), false || (_GLF_WRAPPED_LOOP(false))));
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))))
  {
  }
 else
  {
   do
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
        return;
      }
     else
      {
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  return;
 do
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false || (injectionSwitch.x > injectionSwitch.y), true && (false || (injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false || (injectionSwitch.x > injectionSwitch.y), true && (false || (injectionSwitch.x > injectionSwitch.y))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), bool(bvec2(! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), true))), bool(bvec4(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, false)))))), _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, _GLF_IDENTITY(false, (false) || false)))))))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, abs(vec2(0.0, 0.0)) + (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-1610.2242 * -6623.5051)), _GLF_FUZZED(88.33)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-1610.2242 * -6623.5051)), _GLF_FUZZED(88.33)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-1610.2242 * -6623.5051)), _GLF_FUZZED(88.33)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y)), injectionSwitch.y, injectionSwitch.y), (clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)) - 0.0))))), bool(bvec4(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), true, true, _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (false) || false))))))))), bool(bvec4(! ((! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), _GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))), bool(bvec2(_GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))), ((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))) || false), true))), bool(bvec4(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, exp(vec2(0.0, 0.0)) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y))), true, true, _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false)))))), (false) || false))))), ! (! ((_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(exp(vec2(0.0, 0.0)), mix(vec2(_GLF_FUZZED(-348.224), (exp(vec2(0.0, 0.0)))[1]), vec2((exp(vec2(0.0, 0.0)))[0], _GLF_FUZZED(-2.0)), bvec2(true, false))) * _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0))))), mix(vec2(_GLF_FUZZED(-55.72), _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0))))))[1], min(((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0))))))[1], ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0))))))[1]))), vec2(((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0))))))[0], _GLF_FUZZED(-2.5)), bvec2(true, false)))).x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-9.2), _GLF_FUZZED(-650.485)), bvec2(false, false)))) + vec2(0.0, 0.0)).y))), true, true, _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false)))))), (false) || false)))))))), (! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, (0.0) / 1.0)))), injectionSwitch.x)) > injectionSwitch.y))), bool(bvec4(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (false) || false)))))) || false))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, bool(bvec2(false, true)))))))) || false)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      break;
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), false || (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true)))))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          break;
         return;
        }
       else
        {
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        break;
      }
     if(_GLF_DEAD(false))
      break;
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, log(1.0), 1.0, log(1.0), 0.0, determinant(mat4(1.0, 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), cos(0.0))), vec2(mat3x4(_GLF_IDENTITY(vec2(mat4x2(injectionSwitch, log(1.0), 1.0, log(1.0), 0.0, determinant(mat4(1.0, 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), cos(0.0))), max(vec2(mat4x2(injectionSwitch, log(1.0), 1.0, log(1.0), 0.0, determinant(mat4(1.0, 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), cos(0.0))), vec2(mat4x2(injectionSwitch, log(1.0), 1.0, log(1.0), 0.0, determinant(mat4(1.0, 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), cos(0.0))))), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, log(1.0), 1.0, 0.0)))).y))))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, (false) && true) || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(98.96)), float(injectionSwitch.y), bool(true)))) * 1.0))), true && (injectionSwitch.x > injectionSwitch.y))) || false)))))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, exp(0.0)))).x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((3.8 - vec2(39.82, 6.2))) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y, ! (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, ! (! (false))) || ((injectionSwitch.x > injectionSwitch.y))))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, exp(0.0)))).x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((3.8 - vec2(39.82, 6.2))) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y, ! (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, ! (! (false))) || ((injectionSwitch.x > injectionSwitch.y))))))), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, exp(0.0)))).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_FUZZED((3.8 - vec2(39.82, 6.2))) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (0) - 0)], injectionSwitch[1]))), vec2(mat4x2(_GLF_IDENTITY((false ? _GLF_FUZZED((3.8 - vec2(39.82, 6.2))) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (0) - 0)], injectionSwitch[1]))), max((false ? _GLF_FUZZED((3.8 - vec2(39.82, 6.2))) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (0) - 0)], injectionSwitch[1]))), _GLF_IDENTITY((false ? _GLF_FUZZED((3.8 - vec2(39.82, 6.2))) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (0) - 0)], injectionSwitch[1]))), ((false ? _GLF_FUZZED((3.8 - vec2(39.82, 6.2))) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (0) - 0)], injectionSwitch[1])))) / vec2(1.0, 1.0)))), 1.0, sqrt(1.0), 1.0, 1.0, cos(0.0), 1.0)))).y, ! _GLF_IDENTITY((! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, ! (! (false))) || ((injectionSwitch.x > injectionSwitch.y)))), ((! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, ! (! (false))) || ((injectionSwitch.x > injectionSwitch.y))))) || false))))))))))))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          break;
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            break;
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), 0 + (int(6))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   return;
                  }
                }
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
            }
          }
         else
          {
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         if(_GLF_DEAD(false))
          continue;
        }
       for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), _GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)), ! (! (_GLF_IDENTITY((_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)), bool(bvec3((_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)), false, true))))))), bool(bvec4(_GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)), bool(bool((_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)))))), true && (! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, cos(0.0), 1.0, sqrt(0.0), 0.0, 0.0, cos(0.0)))).x < injectionSwitch.y))) && true))), true, true)))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          break;
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
            continue;
          }
         else
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
            return;
           do
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
              {
               return;
              }
             if(_GLF_DEAD(false))
              continue;
            }
           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))), false || (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))))));
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
          }
        }
      }
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(_GLF_IDENTITY(bvec3(! (! (false)), true, true), bvec3(bvec4(bvec3(! (! (false)), true, true), false))))))))
    return;
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = _GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec3(0, 1, (0 >> _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), _GLF_IDENTITY(0 | (int(8)), (_GLF_IDENTITY(0 | (int(8)), max(0 | (int(8)), 0 | (int(8))))) | (0 | (int(8))))))))), min(int(ivec3(0, 1, (0 >> _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), 0 | (int(8))))))), int(ivec3(0, 1, (_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(int(-7.0)))) >> _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), 0 | (int(8)))))))))), (0) << 0); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (false ? _GLF_FUZZED(_injected_loop_counter) : _injected_loop_counter)) < 1); _injected_loop_counter ++)
      {
       return;
      }
    }
  }
 else
  {
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2]), uvec3(0u, 0u, 0u) ^ _GLF_IDENTITY((_GLF_IDENTITY(uvec3(gl_WorkGroupID[0], _GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID))[1], gl_WorkGroupID[2]), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(uvec3(uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2]))), uvec3(0u, 0u, 0u) + (uvec3(uvec3(uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2]))))), (uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u)) ^ (_GLF_IDENTITY(uvec3(uvec3(uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2]))), uvec3(0u, 0u, 0u) + (uvec3(uvec3(uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2]))))))), clamp(uvec3(uvec3(uvec3(gl_WorkGroupID[_GLF_IDENTITY(0, min(0, 0))], gl_WorkGroupID[1], _GLF_IDENTITY(gl_WorkGroupID[2], _GLF_IDENTITY(uint(uvec3(gl_WorkGroupID[2], 1u, 0u)), 0u + (uint(uvec3(gl_WorkGroupID[2], 1u, 0u)))))))), uvec3(uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupID[0], _GLF_IDENTITY(gl_WorkGroupID, (true ? gl_WorkGroupID : _GLF_FUZZED(uvec3(172660u, 108242u, 175709u))))[1], gl_WorkGroupID[2]), (uvec3(gl_WorkGroupID[0], _GLF_IDENTITY(gl_WorkGroupID, (true ? gl_WorkGroupID : _GLF_FUZZED(uvec3(172660u, 108242u, 175709u))))[1], gl_WorkGroupID[2])) - (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))))), uvec3(uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupID, (false ? _GLF_FUZZED(uvec3(7366u, 46367u, 83123u).zyz) : gl_WorkGroupID))[0], gl_WorkGroupID[1], gl_WorkGroupID[2]))))))), max((_GLF_IDENTITY(uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2]), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(uvec3(uvec3(gl_WorkGroupID[0], gl_WorkGroupID[_GLF_IDENTITY(1, 0 | (1))], gl_WorkGroupID[2]))), clamp(uvec3(uvec3(uvec3(gl_WorkGroupID[0], gl_WorkGroupID[_GLF_IDENTITY(1, 0 | (1))], gl_WorkGroupID[2]))), uvec3(uvec3(uvec3(gl_WorkGroupID[0], gl_WorkGroupID[_GLF_IDENTITY(1, 0 | (1))], gl_WorkGroupID[2]))), uvec3(uvec3(uvec3(gl_WorkGroupID[0], gl_WorkGroupID[_GLF_IDENTITY(1, 0 | (1))], gl_WorkGroupID[2]))))), uvec3(0u, 0u, 0u) + (uvec3(uvec3(uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2]))))), clamp(uvec3(uvec3(uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], _GLF_IDENTITY(gl_WorkGroupID[2], uint(uvec3(_GLF_IDENTITY(gl_WorkGroupID[2], (uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(6u), uint(6u))) | (gl_WorkGroupID[2])), 1u, _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (0u) - 0u))))))))), uvec3(uvec3(uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[_GLF_IDENTITY(2, (2) ^ 0)]))), uvec3(uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((false ? _GLF_FUZZED(uvec3(7366u, 46367u, 83123u).zyz) : gl_WorkGroupID), ~ (~ (_GLF_IDENTITY((false ? _GLF_FUZZED(uvec3(7366u, 46367u, 83123u).zyz) : gl_WorkGroupID), ((false ? _GLF_FUZZED(uvec3(7366u, 46367u, 83123u).zyz) : gl_WorkGroupID)) | uvec3(0u, 0u, 0u))))))[0], _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - uvec3(0u, 0u, 0u))[1], gl_WorkGroupID[2]))))))), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2]))[0], gl_WorkGroupID[1], gl_WorkGroupID[2]), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(uvec3(uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2]))), (uvec3(uvec3(uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2])))) >> uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(uvec3(uvec3(uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[_GLF_IDENTITY(2, clamp(2, _GLF_IDENTITY(2, (2) | (2)), 2))]))), max(uvec3(uvec3(uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[_GLF_IDENTITY(2, clamp(2, _GLF_IDENTITY(2, (2) | (2)), 2))]))), _GLF_IDENTITY(uvec3(uvec3(uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[_GLF_IDENTITY(2, clamp(2, _GLF_IDENTITY(2, (2) | (2)), 2))]))), clamp(uvec3(uvec3(uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[_GLF_IDENTITY(2, clamp(2, _GLF_IDENTITY(2, (2) | (2)), 2))]))), uvec3(uvec3(uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[_GLF_IDENTITY(2, clamp(2, _GLF_IDENTITY(2, (2) | (2)), 2))]))), uvec3(uvec3(uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[_GLF_IDENTITY(2, clamp(2, _GLF_IDENTITY(2, (2) | (2)), 2))]))))))))), clamp(uvec3(uvec3(uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], _GLF_IDENTITY(gl_WorkGroupID[2], uint(uvec3(gl_WorkGroupID[2], 1u, 0u)))))), uvec3(uvec3(uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2]))), uvec3(uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupID, (false ? _GLF_FUZZED(uvec3(7366u, 46367u, 83123u).zyz) : gl_WorkGroupID))[0], gl_WorkGroupID[1], gl_WorkGroupID[2]))))))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupID)), (true ? uvec3(uvec3(gl_WorkGroupID)) : _GLF_FUZZED(uvec3(73787u, 21690u, 106578u)))))[0], gl_WorkGroupID[1], gl_WorkGroupID[2])), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupID)), (true ? uvec3(uvec3(gl_WorkGroupID)) : _GLF_FUZZED(uvec3(73787u, 21690u, 106578u)))))[0], gl_WorkGroupID[1], gl_WorkGroupID[2])), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupID)), (true ? uvec3(uvec3(gl_WorkGroupID)) : _GLF_FUZZED(uvec3(73787u, 21690u, 106578u)))))[0], gl_WorkGroupID[1], gl_WorkGroupID[2])), clamp(_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupID)), (true ? uvec3(uvec3(gl_WorkGroupID)) : _GLF_FUZZED(uvec3(73787u, 21690u, 106578u)))))[0], gl_WorkGroupID[1], gl_WorkGroupID[2])), _GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupID)), (true ? uvec3(uvec3(gl_WorkGroupID)) : _GLF_FUZZED(uvec3(73787u, 21690u, 106578u)))))[0], gl_WorkGroupID[1], gl_WorkGroupID[2])), _GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupID)), (true ? uvec3(uvec3(gl_WorkGroupID)) : _GLF_FUZZED(uvec3(73787u, 21690u, 106578u)))))[0], gl_WorkGroupID[1], gl_WorkGroupID[2]))))) | (_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupID)), (true ? uvec3(uvec3(gl_WorkGroupID)) : _GLF_FUZZED(uvec3(73787u, 21690u, 106578u)))))[0], gl_WorkGroupID[1], gl_WorkGroupID[2])))), _GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupID)), (true ? uvec3(uvec3(gl_WorkGroupID)) : _GLF_FUZZED(uvec3(73787u, 21690u, 106578u)))))[0], gl_WorkGroupID[1], gl_WorkGroupID[2])))), _GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[_GLF_IDENTITY(2, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, true))) ? _GLF_FUZZED(-64563) : 2))])), _GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID))[0], gl_WorkGroupID[1], gl_WorkGroupID[2])))).x;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, 0u + (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)) + subgroup_id * subgroup_size + subgroup_local_id));
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u + (_GLF_IDENTITY(subgroup_id, (subgroup_id) + (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(~ (~ (uint(8u))), (~ (~ (uint(8u)))) * _GLF_IDENTITY(1u, (1u) + 0u)))), (_GLF_IDENTITY(uint(8u), _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), ~ (~ (uint(8u)))), (false ? _GLF_FUZZED(uvec3(111028u, 39109u, 65710u).p) : _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), ~ (~ (uint(8u)))), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(uint(8u), ~ (~ (uint(8u))))), (0u >> _GLF_IDENTITY(uint(0u), uint(0u))) | (_GLF_IDENTITY((_GLF_IDENTITY(uint(8u), ~ (~ (uint(8u))))), clamp((_GLF_IDENTITY(uint(8u), ~ (~ (uint(8u))))), (_GLF_IDENTITY(uint(8u), ~ (~ (uint(8u))))), (_GLF_IDENTITY(uint(8u), ~ (~ (uint(8u))))))))))))))) - 0u)))), max(_GLF_IDENTITY(0u, (0u) ^ 0u) + (subgroup_id), _GLF_IDENTITY(_GLF_IDENTITY(0u + (subgroup_id), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u + (subgroup_id), clamp(0u + _GLF_IDENTITY((subgroup_id), max((subgroup_id), _GLF_IDENTITY((subgroup_id), ((subgroup_id)) | ((subgroup_id))))), 0u + (subgroup_id), 0u + (subgroup_id)))), (true ? uint(_GLF_IDENTITY(0u + (subgroup_id), clamp(0u + (subgroup_id), 0u + (subgroup_id), 0u + (subgroup_id)))) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), min(_GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_FUZZED(workgroup_id)) * 1u), _GLF_FUZZED(workgroup_id))))))), (_GLF_IDENTITY(_GLF_IDENTITY(0u + (subgroup_id), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(0u + (subgroup_id), min(0u + (subgroup_id), 0u + (subgroup_id))), clamp(0u + (subgroup_id), 0u + (subgroup_id), 0u + (subgroup_id)))), (true ? uint(_GLF_IDENTITY(0u + (subgroup_id), clamp(0u + (subgroup_id), _GLF_IDENTITY(0u, 0u ^ (0u)) + (subgroup_id), 0u + _GLF_IDENTITY((subgroup_id), (false ? _GLF_FUZZED(workgroup_size) : (subgroup_id)))))) : _GLF_FUZZED(workgroup_id))))), 0u ^ (_GLF_IDENTITY(0u + (subgroup_id), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) >> 0u) + (subgroup_id), _GLF_IDENTITY(clamp(0u + (subgroup_id), 0u + (subgroup_id), 0u + (subgroup_id)), 0u ^ (clamp(0u + (subgroup_id), 0u + (subgroup_id), 0u + (subgroup_id)))))), (true ? uint(_GLF_IDENTITY(0u + (subgroup_id), clamp(0u + (subgroup_id), 0u + (subgroup_id), 0u + (subgroup_id)))) : _GLF_FUZZED(workgroup_id)))))))) / (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)), (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)), 0u, 1u), (uvec3((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)), 0u, 1u)) | uvec3(0u, 0u, 0u))), min(uint(_GLF_IDENTITY(uvec3((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)), 0u, 1u), (uvec3((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)), 0u, 1u)) | uvec3(0u, 0u, 0u))), uint(_GLF_IDENTITY(uvec3((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)), 0u, 1u), (uvec3((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)), 0u, 1u)) | uvec3(0u, 0u, 0u))))))) - 0u)))))), (0u & 139122u) ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u + (_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u)), (0u + (subgroup_id)) | _GLF_IDENTITY(0u, (_GLF_IDENTITY(true ? 0u : _GLF_FUZZED(usubBorrow(workgroup_size, workgroup_base, subgroup_local_id)), (true ? 0u : _GLF_FUZZED(usubBorrow(workgroup_size, workgroup_base, subgroup_local_id))) - 0u))))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u + _GLF_IDENTITY((subgroup_id), ((_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u)))) | 0u))) << 0u), (_GLF_IDENTITY(0u + _GLF_IDENTITY((subgroup_id), ((subgroup_id)) << 0u), uint(uvec2(0u + _GLF_IDENTITY((subgroup_id), ((subgroup_id)) << 0u), 0u)))) / 1u)), (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u + _GLF_IDENTITY((subgroup_id), ((_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u)))) | 0u))) << 0u), (_GLF_IDENTITY(0u + _GLF_IDENTITY((subgroup_id), ((subgroup_id)) << 0u), uint(uvec2(0u + _GLF_IDENTITY((subgroup_id), ((subgroup_id)) << 0u), 0u)))) / 1u))) - 0u), clamp(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, max(0u, 0u)), 1u, 0u), max(uvec3(_GLF_IDENTITY(0u, max(0u, 0u)), 1u, 0u), uvec3(_GLF_IDENTITY(0u, max(0u, 0u)), 1u, 0u))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, max(0u, 0u)), 1u, 0u), max(uvec3(_GLF_IDENTITY(0u, max(0u, 0u)), 1u, 0u), uvec3(_GLF_IDENTITY(0u, max(0u, 0u)), 1u, 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, max(0u, 0u)), 1u, 0u), max(uvec3(_GLF_IDENTITY(0u, max(0u, 0u)), 1u, 0u), uvec3(_GLF_IDENTITY(0u, max(0u, 0u)), 1u, 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, max(0u, 0u)), 1u, 0u), max(uvec3(_GLF_IDENTITY(0u, max(0u, 0u)), 1u, 0u), uvec3(_GLF_IDENTITY(0u, max(0u, 0u)), 1u, 0u))))))) + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id), ((subgroup_id)) >> 0u), ((subgroup_id)) << 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id), ((subgroup_id)) + 0u), ((subgroup_id)) << 0u)), 0u ^ (~ (_GLF_IDENTITY((subgroup_id), (_GLF_IDENTITY((subgroup_id), min((subgroup_id), _GLF_IDENTITY((subgroup_id), (true ? (subgroup_id) : _GLF_FUZZED(workgroup_id)))))) << 0u))))))), _GLF_IDENTITY(subgroup_id, 0u + _GLF_IDENTITY((subgroup_id), ((subgroup_id)) << 0u)), _GLF_IDENTITY(subgroup_id, 0u + _GLF_IDENTITY((subgroup_id), ((subgroup_id)) << 0u)))), _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u + (subgroup_id), min(0u + (subgroup_id), 0u + (subgroup_id)))))))) * subgroup_size + ((subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(0, (0) * 1) + _GLF_IDENTITY(_GLF_IDENTITY((1), _GLF_IDENTITY(0, (0) / 1) + _GLF_IDENTITY(((1)), (((1))) >> 0)), (_GLF_IDENTITY((_GLF_IDENTITY(1, (1) | 0)), _GLF_IDENTITY(0, (0) / 1) + _GLF_IDENTITY(((1)), (((1))) >> 0))) * 1)), min(_GLF_IDENTITY(1, _GLF_IDENTITY(0, (0) * 1) + _GLF_IDENTITY((1), 0 + _GLF_IDENTITY(((1)), _GLF_IDENTITY((((1))), clamp((((1))), (((1))), (((1))))) >> 0))), _GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(0, (0) * 1) + _GLF_IDENTITY((1), 0 + _GLF_IDENTITY(_GLF_IDENTITY(((1)), ~ (~ (((1))))), (((1))) >> 0)), 0 | (_GLF_IDENTITY(0, (0) * 1) + _GLF_IDENTITY((1), 0 + _GLF_IDENTITY(_GLF_IDENTITY(((1)), ~ (~ (((1))))), (((1))) >> 0))))))), (1) - 0), 1))) % subgroup_size);
 _GLF_IDENTITY(buf[virtual_gid] = 1, (false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, 1u * (workgroup_id)), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, 1u * (workgroup_id)), (true ? _GLF_IDENTITY(workgroup_id, 1u * (workgroup_id)) : _GLF_FUZZED(subgroup_size)))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) : buf[virtual_gid] = _GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (_GLF_IDENTITY(1, (1) | (1)))) / 1)))) | 0)));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), uint(uvec3((subgroup_size), 1u, 0u))) + _GLF_IDENTITY(0u, (0u) / 1u))) - _GLF_IDENTITY(_GLF_IDENTITY((0u ^ _GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(bitfieldInsert(uvec2(191346u, 164025u), uvec2(42871u, 111522u), -83260, 32161), max(_GLF_IDENTITY(bitfieldInsert(uvec2(191346u, 164025u), uvec2(42871u, 111522u), -83260, 32161), (bitfieldInsert(uvec2(191346u, 164025u), uvec2(42871u, 111522u), -83260, 32161)) * uvec2(1u, 1u)), bitfieldInsert(uvec2(191346u, 164025u), uvec2(42871u, 111522u), -83260, 32161)))[0]) : 0u))), _GLF_IDENTITY(((0u ^ 0u)) - 0u, _GLF_IDENTITY((((0u ^ _GLF_IDENTITY(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) | (0u)))) - 0u), uint(uvec3((((0u ^ _GLF_IDENTITY(0u, 0u | (0u)))) - 0u), (0u >> _GLF_IDENTITY(uint(2u), uint(2u))), (1u ^ 1u)))) - 0u)), max(_GLF_IDENTITY((_GLF_IDENTITY(0u, _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0u), (_GLF_IDENTITY(~ (0u), max(~ (0u), ~ (0u)))) | 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(~ (0u), (_GLF_IDENTITY(~ (0u), max(~ (0u), ~ (0u)))) | 0u), (_GLF_IDENTITY(~ (0u), (_GLF_IDENTITY(~ (0u), max(~ (0u), ~ (0u)))) | _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, min(0u, 0u)), 0u)))) / 1u), _GLF_IDENTITY(~ (0u), (_GLF_IDENTITY(~ _GLF_IDENTITY((0u), max((0u), (0u))), max(~ (0u), ~ (0u)))) | 0u)))), (~ (_GLF_IDENTITY(~ _GLF_IDENTITY((0u), uint(uvec3(_GLF_IDENTITY((0u), max((0u), (0u))), 0u, 0u))), (_GLF_IDENTITY(~ (0u), max(~ (0u), ~ (0u)))) | 0u))) << 0u)) ^ 0u), _GLF_IDENTITY(((_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (_GLF_IDENTITY(~ (0u), max(~ (0u), _GLF_IDENTITY(~ (0u), (~ (0u)) | (~ (0u)))))) | _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) * 1u)))))) ^ _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, max(0u, 0u))))))))) << 0u, max(_GLF_IDENTITY(((_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (_GLF_IDENTITY(~ (0u), max(~ (0u), _GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) << 0u), 0u))), uint(uvec4((_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) << 0u), 0u))), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (~ (0u)) | (~ (0u)))))) | _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) * 1u), (_GLF_IDENTITY(0u, (0u) * 1u)) | (0u ^ 0u))))))) ^ 0u)) << 0u, (((_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (_GLF_IDENTITY(~ (0u), max(~ (0u), _GLF_IDENTITY(~ (0u), (~ (0u)) | (~ (0u)))))) | _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) * 1u)))))) ^ 0u)) << 0u) ^ 0u), ((_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (_GLF_IDENTITY(~ (0u), _GLF_IDENTITY(max(~ (0u), _GLF_IDENTITY(~ (0u), (~ (0u)) | (~ (0u)))), (max(~ (0u), _GLF_IDENTITY(~ (0u), (~ (0u)) | (~ (_GLF_IDENTITY(0u, (0u) / 1u)))))) / 1u))) | _GLF_IDENTITY(0u, _GLF_IDENTITY(max(0u, _GLF_IDENTITY(0u, (0u) * 1u)), 0u | (max(0u, _GLF_IDENTITY(0u, (0u) * 1u)))))))) ^ 0u)) << 0u))), (_GLF_IDENTITY(0u ^ 0u, (0u ^ 0u) / ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))))))
    {
     if(_GLF_DEAD(false))
      return;
     buf[next_virtual_gid] = 2;
     do
      {
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_WRAPPED_IF_FALSE(false))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)) : _GLF_FUZZED(vec2(2.4, 3.0)))).x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(0.0, (0.0) * 1.0))), 0.0, 0.0, 0.0, sin(0.0), 0.0, 0.0, 1.0)))))))
          {
           if(_GLF_DEAD(false))
            return;
           break;
          }
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, (1) >> 0)); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         subgroupAll(false);
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))), ! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))), _GLF_IDENTITY(true, bool(bvec3(true, false, true))) && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(-718.741) : _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((-754.115 / 60.37))), bool(false)))))) * (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)))).y))))))
          break;
         if(_GLF_DEAD(false))
          break;
         continue;
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, false)))))), bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, false)))))), true))))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
           break;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
            {
            }
           else
            {
             return;
            }
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
          break;
         return;
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false))))))
        continue;
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           return;
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
          {
           if(_GLF_DEAD(false))
            break;
           return;
          }
         if(_GLF_DEAD(false))
          return;
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), true && _GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), true))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_IDENTITY(_GLF_FUZZED(-4.4), (true ? _GLF_FUZZED(-4.4) : _GLF_FUZZED(-95.46))) : injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))))) > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_IDENTITY(_GLF_FUZZED(-4.4), (true ? _GLF_FUZZED(-4.4) : _GLF_FUZZED(-95.46))) : injectionSwitch.x)), injectionSwitch.x)))) > injectionSwitch.y))))), ((_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), true))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_IDENTITY(_GLF_FUZZED(-4.4), (true ? _GLF_FUZZED(-4.4) : _GLF_FUZZED(-95.46))) : injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))))) > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_IDENTITY(_GLF_FUZZED(-4.4), (true ? _GLF_FUZZED(-4.4) : _GLF_FUZZED(-95.46))) : injectionSwitch.x)), injectionSwitch.x)))) > injectionSwitch.y)))))) && true), (_GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((true ? injectionSwitch.y : _GLF_FUZZED(-294.377)), min((true ? injectionSwitch.y : _GLF_FUZZED(-294.377)), (true ? injectionSwitch.y : _GLF_FUZZED(-294.377))))), 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, tan(0.0), 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, tan(0.0), 1.0)))))), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)), min(float(mat4(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-294.377))), 0.0, 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(step(-3290.0761, -6.2)) : 1.0)), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)), float(mat4(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-294.377))), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(3959.3915))), 0.0, 1.0, 0.0)))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0))).y, _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((true ? injectionSwitch.y : _GLF_FUZZED(-294.377)), min((true ? injectionSwitch.y : _GLF_FUZZED(-294.377)), (true ? injectionSwitch.y : _GLF_FUZZED(-294.377))))), 0.0 + (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((true ? injectionSwitch.y : _GLF_IDENTITY(_GLF_FUZZED(-294.377), (_GLF_IDENTITY(_GLF_FUZZED(-294.377), float(mat2x4(_GLF_FUZZED(-294.377), 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0, 0.0, 0.0, 1.0, 0.0)))) * _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))))), min((true ? injectionSwitch.y : _GLF_FUZZED(-294.377)), (true ? injectionSwitch.y : _GLF_FUZZED(-294.377))))))), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0, 0.0)), min(float(mat4(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((true ? injectionSwitch.y : _GLF_FUZZED(-294.377)), mix(float((true ? injectionSwitch.y : _GLF_FUZZED(-294.377))), float(_GLF_FUZZED(-744.052)), bool(false)))), 0.0, 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(step(-3290.0761, -6.2)) : 1.0)), 0.0, 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-9948.2056))), 1.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, 0.0, 1.0, exp(0.0))), clamp(float(mat3x4(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-9948.2056))), 1.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, 0.0, 1.0, exp(0.0))), float(mat3x4(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-9948.2056))), 1.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, 0.0, 1.0, exp(0.0))), float(mat3x4(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-9948.2056))), 1.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, 0.0, 1.0, exp(0.0)))))), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)), float(mat4(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(3.9))))), injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(-294.377))), _GLF_IDENTITY(0.0, 0.0 + (0.0)), _GLF_IDENTITY(0.0, (0.0) + 0.0), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0)))))), ((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, _GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))) : _GLF_FUZZED(_GLF_IDENTITY(-294.377, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? -294.377 : _GLF_FUZZED(3453.1710))))), min((true ? injectionSwitch.y : _GLF_FUZZED(-294.377)), (true ? injectionSwitch.y : _GLF_FUZZED(-294.377))))), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)), min(float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-294.377))), 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(step(-3290.0761, -6.2)) : 1.0)), 0.0 + (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(step(-3290.0761, _GLF_IDENTITY(-6.2, min(_GLF_IDENTITY(-6.2, (false ? _GLF_FUZZED(dot(vec3(-9.7, -0.5, 3.6), vec3(-9.7, 1.4, -4.8))) : -6.2)), -6.2)))) : 1.0)))), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 1.0, 0.0), (true ? _GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-294.377))), 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(step(-3290.0761, -6.2)) : 1.0)), 0.0 + (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(step(-3290.0761, _GLF_IDENTITY(-6.2, min(_GLF_IDENTITY(-6.2, (false ? _GLF_FUZZED(dot(vec3(-9.7, -0.5, 3.6), vec3(-9.7, 1.4, -4.8))) : -6.2)), -6.2)))) : 1.0)))), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 1.0, 0.0), mat4(1.0) * (mat4(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-294.377))), 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(step(-3290.0761, -6.2)) : 1.0)), 0.0 + (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(step(-3290.0761, _GLF_IDENTITY(-6.2, min(_GLF_IDENTITY(-6.2, (false ? _GLF_FUZZED(dot(vec3(-9.7, -0.5, 3.6), vec3(-9.7, 1.4, -4.8))) : -6.2)), -6.2)))) : 1.0)))), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 1.0, 0.0))) : _GLF_FUZZED(mat4(5.6, 1.3, 1.8, -85.73, -76.10, -2.4, 94.67, 503.631, -6194.8346, 4069.0863, -6.6, 47.32, 9240.0078, -6.6, -731.197, 4.2))))), float(mat4(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-294.377))), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0))))))) || false))))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-4.1) : injectionSwitch.y)) : _GLF_FUZZED(-294.377))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-4.1) : injectionSwitch.y)) : _GLF_FUZZED(-294.377))), mix(float(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-4.1) : injectionSwitch.y)) : _GLF_FUZZED(-294.377)))), float(_GLF_FUZZED(5.4)), bool(false))), _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-4.1) : injectionSwitch.y)) : _GLF_FUZZED(-294.377))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-4.1) : injectionSwitch.y)) : _GLF_FUZZED(-294.377))), mix(float(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-4.1) : injectionSwitch.y)) : _GLF_FUZZED(-294.377)))), float(_GLF_FUZZED(6.5)), bool(false))))), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)), min(float(mat4(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-294.377))), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 1.0, 0.0)), float(mat4(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-294.377))), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-1.4)), bool(false))))), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)))))))))))) && true)), ! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))), _GLF_IDENTITY((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))) && true, true && ((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))) && true)))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))) || false, (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))) || false, bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, ! (! (false)))) || false, true, true), bvec3(bvec4(bvec3((_GLF_IDENTITY(false, ! (! (false)))) || false, true, true), false)))))) && true)), false || (_GLF_IDENTITY(false, (false) || false)))), true, false)))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))), _GLF_IDENTITY((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))) && true, true && ((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))) && true)))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))) || false, (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))) || false, bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, ! (! (false)))) || false, true, true), bvec3(bvec4(bvec3((_GLF_IDENTITY(false, ! (! (false)))) || false, true, true), false)))))) && true)), false || (_GLF_IDENTITY(false, (false) || false)))), true, false))))) && true)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))) || false)))), true && _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))))[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-8.2), _GLF_FUZZED(-612.245)), bvec2(false, false))).x, _GLF_IDENTITY((true ? injectionSwitch.x : _GLF_FUZZED(-354.090)), ((_GLF_IDENTITY(true ? injectionSwitch.x : _GLF_FUZZED(-354.090), (true ? injectionSwitch.x : _GLF_FUZZED(-354.090)) / 1.0))) * 1.0)), _GLF_IDENTITY((false ? _GLF_FUZZED(-75.64) : injectionSwitch.x), 1.0 * (_GLF_IDENTITY((false ? _GLF_FUZZED(-75.64) : injectionSwitch.x), ((false ? _GLF_FUZZED(-75.64) : injectionSwitch.x)) * 1.0)))), float(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), false || (_GLF_IDENTITY(bool(true), false || (bool(true))))))) ? injectionSwitch.x : _GLF_FUZZED(_GLF_IDENTITY(-354.090, (_GLF_IDENTITY(-354.090, (-354.090) / 1.0)) + abs(0.0))))), (false ? _GLF_FUZZED(-75.64) : injectionSwitch.x)), 1.0, tan(0.0), 1.0, 0.0, 1.0, 0.0, 0.0))) > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-5.3) : _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).y)), injectionSwitch.y)))))) && true)))))));
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           return;
          }
        }
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) - 0))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           return;
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          break;
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, false)))))
      return;
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     do
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, true)), (bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, true)))) && true)), true, true))) || false)))
        return;
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, false))))), (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (! (_GLF_DEAD(false))), ! (! (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(bool(bool(! (_GLF_DEAD(false)))), _GLF_IDENTITY(bool(bvec4(bool(bool(! (_GLF_DEAD(false)))), true, true, true)), bool(bvec3(bool(bvec4(bool(bool(! (_GLF_DEAD(false)))), true, true, true)), true, false)))))))))))))), _GLF_IDENTITY(false, _GLF_IDENTITY((false), true && ((false))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))) || (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), false || (! (! (_GLF_DEAD(false)))))))))))) || false))
        return;
      }
     else
      {
      }
     do
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false, false))))))
          {
           if(_GLF_DEAD(false))
            break;
           return;
          }
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  return;
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  break;
                }
              }
            }
           else
            {
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
           continue;
          }
         for(int _injected_loop_counter = _GLF_IDENTITY(0, clamp(0, 0, 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           buf[next_virtual_gid] = 2;
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true)))))) && true), ! (! (true)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             do
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
               for(int _injected_loop_counter = _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(6), int(6))), clamp((0 >> _GLF_IDENTITY(int(6), int(6))), (_GLF_IDENTITY(0, (0) | 0) >> _GLF_IDENTITY(int(_GLF_IDENTITY(6, ~ (~ _GLF_IDENTITY((6), _GLF_IDENTITY(int(ivec3((6), 0, (1 & 1))), (_GLF_IDENTITY(int(ivec3((6), 0, (1 & 1))), int(ivec2(int(ivec3((6), 0, (1 & 1))), 0)))) - 0))))), int(6))), (0 >> _GLF_IDENTITY(int(6), int(6))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 | ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(6, (6) * 1)), int(_GLF_IDENTITY(6, min(6, 6))))) >> _GLF_IDENTITY(int(6), int(6))))); _injected_loop_counter ++)
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))))
                  break;
                 if(_GLF_DEAD(false))
                  return;
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), (true) && _GLF_IDENTITY(true, ! (! (true)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) && true))), (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), (_GLF_IDENTITY(true, (true) && true)) && true)))) || false))), (true) && true), false, false)), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, _GLF_IDENTITY(true && (_GLF_IDENTITY(true, (true) && true)), false || (true && (_GLF_IDENTITY(true, (true) && true))))))), (true) && true), false, false)), false || (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, false || _GLF_IDENTITY((_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) && true)))), true && ((_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) && true))))))), (true) && true), false, false)))), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) && true))))), (true) && true), false, false)), false || (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))), false || (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bool((true))), bool(bvec3(bool(bool((true))), false, false)))) && true))))), (true) && true), false, false))))) || false), false))), (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, (true) || false)))), (true) && true), false, false))) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) && true))), (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), (_GLF_IDENTITY(true, (true) && true)) && true)))) || false))), (true) && true), false, false)), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, _GLF_IDENTITY(true && (_GLF_IDENTITY(true, (true) && true)), false || (true && (_GLF_IDENTITY(true, (true) && true))))))), (true) && true), false, false)), false || (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, false || _GLF_IDENTITY((_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) && true)))), true && ((_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) && true))))))), (true) && true), false, false)))), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) && true))))), (true) && true), false, false)), false || (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))), false || (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bool((true))), bool(bvec3(bool(bool((true))), false, false)))) && true))))), (true) && true), false, false))))) || false), false))), (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, (true) || false)))), (true) && true), false, false))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) && true))), (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), (_GLF_IDENTITY(true, (true) && true)) && true))), bool(bvec2(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), (_GLF_IDENTITY(true, (true) && true)) && true))), false)))) || false))), (true) && true), false, false)), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, _GLF_IDENTITY(true && (_GLF_IDENTITY(true, (true) && true)), false || (true && (_GLF_IDENTITY(true, (true) && true))))))), (true) && true), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, _GLF_IDENTITY(true && (_GLF_IDENTITY(true, (true) && true)), false || (true && (_GLF_IDENTITY(true, (true) && true))))))), (true) && true), true && (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, _GLF_IDENTITY(true && (_GLF_IDENTITY(true, (true) && true)), false || (true && (_GLF_IDENTITY(true, (true) && true))))))), (true) && true))), false, true, true))), false, false)), false || (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, false || _GLF_IDENTITY((_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) && true)))), true && _GLF_IDENTITY(((_GLF_IDENTITY(true, true && (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY((true), true && ((true))) && true))))), false || (((_GLF_IDENTITY(true, true && (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY((true), true && ((true))) && true))))))))), (true) && _GLF_IDENTITY(true, true && (true))), false, false)))), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))) || (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) && true))))), (true) && true), false, false)), false || (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))), false || (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bool((true))), bool(bvec3(bool(bool((true))), false, false)))) && true))))), (true) && true), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))), false || (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bool((true))), bool(bvec3(bool(bool((true))), false, false)))) && true))))), (true) && true), false, false), false))))))) || false), false))), (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, (true) || false)))), (true) && true), false, false))) || false)))))))))
                  {
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     return;
                    }
                   else
                    {
                    }
                  }
                 else
                  {
                  }
                }
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
             if(_GLF_DEAD(false))
              return;
            }
          }
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY((24505 & 0), ((24505 & 0)) * (1 | 0))); _injected_loop_counter --)
              {
               if(_GLF_DEAD(false))
                return;
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), ! _GLF_IDENTITY((! (bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), max(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)))).x > injectionSwitch.y, _GLF_IDENTITY(false || (injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false) || (injectionSwitch.x > injectionSwitch.y), bool(bvec4(false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), false, true, true)))) || false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((! (bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), max(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)))).x > injectionSwitch.y, _GLF_IDENTITY(false || (injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false) || (injectionSwitch.x > injectionSwitch.y), bool(bvec4(false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), false, true, true)))) || false)))))))), _GLF_IDENTITY(bool(bvec3(bool(injectionSwitch.x > injectionSwitch.y), true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))), ((_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y))))) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bool(bvec4(bool(_GLF_IDENTITY(bvec3(bool(injectionSwitch.x > injectionSwitch.y), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))), true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y)), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y))) && true))), bvec3(bvec3(bvec3(bvec3(bool(injectionSwitch.x > injectionSwitch.y), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bool(injectionSwitch.x > injectionSwitch.y), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, bool(bool(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y))))))), bvec3(bvec3(bvec3(bvec3(bool(injectionSwitch.x > injectionSwitch.y), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))), false, true, true))))), (bool(bool(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(3993.4463) : injectionSwitch.x)) > injectionSwitch.y))) || false)), _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, true && (true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec2(_GLF_IDENTITY(true, true && (true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)), (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), injectionSwitch.y, injectionSwitch.y)), (true ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(-22.18), (true ? true ? injectionSwitch.y : _GLF_FUZZED(-22.18) : _GLF_FUZZED(sqrt(-5682.6265)))))))) : _GLF_FUZZED(3.1)))))))))
              return;
             if(_GLF_DEAD(false))
              return;
            }
           else
            {
            }
          }
         else
          {
          }
         return;
        }
      }
     else
      {
      }
     do
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, int(_GLF_IDENTITY(ivec3(_injected_loop_counter, 1, 0), ivec3(0, 0, 0) | (ivec3(_injected_loop_counter, 1, 0))))) != 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
          continue;
         subgroupAll(true);
         if(_GLF_DEAD(false))
          break;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && _GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bool((! (false)))), ! (! (bool(bool((! (false)))))))))))) || false), (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED((vec2(2705.9711, 43.64))))).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
            {
             if(_GLF_DEAD(false))
              return;
             return;
            }
          }
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           return;
           for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), true, false), bvec3(bvec4(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), true, false), true)))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), true, false), bvec3(bvec4(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), true, false), true)))))))); _injected_loop_counter --)
            {
             if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               for(int _injected_loop_counter = _GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, _GLF_IDENTITY(1, (1) >> 0), 1), ~ (~ (clamp(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) - 0), _GLF_IDENTITY(1, (1) >> 0), 1))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(1), int(1)))); _injected_loop_counter --)
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  continue;
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (int(_GLF_ONE(1.0, injectionSwitch.y)) ^ 0)); _injected_loop_counter ++)
                    {
                     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), ! (! (_GLF_IDENTITY(! (! (false)), true && (! (! (false)))))))) && true)), false, true)), bool(bvec4(bool(bvec3(false, false, true)), false, true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, ! (! (false))))), (bool(bool(_GLF_IDENTITY(false, ! (! (false)))))) || false))))))))
                      return;
                    }
                  }
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
              }
             else
              {
              }
            }
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) * 1)) | (_GLF_IDENTITY(1, min(1, 1)))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             return;
            }
          }
         if(_GLF_DEAD(false))
          return;
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         do
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - abs(0.0))), float(_GLF_FUZZED(3902.4659)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))));
        }
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
