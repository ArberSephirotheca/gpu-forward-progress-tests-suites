#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 0) uniform buf0 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = _GLF_IDENTITY(16, (false ? _GLF_FUZZED(-12796) : 16));
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y) || false)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), true && ((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true), true))))))))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED((vec2(2218.4530, -2.8) / 9.8)))).y)), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), false || (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))), false), false, false)))), bool(bool(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))), false), false, false))))))))))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED((vec2(2218.4530, -2.8) / 9.8)))).y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), bvec3(bvec3(bvec3((_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y), false || (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))))))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED((vec2(2218.4530, -2.8) / 9.8)))).y)), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(9342.1257)), bool(false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), true, false)))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(! (! (false)), true, false), bvec3(bvec4(bvec3(! (! (false)), true, false), true)))), (bool(_GLF_IDENTITY(bvec3(! (! (false)), true, false), bvec3(bvec4(bvec3(! (! (false)), true, false), true))))) && true)))))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), true)))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), true)))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), true))))))))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 0.0)), mat2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-5235.2067) : 1.0))) * (vec2(vec4(injectionSwitch, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, min(0.0, 0.0))), float(_GLF_IDENTITY(_GLF_FUZZED(vec4(3306.6966, -54.93, -14.89, _GLF_IDENTITY(-640.783, _GLF_IDENTITY(clamp(-640.783, _GLF_IDENTITY(-640.783, max(-640.783, -640.783)), -640.783), max(clamp(-640.783, _GLF_IDENTITY(-640.783, max(-640.783, -640.783)), -640.783), clamp(-640.783, _GLF_IDENTITY(-640.783, max(-640.783, -640.783)), -640.783))))).y), _GLF_IDENTITY(max(_GLF_FUZZED(vec4(3306.6966, -54.93, -14.89, _GLF_IDENTITY(-640.783, _GLF_IDENTITY(clamp(-640.783, _GLF_IDENTITY(-640.783, max(-640.783, -640.783)), -640.783), clamp(clamp(-640.783, _GLF_IDENTITY(-640.783, max(-640.783, -640.783)), -640.783), clamp(-640.783, _GLF_IDENTITY(-640.783, max(-640.783, -640.783)), -640.783), clamp(-640.783, _GLF_IDENTITY(-640.783, max(-640.783, -640.783)), -640.783))))).y), _GLF_FUZZED(vec4(3306.6966, -54.93, -14.89, _GLF_IDENTITY(-640.783, clamp(-640.783, _GLF_IDENTITY(-640.783, max(-640.783, -640.783)), -640.783))).y)), mix(float(max(_GLF_FUZZED(vec4(3306.6966, -54.93, -14.89, _GLF_IDENTITY(-640.783, _GLF_IDENTITY(clamp(-640.783, _GLF_IDENTITY(-640.783, max(-640.783, _GLF_IDENTITY(-640.783, clamp(-640.783, -640.783, -640.783)))), -640.783), clamp(clamp(-640.783, _GLF_IDENTITY(-640.783, max(-640.783, -640.783)), -640.783), clamp(-640.783, _GLF_IDENTITY(-640.783, max(-640.783, -640.783)), -640.783), clamp(-640.783, _GLF_IDENTITY(-640.783, max(-640.783, -640.783)), -640.783))))).y), _GLF_FUZZED(vec4(3306.6966, -54.93, -14.89, _GLF_IDENTITY(-640.783, clamp(-640.783, _GLF_IDENTITY(-640.783, max(-640.783, -640.783)), -640.783))).y))), float(_GLF_FUZZED(-6.5)), bool(false))))), bool(false))), 0.0))))), vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) - vec2(0.0, 0.0))), injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ((false)) && true))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true, true, false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     barrier();
    }
   barrier();
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(1u), uvec3(1u))) >> _GLF_IDENTITY(uvec3(1u), uvec3(1u))) * (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | uvec3(0u, 0u, 0u)))).x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))))))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), false || (bool(bvec2(false, false)))))))
      return;
     return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, min(_GLF_IDENTITY(workgroup_id, min(workgroup_id, _GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u))), workgroup_id));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(uvec3(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u)) >> 0u) + subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), (_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)) >> 0u))), _GLF_IDENTITY(0u, 0u | (0u)), 1u))) + subgroup_local_id, 0u ^ (workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), 1u, 0u, (0u >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), clamp(uint(1u), uint(1u), uint(1u))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), clamp(uint(1u), uint(1u), uint(1u))), 0u | (_GLF_IDENTITY(uint(1u), clamp(uint(1u), uint(1u), uint(1u)))))))))), (uvec4(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), 1u, 0u, (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(84514u) : 0u)) >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), clamp(uint(1u), uint(1u), uint(1u))))))) / uvec4(1u, 1u, _GLF_IDENTITY(1u, ~ (~ (1u))), 1u)))) * subgroup_size + subgroup_local_id));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) | (73223u & (0u << _GLF_IDENTITY(uint(6u), uint(6u))))) + (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, int(int(1)))) % subgroup_size, clamp((subgroup_local_id + _GLF_IDENTITY(1, int(_GLF_IDENTITY(int(1), 0 ^ (int(1)))))) % subgroup_size, (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) / uint(_GLF_ONE(1.0, injectionSwitch.y))) - _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(6u), uint(6u))), ((0u >> _GLF_IDENTITY(uint(6u), uint(6u)))) << 0u)) + _GLF_IDENTITY(1, int(int(1)))) % subgroup_size, _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, int(int(1)))) % subgroup_size, min((subgroup_local_id + _GLF_IDENTITY(1, int(int(1)))) % subgroup_size, (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, int(int(1))), (_GLF_IDENTITY(1, int(int(1)))) >> 0), 0 + (_GLF_IDENTITY(_GLF_IDENTITY(1, int(int(1))), (_GLF_IDENTITY(1, int(int(1)))) >> 0))), min(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, int(int(1))), (_GLF_IDENTITY(1, int(int(1)))) >> 0), 0 + (_GLF_IDENTITY(_GLF_IDENTITY(1, int(int(1))), (_GLF_IDENTITY(1, int(int(1)))) >> 0))), subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, int(int(1))), (_GLF_IDENTITY(1, int(int(1)))) >> 0), 0 + (_GLF_IDENTITY(_GLF_IDENTITY(1, int(int(1))), (_GLF_IDENTITY(1, int(int(1)))) >> 0)))))) % subgroup_size)))));
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  barrier();
 buf[virtual_gid] = 1;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, sqrt(vec2(1.0, 1.0)) * (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 0.0, 1.0, 0.0, 1.0), mat3x2(mat4(mat3x2(injectionSwitch, 0.0, 1.0, 0.0, 1.0))))))))[1])).x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))), true && (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))))))))
        return;
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(subgroup_local_id + 1, 0u | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, ~ _GLF_IDENTITY((~ (subgroup_local_id + 1)), ((~ (subgroup_local_id + 1))) + (177378u & 0u)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, ~ _GLF_IDENTITY((~ (subgroup_local_id + 1)), ((~ (subgroup_local_id + 1))) + (177378u & 0u)))), uint(uvec4((_GLF_IDENTITY(subgroup_local_id + 1, ~ _GLF_IDENTITY((~ (subgroup_local_id + 1)), ((~ (subgroup_local_id + 1))) + (177378u & 0u)))), 1u, 1u, (0u ^ 1u))))), (~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, ~ _GLF_IDENTITY((~ (subgroup_local_id + 1)), ((~ (subgroup_local_id + 1))) + (177378u & 0u)))), uint(uvec4((_GLF_IDENTITY(subgroup_local_id + 1, ~ _GLF_IDENTITY((~ (subgroup_local_id + 1)), ((~ (subgroup_local_id + 1))) + (177378u & 0u)))), 1u, 1u, (0u ^ 1u)))))) * 1u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, ~ _GLF_IDENTITY((~ (subgroup_local_id + 1)), ((~ (subgroup_local_id + 1))) + (177378u & 0u)))), uint(uvec4((_GLF_IDENTITY(subgroup_local_id + 1, ~ _GLF_IDENTITY((~ (subgroup_local_id + 1)), ((~ (subgroup_local_id + 1))) + (177378u & 0u)))), 1u, 1u, (0u ^ 1u))))), (~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, ~ _GLF_IDENTITY((~ (subgroup_local_id + 1)), ((~ (subgroup_local_id + 1))) + (177378u & 0u)))), uint(uvec4((_GLF_IDENTITY(subgroup_local_id + 1, ~ _GLF_IDENTITY((~ (subgroup_local_id + 1)), ((~ (subgroup_local_id + 1))) + (177378u & 0u)))), 1u, 1u, (0u ^ 1u)))))) * 1u)), 1u, 0u), min(uvec3(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, ~ _GLF_IDENTITY((~ (subgroup_local_id + 1)), ((~ (subgroup_local_id + 1))) + (177378u & 0u)))), uint(uvec4((_GLF_IDENTITY(subgroup_local_id + 1, ~ _GLF_IDENTITY((~ (subgroup_local_id + 1)), ((~ (subgroup_local_id + 1))) + (177378u & 0u)))), 1u, 1u, (0u ^ 1u))))), (~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, ~ _GLF_IDENTITY((~ (subgroup_local_id + 1)), ((~ (subgroup_local_id + 1))) + (177378u & 0u)))), uint(uvec4((_GLF_IDENTITY(subgroup_local_id + 1, ~ _GLF_IDENTITY((~ (subgroup_local_id + 1)), ((~ (subgroup_local_id + 1))) + (177378u & 0u)))), 1u, 1u, (0u ^ 1u)))))) * 1u)), 1u, 0u), _GLF_IDENTITY(uvec3(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, ~ _GLF_IDENTITY((~ (subgroup_local_id + 1)), ((~ (subgroup_local_id + 1))) + (177378u & 0u)))), uint(uvec4((_GLF_IDENTITY(subgroup_local_id + 1, ~ _GLF_IDENTITY((~ (subgroup_local_id + 1)), ((~ (subgroup_local_id + 1))) + (177378u & 0u)))), 1u, 1u, (0u ^ 1u))))), (~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, ~ _GLF_IDENTITY((~ (subgroup_local_id + 1)), ((~ (subgroup_local_id + 1))) + (177378u & 0u)))), uint(uvec4((_GLF_IDENTITY(subgroup_local_id + 1, ~ _GLF_IDENTITY((~ (subgroup_local_id + 1)), ((~ (subgroup_local_id + 1))) + (177378u & 0u)))), 1u, 1u, (0u ^ 1u)))))) * 1u)), 1u, 0u), uvec3(uvec4(uvec3(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, ~ _GLF_IDENTITY((~ (subgroup_local_id + 1)), ((~ (subgroup_local_id + 1))) + (177378u & 0u)))), uint(uvec4((_GLF_IDENTITY(subgroup_local_id + 1, ~ _GLF_IDENTITY((~ (subgroup_local_id + 1)), ((~ (subgroup_local_id + 1))) + (177378u & 0u)))), 1u, 1u, (0u ^ 1u))))), (~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, ~ _GLF_IDENTITY((~ (subgroup_local_id + 1)), ((~ (subgroup_local_id + 1))) + (177378u & 0u)))), uint(uvec4((_GLF_IDENTITY(subgroup_local_id + 1, ~ _GLF_IDENTITY((~ (subgroup_local_id + 1)), ((~ (subgroup_local_id + 1))) + (177378u & 0u)))), 1u, 1u, (0u ^ 1u)))))) * 1u)), 1u, 0u), 0u)))))), 0u + (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, ~ _GLF_IDENTITY((~ (subgroup_local_id + 1)), ((~ (subgroup_local_id + 1))) + (177378u & 0u)))), uint(uvec4((_GLF_IDENTITY(subgroup_local_id + 1, ~ _GLF_IDENTITY((~ (subgroup_local_id + 1)), ((~ (subgroup_local_id + 1))) + (177378u & 0u)))), 1u, 1u, (0u ^ 1u))))), (~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, ~ _GLF_IDENTITY((~ (subgroup_local_id + 1)), ((~ (subgroup_local_id + 1))) + (177378u & 0u)))), uint(uvec4((_GLF_IDENTITY(subgroup_local_id + 1, ~ _GLF_IDENTITY((~ (subgroup_local_id + 1)), ((~ (subgroup_local_id + 1))) + (177378u & 0u)))), 1u, 1u, (0u ^ 1u)))))) * 1u)), 1u, 0u), min(uvec3(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, ~ _GLF_IDENTITY((~ (subgroup_local_id + 1)), ((~ (subgroup_local_id + 1))) + (177378u & 0u)))), uint(uvec4((_GLF_IDENTITY(subgroup_local_id + 1, ~ _GLF_IDENTITY((~ (subgroup_local_id + 1)), ((~ (subgroup_local_id + 1))) + (177378u & 0u)))), 1u, 1u, (0u ^ 1u))))), (~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, ~ _GLF_IDENTITY((~ (subgroup_local_id + 1)), ((~ (subgroup_local_id + 1))) + (177378u & 0u)))), uint(uvec4((_GLF_IDENTITY(subgroup_local_id + 1, ~ _GLF_IDENTITY((~ (subgroup_local_id + 1)), ((~ (subgroup_local_id + 1))) + (177378u & 0u)))), 1u, 1u, (0u ^ 1u)))))) * 1u)), 1u, 0u), _GLF_IDENTITY(uvec3(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, ~ _GLF_IDENTITY((~ (subgroup_local_id + 1)), ((~ (subgroup_local_id + 1))) + (177378u & 0u)))), uint(uvec4((_GLF_IDENTITY(subgroup_local_id + 1, ~ _GLF_IDENTITY((~ (subgroup_local_id + 1)), ((~ (subgroup_local_id + 1))) + (177378u & 0u)))), 1u, 1u, (0u ^ 1u))))), (~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, ~ _GLF_IDENTITY((~ (subgroup_local_id + 1)), ((~ (subgroup_local_id + 1))) + (177378u & 0u)))), uint(uvec4((_GLF_IDENTITY(subgroup_local_id + 1, ~ _GLF_IDENTITY((~ (subgroup_local_id + 1)), ((~ (subgroup_local_id + 1))) + (177378u & 0u)))), 1u, 1u, (0u ^ 1u)))))) * 1u)), 1u, 0u), uvec3(uvec4(uvec3(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, ~ _GLF_IDENTITY((~ (subgroup_local_id + 1)), ((~ (subgroup_local_id + 1))) + (177378u & 0u)))), uint(uvec4((_GLF_IDENTITY(subgroup_local_id + 1, ~ _GLF_IDENTITY((~ (subgroup_local_id + 1)), ((~ (subgroup_local_id + 1))) + (177378u & 0u)))), 1u, 1u, (0u ^ 1u))))), (~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, ~ _GLF_IDENTITY((~ (subgroup_local_id + 1)), ((~ (subgroup_local_id + 1))) + (177378u & 0u)))), uint(uvec4((_GLF_IDENTITY(subgroup_local_id + 1, ~ _GLF_IDENTITY((~ (subgroup_local_id + 1)), ((~ (subgroup_local_id + 1))) + (177378u & 0u)))), 1u, 1u, (0u ^ 1u)))))) * 1u)), 1u, 0u), 0u)))))), (uint(_GLF_IDENTITY(uvec3(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, ~ _GLF_IDENTITY((~ (subgroup_local_id + 1)), ((~ (subgroup_local_id + 1))) + (177378u & 0u)))), uint(uvec4((_GLF_IDENTITY(subgroup_local_id + 1, ~ _GLF_IDENTITY((~ (subgroup_local_id + 1)), ((~ (subgroup_local_id + 1))) + (177378u & 0u)))), 1u, 1u, (0u ^ 1u))))), (~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, ~ _GLF_IDENTITY((~ (subgroup_local_id + 1)), ((~ (subgroup_local_id + 1))) + (177378u & 0u)))), uint(uvec4((_GLF_IDENTITY(subgroup_local_id + 1, ~ _GLF_IDENTITY((~ (subgroup_local_id + 1)), ((~ (subgroup_local_id + 1))) + (177378u & 0u)))), 1u, 1u, (0u ^ 1u)))))) * 1u)), 1u, 0u), min(uvec3(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, ~ _GLF_IDENTITY((~ (subgroup_local_id + 1)), ((~ (subgroup_local_id + 1))) + (177378u & 0u)))), uint(uvec4((_GLF_IDENTITY(subgroup_local_id + 1, ~ _GLF_IDENTITY((~ (subgroup_local_id + 1)), ((~ (subgroup_local_id + 1))) + (177378u & 0u)))), 1u, 1u, (0u ^ 1u))))), (~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, ~ _GLF_IDENTITY((~ (subgroup_local_id + 1)), ((~ (subgroup_local_id + 1))) + (177378u & 0u)))), uint(uvec4((_GLF_IDENTITY(subgroup_local_id + 1, ~ _GLF_IDENTITY((~ (subgroup_local_id + 1)), ((~ (subgroup_local_id + 1))) + (177378u & 0u)))), 1u, 1u, (0u ^ 1u)))))) * 1u)), 1u, 0u), _GLF_IDENTITY(uvec3(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, ~ _GLF_IDENTITY((~ (subgroup_local_id + 1)), ((~ (subgroup_local_id + 1))) + (177378u & 0u)))), uint(uvec4((_GLF_IDENTITY(subgroup_local_id + 1, ~ _GLF_IDENTITY((~ (subgroup_local_id + 1)), ((~ (subgroup_local_id + 1))) + (177378u & 0u)))), 1u, 1u, (0u ^ 1u))))), (~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, ~ _GLF_IDENTITY((~ (subgroup_local_id + 1)), ((~ (subgroup_local_id + 1))) + (177378u & 0u)))), uint(uvec4((_GLF_IDENTITY(subgroup_local_id + 1, ~ _GLF_IDENTITY((~ (subgroup_local_id + 1)), ((~ (subgroup_local_id + 1))) + (177378u & 0u)))), 1u, 1u, (0u ^ 1u)))))) * 1u)), 1u, 0u), uvec3(uvec4(uvec3(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, ~ _GLF_IDENTITY((~ (subgroup_local_id + 1)), ((~ (subgroup_local_id + 1))) + (177378u & 0u)))), uint(uvec4((_GLF_IDENTITY(subgroup_local_id + 1, ~ _GLF_IDENTITY((~ (subgroup_local_id + 1)), ((~ (subgroup_local_id + 1))) + (177378u & 0u)))), 1u, 1u, (0u ^ 1u))))), (~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, ~ _GLF_IDENTITY((~ (subgroup_local_id + 1)), ((~ (subgroup_local_id + 1))) + (177378u & 0u)))), uint(uvec4((_GLF_IDENTITY(subgroup_local_id + 1, ~ _GLF_IDENTITY((~ (subgroup_local_id + 1)), ((~ (subgroup_local_id + 1))) + (177378u & 0u)))), 1u, 1u, (0u ^ 1u)))))) * 1u)), 1u, 0u), 0u))))))) >> 0u)))))) < _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), subgroup_size)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, (false) || false)))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(vec4(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), 0.0, 1.0))))).y))))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))) && true, ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))) && true, (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false, ! (! (false))) || (_GLF_DEAD(false)))))), false || ((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))))) && true) && true))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   buf[next_virtual_gid] = 2;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)) && true)))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), false || (_GLF_IDENTITY(false, false || (false)))))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(6842.3689)), vec2(_GLF_FUZZED(2.5), (injectionSwitch)[1]), bvec2(false, true))))[0], _GLF_FUZZED((-5227.2506))), vec2(_GLF_FUZZED(91.93), (injectionSwitch)[1]), bvec2(false, true)), vec2(mat4x2(mix(vec2((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(8428.1431), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(-6547.5876)), bvec2(true, false))))[0], _GLF_FUZZED((-5227.2506))), vec2(_GLF_FUZZED(91.93), (injectionSwitch)[1]), bvec2(false, true)), 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0), vec3(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-6.9))), 1.0))), tan(0.0), 1.0, exp(0.0))))), 1.0, 0.0, 0.0, 0.0), mat2(1.0) * (mat3x2(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((-5227.2506))), vec2(_GLF_FUZZED(91.93), (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(false, true)), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec2(false, true)), true), bvec3(bvec4(bvec3(bvec2(bvec2(false, true)), true), true)))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(false, true)), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec2(false, true)), true), bvec3(bvec4(bvec3(bvec2(bvec2(false, true)), true), true)))))))))))), 1.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(-4.3, -445.097, -98.41, -710.522)) : mat2(1.0))) * (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(6842.3689)), vec2(_GLF_FUZZED(2.5), (injectionSwitch)[1]), bvec2(false, true))))[0], _GLF_FUZZED((-5227.2506))), vec2(_GLF_FUZZED(91.93), (injectionSwitch)[1]), bvec2(false, true)), vec2(mat4x2(mix(vec2((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(8428.1431), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(-6547.5876)), bvec2(true, false))))[0], _GLF_FUZZED((-5227.2506))), vec2(_GLF_FUZZED(91.93), (injectionSwitch)[1]), bvec2(false, true)), 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0), vec3(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-6.9))), 1.0))), tan(0.0), 1.0, exp(0.0))))), 1.0, 0.0, 0.0, 0.0), mat2(1.0) * (mat3x2(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((-5227.2506))), vec2(_GLF_FUZZED(91.93), (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(false, true)), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec2(false, true)), true), bvec3(bvec4(bvec3(bvec2(bvec2(false, true)), true), true)))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(false, true)), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec2(false, true)), true), bvec3(bvec4(bvec3(bvec2(bvec2(false, true)), true), true)))))))))))), 1.0, 0.0, 0.0, 0.0))))))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-8923.0303, -7.5)), (_GLF_FUZZED(vec2(-8923.0303, -7.5))) / vec2(1.0, 1.0)) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y))))
      barrier();
     return;
    }
   subgroupAll(false);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(40.29, 10.06)))).y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(3.8)), vec2(_GLF_FUZZED(-6.0), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(vec2(40.29, 10.06), (_GLF_IDENTITY(vec2(40.29, 10.06), mix(vec2((vec2(40.29, 10.06))[0], _GLF_FUZZED(8.7)), vec2(_GLF_FUZZED(8540.3416), (vec2(40.29, 10.06))[1]), bvec2(false, true)))) * vec2(1.0, 1.0))), clamp(_GLF_FUZZED(_GLF_IDENTITY(vec2(40.29, 10.06), (_GLF_IDENTITY(vec2(40.29, 10.06), mix(vec2((vec2(40.29, 10.06))[0], _GLF_FUZZED(8.7)), vec2(_GLF_FUZZED(8540.3416), (vec2(40.29, 10.06))[1]), bvec2(false, true)))) * vec2(1.0, 1.0))), _GLF_FUZZED(_GLF_IDENTITY(vec2(40.29, 10.06), (_GLF_IDENTITY(vec2(40.29, 10.06), mix(vec2((vec2(40.29, 10.06))[0], _GLF_FUZZED(8.7)), vec2(_GLF_FUZZED(8540.3416), (vec2(40.29, 10.06))[1]), bvec2(false, true)))) * vec2(1.0, 1.0))), _GLF_FUZZED(_GLF_IDENTITY(vec2(40.29, 10.06), (_GLF_IDENTITY(vec2(40.29, 10.06), mix(vec2((vec2(40.29, 10.06))[0], _GLF_FUZZED(8.7)), vec2(_GLF_FUZZED(8540.3416), (vec2(40.29, 10.06))[1]), bvec2(false, true)))) * vec2(1.0, 1.0))))), max(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(vec2(40.29, 10.06), (_GLF_IDENTITY(vec2(40.29, 10.06), mix(vec2((vec2(40.29, 10.06))[0], _GLF_FUZZED(8.7)), vec2(_GLF_FUZZED(8540.3416), (vec2(40.29, 10.06))[1]), bvec2(false, true)))) * vec2(1.0, 1.0))), clamp(_GLF_FUZZED(_GLF_IDENTITY(vec2(40.29, 10.06), (_GLF_IDENTITY(vec2(40.29, 10.06), mix(vec2((vec2(40.29, 10.06))[0], _GLF_FUZZED(8.7)), vec2(_GLF_FUZZED(8540.3416), (vec2(40.29, 10.06))[1]), bvec2(false, true)))) * vec2(1.0, 1.0))), _GLF_FUZZED(_GLF_IDENTITY(vec2(40.29, 10.06), (_GLF_IDENTITY(vec2(40.29, 10.06), mix(vec2((vec2(40.29, 10.06))[0], _GLF_FUZZED(8.7)), vec2(_GLF_FUZZED(8540.3416), (vec2(40.29, 10.06))[1]), bvec2(false, true)))) * vec2(1.0, 1.0))), _GLF_FUZZED(_GLF_IDENTITY(vec2(40.29, 10.06), (_GLF_IDENTITY(vec2(40.29, 10.06), mix(vec2((vec2(40.29, 10.06))[0], _GLF_FUZZED(8.7)), vec2(_GLF_FUZZED(8540.3416), (vec2(40.29, 10.06))[1]), bvec2(false, true)))) * vec2(1.0, 1.0))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(vec2(40.29, 10.06), (_GLF_IDENTITY(vec2(40.29, 10.06), mix(vec2((vec2(40.29, 10.06))[0], _GLF_FUZZED(8.7)), vec2(_GLF_FUZZED(8540.3416), (vec2(40.29, 10.06))[1]), bvec2(false, true)))) * vec2(1.0, 1.0))), clamp(_GLF_FUZZED(_GLF_IDENTITY(vec2(40.29, 10.06), (_GLF_IDENTITY(vec2(40.29, 10.06), mix(vec2((vec2(40.29, 10.06))[0], _GLF_FUZZED(8.7)), vec2(_GLF_FUZZED(8540.3416), (vec2(40.29, 10.06))[1]), bvec2(false, true)))) * vec2(1.0, 1.0))), _GLF_FUZZED(_GLF_IDENTITY(vec2(40.29, 10.06), (_GLF_IDENTITY(vec2(40.29, 10.06), mix(vec2((vec2(40.29, 10.06))[0], _GLF_FUZZED(8.7)), vec2(_GLF_FUZZED(8540.3416), (vec2(40.29, 10.06))[1]), bvec2(false, true)))) * vec2(1.0, 1.0))), _GLF_FUZZED(_GLF_IDENTITY(vec2(40.29, 10.06), (_GLF_IDENTITY(vec2(40.29, 10.06), mix(vec2((vec2(40.29, 10.06))[0], _GLF_FUZZED(8.7)), vec2(_GLF_FUZZED(8540.3416), (vec2(40.29, 10.06))[1]), bvec2(false, true)))) * vec2(1.0, 1.0))))), (false ? _GLF_FUZZED(vec2(5.9, -3.0)) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(vec2(40.29, 10.06), (_GLF_IDENTITY(vec2(40.29, 10.06), mix(vec2((vec2(40.29, 10.06))[0], _GLF_FUZZED(8.7)), vec2(_GLF_FUZZED(8540.3416), (vec2(40.29, 10.06))[1]), bvec2(false, true)))) * vec2(1.0, 1.0))), clamp(_GLF_FUZZED(_GLF_IDENTITY(vec2(40.29, 10.06), (_GLF_IDENTITY(vec2(40.29, 10.06), mix(vec2((vec2(40.29, 10.06))[0], _GLF_FUZZED(8.7)), vec2(_GLF_FUZZED(8540.3416), (vec2(40.29, 10.06))[1]), bvec2(false, true)))) * vec2(1.0, 1.0))), _GLF_FUZZED(_GLF_IDENTITY(vec2(40.29, 10.06), (_GLF_IDENTITY(vec2(40.29, 10.06), mix(vec2((vec2(40.29, 10.06))[0], _GLF_FUZZED(8.7)), vec2(_GLF_FUZZED(8540.3416), (vec2(40.29, 10.06))[1]), bvec2(false, true)))) * vec2(1.0, 1.0))), _GLF_FUZZED(_GLF_IDENTITY(vec2(40.29, 10.06), (_GLF_IDENTITY(vec2(40.29, 10.06), mix(vec2((vec2(40.29, 10.06))[0], _GLF_FUZZED(8.7)), vec2(_GLF_FUZZED(8540.3416), (vec2(40.29, 10.06))[1]), bvec2(false, true)))) * vec2(1.0, 1.0)))))))))), vec2(mat3x2((true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(vec2(40.29, 10.06), (_GLF_IDENTITY(vec2(40.29, 10.06), mix(vec2((vec2(40.29, 10.06))[0], _GLF_FUZZED(8.7)), vec2(_GLF_FUZZED(8540.3416), (vec2(40.29, 10.06))[1]), bvec2(false, true)))) * vec2(1.0, 1.0))), clamp(_GLF_FUZZED(_GLF_IDENTITY(vec2(40.29, 10.06), (_GLF_IDENTITY(vec2(40.29, 10.06), mix(vec2((vec2(40.29, 10.06))[0], _GLF_FUZZED(8.7)), vec2(_GLF_FUZZED(8540.3416), (vec2(40.29, 10.06))[1]), bvec2(false, true)))) * vec2(1.0, 1.0))), _GLF_FUZZED(_GLF_IDENTITY(vec2(40.29, 10.06), (_GLF_IDENTITY(vec2(40.29, 10.06), mix(vec2((vec2(40.29, 10.06))[0], _GLF_FUZZED(8.7)), vec2(_GLF_FUZZED(8540.3416), (vec2(40.29, 10.06))[1]), bvec2(false, true)))) * vec2(1.0, 1.0))), _GLF_FUZZED(_GLF_IDENTITY(vec2(40.29, 10.06), (_GLF_IDENTITY(vec2(40.29, 10.06), mix(vec2((vec2(40.29, 10.06))[0], _GLF_FUZZED(8.7)), vec2(_GLF_FUZZED(8540.3416), (vec2(40.29, 10.06))[1]), bvec2(false, true)))) * vec2(1.0, 1.0))))), max(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(vec2(40.29, 10.06), (_GLF_IDENTITY(vec2(40.29, 10.06), mix(vec2((vec2(40.29, 10.06))[0], _GLF_FUZZED(8.7)), vec2(_GLF_FUZZED(8540.3416), (vec2(40.29, 10.06))[1]), bvec2(false, true)))) * vec2(1.0, 1.0))), clamp(_GLF_FUZZED(_GLF_IDENTITY(vec2(40.29, 10.06), (_GLF_IDENTITY(vec2(40.29, 10.06), mix(vec2((vec2(40.29, 10.06))[0], _GLF_FUZZED(8.7)), vec2(_GLF_FUZZED(8540.3416), (vec2(40.29, 10.06))[1]), bvec2(false, true)))) * vec2(1.0, 1.0))), _GLF_FUZZED(_GLF_IDENTITY(vec2(40.29, 10.06), (_GLF_IDENTITY(vec2(40.29, 10.06), mix(vec2((vec2(40.29, 10.06))[0], _GLF_FUZZED(8.7)), vec2(_GLF_FUZZED(8540.3416), (vec2(40.29, 10.06))[1]), bvec2(false, true)))) * vec2(1.0, 1.0))), _GLF_FUZZED(_GLF_IDENTITY(vec2(40.29, 10.06), (_GLF_IDENTITY(vec2(40.29, 10.06), mix(vec2((vec2(40.29, 10.06))[0], _GLF_FUZZED(8.7)), vec2(_GLF_FUZZED(8540.3416), (vec2(40.29, 10.06))[1]), bvec2(false, true)))) * vec2(1.0, 1.0))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(vec2(40.29, 10.06), (_GLF_IDENTITY(vec2(40.29, 10.06), mix(vec2((vec2(40.29, 10.06))[0], _GLF_FUZZED(8.7)), vec2(_GLF_FUZZED(8540.3416), (vec2(40.29, 10.06))[1]), bvec2(false, true)))) * vec2(1.0, 1.0))), clamp(_GLF_FUZZED(_GLF_IDENTITY(vec2(40.29, 10.06), (_GLF_IDENTITY(vec2(40.29, 10.06), mix(vec2((vec2(40.29, 10.06))[0], _GLF_FUZZED(8.7)), vec2(_GLF_FUZZED(8540.3416), (vec2(40.29, 10.06))[1]), bvec2(false, true)))) * vec2(1.0, 1.0))), _GLF_FUZZED(_GLF_IDENTITY(vec2(40.29, 10.06), (_GLF_IDENTITY(vec2(40.29, 10.06), mix(vec2((vec2(40.29, 10.06))[0], _GLF_FUZZED(8.7)), vec2(_GLF_FUZZED(8540.3416), (vec2(40.29, 10.06))[1]), bvec2(false, true)))) * vec2(1.0, 1.0))), _GLF_FUZZED(_GLF_IDENTITY(vec2(40.29, 10.06), (_GLF_IDENTITY(vec2(40.29, 10.06), mix(vec2((vec2(40.29, 10.06))[0], _GLF_FUZZED(8.7)), vec2(_GLF_FUZZED(8540.3416), (vec2(40.29, 10.06))[1]), bvec2(false, true)))) * vec2(1.0, 1.0))))), (false ? _GLF_FUZZED(vec2(5.9, -3.0)) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(vec2(40.29, 10.06), (_GLF_IDENTITY(vec2(40.29, 10.06), mix(vec2((vec2(40.29, 10.06))[0], _GLF_FUZZED(8.7)), vec2(_GLF_FUZZED(8540.3416), (vec2(40.29, 10.06))[1]), bvec2(false, true)))) * vec2(1.0, 1.0))), clamp(_GLF_FUZZED(_GLF_IDENTITY(vec2(40.29, 10.06), (_GLF_IDENTITY(vec2(40.29, 10.06), mix(vec2((vec2(40.29, 10.06))[0], _GLF_FUZZED(8.7)), vec2(_GLF_FUZZED(8540.3416), (vec2(40.29, 10.06))[1]), bvec2(false, true)))) * vec2(1.0, 1.0))), _GLF_FUZZED(_GLF_IDENTITY(vec2(40.29, 10.06), (_GLF_IDENTITY(vec2(40.29, 10.06), mix(vec2((vec2(40.29, 10.06))[0], _GLF_FUZZED(8.7)), vec2(_GLF_FUZZED(8540.3416), (vec2(40.29, 10.06))[1]), bvec2(false, true)))) * vec2(1.0, 1.0))), _GLF_FUZZED(_GLF_IDENTITY(vec2(40.29, 10.06), (_GLF_IDENTITY(vec2(40.29, 10.06), mix(vec2((vec2(40.29, 10.06))[0], _GLF_FUZZED(8.7)), vec2(_GLF_FUZZED(8540.3416), (vec2(40.29, 10.06))[1]), bvec2(false, true)))) * vec2(1.0, 1.0)))))))))), abs(1.0), sin(0.0), sqrt(1.0), 1.0)))).y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-3.6, -1.0)) : injectionSwitch)), injectionSwitch)), _GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)) : _GLF_FUZZED(_GLF_IDENTITY(vec2(40.29, 10.06), (_GLF_IDENTITY(vec2(40.29, _GLF_IDENTITY(10.06, (false ? _GLF_FUZZED(tanh(cos(61.20))) : 10.06))), mix(vec2((vec2(40.29, 10.06))[0], _GLF_FUZZED(8.7)), vec2(_GLF_FUZZED(8540.3416), (vec2(40.29, 10.06))[1]), bvec2(false, true)))) * vec2(1.0, 1.0)))), ((true ? _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)) : _GLF_FUZZED(_GLF_IDENTITY(vec2(40.29, 10.06), (_GLF_IDENTITY(vec2(40.29, _GLF_IDENTITY(10.06, (false ? _GLF_FUZZED(tanh(cos(61.20))) : 10.06))), mix(vec2((vec2(40.29, 10.06))[0], _GLF_FUZZED(8.7)), vec2(_GLF_FUZZED(8540.3416), (vec2(40.29, 10.06))[1]), bvec2(false, true)))) * vec2(1.0, 1.0))))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))).y, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))) ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(_GLF_IDENTITY(vec2(40.29, 10.06), (_GLF_IDENTITY(vec2(40.29, 10.06), mix(vec2((vec2(40.29, 10.06))[0], _GLF_FUZZED(8.7)), vec2(_GLF_FUZZED(8540.3416), (vec2(40.29, 10.06))[1]), bvec2(false, true)))) * vec2(1.0, 1.0))))).y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(8.4)), vec2(_GLF_FUZZED(-913.781), (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(false, true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(bvec2(false, true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)))))))) / vec2(1.0, 1.0)).y)), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(8.4)), vec2(_GLF_FUZZED(-913.781), (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(false, true), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(false, true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(bvec2(false, true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))), false)))))))) / vec2(1.0, 1.0)).y))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(9507.4685), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((-2.5 * -42.93))), bvec2(true, false))), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(9.5), mix(float(_GLF_IDENTITY(_GLF_FUZZED(9.5), _GLF_IDENTITY(float(mat2x3(_GLF_FUZZED(9.5), 1.0, 1.0, sqrt(0.0), 1.0, 1.0)), float(mat3(float(mat2x3(_GLF_FUZZED(9.5), 1.0, 1.0, sqrt(0.0), 1.0, 1.0)), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0))))), float(_GLF_FUZZED(-8657.8229)), bool(false))), (_GLF_IDENTITY(_GLF_FUZZED(9.5), mix(float(_GLF_FUZZED(9.5)), float(_GLF_FUZZED(-8657.8229)), bool(false)))) / 1.0) : _GLF_IDENTITY(0.0, min(0.0, 0.0))), min((false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(9.5), mix(float(_GLF_IDENTITY(_GLF_FUZZED(9.5), _GLF_IDENTITY(float(mat2x3(_GLF_FUZZED(9.5), 1.0, 1.0, sqrt(0.0), 1.0, 1.0)), float(mat3(float(mat2x3(_GLF_FUZZED(9.5), 1.0, 1.0, sqrt(0.0), 1.0, 1.0)), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0))))), float(_GLF_FUZZED(-8657.8229)), bool(false))), (_GLF_IDENTITY(_GLF_FUZZED(9.5), mix(float(_GLF_FUZZED(9.5)), float(_GLF_FUZZED(-8657.8229)), bool(false)))) / 1.0) : _GLF_IDENTITY(0.0, min(0.0, 0.0))), (false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(9.5), mix(float(_GLF_IDENTITY(_GLF_FUZZED(9.5), _GLF_IDENTITY(float(mat2x3(_GLF_FUZZED(9.5), 1.0, 1.0, sqrt(0.0), 1.0, 1.0)), float(mat3(float(mat2x3(_GLF_FUZZED(9.5), 1.0, 1.0, sqrt(0.0), 1.0, 1.0)), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0))))), float(_GLF_FUZZED(-8657.8229)), bool(false))), (_GLF_IDENTITY(_GLF_FUZZED(9.5), mix(float(_GLF_FUZZED(9.5)), float(_GLF_FUZZED(-8657.8229)), bool(false)))) / 1.0) : _GLF_IDENTITY(0.0, min(0.0, 0.0)))))), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0, 1.0))))).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-638.608)), bool(false))), injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   _GLF_IDENTITY(buf[next_virtual_gid] = _GLF_IDENTITY(2, int(ivec3(2, 0, 0))), (_GLF_IDENTITY(buf[next_virtual_gid] = _GLF_IDENTITY(2, int(ivec3(2, 0, 0))), (buf[next_virtual_gid] = _GLF_IDENTITY(_GLF_IDENTITY(2, int(ivec3(2, 0, 0))), min(_GLF_IDENTITY(2, int(ivec3(2, 0, 0))), _GLF_IDENTITY(2, int(ivec3(2, 0, 0)))))) | _GLF_IDENTITY(0u, 0u ^ (0u)))) + 0u);
   subgroupAll(_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(! _GLF_IDENTITY((! (true)), bool(_GLF_IDENTITY(bvec2((! (true)), true), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2((! (true)), true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2((! (true)), true), false), bvec3(bvec3(bvec3(bvec2((! (true)), true), false))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec3(bvec2((! (true)), true), false), bvec3(bvec3(bvec3(bvec2((! (true)), true), _GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))))))), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2((! (true)), true), bvec2(bvec3(bvec2((! _GLF_IDENTITY((true), ((true)) || false)), true), false))))), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(bvec2((! (true)), true), bvec2(bvec3(bvec2((! _GLF_IDENTITY((true), ((true)) || false)), true), false))))), false))))))))), _GLF_IDENTITY(bool(bvec3(! _GLF_IDENTITY((! (true)), bool(_GLF_IDENTITY(bvec2((! (true)), true), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2((! (true)), true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2((! (true)), true), false), bvec3(bvec3(bvec3(bvec2((! (true)), true), false))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec3(bvec2((! (true)), true), false), bvec3(bvec3(bvec3(bvec2((! (true)), true), _GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))))))), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2((! (true)), true), bvec2(bvec3(bvec2((! _GLF_IDENTITY((true), ((true)) || false)), true), false))))), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(bvec2((! (true)), true), bvec2(bvec3(bvec2((! _GLF_IDENTITY((true), ((true)) || false)), true), false))))), false))))))))), false, true)), bool(bool(bool(bvec3(! _GLF_IDENTITY((! (true)), bool(_GLF_IDENTITY(bvec2((! (true)), true), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2((! (true)), true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2((! (true)), true), false), bvec3(bvec3(bvec3(bvec2((! (true)), true), false))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec3(bvec2((! (true)), true), false), bvec3(bvec3(bvec3(bvec2((! (true)), true), _GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))))))), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2((! (true)), true), bvec2(bvec3(bvec2((! _GLF_IDENTITY((true), ((true)) || false)), true), false))))), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(bvec2((! (true)), true), bvec2(bvec3(bvec2((! _GLF_IDENTITY((true), ((true)) || false)), true), false))))), false))))))))), false, true)))))))) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(! _GLF_IDENTITY((! (true)), bool(_GLF_IDENTITY(bvec2((! (true)), true), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2((! (true)), true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2((! (true)), true), false), bvec3(bvec3(bvec3(bvec2((! (true)), true), false))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec3(bvec2((! (true)), true), false), bvec3(bvec3(bvec3(bvec2((! (true)), true), _GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))))))), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2((! (true)), true), bvec2(bvec3(bvec2((! _GLF_IDENTITY((true), ((true)) || false)), true), false))))), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(bvec2((! (true)), true), bvec2(bvec3(bvec2((! _GLF_IDENTITY((true), ((true)) || false)), true), false))))), false))))))))), _GLF_IDENTITY(bool(bvec3(! _GLF_IDENTITY((! (true)), bool(_GLF_IDENTITY(bvec2((! (true)), true), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2((! (true)), true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2((! (true)), true), false), bvec3(bvec3(bvec3(bvec2((! (true)), true), false))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec3(bvec2((! (true)), true), false), bvec3(bvec3(bvec3(bvec2((! (true)), true), _GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))))))), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2((! (true)), true), bvec2(bvec3(bvec2((! _GLF_IDENTITY((true), ((true)) || false)), true), false))))), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(bvec2((! (true)), true), bvec2(bvec3(bvec2((! _GLF_IDENTITY((true), ((true)) || false)), true), false))))), false))))))))), false, true)), bool(bool(bool(bvec3(! _GLF_IDENTITY((! (true)), bool(_GLF_IDENTITY(bvec2((! (true)), true), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2((! (true)), true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2((! (true)), true), false), bvec3(bvec3(bvec3(bvec2((! (true)), true), false))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec3(bvec2((! (true)), true), false), bvec3(bvec3(bvec3(bvec2((! (true)), true), _GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))))))), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2((! (true)), true), bvec2(bvec3(bvec2((! _GLF_IDENTITY((true), ((true)) || false)), true), false))))), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(bvec2((! (true)), true), bvec2(bvec3(bvec2((! _GLF_IDENTITY((true), ((true)) || false)), true), false))))), false))))))))), false, true)))))))) || false)), ! (! (! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(! _GLF_IDENTITY((! (true)), bool(_GLF_IDENTITY(bvec2((! (true)), true), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2((! (true)), true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2((! (true)), true), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2((! (true)), true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2((! (true)), true)), bvec2(bvec3(bvec2(bvec2((! (true)), true)), false)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(bvec2((! (true)), true)), bvec2(bvec3(bvec2(bvec2((! (true)), true)), false)))), true, true)))), false))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2((! (true)), true), false), bvec3(bvec3(bvec3(bvec2((! (true)), true), _GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec3(bvec2((! (true)), true), false), bvec3(bvec3(bvec3(bvec2((! (true)), true), _GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec3(bvec2((! (true)), true), false), bvec3(bvec3(bvec3(bvec2((! (true)), true), _GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec2(bvec3(bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec3(bvec2((! (true)), true), false), bvec3(bvec3(bvec3(bvec2((! (true)), true), _GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true))), false, false))))))))), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2((! (true)), true), bvec2(bvec3(bvec2((! _GLF_IDENTITY((true), ((true)) || false)), true), false))))), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(bvec2((! (true)), true), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2((! _GLF_IDENTITY((true), ((true)) || false)), true), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2((! _GLF_IDENTITY((true), ((true)) || false)), true), bvec2(bvec3(bvec2((! _GLF_IDENTITY((true), ((true)) || false)), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec2(bvec3(bvec2(bvec4(_GLF_IDENTITY(bvec2((! _GLF_IDENTITY((true), ((true)) || false)), true), bvec2(bvec3(bvec2((! _GLF_IDENTITY((true), ((true)) || false)), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false)))), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2((! _GLF_IDENTITY((true), ((true)) || false)), true), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2((! _GLF_IDENTITY((true), ((true)) || false)), true), bvec2(bvec3(bvec2((! _GLF_IDENTITY((true), ((true)) || false)), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec2(bvec3(bvec2(bvec4(_GLF_IDENTITY(bvec2((! _GLF_IDENTITY((true), ((true)) || false)), true), bvec2(bvec3(bvec2((! _GLF_IDENTITY((true), ((true)) || false)), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false)))), false)))))))), false))))))))), _GLF_IDENTITY(bool(bvec3(! _GLF_IDENTITY((! (true)), bool(_GLF_IDENTITY(bvec2((! (true)), true), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2((! (true)), true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2((! (true)), true), false), bvec3(bvec3(bvec3(bvec2((! (true)), true), false))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec3(bvec2((! (true)), true), false), bvec3(bvec3(bvec3(bvec2((! (true)), true), _GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))))))), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2((! (true)), true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2((! (true)), true), false), bvec3(bvec3(bvec3(bvec2((! (true)), true), false))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec3(bvec2((! (true)), true), false), bvec3(bvec3(bvec3(bvec2((! (true)), true), _GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))))))))), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bvec2((! (true)), true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2((! (true)), true), false), bvec3(bvec3(bvec3(bvec2((! (true)), true), false))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec3(bvec2((! (true)), true), false), bvec3(bvec3(bvec3(bvec2((! (true)), true), _GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))))))))), true, true))))), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2((! (true)), true), bvec2(bvec3(bvec2((! _GLF_IDENTITY((true), ((true)) || false)), true), false)))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2((! (true)), true), bvec2(bvec3(bvec2((! _GLF_IDENTITY((true), ((true)) || false)), true), false))))), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(bvec2((! (true)), true), bvec2(bvec3(bvec2((! _GLF_IDENTITY((true), ((true)) || false)), true), false))))), false)))), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2((! (true)), true), bvec2(bvec3(bvec2((! _GLF_IDENTITY((true), ((true)) || false)), true), false))))), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(bvec2((! (true)), true), bvec2(bvec3(bvec2((! _GLF_IDENTITY((true), ((true)) || false)), true), false))))), false)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2((! (true)), true), bvec2(bvec3(bvec2((! _GLF_IDENTITY((true), ((true)) || false)), true), false))))), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(bvec2((! (true)), true), bvec2(bvec3(bvec2((! _GLF_IDENTITY((true), ((true)) || false)), true), false))))), false)))), true, true))), false))))), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(bvec2((! (true)), true), bvec2(bvec3(bvec2(_GLF_IDENTITY((! _GLF_IDENTITY((true), ((true)) || _GLF_IDENTITY(false, (false) || false))), ! (! ((! _GLF_IDENTITY((true), ((true)) || _GLF_IDENTITY(false, (false) || false)))))), true), false))))), false))))))))), false, true)), bool(bool(bool(bvec3(! _GLF_IDENTITY((! (true)), bool(_GLF_IDENTITY(bvec2((! (true)), true), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2((! (true)), true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2((! (true)), true), bvec2(bvec3(bvec2((! (true)), true), false))), false), bvec3(bvec3(bvec3(bvec2((! (true)), true), false))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec3(bvec2((! (true)), true), false), bvec3(bvec3(bvec3(bvec2((! (true)), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true))))), _GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))))))), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2((! (true)), true), bvec2(bvec3(bvec2((! _GLF_IDENTITY(_GLF_IDENTITY((true), ! (! (_GLF_IDENTITY((true), false || ((true)))))), ((true)) || false)), true), false))))), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(bvec2((! (true)), true), bvec2(bvec3(bvec2(_GLF_IDENTITY((! _GLF_IDENTITY((true), ((true)) || false)), (_GLF_IDENTITY((! _GLF_IDENTITY((true), ((true)) || false)), false || ((! _GLF_IDENTITY((true), ((true)) || false))))) || false), true), false))))), false))))))))), false, true)))))))) || false))))))));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (injectionSwitch)).y, max(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((true ? injectionSwitch.y : _GLF_IDENTITY(_GLF_FUZZED(-5667.9753), mix(float(_GLF_FUZZED((118.042 * -280.874))), float(_GLF_IDENTITY(_GLF_FUZZED(-5667.9753), 0.0 + (_GLF_FUZZED(-5667.9753)))), bool(true)))), min(_GLF_IDENTITY((true ? injectionSwitch.y : _GLF_IDENTITY(_GLF_FUZZED(-5667.9753), mix(float(_GLF_FUZZED((118.042 * -280.874))), float(_GLF_IDENTITY(_GLF_FUZZED(-5667.9753), 0.0 + (_GLF_FUZZED(-5667.9753)))), bool(true)))), float(vec4((true ? injectionSwitch.y : _GLF_IDENTITY(_GLF_FUZZED(-5667.9753), mix(float(_GLF_FUZZED((118.042 * -280.874))), float(_GLF_IDENTITY(_GLF_FUZZED(-5667.9753), 0.0 + (_GLF_FUZZED(-5667.9753)))), bool(true)))), 0.0, 1.0, 1.0))), _GLF_IDENTITY((true ? injectionSwitch.y : _GLF_IDENTITY(_GLF_FUZZED(-5667.9753), mix(float(_GLF_FUZZED((118.042 * -280.874))), float(_GLF_IDENTITY(_GLF_FUZZED(-5667.9753), 0.0 + (_GLF_FUZZED(-5667.9753)))), bool(true)))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2((true ? injectionSwitch.y : _GLF_IDENTITY(_GLF_FUZZED(-5667.9753), mix(float(_GLF_FUZZED((118.042 * -280.874))), float(_GLF_IDENTITY(_GLF_FUZZED(-5667.9753), 0.0 + (_GLF_FUZZED(-5667.9753)))), bool(true)))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 1.0, 0.0), (true ? mat4x2((true ? injectionSwitch.y : _GLF_IDENTITY(_GLF_FUZZED(-5667.9753), mix(float(_GLF_FUZZED((118.042 * -280.874))), float(_GLF_IDENTITY(_GLF_FUZZED(-5667.9753), 0.0 + (_GLF_FUZZED(-5667.9753)))), bool(true)))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 1.0, 0.0) : _GLF_FUZZED(mat4x2(-8842.4382, -786.254, 0.3, -729.026, 2751.0847, 22.73, 8.5, -61.10))))), mix(float(_GLF_FUZZED(-612.935)), float(float(_GLF_IDENTITY(mat4x2((true ? injectionSwitch.y : _GLF_IDENTITY(_GLF_FUZZED(-5667.9753), mix(float(_GLF_FUZZED((118.042 * -280.874))), float(_GLF_IDENTITY(_GLF_FUZZED(-5667.9753), 0.0 + (_GLF_FUZZED(-5667.9753)))), bool(true)))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 1.0, 0.0), (true ? mat4x2((true ? injectionSwitch.y : _GLF_IDENTITY(_GLF_FUZZED(-5667.9753), mix(float(_GLF_FUZZED((118.042 * -280.874))), float(_GLF_IDENTITY(_GLF_FUZZED(-5667.9753), 0.0 + (_GLF_FUZZED(-5667.9753)))), bool(true)))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 1.0, 0.0) : _GLF_FUZZED(mat4x2(-8842.4382, -786.254, 0.3, -729.026, 2751.0847, 22.73, 8.5, -61.10)))))), bool(true))))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED((mat2(94.76, 6.6, 9.5, 8.8) , 4.9)) : 1.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(3.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-1.7)), bvec2(true, false))))).y, 1.0, _GLF_IDENTITY(log(1.0), 1.0 * (_GLF_IDENTITY(log(1.0), float(vec3(log(1.0), 0.0, 0.0))))), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0), mat3x4(mat3x4(mat3x4(injectionSwitch.y, 1.0, log(1.0), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))))), 0.0 + (float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(3.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-1.7)), bvec2(true, false))))).y, 1.0, _GLF_IDENTITY(log(1.0), 1.0 * (_GLF_IDENTITY(log(1.0), float(vec3(log(1.0), 0.0, 0.0))))), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0), mat3x4(mat3x4(mat3x4(injectionSwitch.y, 1.0, log(1.0), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))))))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), bool(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), (bool(_GLF_IDENTITY(false, ! (! (false))))) || false), true, true)))), bool(bvec2(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), bool(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), (bool(_GLF_IDENTITY(false, ! (! (false))))) || false), true, true)))), true))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, length(vec4(0.0, 0.0, 0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-8.7) : injectionSwitch.x)))) > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 1.0, log(1.0), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, exp(0.0), 0.0)), _GLF_IDENTITY((vec2(mat4x3(injectionSwitch, 1.0, log(1.0), 1.0, 1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec2(1.0, 0.0), (vec2(1.0, 0.0)) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))), 0.0, 0.0, 1.0, exp(0.0), 0.0))), max((vec2(mat4x3(injectionSwitch, 1.0, log(1.0), 1.0, 1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec2(1.0, 0.0), (vec2(1.0, 0.0)) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))), 0.0, 0.0, 1.0, exp(0.0), 0.0))), (vec2(mat4x3(injectionSwitch, 1.0, log(1.0), 1.0, 1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec2(1.0, 0.0), (vec2(1.0, 0.0)) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))), 0.0, 0.0, 1.0, exp(0.0), 0.0))))) * mat2(1.0))).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0)))) - vec2(0.0, 0.0)).y)) && true))))) || (false)), bool(bvec2(false, false))), true, true)), (bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, false))), true, true))) && true))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) || false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0))))).y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) && true), true && _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec4(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) || false)))), true && (false)), _GLF_IDENTITY(false, false || (false)))), _GLF_IDENTITY(false, bool(bool(false))), true, false)))), bool(bvec3((_GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))) || false))), bool(bvec4(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) || false)))), true && (false)), false)), _GLF_IDENTITY(false, bool(bool(false))), true, false)))), true, false))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), mix(vec2(_GLF_FUZZED(-6037.8940), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[1]), vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[0], ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[0]) - 0.0), _GLF_FUZZED(5517.3539)), bvec2(true, false))).x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))))))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         return;
        }
       return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
