#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_2 {
 uint _f0;
 vec2 _f1;
 mat4x3 _f2;
} ;

struct _GLF_struct_1 {
 ivec4 _f0;
 bool _f1;
 mat2x4 _f2;
 ivec2 _f3;
 mat4 _f4;
} ;

struct _GLF_struct_3 {
 _GLF_struct_1 _f0;
 _GLF_struct_2 _f1;
 vec4 _f2;
} ;

struct _GLF_struct_0 {
 mat2x3 _f0;
 mat4x3 _f1;
} ;

struct _GLF_struct_4 {
 mat3 _f0;
 uint workgroup_base;
 uvec3 _f1;
 _GLF_struct_0 _f2;
 _GLF_struct_3 _f3;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)), bool(bvec3(bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)), true, false))))) && true, _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)), bool(bvec3(bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)), true, false))))) && true, true)), (bool(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)), bool(bvec3(bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)), true, false))))) && true, true))) && true))))) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), mix(float(injectionSwitch.y), float(_GLF_FUZZED(826.760)), bool(false)))), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(826.760)), bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(826.760)), bool(false)))), true && ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(826.760)), bool(false))))))) && true)))) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) && true)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))) || false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))) || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(147.383)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)) > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (! (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), injectionSwitch)).y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))))))))) && true)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))))))), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))))), bool(bvec4(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))))))) || false))), ! (! (_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-53.92)), float(injectionSwitch.y), bool(true)))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) && true)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))) || (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)), bool(bvec2(_GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)), (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))) || false), true)))), bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, true)))))))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) + vec2(0.0, 0.0), vec2(mat2((injectionSwitch) + vec2(0.0, 0.0), 0.0, 0.0)))), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-53.92)), float(injectionSwitch.y), bool(true)))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-53.92)), float(injectionSwitch.y), bool(true)))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), ! (! (! ((! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-53.92)), float(injectionSwitch.y), bool(true)))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))) && true)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))) || (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)), bool(bvec2(_GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)), (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))) || false), true)))), bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, true)))))))) || false)) || false))), ! (! (bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-53.92)), float(injectionSwitch.y), bool(true)))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) && true)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))) || (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)), bool(bvec2(_GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)), (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))) || false), true)))), bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, true)))))))) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-53.92)), float(injectionSwitch.y), bool(true)))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) && true)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))) || (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)), bool(bvec2(_GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)), (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))) || false), true)))), bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, true)))))))) || false)), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-53.92)), float(injectionSwitch.y), bool(true)))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) && true)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))) || (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)), bool(bvec2(_GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)), (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))) || false), true)))), bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, true)))))))) || false)), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) && true), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), false, true)), ! (! (_GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), false, true)), ! (! (bool(bvec3((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), false, true)))))))))))))), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) && true)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))) || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))) || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))) || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))))))))) || false))), ! (! (bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), true && (bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))) || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), injectionSwitch)).x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) && true)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), bool(bvec2(bool(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 1.0, 0.0, 1.0))).x > injectionSwitch.y, true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), bool(bvec2(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), bool(bvec2(bool(bvec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false))))))))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), bool(_GLF_IDENTITY(bvec2(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false)))))), ! (! (bool(_GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), bool(bvec2(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))))))) || false))))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_size = _GLF_IDENTITY(16, 0 + (16));
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(954.113)), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)), bool(true))) > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true))), true)))), (bool(bvec3(false, false, false))) && true)), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)), bool(bvec2(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), bool(bvec2((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), true))) || false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)).y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false || _GLF_IDENTITY((_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) && true) || (false))), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ! (! ((_GLF_IDENTITY(false, false || (false))))))))) || false))), ! (! ((_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), (_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ! (! ((_GLF_IDENTITY(false, false || (false))))))))) || false)))))), true && (false || (false)))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))))), _GLF_IDENTITY(_GLF_IDENTITY(false || _GLF_IDENTITY((false), ! (! ((false)))), false || (_GLF_IDENTITY(false, (false) && true) || (false))), _GLF_IDENTITY(true && (false || (false)), ! (! (true && (false || (false)))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x4(injectionSwitch, 1.0, log(1.0), 1.0, 0.0, round(_GLF_IDENTITY(length(normalize(1.0)), clamp(length(normalize(1.0)), length(normalize(1.0)), _GLF_IDENTITY(length(normalize(1.0)), (true ? length(normalize(1.0)) : _GLF_FUZZED(0.3)))))), 1.0)), mix(vec2(_GLF_FUZZED(66.58), _GLF_FUZZED(4493.4779)), vec2((vec2(mat2x4(injectionSwitch, 1.0, log(1.0), 1.0, 0.0, round(length(normalize(1.0))), 1.0)))[0], (vec2(mat2x4(injectionSwitch, _GLF_IDENTITY(1.0, (1.0) - sin(0.0)), log(1.0), 1.0, 0.0, round(length(normalize(1.0))), 1.0)))[1]), bvec2(true, true)))).y))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x4(injectionSwitch, 1.0, log(1.0), 1.0, 0.0, round(_GLF_IDENTITY(length(normalize(1.0)), clamp(length(normalize(1.0)), length(normalize(1.0)), _GLF_IDENTITY(length(normalize(1.0)), (true ? length(normalize(1.0)) : _GLF_FUZZED(0.3)))))), 1.0)), mix(vec2(_GLF_FUZZED(66.58), _GLF_FUZZED(4493.4779)), vec2((vec2(mat2x4(injectionSwitch, 1.0, log(1.0), 1.0, 0.0, round(length(normalize(1.0))), 1.0)))[0], (vec2(mat2x4(injectionSwitch, _GLF_IDENTITY(1.0, (1.0) - sin(0.0)), log(1.0), 1.0, 0.0, round(length(normalize(1.0))), 1.0)))[1]), bvec2(true, true)))).y))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0, 0.0, 1.0))))) > injectionSwitch.y))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))))))))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (! (false))))), false || (! (! (_GLF_IDENTITY(false, ! (! (false))))))))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(gl_NumWorkGroups, 0u)))) - uvec3(0u, 0u, 0u)))).x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && ((false))) && true)))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * cos(vec2(0.0, 0.0))))).y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec3(! ((injectionSwitch.x > injectionSwitch.y)), true, false))))), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, _GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y)))))) && true))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, 1.0, 0.0), (_GLF_IDENTITY(mat2(injectionSwitch, 1.0, 0.0), (mat2(injectionSwitch, 1.0, 0.0)) / mat2(1.0, 1.0, 1.0, 1.0))) / mat2(1.0, 1.0, 1.0, 1.0)))).y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))) && true)) || false)))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - uvec3(0u, 0u, 0u)), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - uvec3(0u, 0u, 0u))))), clamp(uvec3(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - uvec3(0u, 0u, 0u))), uvec3(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - uvec3(0u, 0u, 0u))), uvec3(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - uvec3(0u, 0u, 0u)))))))[0], gl_WorkGroupID[1], gl_WorkGroupID[2]))))), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], (gl_WorkGroupID[0]) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(gl_WorkGroupID[1], min(gl_WorkGroupID[1], gl_WorkGroupID[1])), _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) * uvec3(1u, 1u, 1u))[2]))))), uvec3(0u, 0u, 0u) | ((_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (false ? _GLF_FUZZED(uvec3(30869u, 108456u, 45020u)) : _GLF_IDENTITY(gl_WorkGroupID, ~ (~ (gl_WorkGroupID))))), uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2]))))))), (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], (gl_WorkGroupID[0]) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(gl_WorkGroupID[1], min(gl_WorkGroupID[1], gl_WorkGroupID[1])), _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) * uvec3(1u, 1u, 1u))[2]))))), uvec3(0u, 0u, 0u) | ((_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (false ? _GLF_FUZZED(uvec3(30869u, 108456u, 45020u)) : _GLF_IDENTITY(gl_WorkGroupID, ~ (~ (gl_WorkGroupID))))), uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2])))))))) | (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], (gl_WorkGroupID[0]) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(gl_WorkGroupID[1], min(gl_WorkGroupID[1], gl_WorkGroupID[1])), _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) * uvec3(1u, 1u, 1u))[2]))))), uvec3(0u, 0u, 0u) | ((_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (false ? _GLF_FUZZED(uvec3(30869u, 108456u, 45020u)) : _GLF_IDENTITY(gl_WorkGroupID, ~ (~ (gl_WorkGroupID))))), uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2])))))))))), max((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], (gl_WorkGroupID[0]) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(gl_WorkGroupID[1], min(gl_WorkGroupID[1], gl_WorkGroupID[1])), _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) * uvec3(1u, 1u, 1u))[2]))))), uvec3(0u, 0u, 0u) | ((_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (false ? _GLF_FUZZED(uvec3(30869u, 108456u, 45020u)) : _GLF_IDENTITY(gl_WorkGroupID, ~ (~ (gl_WorkGroupID))))), uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2]))))))), (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], (gl_WorkGroupID[0]) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(gl_WorkGroupID[1], min(gl_WorkGroupID[1], gl_WorkGroupID[1])), _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) * uvec3(1u, 1u, 1u))[2]))))), uvec3(0u, 0u, 0u) | ((_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (false ? _GLF_FUZZED(uvec3(30869u, 108456u, 45020u)) : _GLF_IDENTITY(gl_WorkGroupID, ~ (~ (gl_WorkGroupID))))), uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2])))))))) | (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], (gl_WorkGroupID[0]) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(gl_WorkGroupID[1], min(gl_WorkGroupID[1], gl_WorkGroupID[1])), _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) * uvec3(1u, 1u, 1u))[2]))))), uvec3(0u, 0u, 0u) | ((_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (false ? _GLF_FUZZED(uvec3(30869u, 108456u, 45020u)) : _GLF_IDENTITY(gl_WorkGroupID, ~ (~ (gl_WorkGroupID))))), uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2])))))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], (gl_WorkGroupID[0]) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(gl_WorkGroupID[1], min(gl_WorkGroupID[1], gl_WorkGroupID[1])), _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) * uvec3(1u, 1u, 1u))[2]))))), uvec3(0u, 0u, 0u) | ((_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (false ? _GLF_FUZZED(uvec3(30869u, 108456u, 45020u)) : _GLF_IDENTITY(gl_WorkGroupID, ~ (~ (gl_WorkGroupID))))), uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2]))))))), (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], (gl_WorkGroupID[0]) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(gl_WorkGroupID[1], min(gl_WorkGroupID[1], gl_WorkGroupID[1])), _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) * uvec3(1u, 1u, 1u))[2]))))), uvec3(0u, 0u, 0u) | ((_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (false ? _GLF_FUZZED(uvec3(30869u, 108456u, 45020u)) : _GLF_IDENTITY(gl_WorkGroupID, ~ (~ (gl_WorkGroupID))))), uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2])))))))) | (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], (gl_WorkGroupID[0]) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(gl_WorkGroupID[1], min(gl_WorkGroupID[1], gl_WorkGroupID[1])), _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) * uvec3(1u, 1u, 1u))[2]))))), uvec3(0u, 0u, 0u) | ((_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (false ? _GLF_FUZZED(uvec3(30869u, 108456u, 45020u)) : _GLF_IDENTITY(gl_WorkGroupID, ~ (~ (gl_WorkGroupID))))), uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2])))))))))), uvec3(0u, 0u, 0u) ^ ((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], (gl_WorkGroupID[0]) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(gl_WorkGroupID[1], min(gl_WorkGroupID[1], gl_WorkGroupID[1])), _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) * uvec3(1u, 1u, 1u))[2]))))), uvec3(0u, 0u, 0u) | ((_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (false ? _GLF_FUZZED(uvec3(30869u, 108456u, 45020u)) : _GLF_IDENTITY(gl_WorkGroupID, ~ (~ (gl_WorkGroupID))))), uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2]))))))), (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], (gl_WorkGroupID[0]) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(gl_WorkGroupID[1], min(gl_WorkGroupID[1], gl_WorkGroupID[1])), _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) * uvec3(1u, 1u, 1u))[2]))))), uvec3(0u, 0u, 0u) | ((_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (false ? _GLF_FUZZED(uvec3(30869u, 108456u, 45020u)) : _GLF_IDENTITY(gl_WorkGroupID, ~ (~ (gl_WorkGroupID))))), uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2])))))))) | (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], (gl_WorkGroupID[0]) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(gl_WorkGroupID[1], min(gl_WorkGroupID[1], gl_WorkGroupID[1])), _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) * uvec3(1u, 1u, 1u))[2]))))), uvec3(0u, 0u, 0u) | ((_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (false ? _GLF_FUZZED(uvec3(30869u, 108456u, 45020u)) : _GLF_IDENTITY(gl_WorkGroupID, ~ (~ (gl_WorkGroupID))))), uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2])))))))))))))))) + uvec3(0u, 0u, 0u)).x;
 _GLF_struct_4 _GLF_struct_replacement_4 = _GLF_struct_4(mat3(1.0), workgroup_size * workgroup_id, uvec3(1u), _GLF_struct_0(mat2x3(1.0), mat4x3(1.0)), _GLF_struct_3(_GLF_struct_1(ivec4(1), true, mat2x4(1.0), ivec2(1), mat4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(9498.3628) : _GLF_IDENTITY(1.0, float(vec2(1.0, 1.0))))))), _GLF_struct_2(1u, _GLF_IDENTITY(vec2(1.0), (_GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0), mix(vec2((vec2(1.0))[0], _GLF_FUZZED(-94.04)), vec2(_GLF_FUZZED(-7.6), (vec2(1.0))[1]), bvec2(false, true))), _GLF_IDENTITY(max(_GLF_IDENTITY(vec2(1.0), mix(vec2((vec2(1.0))[0], _GLF_FUZZED(-94.04)), vec2(_GLF_FUZZED(-7.6), (vec2(1.0))[1]), bvec2(false, true))), _GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0), mix(vec2((vec2(1.0))[0], _GLF_FUZZED(-94.04)), vec2(_GLF_FUZZED(-7.6), (vec2(1.0))[1]), bvec2(false, true))), min(_GLF_IDENTITY(vec2(1.0), mix(vec2((vec2(1.0))[0], _GLF_FUZZED(-94.04)), vec2(_GLF_FUZZED(-7.6), (vec2(1.0))[1]), bvec2(false, true))), _GLF_IDENTITY(vec2(1.0), mix(vec2((vec2(1.0))[0], _GLF_FUZZED(-94.04)), vec2(_GLF_FUZZED(-7.6), (vec2(1.0))[1]), bvec2(false, true)))))), mix(vec2(_GLF_FUZZED(-109.765), (max(_GLF_IDENTITY(vec2(1.0), mix(vec2((vec2(1.0))[0], _GLF_FUZZED(-94.04)), vec2(_GLF_FUZZED(-7.6), (vec2(1.0))[1]), bvec2(false, true))), _GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0), mix(vec2((vec2(1.0))[0], _GLF_FUZZED(-94.04)), vec2(_GLF_FUZZED(-7.6), (vec2(1.0))[1]), bvec2(false, true))), min(_GLF_IDENTITY(vec2(1.0), mix(vec2((vec2(1.0))[0], _GLF_FUZZED(-94.04)), vec2(_GLF_FUZZED(-7.6), (vec2(1.0))[1]), bvec2(false, true))), _GLF_IDENTITY(vec2(1.0), mix(vec2((vec2(1.0))[0], _GLF_FUZZED(-94.04)), vec2(_GLF_FUZZED(-7.6), (vec2(1.0))[1]), bvec2(false, true)))))))[1]), vec2((max(_GLF_IDENTITY(vec2(1.0), mix(vec2((vec2(1.0))[0], _GLF_FUZZED(-94.04)), vec2(_GLF_FUZZED(-7.6), (vec2(1.0))[1]), bvec2(false, true))), _GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0), mix(vec2((vec2(1.0))[0], _GLF_FUZZED(-94.04)), vec2(_GLF_FUZZED(-7.6), (vec2(1.0))[1]), bvec2(false, true))), min(_GLF_IDENTITY(vec2(1.0), mix(vec2((vec2(1.0))[0], _GLF_FUZZED(-94.04)), vec2(_GLF_FUZZED(-7.6), (vec2(1.0))[1]), bvec2(false, true))), _GLF_IDENTITY(vec2(1.0), mix(vec2((vec2(1.0))[0], _GLF_FUZZED(-94.04)), vec2(_GLF_FUZZED(-7.6), (vec2(1.0))[1]), bvec2(false, true)))))))[0], _GLF_FUZZED(2.1)), bvec2(true, false))))) - vec2(0.0, 0.0)), mat4x3(1.0)), _GLF_IDENTITY(vec4(1.0), vec4(mat4x3(vec4(1.0), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), bool(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_struct_replacement_4.workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, 0u ^ (_GLF_struct_replacement_4.workgroup_base + subgroup_id * subgroup_size + subgroup_local_id));
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_4.workgroup_base, _GLF_IDENTITY((_GLF_struct_replacement_4.workgroup_base) | (_GLF_struct_replacement_4.workgroup_base), (true ? _GLF_IDENTITY((_GLF_struct_replacement_4.workgroup_base) | (_GLF_struct_replacement_4.workgroup_base), (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(subgroup_size) : (_GLF_struct_replacement_4.workgroup_base) | (_GLF_struct_replacement_4.workgroup_base))) : _GLF_FUZZED(virtual_gid)))), (_GLF_IDENTITY(_GLF_struct_replacement_4.workgroup_base, (_GLF_struct_replacement_4.workgroup_base) | (_GLF_struct_replacement_4.workgroup_base))) ^ 0u) + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_id) : subgroup_size)), (_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_id) : subgroup_size))) | (168869u & 0u)), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size))), (false ? _GLF_FUZZED(workgroup_id) : subgroup_size)), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size))), (false ? _GLF_FUZZED(workgroup_id) : subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size))), (false ? _GLF_FUZZED(workgroup_id) : subgroup_size))) << 0u))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_4.workgroup_base, _GLF_IDENTITY((_GLF_struct_replacement_4.workgroup_base), min((_GLF_struct_replacement_4.workgroup_base), (_GLF_struct_replacement_4.workgroup_base))) | (_GLF_struct_replacement_4.workgroup_base)) + subgroup_id * _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_id) : subgroup_size)), min(_GLF_IDENTITY(_GLF_struct_replacement_4.workgroup_base, (_GLF_IDENTITY(_GLF_struct_replacement_4.workgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_4.workgroup_base, min(_GLF_struct_replacement_4.workgroup_base, _GLF_struct_replacement_4.workgroup_base)), ~ (~ (_GLF_struct_replacement_4.workgroup_base)))) << 0u)) | (_GLF_struct_replacement_4.workgroup_base)) + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_id) : subgroup_size)), subgroup_size)))), (false ? _GLF_FUZZED(workgroup_id) : subgroup_size)), _GLF_IDENTITY(_GLF_struct_replacement_4.workgroup_base, (_GLF_struct_replacement_4.workgroup_base) | (_GLF_struct_replacement_4.workgroup_base)) + subgroup_id * _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_id) : subgroup_size))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_4.workgroup_base, (_GLF_struct_replacement_4.workgroup_base) | (_GLF_struct_replacement_4.workgroup_base)) + subgroup_id * _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_id) : subgroup_size)), min(_GLF_IDENTITY(_GLF_struct_replacement_4.workgroup_base, (_GLF_IDENTITY(_GLF_struct_replacement_4.workgroup_base, (_GLF_IDENTITY(_GLF_struct_replacement_4.workgroup_base, ~ (~ (_GLF_struct_replacement_4.workgroup_base)))) << 0u)) | (_GLF_struct_replacement_4.workgroup_base)) + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_id) : subgroup_size)), subgroup_size)))), (false ? _GLF_FUZZED(workgroup_id) : subgroup_size)), _GLF_IDENTITY(_GLF_struct_replacement_4.workgroup_base, (_GLF_struct_replacement_4.workgroup_base) | (_GLF_struct_replacement_4.workgroup_base)) + subgroup_id * _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_id) : subgroup_size))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_4.workgroup_base, (_GLF_struct_replacement_4.workgroup_base) | (_GLF_struct_replacement_4.workgroup_base)) + subgroup_id * _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_id) : subgroup_size)), min(_GLF_IDENTITY(_GLF_struct_replacement_4.workgroup_base, (_GLF_IDENTITY(_GLF_struct_replacement_4.workgroup_base, (_GLF_IDENTITY(_GLF_struct_replacement_4.workgroup_base, ~ (~ (_GLF_struct_replacement_4.workgroup_base)))) << 0u)) | (_GLF_struct_replacement_4.workgroup_base)) + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_id) : subgroup_size)), subgroup_size)))), (false ? _GLF_FUZZED(workgroup_id) : subgroup_size)), _GLF_IDENTITY(_GLF_struct_replacement_4.workgroup_base, (_GLF_struct_replacement_4.workgroup_base) | (_GLF_IDENTITY(_GLF_struct_replacement_4.workgroup_base, (_GLF_IDENTITY(_GLF_struct_replacement_4.workgroup_base, uint(uvec2(_GLF_struct_replacement_4.workgroup_base, 0u)))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))) + subgroup_id * _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_id) : subgroup_size)))))) << 0u)) >> 0u))) + ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), (~ (subgroup_local_id)) / 1u))))) + 1) % subgroup_size), _GLF_IDENTITY(0u ^ (_GLF_struct_replacement_4.workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, 0u + (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))))) ^ _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, (0u) - 0u)))) + 1) % subgroup_size)), (0u ^ (_GLF_IDENTITY(_GLF_struct_replacement_4.workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u)), ~ (~ (uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u))))))) + ((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, 0u + (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))))) ^ _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) | (0u))))) + 1) % subgroup_size), ~ (~ (_GLF_struct_replacement_4.workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, 0u + (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))))) ^ 0u) + 1) % _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(136891u) : subgroup_size)))))))) | 0u));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0)) << _GLF_IDENTITY(_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(_GLF_IDENTITY(0, (0) + 0)), _GLF_IDENTITY((int(0)) >> 0, ((int(0)) >> 0) * 1))), (_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(_GLF_IDENTITY(0, (0) + 0)), _GLF_IDENTITY((int(0)) >> 0, ((int(0)) >> 0) * 1)))) | (_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(_GLF_IDENTITY(0, (0) + 0)), _GLF_IDENTITY((int(0)) >> 0, ((int(0)) >> 0) * 1))))))); _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) ^ 0))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      break;
     return;
    }
   if(_GLF_DEAD(false))
    continue;
   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != _GLF_IDENTITY((1 & 1), ((1 & 1)) >> 0), ! _GLF_IDENTITY((! (_injected_loop_counter != (1 & 1))), ! (! _GLF_IDENTITY(((! (_injected_loop_counter != (1 & 1)))), ! (! (((! (_injected_loop_counter != (1 & 1))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != (_GLF_IDENTITY(1 & 1, (_GLF_IDENTITY(1 & 1, (_GLF_IDENTITY(1 & 1, (true ? 1 & 1 : _GLF_FUZZED(_injected_loop_counter)))) * 1)) >> 0)), ! (! (_injected_loop_counter != (_GLF_IDENTITY(1, 0 | (1)) & 1))))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != (1 & 1), ! (! (_injected_loop_counter != (1 & 1)))))), true && (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != (1 & 1), ! (! (_injected_loop_counter != (1 & 1)))))), true && (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter != (1 & 1), ! (_GLF_IDENTITY(! (_injected_loop_counter != (1 & 1)), bool(bvec2(! (_injected_loop_counter != (1 & 1)), true))))), _GLF_IDENTITY(! (! (_injected_loop_counter != (1 & 1))), true && (_GLF_IDENTITY(! (! (_injected_loop_counter != (1 & 1))), bool(bool(! (! (_injected_loop_counter != (1 & 1))))))))))))))))), true, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))), true)), true && (_GLF_IDENTITY(bool(bvec4(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (0 << _GLF_IDENTITY(int(5), int(5))) + (_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter)))) != (_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec3(1, 0, 1))) & 1, min(_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec3(1, 0, 1))) & _GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (1)), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(1, (1) + _GLF_IDENTITY(0, clamp(0, 0, 0))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-58077) : _GLF_IDENTITY(1, int(ivec3(1, 0, 1))) & 1)), _GLF_IDENTITY(1, int(ivec3(1, 0, 1))) & 1))), ! (! (_injected_loop_counter != (1 & 1))))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false), true, true)), _GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter != (1 & 1), _GLF_IDENTITY((_injected_loop_counter != (_GLF_IDENTITY(1 & 1, (true ? _GLF_IDENTITY(1 & 1, ~ (~ (1 & 1))) : _GLF_FUZZED(_injected_loop_counter))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ((_injected_loop_counter != (_GLF_IDENTITY(_GLF_IDENTITY(1 & 1, max(_GLF_IDENTITY(1 & 1, 1 * (_GLF_IDENTITY(1 & 1, ~ (~ (1 & 1))))), 1 & 1)), (true ? _GLF_IDENTITY(1 & 1, ~ (~ (1 & 1))) : _GLF_FUZZED(_injected_loop_counter))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false)), ! (! (_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(~ (~ (_injected_loop_counter)), (~ (~ (_injected_loop_counter))) | (~ (~ (_injected_loop_counter)))))) + 0) != (1 & 1))))), bool(bvec3(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter != (1 & 1), (_injected_loop_counter != (1 & 1)) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((6277.0315 * 2.4))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) < injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter)))) + 0) != _GLF_IDENTITY((1 & 1), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4((1 & 1), 1, 0, 0), max(ivec4((1 & 1), 1, 0, 0), ivec4((1 & 1), 1, 0, 0)))), 0 | (_GLF_IDENTITY(int(_GLF_IDENTITY(ivec4((1 & 1), 1, 0, 0), max(ivec4((1 & 1), 1, 0, 0), ivec4((1 & 1), 1, 0, 0)))), (int(_GLF_IDENTITY(ivec4((1 & 1), 1, 0, 0), max(ivec4((1 & 1), 1, 0, 0), ivec4((1 & 1), 1, 0, 0))))) + 0)))))))), true, false))), true, true, true))), ((bool(bvec4(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter != (1 & 1), (_injected_loop_counter != (_GLF_IDENTITY(1 & 1, (true ? _GLF_IDENTITY(1 & 1, ~ (~ (1 & 1))) : _GLF_FUZZED(_injected_loop_counter))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(~ (~ (_injected_loop_counter)), (~ (~ (_injected_loop_counter))) | (~ (~ (_injected_loop_counter)))))) + 0) != (1 & 1)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter != (1 & 1), (_injected_loop_counter != (_GLF_IDENTITY(1 & 1, (true ? _GLF_IDENTITY(1 & 1, ~ (~ (1 & 1))) : _GLF_FUZZED(_injected_loop_counter))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(~ (~ (_injected_loop_counter)), (~ (~ (_injected_loop_counter))) | (~ (~ (_injected_loop_counter)))))) + 0) != (1 & 1)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter != (1 & 1), (_injected_loop_counter != (_GLF_IDENTITY(1 & 1, (true ? _GLF_IDENTITY(1 & 1, ~ (~ (1 & 1))) : _GLF_FUZZED(_injected_loop_counter))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(~ (~ (_injected_loop_counter)), (~ (~ (_injected_loop_counter))) | (~ (~ (_injected_loop_counter)))))) + 0) != (1 & 1)))), (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter != _GLF_IDENTITY((1 & 1), max((1 & 1), _GLF_IDENTITY((1 & 1), max((1 & 1), (1 & 1))))), (_injected_loop_counter != (_GLF_IDENTITY(1 & 1, (true ? _GLF_IDENTITY(1 & 1, ~ (~ (1 & 1))) : _GLF_FUZZED(_injected_loop_counter))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(~ (~ (_injected_loop_counter)), (~ (~ (_injected_loop_counter))) | (~ _GLF_IDENTITY((~ (_injected_loop_counter)), ((~ (_injected_loop_counter))) | (_GLF_IDENTITY((~ (_injected_loop_counter)), 0 ^ ((~ (_injected_loop_counter)))))))))) + _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0))) != (1 & 1))))) || false)) && true))))), bool(bvec3(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter != (1 & 1), (_injected_loop_counter != (1 & 1)) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((6277.0315 * 2.4))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) < injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter)))), clamp((_GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter)))), (_GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter)))), (_GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter)))))) + 0) != (1 & 1))))), true, false))), true, true, true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true))), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != (_GLF_IDENTITY(1 & 1, (_GLF_IDENTITY(1 & 1, (_GLF_IDENTITY(1 & 1, (true ? 1 & 1 : _GLF_FUZZED(_injected_loop_counter)))) * 1)) >> 0)), ! (! (_injected_loop_counter != (_GLF_IDENTITY(1, 0 | (1)) & 1))))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != (1 & 1), ! (! (_injected_loop_counter != (1 & 1)))))), true && (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != (1 & 1), ! (! (_injected_loop_counter != (1 & 1)))))), true && (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter != (1 & 1), ! (_GLF_IDENTITY(! (_injected_loop_counter != (1 & 1)), bool(bvec2(! (_injected_loop_counter != (1 & 1)), true))))), _GLF_IDENTITY(! (! (_injected_loop_counter != (1 & 1))), true && (_GLF_IDENTITY(! (! (_injected_loop_counter != (1 & 1))), bool(bool(! (! (_injected_loop_counter != (1 & 1))))))))))))))))), true, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))), true)), true && (_GLF_IDENTITY(bool(bvec4(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (0 << _GLF_IDENTITY(int(5), int(5))) + (_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter)))) != (_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec3(1, 0, 1))) & 1, min(_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec3(1, 0, 1))) & _GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (1)), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(1, (1) + _GLF_IDENTITY(0, clamp(0, 0, 0))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-58077) : _GLF_IDENTITY(1, int(ivec3(1, 0, 1))) & 1)), _GLF_IDENTITY(1, int(ivec3(1, 0, 1))) & 1))), ! (! (_injected_loop_counter != (1 & 1))))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false), true, true)), _GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter != (1 & 1), _GLF_IDENTITY((_injected_loop_counter != (_GLF_IDENTITY(1 & 1, (true ? _GLF_IDENTITY(1 & 1, ~ (~ (1 & 1))) : _GLF_FUZZED(_injected_loop_counter))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ((_injected_loop_counter != (_GLF_IDENTITY(_GLF_IDENTITY(1 & 1, max(_GLF_IDENTITY(1 & 1, 1 * (_GLF_IDENTITY(1 & 1, ~ (~ (1 & 1))))), 1 & 1)), (true ? _GLF_IDENTITY(1 & 1, ~ (~ (1 & 1))) : _GLF_FUZZED(_injected_loop_counter))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false)), ! (! (_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(~ (~ (_injected_loop_counter)), (~ (~ (_injected_loop_counter))) | (~ (~ (_injected_loop_counter)))))) + 0) != (1 & 1))))), bool(bvec3(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter != (1 & 1), (_injected_loop_counter != (1 & 1)) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((6277.0315 * 2.4))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) < injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter)))) + 0) != _GLF_IDENTITY((1 & 1), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4((1 & 1), 1, 0, 0), max(ivec4((1 & 1), 1, 0, 0), ivec4((1 & 1), 1, 0, 0)))), 0 | (_GLF_IDENTITY(int(_GLF_IDENTITY(ivec4((1 & 1), 1, 0, 0), max(ivec4((1 & 1), 1, 0, 0), ivec4((1 & 1), 1, 0, 0)))), (int(_GLF_IDENTITY(ivec4((1 & 1), 1, 0, 0), max(ivec4((1 & 1), 1, 0, 0), ivec4((1 & 1), 1, 0, 0))))) + 0)))))))), true, false))), true, true, true))), ((bool(bvec4(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter != (1 & 1), (_injected_loop_counter != (_GLF_IDENTITY(1 & 1, (true ? _GLF_IDENTITY(1 & 1, ~ (~ (1 & 1))) : _GLF_FUZZED(_injected_loop_counter))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(~ (~ (_injected_loop_counter)), (~ (~ (_injected_loop_counter))) | (~ (~ (_injected_loop_counter)))))) + 0) != (1 & 1)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter != (1 & 1), (_injected_loop_counter != (_GLF_IDENTITY(1 & 1, (true ? _GLF_IDENTITY(1 & 1, ~ (~ (1 & 1))) : _GLF_FUZZED(_injected_loop_counter))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(~ (~ (_injected_loop_counter)), (~ (~ (_injected_loop_counter))) | (~ (~ (_injected_loop_counter)))))) + 0) != (1 & 1)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter != (1 & 1), (_injected_loop_counter != (_GLF_IDENTITY(1 & 1, (true ? _GLF_IDENTITY(1 & 1, ~ (~ (1 & 1))) : _GLF_FUZZED(_injected_loop_counter))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(~ (~ (_injected_loop_counter)), (~ (~ (_injected_loop_counter))) | (~ (~ (_injected_loop_counter)))))) + 0) != (1 & 1)))), (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter != _GLF_IDENTITY((1 & 1), max((1 & 1), _GLF_IDENTITY((1 & 1), max((1 & 1), (1 & 1))))), (_injected_loop_counter != (_GLF_IDENTITY(1 & 1, (true ? _GLF_IDENTITY(1 & 1, ~ (~ (1 & 1))) : _GLF_FUZZED(_injected_loop_counter))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(~ (~ (_injected_loop_counter)), (~ (~ (_injected_loop_counter))) | (~ _GLF_IDENTITY((~ (_injected_loop_counter)), ((~ (_injected_loop_counter))) | (_GLF_IDENTITY((~ (_injected_loop_counter)), 0 ^ ((~ (_injected_loop_counter)))))))))) + _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0))) != (1 & 1))))) || false)) && true))))), bool(bvec3(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter != (1 & 1), (_injected_loop_counter != (1 & 1)) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((6277.0315 * 2.4))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) < injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter)))), clamp((_GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter)))), (_GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter)))), (_GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter)))))) + 0) != (1 & 1))))), true, false))), true, true, true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != (_GLF_IDENTITY(1 & 1, (_GLF_IDENTITY(1 & 1, (_GLF_IDENTITY(1 & 1, (true ? 1 & 1 : _GLF_FUZZED(_injected_loop_counter)))) * 1)) >> 0)), ! (! (_injected_loop_counter != (_GLF_IDENTITY(1, 0 | (1)) & 1))))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != (1 & 1), ! (! (_injected_loop_counter != (1 & 1)))))), true && (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != (1 & 1), ! (! (_injected_loop_counter != (1 & 1)))))), true && (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter != (1 & 1), ! (_GLF_IDENTITY(! (_injected_loop_counter != (1 & 1)), bool(bvec2(! (_injected_loop_counter != (1 & 1)), true))))), _GLF_IDENTITY(! (! (_injected_loop_counter != (1 & 1))), true && (_GLF_IDENTITY(! (! (_injected_loop_counter != (1 & 1))), bool(bool(! (! (_injected_loop_counter != (1 & 1))))))))))))))))), true, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))), true)), true && (_GLF_IDENTITY(bool(bvec4(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (0 << _GLF_IDENTITY(int(5), int(5))) + (_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter)))) != (_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec3(1, 0, 1))) & 1, min(_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec3(1, 0, 1))) & _GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (1)), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(1, (1) + _GLF_IDENTITY(0, clamp(0, 0, 0))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-58077) : _GLF_IDENTITY(1, int(ivec3(1, 0, 1))) & 1)), _GLF_IDENTITY(1, int(ivec3(1, 0, 1))) & 1))), ! (! (_injected_loop_counter != (1 & 1))))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false), true, true)), _GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter != (1 & 1), _GLF_IDENTITY((_injected_loop_counter != (_GLF_IDENTITY(1 & 1, (true ? _GLF_IDENTITY(1 & 1, ~ (~ (1 & 1))) : _GLF_FUZZED(_injected_loop_counter))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ((_injected_loop_counter != (_GLF_IDENTITY(_GLF_IDENTITY(1 & 1, max(_GLF_IDENTITY(1 & 1, 1 * (_GLF_IDENTITY(1 & 1, ~ (~ (1 & 1))))), 1 & 1)), (true ? _GLF_IDENTITY(1 & 1, ~ (~ (1 & 1))) : _GLF_FUZZED(_injected_loop_counter))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false)), ! (! (_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(~ (~ (_injected_loop_counter)), (~ (~ (_injected_loop_counter))) | (~ (~ (_injected_loop_counter)))))) + 0) != (1 & 1))))), bool(bvec3(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter != (1 & 1), (_injected_loop_counter != (1 & 1)) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((6277.0315 * 2.4))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) < injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter)))) + 0) != _GLF_IDENTITY((1 & 1), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4((1 & 1), 1, 0, 0), max(ivec4((1 & 1), 1, 0, 0), ivec4((1 & 1), 1, 0, 0)))), 0 | (_GLF_IDENTITY(int(_GLF_IDENTITY(ivec4((1 & 1), 1, 0, 0), max(ivec4((1 & 1), 1, 0, 0), ivec4((1 & 1), 1, 0, 0)))), (int(_GLF_IDENTITY(ivec4((1 & 1), 1, 0, 0), max(ivec4((1 & 1), 1, 0, 0), ivec4((1 & 1), 1, 0, 0))))) + 0)))))))), true, false))), true, true, true))), ((bool(bvec4(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter != (1 & 1), (_injected_loop_counter != (_GLF_IDENTITY(1 & 1, (true ? _GLF_IDENTITY(1 & 1, ~ (~ (1 & 1))) : _GLF_FUZZED(_injected_loop_counter))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(~ (~ (_injected_loop_counter)), (~ (~ (_injected_loop_counter))) | (~ (~ (_injected_loop_counter)))))) + 0) != (1 & 1)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter != (1 & 1), (_injected_loop_counter != (_GLF_IDENTITY(1 & 1, (true ? _GLF_IDENTITY(1 & 1, ~ (~ (1 & 1))) : _GLF_FUZZED(_injected_loop_counter))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(~ (~ (_injected_loop_counter)), (~ (~ (_injected_loop_counter))) | (~ (~ (_injected_loop_counter)))))) + 0) != (1 & 1)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter != (1 & 1), (_injected_loop_counter != (_GLF_IDENTITY(1 & 1, (true ? _GLF_IDENTITY(1 & 1, ~ (~ (1 & 1))) : _GLF_FUZZED(_injected_loop_counter))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(~ (~ (_injected_loop_counter)), (~ (~ (_injected_loop_counter))) | (~ (~ (_injected_loop_counter)))))) + 0) != (1 & 1)))), (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter != _GLF_IDENTITY((1 & 1), max((1 & 1), _GLF_IDENTITY((1 & 1), max((1 & 1), (1 & 1))))), (_injected_loop_counter != (_GLF_IDENTITY(1 & 1, (true ? _GLF_IDENTITY(1 & 1, ~ (~ (1 & 1))) : _GLF_FUZZED(_injected_loop_counter))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(~ (~ (_injected_loop_counter)), (~ (~ (_injected_loop_counter))) | (~ _GLF_IDENTITY((~ (_injected_loop_counter)), ((~ (_injected_loop_counter))) | (_GLF_IDENTITY((~ (_injected_loop_counter)), 0 ^ ((~ (_injected_loop_counter)))))))))) + _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0))) != (1 & 1))))) || false)) && true))))), bool(bvec3(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter != (1 & 1), (_injected_loop_counter != (1 & 1)) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((6277.0315 * 2.4))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) < injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter)))), clamp((_GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter)))), (_GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter)))), (_GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter)))))) + 0) != (1 & 1))))), true, false))), true, true, true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true)))), bool(bvec4(bool(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != (_GLF_IDENTITY(1 & 1, (_GLF_IDENTITY(1 & 1, (_GLF_IDENTITY(1 & 1, (true ? 1 & 1 : _GLF_FUZZED(_injected_loop_counter)))) * 1)) >> 0)), ! (! (_injected_loop_counter != (_GLF_IDENTITY(1, 0 | (1)) & 1))))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != (1 & 1), ! (! (_injected_loop_counter != (1 & 1)))))), true && (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != (1 & 1), ! (! (_injected_loop_counter != (1 & 1)))))), true && (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter != (1 & 1), ! (_GLF_IDENTITY(! (_injected_loop_counter != (1 & 1)), bool(bvec2(! (_injected_loop_counter != (1 & 1)), true))))), _GLF_IDENTITY(! (! (_injected_loop_counter != (1 & 1))), true && (_GLF_IDENTITY(! (! (_injected_loop_counter != (1 & 1))), bool(bool(! (! (_injected_loop_counter != (1 & 1))))))))))))))))), true, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))), true)), true && (_GLF_IDENTITY(bool(bvec4(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (0 << _GLF_IDENTITY(int(5), int(5))) + (_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter)))) != (_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec3(1, 0, 1))) & 1, min(_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec3(1, 0, 1))) & _GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (1)), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(1, (1) + _GLF_IDENTITY(0, clamp(0, 0, 0))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-58077) : _GLF_IDENTITY(1, int(ivec3(1, 0, 1))) & 1)), _GLF_IDENTITY(1, int(ivec3(1, 0, 1))) & 1))), ! (! (_injected_loop_counter != (1 & 1))))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false), true, true)), _GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter != (1 & 1), _GLF_IDENTITY((_injected_loop_counter != (_GLF_IDENTITY(1 & 1, (true ? _GLF_IDENTITY(1 & 1, ~ (~ (1 & 1))) : _GLF_FUZZED(_injected_loop_counter))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ((_injected_loop_counter != (_GLF_IDENTITY(_GLF_IDENTITY(1 & 1, max(_GLF_IDENTITY(1 & 1, 1 * (_GLF_IDENTITY(1 & 1, ~ (~ (1 & 1))))), 1 & 1)), (true ? _GLF_IDENTITY(1 & 1, ~ (~ (1 & 1))) : _GLF_FUZZED(_injected_loop_counter))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false)), ! (! (_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(~ (~ (_injected_loop_counter)), (~ (~ (_injected_loop_counter))) | (~ (~ (_injected_loop_counter)))))) + 0) != (1 & 1))))), bool(bvec3(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter != (1 & 1), (_injected_loop_counter != (1 & 1)) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((6277.0315 * 2.4))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) < injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter)))) + 0) != _GLF_IDENTITY((1 & 1), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4((1 & 1), 1, 0, 0), max(ivec4((1 & 1), 1, 0, 0), ivec4((1 & 1), 1, 0, 0)))), 0 | (_GLF_IDENTITY(int(_GLF_IDENTITY(ivec4((1 & 1), 1, 0, 0), max(ivec4((1 & 1), 1, 0, 0), ivec4((1 & 1), 1, 0, 0)))), (int(_GLF_IDENTITY(ivec4((1 & 1), 1, 0, 0), max(ivec4((1 & 1), 1, 0, 0), ivec4((1 & 1), 1, 0, 0))))) + 0)))))))), true, false))), true, true, true))), ((bool(bvec4(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter != (1 & 1), (_injected_loop_counter != (_GLF_IDENTITY(1 & 1, (true ? _GLF_IDENTITY(1 & 1, ~ (~ (1 & 1))) : _GLF_FUZZED(_injected_loop_counter))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(~ (~ (_injected_loop_counter)), (~ (~ (_injected_loop_counter))) | (~ (~ (_injected_loop_counter)))))) + 0) != (1 & 1)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter != (1 & 1), (_injected_loop_counter != (_GLF_IDENTITY(1 & 1, (true ? _GLF_IDENTITY(1 & 1, ~ (~ (1 & 1))) : _GLF_FUZZED(_injected_loop_counter))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(~ (~ (_injected_loop_counter)), (~ (~ (_injected_loop_counter))) | (~ (~ (_injected_loop_counter)))))) + 0) != (1 & 1)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter != (1 & 1), (_injected_loop_counter != (_GLF_IDENTITY(1 & 1, (true ? _GLF_IDENTITY(1 & 1, ~ (~ (1 & 1))) : _GLF_FUZZED(_injected_loop_counter))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(~ (~ (_injected_loop_counter)), (~ (~ (_injected_loop_counter))) | (~ (~ (_injected_loop_counter)))))) + 0) != (1 & 1)))), (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter != _GLF_IDENTITY((1 & 1), max((1 & 1), _GLF_IDENTITY((1 & 1), max((1 & 1), (1 & 1))))), (_injected_loop_counter != (_GLF_IDENTITY(1 & 1, (true ? _GLF_IDENTITY(1 & 1, ~ (~ (1 & 1))) : _GLF_FUZZED(_injected_loop_counter))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(~ (~ (_injected_loop_counter)), (~ (~ (_injected_loop_counter))) | (~ _GLF_IDENTITY((~ (_injected_loop_counter)), ((~ (_injected_loop_counter))) | (_GLF_IDENTITY((~ (_injected_loop_counter)), 0 ^ ((~ (_injected_loop_counter)))))))))) + _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0))) != (1 & 1))))) || false)) && true))))), bool(bvec3(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter != (1 & 1), (_injected_loop_counter != (1 & 1)) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((6277.0315 * 2.4))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) < injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter)))), clamp((_GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter)))), (_GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter)))), (_GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter)))))) + 0) != (1 & 1))))), true, false))), true, true, true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true)))), true, true, true)))))))); _injected_loop_counter ++)
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), false), bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), false))))), bool(bvec2(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, _GLF_IDENTITY(true, (true) && true))), bool(_GLF_IDENTITY(bool(bool(bvec3(false, true, _GLF_IDENTITY(true, (true) && true)))), false || (bool(bool(bvec3(false, true, _GLF_IDENTITY(true, (true) && true))))))))), false || (false))), false), bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), false))))), false))))) || false))
      return;
     buf[virtual_gid] = 1;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      break;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)) + 0.0) > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)) : _GLF_FUZZED(vec2(-5.2, 30.90)))).y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 1.0, abs(0.0), 1.0, 1.0), (mat2x3(injectionSwitch, 1.0, abs(0.0), 1.0, 1.0)) + mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))).y)))) && true))), bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5.7), _GLF_FUZZED(2.2)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y)))))))), false)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && ((false))) || false)))
  return;
 if(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))), 1u * (~ (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))))))), (true ? subgroup_local_id : _GLF_FUZZED(subgroup_id)))))) : _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u))) + 1 < _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) + 0u))
  {
   do
    {
     if(_GLF_DEAD(false))
      return;
     buf[next_virtual_gid] = 2;
    }
   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bvec4(_GLF_WRAPPED_LOOP(false), true, _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))))))), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))))))), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))))))), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 0.0, 0.0, 0.0))) > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), true, true, _GLF_IDENTITY(false, (false) || false))), true && (bool(bvec4(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) || false), true, true, false))))))))))), false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), false || ((! (true))))), _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, false || (true))))) && (_GLF_IDENTITY(true, ! (! (true)))))))), false))))))), _GLF_IDENTITY(! (! ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, false))))))))), (! (! ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, _GLF_IDENTITY(false, bool(bvec3(false, false, true))))))))))))) && true)))))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, (true) && true), false)), true && (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, (true) && true), false)), true && (bool(bvec2(_GLF_IDENTITY(true, (true) && true), false))))))), true, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), true && (! (_GLF_IDENTITY(false, ! (! (false)))))))), false)), ! (! (bool(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, (true) && true), _GLF_IDENTITY(false, bool(bvec4(false, true, true, true))))), true && _GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, ! (! (_GLF_IDENTITY((true), ! (! (_GLF_IDENTITY((true), true && ((true)))))) && true)))), false))), false || ((bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, ! (! (_GLF_IDENTITY((true), ! (! (_GLF_IDENTITY((true), true && ((true)))))) && true)))), false))))))), true, false, false))))))))));
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   subgroupAll(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bool(! (! (false)))), _GLF_IDENTITY(true && (bool(bool(! (! (false))))), _GLF_IDENTITY((true && (bool(bool(! (! (false)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2((true && (bool(bool(! (! (false)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), ! (! (bool(bvec2((true && (bool(bool(! (! (false)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))))));
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), true && (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (bool(false)) || false))) && true)))))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y))), ! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))), max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))), bool(bvec4(_GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))), true && ((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec3(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), false, true)), bool(_GLF_IDENTITY(bool(bool(bvec3(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), false, true))), (bool(bool(bvec3(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), false, true)))) || false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (true && (false)) || false))))
      return;
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   _GLF_IDENTITY(buf[next_virtual_gid] = _GLF_IDENTITY(2, max(2, _GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(1, min(1, 1))))))), (true ? buf[next_virtual_gid] = _GLF_IDENTITY(2, max(2, _GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(1, min(1, 1))))))) : _GLF_FUZZED(subgroup_size)));
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || false) || false), ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(606.532)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(606.532)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || (_GLF_IDENTITY(true, false || (true)))) && (_GLF_IDENTITY(false, ! (! (false)))))) && _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (! (true))))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-4918.9008, 1981.4691))))[1]), min(vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-4918.9008, 1981.4691))))[1]), vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-4918.9008, 1981.4691))))[1])))).x < injectionSwitch.y)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(9.1), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), _GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * ((injectionSwitch)))))[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED(5737.2387)), bvec2(true, false))).y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-9.2)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(-1991.6542)), float(_GLF_IDENTITY(mix(float(_GLF_FUZZED(-9.2)), float(injectionSwitch.y), bool(true)), max(mix(float(_GLF_FUZZED(-9.2)), float(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (true ? injectionSwitch[1] : _GLF_FUZZED(261.566))))).y), bool(true)), mix(float(_GLF_FUZZED(-9.2)), float(injectionSwitch.y), bool(true))))), bool(true))))))), true && (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - sin(0.0))))))))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   subgroupAll(_GLF_IDENTITY(true, bool(bvec4(true, false, false, true))));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, false)))), false || ((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, false))))))), true && (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, false)))), false || ((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, false))))))))))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, false)))), false || ((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, false))))))), true && (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, false)))), false || ((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, false))))))))))), true, false, true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, float(mat3x4(_GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(sin(0.0), 1.0, 1.0), vec3(exp(0.0), 0.0, 0.0)), dot(vec3(sin(0.0), 1.0, 1.0), vec3(exp(0.0), 0.0, 0.0))), 1.0, 1.0, 0.0, 0.0))), 1.0 * (_GLF_IDENTITY(0.0, float(mat3x4(_GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(sin(0.0), 1.0, 1.0), vec3(exp(0.0), 0.0, 0.0)), dot(vec3(sin(0.0), 1.0, 1.0), vec3(exp(0.0), 0.0, 0.0))), 1.0, 1.0, 0.0, 0.0))))))).y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
