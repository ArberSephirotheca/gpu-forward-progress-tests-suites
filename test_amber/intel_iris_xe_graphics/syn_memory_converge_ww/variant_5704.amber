#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-591.432)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-591.432)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-591.432)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-591.432)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false))))))))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_DEAD(false)))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), (_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), true && (! (! (false))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), true && (! (! (false))))), bool(bvec2(! (_GLF_IDENTITY(! (! (false)), true && (! (! (false))))), false))))))), _GLF_IDENTITY(false, bool(bvec4(false, true, true, true))) || (_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), true && (! (! (false))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), true && (! (! (false))))), bool(bvec2(! (_GLF_IDENTITY(! (! (false)), true && (! (! (false))))), false))))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), true && (! (! (false))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), true && (! (! (false))))), bool(bvec2(! (_GLF_IDENTITY(! (! (false)), true && (! (! (false))))), false))))))), ! (! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), true && (! (! (false))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), true && (! (! (false))))), bool(bvec2(! (_GLF_IDENTITY(! (! (false)), true && (! (! (false))))), false))), true && (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! (! (false)), true && (! (! (_GLF_IDENTITY(false, true && (false))))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! (! (false)), true && (! (! (_GLF_IDENTITY(false, true && (false)))))))), ! (! (! ((_GLF_IDENTITY(! (! (false)), true && (! (! (_GLF_IDENTITY(false, true && (false))))))))))))), bool(bvec2(! (_GLF_IDENTITY(! (! (false)), true && (! (! (false))))), false))))))))))))) && true)))) || false)), ((_GLF_IDENTITY(! (false), (_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), true && (! (! (false))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), true && (! (! (false))))), bool(bvec2(! (_GLF_IDENTITY(! (! (false)), true && (! (! (false))))), false))))))), _GLF_IDENTITY(false, bool(bvec4(false, true, true, true))) || (_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), true && (! (! (false))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), true && (! (! (false))))), bool(bvec2(! (_GLF_IDENTITY(! (! (false)), true && (! (! (false))))), false))))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), true && (! (! (false))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), true && (! (! (false))))), bool(bvec2(! (_GLF_IDENTITY(! (! (false)), true && (! (! (false))))), false))))))), ! (! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), true && (! (! (false))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), true && (! (! (false))))), bool(bvec2(! (_GLF_IDENTITY(! (! (false)), true && (! (! (false))))), false))), true && (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! (! (false)), true && (! (! (_GLF_IDENTITY(false, true && (false))))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! (! (false)), true && (! (! (_GLF_IDENTITY(false, true && (false)))))))), ! (! (! ((_GLF_IDENTITY(! (! (false)), true && (! (! (_GLF_IDENTITY(false, true && (false))))))))))))), bool(bvec2(! (_GLF_IDENTITY(! (! (false)), true && (! (! (false))))), false))))))))))))) && true)))) || false))) && true))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), (! _GLF_IDENTITY((false), false || ((false)))) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true))))))))))))), ((_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), (! (false)) && true))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (! (false))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x, max(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x, 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 0.0))), max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x)))) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
  return;
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(_GLF_IDENTITY(min(gl_WorkGroupSize, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, min(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)), gl_WorkGroupSize)), uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) >> uvec3(0u, 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) >> 0u)))), min(_GLF_IDENTITY((gl_WorkGroupSize) >> uvec3(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((0u), max((0u), (0u))) / 1u)), (_GLF_IDENTITY((gl_WorkGroupSize) >> uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) >> uvec3(0u, 0u, 0u)) - uvec3(0u, 0u, 0u))) ^ uvec3(0u, 0u, 0u)), (gl_WorkGroupSize) >> uvec3(0u, 0u, 0u)))), 0u)))), _GLF_IDENTITY(uvec3(uvec3(min(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) >> uvec3(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(76818u))), 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) >> 0u)))), min(_GLF_IDENTITY((gl_WorkGroupSize) >> uvec3(0u, 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, 1u * (0u)))), (0u) / 1u)), (_GLF_IDENTITY((gl_WorkGroupSize) >> uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) >> uvec3(0u, 0u, 0u)) - uvec3(0u, 0u, 0u))) ^ uvec3(0u, 0u, 0u)), (gl_WorkGroupSize) >> uvec3(0u, 0u, 0u)))), 0u)))))), clamp(uvec3(uvec3(min(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) >> uvec3(0u, 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) >> 0u)))), min(_GLF_IDENTITY((gl_WorkGroupSize) >> uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) / 1u)), (_GLF_IDENTITY((gl_WorkGroupSize) >> uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) >> uvec3(0u, 0u, 0u)) - uvec3(0u, 0u, 0u))) ^ uvec3(0u, 0u, 0u)), (gl_WorkGroupSize) >> uvec3(0u, 0u, 0u)))), 0u)))))), uvec3(uvec3(min(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) >> uvec3(0u, 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) >> 0u), (_GLF_IDENTITY(0u, (0u) >> 0u)) / 1u)))), min(_GLF_IDENTITY((gl_WorkGroupSize) >> uvec3(0u, _GLF_IDENTITY(0u, (0u) | (0u)), _GLF_IDENTITY(0u, (0u) / 1u)), (_GLF_IDENTITY((gl_WorkGroupSize) >> uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) >> uvec3(0u, 0u, 0u)) - uvec3(0u, 0u, 0u))) ^ uvec3(0u, 0u, 0u)), (gl_WorkGroupSize) >> uvec3(0u, 0u, 0u)))), 0u)))))), uvec3(uvec3(min(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize), (false ? _GLF_FUZZED(uvec3(190534u, 175421u, 63121u)) : (gl_WorkGroupSize))) >> uvec3(0u, 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) >> 0u)))), min(_GLF_IDENTITY((gl_WorkGroupSize) >> uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) / 1u)), (_GLF_IDENTITY((gl_WorkGroupSize) >> uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) >> uvec3(0u, 0u, 0u)) - uvec3(0u, _GLF_IDENTITY(0u, 0u | (0u)), 0u))) ^ uvec3(0u, 0u, 0u)), (gl_WorkGroupSize) >> uvec3(0u, 0u, 0u)))), 0u))))))))), uvec3(_GLF_IDENTITY(uvec3(min(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) >> uvec3(0u, _GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_FUZZED(uint((2.9 + 5215.9477))))), _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) >> 0u)))), min(_GLF_IDENTITY((gl_WorkGroupSize) >> uvec3(_GLF_IDENTITY(0u, (0u) << 0u), 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / 1u, (true ? _GLF_IDENTITY((0u), 0u + ((0u))) / 1u : _GLF_FUZZED(subgroup_local_id)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, (0u) / 1u)), (true ? ~ (_GLF_IDENTITY(0u, (0u) / 1u)) : _GLF_FUZZED(subgroup_local_id)))))) << 0u)), (_GLF_IDENTITY((gl_WorkGroupSize) >> uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) >> uvec3(0u, 0u, 0u)) - uvec3(_GLF_IDENTITY(0u, (0u) + 0u), 0u, 0u))) ^ uvec3(0u, 0u, 0u)), (gl_WorkGroupSize) >> uvec3(0u, 0u, 0u)))), 0u))))), (false ? _GLF_FUZZED(uvec3(42112u, 129062u, 62738u)) : uvec3(min(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) >> _GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) >> 0u), (_GLF_IDENTITY(0u, (0u) >> 0u)) >> 0u)))), (uvec3(0u, 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) >> 0u), (_GLF_IDENTITY(0u, (0u) >> 0u)) >> 0u))))) ^ uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(uvec3(0u, 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) >> 0u), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) >> 0u)) >> 0u)))), (uvec3(0u, 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) >> 0u), (_GLF_IDENTITY(0u, (0u) >> 0u)) >> 0u))))) ^ uvec3(0u, _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, uint(uvec4(0u, 1u, 1u, 1u)))))), 0u))) + uvec3(0u, 0u, 0u)), min(_GLF_IDENTITY((gl_WorkGroupSize) >> uvec3(_GLF_IDENTITY(0u, max(0u, 0u)), 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uvec2(0u, 0u))), (0u) / 1u)), (_GLF_IDENTITY((gl_WorkGroupSize) >> uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) >> uvec3(0u, 0u, 0u)) - uvec3(0u, 0u, 0u))) ^ uvec3(0u, 0u, 0u)), (gl_WorkGroupSize) >> uvec3(0u, 0u, 0u)))), 0u)))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ~ _GLF_IDENTITY((~ (gl_WorkGroupSize)), ((_GLF_IDENTITY(~ (gl_WorkGroupSize), uvec3(0u, 0u, 0u) | (~ (gl_WorkGroupSize))))) | ((~ (gl_WorkGroupSize))))), min(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) >> uvec3(_GLF_IDENTITY(0u, (0u) | (0u)), 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> (0u << _GLF_IDENTITY(uint(3u), uint(3u))))) >> 0u)))), _GLF_IDENTITY(min(_GLF_IDENTITY((gl_WorkGroupSize) >> uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u, _GLF_IDENTITY(0u, (0u) / 1u)), (_GLF_IDENTITY((gl_WorkGroupSize) >> uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) >> uvec3(0u, 0u, 0u)) - uvec3(0u, 0u, 0u))) ^ _GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) ^ (uvec3(0u, 0u, 0u)))))), (_GLF_IDENTITY(gl_WorkGroupSize, clamp(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize, gl_WorkGroupSize))) >> uvec3(0u, 0u, 0u)), _GLF_IDENTITY(uvec3(uvec3(min(_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize) >> uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) / 1u)), ((gl_WorkGroupSize) >> uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) / 1u))) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) >> uvec3(0u, 0u, 0u))), (_GLF_IDENTITY((gl_WorkGroupSize) >> uvec3(0u, 0u, 0u), (_GLF_IDENTITY((gl_WorkGroupSize) >> uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) >> uvec3(0u, 0u, 0u)) | ((gl_WorkGroupSize) >> uvec3(0u, 0u, 0u)))) - uvec3(0u, 0u, 0u))) ^ uvec3(0u, 0u, 0u)), (gl_WorkGroupSize) >> uvec3(_GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_FUZZED(subgroup_size))), 0u, 0u)))), uvec3(0u, 0u, 0u) | (uvec3(uvec3(min(_GLF_IDENTITY((gl_WorkGroupSize) >> uvec3(0u, _GLF_IDENTITY(0u, ~ (~ (0u))), _GLF_IDENTITY(0u, (0u) / 1u)), (_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize) >> uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) >> uvec3(0u, 0u, 0u)) - uvec3(0u, _GLF_IDENTITY(0u, max(0u, 0u)), 0u)), clamp(_GLF_IDENTITY((gl_WorkGroupSize) >> uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) >> uvec3(0u, 0u, 0u)) - uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec4(0u, 0u, 0u, 1u)))) >> 0u), 0u)), _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize) >> uvec3(0u, 0u, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, 0u ^ (0u)), 0u))), ((gl_WorkGroupSize) >> uvec3(0u, 0u, _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, 0u | (0u)))))) - uvec3(0u, 0u, 0u)), uvec3(uvec4(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) | (gl_WorkGroupSize))) / uvec3(1u, 1u, 1u))) >> uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) >> uvec3(0u, 0u, 0u)) - uvec3(0u, 0u, 0u)), (1u ^ 1u)))), _GLF_IDENTITY((gl_WorkGroupSize) >> uvec3(0u, 0u, 0u), ((gl_WorkGroupSize) >> uvec3(0u, 0u, 0u)) - uvec3(0u, 0u, 0u))))) ^ uvec3(0u, 0u, 0u)), (gl_WorkGroupSize) >> uvec3(0u, 0u, 0u))))))))), 0u)))))) ^ uvec3(0u, 0u, 0u)).x;
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | (uvec3(1u, 1u, 1u)))), min(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | (uvec3(1u, 1u, 1u)))), ~ (~ (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | (uvec3(1u, 1u, 1u))))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | (uvec3(1u, 1u, 1u)))), max(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | (uvec3(1u, 1u, 1u)))), _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | (uvec3(1u, 1u, 1u)))))))).x : _GLF_FUZZED(uaddCarry(workgroup_size, subgroup_local_id, subgroup_local_id)))), (_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(gl_WorkGroupID.x, gl_WorkGroupID.x)), (true ? gl_WorkGroupID.x : _GLF_FUZZED(uaddCarry(_GLF_IDENTITY(workgroup_size, min(_GLF_IDENTITY(workgroup_size, 0u | (workgroup_size)), _GLF_IDENTITY(workgroup_size, 0u ^ _GLF_IDENTITY((workgroup_size), ((workgroup_size)) | ((workgroup_size)))))), subgroup_local_id, subgroup_local_id)))) : _GLF_FUZZED(98701u), ~ (~ (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, max(_GLF_IDENTITY(gl_WorkGroupID.x, uint(uint(gl_WorkGroupID.x))), gl_WorkGroupID.x)), (true ? gl_WorkGroupID.x : _GLF_FUZZED(uaddCarry(_GLF_IDENTITY(workgroup_size, min(_GLF_IDENTITY(workgroup_size, 0u | (workgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, 0u ^ (workgroup_size)), (uint(true) & 0u) ^ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, 0u ^ (workgroup_size)), ~ (~ (_GLF_IDENTITY(workgroup_size, 0u ^ (workgroup_size))))))))), subgroup_local_id, subgroup_local_id)))) : _GLF_FUZZED(98701u))))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, _GLF_IDENTITY(false, ! (! (false))), true))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(sqrt(0.0), min(sqrt(0.0), sqrt(0.0))), min(_GLF_IDENTITY(_GLF_IDENTITY(sqrt(0.0), min(sqrt(0.0), sqrt(0.0))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(sqrt(0.0), min(sqrt(0.0), sqrt(0.0))), mix(float(_GLF_FUZZED(4.4)), float(_GLF_IDENTITY(sqrt(0.0), min(sqrt(0.0), sqrt(0.0)))), bool(true)))), float(_GLF_FUZZED(825.892)), bool(false))), _GLF_IDENTITY(sqrt(0.0), min(sqrt(0.0), sqrt(0.0))))) + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(-3.2), float(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-3.2), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_FUZZED(-3.2) : _GLF_FUZZED(8865.5746), (_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))) < injectionSwitch.y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))) < injectionSwitch.y)), bool(bool(! ((_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))) < injectionSwitch.y)))))))) ? _GLF_FUZZED(-3.2) : _GLF_FUZZED(8865.5746)) - 0.0))), max(_GLF_IDENTITY(_GLF_FUZZED(-3.2), (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true))) ? _GLF_FUZZED(-3.2) : _GLF_FUZZED(8865.5746), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_FUZZED(-3.2) : _GLF_FUZZED(8865.5746)) - 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-3.2), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_FUZZED(-3.2) : _GLF_FUZZED(8865.5746), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_FUZZED(-3.2) : _GLF_FUZZED(8865.5746)) - 0.0))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-3.2), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_FUZZED(-3.2) : _GLF_FUZZED(8865.5746), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_FUZZED(-3.2) : _GLF_FUZZED(8865.5746)) - 0.0))), mix(float(_GLF_IDENTITY(_GLF_FUZZED(-3.2), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_FUZZED(-3.2) : _GLF_FUZZED(8865.5746), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_FUZZED(-3.2) : _GLF_FUZZED(8865.5746)) - 0.0)))), float(_GLF_FUZZED(-5287.1794)), bool(false))) : _GLF_FUZZED(determinant(mat3(mat2(8.2, -1308.5608, 482.602, -9732.7051)))))), float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(_GLF_FUZZED(-3.2), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_FUZZED(-3.2) : _GLF_FUZZED(8865.5746), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_FUZZED(-3.2) : _GLF_FUZZED(8865.5746)) - 0.0))), log(1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, exp(0.0), 1.0), (false ? _GLF_FUZZED(mat4x2(-6868.7345, 6.1, 478.368, -6.9, -1970.5100, 8.2, -9.5, 7765.4351)) : mat4x2(_GLF_IDENTITY(_GLF_FUZZED(-3.2), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_FUZZED(-3.2) : _GLF_FUZZED(8865.5746), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_FUZZED(-3.2) : _GLF_FUZZED(8865.5746)) - 0.0))), log(1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, exp(0.0), 1.0))))))), 1.0, 1.0, 0.0, round(length(normalize(sqrt(vec3(1.0, 1.0, 1.0))))), 1.0, 0.0, 0.0))), _GLF_FUZZED(float(_GLF_IDENTITY(149530u, _GLF_IDENTITY((149530u) ^ 0u, max((149530u) ^ 0u, (149530u) ^ _GLF_IDENTITY(0u, 1u * (0u)))))))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))[1]) * 1.0)), _GLF_IDENTITY(bvec2(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true))), _GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true))), _GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true))), _GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true))), _GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (injectionSwitch.x < injectionSwitch.y))), true, true)))))), false, true))))).y, (false ? _GLF_FUZZED(_GLF_IDENTITY(4.3, (4.3) - 0.0)) : injectionSwitch.y)))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(8.9)), bool(false)))) && _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, true && (true)), true, _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(false, bool(bool(false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)), bool(bvec2(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), true && (true)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && true))) && _GLF_IDENTITY((true), (_GLF_IDENTITY((true), ((true)) || false)) || false)), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), true && (true)), false, false)))))), _GLF_IDENTITY(true, false || (true)), _GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(true, (true) && true))), true))), true && (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, true && (true)), true, _GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(true, ! (! (true))))), bool(bvec2(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, ! (! (true))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(true, ! (! (true))), false), false, false))))), _GLF_IDENTITY(true, false || (true)) && (true)), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), true && (true)), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), true && (true)), false, false))))), ! (! (! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), true && (true)), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), true && (true)), false, false))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), true && (true)), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), true && (true)), false, false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), true && (true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), (_GLF_IDENTITY(! (! (true)), bool(bool(_GLF_IDENTITY(! (! (true)), true && (! (! (true)))))))) && true)), true && (true)))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(true && (true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true && (true)))), false, false)))))) || false))), bool(bvec4((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), true && (true)), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), true && (true)), false, false))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), true && (true)), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), true && (true)), false, false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), true && (true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), (_GLF_IDENTITY(! (! (true)), bool(bool(_GLF_IDENTITY(! (! (true)), true && (! (! (true)))))))) && true)), true && (true)))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(true && (true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true && (true)))), false, false)))))) || false))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, ! (! (true))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(true, ! (! (true))), false), false, false)))), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, ! (! (true))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(true, ! (! (true))), false), false, false))))) || false)), true && (true)), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), true && (true)), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), true && (true)), false, false))))), ! (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((true), ((true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)), ! (! (bool(bvec2(_GLF_IDENTITY((true), ((true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))))))), true && (true)), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), true && (true)), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), true && (true)))), _GLF_IDENTITY(false, false || (false)), false)))))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, ! (! (true))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(true, ! (! (true))), false), false, _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), true && (true)), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), true && (true)), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), true && (true)), false, false))))), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), true && (true)), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), true && (true)), false, false)))))), true && (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), true && (true)), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), true && (true)), false, false)))))), bool(bvec2(! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), true && (true)), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), true && (true)), false, false)))))), true))))))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), true && (_GLF_IDENTITY(! (! (true)), false || (! (! (true))))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, ! (! (true))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), false), false, false))))), true && (true)), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), true && (true)), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), true && (true)), false, false))))), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), true && (true)), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), true && (true)), false, false)))))), ! (! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), true && (true)), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), true && (true)), false, false)))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), true && (true)), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), true && (true)), false, false)))))), ! (! (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), true && (true)), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), true && (true)), false, false))))))))), true, false)), false || (bool(bvec3(_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), true && (true)), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), true && (true)), false, false)))))), ! (! (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), true && (true)), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), true && (true)), false, false))))))))), true, false))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), true && (_GLF_IDENTITY(! (! (true)), false || (! (! (true))))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), false || (! (! (true))))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), false), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true)))), false || (bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true)))))))), false || (bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true)))), false || (bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true)))))))))))), false))))), _GLF_IDENTITY(true, (true) || false) && (true)), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), true && (true)), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), true && (true)), false, false))))), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), true && (true)), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(true && (true), bool(bool(true && (true))))), false, false)))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), true && (true)), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), true && (true)), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), true && (true)), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), true && (true))))), false, false))), false, _GLF_IDENTITY(false, ! (! (false))))))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), ! (! (true))), true && (true)), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), true && (true)), false, false)))))), ! (! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), true && (true)), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), true && (true)), false, false))))), bool(_GLF_IDENTITY(bvec2(! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), true && (true)), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), true && (true)), false, false))))), true), bvec2(bvec2(bvec2(! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), true && (true)), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), true && (true)), false, false))))), true)))))))))), true, false)), false || (bool(bvec3(_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && (true)), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), true && (true)), false, false)))))), ! (! (! _GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), true && (true)), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), true && (true)), false, false)))))), ! (! ((! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), true && (true)), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), true && (true)), false, false)))))))))))), true, false)))))), true && ((_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), true && (true)), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), true && (true)), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), true && (true)), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), true && (true))))), false, false))), false, _GLF_IDENTITY(false, ! (! (false))))))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), ! (! (true))), true && (true)), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), true && (true)), false, false)))))), ! (! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), true && (true)), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), true && (true)), false, false))))), bool(_GLF_IDENTITY(bvec2(! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), true && (true)), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), true && (true)), false, false))))), true), bvec2(bvec2(bvec2(! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), true && (true)), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), true && (true)), false, false))))), true)))))))))), true, false)), false || (bool(bvec3(_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && (true)), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), true && (true)), false, false)))))), ! (! (! _GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), true && (true)), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), true && (true)), false, false)))))), ! (! ((! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), true && (true)), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), true && (true)), false, false)))))))))))), true, false)))))))))))))) || false))) || _GLF_IDENTITY(false, ! (! (false))))) || false))), true, false, _GLF_IDENTITY(true, (true) && true))), true)))))))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec4(bvec3(true, false, true), false))))), _GLF_IDENTITY(false, false || (false)), false))), (_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), bool(_GLF_IDENTITY(bool(! (! (_GLF_IDENTITY(true, false || (true))))), bool(bvec4(bool(! (! (true))), false, false, _GLF_IDENTITY(false, bool(bvec2(false, false)))))))))) || false))), true, false, true)), bool(bvec2(bool(bvec4(_GLF_IDENTITY(true, true && (true)), true, false, true)), true))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), bool(bool((_GLF_DEAD(false)))))))))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id) | (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size)))) | (_GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(subgroup_size) : subgroup_id * subgroup_size)))) + subgroup_local_id));
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
  return;
 if(_GLF_DEAD(false))
  return;
 atomicStore(write_val, uint(virtual_gid), _GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4), ((4)) * _GLF_IDENTITY(1, min(1, 1))), clamp(_GLF_IDENTITY((4), ((4)) * 1), _GLF_IDENTITY((4), (_GLF_IDENTITY((4), ((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)), ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))) - (0 ^ 0))) & _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (0 >> _GLF_IDENTITY(int(8), int(8))) ^ (1))))) * ((4)))) * 1), _GLF_IDENTITY(_GLF_IDENTITY((4), ((4)) * 1), int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))))) ^ (_GLF_IDENTITY(_GLF_IDENTITY((4), ((4)) * 1), 1 * (_GLF_IDENTITY((4), ((4)) * 1))))))) / 1), 0 ^ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(4, int(ivec4(_GLF_IDENTITY(4, (4) | (4)), 1, 0, 0))), (_GLF_IDENTITY(4, (4) << (0 << _GLF_IDENTITY(int(8), int(8))))) - 0)), 1 * ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY((4) | (4), ((4) | _GLF_IDENTITY((4), max((4), _GLF_IDENTITY((4), max((4), (4)))))) | int(_GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY(4, _GLF_IDENTITY((4) | (4), ((4) | (4)) / (int(_GLF_ONE(1.0, injectionSwitch.y)) ^ 0)))) ^ 0), 1, 0, 0))), 1 * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ (4))), int(ivec4(_GLF_IDENTITY(4, (4) | _GLF_IDENTITY((4), ((4)) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))), 1, 0, 0))), _GLF_IDENTITY(max(_GLF_IDENTITY(4, int(ivec4(_GLF_IDENTITY(4, (4) | (4)), 1, 0, 0))), _GLF_IDENTITY(4, int(ivec4(_GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(4, int(ivec2(4, 0))))), 1, 0, 0)))), ~ (~ (max(_GLF_IDENTITY(4, int(ivec4(_GLF_IDENTITY(4, (4) | (4)), 1, 0, 0))), _GLF_IDENTITY(4, int(ivec4(_GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(4, int(ivec2(4, 0))))), 1, 0, 0)))))))))), (4) - _GLF_IDENTITY(0, (_GLF_IDENTITY(0, min(0, 0))) >> (0 >> _GLF_IDENTITY(int(0), int(0))))))))), 64, 0);
 if(_GLF_DEAD(false))
  return;
 uint read_val = atomicLoad(write_val, _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(77102))), 64, 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (false), true && (! (false))), true, false, false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(bvec4(_GLF_IDENTITY(! (false), true && (! (false))), true, false, false))), ! (! (bool(bool(bvec4(_GLF_IDENTITY(! (false), true && (! (false))), true, false, false))))))), ! (! (bool(_GLF_IDENTITY(bool(bool(bvec4(_GLF_IDENTITY(! (false), true && (! (false))), true, false, false))), ! (! (bool(bool(bvec4(_GLF_IDENTITY(! (false), true && (! (false))), true, false, false))))))))))))))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (! (_GLF_IDENTITY((false) && true, bool(bvec3((false) && true, false, false)))))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))), bool(bvec4(! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))), true, false, false))))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 buf[virtual_gid] = uint(subgroupAllEqual(read_val));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 1.0, abs(0.0)), (_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 1.0, abs(0.0)), vec4(mat3(vec4(injectionSwitch.y, 0.0, 1.0, abs(0.0)), 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-9419.0424)), float(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-0.5)), float(1.0), bool(true)))), bool(true))))))) + vec4(0.0, 0.0, 0.0, 0.0))))), float(_GLF_FUZZED(-3.9)), bool(false)))))))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
