#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(true ? gl_WorkGroupID : _GLF_FUZZED(_GLF_IDENTITY((uvec3(154926u, 25422u, 141349u) ^ workgroup_size), ((_GLF_IDENTITY(uvec3(154926u, 25422u, 141349u), (false ? _GLF_FUZZED(uvec3(87899u, 26456u, 67338u)) : uvec3(154926u, 25422u, 141349u))) ^ workgroup_size)) << uvec3(0u, _GLF_IDENTITY(0u, uint(uvec2(0u, 1u))), 0u))), (true ? gl_WorkGroupID : _GLF_FUZZED(_GLF_IDENTITY((uvec3(154926u, 25422u, 141349u) ^ workgroup_size), ((uvec3(154926u, 25422u, _GLF_IDENTITY(141349u, (141349u) / (1u & 1u))) ^ workgroup_size)) << uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) - 0u))))) | (_GLF_IDENTITY(true ? gl_WorkGroupID : _GLF_FUZZED(_GLF_IDENTITY((uvec3(154926u, 25422u, 141349u) ^ workgroup_size), (_GLF_IDENTITY(_GLF_IDENTITY((uvec3(154926u, 25422u, 141349u) ^ _GLF_IDENTITY(workgroup_size, (workgroup_size) / 1u)), ((uvec3(154926u, 25422u, 141349u) ^ _GLF_IDENTITY(workgroup_size, (workgroup_size) / 1u))) | ((uvec3(154926u, 25422u, 141349u) ^ _GLF_IDENTITY(workgroup_size, (workgroup_size) / 1u)))), ((uvec3(154926u, 25422u, 141349u) ^ _GLF_IDENTITY(workgroup_size, (workgroup_size) / 1u))) - uvec3(0u, 0u, 0u))) << uvec3(0u, _GLF_IDENTITY(0u, (0u) * ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)))), 0u))), clamp(true ? gl_WorkGroupID : _GLF_FUZZED(_GLF_IDENTITY((uvec3(154926u, 25422u, 141349u) ^ workgroup_size), ((uvec3(154926u, 25422u, 141349u) ^ workgroup_size)) << uvec3(0u, 0u, 0u))), true ? gl_WorkGroupID : _GLF_FUZZED(_GLF_IDENTITY((uvec3(154926u, 25422u, 141349u) ^ workgroup_size), ((uvec3(154926u, _GLF_IDENTITY(25422u, _GLF_IDENTITY((25422u) - uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_ZERO(0.0, injectionSwitch.x)), float(_GLF_FUZZED(-3.1)), bool(false)))), (_GLF_IDENTITY(_GLF_IDENTITY((25422u), max((25422u), (25422u))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY((25422u) - uint(_GLF_ZERO(0.0, injectionSwitch.x)), max((25422u) - uint(_GLF_ZERO(0.0, injectionSwitch.x)), (25422u) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | 0u)) / 1u)), _GLF_IDENTITY(141349u, (141349u) | (141349u))) ^ _GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(write_val) : workgroup_size)))) << uvec3(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | (0u), ((0u ^ 0u) << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), max(uint(3u), uint(3u))))) | ((0u) | (0u)))), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED((subgroup_size | subgroup_id)) : _GLF_IDENTITY(0u, (0u) | (0u)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(0u, (0u) | (0u)))), min(uint(uint(_GLF_IDENTITY(0u, (0u) | (0u)))), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(0u, (0u) | (0u)))), min(uint(uint(_GLF_IDENTITY(0u, (0u) | (0u)))), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(0u, (0u) | (0u)))), (uint(uint(_GLF_IDENTITY(0u, (0u) | (0u))))) << 0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(0u, (0u) | (0u)))), min(uint(uint(_GLF_IDENTITY(0u, (0u) | (0u)))), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(0u, (0u) | (0u)))), min(uint(uint(_GLF_IDENTITY(0u, (0u) | (0u)))), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(0u, (0u) | (0u)))), (uint(uint(_GLF_IDENTITY(0u, (0u) | (0u))))) << 0u))))), (_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(0u, (0u) | (0u)))), min(uint(uint(_GLF_IDENTITY(0u, (0u) | (0u)))), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(0u, (0u) | (0u)))), min(uint(uint(_GLF_IDENTITY(0u, (0u) | (0u)))), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(0u, (0u) | (0u)))), (uint(uint(_GLF_IDENTITY(0u, (0u) | (0u))))) << 0u)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(0u, (0u) | (0u)))), min(uint(uint(_GLF_IDENTITY(0u, (0u) | (0u)))), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(0u, (0u) | (0u)))), min(uint(uint(_GLF_IDENTITY(0u, (0u) | (0u)))), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(0u, (0u) | (0u)))), (uint(uint(_GLF_IDENTITY(0u, (0u) | (0u))))) << 0u))))), (true ? _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(0u, (0u) | (0u)))), min(uint(uint(_GLF_IDENTITY(0u, (0u) | (0u)))), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(0u, (0u) | (0u)))), min(uint(uint(_GLF_IDENTITY(0u, (0u) | (0u)))), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(0u, (0u) | (0u)))), (uint(uint(_GLF_IDENTITY(0u, (0u) | (0u))))) << 0u))))) : _GLF_FUZZED(subgroup_size)))))) - 0u), clamp(_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(0u, (0u) | (0u)))), ~ (~ (uint(uint(_GLF_IDENTITY(0u, (0u) | (0u))))))), uint(uint(_GLF_IDENTITY(0u, (0u) | _GLF_IDENTITY((0u), min((0u), _GLF_IDENTITY((0u), min((0u), (0u)))))))), uint(uint(_GLF_IDENTITY(0u, (0u) | _GLF_IDENTITY((0u), clamp((0u), (0u), (0u))))))))), 0u)), _GLF_IDENTITY(0u, max(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | 0u), (0u) | (0u)), 0u)), 0u))), true ? gl_WorkGroupID : _GLF_FUZZED(_GLF_IDENTITY((uvec3(154926u, 25422u, 141349u) ^ workgroup_size), ((_GLF_IDENTITY(uvec3(154926u, 25422u, 141349u) ^ workgroup_size, uvec3(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(154926u, 25422u, 141349u) ^ workgroup_size, clamp(_GLF_IDENTITY(uvec3(154926u, 25422u, 141349u) ^ workgroup_size, uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(uvec3(154926u, 25422u, 141349u), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(uvec3(154926u, 25422u, 141349u), uvec3(_GLF_IDENTITY(uvec4(uvec3(154926u, 25422u, 141349u), 0u), min(uvec4(uvec3(154926u, 25422u, 141349u), 0u), uvec4(uvec3(154926u, 25422u, 141349u), 0u))))))) ^ workgroup_size)), uvec3(154926u, 25422u, 141349u) ^ workgroup_size, uvec3(154926u, 25422u, 141349u) ^ workgroup_size)), clamp(uvec3(154926u, 25422u, 141349u) ^ workgroup_size, uvec3(154926u, 25422u, 141349u) ^ workgroup_size, uvec3(154926u, 25422u, 141349u) ^ workgroup_size)), 1u))))) << _GLF_IDENTITY(uvec3(0u, 0u, 0u), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(uvec3(_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) | (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(7u), uvec3(7u)))))), clamp(uvec3(uvec3(_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) | (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(7u), uvec3(7u)))))), uvec3(uvec3(_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) | (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(7u), uvec3(7u)))))), uvec3(uvec3(_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) | (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(7u), uvec3(7u))))))))), ~ (~ (uvec3(_GLF_IDENTITY(0u, max(0u, 0u)), 0u, 0u))))) - _GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(uvec3(uvec3(0u, 0u, 0u))))))))))))).x;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), ((workgroup_base + subgroup_id * subgroup_size)) | 0u) ^ 0u) + subgroup_local_id;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, max(1, 1)), 1, _GLF_IDENTITY(1, min(1, 1)))), (false ? _GLF_FUZZED(_injected_loop_counter) : 1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, max(1, 1)), 1, _GLF_IDENTITY(1, min(1, 1)))), (false ? _GLF_FUZZED(_injected_loop_counter) : 1))) << int(_GLF_ZERO(0.0, injectionSwitch.x)))), int(1))) >> _GLF_IDENTITY(int(1), int(1)))); _injected_loop_counter ++)
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       do
        {
         do
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             for(int _injected_loop_counter = (_GLF_IDENTITY((1 | 1), 0 | (_GLF_IDENTITY((1 | 1), min((1 | 1), (1 | 1))))) ^ 0); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter))), (_GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter)))) - int(_GLF_ZERO(0.0, injectionSwitch.x))) > ((-20485 - 82257) & 0)); _injected_loop_counter --)
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 for(int _injected_loop_counter = (int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(0), int(0))); _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (true ? ~ (1) : _GLF_FUZZED(_injected_loop_counter)))))); _injected_loop_counter ++)
                  {
                   do
                    {
                     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                      {
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                        }
                       else
                        {
                         if(_GLF_WRAPPED_IF_FALSE(false))
                          {
                          }
                         else
                          {
                           do
                            {
                             do
                              {
                               do
                                {
                                 for(int _injected_loop_counter = int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat3x2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, 1.0, 0.0))), float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat3x2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, 1.0, 0.0)))), max(float(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat3x2(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, log(1.0), determinant(mat2(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-10.01) : _GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, 0.0, 1.0))))))), 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, log(1.0), determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0))), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-7425.1584) : 1.0)), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(exp(0.0), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0)), dot(vec3(1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) + length(0.0))) * 1.0), 0.0), vec3(exp(0.0), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0)))), (mat3(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), injectionSwitch.x)), 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-875.405)), bool(false)))))), vec4(0.0, log(1.0), determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, log(1.0), _GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), (determinant(mat2(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, _GLF_IDENTITY(0.0, float(vec2(0.0, 0.0)))))), float(_GLF_FUZZED(-4.0)), bool(false)))))) - 0.0), 1.0))), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(exp(0.0), determinant(mat3(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(exp(0.0), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0))))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))), 1.0, 1.0, 1.0, 1.0, 0.0)))), float(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat3x2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(958.335)), bool(false))), 0.0))))))))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter)) < _GLF_IDENTITY(1, (1) | (1))); _injected_loop_counter ++)
                                  {
                                   do
                                    {
                                     for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), max(_GLF_IDENTITY(int(4), _GLF_IDENTITY(1 * (int(4)), max(1 * (int(4)), 1 * (int(4))))), int(4))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                                      {
                                       do
                                        {
                                         atomicStore(write_val, _GLF_IDENTITY(uint(_GLF_IDENTITY(virtual_gid, 1u * _GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), ((virtual_gid)) >> (uint(-14224) & 0u)), _GLF_IDENTITY(((virtual_gid)) | 0u, clamp(((virtual_gid)) | 0u, _GLF_IDENTITY(((virtual_gid)), (_GLF_IDENTITY(((virtual_gid)), (((virtual_gid))) * 1u)) ^ 0u) | 0u, ((_GLF_IDENTITY(virtual_gid, min(virtual_gid, _GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED(workgroup_base) : virtual_gid)))))) | 0u))))), (false ? _GLF_FUZZED(usubBorrow(subgroup_local_id, subgroup_size, num_workgroup)) : uint(_GLF_IDENTITY(virtual_gid, 1u * _GLF_IDENTITY((virtual_gid), _GLF_IDENTITY(((virtual_gid)) | 0u, clamp(((virtual_gid)) | _GLF_IDENTITY(0u, ~ (~ (0u))), ((_GLF_IDENTITY(virtual_gid, (true ? _GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u)) / 1u) : _GLF_FUZZED((++ workgroup_size)))))) | 0u, ((virtual_gid)) | 0u))))))), 4, _GLF_IDENTITY(_GLF_IDENTITY(64, int(ivec3(_GLF_IDENTITY(64, 0 | (64)), 0, 1))), min(_GLF_IDENTITY(64, (64) << 0), _GLF_IDENTITY(64, max(64, _GLF_IDENTITY(64, min(_GLF_IDENTITY(64, (64) | (64)), 64)))))), 0);
                                        }
                                       while(_GLF_WRAPPED_LOOP(false));
                                      }
                                    }
                                   while(_GLF_WRAPPED_LOOP(false));
                                  }
                                }
                               while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (false), bool(bool(! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((false), bool(bool((false)))))), (bool(bool(_GLF_IDENTITY((false), bool(bool((false))))))) || false))))))), ! _GLF_IDENTITY((! (bool(bool(! (false))))), ! (! ((_GLF_IDENTITY(! (bool(bool(! (false)))), (_GLF_IDENTITY(! (bool(bool(! (false)))), false || (! (bool(bool(! (false))))))) || false)))))))))));
                              }
                             while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))));
                            }
                           while(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(_GLF_IDENTITY(false || _GLF_IDENTITY((_GLF_WRAPPED_LOOP(false)), bool(bvec3(_GLF_IDENTITY((_GLF_WRAPPED_LOOP(false)), ! (! (_GLF_IDENTITY((_GLF_WRAPPED_LOOP(false)), bool(bvec4((_GLF_WRAPPED_LOOP(false)), true, true, false)))))), true, false))), true && (false || (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) || false)))), bool(bool(false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), true && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), false || (_GLF_WRAPPED_LOOP(false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_WRAPPED_LOOP(false)))), ! (! ((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_WRAPPED_LOOP(false))))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) && _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(true, ! (! (true))))), bool(bvec2(! (! (_GLF_IDENTITY(true, ! (! (true))))), false))))))), bool(bvec3(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false)))), false, true))))))), _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bool(_GLF_WRAPPED_LOOP(false))))) && true)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_WRAPPED_LOOP(false)), (_GLF_IDENTITY((_GLF_WRAPPED_LOOP(false)), _GLF_IDENTITY(bool(bool((_GLF_WRAPPED_LOOP(false)))), ! (! (bool(bool((_GLF_WRAPPED_LOOP(false))))))))) || false) && true, false || (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), true && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bvec4(_GLF_WRAPPED_LOOP(false), true, true, true)))))) && true, ((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), true && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bvec4(_GLF_WRAPPED_LOOP(false), true, true, true)))))) && true) || false), true && ((_GLF_WRAPPED_LOOP(false)) && true)))))), bool(bvec4((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_WRAPPED_LOOP(false)), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_WRAPPED_LOOP(false)), _GLF_IDENTITY(bool(bool((_GLF_WRAPPED_LOOP(false)))), ! (! (bool(bool((_GLF_WRAPPED_LOOP(false))))))))), ! (! ((_GLF_IDENTITY((_GLF_WRAPPED_LOOP(false)), _GLF_IDENTITY(bool(bool((_GLF_WRAPPED_LOOP(false)))), ! (! (bool(bool((_GLF_WRAPPED_LOOP(false)))))))))))) || false) && true, false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), true && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bvec4(_GLF_WRAPPED_LOOP(false), true, true, true)))))) && true, true && ((_GLF_WRAPPED_LOOP(false)) && true)))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))) && true, bool(bvec4((! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bool(_GLF_WRAPPED_LOOP(false))))) && true)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_WRAPPED_LOOP(false)), (_GLF_IDENTITY((_GLF_WRAPPED_LOOP(false)), _GLF_IDENTITY(bool(bool((_GLF_WRAPPED_LOOP(false)))), ! (! (bool(bool((_GLF_WRAPPED_LOOP(false))))))))) || false) && true, false || (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), true && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bvec4(_GLF_WRAPPED_LOOP(false), true, true, true)))))) && true, ((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), true && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bvec4(_GLF_WRAPPED_LOOP(false), true, true, true)))))) && true) || false), true && ((_GLF_WRAPPED_LOOP(false)) && true)))))), bool(bvec4((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_WRAPPED_LOOP(false)), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_WRAPPED_LOOP(false)), _GLF_IDENTITY(bool(bool((_GLF_WRAPPED_LOOP(false)))), ! (! (bool(bool((_GLF_WRAPPED_LOOP(false))))))))), ! (! ((_GLF_IDENTITY((_GLF_WRAPPED_LOOP(false)), _GLF_IDENTITY(bool(bool((_GLF_WRAPPED_LOOP(false)))), ! (! (bool(bool((_GLF_WRAPPED_LOOP(false)))))))))))) || false) && true, false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), true && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bvec4(_GLF_WRAPPED_LOOP(false), true, true, true)))))) && true, true && ((_GLF_WRAPPED_LOOP(false)) && true)))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))) && true, false, true, false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(_GLF_IDENTITY(false || _GLF_IDENTITY((_GLF_WRAPPED_LOOP(false)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), ! (! (_GLF_IDENTITY((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) && true))), bool(bvec4((_GLF_WRAPPED_LOOP(false)), _GLF_IDENTITY(true, ! (! (true))), true, false)))))), true, false)), _GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_WRAPPED_LOOP(false)), ! (! (_GLF_IDENTITY((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) && true))), bool(bvec4((_GLF_WRAPPED_LOOP(false)), _GLF_IDENTITY(true, ! (! (true))), true, false)))))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY((_GLF_WRAPPED_LOOP(false)), ! (! (_GLF_IDENTITY((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) && true))), bool(bvec4((_GLF_WRAPPED_LOOP(false)), _GLF_IDENTITY(true, ! (! (true))), true, false)))))), true, false))))), true)), true && (bool(bvec2(bool(bvec3(_GLF_IDENTITY((_GLF_WRAPPED_LOOP(false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) && true))), bool(bvec4((_GLF_WRAPPED_LOOP(false)), _GLF_IDENTITY(true, ! (! (true))), true, false))), true && (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) && true))), bool(bvec4((_GLF_WRAPPED_LOOP(false)), _GLF_IDENTITY(true, ! (! (true))), true, false))), (_GLF_IDENTITY((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) && true))), bool(bvec4((_GLF_WRAPPED_LOOP(false)), _GLF_IDENTITY(true, ! (! (true))), true, false)))) || false)))))), true, false)), true)))))), true && (false || (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) || false)))), bool(bool(false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bvec4(_GLF_WRAPPED_LOOP(false), false, true, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_WRAPPED_LOOP(false)))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false))))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_WRAPPED_LOOP(false))))))))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) && _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), ! (! (! (! (true)))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, true))))))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) && _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), ! (! (! (! (true)))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, true))))))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) && _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), ! (! (! (! (true)))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, true))))))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) && _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), ! (! (! (! (true)))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, true))))))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)) && true)), _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bool(_GLF_WRAPPED_LOOP(false))))) && true)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_WRAPPED_LOOP(false)), (_GLF_IDENTITY((_GLF_WRAPPED_LOOP(false)), _GLF_IDENTITY(bool(bool((_GLF_WRAPPED_LOOP(false)))), ! (! (bool(bool((_GLF_WRAPPED_LOOP(false))))))))) || false) && true, false || (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), true && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bvec4(_GLF_WRAPPED_LOOP(false), true, true, true)))))) && true, ((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), true && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bvec4(_GLF_WRAPPED_LOOP(false), true, true, true)))))) && true) || false), true && ((_GLF_WRAPPED_LOOP(false)) && true)))))), bool(bvec4((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_WRAPPED_LOOP(false)), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_WRAPPED_LOOP(false)), _GLF_IDENTITY(bool(bool((_GLF_WRAPPED_LOOP(false)))), ! (! (bool(bool((_GLF_WRAPPED_LOOP(false))))))))), ! (! ((_GLF_IDENTITY((_GLF_WRAPPED_LOOP(false)), _GLF_IDENTITY(bool(bool((_GLF_WRAPPED_LOOP(false)))), ! (! (bool(bool((_GLF_WRAPPED_LOOP(false)))))))))))) || false) && true, false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), true && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bvec4(_GLF_WRAPPED_LOOP(false), true, true, true)))))) && true, true && ((_GLF_WRAPPED_LOOP(false)) && true)))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_WRAPPED_LOOP(false)), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_WRAPPED_LOOP(false)), _GLF_IDENTITY(bool(bool((_GLF_WRAPPED_LOOP(false)))), ! (! (bool(bool((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, true)))))))))))))), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_WRAPPED_LOOP(false)), _GLF_IDENTITY(bool(bool((_GLF_WRAPPED_LOOP(false)))), ! (! (bool(bool((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, true)))))))))))))), bool(bvec3((_GLF_IDENTITY((_GLF_WRAPPED_LOOP(false)), _GLF_IDENTITY(bool(bool((_GLF_WRAPPED_LOOP(false)))), ! (! (bool(bool((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, true)))))))))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, false))) || false) && true, false || (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), true && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bvec4(_GLF_WRAPPED_LOOP(false), true, true, true)))))) && true, ((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), true && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bvec4(_GLF_WRAPPED_LOOP(false), true, true, true)))))) && true) || false), true && ((_GLF_WRAPPED_LOOP(false)) && true)))))), bool(bvec4((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_WRAPPED_LOOP(false)), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_WRAPPED_LOOP(false)), _GLF_IDENTITY(bool(bool((_GLF_WRAPPED_LOOP(false)))), ! (! (_GLF_IDENTITY(bool(bool((_GLF_WRAPPED_LOOP(false)))), bool(bvec3(bool(bool((_GLF_WRAPPED_LOOP(false)))), true, true)))))))), ! (! ((_GLF_IDENTITY((_GLF_WRAPPED_LOOP(false)), _GLF_IDENTITY(bool(bool((_GLF_WRAPPED_LOOP(false)))), ! (! (bool(bool((_GLF_WRAPPED_LOOP(false)))))))))))) || false) && true, false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bvec4(_GLF_WRAPPED_LOOP(false), true, true, true))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bvec4(_GLF_WRAPPED_LOOP(false), true, true, true))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bvec4(_GLF_WRAPPED_LOOP(false), true, true, true))))), false || (bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bvec4(_GLF_WRAPPED_LOOP(false), true, true, true))))))))) || false)))) && true, true && ((_GLF_WRAPPED_LOOP(false)) && true)))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))))) && true, (_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))), bool(bool(_GLF_WRAPPED_LOOP(false))))) && true)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_WRAPPED_LOOP(false)), (_GLF_IDENTITY((_GLF_WRAPPED_LOOP(false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool((_GLF_WRAPPED_LOOP(false)))), (bool(bool((_GLF_WRAPPED_LOOP(false))))) || false), ! (! (bool(bool((_GLF_WRAPPED_LOOP(false))))))))) || false) && true, false || (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bvec4(_GLF_WRAPPED_LOOP(false), true, true, true)))), bool(bvec4(true && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bvec4(_GLF_WRAPPED_LOOP(false), true, true, true)))), true, false, false))))) && true, ((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), true && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bvec4(_GLF_WRAPPED_LOOP(false), true, true, true)))))) && true) || false), true && ((_GLF_WRAPPED_LOOP(false)) && true)))))), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bvec2(_GLF_WRAPPED_LOOP(false), false))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_WRAPPED_LOOP(false)), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_WRAPPED_LOOP(false)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_WRAPPED_LOOP(false)), bool(bool(_GLF_IDENTITY((_GLF_WRAPPED_LOOP(false)), false || (_GLF_IDENTITY((_GLF_WRAPPED_LOOP(false)), ! (! ((_GLF_WRAPPED_LOOP(false)))))))))))), ! (! (bool(bool((_GLF_WRAPPED_LOOP(false))))))))), _GLF_IDENTITY(! (! ((_GLF_IDENTITY((_GLF_WRAPPED_LOOP(false)), _GLF_IDENTITY(bool(bool((_GLF_WRAPPED_LOOP(false)))), ! (! (bool(bool((_GLF_WRAPPED_LOOP(false))))))))))), ! (! (! (! ((_GLF_IDENTITY((_GLF_WRAPPED_LOOP(false)), _GLF_IDENTITY(bool(bool((_GLF_WRAPPED_LOOP(false)))), ! (! (bool(bool((_GLF_WRAPPED_LOOP(false))))))))))))))) || false) && true, false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), true && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bvec4(_GLF_WRAPPED_LOOP(false), true, true, true)))))) && true, true && ((_GLF_WRAPPED_LOOP(false)) && true)))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))) && true, (_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bool(_GLF_WRAPPED_LOOP(false)))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bool(_GLF_WRAPPED_LOOP(false)))))))) && true)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_WRAPPED_LOOP(false)), (_GLF_IDENTITY((_GLF_WRAPPED_LOOP(false)), _GLF_IDENTITY(bool(bool((_GLF_WRAPPED_LOOP(false)))), ! (! (bool(bool((_GLF_WRAPPED_LOOP(false))))))))) || false) && true, false || (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), true && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bvec4(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false)))), true, true, true)))))) && true, ((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), true && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bvec4(_GLF_WRAPPED_LOOP(false), true, true, true)))))) && true) || false), true && ((_GLF_WRAPPED_LOOP(false)) && true)))))), bool(bvec4((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_WRAPPED_LOOP(false)), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_WRAPPED_LOOP(false)), _GLF_IDENTITY(bool(bool((_GLF_WRAPPED_LOOP(false)))), ! (! (bool(bool((_GLF_WRAPPED_LOOP(false))))))))), ! (! ((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), true && (_GLF_WRAPPED_LOOP(false)))) && true)), _GLF_IDENTITY(bool(bool((_GLF_WRAPPED_LOOP(false)))), ! (! (bool(bool((_GLF_WRAPPED_LOOP(false)))))))))))) || false) && true, _GLF_IDENTITY(false, false || (false)) || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), true && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bvec4(_GLF_WRAPPED_LOOP(false), true, true, true)))))) && true, true && ((_GLF_WRAPPED_LOOP(false)) && true)))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))) && true, ! (! ((! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bool(_GLF_WRAPPED_LOOP(false))))), ((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bool(_GLF_WRAPPED_LOOP(false)))))) || false) && true)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_WRAPPED_LOOP(false)), (_GLF_IDENTITY((_GLF_WRAPPED_LOOP(false)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_WRAPPED_LOOP(false)), ((_GLF_WRAPPED_LOOP(false))) || false))), ! (! (bool(bool((_GLF_WRAPPED_LOOP(false))))))))) || false) && true, false || (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), true && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bvec4(_GLF_WRAPPED_LOOP(false), true, true, true)))))) && true, ((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), true && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bvec4(_GLF_WRAPPED_LOOP(false), true, true, true)))))) && true) || false), true && _GLF_IDENTITY(((_GLF_WRAPPED_LOOP(false)) && true), (_GLF_IDENTITY(((_GLF_WRAPPED_LOOP(false)) && true), ((_GLF_IDENTITY((_GLF_WRAPPED_LOOP(false)) && true, ((_GLF_WRAPPED_LOOP(false)) && true) && true))) || false)) && true)))))), bool(bvec4((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), bool(bvec3(bool(bool(false)), true, false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(false)), bool(bvec3(bool(bool(false)), true, false)))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(false)), bool(bvec3(bool(bool(false)), true, false)))), false || (! (_GLF_IDENTITY(bool(bool(false)), bool(bvec3(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), true, false)))))))))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_WRAPPED_LOOP(false)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_WRAPPED_LOOP(false)), ! (! (_GLF_IDENTITY((_GLF_WRAPPED_LOOP(false)), bool(bvec4((_GLF_WRAPPED_LOOP(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))))), _GLF_IDENTITY(bool(bool((_GLF_WRAPPED_LOOP(false)))), ! (! (bool(bool((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))))), ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))))))))))))))))), ((_GLF_IDENTITY((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))))), _GLF_IDENTITY(bool(bool((_GLF_WRAPPED_LOOP(false)))), ! (! (bool(bool((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3((false), true, true), bvec3(bvec4(bvec3((false), true, true), false))))), (! (false)) && true))))))))))))))) && true), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_WRAPPED_LOOP(false)), _GLF_IDENTITY(bool(bool((_GLF_WRAPPED_LOOP(false)))), ! (! (bool(bool((_GLF_WRAPPED_LOOP(false)))))))), false || (_GLF_IDENTITY((_GLF_WRAPPED_LOOP(false)), _GLF_IDENTITY(bool(bool((_GLF_WRAPPED_LOOP(false)))), ! (! (bool(bool((_GLF_WRAPPED_LOOP(false)))))))))))))) || false) && true, false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))), true && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bvec4(_GLF_WRAPPED_LOOP(false), true, true, true))))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))), true && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bvec4(_GLF_WRAPPED_LOOP(false), true, _GLF_IDENTITY(true, ! (! (true))), true))))))))) && true, true && _GLF_IDENTITY(((_GLF_WRAPPED_LOOP(false)) && _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, false || (true)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_IDENTITY(((_GLF_WRAPPED_LOOP(false)) && _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, false || (true)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && (((_GLF_WRAPPED_LOOP(false)) && _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, false || (true)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))), _GLF_IDENTITY(false, (false) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))) && true)))) || false)) || false))))) && true));
                          }
                        }
                      }
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                }
              }
            }
           else
            {
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-4074.8489)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) > injectionSwitch.y)))))))));
      }
    }
   else
    {
    }
  }
 uint read_val = atomicLoad(write_val, 4, 64, 0);
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter != 0, bool(bvec4(_GLF_IDENTITY(_injected_loop_counter != 0, ! _GLF_IDENTITY((! (_injected_loop_counter != _GLF_IDENTITY(0, (_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (0) | (0)), 0))) - 0))), true && ((! (_injected_loop_counter != 0))))), false, false, true))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter))) | (_GLF_IDENTITY(_injected_loop_counter, clamp(_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY((_injected_loop_counter), 0 | ((_injected_loop_counter))) / 1), _injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) ^ (0 | 0)))))), min(_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (_injected_loop_counter)), int(_GLF_IDENTITY(int(~ (~ (_injected_loop_counter))), min(_GLF_IDENTITY(int(~ (~ (_injected_loop_counter))), max(int(~ (~ (_injected_loop_counter))), int(~ (~ (_injected_loop_counter))))), int(~ _GLF_IDENTITY((~ (_injected_loop_counter)), 0 | ((~ (_injected_loop_counter))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (_injected_loop_counter)), (~ (~ (_injected_loop_counter))) | (~ (~ (_injected_loop_counter)))), int(_GLF_IDENTITY(int(~ (~ (_injected_loop_counter))), min(int(~ (~ (_injected_loop_counter))), int(~ _GLF_IDENTITY((~ (_injected_loop_counter)), 1 * (_GLF_IDENTITY((~ (_injected_loop_counter)), max(_GLF_IDENTITY((~ (_injected_loop_counter)), max((~ (_injected_loop_counter)), (~ (_injected_loop_counter)))), _GLF_IDENTITY((~ (_injected_loop_counter)), ((~ (_injected_loop_counter))) | ((~ (_injected_loop_counter)))))))))))))) << 0)), _GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) * 1), (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) * 1), (true ? _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) * 1) : _GLF_FUZZED(62986)))) + 0), _injected_loop_counter))) - 0))) != 0)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter))) | (_GLF_IDENTITY(_injected_loop_counter, clamp(_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY((_injected_loop_counter) / 1, max((_injected_loop_counter) / 1, (_injected_loop_counter) / 1))), _injected_loop_counter, _injected_loop_counter)))), min(_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (_injected_loop_counter)), int(_GLF_IDENTITY(int(~ (~ (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) << 0)))), min(_GLF_IDENTITY(int(~ (~ (_injected_loop_counter))), max(int(~ (~ (_injected_loop_counter))), int(~ (~ (_injected_loop_counter))))), int(~ (~ (_injected_loop_counter))))))), (_GLF_IDENTITY(~ (~ (_injected_loop_counter)), int(_GLF_IDENTITY(int(~ (~ (_injected_loop_counter))), min(int(~ (~ (_injected_loop_counter))), int(~ (~ (_injected_loop_counter)))))))) << 0)), _GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) * 1), _injected_loop_counter))) - 0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) * 1), _injected_loop_counter))) - 0, 0 | ((_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) * 1), _injected_loop_counter))) - 0))), 0 ^ (~ (_GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) * 1), _injected_loop_counter))) - 0, 0 | ((_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) * 1), _injected_loop_counter))) - 0)))))))))) != 0)), ((! (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter))) | (_GLF_IDENTITY(_injected_loop_counter, clamp(_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY((_injected_loop_counter) / 1, min((_injected_loop_counter) / 1, (_injected_loop_counter) / 1))), _injected_loop_counter, _injected_loop_counter)))), min(_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (_injected_loop_counter)), int(_GLF_IDENTITY(int(~ (~ (_injected_loop_counter))), min(_GLF_IDENTITY(int(~ (~ (_injected_loop_counter))), max(int(~ (~ (_injected_loop_counter))), int(~ (~ (_injected_loop_counter))))), int(~ (~ (_injected_loop_counter))))))), (_GLF_IDENTITY(~ (~ (_injected_loop_counter)), int(_GLF_IDENTITY(int(~ (~ (_injected_loop_counter))), min(_GLF_IDENTITY(int(~ (~ (_injected_loop_counter))), max(int(~ (~ (_injected_loop_counter))), int(~ (~ (_injected_loop_counter))))), int(~ (~ (_injected_loop_counter)))))))) | (_GLF_IDENTITY(~ (~ (_injected_loop_counter)), int(_GLF_IDENTITY(int(~ (~ (_injected_loop_counter))), min(_GLF_IDENTITY(int(~ (~ (_injected_loop_counter))), max(int(~ (~ (_injected_loop_counter))), int(~ (~ (_injected_loop_counter))))), int(~ (~ (_injected_loop_counter))))))))), (_GLF_IDENTITY(~ (~ _GLF_IDENTITY((_injected_loop_counter), ((_injected_loop_counter)) ^ 0)), int(_GLF_IDENTITY(int(~ (~ (_injected_loop_counter))), min(int(~ (~ (_injected_loop_counter))), int(~ (~ (_injected_loop_counter)))))))) << 0)), _GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) * 1), _injected_loop_counter))) - 0))) != 0))) || false), _GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! ((! (false))))))), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter))), ((_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter)))) + (0 >> _GLF_IDENTITY(int(7), int(7)))) | (_GLF_IDENTITY(_injected_loop_counter, clamp(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) / 1), _injected_loop_counter, _injected_loop_counter)))), min(_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (_injected_loop_counter)), int(_GLF_IDENTITY(int(~ (~ (_injected_loop_counter))), min(_GLF_IDENTITY(int(~ (~ (_injected_loop_counter))), max(int(~ (~ (_injected_loop_counter))), int(~ (~ (_injected_loop_counter))))), int(~ (~ (_injected_loop_counter))))))), (_GLF_IDENTITY(~ (~ (_injected_loop_counter)), int(_GLF_IDENTITY(int(~ (~ (_injected_loop_counter))), min(int(~ (~ (_injected_loop_counter))), int(_GLF_IDENTITY(~ (~ (_injected_loop_counter)), (_GLF_IDENTITY(~ (~ (_injected_loop_counter)), max(~ (~ (_injected_loop_counter)), ~ (~ (_injected_loop_counter))))) << 0))))))) << 0)), _GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) * 1), _injected_loop_counter))) - 0))) != 0)), ((! (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter))) | (_GLF_IDENTITY(_injected_loop_counter, clamp(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) / 1), _injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))))))), min(_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (_injected_loop_counter)), int(_GLF_IDENTITY(int(~ (_GLF_IDENTITY(~ (_injected_loop_counter), clamp(_GLF_IDENTITY(~ (_injected_loop_counter), (~ (_injected_loop_counter)) << int(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (_injected_loop_counter), ~ (_injected_loop_counter))))), min(_GLF_IDENTITY(int(~ (~ (_injected_loop_counter))), max(int(~ (~ (_injected_loop_counter))), int(~ (~ (_injected_loop_counter))))), int(~ (~ (_injected_loop_counter))))))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (_injected_loop_counter)), int(_GLF_IDENTITY(int(~ (~ (_injected_loop_counter))), min(int(~ (~ (_injected_loop_counter))), int(~ (~ (_injected_loop_counter))))))), (_GLF_IDENTITY(~ (~ (_injected_loop_counter)), int(_GLF_IDENTITY(_GLF_IDENTITY(int(~ (~ (_injected_loop_counter))), (int(~ (~ (_injected_loop_counter)))) | (int(~ (~ (_injected_loop_counter))))), min(int(~ (~ (_injected_loop_counter))), int(~ (~ (_injected_loop_counter)))))))) + 0)) << 0)), _GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) * 1), _injected_loop_counter))) - 0))) != 0))) || false), _GLF_IDENTITY(false, ! (! (false)))), true), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter))) | (_GLF_IDENTITY(_injected_loop_counter, clamp(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) / 1), _injected_loop_counter, _injected_loop_counter)))), min(_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (_injected_loop_counter)), int(_GLF_IDENTITY(int(~ (~ (_injected_loop_counter))), min(_GLF_IDENTITY(int(~ (~ (_injected_loop_counter))), max(int(~ (~ (_injected_loop_counter))), int(~ (~ (_injected_loop_counter))))), int(~ (~ (_injected_loop_counter))))))), (_GLF_IDENTITY(~ (~ (_injected_loop_counter)), int(_GLF_IDENTITY(int(~ (~ (_injected_loop_counter))), min(int(~ (~ (_injected_loop_counter))), int(~ (~ (_injected_loop_counter)))))))) << 0)), _GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) * 1), _injected_loop_counter))) - 0))) != 0)), ((! (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter))) | (_GLF_IDENTITY(_injected_loop_counter, clamp(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) / 1), _injected_loop_counter, _injected_loop_counter)))), min(_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (_injected_loop_counter)), int(_GLF_IDENTITY(int(~ (~ (_injected_loop_counter))), min(_GLF_IDENTITY(int(~ (~ (_injected_loop_counter))), max(int(~ (~ (_injected_loop_counter))), int(~ (~ (_injected_loop_counter))))), int(~ (~ (_injected_loop_counter))))))), (_GLF_IDENTITY(~ (~ (_injected_loop_counter)), int(_GLF_IDENTITY(int(~ (~ (_injected_loop_counter))), min(int(~ (~ (_injected_loop_counter))), int(~ (~ (_injected_loop_counter)))))))) << 0)), _GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) * 1), _injected_loop_counter))) - 0))) != 0))) || false), false || (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter))) | (_GLF_IDENTITY(_injected_loop_counter, clamp(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter))) / 1), _injected_loop_counter, _injected_loop_counter)))), min(_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (_injected_loop_counter)), int(_GLF_IDENTITY(int(~ (~ (_injected_loop_counter))), min(_GLF_IDENTITY(int(~ (~ (_injected_loop_counter))), max(int(~ (~ (_injected_loop_counter))), int(~ (~ (_injected_loop_counter))))), int(_GLF_IDENTITY(~ (~ (_injected_loop_counter)), 0 | (~ (~ (_injected_loop_counter))))))))), (_GLF_IDENTITY(~ (~ (_injected_loop_counter)), int(_GLF_IDENTITY(int(~ (~ (_injected_loop_counter))), min(int(~ _GLF_IDENTITY((~ (_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_injected_loop_counter) : (~ (_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter))))))), int(~ (~ (_injected_loop_counter)))))))) << 0)), _GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) * 1), _injected_loop_counter))) - 0))) != 0)), ((! (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter))) | (_GLF_IDENTITY(_injected_loop_counter, clamp(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) / 1), _injected_loop_counter, _injected_loop_counter)))), min(_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (_injected_loop_counter)), int(_GLF_IDENTITY(int(~ (~ (_injected_loop_counter))), min(_GLF_IDENTITY(int(_GLF_IDENTITY(~ (~ (_injected_loop_counter)), (_GLF_IDENTITY(~ (~ (_injected_loop_counter)), clamp(~ (~ (_injected_loop_counter)), ~ (~ (_injected_loop_counter)), ~ (~ (_injected_loop_counter))))) + int(_GLF_ZERO(0.0, injectionSwitch.x)))), max(int(~ (~ (_injected_loop_counter))), int(~ (~ (_injected_loop_counter))))), int(~ (_GLF_IDENTITY(~ (_injected_loop_counter), max(~ (_injected_loop_counter), ~ (_injected_loop_counter))))))))), _GLF_IDENTITY((_GLF_IDENTITY(~ (~ (_injected_loop_counter)), int(_GLF_IDENTITY(int(~ (~ (_injected_loop_counter))), min(int(~ (_GLF_IDENTITY(~ (_injected_loop_counter), (false ? _GLF_FUZZED((+ -43484)) : ~ (_injected_loop_counter))))), int(~ (~ (_injected_loop_counter)))))))), ((_GLF_IDENTITY(~ (~ (_injected_loop_counter)), int(_GLF_IDENTITY(int(~ (~ (_injected_loop_counter))), min(int(~ (_GLF_IDENTITY(~ (_injected_loop_counter), (false ? _GLF_FUZZED((+ -43484)) : ~ (_injected_loop_counter))))), int(~ (~ (_injected_loop_counter))))))))) / 1) << 0)), _GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) * 1), _injected_loop_counter))) - 0))) != 0))) || false))), _GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), false || ((false)))))), true), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter))) | (_GLF_IDENTITY(_injected_loop_counter, clamp(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) / 1), _injected_loop_counter, _injected_loop_counter)))), min(_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (_injected_loop_counter)), int(_GLF_IDENTITY(int(~ (~ (_injected_loop_counter))), min(_GLF_IDENTITY(int(~ (~ (_injected_loop_counter))), max(int(~ (~ (_injected_loop_counter))), int(~ (~ (_injected_loop_counter))))), int(~ (~ (_injected_loop_counter))))))), (_GLF_IDENTITY(~ (~ (_injected_loop_counter)), int(_GLF_IDENTITY(int(~ (~ (_injected_loop_counter))), min(int(~ (~ (_injected_loop_counter))), int(~ (~ (_injected_loop_counter)))))))) << 0)), _GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) * 1), _injected_loop_counter))) - 0))) != 0)), ((! (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter))) | (_GLF_IDENTITY(_injected_loop_counter, clamp(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) / 1), _injected_loop_counter, _injected_loop_counter)))), min(_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (_injected_loop_counter)), int(_GLF_IDENTITY(int(~ (~ (_injected_loop_counter))), min(_GLF_IDENTITY(int(~ (~ (_injected_loop_counter))), max(int(~ (~ (_injected_loop_counter))), int(~ (~ (_injected_loop_counter))))), int(~ (~ (_injected_loop_counter))))))), (_GLF_IDENTITY(~ (~ (_injected_loop_counter)), int(_GLF_IDENTITY(int(~ (~ (_injected_loop_counter))), min(int(~ (~ (_injected_loop_counter))), int(~ (~ (_injected_loop_counter)))))))) << 0)), _GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) * 1), _injected_loop_counter))) - 0))) != 0))) || false), false || (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter))) | (_GLF_IDENTITY(_injected_loop_counter, clamp(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter))) / 1), _injected_loop_counter, _injected_loop_counter)))), min(_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (_injected_loop_counter)), int(_GLF_IDENTITY(int(~ (~ (_injected_loop_counter))), min(_GLF_IDENTITY(int(~ (~ (_injected_loop_counter))), max(int(~ (~ (_injected_loop_counter))), int(~ (~ (_injected_loop_counter))))), int(_GLF_IDENTITY(~ (~ (_injected_loop_counter)), 0 | (~ (~ (_injected_loop_counter))))))))), (_GLF_IDENTITY(~ (~ (_injected_loop_counter)), int(_GLF_IDENTITY(int(~ (~ (_injected_loop_counter))), min(int(~ _GLF_IDENTITY((~ (_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_injected_loop_counter) : (~ (_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter))))))), int(~ (~ (_injected_loop_counter)))))))) << 0)), _GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) * 1), _injected_loop_counter))) - 0))) != 0)), ((! (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter))) | (_GLF_IDENTITY(_injected_loop_counter, clamp(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) / 1), _injected_loop_counter, _injected_loop_counter)))), min(_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (_injected_loop_counter)), int(_GLF_IDENTITY(int(~ (~ (_injected_loop_counter))), min(_GLF_IDENTITY(int(_GLF_IDENTITY(~ (~ (_injected_loop_counter)), (_GLF_IDENTITY(~ (~ (_injected_loop_counter)), clamp(~ (~ (_injected_loop_counter)), ~ (~ (_injected_loop_counter)), ~ (~ (_injected_loop_counter))))) + int(_GLF_ZERO(0.0, injectionSwitch.x)))), max(int(~ (~ (_injected_loop_counter))), int(~ (~ (_injected_loop_counter))))), int(~ (_GLF_IDENTITY(~ (_injected_loop_counter), max(~ (_injected_loop_counter), ~ (_injected_loop_counter))))))))), _GLF_IDENTITY((_GLF_IDENTITY(~ (~ (_injected_loop_counter)), int(_GLF_IDENTITY(int(~ (~ (_injected_loop_counter))), min(int(~ (_GLF_IDENTITY(~ (_injected_loop_counter), (false ? _GLF_FUZZED((+ -43484)) : ~ (_injected_loop_counter))))), int(~ (~ (_injected_loop_counter)))))))), ((_GLF_IDENTITY(~ (~ (_injected_loop_counter)), int(_GLF_IDENTITY(int(~ (~ (_injected_loop_counter))), min(int(~ (_GLF_IDENTITY(~ (_injected_loop_counter), (false ? _GLF_FUZZED((+ -43484)) : ~ (_injected_loop_counter))))), int(~ (~ (_injected_loop_counter))))))))) / 1) << 0)), _GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) * 1), _injected_loop_counter))) - 0))) != 0))) || false))), _GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), false || ((false)))))), true), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter))) | (_GLF_IDENTITY(_injected_loop_counter, clamp(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) / 1), _injected_loop_counter, _injected_loop_counter)))), min(_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (_injected_loop_counter)), int(_GLF_IDENTITY(int(~ (~ (_injected_loop_counter))), min(_GLF_IDENTITY(int(~ (~ (_injected_loop_counter))), max(int(~ (~ (_injected_loop_counter))), int(~ (~ (_injected_loop_counter))))), int(~ (~ (_injected_loop_counter))))))), (_GLF_IDENTITY(~ (~ (_injected_loop_counter)), int(_GLF_IDENTITY(int(~ (~ (_injected_loop_counter))), min(int(~ (~ (_injected_loop_counter))), int(~ (~ (_injected_loop_counter)))))))) << 0)), _GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) * 1), _injected_loop_counter))) - 0))) != 0)), ((! (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter))) | (_GLF_IDENTITY(_injected_loop_counter, clamp(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) / 1), _injected_loop_counter, _injected_loop_counter)))), min(_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (_injected_loop_counter)), int(_GLF_IDENTITY(int(~ (~ (_injected_loop_counter))), min(_GLF_IDENTITY(int(~ (~ (_injected_loop_counter))), max(int(~ (~ (_injected_loop_counter))), int(~ (~ (_injected_loop_counter))))), int(~ (~ (_injected_loop_counter))))))), (_GLF_IDENTITY(~ (~ (_injected_loop_counter)), int(_GLF_IDENTITY(int(~ (~ (_injected_loop_counter))), min(int(~ (~ (_injected_loop_counter))), int(~ (~ (_injected_loop_counter)))))))) << 0)), _GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) * 1), _injected_loop_counter))) - 0))) != 0))) || false), false || (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter))) | (_GLF_IDENTITY(_injected_loop_counter, clamp(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter))) / 1), _injected_loop_counter, _injected_loop_counter)))), min(_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (_injected_loop_counter)), int(_GLF_IDENTITY(int(~ (~ (_injected_loop_counter))), min(_GLF_IDENTITY(int(~ (~ (_injected_loop_counter))), max(int(~ (~ (_injected_loop_counter))), int(~ (~ (_injected_loop_counter))))), int(_GLF_IDENTITY(~ (~ (_injected_loop_counter)), 0 | (~ (~ (_injected_loop_counter))))))))), (_GLF_IDENTITY(~ (~ (_injected_loop_counter)), int(_GLF_IDENTITY(int(~ (~ (_injected_loop_counter))), min(int(~ _GLF_IDENTITY((~ (_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_injected_loop_counter) : (~ (_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter))))))), int(~ (~ (_injected_loop_counter)))))))) << 0)), _GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) * 1), _injected_loop_counter))) - 0))) != 0)), ((! (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter))) | (_GLF_IDENTITY(_injected_loop_counter, clamp(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) / 1), _injected_loop_counter, _injected_loop_counter)))), min(_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (_injected_loop_counter)), int(_GLF_IDENTITY(int(~ (~ (_injected_loop_counter))), min(_GLF_IDENTITY(int(_GLF_IDENTITY(~ (~ (_injected_loop_counter)), (_GLF_IDENTITY(~ (~ (_injected_loop_counter)), clamp(~ (~ (_injected_loop_counter)), ~ (~ (_injected_loop_counter)), ~ (~ (_injected_loop_counter))))) + int(_GLF_ZERO(0.0, injectionSwitch.x)))), max(int(~ (~ (_injected_loop_counter))), int(~ (~ (_injected_loop_counter))))), int(~ (_GLF_IDENTITY(~ (_injected_loop_counter), max(~ (_injected_loop_counter), ~ (_injected_loop_counter))))))))), _GLF_IDENTITY((_GLF_IDENTITY(~ (~ (_injected_loop_counter)), int(_GLF_IDENTITY(int(~ (~ (_injected_loop_counter))), min(int(~ (_GLF_IDENTITY(~ (_injected_loop_counter), (false ? _GLF_FUZZED((+ -43484)) : ~ (_injected_loop_counter))))), int(~ (~ (_injected_loop_counter)))))))), ((_GLF_IDENTITY(~ (~ (_injected_loop_counter)), int(_GLF_IDENTITY(int(~ (~ (_injected_loop_counter))), min(int(~ (_GLF_IDENTITY(~ (_injected_loop_counter), (false ? _GLF_FUZZED((+ -43484)) : ~ (_injected_loop_counter))))), int(~ (~ (_injected_loop_counter))))))))) / 1) << 0)), _GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) * 1), _injected_loop_counter))) - 0))) != 0))) || false))), _GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), false || ((false)))))), true), true)))))), false))))))))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1959.2492)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(806.628)), bool(false)), float(_GLF_IDENTITY(vec4(mix(float(injectionSwitch.x), _GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(806.628, max(806.628, 806.628)))), (_GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(806.628, max(806.628, 806.628)))), mix(float(_GLF_FUZZED(1.0)), float(float(_GLF_FUZZED(_GLF_IDENTITY(806.628, max(806.628, 806.628))))), bool(true)))) - 0.0), bool(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, bool(bvec3(false, false, true))))))), 0.0, 1.0, 1.0), mat4(1.0) * (vec4(mix(float(injectionSwitch.x), float(_GLF_FUZZED(806.628)), bool(false)), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-7.1) : 0.0))) - 0.0), 1.0, 1.0)))))))) > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y) - 0.0))), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), vec2(1.0, 1.0) * (_GLF_IDENTITY(min(injectionSwitch, injectionSwitch), max(min(injectionSwitch, injectionSwitch), min(injectionSwitch, injectionSwitch)))))).y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) * vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))))).y)))) && true)))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])))), injectionSwitch[1]), vec2(vec2(_GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1]), (vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])) * mat2(1.0)), mat2(1.0) * (vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1]))))))).x > injectionSwitch.y))))), false, true))))))))
          {
          }
         else
          {
           for(int _injected_loop_counter = _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 0 ^ _GLF_IDENTITY((1), max(_GLF_IDENTITY((1), ((1)) | ((1))), (1)))), 1)), 1), (true ? _GLF_IDENTITY(clamp(1, _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 0 ^ (1)), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) * 1)))) * 1))), 1), _GLF_IDENTITY(0, (_GLF_IDENTITY(0, int(ivec2(0, 0)))) | (0)) | (clamp(_GLF_IDENTITY(1, 0 ^ (1)), _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 0 ^ (1)), 1)), 1))) : _GLF_FUZZED(-48289)))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 0 ^ (1)), 1)), 1), ~ (~ (_GLF_IDENTITY(clamp(1, _GLF_IDENTITY(_GLF_IDENTITY(1, (1) << 0), min(_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, 0 | (1)))))), 1)), 1), min(clamp(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, clamp(1, 1, 1))))), _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 0 ^ (1)), 1)), 1), clamp(1, _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, (1) + ((0 << _GLF_IDENTITY(int(4), int(4))) ^ 0)))), 1)), 1))))))), _GLF_IDENTITY((_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, min(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (1)), (_GLF_IDENTITY(1, 0 ^ (1))) + 0), 1)), 1))) >> 0, _GLF_IDENTITY(int(int((_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, _GLF_IDENTITY(min(_GLF_IDENTITY(1, 0 ^ (1)), 1), _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (min(_GLF_IDENTITY(1, 0 ^ (1)), 1)), (~ (min(_GLF_IDENTITY(1, 0 ^ (1)), 1))) | (~ (min(_GLF_IDENTITY(1, 0 ^ (1)), 1)))), (_GLF_IDENTITY(~ (min(_GLF_IDENTITY(1, 0 ^ (1)), 1)), (~ (min(_GLF_IDENTITY(1, 0 ^ (1)), 1))) | (~ (min(_GLF_IDENTITY(1, 0 ^ (1)), 1))))) - 0)), (~ (_GLF_IDENTITY(~ (min(_GLF_IDENTITY(1, 0 ^ (1)), 1)), (~ (min(_GLF_IDENTITY(1, 0 ^ (1)), _GLF_IDENTITY(1, max(1, 1))))) | (~ (_GLF_IDENTITY(min(_GLF_IDENTITY(1, 0 ^ (1)), 1), min(min(_GLF_IDENTITY(1, 0 ^ (1)), 1), min(_GLF_IDENTITY(1, 0 ^ (1)), 1)))))))) / ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(6, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (6))), int(_GLF_IDENTITY(6, (6) ^ (0 << _GLF_IDENTITY(int(0), int(0)))))))))), 1))) >> 0)), 0 + (_GLF_IDENTITY(int(int((_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec4(1, 1, (0 << _GLF_IDENTITY(int(6), int(6))), 1)), 0 ^ (int(ivec4(1, 1, (0 << _GLF_IDENTITY(int(6), int(6))), 1))))))), 1)), 1), _GLF_IDENTITY((clamp(1, _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 0 ^ (1)), 1)), 1)) >> 0, min((clamp(1, _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 0 ^ (1)), 1)), 1)) >> 0, (clamp(1, _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 0 ^ (1)), 1)), 1)) >> 0))))) >> 0)), (false ? _GLF_FUZZED(91593) : int(int((_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 0 ^ (1)), 1)), 1))) >> 0)))))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 & (-81182 / 16420))); _injected_loop_counter --)
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               buf[virtual_gid] = _GLF_IDENTITY(uint(subgroupAllEqual(_GLF_IDENTITY(read_val, (read_val) << 0u))), 0u + (uint(subgroupAllEqual(read_val))));
              }
            }
          }
        }
      }
     else
      {
      }
    }
  }
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), true)))))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), true))))))))), bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))), ! (! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_IDENTITY(false, true && (false)), true)))))))))), true))))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     do
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         do
          {
           if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), (_GLF_IDENTITY(true && (true), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 1.0, _GLF_ONE(1.0, injectionSwitch.y), cos(0.0), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))), injectionSwitch)).x) * 1.0) > injectionSwitch.y)) || (true && (true)))) && true)), _GLF_IDENTITY(true, false || (true)), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, false)), ! (! _GLF_IDENTITY((bool(bvec4(true, false, true, false))), (_GLF_IDENTITY((bool(bvec4(true, false, true, false))), ((bool(bvec4(true, false, true, false)))) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false)))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (! (! (false))), (! (! (! (false)))) || false))))) || false) || (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, true && (true)), true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, true && (true)), false, true, false)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bvec4(true, false, true, false))), bool(bvec4(! (bool(bvec4(true, false, true, false))), false, false, false))), bool(bvec4(! (bool(bvec4(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) && true), false, true, false))), true, true, false)))))), false)))))))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) << 0), 1)), (_injected_loop_counter < 1) && true)); _injected_loop_counter ++)
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter)), (_injected_loop_counter) * 1) < _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (int(_GLF_ONE(1.0, injectionSwitch.y))) / _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(_injected_loop_counter) : 1))) | (_GLF_IDENTITY(1, int(int(1))))))); _GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) ^ 0))
                    {
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, bool(bvec2(false, true))) ? _GLF_FUZZED(trunc(vec2(7327.0386, 9.9))) : injectionSwitch)).x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(trunc(vec2(7327.0386, 9.9))) : injectionSwitch)).x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(! (! (! _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(trunc(vec2(7327.0386, 9.9))) : injectionSwitch)).x > injectionSwitch.y))), true && ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(trunc(vec2(7327.0386, 9.9))) : injectionSwitch)).x > injectionSwitch.y))))))), (_GLF_IDENTITY(! (! (! _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(trunc(vec2(7327.0386, 9.9))) : injectionSwitch)).x > injectionSwitch.y))), true && ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(trunc(vec2(7327.0386, 9.9))) : injectionSwitch)).x > injectionSwitch.y))))))), bool(bvec3(_GLF_IDENTITY(! (! (! _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(trunc(vec2(7327.0386, 9.9))) : injectionSwitch)).x > injectionSwitch.y))), true && ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(trunc(vec2(7327.0386, 9.9))) : injectionSwitch)).x > injectionSwitch.y))))))), (! (! (! _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(trunc(vec2(7327.0386, 9.9))) : injectionSwitch)).x > injectionSwitch.y))), true && ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(trunc(vec2(7327.0386, 9.9))) : injectionSwitch)).x > injectionSwitch.y)))))))) || false), false, false)))) && true), (_GLF_IDENTITY(! (! (! _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(trunc(vec2(7327.0386, 9.9))) : injectionSwitch)).x > injectionSwitch.y))), true && ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(trunc(vec2(_GLF_IDENTITY(7327.0386, (_GLF_IDENTITY(7327.0386, min(_GLF_IDENTITY(7327.0386, (false ? _GLF_FUZZED(-2528.8303) : 7327.0386)), 7327.0386))) - log(1.0)), 9.9))) : injectionSwitch)).x > injectionSwitch.y))))))), _GLF_IDENTITY((_GLF_IDENTITY(! (! (! _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(trunc(vec2(7327.0386, 9.9))) : injectionSwitch)).x > injectionSwitch.y))), true && ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(trunc(vec2(7327.0386, 9.9))) : injectionSwitch)).x > injectionSwitch.y))))))), bool(bvec3(_GLF_IDENTITY(! (! (! _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(trunc(vec2(7327.0386, 9.9))) : injectionSwitch)).x > injectionSwitch.y))), true && ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(trunc(vec2(7327.0386, 9.9))) : injectionSwitch)).x > injectionSwitch.y))))))), (! (! (! _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(trunc(vec2(7327.0386, 9.9))) : injectionSwitch)).x > injectionSwitch.y))), true && ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(trunc(vec2(7327.0386, 9.9))) : injectionSwitch)).x > injectionSwitch.y)))))))) || false), false, false)))) && true, ! (! ((_GLF_IDENTITY(! (! (! _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(trunc(vec2(7327.0386, 9.9))) : injectionSwitch)).x > injectionSwitch.y))), _GLF_IDENTITY(true && ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(trunc(vec2(7327.0386, 9.9))) : injectionSwitch)).x > injectionSwitch.y)))), (_GLF_IDENTITY(true && ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(trunc(vec2(7327.0386, 9.9))) : injectionSwitch)).x > injectionSwitch.y)))), (true && ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(trunc(vec2(7327.0386, 9.9))) : injectionSwitch)).x > injectionSwitch.y))))) || false)) && true)))), bool(bvec3(_GLF_IDENTITY(! (! (! _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(trunc(vec2(7327.0386, 9.9))) : injectionSwitch)).x > injectionSwitch.y))), true && ((_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(trunc(vec2(7327.0386, 9.9))) : injectionSwitch)).x > injectionSwitch.y))))))), (! (! (! _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(trunc(_GLF_IDENTITY(vec2(7327.0386, 9.9), max(vec2(7327.0386, 9.9), vec2(7327.0386, 9.9))))) : injectionSwitch)).x > injectionSwitch.y))), true && ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(trunc(vec2(7327.0386, 9.9))) : injectionSwitch)).x > injectionSwitch.y)))))))) || false), false, false)))) && _GLF_IDENTITY(true, ! (! (true)))))))) && true))))))
                        {
                         do
                          {
                           return;
                          }
                         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)))), bool(bvec2(! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)))), false))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(false, false)), bvec2(bvec4(bvec2(bvec2(false, false)), false, true)))), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(bvec2(bvec2(false, false)), bvec2(bvec4(bvec2(bvec2(false, false)), false, true)))), true), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(bvec2(bvec2(false, false)), bvec2(bvec4(bvec2(bvec2(false, false)), false, true)))), true), true)))))), bvec2(bvec3(bvec2(false, false), false)))), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false))), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false))), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false))), true)), bvec2(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false))), true)), true)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))));
                        }
                      }
                     else
                      {
                      }
                    }
                  }
                }
              }
             else
              {
              }
            }
           else
            {
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       else
        {
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0), vec4(mat2x4(vec4(0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0), 1.0, 1.0, cos(0.0), 0.0))), vec4(sqrt(1.0), 0.0, 0.0, 0.0)), (true ? dot(vec4(0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0), vec4(sqrt(1.0), 0.0, 0.0, 0.0)) : _GLF_FUZZED(degrees(-5.4)))), dot(vec4(_GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) * 1.0, float(_GLF_IDENTITY(vec3((0.0) * 1.0, 0.0, 1.0), clamp(vec3((0.0) * 1.0, 0.0, 1.0), _GLF_IDENTITY(vec3((0.0) * 1.0, 0.0, 1.0), min(vec3((0.0) * 1.0, 0.0, 1.0), vec3((0.0) * 1.0, 0.0, 1.0))), vec3((0.0) * 1.0, 0.0, 1.0)))))), 1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_IDENTITY(_GLF_FUZZED(-78.64), max(_GLF_FUZZED(-78.64), _GLF_IDENTITY(_GLF_FUZZED(-78.64), max(_GLF_FUZZED(-78.64), _GLF_IDENTITY(_GLF_FUZZED(-78.64), 1.0 * (_GLF_FUZZED(-78.64)))))))), bool(false)))), 1.0), vec4(sqrt(1.0), 0.0, 0.0, 0.0))), 1.0, 1.0, 0.0, 1.0, 0.0), mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0), clamp((0.0), (0.0), _GLF_IDENTITY((0.0), (false ? _GLF_FUZZED(902.185) : _GLF_IDENTITY((0.0), float(vec4((0.0), 1.0, 0.0, 1.0))))))) * 1.0)) - 0.0), 0.0) + (mat4x3(injectionSwitch, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0), clamp(_GLF_IDENTITY(vec4(0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0), max(vec4(0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0), vec4(0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0))), vec4(0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0), _GLF_IDENTITY(vec4(0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0), _GLF_IDENTITY(mat4(1.0) * (vec4(0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), mix(vec4((mat4(1.0) * (vec4(0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)))[0], (mat4(1.0) * (vec4(0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)))[1], (mat4(1.0) * (vec4(0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)))[2], _GLF_FUZZED(6339.8936)), vec4(_GLF_FUZZED(8.3), _GLF_FUZZED(-16.61), _GLF_FUZZED(505.536), (mat4(1.0) * (vec4(0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)))[3]), bvec4(false, false, false, true)))))), vec4(sqrt(1.0), 0.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0), vec4(sqrt(1.0), 0.0, 0.0, 0.0))), 1.0, 1.0, 0.0, 1.0, 0.0))))), mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-5564.1438), _GLF_FUZZED(_GLF_IDENTITY(7.9, float(_GLF_IDENTITY(mat3x4(7.9, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, sqrt(1.0), sin(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0), mat3x4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) * 1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x4(7.9, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, 1.0 * (0.0))) - length(tan(vec4(0.0, 0.0, 0.0, 0.0)))), 1.0, 1.0, 1.0, 1.0, sqrt(1.0), sin(0.0), 0.0, _GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((595.475 * 2.9))), float(0.0), bool(true))), injectionSwitch.x), 1.0))))))), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), cos(vec2(0.0, 0.0)) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, _GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-839.618), _GLF_FUZZED(float(40756u))), bvec2(false, false))), min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-839.618), _GLF_FUZZED(float(40756u))), bvec2(false, false))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-839.618), _GLF_FUZZED(float(40756u))), bvec2(false, false))))).y), _GLF_IDENTITY(1.0, 0.0 + (1.0))), vec4(sqrt(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), (false ? _GLF_FUZZED(step(2.9, -54.56)) : _GLF_IDENTITY(1.0, max(1.0, 1.0))))))), 0.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0), vec4(sqrt(1.0), 0.0, 0.0, 0.0))), 1.0, 1.0, 0.0, 1.0, 0.0), mat4x3(0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) * 1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4x3(injectionSwitch, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(_GLF_IDENTITY((false ? 2410.6559 : -755.997), ((false ? 2410.6559 : -755.997)) / 1.0)) : 1.0)), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-4516.4404)), float(0.0), bool(true))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0), vec4(sqrt(1.0), 0.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) + 0.0)) + _GLF_ZERO(0.0, injectionSwitch.x))), vec4(sqrt(1.0), 0.0, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(48.04) : 0.0)), 0.0))), 1.0, 1.0, 0.0, 1.0, 0.0))))), _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-5564.1438), _GLF_FUZZED(7.9)), bvec2(false, _GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, sqrt(1.0) * (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))))), mix(vec2(_GLF_FUZZED(float(60312u)), (mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(-5564.1438), _GLF_FUZZED(7.9)), clamp(vec2(_GLF_FUZZED(-5564.1438), _GLF_FUZZED(7.9)), _GLF_IDENTITY(vec2(_GLF_FUZZED(-5564.1438), _GLF_FUZZED(7.9)), (true ? vec2(_GLF_FUZZED(-5564.1438), _GLF_FUZZED(7.9)) : _GLF_FUZZED(vec2(516.109, 7.1)))), vec2(_GLF_FUZZED(-5564.1438), _GLF_FUZZED(7.9)))), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))[1]), vec2(_GLF_IDENTITY((mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(_GLF_IDENTITY(-5564.1438, (true ? -5564.1438 : _GLF_FUZZED(clamp(90.05, -2.6, 5567.5013))))), _GLF_FUZZED(7.9)), bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))), _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * ((mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(_GLF_IDENTITY(-5564.1438, (true ? -5564.1438 : _GLF_FUZZED(clamp(90.05, -2.6, 5567.5013))))), _GLF_FUZZED(7.9)), bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)))))), vec2(mat4x3(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * ((mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(_GLF_IDENTITY(-5564.1438, (true ? -5564.1438 : _GLF_FUZZED(clamp(90.05, -2.6, 5567.5013))))), _GLF_FUZZED(7.9)), bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)))))), 0.0, 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))[0], _GLF_FUZZED(-6.8)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))).x > _GLF_IDENTITY(injectionSwitch.y, determinant(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, _GLF_IDENTITY(sqrt(1.0), min(sqrt(1.0), sqrt(1.0))), cos(0.0))), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(-1.5) : float(vec4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, _GLF_IDENTITY(sqrt(1.0), min(sqrt(1.0), sqrt(1.0))), cos(0.0))))))), transpose(_GLF_IDENTITY(transpose(mat2(1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED((+ 272.987)))), 0.0, 1.0)), mat2(0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY(transpose(mat2(1.0, 0.0, 0.0, 1.0)), (transpose(mat2(1.0, 0.0, 0.0, 1.0))) / mat2(1.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(1.0, 1.0, 1.0, 0.0), (true ? mat2(1.0, 1.0, 1.0, 0.0) : _GLF_FUZZED(mat2(-8.8, -9.2, 2.8, -72.83))))), (float(_GLF_IDENTITY(mat2(1.0, 1.0, 1.0, 0.0), (true ? mat2(1.0, 1.0, 1.0, 0.0) : _GLF_FUZZED(mat2(-8.8, -9.2, 2.8, -72.83)))))) / sqrt(1.0))), 1.0))))))) * (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.y), mix(float(_GLF_IDENTITY((injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), _GLF_IDENTITY((injectionSwitch.y), min((injectionSwitch.y), (injectionSwitch.y)))))) + 0.0)), float(_GLF_FUZZED(_GLF_IDENTITY(6.3, (true ? _GLF_IDENTITY(6.3, min(6.3, 6.3)) : _GLF_FUZZED(atanh(4.3)))))), bool(false))) * 1.0, (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) * vec2(1.0, 1.0))).y), mix(float((injectionSwitch.y)), float(_GLF_FUZZED(6.3)), bool(false))) * 1.0) / _GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-748.883) : 1.0))))))))));
    }
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
