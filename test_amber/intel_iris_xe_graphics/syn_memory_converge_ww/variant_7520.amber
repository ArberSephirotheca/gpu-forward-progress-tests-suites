#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) || (_GLF_DEAD(false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y)) || (_GLF_DEAD(false))))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false) || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) || (_GLF_DEAD(false))))), true, false)))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))), true, false))))) || false))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 0.0, round(_GLF_IDENTITY(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))), (true ? length(normalize(vec4(1.0, 1.0, 1.0, 1.0))) : _GLF_FUZZED(1.5)))), 0.0))), mix(vec2(_GLF_FUZZED((358.453 / -775.556)), _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(vec2(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0))))[0], _GLF_FUZZED((+ -5.3))), max(vec2(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0))))[0], _GLF_FUZZED((+ -5.3))), vec2(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(((injectionSwitch)) / vec2(1.0, 1.0), (((injectionSwitch)) / vec2(1.0, 1.0)) * mat2(1.0)))))[0], _GLF_FUZZED((+ -5.3))))), bvec2(true, false))), 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((- -441.469))), float(1.0), bool(true)))), float(mat4x2(_GLF_IDENTITY(clamp(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))))), 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((- -441.469))), float(1.0), bool(true)))), clamp(clamp(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((- -441.469))), float(1.0), bool(true)))), clamp(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((- -441.469))), float(1.0), bool(true)))), clamp(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((- -441.469))), float(1.0), bool(true)))))), log(1.0), 1.0, exp(0.0), 0.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(6.8)))), float(_GLF_FUZZED(-141.898)), bool(false))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0)), 0.0))))), mat3x2(mat3x4(mat3x2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((358.453 / -775.556)), _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0))[1], (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY((+ -5.3), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4((+ -5.3), 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0))), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0))), vec2(0.0, 1.0)), mix(float(dot(vec2(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0))), vec2(0.0, 1.0))), float(_GLF_FUZZED(-0.6)), bool(false)))), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(abs(1.0), 0.0)), dot(vec2(0.0, 1.0), vec2(abs(1.0), 0.0))), 1.0, 0.0, 1.0, 1.0, 1.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)), 1.0, 1.0), transpose(transpose(_GLF_IDENTITY(mat4((+ -5.3), 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0))), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0))), vec2(0.0, 1.0)), mix(float(dot(vec2(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0))), vec2(0.0, 1.0))), float(_GLF_FUZZED(-0.6)), bool(false)))), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(abs(1.0), 0.0)), dot(vec2(0.0, 1.0), vec2(abs(1.0), 0.0))), 1.0, 0.0, 1.0, 1.0, 1.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)), 1.0, 1.0), (mat4((+ -5.3), 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0))), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0))), vec2(0.0, 1.0)), mix(float(dot(vec2(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0))), vec2(0.0, 1.0))), float(_GLF_FUZZED(-0.6)), bool(false)))), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(abs(1.0), 0.0)), dot(vec2(0.0, 1.0), vec2(abs(1.0), 0.0))), 1.0, 0.0, 1.0, 1.0, 1.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)), 1.0, 1.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), min(float(_GLF_IDENTITY(mat4((+ -5.3), 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0))), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0))), vec2(0.0, 1.0)), mix(float(dot(vec2(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0))), vec2(0.0, 1.0))), float(_GLF_FUZZED(-0.6)), bool(false)))), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(abs(1.0), 0.0)), dot(vec2(0.0, 1.0), vec2(abs(1.0), 0.0))), 1.0, 0.0, 1.0, 1.0, 1.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)), 1.0, 1.0), transpose(transpose(_GLF_IDENTITY(mat4((+ -5.3), 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0))), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0))), vec2(0.0, 1.0)), mix(float(dot(vec2(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0))), vec2(0.0, 1.0))), float(_GLF_FUZZED(-0.6)), bool(false)))), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(abs(1.0), 0.0)), dot(vec2(0.0, 1.0), vec2(abs(1.0), 0.0))), 1.0, 0.0, 1.0, 1.0, 1.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)), 1.0, 1.0), (mat4((+ -5.3), 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0))), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0))), vec2(0.0, 1.0)), mix(float(dot(vec2(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0))), vec2(0.0, 1.0))), float(_GLF_FUZZED(-0.6)), bool(false)))), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(abs(1.0), 0.0)), dot(vec2(0.0, 1.0), vec2(abs(1.0), 0.0))), 1.0, 0.0, 1.0, 1.0, 1.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)), 1.0, 1.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), float(_GLF_IDENTITY(mat4((+ -5.3), 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0))), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0))), vec2(0.0, 1.0)), mix(float(dot(vec2(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0))), vec2(0.0, 1.0))), float(_GLF_FUZZED(-0.6)), bool(false)))), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(abs(1.0), 0.0)), dot(vec2(0.0, 1.0), vec2(abs(1.0), 0.0))), 1.0, 0.0, 1.0, 1.0, 1.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)), 1.0, 1.0), transpose(transpose(_GLF_IDENTITY(mat4((+ -5.3), 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0))), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0))), vec2(0.0, 1.0)), mix(float(dot(vec2(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0))), vec2(0.0, 1.0))), float(_GLF_FUZZED(-0.6)), bool(false)))), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(abs(1.0), 0.0)), dot(vec2(0.0, 1.0), vec2(abs(1.0), 0.0))), 1.0, 0.0, 1.0, 1.0, 1.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)), 1.0, 1.0), (mat4((+ -5.3), 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0))), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0))), vec2(0.0, 1.0)), mix(float(dot(vec2(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0))), vec2(0.0, 1.0))), float(_GLF_FUZZED(-0.6)), bool(false)))), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(abs(1.0), 0.0)), dot(vec2(0.0, 1.0), vec2(abs(1.0), 0.0))), 1.0, 0.0, 1.0, 1.0, 1.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)), 1.0, 1.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))))))), bvec2(true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), bool(bool(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))))))))), 1.0, 1.0, 1.0, 1.0)))))), vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(-97753, (_GLF_IDENTITY(-97753, clamp(-97753, -97753, -97753))) | (_GLF_IDENTITY(-97753, 0 ^ (_GLF_IDENTITY(-97753, (-97753) - 0)))))) : 1))], _GLF_IDENTITY((injectionSwitch[1]), (_GLF_IDENTITY((injectionSwitch[1]), (true ? _GLF_IDENTITY((injectionSwitch[1]), (false ? _GLF_FUZZED(406.041) : (injectionSwitch[1]))) : _GLF_FUZZED(5590.0837)))) / 1.0) - 0.0))).y, float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 0.0, round(_GLF_IDENTITY(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))), (true ? length(normalize(vec4(1.0, 1.0, 1.0, 1.0))) : _GLF_FUZZED(1.5)))), 0.0))), mix(vec2(_GLF_FUZZED((358.453 / -775.556)), _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(vec2(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0))))[0], _GLF_FUZZED((+ -5.3))), max(vec2(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0))))[0], _GLF_FUZZED((+ -5.3))), vec2(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(((injectionSwitch)) / vec2(1.0, 1.0), (((injectionSwitch)) / vec2(1.0, 1.0)) * mat2(1.0)))))[0], _GLF_FUZZED((+ -5.3))))), bvec2(true, false))), 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((- -441.469))), float(1.0), bool(true)))), float(mat4x2(_GLF_IDENTITY(clamp(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))))), 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((- -441.469))), float(1.0), bool(true)))), clamp(clamp(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((- -441.469))), float(1.0), bool(true)))), clamp(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((- -441.469))), float(1.0), bool(true)))), clamp(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((- -441.469))), float(1.0), bool(true)))))), log(1.0), 1.0, exp(0.0), 0.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(6.8)))), float(_GLF_FUZZED(-141.898)), bool(false))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0)), 0.0))))), mat3x2(mat3x4(mat3x2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((358.453 / -775.556)), _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0))[1], (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY((+ -5.3), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4((+ -5.3), 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0))), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0))), vec2(0.0, 1.0)), mix(float(dot(vec2(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0))), vec2(0.0, 1.0))), float(_GLF_FUZZED(-0.6)), bool(false)))), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(abs(1.0), 0.0)), dot(vec2(0.0, 1.0), vec2(abs(1.0), 0.0))), 1.0, 0.0, 1.0, 1.0, 1.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)), 1.0, 1.0), transpose(transpose(_GLF_IDENTITY(mat4((+ -5.3), 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0))), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0))), vec2(0.0, 1.0)), mix(float(dot(vec2(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0))), vec2(0.0, 1.0))), float(_GLF_FUZZED(-0.6)), bool(false)))), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(abs(1.0), 0.0)), dot(vec2(0.0, 1.0), vec2(abs(1.0), 0.0))), 1.0, 0.0, 1.0, 1.0, 1.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)), 1.0, 1.0), (mat4((+ -5.3), 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0))), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0))), vec2(0.0, 1.0)), mix(float(dot(vec2(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0))), vec2(0.0, 1.0))), float(_GLF_FUZZED(-0.6)), bool(false)))), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(abs(1.0), 0.0)), dot(vec2(0.0, 1.0), vec2(abs(1.0), 0.0))), 1.0, 0.0, 1.0, 1.0, 1.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)), 1.0, 1.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), min(float(_GLF_IDENTITY(mat4((+ -5.3), 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0))), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0))), vec2(0.0, 1.0)), mix(float(dot(vec2(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0))), vec2(0.0, 1.0))), float(_GLF_FUZZED(-0.6)), bool(false)))), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(abs(1.0), 0.0)), dot(vec2(0.0, 1.0), vec2(abs(1.0), 0.0))), 1.0, 0.0, 1.0, 1.0, 1.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)), 1.0, 1.0), transpose(transpose(_GLF_IDENTITY(mat4((+ -5.3), 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0))), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0))), vec2(0.0, 1.0)), mix(float(dot(vec2(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0))), vec2(0.0, 1.0))), float(_GLF_FUZZED(-0.6)), bool(false)))), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(abs(1.0), 0.0)), dot(vec2(0.0, 1.0), vec2(abs(1.0), 0.0))), 1.0, 0.0, 1.0, 1.0, 1.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)), 1.0, 1.0), (mat4((+ -5.3), 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0))), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0))), vec2(0.0, 1.0)), mix(float(dot(vec2(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0))), vec2(0.0, 1.0))), float(_GLF_FUZZED(-0.6)), bool(false)))), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(abs(1.0), 0.0)), dot(vec2(0.0, 1.0), vec2(abs(1.0), 0.0))), 1.0, 0.0, 1.0, 1.0, 1.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)), 1.0, 1.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), float(_GLF_IDENTITY(mat4((+ -5.3), 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0))), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0))), vec2(0.0, 1.0)), mix(float(dot(vec2(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0))), vec2(0.0, 1.0))), float(_GLF_FUZZED(-0.6)), bool(false)))), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(abs(1.0), 0.0)), dot(vec2(0.0, 1.0), vec2(abs(1.0), 0.0))), 1.0, 0.0, 1.0, 1.0, 1.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)), 1.0, 1.0), transpose(transpose(_GLF_IDENTITY(mat4((+ -5.3), 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0))), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0))), vec2(0.0, 1.0)), mix(float(dot(vec2(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0))), vec2(0.0, 1.0))), float(_GLF_FUZZED(-0.6)), bool(false)))), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(abs(1.0), 0.0)), dot(vec2(0.0, 1.0), vec2(abs(1.0), 0.0))), 1.0, 0.0, 1.0, 1.0, 1.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)), 1.0, 1.0), (mat4((+ -5.3), 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0))), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0))), vec2(0.0, 1.0)), mix(float(dot(vec2(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0))), vec2(0.0, 1.0))), float(_GLF_FUZZED(-0.6)), bool(false)))), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(abs(1.0), 0.0)), dot(vec2(0.0, 1.0), vec2(abs(1.0), 0.0))), 1.0, 0.0, 1.0, 1.0, 1.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)), 1.0, 1.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))))))), bvec2(true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), bool(bool(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))))))))), 1.0, 1.0, 1.0, 1.0)))))), vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(-97753, (_GLF_IDENTITY(-97753, clamp(-97753, -97753, -97753))) | (_GLF_IDENTITY(-97753, 0 ^ (_GLF_IDENTITY(-97753, (-97753) - 0)))))) : 1))], _GLF_IDENTITY((injectionSwitch[1]), (_GLF_IDENTITY((injectionSwitch[1]), (true ? _GLF_IDENTITY((injectionSwitch[1]), (false ? _GLF_FUZZED(406.041) : (injectionSwitch[1]))) : _GLF_FUZZED(5590.0837)))) / 1.0) - 0.0))).y, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0, 0.0, 1.0), mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 0.0, round(_GLF_IDENTITY(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))), (true ? length(normalize(vec4(1.0, 1.0, 1.0, 1.0))) : _GLF_FUZZED(1.5)))), 0.0))), mix(vec2(_GLF_FUZZED((358.453 / -775.556)), _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(vec2(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0))))[0], _GLF_FUZZED((+ -5.3))), max(vec2(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0))))[0], _GLF_FUZZED((+ -5.3))), vec2(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(((injectionSwitch)) / vec2(1.0, 1.0), (((injectionSwitch)) / vec2(1.0, 1.0)) * mat2(1.0)))))[0], _GLF_FUZZED((+ -5.3))))), bvec2(true, false))), 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((- -441.469))), float(1.0), bool(true)))), float(mat4x2(_GLF_IDENTITY(clamp(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))))), 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((- -441.469))), float(1.0), bool(true)))), clamp(clamp(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((- -441.469))), float(1.0), bool(true)))), clamp(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((- -441.469))), float(1.0), bool(true)))), clamp(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((- -441.469))), float(1.0), bool(true)))))), log(1.0), 1.0, exp(0.0), 0.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(6.8)))), float(_GLF_FUZZED(-141.898)), bool(false))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0)), 0.0))))), mat3x2(mat3x4(mat3x2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((358.453 / -775.556)), _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0))[1], (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY((+ -5.3), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4((+ -5.3), 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0))), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0))), vec2(0.0, 1.0)), mix(float(dot(vec2(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0))), vec2(0.0, 1.0))), float(_GLF_FUZZED(-0.6)), bool(false)))), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(abs(1.0), 0.0)), dot(vec2(0.0, 1.0), vec2(abs(1.0), 0.0))), 1.0, 0.0, 1.0, 1.0, 1.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)), 1.0, 1.0), transpose(transpose(_GLF_IDENTITY(mat4((+ -5.3), 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0))), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0))), vec2(0.0, 1.0)), mix(float(dot(vec2(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0))), vec2(0.0, 1.0))), float(_GLF_FUZZED(-0.6)), bool(false)))), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(abs(1.0), 0.0)), dot(vec2(0.0, 1.0), vec2(abs(1.0), 0.0))), 1.0, 0.0, 1.0, 1.0, 1.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)), 1.0, 1.0), (mat4((+ -5.3), 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0))), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0))), vec2(0.0, 1.0)), mix(float(dot(vec2(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0))), vec2(0.0, 1.0))), float(_GLF_FUZZED(-0.6)), bool(false)))), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(abs(1.0), 0.0)), dot(vec2(0.0, 1.0), vec2(abs(1.0), 0.0))), 1.0, 0.0, 1.0, 1.0, 1.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)), 1.0, 1.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), min(float(_GLF_IDENTITY(mat4((+ -5.3), 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0))), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0))), vec2(0.0, 1.0)), mix(float(dot(vec2(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0))), vec2(0.0, 1.0))), float(_GLF_FUZZED(-0.6)), bool(false)))), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(abs(1.0), 0.0)), dot(vec2(0.0, 1.0), vec2(abs(1.0), 0.0))), 1.0, 0.0, 1.0, 1.0, 1.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)), 1.0, 1.0), transpose(transpose(_GLF_IDENTITY(mat4((+ -5.3), 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0))), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0))), vec2(0.0, 1.0)), mix(float(dot(vec2(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0))), vec2(0.0, 1.0))), float(_GLF_FUZZED(-0.6)), bool(false)))), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(abs(1.0), 0.0)), dot(vec2(0.0, 1.0), vec2(abs(1.0), 0.0))), 1.0, 0.0, 1.0, 1.0, 1.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)), 1.0, 1.0), (mat4((+ -5.3), 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0))), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0))), vec2(0.0, 1.0)), mix(float(dot(vec2(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0))), vec2(0.0, 1.0))), float(_GLF_FUZZED(-0.6)), bool(false)))), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(abs(1.0), 0.0)), dot(vec2(0.0, 1.0), vec2(abs(1.0), 0.0))), 1.0, 0.0, 1.0, 1.0, 1.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)), 1.0, 1.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), float(_GLF_IDENTITY(mat4((+ -5.3), 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0))), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0))), vec2(0.0, 1.0)), mix(float(dot(vec2(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0))), vec2(0.0, 1.0))), float(_GLF_FUZZED(-0.6)), bool(false)))), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(abs(1.0), 0.0)), dot(vec2(0.0, 1.0), vec2(abs(1.0), 0.0))), 1.0, 0.0, 1.0, 1.0, 1.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)), 1.0, 1.0), transpose(transpose(_GLF_IDENTITY(mat4((+ -5.3), 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0))), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0))), vec2(0.0, 1.0)), mix(float(dot(vec2(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0))), vec2(0.0, 1.0))), float(_GLF_FUZZED(-0.6)), bool(false)))), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(abs(1.0), 0.0)), dot(vec2(0.0, 1.0), vec2(abs(1.0), 0.0))), 1.0, 0.0, 1.0, 1.0, 1.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)), 1.0, 1.0), (mat4((+ -5.3), 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0))), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0))), vec2(0.0, 1.0)), mix(float(dot(vec2(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0))), vec2(0.0, 1.0))), float(_GLF_FUZZED(-0.6)), bool(false)))), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(abs(1.0), 0.0)), dot(vec2(0.0, 1.0), vec2(abs(1.0), 0.0))), 1.0, 0.0, 1.0, 1.0, 1.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)), 1.0, 1.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))))))), bvec2(true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), bool(bool(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))))))))), 1.0, 1.0, 1.0, 1.0)))))), vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(-97753, (_GLF_IDENTITY(-97753, clamp(-97753, -97753, -97753))) | (_GLF_IDENTITY(-97753, 0 ^ (_GLF_IDENTITY(-97753, (-97753) - 0)))))) : 1))], _GLF_IDENTITY((injectionSwitch[1]), (_GLF_IDENTITY((injectionSwitch[1]), (true ? _GLF_IDENTITY((injectionSwitch[1]), (false ? _GLF_FUZZED(406.041) : (injectionSwitch[1]))) : _GLF_FUZZED(5590.0837)))) / 1.0) - 0.0))).y, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0, 0.0, 1.0)))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), false || (bool(false)))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))), false, false)), _GLF_IDENTITY(bool(bvec4(bool(bvec3(_GLF_DEAD(false), false, false)), false, true, false)), false || (bool(bvec4(bool(bvec3(_GLF_DEAD(false), false, false)), false, true, false)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2(_GLF_FUZZED(406.181), _GLF_FUZZED(7.8)), vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_IDENTITY((mat2(1.0) * (injectionSwitch))[1], float(mat2x3((mat2(1.0) * (injectionSwitch))[1], 1.0, 0.0, 0.0, 0.0, 1.0)))), bvec2(true, true)))).x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-6.2)), bool(false)))))))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 1.0, 0.0))), injectionSwitch.x)), 0.0, cos(abs(0.0)), log(1.0), 0.0, determinant(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, 1.0), (mat2(1.0, 0.0, 0.0, 1.0)) / mat2(1.0, 1.0, 1.0, 1.0))), _GLF_IDENTITY(dot(vec4(1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 1.0)), clamp(float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 1.0, 0.0))), injectionSwitch.x)), 0.0, cos(abs(0.0)), log(1.0), 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0)), vec4(1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x2(0.0, 1.0, 1.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(clamp(float(mat3x2(0.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(1886.9498))), 0.0, 1.0, 0.0)), float(mat3x2(0.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)))), 1.0, 0.0, 1.0, 0.0)), float(mat3x2(0.0, 1.0, 1.0, 0.0, 1.0, 0.0))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(clamp(float(mat3x2(0.0, 1.0, 1.0, 0.0, 1.0, 0.0)), float(mat3x2(0.0, 1.0, 1.0, 0.0, 1.0, 0.0)), float(mat3x2(0.0, 1.0, 1.0, 0.0, 1.0, 0.0))), 0.0 + (clamp(float(mat3x2(0.0, 1.0, 1.0, 0.0, 1.0, 0.0)), float(mat3x2(0.0, 1.0, 1.0, 0.0, 1.0, 0.0)), float(mat3x2(0.0, 1.0, 1.0, 0.0, 1.0, 0.0))))), clamp(clamp(float(mat3x2(0.0, 1.0, 1.0, 0.0, 1.0, 0.0)), float(mat3x2(0.0, 1.0, 1.0, 0.0, 1.0, 0.0)), float(mat3x2(0.0, 1.0, 1.0, 0.0, 1.0, 0.0))), clamp(float(mat3x2(0.0, _GLF_IDENTITY(1.0, float(vec4(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), 1.0, 1.0, log(1.0)))), 1.0, 0.0, 1.0, 0.0)), float(mat3x2(0.0, 1.0, 1.0, 0.0, 1.0, 0.0)), float(mat3x2(0.0, 1.0, 1.0, 0.0, 1.0, 0.0))), clamp(float(mat3x2(0.0, 1.0, 1.0, 0.0, 1.0, 0.0)), float(mat3x2(0.0, 1.0, 1.0, 0.0, 1.0, 0.0)), float(mat3x2(0.0, 1.0, 1.0, 0.0, 1.0, 0.0))))) : _GLF_FUZZED(7.4))))), 0.0))), 1.0)), float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))), 0.0, cos(abs(0.0)), log(1.0), 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 1.0)), float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 1.0, 0.0))), injectionSwitch.x)), 0.0, cos(abs(0.0)), log(1.0), 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), mix(float(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)))), float(_GLF_FUZZED(-9.3)), bool(false))), 1.0))))) > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(vec3(injectionSwitch, 0.0)), vec2(mat4(vec2(vec3(injectionSwitch, 0.0)), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), clamp(_GLF_IDENTITY(vec2(vec3(injectionSwitch, 0.0)), vec2(mat4(vec2(vec3(injectionSwitch, 0.0)), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(vec2(vec3(injectionSwitch, 0.0)), vec2(mat4(vec2(vec3(injectionSwitch, 0.0)), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(vec2(vec3(injectionSwitch, 0.0)), vec2(mat4(vec2(vec3(injectionSwitch, 0.0)), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))).x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x) / 1.0), _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x)) > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) && true)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ! _GLF_IDENTITY((! ((false))), ! (! ((! ((false))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * _GLF_ONE(_GLF_IDENTITY(1.0, (1.0) * 1.0), injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1.5)), float(injectionSwitch.y), bool(true)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! (! ((false))))) || false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((false ? -4.5 : 9.8))), float(injectionSwitch.x), bool(true)))) - log(1.0)) > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-4.5) : injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, _GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! (true), _GLF_IDENTITY(! (! (! (true))), true && (! (! (! (true))))))), (_GLF_IDENTITY((_GLF_IDENTITY(! (true), _GLF_IDENTITY(! (! (! (true))), true && (! (! (! (true))))))), ! (! ((_GLF_IDENTITY(! (true), _GLF_IDENTITY(! (! (! (true))), true && (! (! (! (true))))))))))) && true), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), ! (! (! (true))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), ! _GLF_IDENTITY((! (! (true))), bool(bvec3((_GLF_IDENTITY(! (! (true)), ! (! (! (! (true)))))), false, true))))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), (! (! (_GLF_IDENTITY(! (true), ! (! (! (true))))))) && true))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), ! _GLF_IDENTITY((! (! (true))), bool(bvec3((_GLF_IDENTITY(! (! (true)), ! (! (! (! (true)))))), false, true))))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), (! (! (_GLF_IDENTITY(! (true), ! (! (! (true))))))) && true))), true, true)))))))))), true))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)))) && true)), (bool(_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)))) && true))) && true))), ! (! ((_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)))))), bool(_GLF_IDENTITY(bool(! (_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)))), (bool(! (_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) - vec2(0.0, 0.0)).x > injectionSwitch.y))))) || false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(_GLF_IDENTITY(false, (false) || _GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), true && (bool(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), false)))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (false))), false, false)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_IDENTITY(true, false || (true)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(true, true && (true))))), bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(true, true && (true))))), false))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize))) | uvec3(0u, 0u, 0u)).x, 0u | (_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize))) | uvec3(0u, 0u, 0u)).x));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), max(max(injectionSwitch.y, injectionSwitch.y), max(injectionSwitch.y, injectionSwitch.y))))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))), _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY((false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(0.0), _GLF_FUZZED(-5.5)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x < injectionSwitch.y)), bool(bvec4((false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(0.0), _GLF_FUZZED(-5.5)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x < injectionSwitch.y)), true, _GLF_IDENTITY(false, ! (! (false))), true))))) || false, ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, _GLF_IDENTITY((false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(0.0), _GLF_FUZZED(-5.5)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x < injectionSwitch.y)), bool(bvec4((false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(0.0), _GLF_FUZZED(-5.5)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x < injectionSwitch.y)), true, _GLF_IDENTITY(false, ! (! (false))), true))))) || false), bool(_GLF_IDENTITY(bvec3(! ((_GLF_IDENTITY(false, _GLF_IDENTITY((false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(0.0), _GLF_FUZZED(-5.5)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x < injectionSwitch.y)), bool(bvec4((false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(0.0), _GLF_FUZZED(-5.5)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x < injectionSwitch.y)), true, _GLF_IDENTITY(false, ! (! (false))), true))))) || false), false, true), bvec3(bvec3(bvec3(! ((_GLF_IDENTITY(false, _GLF_IDENTITY((false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(0.0), _GLF_FUZZED(-5.5)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x < injectionSwitch.y)), bool(bvec4((false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(0.0), _GLF_FUZZED(-5.5)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x < injectionSwitch.y)), true, _GLF_IDENTITY(false, ! (! (false))), true))))) || false), false, true))))))))), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false)))), false))), false), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false)))), false))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false)))), false))), false)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false)))), false))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false)))), false))), false)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)), bvec2(bvec2(bvec2(bvec3(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false)))), false))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false)))), false))), false)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true))))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(true, (true) && true) && (injectionSwitch.x < injectionSwitch.y))))), bool(bvec2(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))), _GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), true && (! ((! (false))))))))), _GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), false))), false, false))))), ! (! (false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))), false)), ! (! (bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))), false)))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)) && true), ! (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true))))), ! (! (((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true)))))))))), ! (! (((injectionSwitch.x > injectionSwitch.y)))))))))))))))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, max(gl_WorkGroupID.x, gl_WorkGroupID.x)), max(gl_WorkGroupID.x, _GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec2(gl_WorkGroupID.x, 0u)))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))), _GLF_IDENTITY(false, bool(bvec2(false, false))), true, true))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x2(injectionSwitch.y, determinant(mat4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, sin(0.0), 0.0, cos(0.0), 1.0, 1.0, 0.0, 0.0, round(length(normalize(_GLF_IDENTITY(vec3(1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) + 0.0), max(_GLF_IDENTITY(1.0, (1.0) + 0.0), _GLF_IDENTITY(1.0, (1.0) + 0.0)))), clamp(vec3(1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) + 0.0), max(_GLF_IDENTITY(1.0, (1.0) + 0.0), _GLF_IDENTITY(1.0, (1.0) + 0.0)))), vec3(1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) + 0.0), max(_GLF_IDENTITY(1.0, (1.0) + 0.0), _GLF_IDENTITY(1.0, (1.0) + 0.0)))), _GLF_IDENTITY(vec3(1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) + 0.0), max(_GLF_IDENTITY(1.0, (1.0) + 0.0), _GLF_IDENTITY(1.0, (1.0) + 0.0)))), vec3(1.0, 1.0, 1.0) * (vec3(1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) + 0.0), max(_GLF_IDENTITY(1.0, (1.0) + 0.0), _GLF_IDENTITY(1.0, (1.0) + 0.0))))))))))), 1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), _GLF_IDENTITY(0.0, float(mat3(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, sqrt(1.0), 1.0, log(1.0)))), 0.0, 1.0)), 0.0, 0.0, 1.0, 0.0), (true ? mat3x2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(8184.2940), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(2.0)), bvec2(true, false))).y, determinant(mat4(1.0, 1.0, 0.0, sin(0.0), 0.0, cos(0.0), 1.0, 1.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) * 1.0), (_GLF_IDENTITY(1.0, (1.0) * 1.0)) / _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-5587.0712))), 1.0))))))))), 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))) : _GLF_FUZZED(mat3x2(mat4x3(65.50, 6.9, -48.35, -45.75, 78.25, 62.54, 64.60, 0.6, 717.566, -5203.6802, -61.61, 9340.7324)))))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(injectionSwitch.y, determinant(mat4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, sin(0.0), 0.0, cos(0.0), 1.0, 1.0, 0.0, 0.0, round(length(normalize(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), min(vec3(1.0, 1.0, 1.0), vec3(1.0, 1.0, 1.0)))))), 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 0.0), (true ? mat3x2(injectionSwitch.y, determinant(mat4(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(sinh(-6.2)) : _GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(1.0), float(mat3x4(float(1.0), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0))), float(_GLF_FUZZED(vec3(7033.4727, -1.2, -562.225).s)), bool(false))))), 0.0, sin(0.0), 0.0, cos(0.0), 1.0, 1.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0))))))), 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 0.0) : _GLF_FUZZED(mat3x2(mat4x3(_GLF_IDENTITY(65.50, (65.50) * abs(1.0)), 6.9, _GLF_IDENTITY(-48.35, min(-48.35, _GLF_IDENTITY(-48.35, 0.0 + (-48.35)))), -45.75, 78.25, 62.54, 64.60, 0.6, 717.566, -5203.6802, -61.61, 9340.7324)))))), max(float(_GLF_IDENTITY(mat3x2(injectionSwitch.y, determinant(mat4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, sin(0.0), 0.0, cos(0.0), 1.0, 1.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 0.0), (true ? mat3x2(injectionSwitch.y, determinant(mat4(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(sinh(-6.2)) : _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(vec3(7033.4727, -1.2, -562.225).s)), bool(_GLF_IDENTITY(false, (false) || false)))))), 0.0, sin(0.0), 0.0, cos(0.0), 1.0, 1.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0))))))), 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 0.0) : _GLF_FUZZED(mat3x2(mat4x3(65.50, 6.9, -48.35, _GLF_IDENTITY(-45.75, float(_GLF_IDENTITY(mat4x3(-45.75, sqrt(0.0), 1.0, 0.0, 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0, 1.0, sqrt(0.0)), (true ? _GLF_IDENTITY(mat4x3(-45.75, sqrt(0.0), 1.0, 0.0, 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0, 1.0, sqrt(0.0)), transpose(transpose(mat4x3(-45.75, sqrt(0.0), 1.0, 0.0, 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0, 1.0, sqrt(0.0))))) : _GLF_FUZZED(mat4x3(5.5, -67.66, 8.5, 7.9, 9.9, -416.980, 272.782, 4.9, -6.6, 45.06, -2759.6050, 8067.4407)))))), 78.25, 62.54, 64.60, 0.6, 717.566, -5203.6802, -61.61, 9340.7324)))))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(injectionSwitch.y, determinant(mat4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, sin(0.0), 0.0, cos(0.0), 1.0, 1.0, 0.0, 0.0, round(length(_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), mix(vec3((normalize(vec3(1.0, 1.0, 1.0)))[0], _GLF_FUZZED(-1332.4921), _GLF_FUZZED(float(true))), vec3(_GLF_FUZZED(9658.7891), _GLF_IDENTITY((normalize(vec3(1.0, 1.0, 1.0)))[1], min(_GLF_IDENTITY((normalize(vec3(1.0, 1.0, 1.0)))[1], min((normalize(vec3(1.0, 1.0, 1.0)))[1], (normalize(vec3(1.0, 1.0, 1.0)))[1])), (normalize(vec3(1.0, 1.0, 1.0)))[1])), (normalize(vec3(1.0, 1.0, 1.0)))[2]), bvec3(false, true, true))))), 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 0.0), (true ? mat3x2(injectionSwitch.y, determinant(mat4(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(sinh(-6.2)) : _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(vec3(7033.4727, -1.2, -562.225).s)), bool(false))))), 0.0, sin(0.0), 0.0, cos(0.0), 1.0, 1.0, 0.0, 0.0, round(_GLF_IDENTITY(length(normalize(vec3(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0)))))), (_GLF_IDENTITY(length(normalize(vec3(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0)))))), clamp(length(normalize(vec3(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0)))))), length(normalize(vec3(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0)))))), _GLF_IDENTITY(length(normalize(vec3(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0)))))), max(_GLF_IDENTITY(length(normalize(vec3(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0)))))), float(mat2x3(length(normalize(vec3(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0)))))), 0.0, 0.0, 1.0, 1.0, 0.0))), length(normalize(vec3(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0))))))))))) - 0.0)), 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 0.0) : _GLF_FUZZED(mat3x2(mat4x3(65.50, 6.9, -48.35, -45.75, _GLF_IDENTITY(78.25, mix(float(_GLF_FUZZED(-36.87)), float(78.25), bool(true))), 62.54, 64.60, 0.6, 717.566, -5203.6802, -61.61, 9340.7324)))))), min(float(_GLF_IDENTITY(mat3x2(injectionSwitch.y, determinant(mat4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) * determinant(mat4(1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), 0.0, 0.0, 0.0, sqrt(1.0), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0))), 0.0, sin(0.0), 0.0, cos(0.0), 1.0, 1.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0)), 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-0.0) : 0.0))), (true ? mat3x2(injectionSwitch.y, determinant(mat4(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(sinh(-6.2)) : _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(_GLF_IDENTITY(vec3(7033.4727, -1.2, -562.225), (vec3(7033.4727, -1.2, -562.225)) - sqrt(vec3(0.0, 0.0, 0.0))).s)), bool(false))), 0.0 + (_GLF_IDENTITY(false ? _GLF_FUZZED(sinh(-6.2)) : _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(_GLF_IDENTITY(vec3(7033.4727, -1.2, -562.225), (vec3(7033.4727, -1.2, -562.225)) - sqrt(vec3(0.0, 0.0, 0.0))).s)), bool(false))), max(_GLF_IDENTITY(false ? _GLF_FUZZED(sinh(-6.2)) : _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(_GLF_IDENTITY(vec3(7033.4727, -1.2, -562.225), (vec3(7033.4727, -1.2, -562.225)) - sqrt(vec3(0.0, 0.0, 0.0))).s)), bool(false))), max(false ? _GLF_FUZZED(sinh(-6.2)) : _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(_GLF_IDENTITY(vec3(7033.4727, -1.2, -562.225), (vec3(7033.4727, -1.2, -562.225)) - sqrt(vec3(0.0, 0.0, 0.0))).s)), bool(false))), false ? _GLF_FUZZED(sinh(-6.2)) : _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(_GLF_IDENTITY(vec3(7033.4727, -1.2, -562.225), (vec3(7033.4727, -1.2, -562.225)) - sqrt(vec3(0.0, 0.0, 0.0))).s)), bool(false))))), false ? _GLF_FUZZED(sinh(-6.2)) : _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(_GLF_IDENTITY(vec3(7033.4727, -1.2, -562.225), (vec3(7033.4727, -1.2, -562.225)) - sqrt(vec3(0.0, 0.0, 0.0))).s)), bool(false))))))))), 0.0, sin(0.0), 0.0, cos(0.0), 1.0, 1.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0))))))), 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 0.0) : _GLF_FUZZED(mat3x2(mat4x3(65.50, 6.9, -48.35, -45.75, 78.25, 62.54, 64.60, 0.6, 717.566, -5203.6802, -61.61, 9340.7324)))))), float(_GLF_IDENTITY(mat3x2(injectionSwitch.y, determinant(mat4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, sin(0.0), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(0.0, 1.0, 1.0, 1.0, 1.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, sqrt(0.0)), (mat4x2(0.0, 1.0, 1.0, 1.0, 1.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, sqrt(0.0))) * mat4(1.0))), clamp(float(_GLF_IDENTITY(mat4x2(0.0, 1.0, 1.0, 1.0, 1.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, sqrt(0.0)), (mat4x2(0.0, 1.0, 1.0, 1.0, 1.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, sqrt(0.0))) * mat4(1.0))), float(_GLF_IDENTITY(mat4x2(0.0, 1.0, 1.0, 1.0, 1.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, sqrt(0.0)), (mat4x2(0.0, 1.0, 1.0, 1.0, 1.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, sqrt(0.0))) * mat4(1.0))), float(_GLF_IDENTITY(mat4x2(0.0, 1.0, 1.0, 1.0, 1.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, sqrt(0.0)), (mat4x2(0.0, 1.0, 1.0, 1.0, 1.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, sqrt(0.0))) * mat4(1.0)))))), cos(0.0), 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 0.0), (true ? mat3x2(injectionSwitch.y, determinant(mat4(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(sinh(-6.2)) : _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(vec3(7033.4727, -1.2, -562.225).s)), bool(false))))), 0.0, sin(0.0), 0.0, cos(0.0), 1.0, 1.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (1.0) * determinant(mat2(1.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(1.0, (1.0) * 1.0))))))), 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, float(mat4(0.0, 0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), determinant(mat3(0.0, 0.0, tan(0.0), 1.0, sqrt(0.0), 0.0, 1.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)))) : _GLF_FUZZED(mat3x2(mat4x3(65.50, 6.9, _GLF_IDENTITY(-48.35, (true ? _GLF_IDENTITY(-48.35, mix(float(-48.35), float(_GLF_FUZZED(1.3)), bool(false))) : _GLF_FUZZED(979.827))), -45.75, 78.25, 62.54, 64.60, _GLF_IDENTITY(0.6, (true ? 0.6 : _GLF_FUZZED(-45.37))), 717.566, -5203.6802, -61.61, 9340.7324))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), (injectionSwitch) + vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(95.94)), _GLF_IDENTITY(bool(false), true && (bool(false))))), determinant(mat4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, sin(0.0), 0.0, cos(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))), 1.0, 1.0, 0.0, 0.0, round(length(normalize(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), max(vec3(1.0, 1.0, 1.0), _GLF_IDENTITY(vec3(1.0, 1.0, 1.0), max(vec3(1.0, 1.0, 1.0), _GLF_IDENTITY(vec3(1.0, 1.0, 1.0), (vec3(1.0, 1.0, 1.0)) - vec3(0.0, 0.0, 0.0))))))))), 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 0.0), (true ? mat3x2(injectionSwitch.y, determinant(mat4(1.0, 1.0, 0.0, sin(_GLF_IDENTITY(0.0, max(0.0, 0.0))), 0.0, cos(0.0), 1.0, 1.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(vec2(527.804, 6.8).s)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), clamp(1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, float(mat4x2(1.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 1.0)))), float(_GLF_FUZZED((-285.135 + 486.910))), bool(false))), (_GLF_IDENTITY(1.0, (1.0) / round(length(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), clamp(normalize(vec4(1.0, 1.0, 1.0, 1.0)), normalize(vec4(1.0, 1.0, 1.0, 1.0)), normalize(vec4(1.0, 1.0, 1.0, 1.0)))))))) * 1.0))))))), 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 0.0) : _GLF_FUZZED(mat3x2(mat4x3(65.50, 6.9, -48.35, -45.75, _GLF_IDENTITY(78.25, float(mat4x2(_GLF_IDENTITY(78.25, clamp(_GLF_IDENTITY(78.25, mix(float(_GLF_FUZZED(-0.4)), float(78.25), bool(true))), _GLF_IDENTITY(78.25, _GLF_IDENTITY((78.25) + 0.0, max((78.25) + 0.0, (78.25) + 0.0))), 78.25)), 0.0, 1.0, 0.0, 0.0, abs(1.0), 0.0, 1.0))), 62.54, 64.60, _GLF_IDENTITY(0.6, clamp(0.6, 0.6, 0.6)), 717.566, -5203.6802, -61.61, 9340.7324)))))))) || false)))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x2(injectionSwitch.y, determinant(mat4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x4(1.0, 0.0, abs(0.0), 0.0, 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), 1.0, sqrt(0.0), 1.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0), (mat3x4(1.0, 0.0, abs(0.0), 0.0, 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), 1.0, sqrt(0.0), 1.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0)) + mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 0.0, sin(0.0), 0.0, cos(0.0), 1.0, 1.0, 0.0, 0.0, round(length(_GLF_IDENTITY(_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), clamp(_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), mat3(1.0) * (normalize(vec3(1.0, 1.0, 1.0)))), normalize(vec3(1.0, 1.0, 1.0)), normalize(vec3(1.0, 1.0, 1.0)))), (false ? _GLF_FUZZED(vec3(88.02, -64.12, 5802.6552)) : normalize(vec3(1.0, 1.0, 1.0)))))), 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 0.0), (true ? mat3x2(injectionSwitch.y, determinant(mat4(1.0, 1.0, 0.0, sin(0.0), 0.0, cos(0.0), 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) * _GLF_ONE(1.0, injectionSwitch.y)), 0.0)), round(length(normalize(vec3(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0))))))), 1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 0.0) : _GLF_FUZZED(mat3x2(mat4x3(65.50, 6.9, -48.35, -45.75, 78.25, 62.54, 64.60, 0.6, 717.566, -5203.6802, -61.61, 9340.7324))))))))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) * vec2(1.0, 1.0))).x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x2(injectionSwitch.y, determinant(mat4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, sin(0.0), 0.0, cos(0.0), 1.0, 1.0, 0.0, 0.0, round(length(_GLF_IDENTITY(_GLF_IDENTITY(normalize(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), (_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), clamp(vec3(1.0, 1.0, 1.0), vec3(1.0, 1.0, 1.0), _GLF_IDENTITY(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0) + (vec3(1.0, 1.0, 1.0)))))) / vec3(1.0, 1.0, 1.0))), clamp(_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), mat3(1.0) * (normalize(vec3(1.0, 1.0, 1.0)))), normalize(vec3(1.0, 1.0, 1.0)), normalize(vec3(1.0, 1.0, 1.0)))), (false ? _GLF_FUZZED(vec3(88.02, -64.12, 5802.6552)) : normalize(vec3(1.0, 1.0, 1.0)))))), 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 0.0), (true ? mat3x2(injectionSwitch.y, determinant(mat4(1.0, 1.0, 0.0, sin(0.0), 0.0, _GLF_IDENTITY(cos(0.0), mix(float(cos(0.0)), float(_GLF_FUZZED(-2.5)), bool(false))), 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) * _GLF_ONE(1.0, injectionSwitch.y)), 0.0)), round(length(normalize(vec3(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) * 1.0, clamp((1.0) * 1.0, _GLF_IDENTITY((1.0) * 1.0, ((1.0) * 1.0) / 1.0), _GLF_IDENTITY((1.0) * 1.0, (_GLF_IDENTITY((1.0) * 1.0, clamp((1.0) * 1.0, (1.0) * 1.0, (1.0) * 1.0))) + 0.0)))))))))), 1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 0.0) : _GLF_FUZZED(mat3x2(mat4x3(65.50, 6.9, -48.35, -45.75, 78.25, 62.54, 64.60, 0.6, 717.566, -5203.6802, -61.61, 9340.7324)))))))))) || false))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), false || (bool(false))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), bool(bvec2(! (! ((injectionSwitch.x > injectionSwitch.y))), true))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || _GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false)))), true && (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false)))), false || (_GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, false)))), ((false)) || false)), true && (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ((false)) || false)), bool(bvec2(! (_GLF_IDENTITY((false), ((false)) || false)), true))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bool(bool(bool(false)))))), false, true, false)))))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? workgroup_size * workgroup_id : _GLF_FUZZED(99711u)));
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(uvec4(subgroup_local_id, 0u, 0u, 0u))), _GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | 0u)) | ((subgroup_local_id))) << 0u);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 atomicStore(write_val, uint(virtual_gid), 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), ! (! (! ((false))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), bvec2(bvec2(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(180.387)), vec2(_GLF_FUZZED(4.2), (injectionSwitch)[1]), bvec2(false, true))).y, false))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint read_val = atomicLoad(write_val, 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, bool(bvec3(true, false, false))) && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y) || false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(31.41)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-12.05), _GLF_FUZZED(23.23)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))).x, (true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-12.05), _GLF_FUZZED(23.23)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))).x : _GLF_FUZZED((0.7 - 15.89)))) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, bool(bool(false)))), (_GLF_IDENTITY(false || (_GLF_IDENTITY(false, bool(bool(false)))), ! (! (false || (_GLF_IDENTITY(false, bool(bool(false)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (false) || _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, true)))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, false)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 _GLF_IDENTITY(buf[virtual_gid] = uint(subgroupAllEqual(_GLF_IDENTITY(_GLF_IDENTITY(read_val, _GLF_IDENTITY((read_val), ((read_val)) ^ _GLF_IDENTITY((0u | 0u), clamp((0u | 0u), (0u | 0u), _GLF_IDENTITY((0u | 0u), ((0u | 0u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) | (_GLF_IDENTITY(read_val, (read_val) | (_GLF_IDENTITY(read_val, (read_val) | (read_val)))))), max(_GLF_IDENTITY(read_val, (read_val) | _GLF_IDENTITY((_GLF_IDENTITY(read_val, _GLF_IDENTITY((read_val), uint(_GLF_IDENTITY(uvec2((read_val), 0u), (uvec2((read_val), 0u)) * uvec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))) | (_GLF_IDENTITY(read_val, (read_val) | (read_val))))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(read_val, _GLF_IDENTITY((read_val), uint(_GLF_IDENTITY(uvec2((read_val), 0u), (uvec2((read_val), 0u)) * uvec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))) | (_GLF_IDENTITY(read_val, _GLF_IDENTITY((read_val) | (read_val), uint(uvec4((read_val) | (read_val), 1u, _GLF_IDENTITY(1u, (1u) | (1u)), 1u))))))), (_GLF_IDENTITY((_GLF_IDENTITY(read_val, _GLF_IDENTITY((read_val), uint(_GLF_IDENTITY(uvec2((read_val), 0u), (uvec2((read_val), 0u)) * uvec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))) | (_GLF_IDENTITY(read_val, _GLF_IDENTITY((read_val) | (read_val), uint(uvec4((read_val) | (read_val), 1u, _GLF_IDENTITY(1u, (1u) | (1u)), 1u))))))), uint(uvec3((_GLF_IDENTITY(read_val, _GLF_IDENTITY((read_val), uint(_GLF_IDENTITY(uvec2((read_val), 0u), (uvec2((read_val), 0u)) * uvec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))) | (_GLF_IDENTITY(read_val, _GLF_IDENTITY((read_val) | (read_val), uint(uvec4((read_val) | (read_val), 1u, _GLF_IDENTITY(1u, (1u) | (1u)), 1u))))))), 0u, ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))))) / 1u), 0u, 0u), clamp(uvec3((_GLF_IDENTITY(read_val, _GLF_IDENTITY((_GLF_IDENTITY(read_val, (read_val) / (0u | 1u))), uint(_GLF_IDENTITY(uvec2((read_val), _GLF_IDENTITY(0u, (0u) | (0u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), uint(uint(uint(6u)))))))), (uvec2((read_val), 0u)) * uvec2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_ONE(1.0, injectionSwitch.y))))) | (_GLF_IDENTITY(read_val, (read_val) | (read_val))))), 0u, 0u), uvec3((_GLF_IDENTITY(read_val, _GLF_IDENTITY((read_val), uint(_GLF_IDENTITY(uvec2((read_val), 0u), (uvec2((read_val), 0u)) * uvec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))) | (_GLF_IDENTITY(read_val, _GLF_IDENTITY((read_val), ((read_val)) | (_GLF_IDENTITY((read_val), uint(uvec4((read_val), 1u, 0u, 1u))))) | (read_val))))), 0u, 0u), uvec3(_GLF_IDENTITY((_GLF_IDENTITY(read_val, _GLF_IDENTITY((read_val), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((read_val), ((read_val)) / 1u), 0u), (uvec2((read_val), 0u)) * uvec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))) | (_GLF_IDENTITY(read_val, (read_val) | (read_val))))), ((_GLF_IDENTITY(read_val, _GLF_IDENTITY((read_val), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((read_val), ((read_val)) / 1u), 0u), (uvec2((read_val), 0u)) * uvec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))) | (_GLF_IDENTITY(read_val, (read_val) | (read_val)))))) | 0u), 0u, 0u)))))), _GLF_IDENTITY(_GLF_IDENTITY(read_val, (read_val) | (_GLF_IDENTITY(read_val, (_GLF_IDENTITY(read_val, min(_GLF_IDENTITY(read_val, (read_val) | (read_val)), read_val))) | (_GLF_IDENTITY(read_val, (read_val) | (read_val)))))), (_GLF_IDENTITY(read_val, (read_val) | (_GLF_IDENTITY(read_val, (_GLF_IDENTITY(read_val, min(_GLF_IDENTITY(read_val, (read_val) | (read_val)), read_val))) | (_GLF_IDENTITY(read_val, (read_val) | (read_val))))))) * 1u))))), _GLF_IDENTITY(0u ^ (buf[virtual_gid] = uint(subgroupAllEqual(_GLF_IDENTITY(read_val, (_GLF_IDENTITY(read_val, 0u ^ _GLF_IDENTITY((read_val), max((read_val), _GLF_IDENTITY((read_val), (_GLF_IDENTITY(_GLF_IDENTITY((read_val), ~ (~ ((read_val)))), ((_GLF_IDENTITY(read_val, (false ? _GLF_FUZZED(virtual_gid) : read_val)))) | ((read_val)))) | ((read_val))))))) ^ 0u)))), (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), uint(8u)), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(uint(8u), uint(8u)), 0u), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y)) ? _GLF_FUZZED(uvec2(21534u, 7100u)) : uvec2(_GLF_IDENTITY(uint(8u), uint(8u)), 0u))), uvec2(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(uint(8u), uint(8u)), 0u), (_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))) ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) / vec2(1.0, _GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (1.0) * 1.0))))))).x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)) ? _GLF_FUZZED(uvec2(21534u, 7100u)) : uvec2(_GLF_IDENTITY(uint(8u), uint(8u)), 0u))), clamp(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(uint(8u), uint(8u)), 0u), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)) ? _GLF_FUZZED(uvec2(21534u, 7100u)) : uvec2(_GLF_IDENTITY(_GLF_IDENTITY(uint(8u), max(uint(8u), uint(8u))), uint(8u)), 0u))), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(uint(8u), uint(8u)), 0u), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)) ? _GLF_FUZZED(uvec2(21534u, 7100u)) : uvec2(_GLF_IDENTITY(uint(8u), uint(8u)), 0u))), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(uint(8u), uint(8u)), 0u), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)) ? _GLF_FUZZED(uvec2(21534u, 7100u)) : uvec2(_GLF_IDENTITY(_GLF_IDENTITY(uint(8u), (uint(8u)) >> 0u), uint(8u)), 0u))))), 1u)))))) | _GLF_IDENTITY((_GLF_IDENTITY(0u ^ (buf[virtual_gid] = uint(subgroupAllEqual(read_val))), ~ (~ (0u ^ (buf[virtual_gid] = uint(subgroupAllEqual(read_val))))))), 0u ^ ((0u ^ (buf[virtual_gid] = uint(subgroupAllEqual(read_val))))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-1.2) : injectionSwitch.x))), float(_GLF_FUZZED(-0.5)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(-5191.4844, max(-5191.4844, -5191.4844))), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-1.9)), bvec2(true, false))).x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), bool(bvec4(false, false, false, true))))) || false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
