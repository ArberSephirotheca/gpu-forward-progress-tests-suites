#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) && true), false, false)))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, true)), bool(_GLF_IDENTITY(bvec3(bool(bvec3(_GLF_DEAD(false), false, true)), true, false), bvec3(bvec4(bvec3(bool(bvec3(_GLF_DEAD(false), false, true)), true, false), false)))))), false || (_GLF_DEAD(false)))) || false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(-7.3) : injectionSwitch.y))))), bool(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, 0u ^ (gl_NumWorkGroups.x));
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) ^ 0u);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID))) | uvec3(0u, 0u, 0u)).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))), (! (_GLF_IDENTITY(false, ! (! (false))))) || false))))))))), ! (! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (! ((false) && true)))), false, true, true))))))))), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(6233.0612), _GLF_FUZZED(-5.6)), bvec2(false, false))), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(90.80, min(90.80, 90.80))), min(_GLF_FUZZED(90.80), _GLF_FUZZED(_GLF_IDENTITY(90.80, 0.0 + (_GLF_IDENTITY(90.80, clamp(90.80, 90.80, 90.80)))))))), bool(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_IDENTITY(_GLF_FUZZED(90.80), min(_GLF_FUZZED(90.80), _GLF_FUZZED(90.80)))), bool(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))), max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_IDENTITY(_GLF_FUZZED(90.80), min(_GLF_FUZZED(90.80), _GLF_FUZZED(90.80)))), bool(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_IDENTITY(_GLF_FUZZED(90.80), min(_GLF_FUZZED(90.80), _GLF_FUZZED(90.80)))), bool(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))), clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_IDENTITY(_GLF_FUZZED(90.80), min(_GLF_FUZZED(90.80), _GLF_FUZZED(90.80)))), bool(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_IDENTITY(_GLF_FUZZED(90.80), min(_GLF_FUZZED(90.80), _GLF_FUZZED(90.80)))), bool(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_IDENTITY(_GLF_FUZZED(90.80), min(_GLF_FUZZED(90.80), _GLF_FUZZED(90.80)))), bool(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(6233.0612), _GLF_FUZZED(-5.6)), bvec2(false, false))), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(90.80, min(90.80, 90.80))), min(_GLF_FUZZED(90.80), _GLF_FUZZED(_GLF_IDENTITY(90.80, 0.0 + (_GLF_IDENTITY(90.80, clamp(90.80, 90.80, 90.80)))))))), bool(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_IDENTITY(_GLF_FUZZED(90.80), min(_GLF_FUZZED(90.80), _GLF_FUZZED(90.80)))), bool(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))), max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_IDENTITY(_GLF_FUZZED(90.80), min(_GLF_FUZZED(90.80), _GLF_FUZZED(90.80)))), bool(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_IDENTITY(_GLF_FUZZED(90.80), min(_GLF_FUZZED(90.80), _GLF_FUZZED(90.80)))), bool(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))), clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_IDENTITY(_GLF_FUZZED(90.80), min(_GLF_FUZZED(90.80), _GLF_FUZZED(90.80)))), bool(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_IDENTITY(_GLF_FUZZED(90.80), min(_GLF_FUZZED(90.80), _GLF_FUZZED(90.80)))), bool(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_IDENTITY(_GLF_FUZZED(90.80), min(_GLF_FUZZED(90.80), _GLF_FUZZED(90.80)))), bool(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), true && (_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))), vec2(_GLF_FUZZED(6233.0612), _GLF_FUZZED(-5.6)), bvec2(false, false))), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(90.80, min(90.80, 90.80))), min(_GLF_FUZZED(90.80), _GLF_FUZZED(_GLF_IDENTITY(90.80, 0.0 + (_GLF_IDENTITY(90.80, clamp(90.80, 90.80, 90.80)))))))), bool(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) && true), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_IDENTITY(_GLF_FUZZED(90.80), min(_GLF_FUZZED(90.80), _GLF_FUZZED(90.80)))), bool(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)))), max(_GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_IDENTITY(_GLF_FUZZED(90.80), min(_GLF_FUZZED(90.80), _GLF_FUZZED(90.80)))), bool(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)))), clamp(mix(float(injectionSwitch.y), float(_GLF_IDENTITY(_GLF_FUZZED(90.80), min(_GLF_FUZZED(90.80), _GLF_FUZZED(90.80)))), bool(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)))), mix(float(injectionSwitch.y), float(_GLF_IDENTITY(_GLF_FUZZED(90.80), min(_GLF_FUZZED(90.80), _GLF_FUZZED(90.80)))), bool(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_IDENTITY(_GLF_FUZZED(90.80), min(_GLF_FUZZED(90.80), _GLF_FUZZED(90.80)))), bool(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)))), (true ? mix(float(injectionSwitch.y), float(_GLF_IDENTITY(_GLF_FUZZED(90.80), min(_GLF_FUZZED(90.80), _GLF_FUZZED(90.80)))), bool(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)))) : _GLF_FUZZED(3.5))))), mix(float(injectionSwitch.y), float(_GLF_IDENTITY(_GLF_FUZZED(90.80), min(_GLF_FUZZED(90.80), _GLF_FUZZED(90.80)))), bool(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))))), max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), float(_GLF_IDENTITY(_GLF_FUZZED(90.80), min(_GLF_FUZZED(90.80), _GLF_FUZZED(90.80)))), bool(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))) && true), (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_IDENTITY(_GLF_FUZZED(90.80), min(_GLF_FUZZED(90.80), _GLF_FUZZED(90.80)))), bool(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_IDENTITY(_GLF_FUZZED(90.80), min(_GLF_FUZZED(90.80), _GLF_FUZZED(90.80)))), bool(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)))))) - 0.0), clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_IDENTITY(_GLF_FUZZED(90.80), min(_GLF_FUZZED(90.80), _GLF_FUZZED(_GLF_IDENTITY(90.80, (90.80) + 0.0))))), _GLF_IDENTITY(bool(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true), (injectionSwitch.x > injectionSwitch.y))), ! (! (bool(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true), (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), float(_GLF_IDENTITY(_GLF_FUZZED(90.80), min(_GLF_FUZZED(90.80), _GLF_FUZZED(90.80)))), bool(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_IDENTITY(_GLF_FUZZED(90.80), _GLF_IDENTITY(min(_GLF_FUZZED(90.80), _GLF_FUZZED(90.80)), _GLF_IDENTITY(float(_GLF_IDENTITY(float(min(_GLF_FUZZED(90.80), _GLF_FUZZED(90.80))), max(float(min(_GLF_FUZZED(90.80), _GLF_FUZZED(90.80))), float(min(_GLF_FUZZED(90.80), _GLF_FUZZED(90.80)))))), float(float(float(_GLF_IDENTITY(float(min(_GLF_FUZZED(90.80), _GLF_FUZZED(90.80))), max(float(min(_GLF_FUZZED(90.80), _GLF_FUZZED(90.80))), float(min(_GLF_FUZZED(90.80), _GLF_FUZZED(90.80)))))))))))), bool(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bvec2(bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_IDENTITY(_GLF_FUZZED(90.80), min(_GLF_FUZZED(90.80), _GLF_FUZZED(90.80)))), bool(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)))), max(_GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_IDENTITY(_GLF_FUZZED(90.80), min(_GLF_FUZZED(90.80), _GLF_FUZZED(90.80)))), bool(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)))), clamp(mix(float(injectionSwitch.y), float(_GLF_IDENTITY(_GLF_FUZZED(90.80), min(_GLF_FUZZED(90.80), _GLF_FUZZED(90.80)))), bool(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)))), mix(float(injectionSwitch.y), float(_GLF_IDENTITY(_GLF_FUZZED(90.80), min(_GLF_FUZZED(90.80), _GLF_FUZZED(90.80)))), bool(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_IDENTITY(_GLF_FUZZED(90.80), min(_GLF_FUZZED(90.80), _GLF_FUZZED(90.80)))), bool(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)))), (true ? mix(float(injectionSwitch.y), float(_GLF_IDENTITY(_GLF_FUZZED(90.80), min(_GLF_FUZZED(90.80), _GLF_FUZZED(90.80)))), bool(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)))) : _GLF_FUZZED(3.5))))), mix(float(injectionSwitch.y), float(_GLF_IDENTITY(_GLF_FUZZED(90.80), min(_GLF_FUZZED(90.80), _GLF_FUZZED(90.80)))), bool(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))))), max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), float(_GLF_IDENTITY(_GLF_FUZZED(90.80), min(_GLF_FUZZED(90.80), _GLF_FUZZED(90.80)))), bool(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))) && true), (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_IDENTITY(_GLF_FUZZED(90.80), min(_GLF_FUZZED(90.80), _GLF_FUZZED(90.80)))), bool(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_IDENTITY(_GLF_FUZZED(90.80), min(_GLF_FUZZED(90.80), _GLF_FUZZED(90.80)))), bool(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)))))) - 0.0), clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_IDENTITY(_GLF_FUZZED(90.80), min(_GLF_FUZZED(90.80), _GLF_FUZZED(_GLF_IDENTITY(90.80, (90.80) + 0.0))))), _GLF_IDENTITY(bool(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true), (injectionSwitch.x > injectionSwitch.y))), ! (! (bool(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true), (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), float(_GLF_IDENTITY(_GLF_FUZZED(90.80), min(_GLF_FUZZED(90.80), _GLF_FUZZED(90.80)))), bool(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_IDENTITY(_GLF_FUZZED(90.80), _GLF_IDENTITY(min(_GLF_FUZZED(90.80), _GLF_FUZZED(90.80)), _GLF_IDENTITY(float(_GLF_IDENTITY(float(min(_GLF_FUZZED(90.80), _GLF_FUZZED(90.80))), max(float(min(_GLF_FUZZED(90.80), _GLF_FUZZED(90.80))), float(min(_GLF_FUZZED(90.80), _GLF_FUZZED(90.80)))))), float(float(float(_GLF_IDENTITY(float(min(_GLF_FUZZED(90.80), _GLF_FUZZED(90.80))), max(float(min(_GLF_FUZZED(90.80), _GLF_FUZZED(90.80))), float(min(_GLF_FUZZED(90.80), _GLF_FUZZED(90.80)))))))))))), bool(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true))))))))))), _GLF_IDENTITY(false, bool(bool(false))) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), min(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)))))), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_IDENTITY(_GLF_FUZZED(90.80), min(_GLF_IDENTITY(_GLF_FUZZED(90.80), min(_GLF_FUZZED(90.80), _GLF_FUZZED(90.80))), _GLF_FUZZED(90.80)))), bool(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), mix(float(min(injectionSwitch.y, injectionSwitch.y)), float(_GLF_FUZZED(_GLF_IDENTITY(216.251, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(216.251, mix(float(_GLF_IDENTITY(216.251, clamp(216.251, 216.251, 216.251))), float(_GLF_FUZZED(4554.6053)), bool(false))), 1.0, 0.0, determinant(mat3(0.0, 1.0, log(1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0), mat4(1.0) * (mat3x4(_GLF_IDENTITY(216.251, mix(float(_GLF_IDENTITY(216.251, clamp(216.251, 216.251, 216.251))), float(_GLF_FUZZED(4554.6053)), bool(false))), 1.0, 0.0, determinant(mat3(0.0, 1.0, log(1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0)))), (float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(216.251, mix(float(_GLF_IDENTITY(216.251, clamp(216.251, 216.251, 216.251))), float(_GLF_FUZZED(4554.6053)), bool(false))), 1.0, 0.0, determinant(mat3(0.0, 1.0, log(1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0), mat4(1.0) * (mat3x4(_GLF_IDENTITY(216.251, mix(float(_GLF_IDENTITY(216.251, clamp(216.251, 216.251, 216.251))), float(_GLF_FUZZED(4554.6053)), bool(false))), 1.0, 0.0, determinant(mat3(0.0, 1.0, log(1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0))))) / 1.0)))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), _GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), false, false)))))), true))) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_IDENTITY(_GLF_FUZZED(90.80), min(_GLF_FUZZED(90.80), _GLF_FUZZED(90.80)))), bool(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))))), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(65.93)), float(injectionSwitch.x), bool(_GLF_IDENTITY(true, ! (! (true)))))) > injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec4(false, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec4(false, true, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x < injectionSwitch.y))))))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(_GLF_IDENTITY(bool(bvec4(false, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(false, true, true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), ! _GLF_IDENTITY((! (bool(bvec4(false, true, true, _GLF_TRUE(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec3(bvec3(true, true, false)))))), (injectionSwitch.x < injectionSwitch.y)))))), ((! (bool(bvec4(false, true, true, _GLF_TRUE(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec3(bvec3(true, true, false)))))), (injectionSwitch.x < injectionSwitch.y))))))) && true))), false || _GLF_IDENTITY((! (_GLF_IDENTITY(bool(bvec4(false, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(false, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), false || ((! (_GLF_IDENTITY(bool(bvec4(false, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(false, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (bool(bvec4(false, true, true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)).y)))))))) || false)), bvec2(bvec4(bvec2((_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(90.80), min(_GLF_FUZZED(90.80), _GLF_FUZZED(90.80))), max(_GLF_IDENTITY(_GLF_FUZZED(90.80), min(_GLF_FUZZED(90.80), _GLF_FUZZED(90.80))), _GLF_IDENTITY(_GLF_FUZZED(90.80), min(_GLF_FUZZED(90.80), _GLF_FUZZED(90.80)))))), bool(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))))), false || (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(65.93)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(65.93)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec4(false, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(_GLF_IDENTITY(bool(bvec4(false, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(false, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(false, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), false || (! (_GLF_IDENTITY(bool(bvec4(false, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(false, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (bool(bvec4(false, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec4(false, true, _GLF_IDENTITY(true, true && (true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, true, true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false)))), true && (_GLF_IDENTITY(bool(bvec4(false, true, true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false)))), bool(bool(bool(bvec4(false, true, true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false))))))))), bool(bvec2(_GLF_IDENTITY(bool(bvec4(false, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(false, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(false, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_IDENTITY(bool(bvec4(false, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(false, true, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)))))))))))), false || (! (_GLF_IDENTITY(bool(bvec4(false, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(false, _GLF_IDENTITY(true, (true) && true), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (bool(bvec4(false, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) || false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), (bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_IDENTITY(_GLF_FUZZED(90.80), min(_GLF_FUZZED(90.80), _GLF_FUZZED(90.80)))), bool(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), (false) && _GLF_IDENTITY(true, (true) && true)), (injectionSwitch.x > injectionSwitch.y))))))), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_FUZZED(65.93)), float(injectionSwitch.x), bool(true)), (mix(float(_GLF_FUZZED(65.93)), float(injectionSwitch.x), bool(true))) + 0.0)) > injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec4(false, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(_GLF_IDENTITY(bool(bvec4(false, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(false, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(false, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), false || (! (_GLF_IDENTITY(bool(bvec4(false, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(false, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (bool(bvec4(false, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(_GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))), true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, sin(0.0)))).y)))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(false, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(false, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), false || (! (_GLF_IDENTITY(bool(bvec4(false, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(false, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(false, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(false, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), false || (! (_GLF_IDENTITY(bool(bvec4(false, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(false, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), false || (! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(false, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(false, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), false || (! (_GLF_IDENTITY(bool(bvec4(false, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(false, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))), false)), true && (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(false, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(false, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), false || (! (_GLF_IDENTITY(bool(bvec4(false, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(false, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), false || (! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(false, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(false, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), false || (! (_GLF_IDENTITY(bool(bvec4(false, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(false, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))), false)), ! (! (bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(false, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(false, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), false || (! (_GLF_IDENTITY(bool(bvec4(false, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(false, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), false || (! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(false, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(false, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), false || (! (_GLF_IDENTITY(bool(bvec4(false, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(false, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))), false))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (bool(bvec4(false, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)), bvec2(bvec4(bvec2((_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_IDENTITY(_GLF_FUZZED(90.80), min(_GLF_FUZZED(90.80), _GLF_FUZZED(90.80)))), bool(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))))), false || (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, mix(float(_GLF_FUZZED(65.93)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec4(false, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false || (_GLF_IDENTITY(bool(bvec4(false, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec4(false, true, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 1.0, sqrt(0.0), 1.0, 0.0, 0.0, 0.0)))) * vec2(1.0, 1.0)).x < injectionSwitch.y))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)))), bool(bvec2(_GLF_IDENTITY(bool(bvec4(false, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(false, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(false, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), false || (! (_GLF_IDENTITY(bool(bvec4(false, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(false, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(false, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(false, true, true, _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), ! (! (bool(bvec2(true, false)))))), (injectionSwitch.x < injectionSwitch.y)))))))), false || (! (_GLF_IDENTITY(bool(bvec4(false, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(false, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))) && true))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))), true && (bool(bvec4(false, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && _GLF_IDENTITY(true, (true) || false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec4(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false)))))))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, false, true)), (bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, false, true))) && true)), ! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(write_val, uint(virtual_gid), 4, 64, _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, min(0, 0)), 0, _GLF_IDENTITY(0, (0) ^ 0))));
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true), (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true), (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (_GLF_IDENTITY(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))), bool(bool(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))))))) || (false))))) && true), bool(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true), false, false)))) || false)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), false, true, false))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint read_val = atomicLoad(write_val, _GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(4, _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, max(1, 1)))), _GLF_IDENTITY(0, min(0, 0)), 0), ivec4(0, 0, 0, 0) + (ivec4(4, 1, _GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), (0) | (_GLF_IDENTITY(_GLF_IDENTITY(0, int(ivec2(0, int(_GLF_ONE(1.0, injectionSwitch.y))))), (_GLF_IDENTITY(0, int(ivec2(0, int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))))))) | 0))), 0)))), min(int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(int((_GLF_IDENTITY(_GLF_IDENTITY(mat3(195.741, 98.89, 891.688, -7862.7640, -8141.8778, -22.75, _GLF_IDENTITY(-7.5, (false ? _GLF_FUZZED(-1617.3743) : -7.5)), -93.40, 5.6), transpose(_GLF_IDENTITY(transpose(mat3(195.741, 98.89, 891.688, -7862.7640, -8141.8778, -22.75, -7.5, -93.40, 5.6)), (false ? _GLF_FUZZED(mat3(8.1, -412.041, 6.8, -7.1, 5394.5576, 757.027, -2.4, -863.310, 6.7)) : transpose(mat3(195.741, 98.89, 891.688, _GLF_IDENTITY(-7862.7640, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(6.7) : _GLF_IDENTITY(-7862.7640, min(-7862.7640, -7862.7640)))), -8141.8778, -22.75, -7.5, -93.40, 5.6)))))) != mat3(3.0, 5.9, -849.798, 781.480, 4833.9314, 9245.4089, 29.20, -4734.9858, 18.92), (mat3(195.741, _GLF_IDENTITY(98.89, min(_GLF_IDENTITY(98.89, clamp(98.89, _GLF_IDENTITY(98.89, (true ? 98.89 : _GLF_FUZZED(9700.8097))), 98.89)), _GLF_IDENTITY(_GLF_IDENTITY(98.89, 1.0 * (_GLF_IDENTITY(98.89, max(98.89, 98.89)))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(98.89, 1.0 * (_GLF_IDENTITY(98.89, _GLF_IDENTITY(max(98.89, 98.89), (max(98.89, 98.89)) - 0.0)))), mix(float(_GLF_IDENTITY(98.89, 1.0 * (_GLF_IDENTITY(98.89, max(98.89, 98.89))))), float(_GLF_FUZZED(6.8)), bool(false)))), float(_GLF_FUZZED(0.0)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), 891.688, -7862.7640, -8141.8778, -22.75, -7.5, -93.40, 5.6) != mat3(3.0, 5.9, -849.798, 781.480, 4833.9314, 9245.4089, 29.20, _GLF_IDENTITY(-4734.9858, mix(float(-4734.9858), float(_GLF_FUZZED(6880.6835)), bool(false))), 18.92)) && true)))) : 4)), 1, 0, 0), _GLF_IDENTITY(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), (_GLF_IDENTITY(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), clamp(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0))))) >> ivec4(0, 0, 0, 0)))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(4, 1, 0, 0), _GLF_IDENTITY(ivec4(0, 0, 0, 0), (ivec4(0, 0, 0, 0)) * ivec4(1, 1, 1, 1)) + (ivec4(4, 1, 0, 0)))), _GLF_IDENTITY((_GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(4, 1, 0, 0), ivec4(0, _GLF_IDENTITY(0, max(0, 0)), 0, 0) + (ivec4(4, 1, 0, 0)))), int(ivec2(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(4, 1, 0, 0), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)))), (_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(4, 1, 0, 0), (ivec4(4, 1, 0, 0)) ^ ivec4(0, 0, 0, 0)), _GLF_IDENTITY(ivec4(0, _GLF_IDENTITY(0, int(int(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, max(0, 0))))) >> 0)))), 0, 0), (ivec4(0, _GLF_IDENTITY(0, int(int(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, max(0, 0))))) >> 0)))), 0, 0)) << ivec4(0, 0, 0, 0)) + (ivec4(4, 1, 0, 0)))), (int(_GLF_IDENTITY(ivec4(4, 1, 0, 0), ivec4(0, _GLF_IDENTITY(0, int(int(_GLF_IDENTITY(0, (0) >> 0)))), 0, 0) + (ivec4(4, 1, 0, 0))))) ^ 0)) | 0), 1)))) ^ 0, max(_GLF_IDENTITY((_GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(4, 0 | (4)), 1, 0, 0), ivec4(0, 0, 0, 0) + (ivec4(4, 1, _GLF_IDENTITY(0, min(0, 0)), 0)))), int(ivec2(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(4, 1, 0, 0), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)))), (int(_GLF_IDENTITY(ivec4(4, 1, 0, 0), ivec4(0, 0, 0, 0) + (ivec4(_GLF_IDENTITY(4, 0 ^ (4)), 1, 0, 0))))) | 0), 1)))) ^ 0, max((_GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(4, 1, 0, 0), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)))), int(ivec2(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(4, 1, 0, 0), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)))), _GLF_IDENTITY((int(_GLF_IDENTITY(ivec4(4, 1, 0, 0), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0))))), ((int(_GLF_IDENTITY(ivec4(4, 1, 0, 0), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)))))) | (_GLF_IDENTITY((int(_GLF_IDENTITY(ivec4(4, 1, 0, 0), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0))))), ((int(_GLF_IDENTITY(ivec4(4, 1, 0, 0), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)))))) | 0))) | 0), 1)))) ^ 0, (_GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(72199))), _GLF_IDENTITY(1, min(1, 1)), 0, 0), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)))), int(ivec2(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(4, 1, 0, 0), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, _GLF_IDENTITY(0, (0) - 0))))), (int(_GLF_IDENTITY(ivec4(4, 1, 0, 0), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, _GLF_IDENTITY(0, max(0, 0))))))) | 0), 1)))) ^ 0)), _GLF_IDENTITY((_GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(4, 1, 0, 0), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)))), int(ivec2(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(4, 1, 0, 0), ivec4(0, 0, _GLF_IDENTITY(0, (0) ^ 0), 0) + (ivec4(4, 1, 0, 0)))), (int(_GLF_IDENTITY(ivec4(4, _GLF_IDENTITY(1, ~ (~ (1))), 0, 0), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0))))) | 0), 1)))) ^ 0, (_GLF_IDENTITY((_GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(4, 1, 0, 0), ivec4(0, 0, 0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 ^ (0))) | (0))) + (ivec4(4, 1, 0, 0)))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(4, 1, 0, 0), (ivec4(4, 1, 0, 0)) << ivec4(0, 0, 0, 0)), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)))), (int(_GLF_IDENTITY(ivec4(4, 1, 0, 0), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0))))) | 0), 1), (true ? ivec2(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(4, 1, 0, 0), (ivec4(4, 1, 0, 0)) << ivec4(0, 0, 0, 0)), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)))), (int(_GLF_IDENTITY(ivec4(4, 1, 0, 0), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0))))) | 0), 1) : _GLF_FUZZED(ivec2(-28116, -17328))))), ~ (~ (int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(4, 1, 0, 0), (ivec4(4, 1, 0, 0)) << ivec4(0, 0, 0, 0)), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)))), (int(_GLF_IDENTITY(ivec4(4, 1, 0, 0), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0))))) | 0), 1), (true ? ivec2(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(4, 1, 0, 0), (ivec4(4, 1, 0, 0)) << ivec4(0, 0, 0, 0)), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)))), (int(_GLF_IDENTITY(ivec4(4, 1, 0, 0), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0))))) | 0), 1) : _GLF_FUZZED(ivec2(-28116, -17328)))))))))) ^ 0, int(int((_GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(4, 1, 0, 0), ivec4(0, 0, 0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 ^ (0))) | (0))) + (ivec4(4, 1, 0, 0)))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(4, 1, 0, 0), (ivec4(4, 1, 0, 0)) << ivec4(0, 0, 0, 0)), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)))), (int(_GLF_IDENTITY(ivec4(4, 1, 0, 0), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0))))) | 0), 1), (true ? ivec2(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(4, 1, 0, 0), (ivec4(4, 1, 0, 0)) << ivec4(0, 0, 0, 0)), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)))), (int(_GLF_IDENTITY(ivec4(4, 1, 0, 0), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0))))) | 0), 1) : _GLF_FUZZED(ivec2(-28116, -17328))))), ~ (~ (int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(4, 1, 0, 0), (ivec4(4, 1, 0, 0)) << ivec4(0, 0, 0, 0)), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)))), (int(_GLF_IDENTITY(ivec4(4, 1, 0, 0), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0))))) | 0), 1), (true ? ivec2(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(4, 1, 0, 0), (ivec4(4, 1, 0, 0)) << ivec4(0, 0, 0, 0)), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)))), (int(_GLF_IDENTITY(ivec4(4, 1, 0, 0), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0))))) | 0), 1) : _GLF_FUZZED(ivec2(-28116, -17328)))))))))) ^ 0)))) ^ 0))))))), min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(4, _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(max(1, 1), (max(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, (1) | 0)))) ^ 0))) - 0)), (_GLF_IDENTITY(1, max(1, 1))) / 1), _GLF_IDENTITY(0, min(0, 0)), 0), ivec4(0, 0, 0, 0) + (ivec4(4, 1, _GLF_IDENTITY(0, _GLF_IDENTITY((0), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4((0), 1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))), ivec4(0, 0, 0, 0) | (ivec4((0), 1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)))))), (true ? int(_GLF_IDENTITY(ivec4((0), 1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))), ivec4(0, 0, 0, 0) | (ivec4((0), 1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)))))) : _GLF_FUZZED((38218 << -21153))))) | (0)), 0)))), min(int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) - 0), (false ? _GLF_FUZZED(int(_GLF_IDENTITY((mat3(195.741, 98.89, _GLF_IDENTITY(891.688, (true ? 891.688 : _GLF_FUZZED(781.355))), -7862.7640, -8141.8778, -22.75, -7.5, -93.40, 5.6) != mat3(3.0, 5.9, -849.798, 781.480, _GLF_IDENTITY(4833.9314, clamp(4833.9314, 4833.9314, 4833.9314)), 9245.4089, 29.20, -4734.9858, _GLF_IDENTITY(18.92, max(18.92, 18.92)))), (_GLF_IDENTITY((mat3(195.741, 98.89, 891.688, -7862.7640, -8141.8778, -22.75, -7.5, -93.40, 5.6) != mat3(3.0, 5.9, -849.798, 781.480, _GLF_IDENTITY(4833.9314, max(4833.9314, 4833.9314)), 9245.4089, _GLF_IDENTITY(29.20, max(_GLF_IDENTITY(29.20, 1.0 * (29.20)), _GLF_IDENTITY(_GLF_IDENTITY(29.20, mix(float(_GLF_FUZZED(80.55)), float(29.20), bool(true))), clamp(_GLF_IDENTITY(29.20, mix(float(_GLF_FUZZED(80.55)), float(29.20), bool(true))), _GLF_IDENTITY(29.20, mix(float(_GLF_FUZZED(80.55)), float(29.20), bool(true))), _GLF_IDENTITY(29.20, mix(float(_GLF_FUZZED(80.55)), float(29.20), bool(true))))))), _GLF_IDENTITY(-4734.9858, float(mat3x4(-4734.9858, 0.0, 1.0, cos(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0))), _GLF_IDENTITY(18.92, max(18.92, 18.92)))), true && ((mat3(195.741, 98.89, 891.688, -7862.7640, -8141.8778, -22.75, -7.5, -93.40, 5.6) != mat3(3.0, 5.9, -849.798, 781.480, 4833.9314, 9245.4089, 29.20, -4734.9858, _GLF_IDENTITY(18.92, max(18.92, _GLF_IDENTITY(18.92, (true ? 18.92 : _GLF_FUZZED(-7258.2559)))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) : 4)), _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(56696))), 1)), 0, 0), _GLF_IDENTITY(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), (ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0))) | ivec4(0, 0, 0, 0)))), _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(4, 1, 0, 0), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0))), (_GLF_IDENTITY(ivec4(4, 1, 0, 0), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)))) | (_GLF_IDENTITY(_GLF_IDENTITY(ivec4(4, 1, 0, 0), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0))), (_GLF_IDENTITY(_GLF_IDENTITY(ivec4(4, 1, 0, 0), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0))), ivec4(0, 0, 0, 0) | (_GLF_IDENTITY(ivec4(4, 1, 0, 0), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)))))) ^ ivec4(0, 0, 0, 0))))), (_GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(4, _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) ^ 0), 1, 1)), 0, 0), ivec4(0, _GLF_IDENTITY(0, (0) | (0)), 0, 0) + (ivec4(4, 1, _GLF_IDENTITY(0, max(0, 0)), 0)))), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(4, min(4, 4)), 1, 0, 0), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, _GLF_IDENTITY(0, 1 * (0)))))), (int(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(4, 1, 0, 0), clamp(ivec4(4, 1, 0, 0), _GLF_IDENTITY(ivec4(4, 1, 0, 0), (ivec4(4, 1, 0, 0)) | (ivec4(4, 1, 0, 0))), ivec4(4, 1, 0, 0))), ivec4(0, 0, 0, 0) + (ivec4(_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, 0 + (_GLF_IDENTITY(4, 0 ^ (4)))) : _GLF_FUZZED((-31307 - -55832)))), 1, 0, 0))))) | 0), 1)), (int(ivec2(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(4, min(4, 4)), 1, 0, 0), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, _GLF_IDENTITY(0, 1 * (0)))))), (int(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(4, 1, 0, 0), clamp(ivec4(4, 1, 0, 0), _GLF_IDENTITY(ivec4(4, 1, 0, 0), (ivec4(4, 1, 0, 0)) | (ivec4(4, 1, 0, 0))), ivec4(4, 1, 0, 0))), ivec4(0, 0, 0, 0) + (ivec4(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED((-31307 - -55832)))), _GLF_IDENTITY(1, ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))) * (1)), 0, 0))))) | 0), 1))) << (0 | 0)))) ^ 0)))), _GLF_IDENTITY(4, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(4, _GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY(0, min(0, 0)), 0), ivec4(0, 0, _GLF_IDENTITY(0, (0) / 1), 0) + _GLF_IDENTITY((ivec4(4, 1, _GLF_IDENTITY(0, (0) | (0)), 0)), ivec4(0, 0, 0, 0) | ((ivec4(4, 1, _GLF_IDENTITY(0, (0) | _GLF_IDENTITY((0), ~ (~ (_GLF_IDENTITY((0), ((0)) >> 0))))), 0)))))), min(int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(_GLF_IDENTITY(int((mat3(195.741, 98.89, 891.688, -7862.7640, _GLF_IDENTITY(-8141.8778, 1.0 * (-8141.8778)), -22.75, -7.5, -93.40, 5.6) != mat3(3.0, 5.9, -849.798, 781.480, 4833.9314, _GLF_IDENTITY(9245.4089, mix(float(_GLF_FUZZED((+ -53.89))), float(9245.4089), bool(true))), 29.20, -4734.9858, 18.92))), 0 | (int((mat3(195.741, 98.89, 891.688, -7862.7640, _GLF_IDENTITY(-8141.8778, 1.0 * (-8141.8778)), -22.75, -7.5, _GLF_IDENTITY(-93.40, max(-93.40, _GLF_IDENTITY(-93.40, float(vec4(-93.40, 1.0, 1.0, 1.0))))), 5.6) != mat3(_GLF_IDENTITY(3.0, min(_GLF_IDENTITY(3.0, mix(float(_GLF_FUZZED(-2379.4798)), float(3.0), bool(true))), 3.0)), 5.9, -849.798, 781.480, 4833.9314, 9245.4089, 29.20, -4734.9858, 18.92)))))) : 4)), 1, 0, 0), _GLF_IDENTITY(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, _GLF_IDENTITY(0, 0 | (0)))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, _GLF_IDENTITY(0, 0 | (0))))), (~ (_GLF_IDENTITY(ivec4(0, 0, 0, 0), (false ? _GLF_FUZZED(ivec4(74038, -205, 52920, -29237)) : ivec4(0, 0, 0, 0))) + (ivec4(4, _GLF_IDENTITY(1, 1 * (1)), 0, _GLF_IDENTITY(0, 0 | (0)))))) + ivec4(0, 0, 0, 0)), min(_GLF_IDENTITY(~ (ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, _GLF_IDENTITY(0, 0 | (0))))), (~ (_GLF_IDENTITY(ivec4(0, 0, 0, 0), (false ? _GLF_FUZZED(ivec4(74038, -205, 52920, -29237)) : ivec4(0, 0, 0, 0))) + (ivec4(4, _GLF_IDENTITY(1, 1 * (1)), 0, _GLF_IDENTITY(0, 0 | (0)))))) + ivec4(0, 0, 0, 0)), _GLF_IDENTITY(~ (ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, _GLF_IDENTITY(0, 0 | (0))))), (~ (_GLF_IDENTITY(ivec4(0, 0, 0, 0), (false ? _GLF_FUZZED(ivec4(74038, -205, 52920, -29237)) : ivec4(0, 0, 0, 0))) + (ivec4(4, _GLF_IDENTITY(1, 1 * (1)), 0, _GLF_IDENTITY(0, 0 | (0)))))) + ivec4(0, 0, 0, 0)))))))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(4, 1, 0, 0), ivec4(0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(91242) : 0))) ^ 0), 0, 0) + (ivec4(4, 1, _GLF_IDENTITY(0, int(ivec3(0, 1, 1))), 0)))), _GLF_IDENTITY((_GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(4, 1, _GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, 0 | (0)))), int(ivec2(0, 0))), 0), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)))), int(ivec2(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(4, _GLF_IDENTITY(1, (1) ^ 0), 0, 0), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)))), (int(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(4, 1, 0, 0), ivec4(1, 1, 1, 1) * (ivec4(4, 1, 0, 0))), ivec4(0, 0, 0, _GLF_IDENTITY(_GLF_IDENTITY(0, int(ivec3(0, 0, 0))), (_GLF_IDENTITY(_GLF_IDENTITY(0, int(ivec3(0, 0, 0))), 0 + (_GLF_IDENTITY(0, int(ivec3(0, 0, 0)))))) ^ 0)) + (ivec4(4, 1, 0, 0))))) | 0), 1)))) ^ 0, _GLF_IDENTITY(int(ivec4((_GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(4, 1, _GLF_IDENTITY(0, int(ivec2(0, 0))), 0), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)))), int(ivec2(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(4, 1, 0, 0), ivec4(0, 0, 0, 0) + _GLF_IDENTITY((ivec4(4, 1, 0, 0)), (_GLF_IDENTITY((ivec4(4, 1, 0, 0)), ((ivec4(4, 1, 0, 0))) >> ivec4(0, 0, 0, 0))) >> ivec4(0, 0, 0, 0)))), (int(_GLF_IDENTITY(ivec4(4, 1, 0, 0), ivec4(0, 0, 0, _GLF_IDENTITY(_GLF_IDENTITY(0, (0) >> ((0 << _GLF_IDENTITY(int(1), int(1))) & -82891)), int(ivec3(0, 0, _GLF_IDENTITY(0, clamp(0, 0, 0)))))) + (ivec4(4, 1, 0, 0))))) | 0), 1)))) ^ 0, 1, 0, 1)), ~ (~ (int(ivec4((_GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(4, 1, _GLF_IDENTITY(0, int(ivec2(0, 0))), 0), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)))), int(ivec2(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(4, 1, 0, 0), ivec4(0, 0, 0, 0) + _GLF_IDENTITY((ivec4(4, 1, 0, 0)), (_GLF_IDENTITY((ivec4(4, 1, 0, 0)), ((ivec4(4, 1, 0, 0))) >> ivec4(0, 0, 0, 0))) >> ivec4(0, 0, 0, 0)))), (int(_GLF_IDENTITY(ivec4(4, 1, 0, 0), ivec4(0, 0, 0, _GLF_IDENTITY(_GLF_IDENTITY(0, (0) >> ((0 << _GLF_IDENTITY(int(1), int(1))) & -82891)), int(ivec3(0, 0, _GLF_IDENTITY(0, clamp(0, 0, 0)))))) + (ivec4(4, 1, 0, 0))))) | 0), 1)))) ^ 0, 1, 0, 1)))))))))))), 64, 0);
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch)).y)) && true), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch)).y)) && true))), ! (_GLF_IDENTITY(! (bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch)).y)) && true)))), bool(bvec4(! (bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch)).y)) && true)))), true, true, false)))))))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(_GLF_IDENTITY(vec4(6.6, 522.720, 7.6, -4286.8752), (vec4(6.6, 522.720, 7.6, -4286.8752)) - vec4(0.0, 0.0, 0.0, 0.0)).b), _GLF_FUZZED(0.9)), bvec2(false, false))).x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(_GLF_IDENTITY(vec4(6.6, 522.720, 7.6, -4286.8752), (vec4(6.6, 522.720, 7.6, -4286.8752)) - vec4(0.0, 0.0, 0.0, 0.0)).b), _GLF_FUZZED(0.9)), bvec2(false, false))).x > injectionSwitch.y)), false)), (bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(_GLF_IDENTITY(vec4(6.6, 522.720, 7.6, -4286.8752), (vec4(6.6, 522.720, 7.6, -4286.8752)) - vec4(0.0, 0.0, 0.0, 0.0)).b), _GLF_FUZZED(0.9)), bvec2(false, false))).x > injectionSwitch.y)), false))) && true)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(_GLF_IDENTITY(vec4(6.6, 522.720, 7.6, -4286.8752), (vec4(6.6, 522.720, 7.6, -4286.8752)) - vec4(0.0, 0.0, 0.0, 0.0)).b), _GLF_FUZZED(0.9)), bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), false))).x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(_GLF_IDENTITY(vec4(6.6, 522.720, 7.6, -4286.8752), (vec4(_GLF_IDENTITY(6.6, (6.6) / abs(1.0)), 522.720, 7.6, -4286.8752)) - vec4(0.0, 0.0, 0.0, 0.0)).b), _GLF_FUZZED(0.9)), bvec2(false, false))).x > injectionSwitch.y)), false)), (bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(_GLF_IDENTITY(vec4(6.6, 522.720, 7.6, -4286.8752), (vec4(6.6, 522.720, 7.6, -4286.8752)) - vec4(0.0, 0.0, 0.0, 0.0)).b), _GLF_FUZZED(0.9)), bvec2(false, false))).x > injectionSwitch.y)), false))) && true))) || false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 buf[virtual_gid] = uint(subgroupAllEqual(read_val));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec2(false, false))))), _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec2(false, false)))))) && _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), false || (bool(true)))), (bool(_GLF_IDENTITY(bool(true), false || (bool(true))))) && true)), (injectionSwitch.x < injectionSwitch.y)), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec2(false, false)))))) && _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), false || (bool(true)))), (bool(_GLF_IDENTITY(bool(true), false || (bool(true))))) && true)), (injectionSwitch.x < injectionSwitch.y))), (bool((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec2(false, false)))))) && _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), false || (bool(true)))), (bool(_GLF_IDENTITY(bool(true), false || (bool(true))))) && true)), (injectionSwitch.x < injectionSwitch.y)))) || false))))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), (bool(bool(injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(injectionSwitch.y, 1.0), (vec2(injectionSwitch.y, 1.0)) / sqrt(vec2(1.0, 1.0)))), (_GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(vec2(injectionSwitch.y, _GLF_IDENTITY(1.0, (1.0) * 1.0)), (vec2(injectionSwitch.y, 1.0)) / sqrt(vec2(1.0, 1.0)))), clamp(float(_GLF_IDENTITY(vec2(injectionSwitch.y, _GLF_IDENTITY(1.0, (1.0) * 1.0)), (vec2(injectionSwitch.y, 1.0)) / sqrt(vec2(1.0, 1.0)))), float(_GLF_IDENTITY(vec2(injectionSwitch.y, _GLF_IDENTITY(1.0, (1.0) * 1.0)), (vec2(injectionSwitch.y, 1.0)) / sqrt(vec2(1.0, 1.0)))), _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(injectionSwitch.y, _GLF_IDENTITY(1.0, (1.0) * 1.0)), (vec2(injectionSwitch.y, 1.0)) / sqrt(vec2(1.0, 1.0)))), (float(_GLF_IDENTITY(vec2(injectionSwitch.y, _GLF_IDENTITY(1.0, (1.0) * 1.0)), (vec2(injectionSwitch.y, 1.0)) / sqrt(vec2(1.0, 1.0))))) / 1.0))), 0.0 + (float(_GLF_IDENTITY(vec2(injectionSwitch.y, 1.0), (vec2(injectionSwitch.y, 1.0)) / sqrt(vec2(1.0, 1.0))))))) / 1.0)))))))), false), bvec3(bvec3(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), (bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bvec2(bool(injectionSwitch.x > injectionSwitch.y), true)))) && true))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(vec2(injectionSwitch.y, 1.0), (vec2(injectionSwitch.y, 1.0)) / sqrt(vec2(1.0, 1.0))), mix(vec2((_GLF_IDENTITY(vec2(injectionSwitch.y, 1.0), (vec2(injectionSwitch.y, 1.0)) / sqrt(vec2(1.0, 1.0))))[0], _GLF_FUZZED((-22.85 * -333.936))), vec2(_GLF_FUZZED((-6073.2205 + 5450.4467)), (_GLF_IDENTITY(vec2(injectionSwitch.y, 1.0), (vec2(injectionSwitch.y, 1.0)) / sqrt(vec2(1.0, 1.0))))[1]), bvec2(false, true)))), (_GLF_IDENTITY(float(_GLF_IDENTITY(vec2(injectionSwitch.y, 1.0), (vec2(injectionSwitch.y, 1.0)) / sqrt(vec2(1.0, 1.0)))), 0.0 + (float(_GLF_IDENTITY(vec2(injectionSwitch.y, 1.0), (vec2(injectionSwitch.y, 1.0)) / sqrt(vec2(1.0, 1.0))))))) / 1.0)))))))), false)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y)), (! ((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), min(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), _GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)) - vec2(0.0, 0.0)))))).x > injectionSwitch.y))) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
