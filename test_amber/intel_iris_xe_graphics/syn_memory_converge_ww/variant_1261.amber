#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], float(mat3x2(_GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])), 0.0, 0.0, 1.0, 1.0, 0.0))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-631.376), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-23.14)), bvec2(true, false))), vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], float(mat3x2(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, (1) | (1))], min(injectionSwitch[1], injectionSwitch[1])), 0.0, 0.0, 1.0, 1.0, 0.0)))))) * vec2(1.0, 1.0)).x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / round(length(normalize(1.0)))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), max(_GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), max(min(injectionSwitch.x, injectionSwitch.x), min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_FUZZED(18.11)), float((injectionSwitch)[0]), bool(true))), _GLF_FUZZED(3.8)), vec2(_GLF_FUZZED(15.90), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x))), min(injectionSwitch.x, injectionSwitch.x)))))) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - sin(0.0))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
  return;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, _GLF_IDENTITY(0u, 0u | (0u)), 0u) ^ (gl_NumWorkGroups)).x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-7649.3958), _GLF_FUZZED(4.0)), bvec2(false, false))).x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))) || false))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), cos(0.0), 1.0, 0.0, round(length(normalize(1.0))), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(-2701.8862))), 1.0, 0.0, 0.0))).y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(0.9, -620.547)) : injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), 0.0 + (max(injectionSwitch.y, injectionSwitch.y)))))), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) || false))))), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) || false))))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) || false)))))) && true)) && true)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, (true ? gl_WorkGroupSize : _GLF_FUZZED(uvec3(_GLF_IDENTITY(140617u, (140617u) | 0u), 136443u, 69965u)))).x;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(float(injectionSwitch.x)), clamp(float(float(injectionSwitch.x)), float(float(injectionSwitch.x)), float(float(injectionSwitch.x))))) > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), false)), (bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0)))).y)) && true), false))) && true))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), (! ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))) && true))))), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(vec2(88.27, -681.146).s), _GLF_FUZZED(-84.93)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).y)) && true))))))), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))).x > injectionSwitch.y)) && true)))), true && (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))), ((injectionSwitch.x > injectionSwitch.y)) && true))))))), (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7.7), _GLF_FUZZED(-2647.1942)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y)) && true)))), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))))))) && true), false, false, false))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, true)), ! (! (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, true))))))))), ((injectionSwitch.x > injectionSwitch.y)) && true)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), ((injectionSwitch.x > injectionSwitch.y)) && true)), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_IDENTITY(true, (true) || false))), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_IDENTITY(true, (true) || false))), true)), (bool(bvec2((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_IDENTITY(true, (true) || false))), true))) && true)))))))))), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))))), (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(0.8) : injectionSwitch.y))))), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), true && (bool(bool(injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))))))) && true), false, false, false)))))))))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, true, true)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     return;
    }
  }
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, (workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))) * subgroup_size + subgroup_local_id) / 1u);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 atomicStore(write_val, uint(virtual_gid), _GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, (4) | (4)))), 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1.6)), float(injectionSwitch.y), bool(true))))), _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), false || (! _GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)) + 0.0) > injectionSwitch.y)), true && ((! (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)) + 0.0) > injectionSwitch.y)))), ((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y)))) || false))) || false)))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1.6)), float(injectionSwitch.y), bool(true))))), _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), false || _GLF_IDENTITY((! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(log(injectionSwitch)))).x > injectionSwitch.y)))) || false))) || false)), true && _GLF_IDENTITY((_GLF_IDENTITY((! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y)))), ! (! ((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y))))))) || false))) || false)), ! (! (_GLF_IDENTITY((! _GLF_IDENTITY((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), ((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y)))) || false))) || false)), ! (! ((! _GLF_IDENTITY((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0))))).y)), ((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y)))) || false))) || false))))))))), bool(bvec3((_GLF_IDENTITY((! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y)))), ! (! ((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y))))))) || false))) || false)), ! (! (_GLF_IDENTITY((! _GLF_IDENTITY((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), ((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y)))) || false))) || false)), ! (! ((! _GLF_IDENTITY((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0))))).y)), ((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y)))) || false))) || false))))))))), true, false))))))) && true)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1.6)), float(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(1.8, -2.4)))).y), bool(true))))), _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), false || (! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y)))) || false))) || false)))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1.6)), float(injectionSwitch.y), bool(true))))), _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false || _GLF_IDENTITY((! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y)))) || false))) || false)), true && (_GLF_IDENTITY((! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y)))) || false))) || false)), ! (! (_GLF_IDENTITY((! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y)))) || false))) || false)), ! (! ((! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y)))) || false))) || false)))))))))), (false || _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) && true)), ((_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))) || false)), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y)))) || false))) || false)), true && (_GLF_IDENTITY(_GLF_IDENTITY((! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y)))) || false))) || false)), ! (! (_GLF_IDENTITY((! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y)))) || false))) || false)), ! (! ((! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y)))) || false))) || false)))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY((! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y)))) || false))) || false)), ! (! (_GLF_IDENTITY((! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y)))) || false))) || false)), ! (! ((! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y)))) || false))) || false)))))))), (_GLF_IDENTITY((! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y)))) || false))) || false)), ! (! (_GLF_IDENTITY((! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y)))) || false))) || false)), ! (! ((! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y)))) || false))) || false))))))))) || false)))))) && true)))) && true)), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1.6)), float(injectionSwitch.y), bool(true))))), _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), false || (! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y)))) || false))) || false)))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1.6)), float(injectionSwitch.y), bool(true))))), _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), false || _GLF_IDENTITY((! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y)))) || false))) || false)), true && _GLF_IDENTITY((_GLF_IDENTITY((! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y)))) || false))) || false)), ! (! (_GLF_IDENTITY((! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > injectionSwitch.y))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > injectionSwitch.y))), true, false), true)))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > injectionSwitch.y))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > injectionSwitch.y))), true, false), true))))) || false))), ! (! (! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > injectionSwitch.y))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > injectionSwitch.y))), true, false), true)))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > injectionSwitch.y))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > injectionSwitch.y))), true, false), true))))) || false)))))))), false || (! (injectionSwitch.x > injectionSwitch.y)))) || false))) || false)), ! (! ((! _GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(3021.2205)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) > injectionSwitch.y)), ((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y)))) || false))) || false))))))))), bool(bool((_GLF_IDENTITY((! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y)))) || false))) || false)), ! (! (_GLF_IDENTITY((! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > injectionSwitch.y))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > injectionSwitch.y))), true, false), true)))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > injectionSwitch.y))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > injectionSwitch.y))), true, false), true))))) || false))), ! (! (! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > injectionSwitch.y))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > injectionSwitch.y))), true, false), true)))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > injectionSwitch.y))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > injectionSwitch.y))), true, false), true))))) || false)))))))), false || (! (injectionSwitch.x > injectionSwitch.y)))) || false))) || false)), ! (! ((! _GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(3021.2205)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) > injectionSwitch.y)), ((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y)))) || false))) || false)))))))))))))))) && true)), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false, _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, bool(bool(true))), true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 0.0))), 1.0, 0.0, 0.0, 0.0))), injectionSwitch)).y))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(909.452) : _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(162.245)), bool(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))) / determinant(mat4(1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), (false ? _GLF_FUZZED(6.3) : injectionSwitch.x))))), ((false ? _GLF_FUZZED(909.452) : _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(6.3) : _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x)))))) * 1.0)) > injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), sin(0.0), 1.0))) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), ! _GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, 1.0 * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, 1.0 * (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).y))) && true))))), false || ((! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false)) || _GLF_IDENTITY(false, false || (false))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 uint read_val = atomicLoad(write_val, _GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (4)), (4) | (_GLF_IDENTITY(4, _GLF_IDENTITY(max(4, 4), ~ (~ (max(4, 4))))))), _GLF_IDENTITY(64, (64) | (64)), 0);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 _GLF_IDENTITY(buf[virtual_gid] = uint(subgroupAllEqual(_GLF_IDENTITY(read_val, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) + (0u << _GLF_IDENTITY(uint(2u), uint(2u)))), _GLF_IDENTITY(min(0u, 0u), 0u ^ (min(0u, 0u)))) | (_GLF_IDENTITY(read_val, (read_val) | (_GLF_IDENTITY(read_val, _GLF_IDENTITY((_GLF_IDENTITY(read_val, (false ? _GLF_FUZZED(num_workgroup) : read_val))), ((_GLF_IDENTITY(read_val, (false ? _GLF_FUZZED(num_workgroup) : read_val)))) | ((_GLF_IDENTITY(read_val, (false ? _GLF_FUZZED(num_workgroup) : read_val))))) | (_GLF_IDENTITY(read_val, 0u ^ _GLF_IDENTITY((read_val), (_GLF_IDENTITY((read_val), 0u + ((read_val)))) * 1u)))))))))), ~ (_GLF_IDENTITY(~ (buf[virtual_gid] = uint(subgroupAllEqual(_GLF_IDENTITY(read_val, _GLF_IDENTITY(_GLF_IDENTITY(0u, 0u | (0u)), min(0u, _GLF_IDENTITY(0u, (0u >> _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (0u) * uint(_GLF_ONE(1.0, injectionSwitch.y)))))) ^ (0u)))) | _GLF_IDENTITY((_GLF_IDENTITY(read_val, _GLF_IDENTITY((read_val) | _GLF_IDENTITY((_GLF_IDENTITY(read_val, (_GLF_IDENTITY(read_val, (false ? _GLF_FUZZED(num_workgroup) : read_val))) | (read_val))), (_GLF_IDENTITY((_GLF_IDENTITY(read_val, (_GLF_IDENTITY(read_val, (_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(num_workgroup) : read_val))) | (read_val))), uint(uvec4((_GLF_IDENTITY(read_val, (_GLF_IDENTITY(read_val, _GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : read_val), max((false ? _GLF_FUZZED(num_workgroup) : read_val), (false ? _GLF_FUZZED(num_workgroup) : read_val))))) | (read_val))), 1u, 1u, 1u)))) - 0u), (true ? (read_val) | (_GLF_IDENTITY(read_val, (_GLF_IDENTITY(read_val, (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(read_val, ~ (~ (_GLF_IDENTITY(read_val, (read_val) << 0u))))))) | (read_val))) : _GLF_FUZZED(atomicAnd(subgroup_size, workgroup_base)))))), 1u * (_GLF_IDENTITY((_GLF_IDENTITY(read_val, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read_val, (read_val) | (_GLF_IDENTITY(read_val, clamp(_GLF_IDENTITY(read_val, (false ? _GLF_FUZZED(subgroup_id) : read_val)), _GLF_IDENTITY(read_val, (read_val) / 1u), read_val)))), max(_GLF_IDENTITY(read_val, (read_val) | (_GLF_IDENTITY(read_val, clamp(_GLF_IDENTITY(read_val, (false ? _GLF_FUZZED(subgroup_id) : read_val)), _GLF_IDENTITY(read_val, (read_val) / 1u), read_val)))), _GLF_IDENTITY(_GLF_IDENTITY(read_val, (read_val) | (_GLF_IDENTITY(read_val, clamp(_GLF_IDENTITY(read_val, (false ? _GLF_FUZZED(subgroup_id) : read_val)), _GLF_IDENTITY(read_val, (read_val) / 1u), read_val)))), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(_GLF_IDENTITY(read_val, (read_val) | (_GLF_IDENTITY(read_val, clamp(_GLF_IDENTITY(read_val, (false ? _GLF_FUZZED(subgroup_id) : read_val)), _GLF_IDENTITY(read_val, (read_val) / 1u), read_val)))), 0u | (_GLF_IDENTITY(read_val, (read_val) | (_GLF_IDENTITY(read_val, clamp(_GLF_IDENTITY(read_val, (false ? _GLF_FUZZED(subgroup_id) : read_val)), _GLF_IDENTITY(read_val, (read_val) / 1u), read_val))))))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(read_val, (_GLF_IDENTITY(read_val, (false ? _GLF_FUZZED(num_workgroup) : read_val))) | (read_val)), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(read_val, (_GLF_IDENTITY(read_val, (false ? _GLF_FUZZED(num_workgroup) : read_val))) | (read_val)), (_GLF_IDENTITY(read_val, (_GLF_IDENTITY(read_val, _GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : read_val), (false ? _GLF_FUZZED(uvec3(51135u, 15553u, 121753u).g) : _GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : read_val), (_GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : read_val), min((false ? _GLF_FUZZED(num_workgroup) : read_val), (false ? _GLF_FUZZED(num_workgroup) : read_val)))) | 0u))))) | (read_val))) | 0u)))), (true ? (read_val) | (_GLF_IDENTITY(read_val, (_GLF_IDENTITY(read_val, (false ? _GLF_FUZZED(num_workgroup) : read_val))) | (read_val))) : _GLF_FUZZED(atomicAnd(subgroup_size, _GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u))))))), ((_GLF_IDENTITY(read_val, _GLF_IDENTITY(_GLF_IDENTITY((read_val) | (_GLF_IDENTITY(read_val, (_GLF_IDENTITY(read_val, (false ? _GLF_FUZZED(num_workgroup) : read_val))) | (read_val))), _GLF_IDENTITY((true ? _GLF_IDENTITY((read_val) | (_GLF_IDENTITY(read_val, _GLF_IDENTITY((_GLF_IDENTITY(read_val, (false ? _GLF_FUZZED(num_workgroup) : read_val))) | (read_val), min((_GLF_IDENTITY(read_val, (false ? _GLF_FUZZED(num_workgroup) : read_val))) | (read_val), _GLF_IDENTITY((_GLF_IDENTITY(read_val, (false ? _GLF_FUZZED(num_workgroup) : read_val))) | (read_val), 1u * ((_GLF_IDENTITY(read_val, (false ? _GLF_FUZZED(num_workgroup) : read_val))) | (read_val))))))), ((read_val) | (_GLF_IDENTITY(read_val, _GLF_IDENTITY((_GLF_IDENTITY(read_val, (false ? _GLF_FUZZED(num_workgroup) : read_val))) | (read_val), min((_GLF_IDENTITY(read_val, (false ? _GLF_FUZZED(num_workgroup) : read_val))) | (read_val), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(read_val, (false ? _GLF_FUZZED(num_workgroup) : read_val))) | (read_val), 1u * ((_GLF_IDENTITY(read_val, (false ? _GLF_FUZZED(num_workgroup) : read_val))) | (read_val))), max(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(read_val, (false ? _GLF_FUZZED(num_workgroup) : read_val))) | (read_val), 1u * ((_GLF_IDENTITY(read_val, (false ? _GLF_FUZZED(num_workgroup) : read_val))) | (read_val))), min(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(read_val, (false ? _GLF_FUZZED(num_workgroup) : read_val))) | (read_val), 1u * ((_GLF_IDENTITY(read_val, (false ? _GLF_FUZZED(num_workgroup) : read_val))) | (read_val))), min(_GLF_IDENTITY((_GLF_IDENTITY(read_val, (false ? _GLF_FUZZED(num_workgroup) : read_val))) | (read_val), 1u * ((_GLF_IDENTITY(read_val, (false ? _GLF_FUZZED(num_workgroup) : read_val))) | (read_val))), _GLF_IDENTITY((_GLF_IDENTITY(read_val, (false ? _GLF_FUZZED(num_workgroup) : read_val))) | (read_val), 1u * ((_GLF_IDENTITY(read_val, (false ? _GLF_FUZZED(num_workgroup) : read_val))) | (read_val))))), _GLF_IDENTITY((_GLF_IDENTITY(read_val, (false ? _GLF_FUZZED(num_workgroup) : read_val))) | (read_val), 1u * ((_GLF_IDENTITY(read_val, (false ? _GLF_FUZZED(num_workgroup) : read_val))) | (read_val))))), _GLF_IDENTITY((_GLF_IDENTITY(read_val, (false ? _GLF_FUZZED(num_workgroup) : read_val))) | (read_val), 1u * ((_GLF_IDENTITY(read_val, (false ? _GLF_FUZZED(num_workgroup) : read_val))) | (read_val)))))))))) * uint(_GLF_ONE(1.0, injectionSwitch.y))) : _GLF_FUZZED(atomicAnd(subgroup_size, workgroup_base))), (_GLF_IDENTITY((true ? (read_val) | (_GLF_IDENTITY(read_val, _GLF_IDENTITY((_GLF_IDENTITY(read_val, (false ? _GLF_FUZZED(num_workgroup) : read_val))) | (read_val), min((_GLF_IDENTITY(read_val, (false ? _GLF_FUZZED(num_workgroup) : read_val))) | (read_val), _GLF_IDENTITY((_GLF_IDENTITY(read_val, (false ? _GLF_FUZZED(num_workgroup) : read_val))) | (read_val), 1u * ((_GLF_IDENTITY(read_val, (false ? _GLF_FUZZED(num_workgroup) : read_val))) | (read_val))))))) : _GLF_FUZZED(atomicAnd(subgroup_size, workgroup_base))), ~ (_GLF_IDENTITY(~ ((true ? (read_val) | (_GLF_IDENTITY(read_val, _GLF_IDENTITY((_GLF_IDENTITY(read_val, (false ? _GLF_FUZZED(num_workgroup) : read_val))) | _GLF_IDENTITY((read_val), max(_GLF_IDENTITY((read_val), 0u | ((read_val))), (read_val))), min((_GLF_IDENTITY(read_val, (false ? _GLF_FUZZED(num_workgroup) : read_val))) | (read_val), _GLF_IDENTITY((_GLF_IDENTITY(read_val, (false ? _GLF_FUZZED(num_workgroup) : read_val))) | (read_val), 1u * ((_GLF_IDENTITY(read_val, (false ? _GLF_FUZZED(num_workgroup) : read_val))) | (read_val))))))) : _GLF_FUZZED(atomicAnd(subgroup_size, workgroup_base)))), (false ? _GLF_FUZZED(write_val) : ~ ((true ? _GLF_IDENTITY((_GLF_IDENTITY(read_val, (read_val) - 0u)), min((_GLF_IDENTITY(read_val, (read_val) - 0u)), (_GLF_IDENTITY(read_val, (read_val) - 0u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(read_val, uint(_GLF_ONE(1.0, injectionSwitch.y)) * (read_val)), _GLF_IDENTITY((_GLF_IDENTITY(read_val, (false ? _GLF_FUZZED(num_workgroup) : read_val))) | (read_val), min((_GLF_IDENTITY(read_val, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(num_workgroup) : read_val))) | (read_val), _GLF_IDENTITY((_GLF_IDENTITY(read_val, (false ? _GLF_FUZZED(num_workgroup) : read_val))) | (read_val), 1u * ((_GLF_IDENTITY(read_val, (false ? _GLF_FUZZED(num_workgroup) : read_val))) | (read_val))))))) : _GLF_FUZZED(atomicAnd(subgroup_size, workgroup_base))))))))) / 1u)), ~ (~ (_GLF_IDENTITY((read_val) | (_GLF_IDENTITY(read_val, (_GLF_IDENTITY(read_val, (false ? _GLF_FUZZED(num_workgroup) : read_val))) | (read_val))), _GLF_IDENTITY((true ? (read_val) | (_GLF_IDENTITY(read_val, _GLF_IDENTITY((_GLF_IDENTITY(read_val, (false ? _GLF_FUZZED(num_workgroup) : read_val))) | (read_val), min((_GLF_IDENTITY(read_val, (false ? _GLF_FUZZED(num_workgroup) : read_val))) | (read_val), _GLF_IDENTITY((_GLF_IDENTITY(read_val, (false ? _GLF_FUZZED(num_workgroup) : read_val))) | (read_val), 1u * ((_GLF_IDENTITY(read_val, (false ? _GLF_FUZZED(num_workgroup) : read_val))) | (read_val))))))) : _GLF_FUZZED(atomicAnd(subgroup_size, workgroup_base))), (_GLF_IDENTITY((true ? (read_val) | (_GLF_IDENTITY(read_val, _GLF_IDENTITY((_GLF_IDENTITY(read_val, (false ? _GLF_FUZZED(num_workgroup) : read_val))) | (read_val), min((_GLF_IDENTITY(read_val, _GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : read_val), max((false ? _GLF_FUZZED(num_workgroup) : read_val), (false ? _GLF_FUZZED(num_workgroup) : read_val))))) | (read_val), _GLF_IDENTITY((_GLF_IDENTITY(read_val, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(num_workgroup) : read_val))) | _GLF_IDENTITY((read_val), ((read_val)) - 0u), 1u * ((_GLF_IDENTITY(read_val, (false ? _GLF_FUZZED(num_workgroup) : read_val))) | (read_val))))))) : _GLF_FUZZED(_GLF_IDENTITY(atomicAnd(subgroup_size, workgroup_base), (atomicAnd(subgroup_size, workgroup_base)) / 1u))), ~ (_GLF_IDENTITY(~ ((true ? (read_val) | (_GLF_IDENTITY(read_val, _GLF_IDENTITY((_GLF_IDENTITY(read_val, (false ? _GLF_FUZZED(num_workgroup) : read_val))) | (_GLF_IDENTITY(read_val, max(read_val, read_val))), min((_GLF_IDENTITY(read_val, (false ? _GLF_FUZZED(num_workgroup) : read_val))) | (read_val), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read_val, (true ? read_val : _GLF_FUZZED(workgroup_base))), (false ? _GLF_FUZZED(num_workgroup) : read_val))) | (read_val), 1u * (_GLF_IDENTITY((_GLF_IDENTITY(read_val, (false ? _GLF_FUZZED(num_workgroup) : read_val))) | (read_val), (_GLF_IDENTITY(true, true && (true)) ? (_GLF_IDENTITY(read_val, (false ? _GLF_FUZZED(num_workgroup) : read_val))) | (_GLF_IDENTITY(read_val, 0u ^ (read_val))) : _GLF_FUZZED(subgroup_id))))))))) : _GLF_FUZZED(atomicAnd(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / (((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))) & uint(_GLF_ONE(1.0, injectionSwitch.y)))), (workgroup_base) - 0u))))), (false ? _GLF_FUZZED(write_val) : ~ ((true ? (read_val) | (_GLF_IDENTITY(read_val, _GLF_IDENTITY((_GLF_IDENTITY(read_val, (false ? _GLF_FUZZED(num_workgroup) : read_val))) | (_GLF_IDENTITY(read_val, max(read_val, read_val))), min((_GLF_IDENTITY(read_val, (false ? _GLF_FUZZED(num_workgroup) : read_val))) | (read_val), _GLF_IDENTITY((_GLF_IDENTITY(read_val, (false ? _GLF_FUZZED(num_workgroup) : read_val))) | (read_val), 1u * ((_GLF_IDENTITY(read_val, (false ? _GLF_FUZZED(num_workgroup) : read_val))) | (read_val))))))) : _GLF_FUZZED(atomicAnd(subgroup_size, workgroup_base))))))))) / 1u)))))))) * 1u))))))), _GLF_IDENTITY((~ _GLF_IDENTITY((buf[virtual_gid] = uint(subgroupAllEqual(_GLF_IDENTITY(read_val, _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) ^ _GLF_IDENTITY(0u, 0u | (0u))))) | (_GLF_IDENTITY(read_val, (read_val) | (_GLF_IDENTITY(read_val, (_GLF_IDENTITY(read_val, (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, false || ((true) || false)))))) ? _GLF_FUZZED(num_workgroup) : read_val))) | _GLF_IDENTITY((read_val), ((read_val)) + 0u))))))))), ((buf[virtual_gid] = uint(subgroupAllEqual(_GLF_IDENTITY(read_val, _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) ^ _GLF_IDENTITY(0u, 0u | (0u))))) | (_GLF_IDENTITY(read_val, (read_val) | (_GLF_IDENTITY(read_val, (_GLF_IDENTITY(read_val, (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, false || ((true) || false)))))) ? _GLF_FUZZED(num_workgroup) : read_val))) | _GLF_IDENTITY((read_val), ((read_val)) + 0u)))))))))) << 0u)), 0u + (_GLF_IDENTITY((~ (buf[virtual_gid] = _GLF_IDENTITY(uint(subgroupAllEqual(_GLF_IDENTITY(read_val, _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) ^ _GLF_IDENTITY(0u, 0u | (0u))))) | (_GLF_IDENTITY(read_val, (read_val) | (_GLF_IDENTITY(read_val, (_GLF_IDENTITY(read_val, (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(true, (true) || false)))) ? _GLF_FUZZED(num_workgroup) : read_val))) | _GLF_IDENTITY((read_val), (_GLF_IDENTITY((read_val), ((read_val)) * 1u)) + 0u)))))))), (uint(subgroupAllEqual(_GLF_IDENTITY(read_val, _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) ^ _GLF_IDENTITY(0u, 0u | (0u))))) | (_GLF_IDENTITY(read_val, (read_val) | (_GLF_IDENTITY(read_val, (_GLF_IDENTITY(read_val, (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(true, (true) || false)))) ? _GLF_FUZZED(num_workgroup) : read_val))) | _GLF_IDENTITY((read_val), (_GLF_IDENTITY((read_val), ((read_val)) * 1u)) + 0u))))))))) >> 0u))), (true ? (~ (buf[virtual_gid] = uint(subgroupAllEqual(_GLF_IDENTITY(read_val, _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) ^ _GLF_IDENTITY(0u, 0u | (0u))))) | (_GLF_IDENTITY(read_val, (read_val) | (_GLF_IDENTITY(read_val, (_GLF_IDENTITY(read_val, (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(true, (true) || false)))) ? _GLF_FUZZED(num_workgroup) : read_val))) | _GLF_IDENTITY((read_val), ((read_val)) + 0u)))))))))) : _GLF_FUZZED(virtual_gid))))) >> 0u)));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), false || _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false)))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), true))), bvec3(bvec3(bvec3(false, true, false))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, true, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec4(bvec3(false, true, false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true))))))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, true, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec4(bvec3(false, true, false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true))))))))))))))))))))))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
