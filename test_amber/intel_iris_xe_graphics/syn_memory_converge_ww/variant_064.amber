#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_14 {
 vec4 _f0;
 uvec2 _f1;
 vec2 _f2;
 mat3 _f3;
 mat3 _f4;
} ;

struct _GLF_struct_13 {
 ivec4 _f0;
 float _f1;
} ;

struct _GLF_struct_12 {
 vec3 _f0;
 mat3x4 _f1;
 ivec2 _f2;
} ;

struct _GLF_struct_11 {
 mat3 _f0;
 bvec3 _f1;
 uint workgroup_size;
 bool _f2;
 mat4 _f3;
} ;

struct _GLF_struct_15 {
 mat3x4 _f0;
 _GLF_struct_11 _f1;
 _GLF_struct_12 _f2;
 mat2x3 _f3;
 _GLF_struct_13 _f4;
 _GLF_struct_14 _f5;
} ;

struct _GLF_struct_16 {
 mat4x3 _f0;
 _GLF_struct_15 _f1;
} ;

struct _GLF_struct_9 {
 mat2 _f0;
} ;

struct _GLF_struct_7 {
 ivec3 _f0;
 mat4 _f1;
 uvec4 _f2;
 mat2x4 _f3;
 mat2x3 _f4;
} ;

struct _GLF_struct_8 {
 bvec2 _f0;
 ivec4 _f1;
 mat2x3 _f2;
 _GLF_struct_7 _f3;
 uint workgroup_base;
 mat2 _f4;
 mat2x3 _f5;
} ;

struct _GLF_struct_10 {
 _GLF_struct_8 _f0;
 uvec4 _f1;
 ivec2 _f2;
 _GLF_struct_9 _f3;
} ;

struct _GLF_struct_4 {
 ivec3 _f0;
 mat2x3 _f1;
 uvec2 _f2;
 mat4x2 _f3;
 uvec4 _f4;
 vec3 _f5;
} ;

struct _GLF_struct_3 {
 vec3 _f0;
 bool _f1;
 uvec4 _f2;
 bvec2 _f3;
} ;

struct _GLF_struct_5 {
 float _f0;
 ivec2 _f1;
 _GLF_struct_3 _f2;
 vec3 _f3;
 mat2 _f4;
 mat4 _f5;
 _GLF_struct_4 _f6;
} ;

struct _GLF_struct_1 {
 mat4x3 _f0;
 uvec2 _f1;
} ;

struct _GLF_struct_0 {
 vec3 _f0;
 ivec4 _f1;
 bvec2 _f2;
 vec4 _f3;
 uint num_workgroup;
 bool _f4;
 mat4 _f5;
 int _f6;
} ;

struct _GLF_struct_2 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 uvec4 _f2;
} ;

struct _GLF_struct_6 {
 _GLF_struct_2 _f0;
 _GLF_struct_5 _f1;
 vec3 _f2;
 uint _f3;
 mat3x4 _f4;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(476.468), _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED(176.039)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), vec2(mat4x3(injectionSwitch, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0))).y))), true, false, true))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), bool(bvec4(_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))), true, true, false))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true, true))) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), true, _GLF_IDENTITY(false, true && (false)), false)))))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, false)))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false))))) || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))), _GLF_IDENTITY(true, (true) && true) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), bool(bvec3((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), true, false))))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))), false), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((! (false)), bool(bvec2((! (false)), false)))))) || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))), _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))), false))))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), bool(bvec4(false, false, true, false)))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 _GLF_struct_6 _GLF_struct_replacement_6 = _GLF_struct_6(_GLF_struct_2(_GLF_struct_0(vec3(1.0), _GLF_IDENTITY(_GLF_IDENTITY(ivec4(1), _GLF_IDENTITY(ivec4(0, 0, 0, 0), _GLF_IDENTITY((ivec4(0, 0, _GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, min(0, 0)))), 0)), max((ivec4(0, 0, _GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, min(0, 0)))), 0)), (ivec4(0, 0, _GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, min(0, 0)))), 0)))) | ivec4(0, 0, 0, 0)) | (ivec4(1))), _GLF_IDENTITY((_GLF_IDENTITY(ivec4(1), _GLF_IDENTITY(ivec4(0, 0, 0, 0), (_GLF_IDENTITY(ivec4(0, 0, 0, 0), (ivec4(0, 0, 0, 0)) | (_GLF_IDENTITY(ivec4(0, 0, 0, 0), (true ? ivec4(0, 0, 0, 0) : _GLF_FUZZED(ivec4(-44667, -2186, -86234, 7925))))))) | ivec4(0, 0, 0, 0)) | (ivec4(1)))) / ivec4(1, 1, 1, 1), ((_GLF_IDENTITY(ivec4(1), _GLF_IDENTITY(ivec4(_GLF_IDENTITY(0, (0) >> 0), 0, 0, 0), (ivec4(0, _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, 0 ^ (0)))), 0, 0)) | ivec4(0, 0, 0, 0)) | (ivec4(1)))) / ivec4(1, 1, _GLF_IDENTITY(1, (1) << 0), 1)) | (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, (1) - 0)), _GLF_IDENTITY(ivec4(0, _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) - 0), _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-5235))), 0)), int(_GLF_IDENTITY(int(_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) - 0), _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-5235))), 0))), (int(_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) - 0), _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-5235))), 0)))) | 0))))) | 0))), 0, _GLF_IDENTITY(0, (0) / 1)), (ivec4(0, 0, 0, 0)) | ivec4(0, 0, 0, 0)) | (ivec4(1)))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, (1) - 0)), _GLF_IDENTITY(ivec4(0, 0, 0, 0), (ivec4(0, 0, 0, 0)) | ivec4(0, 0, 0, 0)) | _GLF_IDENTITY((ivec4(1)), ~ (~ ((ivec4(1))))))), ((_GLF_IDENTITY(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), clamp(_GLF_IDENTITY(1, (1) - 0), _GLF_IDENTITY(1, (1) - 0), _GLF_IDENTITY(1, (1) - 0)))), _GLF_IDENTITY(_GLF_IDENTITY(ivec4(0, 0, 0, 0), (ivec4(0, 0, 0, 0)) | ivec4(0, 0, 0, 0)) | (ivec4(1)), max(_GLF_IDENTITY(ivec4(0, 0, 0, 0), (ivec4(0, 0, 0, 0)) | ivec4(0, 0, 0, 0)) | (ivec4(1)), _GLF_IDENTITY(_GLF_IDENTITY(ivec4(0, 0, 0, 0), (ivec4(0, 0, 0, 0)) | ivec4(0, 0, 0, 0)) | (ivec4(1)), max(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(0, 0, 0, 0), (ivec4(0, 0, 0, 0)) | ivec4(0, 0, 0, 0)) | (ivec4(1)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(ivec4(0, 0, 0, 0), (ivec4(0, 0, 0, 0)) | ivec4(0, 0, 0, 0)) | (ivec4(1)), (_GLF_IDENTITY(ivec4(0, 0, 0, 0), _GLF_IDENTITY((ivec4(0, 0, 0, 0)) | ivec4(0, 0, 0, 0), clamp((ivec4(0, 0, 0, 0)) | ivec4(0, 0, 0, 0), (ivec4(0, 0, 0, 0)) | ivec4(0, 0, 0, 0), (ivec4(0, 0, 0, 0)) | ivec4(0, 0, 0, 0)))) | (ivec4(1))) / ivec4(1, 1, 1, 1))) + ivec4(0, 0, 0, 0), ((_GLF_IDENTITY(_GLF_IDENTITY(ivec4(0, 0, 0, 0), (ivec4(0, 0, 0, 0)) | ivec4(0, 0, 0, 0)) | (ivec4(1)), (_GLF_IDENTITY(ivec4(0, 0, 0, 0), _GLF_IDENTITY((ivec4(0, 0, 0, 0)) | ivec4(0, 0, 0, 0), clamp((ivec4(0, 0, 0, 0)) | ivec4(0, 0, 0, 0), (ivec4(0, 0, 0, 0)) | ivec4(0, 0, 0, 0), (ivec4(0, 0, 0, 0)) | ivec4(0, 0, 0, 0)))) | (ivec4(1))) / ivec4(1, 1, 1, 1))) + ivec4(0, 0, 0, 0)) << (ivec4(0, 0, 0, 0) << _GLF_IDENTITY(ivec4(4), ivec4(4))))), _GLF_IDENTITY(ivec4(0, 0, 0, 0), (ivec4(0, 0, 0, 0)) | ivec4(0, 0, 0, 0)) | (ivec4(1))))))))) * ivec4(1, 1, 1, 1))))), max(_GLF_IDENTITY((_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, (1) - 0)), _GLF_IDENTITY(ivec4(0, _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), (~ (_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) - 0), _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-5235))), 0)))) | 0))), 0, _GLF_IDENTITY(0, (0) / 1)), (ivec4(0, 0, 0, 0)) | _GLF_IDENTITY(ivec4(0, 0, 0, 0), (ivec4(0, 0, 0, 0)) + ivec4(0, 0, 0, 0))) | (ivec4(1)))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, (1) - 0)), _GLF_IDENTITY(ivec4(0, 0, 0, 0), (ivec4(0, 0, 0, 0)) | ivec4(0, 0, 0, 0)) | _GLF_IDENTITY((ivec4(1)), ~ (~ ((ivec4(1))))))), _GLF_IDENTITY(((_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, (1) - 0)), _GLF_IDENTITY(_GLF_IDENTITY(ivec4(0, 0, 0, 0), (ivec4(0, 0, 0, 0)) | ivec4(0, 0, 0, 0)) | (ivec4(1)), max(_GLF_IDENTITY(ivec4(0, 0, 0, 0), (ivec4(0, 0, 0, 0)) | ivec4(0, 0, 0, 0)) | (ivec4(1)), _GLF_IDENTITY(_GLF_IDENTITY(ivec4(0, 0, 0, 0), (ivec4(0, 0, 0, 0)) | ivec4(0, 0, 0, 0)) | (ivec4(1)), max(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(0, 0, 0, 0), (ivec4(0, 0, 0, 0)) | ivec4(0, 0, 0, 0)) | (ivec4(1)), (_GLF_IDENTITY(_GLF_IDENTITY(ivec4(0, 0, 0, 0), (ivec4(0, 0, 0, 0)) | ivec4(0, 0, 0, 0)) | (ivec4(1)), (_GLF_IDENTITY(ivec4(0, 0, 0, 0), _GLF_IDENTITY((ivec4(0, 0, 0, 0)) | ivec4(0, 0, 0, 0), clamp((ivec4(0, 0, 0, 0)) | ivec4(0, 0, 0, 0), (ivec4(0, 0, 0, 0)) | ivec4(0, 0, 0, 0), (ivec4(0, 0, 0, 0)) | ivec4(0, 0, 0, 0)))) | (ivec4(1))) / ivec4(1, 1, 1, 1))) + ivec4(0, 0, 0, 0)), _GLF_IDENTITY(ivec4(0, 0, 0, 0), (ivec4(0, 0, 0, 0)) | ivec4(0, 0, 0, 0)) | (ivec4(1))))))))) * ivec4(1, 1, 1, 1), (((_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, (1) - 0)), _GLF_IDENTITY(_GLF_IDENTITY(ivec4(0, 0, 0, 0), (ivec4(0, 0, 0, 0)) | ivec4(0, 0, 0, 0)) | (ivec4(1)), max(_GLF_IDENTITY(ivec4(0, 0, 0, 0), (ivec4(0, 0, 0, 0)) | ivec4(0, 0, 0, 0)) | (ivec4(1)), _GLF_IDENTITY(_GLF_IDENTITY(ivec4(0, 0, 0, 0), (ivec4(0, 0, 0, 0)) | ivec4(0, 0, 0, 0)) | (ivec4(1)), max(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(0, 0, 0, 0), (ivec4(0, 0, 0, 0)) | ivec4(0, 0, 0, 0)) | (ivec4(1)), (_GLF_IDENTITY(_GLF_IDENTITY(ivec4(0, 0, 0, 0), (ivec4(0, 0, 0, 0)) | ivec4(0, 0, 0, 0)) | (ivec4(1)), (_GLF_IDENTITY(ivec4(0, 0, 0, 0), _GLF_IDENTITY((ivec4(0, 0, 0, 0)) | ivec4(0, 0, 0, 0), clamp((ivec4(0, 0, 0, 0)) | ivec4(0, 0, 0, 0), (ivec4(0, 0, 0, 0)) | ivec4(0, 0, 0, 0), (ivec4(0, 0, 0, 0)) | ivec4(0, 0, 0, 0)))) | (ivec4(1))) / ivec4(1, 1, 1, 1))) + ivec4(0, 0, 0, 0)), _GLF_IDENTITY(ivec4(0, 0, 0, 0), (ivec4(0, 0, 0, 0)) | ivec4(0, 0, 0, 0)) | (ivec4(1))))))))) * ivec4(1, 1, 1, 1)) ^ ivec4(0, 0, 0, 0)))))), _GLF_IDENTITY((_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, (1) - 0)), _GLF_IDENTITY(ivec4(0, _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), (~ (_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) - 0), _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-5235))), 0)))) | 0))), 0, _GLF_IDENTITY(0, (0) / 1)), (ivec4(0, 0, 0, 0)) | ivec4(0, 0, 0, 0)) | (ivec4(1)))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, (1) - 0)), _GLF_IDENTITY(ivec4(0, 0, 0, 0), (ivec4(0, 0, 0, 0)) | ivec4(0, 0, 0, 0)) | _GLF_IDENTITY((ivec4(1)), ~ (~ ((ivec4(1))))))), ((_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, (1) - 0)), _GLF_IDENTITY(_GLF_IDENTITY(ivec4(0, 0, 0, 0), (ivec4(0, 0, 0, 0)) | ivec4(0, 0, 0, 0)) | (ivec4(1)), max(_GLF_IDENTITY(ivec4(0, 0, 0, 0), (ivec4(0, 0, 0, 0)) | ivec4(0, 0, 0, 0)) | (ivec4(1)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(0, 0, 0, 0), (ivec4(0, 0, 0, 0)) | ivec4(0, 0, 0, 0)) | (ivec4(1)), clamp(_GLF_IDENTITY(ivec4(0, 0, 0, 0), (ivec4(0, 0, 0, 0)) | ivec4(0, 0, 0, 0)) | (ivec4(1)), _GLF_IDENTITY(_GLF_IDENTITY(ivec4(0, 0, 0, 0), (ivec4(0, 0, 0, 0)) | ivec4(0, 0, 0, 0)) | (ivec4(1)), (_GLF_IDENTITY(ivec4(0, 0, 0, 0), (ivec4(0, 0, 0, 0)) | ivec4(0, 0, 0, 0)) | (ivec4(1))) | (_GLF_IDENTITY(ivec4(0, 0, 0, 0), (ivec4(0, 0, 0, 0)) | ivec4(0, 0, 0, 0)) | (ivec4(1)))), _GLF_IDENTITY(ivec4(0, 0, 0, 0), (ivec4(0, 0, 0, 0)) | ivec4(0, 0, 0, 0)) | (ivec4(1)))), max(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(0, 0, 0, 0), (ivec4(0, 0, 0, 0)) | ivec4(0, 0, 0, 0)) | (ivec4(1)), (_GLF_IDENTITY(_GLF_IDENTITY(ivec4(0, 0, 0, 0), (ivec4(0, 0, 0, 0)) | ivec4(0, 0, 0, 0)) | (ivec4(1)), (_GLF_IDENTITY(ivec4(0, 0, 0, 0), _GLF_IDENTITY((ivec4(0, 0, 0, 0)) | ivec4(0, 0, 0, 0), clamp((ivec4(0, 0, 0, 0)) | ivec4(0, 0, 0, 0), (ivec4(0, 0, 0, 0)) | ivec4(_GLF_IDENTITY(0, 0 ^ (0)), 0, 0, 0), (ivec4(0, 0, 0, 0)) | ivec4(0, 0, 0, 0)))) | (ivec4(1))) / ivec4(1, 1, 1, 1))) + ivec4(0, 0, 0, 0)), _GLF_IDENTITY(ivec4(0, 0, 0, 0), (ivec4(0, 0, 0, 0)) | ivec4(0, 0, 0, 0)) | (ivec4(1))))))))) * ivec4(1, 1, 1, 1))))))) / ivec4(1, 1, 1, 1)))), _GLF_IDENTITY(bvec2(true), bvec2(bvec2(bvec2(true)))), vec4(1.0), gl_NumWorkGroups.x, true, _GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-14.20)), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y) && true))))))), (mat4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-14.20)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)), 1), _GLF_struct_1(mat4x3(1.0), uvec2(1u)), uvec4(_GLF_IDENTITY(1u, uint(uvec4(1u, ((_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), max(~ _GLF_IDENTITY((_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (1u) + 0u)))), (true ? (1u) : _GLF_FUZZED(write_val))), ~ (1u))))) << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), 0u | (uint(1u))))), 0u, 0u))))), _GLF_struct_5(_GLF_IDENTITY(1.0, (1.0) / 1.0), ivec2(1), _GLF_struct_3(vec3(1.0), true, uvec4(1u), bvec2(true)), _GLF_IDENTITY(vec3(1.0), (false ? _GLF_FUZZED(vec3(-279.539, 693.457, 5067.0058)) : vec3(1.0))), mat2(1.0), mat4(1.0), _GLF_struct_4(ivec3(_GLF_IDENTITY(1, clamp(1, 1, 1))), mat2x3(1.0), uvec2(1u), mat4x2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) * 1.0), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))))), uvec4(1u), vec3(_GLF_IDENTITY(1.0, float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(min(1.0, 1.0), (true ? _GLF_IDENTITY(min(1.0, 1.0), float(mat2x3(_GLF_IDENTITY(min(1.0, 1.0), _GLF_IDENTITY(1.0, (1.0) * 1.0) * (min(1.0, 1.0))), 0.0, 1.0, 1.0, 0.0, 1.0))) : _GLF_FUZZED((+ 22.26)))))) / 1.0), (false ? _GLF_FUZZED(-7.8) : _GLF_IDENTITY(1.0, (_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(min(1.0, 1.0), (true ? _GLF_IDENTITY(min(1.0, 1.0), float(mat2x3(_GLF_IDENTITY(min(1.0, 1.0), _GLF_IDENTITY(1.0, (1.0) * 1.0) * (min(1.0, 1.0))), 0.0, 1.0, 1.0, 0.0, 1.0))) : _GLF_FUZZED((+ 22.26)))))) / 1.0))), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(7.7) : 0.0)), 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))))))), vec3(1.0), 1u, mat3x4(1.0));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y), ! (! ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)))))) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), true, true, true))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec3(bvec2(_GLF_DEAD(false), true), true))))), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec3(bvec2(_GLF_DEAD(false), true), true))))), true, false)))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 _GLF_struct_16 _GLF_struct_replacement_16 = _GLF_struct_16(mat4x3(1.0), _GLF_struct_15(mat3x4(1.0), _GLF_struct_11(mat3(1.0), bvec3(true), _GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, 1u * (gl_WorkGroupSize.x)), _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_id))) | (_GLF_IDENTITY(gl_WorkGroupSize.x, 1u * (gl_WorkGroupSize.x)))))), true, mat4(1.0)), _GLF_struct_12(_GLF_IDENTITY(vec3(1.0), (vec3(1.0)) + vec3(0.0, 0.0, 0.0)), mat3x4(1.0), ivec2(1)), mat2x3(1.0), _GLF_struct_13(_GLF_IDENTITY(ivec4(1), (ivec4(1)) * ivec4(1, 1, 1, 1)), 1.0), _GLF_struct_14(vec4(1.0), uvec2(1u), vec2(1.0), mat3(_GLF_IDENTITY(1.0, float(vec4(1.0, 0.0, 0.0, 1.0)))), mat3(1.0))));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (max(injectionSwitch, injectionSwitch)) - vec2(0.0, 0.0))).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, abs(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0))).y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(dot(injectionSwitch, vec2(-98.15, -44.78))) : _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) / 1.0))) > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 _GLF_struct_10 _GLF_struct_replacement_10 = _GLF_struct_10(_GLF_struct_8(bvec2(true), _GLF_IDENTITY(ivec4(1), (true ? ivec4(1) : _GLF_FUZZED(findLSB((55536 / ivec4(36115, 26583, 82266, 64908)))))), mat2x3(1.0), _GLF_struct_7(ivec3(1), mat4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, float(mat2(1.0, 1.0, 1.0, 0.0)))), float(_GLF_FUZZED(1133.8299)), bool(false))), (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(12.98)))) / 1.0), (_GLF_IDENTITY(1.0, (_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), _GLF_IDENTITY(_GLF_IDENTITY((true ? _GLF_IDENTITY(1.0, max(1.0, 1.0)) : _GLF_FUZZED(12.98)), (_GLF_IDENTITY((true ? 1.0 : _GLF_FUZZED(12.98)), float(mat2x3((_GLF_IDENTITY(true ? _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)) : _GLF_FUZZED(12.98), max(_GLF_IDENTITY(true ? 1.0 : _GLF_FUZZED(12.98), min(true ? 1.0 : _GLF_FUZZED(12.98), true ? 1.0 : _GLF_FUZZED(12.98))), true ? 1.0 : _GLF_FUZZED(12.98)))), 1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(152.069), _GLF_FUZZED((-6903.1473 - -8.2))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).y), _GLF_IDENTITY(1.0, (1.0) / _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(274.872)))))), _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0)))) / 1.0), (_GLF_IDENTITY((true ? 1.0 : _GLF_FUZZED(12.98)), (_GLF_IDENTITY((true ? 1.0 : _GLF_FUZZED(12.98)), float(mat2x3((_GLF_IDENTITY(true ? _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)) : _GLF_FUZZED(12.98), max(_GLF_IDENTITY(true ? 1.0 : _GLF_FUZZED(12.98), min(true ? 1.0 : _GLF_FUZZED(12.98), true ? 1.0 : _GLF_FUZZED(12.98))), true ? 1.0 : _GLF_FUZZED(12.98)))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(1.0, (1.0) / _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((true ? 1.0 : _GLF_FUZZED(274.872)), float(vec2((_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, (true) || false), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, (true) || false), true, true), false)))), _GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, (true) || false), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, (true) || false), true, true), false)))))), ! (! (bool(bool(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, (true) || false), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, (true) || false), true, true), false))))))))))) ? 1.0 : _GLF_FUZZED(274.872)), 0.0))))))), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(floor(9.5)) : 1.0)))), 0.0)))) / 1.0)) * _GLF_IDENTITY(dot(vec2(1.0, sin(0.0)), _GLF_IDENTITY(vec2(cos(0.0), 0.0), vec2(0.0, 0.0) + (_GLF_IDENTITY(vec2(cos(0.0), 0.0), min(_GLF_IDENTITY(vec2(cos(0.0), 0.0), (vec2(cos(0.0), 0.0)) * vec2(1.0, 1.0)), vec2(cos(0.0), 0.0)))))), dot(vec2(1.0, sin(0.0)), vec2(cos(0.0), 0.0)))))) / 1.0)) / cos(0.0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat2(1.0, 1.0, 1.0, 0.0))), 1.0 * (_GLF_IDENTITY(1.0, float(mat2(1.0, 1.0, 1.0, 0.0)))))), float(_GLF_FUZZED(1133.8299)), bool(false))), (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(12.98)))) / 1.0), (_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY((true ? 1.0 : _GLF_FUZZED(_GLF_IDENTITY(12.98, min(12.98, 12.98)))), (_GLF_IDENTITY((true ? 1.0 : _GLF_FUZZED(12.98)), float(mat2x3((_GLF_IDENTITY(true ? _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)) : _GLF_FUZZED(12.98), max(_GLF_IDENTITY(true ? 1.0 : _GLF_FUZZED(12.98), min(true ? 1.0 : _GLF_FUZZED(12.98), true ? 1.0 : _GLF_FUZZED(12.98))), true ? 1.0 : _GLF_FUZZED(12.98)))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(1.0, (1.0) / _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(274.872)))))), _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0)))) / 1.0), _GLF_IDENTITY((_GLF_IDENTITY((true ? 1.0 : _GLF_FUZZED(12.98)), (_GLF_IDENTITY((true ? _GLF_IDENTITY(1.0, float(mat4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-6.5)), float(1.0), bool(true))), 0.0, 0.0, 1.0, cos(0.0), 1.0, sin(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, sqrt(1.0), 0.0))) : _GLF_FUZZED(12.98)), float(mat2x3((_GLF_IDENTITY(true ? _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / sqrt(1.0)))))) : _GLF_FUZZED(12.98), max(_GLF_IDENTITY(true ? 1.0 : _GLF_FUZZED(12.98), min(true ? 1.0 : _GLF_FUZZED(12.98), true ? 1.0 : _GLF_FUZZED(12.98))), true ? 1.0 : _GLF_FUZZED(12.98)))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(1.0, (1.0) / _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((true ? 1.0 : _GLF_FUZZED(274.872)), float(vec2((true ? 1.0 : _GLF_FUZZED(274.872)), 0.0))))))), _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0)))) / 1.0)), ((_GLF_IDENTITY((true ? 1.0 : _GLF_FUZZED(12.98)), (_GLF_IDENTITY((true ? _GLF_IDENTITY(1.0, float(mat4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-6.5)), float(1.0), bool(true))), 0.0, 0.0, 1.0, cos(0.0), 1.0, sin(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, sqrt(1.0), 0.0))) : _GLF_FUZZED(12.98)), float(mat2x3((_GLF_IDENTITY(true ? _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / sqrt(1.0)))))) : _GLF_FUZZED(12.98), max(_GLF_IDENTITY(true ? 1.0 : _GLF_FUZZED(12.98), min(true ? 1.0 : _GLF_FUZZED(12.98), true ? 1.0 : _GLF_FUZZED(12.98))), true ? 1.0 : _GLF_FUZZED(12.98)))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(1.0, (1.0) / _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((true ? 1.0 : _GLF_FUZZED(274.872)), float(vec2((true ? 1.0 : _GLF_FUZZED(274.872)), 0.0))))))), _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0)))) / 1.0))) - 0.0) * _GLF_IDENTITY(dot(vec2(1.0, sin(0.0)), vec2(cos(0.0), 0.0)), dot(vec2(1.0, sin(0.0)), vec2(cos(0.0), 0.0)))))) / 1.0)) / cos(0.0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, float(mat2(1.0, 1.0, 1.0, 0.0)))), float(_GLF_IDENTITY(_GLF_FUZZED(1133.8299), max(_GLF_FUZZED(1133.8299), _GLF_FUZZED(1133.8299)))), bool(false))), clamp(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, float(mat2(1.0, 1.0, 1.0, 0.0)))), float(_GLF_FUZZED(1133.8299)), bool(false))), _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, float(mat2(1.0, 1.0, 1.0, 0.0)))), float(_GLF_FUZZED(1133.8299)), bool(false))), _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, float(mat2(1.0, 1.0, 1.0, 0.0)))), float(_GLF_FUZZED(1133.8299)), bool(false))))), (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(12.98)))) / 1.0), (_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY((true ? 1.0 : _GLF_FUZZED(12.98)), (_GLF_IDENTITY((true ? 1.0 : _GLF_FUZZED(12.98)), float(mat2x3((_GLF_IDENTITY(true ? _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)) : _GLF_FUZZED(12.98), max(_GLF_IDENTITY(true ? 1.0 : _GLF_FUZZED(12.98), min(true ? 1.0 : _GLF_FUZZED(12.98), true ? 1.0 : _GLF_FUZZED(12.98))), true ? 1.0 : _GLF_FUZZED(12.98)))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(1.0, (1.0) / _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(274.872)))))), _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0)))) / 1.0), (_GLF_IDENTITY((true ? 1.0 : _GLF_FUZZED(12.98)), (_GLF_IDENTITY((true ? 1.0 : _GLF_FUZZED(12.98)), float(mat2x3((_GLF_IDENTITY(true ? _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)) : _GLF_FUZZED(12.98), max(_GLF_IDENTITY(true ? 1.0 : _GLF_FUZZED(12.98), min(true ? 1.0 : _GLF_FUZZED(12.98), true ? 1.0 : _GLF_FUZZED(12.98))), true ? 1.0 : _GLF_FUZZED(12.98)))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(1.0, (1.0) / _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((true ? 1.0 : _GLF_FUZZED(274.872)), float(vec2((true ? 1.0 : _GLF_FUZZED(274.872)), 0.0))))))), _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0)))) / 1.0)) * _GLF_IDENTITY(dot(vec2(1.0, sin(0.0)), vec2(cos(0.0), 0.0)), dot(vec2(1.0, sin(0.0)), vec2(cos(0.0), 0.0)))))) / 1.0)) / cos(0.0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, float(mat2(1.0, 1.0, 1.0, 0.0)))), float(_GLF_FUZZED(1133.8299)), bool(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))), (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(12.98)))) / 1.0), (_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY((true ? 1.0 : _GLF_FUZZED(12.98)), (_GLF_IDENTITY((true ? 1.0 : _GLF_FUZZED(12.98)), float(mat2x3((_GLF_IDENTITY(true ? _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)) : _GLF_FUZZED(12.98), max(_GLF_IDENTITY(true ? 1.0 : _GLF_FUZZED(12.98), min(true ? 1.0 : _GLF_FUZZED(12.98), true ? 1.0 : _GLF_FUZZED(12.98))), true ? 1.0 : _GLF_FUZZED(12.98)))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(1.0, (1.0) / _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(274.872)))))), _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0)))) / 1.0), (_GLF_IDENTITY((true ? 1.0 : _GLF_FUZZED(12.98)), (_GLF_IDENTITY((true ? 1.0 : _GLF_FUZZED(12.98)), float(mat2x3((_GLF_IDENTITY(true ? _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)) : _GLF_FUZZED(_GLF_IDENTITY(12.98, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(12.98, 1.0, sqrt(0.0), 1.0, 0.0, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), transpose(transpose(mat4x2(12.98, 1.0, sqrt(0.0), 1.0, 0.0, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))))), max(_GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(12.98, 1.0, sqrt(0.0), 1.0, 0.0, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), transpose(transpose(mat4x2(12.98, 1.0, sqrt(0.0), 1.0, 0.0, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))))), (true ? float(_GLF_IDENTITY(mat4x2(12.98, 1.0, sqrt(0.0), 1.0, 0.0, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), transpose(transpose(mat4x2(12.98, 1.0, sqrt(0.0), 1.0, 0.0, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))))) : _GLF_FUZZED(28.58))), float(_GLF_IDENTITY(mat4x2(12.98, 1.0, sqrt(0.0), 1.0, 0.0, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), transpose(transpose(mat4x2(12.98, 1.0, sqrt(0.0), 1.0, 0.0, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))))))))), max(_GLF_IDENTITY(true ? 1.0 : _GLF_FUZZED(12.98), min(true ? 1.0 : _GLF_FUZZED(12.98), true ? 1.0 : _GLF_FUZZED(12.98))), true ? 1.0 : _GLF_FUZZED(12.98)))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(1.0, (1.0) / _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((true ? 1.0 : _GLF_FUZZED(274.872)), float(vec2((true ? 1.0 : _GLF_FUZZED(274.872)), 0.0))))))), _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0)))) / 1.0)) * _GLF_IDENTITY(dot(vec2(1.0, sin(0.0)), vec2(cos(0.0), 0.0)), dot(vec2(1.0, sin(0.0)), vec2(cos(0.0), 0.0)))))) / 1.0)) / cos(0.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, float(mat2(1.0, 1.0, 1.0, 0.0)))), _GLF_IDENTITY(float(_GLF_FUZZED(1133.8299)), min(float(_GLF_FUZZED(1133.8299)), float(_GLF_FUZZED(1133.8299)))), bool(false))), (_GLF_IDENTITY(1.0, (_GLF_IDENTITY(true ? 1.0 : _GLF_FUZZED(12.98), max(true ? 1.0 : _GLF_FUZZED(12.98), _GLF_IDENTITY(true ? 1.0 : _GLF_FUZZED(12.98), clamp(true ? 1.0 : _GLF_FUZZED(12.98), true ? 1.0 : _GLF_FUZZED(12.98), true ? 1.0 : _GLF_FUZZED(12.98)))))))) / 1.0), (_GLF_IDENTITY(1.0, (_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, float(mat4(1.0, 1.0, log(1.0), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 0.0))))), _GLF_IDENTITY(_GLF_IDENTITY((true ? 1.0 : _GLF_FUZZED(12.98)), (_GLF_IDENTITY((true ? 1.0 : _GLF_FUZZED(12.98)), float(mat2x3((_GLF_IDENTITY(_GLF_IDENTITY(true ? _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)) : _GLF_FUZZED(12.98), max(_GLF_IDENTITY(true ? 1.0 : _GLF_FUZZED(12.98), min(true ? 1.0 : _GLF_FUZZED(12.98), true ? 1.0 : _GLF_FUZZED(12.98))), true ? 1.0 : _GLF_FUZZED(12.98))), float(vec2(_GLF_IDENTITY(true ? _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)) : _GLF_FUZZED(12.98), max(_GLF_IDENTITY(true ? 1.0 : _GLF_FUZZED(12.98), min(true ? 1.0 : _GLF_FUZZED(12.98), true ? 1.0 : _GLF_FUZZED(12.98))), true ? 1.0 : _GLF_FUZZED(12.98))), 0.0)))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(1.0, (1.0) / _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(274.872)))))), _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0)))) / 1.0), (_GLF_IDENTITY((true ? 1.0 : _GLF_FUZZED(12.98)), (_GLF_IDENTITY((true ? 1.0 : _GLF_FUZZED(12.98)), float(mat2x3((_GLF_IDENTITY(true ? _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)) : _GLF_FUZZED(12.98), max(_GLF_IDENTITY(true ? 1.0 : _GLF_FUZZED(12.98), min(true ? 1.0 : _GLF_FUZZED(12.98), true ? 1.0 : _GLF_FUZZED(12.98))), true ? 1.0 : _GLF_FUZZED(12.98)))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(1.0, (1.0) / _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((true ? 1.0 : _GLF_FUZZED(274.872)), float(vec2((true ? 1.0 : _GLF_FUZZED(274.872)), 0.0))))))), _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0)))) / 1.0)) * _GLF_IDENTITY(dot(vec2(1.0, sin(0.0)), vec2(cos(0.0), 0.0)), dot(vec2(1.0, sin(0.0)), vec2(cos(0.0), 0.0)))))) / 1.0)) / cos(0.0)) : _GLF_FUZZED(-3.9)))))), _GLF_IDENTITY(uvec4(1u), (_GLF_IDENTITY(uvec4(1u), (true ? uvec4(1u) : _GLF_FUZZED(uvec4(4337u, 195255u, 50896u, 117729u))))) | (uvec4(1u))), mat2x4(1.0), mat2x3(1.0)), _GLF_struct_replacement_16._f1._f1.workgroup_size * workgroup_id, mat2(1.0), mat2x3(1.0)), uvec4(1u), ivec2(1), _GLF_struct_9(mat2(1.0)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, ! (! (true))), true)))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, true, false))), false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, true)))))) && true)), _GLF_IDENTITY(true, false || (true)) && (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_struct_replacement_10._f0.workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))), 0u ^ (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * subgroup_size) | (_GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (subgroup_id * subgroup_size))), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(2.1)), float(injectionSwitch.y), bool(true))), ! (! (injectionSwitch.x < injectionSwitch.y))))), true, false, false))))) ? _GLF_IDENTITY((subgroup_id * subgroup_size) | (_GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (subgroup_id * subgroup_size))), ((_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)) * subgroup_size) | (_GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (subgroup_id * subgroup_size)))) ^ 0u) : _GLF_IDENTITY(_GLF_FUZZED(119597u), (_GLF_FUZZED(119597u)) >> ((0u ^ 0u) >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), ~ _GLF_IDENTITY((~ (uint(1u))), (_GLF_IDENTITY((~ (uint(1u))), (false ? _GLF_FUZZED(subgroup_id) : (~ (uint(1u)))))) | 0u)))))))))), max(_GLF_struct_replacement_10._f0.workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))), 0u ^ (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * subgroup_size) | (_GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (subgroup_id * subgroup_size))), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(2.1)), float(injectionSwitch.y), bool(true))), ! (! (injectionSwitch.x < injectionSwitch.y))))), true, false, false))))) ? _GLF_IDENTITY((subgroup_id * subgroup_size) | (_GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (subgroup_id * subgroup_size))), ((_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)) * subgroup_size) | (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))) << 0u), 0u | (subgroup_id * subgroup_size)))) ^ 0u) : _GLF_IDENTITY(_GLF_FUZZED(119597u), (_GLF_FUZZED(119597u)) >> ((0u ^ 0u) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, uint(uvec3(1u, 0u, 0u)))))), _GLF_IDENTITY(uint(1u), ~ _GLF_IDENTITY((~ (uint(1u))), (_GLF_IDENTITY((~ (uint(1u))), (false ? _GLF_FUZZED(subgroup_id) : (~ (uint(1u)))))) | 0u)))))))))), _GLF_struct_replacement_10._f0.workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))), 0u ^ (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * subgroup_size) | (_GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (subgroup_id * subgroup_size))), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(2.1)), float(injectionSwitch.y), bool(true))), ! (! (injectionSwitch.x < injectionSwitch.y))))), true, false, false))))) ? _GLF_IDENTITY((subgroup_id * subgroup_size) | (_GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (subgroup_id * subgroup_size))), ((_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)) * subgroup_size) | (_GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (subgroup_id * subgroup_size)))) ^ 0u) : _GLF_IDENTITY(_GLF_FUZZED(119597u), (_GLF_FUZZED(119597u)) >> ((0u ^ 0u) >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), ~ _GLF_IDENTITY((~ (uint(1u))), (_GLF_IDENTITY((~ (uint(1u))), (false ? _GLF_FUZZED(subgroup_id) : (~ (uint(1u)))))) | 0u)))))))))))) + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true, false || (true)) ? injectionSwitch.y : _GLF_FUZZED(-4.6)))), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) || false))), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(injectionSwitch.x < injectionSwitch.y, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) ? injectionSwitch.y : _GLF_FUZZED(-4.6)))), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) || false)))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 0.0, sqrt(0.0), _GLF_IDENTITY(dot(vec2(1.0, _GLF_ZERO(0.0, injectionSwitch.x)), vec2(1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))))), dot(vec2(1.0, _GLF_ZERO(0.0, injectionSwitch.x)), vec2(1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))))))))) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 atomicStore(write_val, _GLF_IDENTITY(uint(virtual_gid), (1u ^ 1u) ^ (_GLF_IDENTITY(uint(virtual_gid), 0u | (uint(virtual_gid))))), 4, 64, 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint read_val = atomicLoad(_GLF_IDENTITY(write_val, _GLF_IDENTITY((write_val) | (_GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val))), ((write_val) | (_GLF_IDENTITY(write_val, clamp(_GLF_IDENTITY(_GLF_IDENTITY(write_val, (write_val) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(write_val, (write_val) << 0u), (_GLF_IDENTITY(write_val, (write_val) << 0u)) - 0u)) >> 0u), write_val, write_val)))) >> 0u)), 4, 64, 0);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(vec2(0.0, 0.0), vec2(0.0, 0.0) + (vec2(0.0, 0.0)))).x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), _GLF_IDENTITY(bool(bvec4(bool(bvec4(false, false, true, false)), false, true, true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(bool(bvec4(false, false, true, false)), false, true, true)), bool(bvec3(_GLF_IDENTITY(bool(bvec4(bool(bvec4(false, false, true, false)), false, true, true)), ! (! (bool(bvec4(bool(bvec4(false, false, true, false)), false, true, true))))), false, true)))), false || (! (_GLF_IDENTITY(bool(bvec4(bool(bvec4(false, false, true, false)), false, true, true)), bool(bvec3(_GLF_IDENTITY(bool(bvec4(bool(bvec4(false, false, true, false)), false, true, true)), ! (! (bool(bvec4(bool(bvec4(false, false, true, false)), false, true, true))))), false, true)))))))))), _GLF_IDENTITY(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), bool(bvec2(_GLF_IDENTITY(! ((false)), bool(bvec3(! ((false)), true, true))), false))))), ((false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true), false, false, false))), true && (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), _GLF_IDENTITY(bool(bvec4(bool(bvec4(false, false, true, false)), false, true, true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(bool(bvec4(false, false, true, false)), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))), true, true)), bool(bvec3(_GLF_IDENTITY(bool(bvec4(bool(bvec4(false, false, true, false)), false, true, true)), ! (! (bool(bvec4(bool(bvec4(false, false, true, false)), false, true, true))))), false, _GLF_IDENTITY(true, (true) && true))))), false || (! (_GLF_IDENTITY(bool(bvec4(bool(bvec4(false, false, true, false)), false, true, true)), bool(bvec3(_GLF_IDENTITY(bool(bvec4(bool(bvec4(false, false, true, false)), false, true, true)), ! (! (bool(bvec4(bool(bvec4(false, false, true, false)), false, true, true))))), false, true)))))))))), _GLF_IDENTITY(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), bool(bvec2(_GLF_IDENTITY(! ((false)), bool(bvec3(! ((false)), true, true))), false))))), ((false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true), false, false, false)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))) || false)), ! (! ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))) || false)))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 buf[virtual_gid] = uint(subgroupAllEqual(read_val));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, 1.0 * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y)))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, 1.0 * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y)))), _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, 1.0 * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y)))), true, false)), ! (! (bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, 1.0 * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y)))), min(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, 1.0 * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y)))), _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, 1.0 * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y)))))), true, false))))))) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).x, injectionSwitch.x)))) < injectionSwitch.y)), true, true)), bool(bvec4(bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) < injectionSwitch.y))))), true, true)), true, true, true)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0))))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0))))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0))))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y)) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true)))) && (_GLF_DEAD(false)))) && true))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), false, false, true))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
