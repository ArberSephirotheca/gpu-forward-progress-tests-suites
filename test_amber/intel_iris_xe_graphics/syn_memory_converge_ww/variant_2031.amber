#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0))).y))))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) - 0.0))))))) || false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false || (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, min(_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) * 1u))), gl_WorkGroupSize.x)), 0u + _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize))), gl_WorkGroupSize, gl_WorkGroupSize)).x, (gl_WorkGroupSize.x) | 0u)), uint(uvec4(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | 0u)), ~ _GLF_IDENTITY((~ ((_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | 0u)))), ((~ ((_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | 0u))))) ^ 0u)), 1u, 1u, 0u))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), true))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, sqrt(vec2(1.0, 1.0)) * (injectionSwitch)).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(mat2x4(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_FUZZED(2784.8457)), vec2(_GLF_FUZZED(-2.3), ((injectionSwitch))[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), 0.0, 0.0, 1.0, 1.0, abs(0.0), 1.0)))).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)), (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)), bool(bvec4(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)), false, false, true)))) && true)), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), ! (! (! _GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false)))))))), true && (! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! _GLF_IDENTITY((! (_GLF_DEAD(false))), ((! (_GLF_DEAD(false)))) || false)))), ((_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! _GLF_IDENTITY((! (_GLF_DEAD(false))), ((! (_GLF_DEAD(false)))) || false))))) || false))))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), false || _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (! (_GLF_IDENTITY(false, ! (! (false))))))))))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), true && (! (! (false)))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), false || (! (false)))), true && (! (! (false)))))), false || ((! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), false || (! (false)))), true && (! (! (false))))))))), true)))), ! _GLF_IDENTITY((! ((_GLF_IDENTITY(! (! (false)), bool(bvec2(_GLF_IDENTITY(! _GLF_IDENTITY((! (false)), ((! (false))) && true), true && (! (! (false)))), true)))))), false || ((! ((_GLF_IDENTITY(! (! (false)), bool(bvec2(_GLF_IDENTITY(! _GLF_IDENTITY((! (false)), ((! (false))) && true), true && (! (! (false)))), true))))))))), ((_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, false || (false)), false, false))), ! (! (false))))), bool(bvec2(_GLF_IDENTITY(! (! (false)), true && (! (! (false)))), true))))) && true)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x2(injectionSwitch.y, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), determinant(mat2(1.0, sqrt(0.0), 0.0, 1.0)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y))), float(vec3(float(mat3x2(injectionSwitch.y, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), determinant(mat2(1.0, sqrt(0.0), 0.0, 1.0)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y))), 1.0, 1.0))))), false || ((injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3x4(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), sqrt(1.0), 1.0, 1.0), mat4(1.0) * (mat3x4(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), sqrt(1.0), 1.0, 1.0))))), _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)))) > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))) || false)) && true), true, true))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (_GLF_IDENTITY(subgroup_size, 0u | (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))))), (_GLF_IDENTITY(subgroup_size, 1u * (_GLF_IDENTITY(subgroup_size, 0u | (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))))) | (_GLF_IDENTITY(subgroup_size, 1u * (_GLF_IDENTITY(subgroup_size, 0u | (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (_GLF_IDENTITY(subgroup_size, 0u | (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))))), (_GLF_IDENTITY(subgroup_size, 1u * (_GLF_IDENTITY(subgroup_size, 0u | (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))))) | (_GLF_IDENTITY(subgroup_size, 1u * (_GLF_IDENTITY(subgroup_size, 0u | (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (_GLF_IDENTITY(subgroup_size, 0u | (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))))), (_GLF_IDENTITY(subgroup_size, 1u * (_GLF_IDENTITY(subgroup_size, 0u | (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))))) | (_GLF_IDENTITY(subgroup_size, 1u * (_GLF_IDENTITY(subgroup_size, 0u | (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (_GLF_IDENTITY(subgroup_size, 0u | (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))))), (_GLF_IDENTITY(subgroup_size, 1u * (_GLF_IDENTITY(subgroup_size, 0u | (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))))) | (_GLF_IDENTITY(subgroup_size, 1u * (_GLF_IDENTITY(subgroup_size, 0u | (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))))))) * 1u))), min(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, 0u + (subgroup_id))) << 0u) * subgroup_size, _GLF_IDENTITY(0u, (true ? 0u : _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_id), 0u ^ (_GLF_FUZZED(subgroup_id)))) | (_GLF_FUZZED(subgroup_id))))) | (workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 1u), ~ (~ (_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 1u), min(uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, 0u, 1u)))))))), 0u | (_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 1u), ~ (~ (_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 1u), min(uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, 0u, 1u)))))))))), (_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), ~ (_GLF_IDENTITY(~ (_GLF_FUZZED(subgroup_id)), uint(uvec2(~ (_GLF_FUZZED(subgroup_id)), 1u))))) : subgroup_size, (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_id) : subgroup_size, (true ? false ? _GLF_FUZZED(subgroup_id) : subgroup_size : _GLF_FUZZED(subgroup_local_id)))) - 0u))), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 1u), clamp(uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, 0u, 1u))), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 1u), min(uvec4(subgroup_size, 1u, 0u, 1u), _GLF_IDENTITY(uvec4(subgroup_size, 1u, _GLF_IDENTITY(0u, uint(uint(0u))), 1u), (_GLF_IDENTITY(uvec4(subgroup_size, 1u, _GLF_IDENTITY(0u, uint(uint(0u))), 1u), (uvec4(subgroup_size, 1u, _GLF_IDENTITY(0u, uint(uint(0u))), 1u)) >> uvec4(0u, 0u, 0u, 0u))) | uvec4(0u, 0u, 0u, 0u))))), ((_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 1u), min(uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, _GLF_IDENTITY(0u, uint(uint(0u))), 1u))))) << uvec4(0u, 0u, 0u, 0u))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(subgroup_size, _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(workgroup_base))), 0u, 1u), clamp(_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 1u), ~ (~ (uvec4(subgroup_size, 1u, 0u, 1u)))), uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, 0u, 1u))), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 1u), min(uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, _GLF_IDENTITY(0u, uint(uint(0u))), 1u)))), ((_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 1u), min(uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, _GLF_IDENTITY(0u, uint(uint(0u))), 1u))))) << uvec4(0u, 0u, 0u, 0u)), (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 1u), min(uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, _GLF_IDENTITY(0u, uint(uint(0u))), 1u)))), ((_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 1u), min(uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, _GLF_IDENTITY(0u, uint(uint(0u))), 1u))))) << uvec4(0u, 0u, 0u, 0u)), (~ _GLF_IDENTITY((_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 1u), min(uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, _GLF_IDENTITY(0u, uint(uint(0u))), 1u)))), ((_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 1u), min(uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, _GLF_IDENTITY(0u, uint(uint(0u))), 1u))))) << uvec4(0u, 0u, 0u, 0u))) << (uvec4(0u, 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(3u), uvec4(3u))))) | uvec4(0u, 0u, 0u, 0u))))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(subgroup_size, _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(workgroup_base))), 0u, 1u), clamp(_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 1u), ~ (~ (uvec4(subgroup_size, 1u, 0u, 1u)))), uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, 0u, 1u))), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 1u), min(uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, _GLF_IDENTITY(0u, uint(uint(0u))), 1u)))), ((_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 1u), min(uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, _GLF_IDENTITY(0u, uint(uint(0u))), 1u))))) << uvec4(0u, 0u, 0u, 0u)), (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 1u), min(uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, _GLF_IDENTITY(0u, uint(uint(0u))), 1u)))), ((_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 1u), min(uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, _GLF_IDENTITY(0u, uint(uint(0u))), 1u))))) << uvec4(0u, 0u, 0u, 0u)), (~ _GLF_IDENTITY((_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 1u), min(uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, _GLF_IDENTITY(0u, uint(uint(0u))), 1u)))), ((_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 1u), min(uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, _GLF_IDENTITY(0u, uint(uint(0u))), 1u))))) << uvec4(0u, 0u, 0u, 0u))) << (uvec4(0u, 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(3u), uvec4(3u))))) | uvec4(0u, 0u, 0u, 0u)))))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(subgroup_size, _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(workgroup_base))), 0u, 1u), clamp(_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 1u), ~ (~ (uvec4(subgroup_size, 1u, 0u, 1u)))), uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, 0u, 1u))), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 1u), min(uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, _GLF_IDENTITY(0u, uint(uint(0u))), 1u)))), ((_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 1u), min(uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, _GLF_IDENTITY(0u, uint(uint(0u))), 1u))))) << uvec4(0u, 0u, 0u, 0u)), (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 1u), min(uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, _GLF_IDENTITY(0u, uint(uint(0u))), 1u)))), ((_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 1u), min(uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, _GLF_IDENTITY(0u, uint(uint(0u))), 1u))))) << uvec4(0u, 0u, 0u, 0u)), (~ _GLF_IDENTITY((_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 1u), min(uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, _GLF_IDENTITY(0u, uint(uint(0u))), 1u)))), ((_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 1u), min(uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, _GLF_IDENTITY(0u, uint(uint(0u))), 1u))))) << uvec4(0u, 0u, 0u, 0u))) << (uvec4(0u, 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(3u), uvec4(3u))))) | uvec4(0u, 0u, 0u, 0u))))), max(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(subgroup_size, _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(workgroup_base))), 0u, 1u), clamp(_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 1u), ~ (~ (uvec4(subgroup_size, 1u, 0u, 1u)))), uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, 0u, 1u))), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 1u), min(uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, _GLF_IDENTITY(0u, uint(uint(0u))), 1u)))), ((_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 1u), min(uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, _GLF_IDENTITY(0u, uint(uint(0u))), 1u))))) << uvec4(0u, 0u, 0u, 0u)), (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 1u), min(uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, _GLF_IDENTITY(0u, uint(uint(0u))), 1u)))), ((_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 1u), min(uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, _GLF_IDENTITY(0u, uint(uint(0u))), 1u))))) << uvec4(0u, 0u, 0u, 0u)), (~ _GLF_IDENTITY((_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 1u), min(uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, _GLF_IDENTITY(0u, uint(uint(0u))), 1u)))), ((_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 1u), min(uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, _GLF_IDENTITY(0u, uint(uint(0u))), 1u))))) << uvec4(0u, 0u, 0u, 0u))) << (uvec4(0u, 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(3u), uvec4(3u))))) | uvec4(0u, 0u, 0u, 0u))))), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(subgroup_size, _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(workgroup_base))), 0u, 1u), clamp(_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 1u), ~ (~ (uvec4(subgroup_size, 1u, 0u, 1u)))), uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, 0u, 1u))), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 1u), min(uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, _GLF_IDENTITY(0u, uint(uint(0u))), 1u)))), ((_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 1u), min(uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, _GLF_IDENTITY(0u, uint(uint(0u))), 1u))))) << uvec4(0u, 0u, 0u, 0u)), (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 1u), min(uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, _GLF_IDENTITY(0u, uint(uint(0u))), 1u)))), ((_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 1u), min(uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, _GLF_IDENTITY(0u, uint(uint(0u))), 1u))))) << uvec4(0u, 0u, 0u, 0u)), (~ _GLF_IDENTITY((_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 1u), min(uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, _GLF_IDENTITY(0u, uint(uint(0u))), 1u)))), ((_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 1u), min(uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, _GLF_IDENTITY(0u, uint(uint(0u))), 1u))))) << uvec4(0u, 0u, 0u, 0u))) << (uvec4(0u, 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(3u), uvec4(3u))))) | uvec4(0u, 0u, 0u, 0u))))))))), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 1u), clamp(uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, 0u, 1u))), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 1u), min(uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, _GLF_IDENTITY(0u, uint(uint(0u))), 1u)))), ((_GLF_IDENTITY(uvec4(subgroup_size, 1u, _GLF_IDENTITY(0u, (0u) + 0u), 1u), min(uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, _GLF_IDENTITY(0u, uint(uint(0u))), 1u))))) << uvec4(0u, 0u, 0u, 0u))))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 1u), clamp(uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, 0u, 1u))), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 1u), min(uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, _GLF_IDENTITY(0u, uint(uint(0u))), 1u))), (_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 1u), min(uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, _GLF_IDENTITY(0u, uint(uint(0u))), 1u)))) | (_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 1u), min(uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, _GLF_IDENTITY(0u, uint(uint(0u))), 1u)))))), _GLF_IDENTITY(((_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 1u), min(uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, _GLF_IDENTITY(0u, uint(uint(0u))), 1u))))) << uvec4(0u, 0u, 0u, 0u), (_GLF_IDENTITY(((_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 1u), min(uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, _GLF_IDENTITY(0u, uint(uint(0u))), 1u))))) << uvec4(0u, 0u, 0u, 0u), clamp(_GLF_IDENTITY(((_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 1u), min(uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, _GLF_IDENTITY(0u, uint(uint(0u))), 1u))))) << uvec4(0u, 0u, 0u, 0u), (((_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 1u), min(uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, _GLF_IDENTITY(0u, uint(uint(0u))), 1u))))) << uvec4(0u, 0u, 0u, 0u)) - uvec4(0u, 0u, 0u, 0u)), ((_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 1u), min(uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, _GLF_IDENTITY(0u, uint(uint(0u))), 1u))))) << uvec4(0u, 0u, 0u, 0u), ((_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 1u), min(uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, _GLF_IDENTITY(0u, uint(uint(0u))), 1u))))) << uvec4(0u, 0u, 0u, 0u)))) | (((_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 1u), min(uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, _GLF_IDENTITY(0u, uint(uint(0u))), 1u))))) << uvec4(0u, 0u, 0u, 0u)))))))) | _GLF_IDENTITY((uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 1u), clamp(uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, _GLF_IDENTITY(1u, (1u) >> 0u), 0u, 1u), uvec4(subgroup_size, 1u, 0u, 1u))), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 1u), clamp(_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 1u), clamp(uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, 0u, 1u))), uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, 0u, 1u))), min(uvec4(subgroup_size, _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_size))), 0u, 1u), uvec4(subgroup_size, 1u, _GLF_IDENTITY(0u, uint(uint(0u))), 1u)))), ((_GLF_IDENTITY(_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 1u), min(uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, _GLF_IDENTITY(0u, uint(uint(0u))), 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 1u), min(uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, _GLF_IDENTITY(0u, uint(uint(0u))), 1u))), (_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 1u), min(uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, _GLF_IDENTITY(0u, uint(uint(0u))), 1u)))) | (_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 1u), min(uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, _GLF_IDENTITY(0u, uint(uint(0u))), 1u)))))) | (_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 1u), min(uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, _GLF_IDENTITY(0u, uint(uint(0u))), 1u))))))) << uvec4(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u, 0u, 0u)))))), min((uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 1u), clamp(uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, _GLF_IDENTITY(1u, (1u) >> 0u), 0u, 1u), uvec4(subgroup_size, 1u, 0u, 1u))), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 1u), clamp(_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 1u), clamp(uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, 0u, 1u))), uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, 0u, 1u))), min(uvec4(subgroup_size, _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_size))), 0u, 1u), uvec4(subgroup_size, 1u, _GLF_IDENTITY(0u, uint(uint(0u))), 1u)))), ((_GLF_IDENTITY(_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 1u), min(uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, _GLF_IDENTITY(0u, uint(uint(0u))), 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 1u), min(uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, _GLF_IDENTITY(0u, uint(uint(0u))), 1u))), (_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 1u), min(uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, _GLF_IDENTITY(0u, uint(uint(0u))), 1u)))) | (_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 1u), min(uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, _GLF_IDENTITY(0u, uint(uint(0u))), 1u)))))) | (_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 1u), min(uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, _GLF_IDENTITY(0u, uint(uint(0u))), 1u))))))) << uvec4(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u, 0u, 0u)))))), _GLF_IDENTITY((uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 1u), clamp(uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, _GLF_IDENTITY(1u, (1u) >> 0u), 0u, 1u), uvec4(subgroup_size, 1u, 0u, 1u))), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 1u), clamp(_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 1u), clamp(uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, 0u, 1u))), uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, 0u, 1u))), min(uvec4(subgroup_size, _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_size))), 0u, 1u), uvec4(subgroup_size, 1u, _GLF_IDENTITY(0u, uint(uint(0u))), 1u)))), ((_GLF_IDENTITY(_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 1u), min(uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, _GLF_IDENTITY(0u, uint(uint(0u))), 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 1u), min(uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, _GLF_IDENTITY(0u, uint(uint(0u))), 1u))), (_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 1u), min(uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, _GLF_IDENTITY(0u, uint(uint(0u))), 1u)))) | (_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 1u), min(uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, _GLF_IDENTITY(0u, uint(uint(0u))), 1u)))))) | (_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 1u), min(uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, _GLF_IDENTITY(0u, uint(uint(0u))), 1u))))))) << uvec4(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u, 0u, 0u)))))), 0u | ((uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 1u), clamp(uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, _GLF_IDENTITY(1u, (1u) >> 0u), 0u, 1u), uvec4(subgroup_size, 1u, 0u, 1u))), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 1u), clamp(_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 1u), clamp(uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, 0u, 1u))), uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, 0u, 1u))), min(uvec4(subgroup_size, _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_size))), 0u, 1u), uvec4(subgroup_size, 1u, _GLF_IDENTITY(0u, uint(uint(0u))), 1u)))), ((_GLF_IDENTITY(_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 1u), min(uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, _GLF_IDENTITY(0u, uint(uint(0u))), 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 1u), min(uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, _GLF_IDENTITY(0u, uint(uint(0u))), 1u))), (_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 1u), min(uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, _GLF_IDENTITY(0u, uint(uint(0u))), 1u)))) | (_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 1u), min(uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, _GLF_IDENTITY(0u, uint(uint(0u))), 1u)))))) | (_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 1u), min(uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, _GLF_IDENTITY(0u, uint(uint(0u))), 1u))))))) << uvec4(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u, 0u, 0u))))))))))), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 1u), clamp(uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, 0u, 1u))), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 1u), min(uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, _GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) + 0u)) | (_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, max(0u, 0u))))))))), 1u)))), ((_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 1u), min(uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, _GLF_IDENTITY(1u, (1u) >> 0u), _GLF_IDENTITY(0u, uint(uint(0u))), 1u))))) << uvec4(0u, 0u, 0u, 0u)))))))), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 1u), clamp(uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, 0u, 1u), uvec4(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 1u, 0u, 1u))), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 1u), min(uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, _GLF_IDENTITY(0u, uint(uint(0u))), 1u))), (true ? _GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 1u), min(uvec4(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), 1u, 0u, 1u), uvec4(subgroup_size, 1u, _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), uint(_GLF_IDENTITY(uint(0u), ~ (~ (uint(0u)))))), 1u))) : _GLF_FUZZED(uvec4(97935u, 33161u, 120667u, 87752u))))), ((_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 1u), min(uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, _GLF_IDENTITY(0u, uint(uint(0u))), 1u))))) << _GLF_IDENTITY(uvec4(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(packSnorm2x16(vec2(-3.1, 0.4))) : 0u)), 0u, 0u, 0u), clamp(uvec4(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(packSnorm2x16(vec2(-3.1, 0.4))) : 0u)), 0u, 0u, 0u), uvec4(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(packSnorm2x16(vec2(-3.1, 0.4))) : 0u)), 0u, 0u, 0u), uvec4(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(packSnorm2x16(vec2(-3.1, 0.4))) : 0u)), 0u, 0u, 0u))))))), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 1u), clamp(uvec4(subgroup_size, 1u, 0u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) - 0u)) - 0u)), uvec4(subgroup_size, _GLF_IDENTITY(1u, max(1u, 1u)), 0u, 1u), uvec4(subgroup_size, 1u, 0u, 1u))), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 1u), min(uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, _GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0u))))), 1u)))), ((_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 1u), min(uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, _GLF_IDENTITY(0u, uint(uint(0u))), 1u))))) << uvec4(0u, 0u, 0u, 0u))))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 1u), clamp(uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, 0u, 1u))), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 1u), min(uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, _GLF_IDENTITY(0u, uint(uint(0u))), 1u)))), ((_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 1u), min(uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, _GLF_IDENTITY(0u, uint(uint(0u))), 1u))))) << uvec4(0u, 0u, 0u, 0u)))), (false ? _GLF_FUZZED(uvec4(74813u, 33030u, 178457u, 96302u)) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 1u), clamp(uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, 0u, 1u))), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 1u), min(uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, _GLF_IDENTITY(0u, uint(uint(0u))), 1u)))), ((_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 1u), min(uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, _GLF_IDENTITY(0u, uint(uint(0u))), 1u))))) << uvec4(0u, 0u, 0u, 0u)))), uvec4(0u, 0u, 0u, 0u) ^ (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 1u), clamp(uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, 0u, 1u))), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 1u), min(uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, _GLF_IDENTITY(0u, uint(uint(0u))), 1u)))), ((_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 1u), min(uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, _GLF_IDENTITY(0u, uint(uint(0u))), 1u))))) << uvec4(0u, 0u, 0u, 0u)))))))))) | (uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 1u), clamp(uvec4(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), 1u, 0u, 1u), uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, 0u, 1u))), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 1u), min(uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, _GLF_IDENTITY(0u, uint(uint(0u))), 1u)))), ((_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 1u), min(uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, _GLF_IDENTITY(0u, uint(uint(0u))), 1u))))) << uvec4(0u, 0u, 0u, 0u))))))), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 1u), clamp(uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, 0u, 1u))), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 1u), min(uvec4(subgroup_size, 1u, _GLF_IDENTITY(0u, (0u) >> 0u), 1u), uvec4(subgroup_size, 1u, _GLF_IDENTITY(0u, uint(uint(0u))), 1u)))), ((_GLF_IDENTITY(uvec4(subgroup_size, 1u, _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, (0u) | 0u))), 1u), min(_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 1u), (_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 1u), (false ? _GLF_FUZZED(uvec4(98936u, 16149u, 140328u, 17986u)) : uvec4(subgroup_size, 1u, 0u, 1u)))) >> uvec4(0u, 0u, 0u, 0u)), uvec4(subgroup_size, 1u, _GLF_IDENTITY(0u, uint(uint(0u))), 1u))))) << uvec4(0u, 0u, 0u, 0u)))))))), uint(uvec4(~ _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 1u), clamp(uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (1u)))) + uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u, 1u))), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(uvec4(subgroup_size, _GLF_IDENTITY(1u, ~ (~ (1u))), 0u, 1u), min(uvec4(subgroup_size, 1u, 0u, 1u), _GLF_IDENTITY(uvec4(subgroup_size, 1u, _GLF_IDENTITY(0u, uint(uint(0u))), 1u), (uvec4(subgroup_size, 1u, _GLF_IDENTITY(0u, uint(uint(0u))), 1u)) | (uvec4(subgroup_size, 1u, _GLF_IDENTITY(0u, uint(uint(0u))), 1u)))))), ((_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 1u), min(uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, _GLF_IDENTITY(0u, uint(uint(0u))), 1u))))) << uvec4(0u, 0u, 0u, 0u))))), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 1u), clamp(uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, 0u, 1u))), ~ (~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 1u), min(uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, _GLF_IDENTITY(0u, uint(uint(0u))), 1u)))), ~ (~ ((_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 1u), min(uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, _GLF_IDENTITY(0u, uint(uint(0u))), 1u))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 1u), (uvec4(subgroup_size, 1u, 0u, 1u)) | (_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 1u), (uvec4(subgroup_size, 1u, 0u, 1u)) | uvec4(0u, 0u, 0u, 0u)))), min(uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, _GLF_IDENTITY(0u, uint(uint(0u))), 1u))))) << uvec4(0u, 0u, 0u, 0u))))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 1u), _GLF_IDENTITY(clamp(uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, 0u, 1u)), (clamp(uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, 0u, 1u))) - uvec4(0u, 0u, 0u, 0u))), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 1u), min(uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, _GLF_IDENTITY(0u, uint(uint(0u))), 1u)))), ((_GLF_IDENTITY(uvec4(subgroup_size, _GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, (1u) << 0u)))), 0u, 1u), min(uvec4(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))), subgroup_size, _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), min(~ (subgroup_size), ~ (subgroup_size))))))), _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_size))), 0u, 1u), _GLF_IDENTITY(uvec4(subgroup_size, _GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, uint(uvec2(1u, 1u))))), _GLF_IDENTITY(0u, uint(uint(0u))), 1u), (uvec4(subgroup_size, _GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, uint(uvec2(1u, 1u))))), _GLF_IDENTITY(0u, uint(uint(0u))), 1u)) >> uvec4(0u, 0u, 0u, 0u)))))) << _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), max(uvec4(0u, 0u, 0u, 0u), uvec4(0u, 0u, 0u, 0u)))))))) | (uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 1u), clamp(uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, 0u, 1u))), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(uvec4(subgroup_size, 1u, _GLF_IDENTITY(0u, (0u) | (0u)), 1u), min(uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, _GLF_IDENTITY(0u, uint(uint(0u))), 1u)))), ((_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 1u), min(uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, _GLF_IDENTITY(0u, uint(uint(0u))), 1u))))) << uvec4(0u, 0u, 0u, 0u))))))), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(subgroup_size, 1u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u), clamp(uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, 0u, 1u))), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 1u), min(uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, _GLF_IDENTITY(0u, uint(uint(0u))), 1u)))), ((_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 1u), min(uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, _GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (0u) / ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))))))), 1u))))) << uvec4(0u, 0u, 0u, 0u)))))))), uint(_GLF_ONE(1.0, injectionSwitch.y)) * ((_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 1u), clamp(uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (1u)))) + uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u, 1u))), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(uvec4(subgroup_size, _GLF_IDENTITY(1u, ~ (~ (1u))), 0u, 1u), min(uvec4(subgroup_size, 1u, 0u, 1u), _GLF_IDENTITY(uvec4(subgroup_size, 1u, _GLF_IDENTITY(0u, uint(uint(0u))), 1u), (uvec4(subgroup_size, 1u, _GLF_IDENTITY(0u, uint(uint(0u))), 1u)) | (uvec4(subgroup_size, 1u, _GLF_IDENTITY(0u, uint(uint(0u))), 1u)))))), ((_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 1u), min(uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, _GLF_IDENTITY(0u, uint(uint(0u))), 1u))))) << uvec4(0u, 0u, 0u, 0u))))), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 1u), clamp(uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, 0u, 1u))), ~ (~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 1u), min(uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, _GLF_IDENTITY(0u, uint(uint(0u))), 1u)))), ~ (~ ((_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 1u), min(uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, _GLF_IDENTITY(0u, uint(uint(0u))), 1u))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 1u), (uvec4(subgroup_size, 1u, 0u, 1u)) | (_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 1u), (uvec4(subgroup_size, 1u, 0u, 1u)) | uvec4(0u, 0u, 0u, 0u)))), min(uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, _GLF_IDENTITY(0u, uint(uint(0u))), 1u))))) << uvec4(0u, 0u, 0u, 0u))))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 1u), _GLF_IDENTITY(clamp(uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, 0u, 1u)), (clamp(uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, 0u, 1u))) - uvec4(0u, 0u, 0u, 0u))), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 1u), min(uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, _GLF_IDENTITY(0u, uint(uint(0u))), 1u)))), ((_GLF_IDENTITY(uvec4(subgroup_size, _GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, (1u) << 0u)))), 0u, 1u), min(uvec4(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))), subgroup_size, _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), min(~ (subgroup_size), ~ (subgroup_size))))))), _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_size))), 0u, 1u), _GLF_IDENTITY(uvec4(subgroup_size, _GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, uint(uvec2(1u, 1u))))), _GLF_IDENTITY(0u, uint(uint(0u))), 1u), (uvec4(subgroup_size, _GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, uint(uvec2(1u, 1u))))), _GLF_IDENTITY(0u, uint(uint(0u))), 1u)) >> uvec4(0u, 0u, 0u, 0u)))))) << _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), max(uvec4(0u, 0u, 0u, 0u), uvec4(0u, 0u, 0u, 0u)))))))) | (uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 1u), clamp(uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, 0u, 1u))), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(uvec4(subgroup_size, 1u, _GLF_IDENTITY(0u, (0u) | (0u)), 1u), min(uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, _GLF_IDENTITY(0u, uint(uint(0u))), 1u)))), ((_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 1u), min(uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, _GLF_IDENTITY(0u, uint(uint(0u))), 1u))))) << uvec4(0u, 0u, 0u, 0u))))))), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(subgroup_size, 1u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u), clamp(uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, 0u, 1u))), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 1u), min(uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, _GLF_IDENTITY(0u, uint(uint(0u))), 1u)))), ((_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 1u), min(uvec4(subgroup_size, 1u, 0u, 1u), uvec4(subgroup_size, 1u, _GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (0u) / ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))))))), 1u))))) << uvec4(0u, 0u, 0u, 0u)))))))))), 1u, 0u, 1u))))))))), (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), max(_GLF_FUZZED(subgroup_id), _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), ~ (_GLF_IDENTITY(~ (_GLF_FUZZED(subgroup_id)), min(~ (_GLF_FUZZED(subgroup_id)), ~ (_GLF_FUZZED(subgroup_id)))))))) : _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u))))))))))), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))) | (subgroup_id)) * subgroup_size), clamp(~ (workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))) | (subgroup_id)) * subgroup_size), ~ (workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))) | (subgroup_id)) * subgroup_size), ~ (workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))) | (subgroup_id)) * subgroup_size)))), min(~ (~ (workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))))) | (subgroup_id)) * subgroup_size)), ~ (~ (workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))), (subgroup_id) | (subgroup_id))) | (subgroup_id)) * subgroup_size, (false ? _GLF_FUZZED(mix(workgroup_id, 67972u, true)) : _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))), (subgroup_id) | (subgroup_id))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))), (subgroup_id) | (subgroup_id))))) | (subgroup_id)) * subgroup_size))))))))) + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, false, true)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))) && true), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-3563.6098, -94.79)) : _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).x, _GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 0.0))))) > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) && true))), bool(bvec2((! (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(bool(true)))))), false))))))), (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true, (true) || false)), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, true)), bool(bvec2(bool(bvec4(false, false, false, true)), true)))), ! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))))), true), false)))))), bool(bool(false || (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(! _GLF_IDENTITY((! (! _GLF_IDENTITY((false), bool(bvec3((false), true, true))))), bool(bvec2((! (! _GLF_IDENTITY((false), bool(bvec3((false), true, true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (! (! (! _GLF_IDENTITY((false), bool(bvec4((false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))))))))))), (injectionSwitch.x > injectionSwitch.y))))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(-22.80, _GLF_IDENTITY(5841.9933, float(vec3(5841.9933, abs(0.0), 0.0)))), max(vec2(-22.80, _GLF_IDENTITY(5841.9933, float(vec3(5841.9933, abs(0.0), 0.0)))), vec2(-22.80, _GLF_IDENTITY(5841.9933, float(vec3(5841.9933, abs(0.0), 0.0))))))) : injectionSwitch)).y)), false || (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), true && (_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (! (false))), false || ((! (! (false))))))))))), ! (! ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (! (false))), false || ((! (! (false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (! (false))), false || ((! (! (false)))))), true && (_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (! (false))), false || ((! (! (false))))))))) || false))))))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), true && (_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (! (false))), false || ((! (! (false))))))))))), ! (! ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (! (false))), false || ((! (! (false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (! (false))), false || ((! (! (false)))))), true && (_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (! (false))), false || ((! (! (false))))))))) || false))))))))))), bool(bool(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), true && (_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (! (false))), false || ((! (! (false))))))))))), ! (! ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (! (false))), false || ((! (! (false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (! (false))), false || ((! (! (false)))))), true && (_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (! (false))), false || ((! (! (false))))))))) || false)))))))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), true && (_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (! (false))), false || ((! (! (false))))))))))), ! (! _GLF_IDENTITY(((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), false), bvec2(bvec2(bvec2((false), false)))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (! (false))), false || ((! (! (false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (! (false))), false || ((! (! (false)))))), true && (_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (! (false))), false || ((! (! (false))))))))) || false))))))), bool(bvec2(_GLF_IDENTITY(((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), false), bvec2(bvec2(bvec2((false), false)))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (! (false))), false || ((! (! (false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (! (false))), false || ((! (! (false)))))), true && (_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (! (false))), false || ((! (! (false))))))))) || false))))))), false || (((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), false), bvec2(bvec2(bvec2((false), false)))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (! (false))), false || ((! (! (false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (! (false))), false || ((! (! (false)))))), true && (_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (! (false))), false || ((! (! (false))))))))) || false))))))))), true)))))), ! (_GLF_IDENTITY(! ((! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), true && (_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (! (false))), false || ((! (! (false))))))))))), ! (! _GLF_IDENTITY(((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), false), bvec2(bvec2(bvec2((false), false)))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (! (false))), false || ((! (! (false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (! (false))), false || ((! (! (false)))))), true && (_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (! (false))), false || ((! (! (false))))))))) || false))))))), bool(bvec2(_GLF_IDENTITY(((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), false), bvec2(bvec2(bvec2((false), false)))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (! (false))), false || ((! (! (false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (! (false))), false || ((! (! (false)))))), true && (_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (! (false))), false || ((! (! (false))))))))) || false))))))), false || (((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), false), bvec2(bvec2(bvec2((false), false)))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (! (false))), false || ((! (! (false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (! (false))), false || ((! (! (false)))))), true && (_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (! (false))), false || ((! (! (false))))))))) || false))))))))), true))))))), true && (! ((! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), true && (_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (! (false))), false || ((! (! (false))))))))))), ! (! _GLF_IDENTITY(((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), false), bvec2(bvec2(bvec2((false), false)))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (! (false))), false || ((! (! (false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (! (false))), false || ((! (! (false)))))), true && (_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (! (false))), false || ((! (! (false))))))))) || false))))))), bool(bvec2(_GLF_IDENTITY(((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), false), bvec2(bvec2(bvec2((false), false)))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (! (false))), false || ((! (! (false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (! (false))), false || ((! (! (false)))))), true && (_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (! (false))), false || ((! (! (false))))))))) || false))))))), false || (((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), false), bvec2(bvec2(bvec2((false), false)))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (! (false))), false || ((! (! (false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (! (false))), false || ((! (! (false)))))), true && (_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (! (false))), false || ((! (! (false))))))))) || false))))))))), true)))))))))))), true && (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), true && (_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (! (false))), false || ((! (! (false)))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ! (! ((false))))))), true && (_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (! (false))), false || ((! (! (false)))))))), (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), true && (_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (! (false))), false || ((! (! (false))))))))) || false)))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (! (false))), false || ((! (! (false)))))), bool(bool(_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (! (false))), false || ((! (! (false))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (! (false))), false || ((! (! (false)))))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! _GLF_IDENTITY((! (! (false))), _GLF_IDENTITY(false || ((! (! (false)))), true && (_GLF_IDENTITY(false || ((! (! (false)))), false || (false || ((! (! (false))))))))))))) || false))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (! (false))), false || ((! (! (false)))))), bool(bool(_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (! (false))), false || ((! (! (false))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (! (false))), false || ((! (! (false)))))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! _GLF_IDENTITY((! (! (false))), _GLF_IDENTITY(false || ((! (! (false)))), true && (_GLF_IDENTITY(false || ((! (! (false)))), false || (false || ((! (! (false))))))))))))) || false))))), ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (! (false))), false || ((! (! (false)))))), bool(bool(_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (! (false))), false || ((! (! (false))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (! (false))), false || ((! (! (false)))))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! _GLF_IDENTITY((! (! (false))), _GLF_IDENTITY(false || ((! (! (false)))), true && (_GLF_IDENTITY(false || ((! (! (false)))), false || (false || ((! (! (false))))))))))))) || false)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))))))))) && _GLF_IDENTITY(true, bool(bool(true)))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(7.8)), vec2(_GLF_FUZZED(-856.790), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, (false) && true)), bvec2(bvec3(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, false)))), false || (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, false)))))))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), true, true, true))))), false), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(bool(true)))))))))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(bvec3(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), (bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && true), true && (bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))), bvec2(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), (bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && true), true && (bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))))), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), false), bvec2(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))).x > injectionSwitch.y)), false)), true && (bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))), true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(bvec3(bvec2((_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true && (bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true && (bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))), true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true && (bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true && (bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))), true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true && (bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true && (bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))), true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true)), bvec2(bvec3(bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true && (bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true && (bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))), true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false)), bvec2(bvec4(bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true && (bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), false))))))))), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), bool(bvec3(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false, true))))), false), bvec2(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false))))), true && (bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))), true))), false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false)), true, false))))), false, false))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), false)), true && (bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))), true))), bvec2(bvec3(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), false)), true && (bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))), true))), false))), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)), false)), true && (bool(bvec4(false, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), false)))))), true))), bvec2(bvec3(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)), false)), true && (bool(bvec4(false, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), false)))))), true))), true))), false, _GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)), bool(bvec2(bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)), false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y)))))), false, false)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), false)), true && (bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))), true))), bvec2(bvec3(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), false)), true && (bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))), true))), false))), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)), false)), true && (bool(bvec4(false, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), false)))))), true))), bvec2(bvec3(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)), false)), true && (bool(bvec4(false, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), false)))))), true))), true))), false, _GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)), bool(bvec2(bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)), false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y)))))), false, false)), bvec3(bvec4(bvec3(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), false)), true && (bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))), true))), bvec2(bvec3(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), false)), true && (bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))), true))), false))), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)), false)), true && (bool(bvec4(false, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), false)))))), true))), bvec2(bvec3(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)), false)), true && (bool(bvec4(false, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), false)))))), true))), true))), false, _GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)), bool(bvec2(bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)), false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y)))))), false, false)), true))))))))))))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), false || (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(write_val, uint(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(max(_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid)), _GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid), uint(uint((virtual_gid)))) | 0u)), (0u | uint(_GLF_ZERO(0.0, injectionSwitch.x))) + (max(_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid)), _GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid), uint(uint((virtual_gid)))) | 0u)))), (false ? _GLF_FUZZED(subgroup_local_id) : max(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, _GLF_IDENTITY(virtual_gid, uint(uvec2(virtual_gid, 0u)))))) | (virtual_gid)), _GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid), uint(uint((virtual_gid)))) | 0u)))))), 4, 64, 0);
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) && true), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, (false) && true), true, false))))))))
  barrier();
 uint read_val = atomicLoad(write_val, 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 buf[virtual_gid] = uint(subgroupAllEqual(read_val));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false))))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, true && (true)), false, true)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) || _GLF_IDENTITY(false, (false) && true), ! (_GLF_IDENTITY(! ((_GLF_DEAD(false)) || false), false || (! ((_GLF_DEAD(false)) || false)))))))), false || (bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) || _GLF_IDENTITY(false, (false) && true), ! (_GLF_IDENTITY(! ((_GLF_DEAD(false)) || false), false || (! ((_GLF_DEAD(false)) || false)))))))))), bool(_GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))), bool(bool(bool(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
