#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 0) uniform buf0 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (_GLF_IDENTITY(0 ^ _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (0 << _GLF_IDENTITY(int(2), int(2))) | (1))))), (false ? _GLF_FUZZED(int(-8535.3398)) : 0 ^ 1)))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 do
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))) && true), true && (_GLF_IDENTITY(false, (false) || false)))), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))) && true), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))) && true), bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))) && true)))))), true && (false))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat4(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1381.9947) : injectionSwitch.y)), 1.0, abs(1.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 1.0, 0.0, 0.0)))))), exp(0.0), 0.0, sqrt(0.0), 0.0, abs(1.0)))))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), false || (bool(bvec2(true, false))))), true)))))))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))).y))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 | 1)); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y))))))))
    {
     do
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   else
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = (-78627 & 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           do
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(radians(min(vec2(-629.961, -8430.6477), -0.9))))).y))))
              barrier();
             barrier();
            }
           while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, false))));
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          barrier();
        }
       else
        {
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! ((_GLF_IDENTITY(false, ! (! (false)))) || false))))))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           barrier();
          }
        }
       barrier();
      }
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), false || (_GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, true, true)))))), false))), (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))), false, false)), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), clamp(min(injectionSwitch, injectionSwitch), min(injectionSwitch, injectionSwitch), min(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))), false, false), bvec3(bvec4(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y))), false, false), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), false || (bool(true)))), (bool(_GLF_IDENTITY(bool(true), false || (bool(true))))) || false)))))))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y))), false, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y))), false, false), bvec3(bvec4(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y))), false, false), false))))))), ! (! (bool(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, false)), bvec3(bvec3(bvec3(bvec3(false, true, false))))))))))))) || false)))), true, false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (! (bool(bool(injectionSwitch.x > injectionSwitch.y))))))))), false, false)))))), false), false)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (_GLF_IDENTITY(! _GLF_IDENTITY((bool(bool(false))), ! (_GLF_IDENTITY(! ((bool(bool(false)))), true && (! ((bool(bool(false)))))))), ! (! (! (bool(bool(false)))))))))) && true))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (_GLF_IDENTITY(! (bool(bool(false))), ! (! (! (bool(bool(false)))))))))) && true))), bool(bvec4(bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (_GLF_IDENTITY(! (bool(bool(false))), ! (! (! (bool(bool(false)))))))))) && true))), true, true, true)))))))))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         barrier();
        }
       else
        {
        }
      }
    }
  }
 else
  {
  }
 uint subgroup_size = 16;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), ! (! (_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true)))) && true))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))) || (false), (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y)))) || (false)) && true))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))) && _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true))))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true))))), true, true))))))))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) - 0.0)) - 0.0)), false || ((injectionSwitch.x > injectionSwitch.y))))))), false || ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) - 0.0)) - 0.0)), false || ((injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED((vec2(-124.878, -3261.1388) * -2974.0080))))) / exp(abs(vec2(0.0, 0.0)))).y, max(injectionSwitch.y, injectionSwitch.y))) - 0.0)) - 0.0)), false || ((injectionSwitch.x > injectionSwitch.y)))) && true))))))) && true))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)) && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), true), true, false)), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), true), true, false)), true, true)), bvec2(bvec4(bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), true), true, false)), true, true)), true, true)))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), true))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), bool(bvec4(! ((false)), false, false, false)))))), true))), true), true, false)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), true), true, false)), true, true))))), true && (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), true), true, false)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), true), true, false)), true, true))))))), _GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (_GLF_IDENTITY(! (true), bool(bvec4(! (true), false, false, true)))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), true))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), bool(bvec4(! ((false)), false, false, false)))))), true))), true), true, false)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), true), true, false)), true, true))))), true && (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), true), true, false)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), true), true, false)), true, true))))))), _GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (_GLF_IDENTITY(! (true), bool(bvec4(! (true), false, false, true)))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), true))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), bool(bvec4(! ((false)), false, false, false)))))), true))), true), true, false)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), true), true, false)), true, true))))), true && (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), true), true, false)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), true), true, false)), true, true))))))), _GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (_GLF_IDENTITY(! (true), bool(bvec4(! (true), false, false, true)))))))), false))), true))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), true), true, false)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), true), true, false)), true, true))))), bool(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), true))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_IDENTITY(false, false || (false)), true))), true), true, false)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), true), true, false)), true, true))))), true && (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), true), true, false)), bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), true)))), true, false)), true, true))))))), false, true))))), false), bvec2(bvec3(bvec2(true && (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), true), true, false)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), true), true, false)), true, true))))), bool(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), true))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_IDENTITY(false, false || (false)), true))), true), true, false)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), true), true, false)), true, true))))), true && (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), true), true, false)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), true), true, false)), true, true))))))), false, true)))), false || (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), false, true))), true), true, false)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, false || (false)), false, true))), true), true, false)), true, true))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), false, true))), true), true, false)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, false || (false)), false, true))), true), true, false)), true, true))))), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), false, true))), true), true, false)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, false || (false)), false, true))), true), true, false)), true, true)))))) && true)) || false), bool(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), true))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_IDENTITY(false, false || (false)), true))), true), true, false)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), true), true, false)), true, true))))), true && (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_IDENTITY(false, (false) && true), true))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), true), true, false)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), true), true, false)), true, true))))))), false, true))))))), false), false)))), (bool(_GLF_IDENTITY(bvec2(true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), true), true, false)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), true), true, false)), true, true))))), bool(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), true))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_IDENTITY(false, false || (false)), true))), true), true, false)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, false, true))), true), _GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), false))))))), true, true))))), true && (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_IDENTITY(false, (false) && true), true))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_IDENTITY(false, (false) || false), true))), true), true, false)), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true), false, false, true))), true), true, false)), true, true)), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true), false, false, true))), true), true, false)), true, true)), true), bvec3(bvec3(bvec3(bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true), false, false, true))), true), true, false)), true, true)), true))))))))))), false, true))))), false), bvec2(bvec3(bvec2(true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), true), true, false)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), true), _GLF_IDENTITY(true, ! (! (true))), false)), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), true), _GLF_IDENTITY(true, ! (! (true))), false))), bvec2(bvec4(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), true), _GLF_IDENTITY(true, ! (! (true))), false))), false, false))))), true, true))))), bool(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), false || (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))))), true))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (false)), true))), true), true, false)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), true), true, false)), true, true))))), true && (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false, true))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), true), true, false)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), true), true, false)), true, true))))))), false, true))))), false), false))))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))))
  {
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)).x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     for(int _injected_loop_counter = _GLF_IDENTITY((0 | 0), 0 + ((0 | 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, min(_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter)), _injected_loop_counter)) != (0 | ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))))); _injected_loop_counter ++)
        {
         for(int _injected_loop_counter = int(_GLF_ZERO(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), min(0.0, 0.0)), injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter ++, (_GLF_IDENTITY(_injected_loop_counter ++, 0 | (_injected_loop_counter ++))) ^ 0), 0 ^ (_injected_loop_counter ++)), 0 + (_GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) << int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), 1.0 * (_GLF_ZERO(0.0, injectionSwitch.x))))))))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
            }
           else
            {
            }
           do
            {
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) && true), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) && true), false, false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
      }
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = (1 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _GLF_IDENTITY(_injected_loop_counter ++, 1 * (_GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) ^ 0))))
    {
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_size) >> _GLF_IDENTITY(0u, (0u) | (0u)), min((workgroup_size) >> _GLF_IDENTITY(0u, (0u) | (0u)), _GLF_IDENTITY((workgroup_size) >> _GLF_IDENTITY(0u, (0u) | (0u)), 0u ^ ((workgroup_size) >> _GLF_IDENTITY(0u, (0u) | (0u)))))), 0u | (_GLF_IDENTITY((workgroup_size) >> _GLF_IDENTITY(0u, (0u) | (0u)), min((workgroup_size) >> _GLF_IDENTITY(0u, (0u) | (0u)), _GLF_IDENTITY((workgroup_size) >> _GLF_IDENTITY(0u, (0u) | (0u)), 0u ^ ((workgroup_size) >> _GLF_IDENTITY(0u, (0u) | (0u))))))))) * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u + (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) >> 0u))) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 1u, 1u))), subgroup_id)), (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 1u, 1u))), subgroup_id))) << (_GLF_IDENTITY(0u ^ 0u, max(0u ^ 0u, _GLF_IDENTITY(0u ^ 0u, min(0u ^ 0u, 0u ^ 0u)))))) * subgroup_size + subgroup_local_id, uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u + (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) >> 0u))) + _GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u), _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec3(subgroup_id, 1u, 1u)), uint(uvec4(uint(uvec3(subgroup_id, 1u, 1u)), 1u, 0u, 1u)))), subgroup_id)) * subgroup_size + subgroup_local_id, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u + (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), (false ? _GLF_FUZZED(58549u) : _GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) << 0u)))))), max((_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), (false ? _GLF_FUZZED(58549u) : _GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) << 0u)))))), (_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), (false ? _GLF_FUZZED(58549u) : _GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) << 0u)))))))) >> 0u))), (_GLF_IDENTITY(workgroup_base, 0u + (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), (false ? _GLF_FUZZED(58549u) : _GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) << 0u)))))), max((_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), (false ? _GLF_FUZZED(58549u) : _GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) << 0u)))))), (_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), (false ? _GLF_FUZZED(58549u) : _GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) << 0u)))))))) >> 0u)))) << uint(_GLF_ZERO(0.0, injectionSwitch.x))) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 1u, 1u))), subgroup_id)), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 1u, 1u))), subgroup_id)), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u), ~ (_GLF_IDENTITY(~ (uvec3(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 1u, 1u))), subgroup_id)), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u)), uvec3(uvec3(~ (uvec3(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 1u, 1u))), subgroup_id)), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u))))))))) * subgroup_size + subgroup_local_id))), max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u + (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) >> 0u))) + _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 1u, 1u))), subgroup_id)) * subgroup_size + subgroup_local_id, ~ (~ (_GLF_IDENTITY(workgroup_base, 0u + (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) >> 0u))) + _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 1u, 1u))), subgroup_id)) * subgroup_size + subgroup_local_id))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)), workgroup_base))))), 0u + (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), uint(uvec4(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), 1u, ((_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (1u)))) - 0u) << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))), 1u)))) >> 0u))) + _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 1u, 1u))), subgroup_id)) * subgroup_size + subgroup_local_id, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, 1u, _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, max(0u, 0u))))))), 0u + (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)) | (workgroup_base)), _GLF_IDENTITY(~ (~ (workgroup_base)), min(~ (~ (workgroup_base)), ~ (~ (workgroup_base)))))) >> _GLF_IDENTITY(0u, uint(uvec3(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u, 1u)))))) + _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 1u, 1u))), subgroup_id)) * subgroup_size + subgroup_local_id))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u + (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) >> 0u))) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, _GLF_IDENTITY(1u, ~ (~ (1u))), 1u))), subgroup_id)) * subgroup_size, 1u * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 1u, 1u))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 1u, 1u))), (_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 1u, 1u)))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))), subgroup_id)), (true ? _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 1u, 1u))), 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 1u, 1u))), (_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 1u, 1u)))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 1u, 1u))), (_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 1u, 1u)))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 1u, 1u))), (_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 1u, 1u)))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 1u, 1u))), (_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 1u, 1u)))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 1u, 1u))), (_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 1u, 1u)))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))), 0u | ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 1u, 1u))), (_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 1u, 1u)))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 1u, 1u))), (_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 1u, 1u)))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 1u, 1u))), (_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 1u, 1u)))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 1u, 1u))), (_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 1u, 1u)))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 1u, 1u))), (_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 1u, 1u)))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))))), subgroup_id)) : _GLF_FUZZED(workgroup_id))) * subgroup_size)) + subgroup_local_id, ~ (~ (_GLF_IDENTITY(workgroup_base, 0u + (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) >> 0u), (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) >> 0u)) | (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) >> 0u))))) + _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 1u, _GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, (1u) + 0u)))))), subgroup_id)) * subgroup_size + subgroup_local_id)))) << 0u))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u + (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) >> 0u))) + _GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u), _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec3(subgroup_id, 1u, 1u)), uint(uvec4(uint(uvec3(subgroup_id, 1u, 1u)), 1u, 0u, 1u)))), subgroup_id)) * subgroup_size + subgroup_local_id, ~ (~ (_GLF_IDENTITY(workgroup_base, 0u + (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), (false ? _GLF_FUZZED(58549u) : _GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) << 0u)))))), max((_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), (false ? _GLF_FUZZED(58549u) : _GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) << 0u)))))), (_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), (false ? _GLF_FUZZED(58549u) : _GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) << 0u)))))))) >> 0u))) + _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 1u, 1u))), subgroup_id)) * subgroup_size + subgroup_local_id))), max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u + (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) >> 0u))) + _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 1u, 1u))), subgroup_id)) * subgroup_size + subgroup_local_id, ~ (~ (_GLF_IDENTITY(workgroup_base, 0u + (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) >> 0u))) + _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 1u, 1u))), subgroup_id)) * subgroup_size + subgroup_local_id))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)), workgroup_base))))), 0u + (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), uint(uvec4(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), 1u, ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))), 1u)))) >> 0u))) + _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 1u, 1u))), subgroup_id)) * subgroup_size + subgroup_local_id, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, 1u, 0u))), 0u + (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)) | (workgroup_base)), _GLF_IDENTITY(~ (~ (workgroup_base)), min(~ (~ (workgroup_base)), ~ (~ (workgroup_base)))))) >> 0u))) + _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 1u, 1u))), subgroup_id)) * subgroup_size + subgroup_local_id))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u + (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) >> 0u))) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 1u, 1u))), subgroup_id)) * subgroup_size, 1u * (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 1u, 1u))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 1u, 1u))), (_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 1u, 1u)))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))), subgroup_id)) * subgroup_size)) + subgroup_local_id, ~ (~ (_GLF_IDENTITY(workgroup_base, 0u + (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) >> 0u))) + _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 1u, 1u))), subgroup_id)) * subgroup_size + subgroup_local_id)))) << 0u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u + (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) >> 0u))) + _GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u), _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec3(subgroup_id, 1u, 1u)), uint(uvec4(uint(uvec3(subgroup_id, 1u, 1u)), 1u, 0u, 1u)))), subgroup_id)) * subgroup_size + subgroup_local_id, ~ (~ (_GLF_IDENTITY(workgroup_base, 0u + (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), (false ? _GLF_FUZZED(58549u) : _GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) << 0u)))))), max((_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), (false ? _GLF_FUZZED(58549u) : _GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) << 0u)))))), (_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), (false ? _GLF_FUZZED(58549u) : _GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) << 0u)))))))) >> 0u))) + _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 1u, 1u))), subgroup_id)) * subgroup_size + subgroup_local_id))), max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u + (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) >> 0u))) + _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 1u, 1u))), subgroup_id)) * subgroup_size + subgroup_local_id, ~ (~ (_GLF_IDENTITY(workgroup_base, 0u + (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) >> 0u))) + _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 1u, 1u))), subgroup_id)) * subgroup_size + subgroup_local_id))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)), workgroup_base))))), 0u + (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), uint(uvec4(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), 1u, ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))), 1u)))) >> 0u))) + _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 1u, 1u))), subgroup_id)) * subgroup_size + subgroup_local_id, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, 1u, 0u))), 0u + (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)) | (workgroup_base)), _GLF_IDENTITY(~ (~ (workgroup_base)), min(~ (~ (workgroup_base)), ~ (~ (workgroup_base)))))) >> 0u))) + _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 1u, 1u))), subgroup_id)) * subgroup_size + subgroup_local_id))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u + (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) >> 0u))) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 1u, 1u))), subgroup_id)) * subgroup_size, 1u * (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 1u, 1u))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 1u, 1u))), (_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 1u, 1u)))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))), subgroup_id)) * subgroup_size)) + subgroup_local_id, ~ (~ (_GLF_IDENTITY(workgroup_base, 0u + (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) >> 0u))) + _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 1u, 1u))), subgroup_id)) * subgroup_size + subgroup_local_id)))) << 0u)))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u + (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) >> 0u))) + _GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u), _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec3(subgroup_id, 1u, 1u)), uint(uvec4(uint(uvec3(subgroup_id, 1u, 1u)), 1u, 0u, 1u)))), subgroup_id)) * subgroup_size + subgroup_local_id, ~ (~ (_GLF_IDENTITY(workgroup_base, 0u + (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), (false ? _GLF_FUZZED(58549u) : _GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) << 0u)))))), max((_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), (false ? _GLF_FUZZED(58549u) : _GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) << 0u)))))), (_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), (false ? _GLF_FUZZED(58549u) : _GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) << 0u)))))))) >> 0u))) + _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 1u, 1u))), subgroup_id)) * subgroup_size + subgroup_local_id))), max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u + (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) >> 0u))) + _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 1u, 1u))), subgroup_id)) * subgroup_size + subgroup_local_id, ~ (~ (_GLF_IDENTITY(workgroup_base, 0u + (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) >> 0u))) + _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 1u, 1u))), subgroup_id)) * subgroup_size + subgroup_local_id))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)), workgroup_base))))), 0u + (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), uint(uvec4(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), 1u, ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))), 1u)))) >> 0u))) + _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 1u, 1u))), subgroup_id)) * subgroup_size + subgroup_local_id, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, 1u, 0u))), 0u + (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)) | (workgroup_base)), _GLF_IDENTITY(~ (~ (workgroup_base)), min(~ (~ (workgroup_base)), ~ (~ (workgroup_base)))))) >> 0u))) + _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 1u, 1u))), subgroup_id)) * subgroup_size + subgroup_local_id))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u + (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) >> 0u))) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 1u, 1u))), subgroup_id)) * subgroup_size, 1u * (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 1u, 1u))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 1u, 1u))), (_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 1u, 1u)))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))), subgroup_id)) * subgroup_size)) + subgroup_local_id, ~ (~ (_GLF_IDENTITY(workgroup_base, 0u + (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) >> 0u))) + _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 1u, 1u))), subgroup_id)) * subgroup_size + subgroup_local_id)))) << 0u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u + (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) >> 0u))) + _GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u), _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec3(subgroup_id, 1u, 1u)), uint(uvec4(uint(uvec3(subgroup_id, 1u, 1u)), 1u, 0u, 1u)))), subgroup_id)) * subgroup_size + subgroup_local_id, ~ (~ (_GLF_IDENTITY(workgroup_base, 0u + (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), (false ? _GLF_FUZZED(58549u) : _GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) << 0u)))))), max((_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), (false ? _GLF_FUZZED(58549u) : _GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) << 0u)))))), (_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), (false ? _GLF_FUZZED(58549u) : _GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) << 0u)))))))) >> 0u))) + _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 1u, 1u))), subgroup_id)) * subgroup_size + subgroup_local_id))), max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u + (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) >> 0u))) + _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 1u, 1u))), subgroup_id)) * subgroup_size + subgroup_local_id, ~ (~ (_GLF_IDENTITY(workgroup_base, 0u + (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) >> 0u))) + _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 1u, 1u))), subgroup_id)) * subgroup_size + subgroup_local_id))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)), workgroup_base))))), 0u + (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), uint(uvec4(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), 1u, ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))), 1u)))) >> 0u))) + _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 1u, 1u))), subgroup_id)) * subgroup_size + subgroup_local_id, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, 1u, 0u))), 0u + (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)) | (workgroup_base)), _GLF_IDENTITY(~ (~ (workgroup_base)), min(~ (~ (workgroup_base)), ~ (~ (workgroup_base)))))) >> 0u))) + _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 1u, 1u))), subgroup_id)) * subgroup_size + subgroup_local_id))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u + (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) >> 0u))) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 1u, 1u))), subgroup_id)) * subgroup_size, 1u * (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 1u, 1u))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 1u, 1u))), (_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 1u, 1u)))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))), subgroup_id)) * subgroup_size)) + subgroup_local_id, ~ (~ (_GLF_IDENTITY(workgroup_base, 0u + (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) >> 0u))) + _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 1u, 1u))), subgroup_id)) * subgroup_size + subgroup_local_id)))) << 0u))))) | ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u + (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) >> 0u))) + _GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u), _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec3(subgroup_id, 1u, 1u)), uint(uvec4(uint(uvec3(subgroup_id, 1u, 1u)), 1u, 0u, 1u)))), subgroup_id)) * subgroup_size + subgroup_local_id, ~ (~ (_GLF_IDENTITY(workgroup_base, 0u + (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), (false ? _GLF_FUZZED(58549u) : _GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) << 0u)))))), max((_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), (false ? _GLF_FUZZED(58549u) : _GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) << 0u)))))), (_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), (false ? _GLF_FUZZED(58549u) : _GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) << 0u)))))))) >> 0u))) + _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 1u, 1u))), subgroup_id)) * subgroup_size + subgroup_local_id))), max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u + (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) >> 0u))) + _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 1u, 1u))), subgroup_id)) * subgroup_size + subgroup_local_id, ~ (~ (_GLF_IDENTITY(workgroup_base, 0u + (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) >> 0u))) + _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 1u, 1u))), subgroup_id)) * subgroup_size + subgroup_local_id))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)), workgroup_base))))), 0u + (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), uint(uvec4(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), 1u, ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))), 1u)))) >> 0u))) + _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 1u, 1u))), subgroup_id)) * subgroup_size + subgroup_local_id, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, 1u, 0u))), 0u + (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)) | (workgroup_base)), _GLF_IDENTITY(~ (~ (workgroup_base)), min(~ (~ (workgroup_base)), ~ (~ (workgroup_base)))))) >> 0u))) + _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 1u, 1u))), subgroup_id)) * subgroup_size + subgroup_local_id))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u + (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) >> 0u))) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 1u, 1u))), subgroup_id)) * subgroup_size, 1u * (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 1u, 1u))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 1u, 1u))), (_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 1u, 1u)))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))), subgroup_id)) * subgroup_size)) + subgroup_local_id, ~ (~ (_GLF_IDENTITY(workgroup_base, 0u + (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) >> 0u))) + _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 1u, 1u))), subgroup_id)) * subgroup_size + subgroup_local_id)))) << 0u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u + (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) >> 0u))) + _GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u), _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec3(subgroup_id, 1u, 1u)), uint(uvec4(uint(uvec3(subgroup_id, 1u, 1u)), 1u, 0u, 1u)))), subgroup_id)) * subgroup_size + subgroup_local_id, ~ (~ (_GLF_IDENTITY(workgroup_base, 0u + (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), (false ? _GLF_FUZZED(58549u) : _GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) << 0u)))))), max((_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), (false ? _GLF_FUZZED(58549u) : _GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) << 0u)))))), (_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), (false ? _GLF_FUZZED(58549u) : _GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) << 0u)))))))) >> 0u))) + _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 1u, 1u))), subgroup_id)) * subgroup_size + subgroup_local_id))), max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u + (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) >> 0u))) + _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 1u, 1u))), subgroup_id)) * subgroup_size + subgroup_local_id, ~ (~ (_GLF_IDENTITY(workgroup_base, 0u + (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) >> 0u))) + _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 1u, 1u))), subgroup_id)) * subgroup_size + subgroup_local_id))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)), workgroup_base))))), 0u + (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), uint(uvec4(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), 1u, ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))), 1u)))) >> 0u))) + _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 1u, 1u))), subgroup_id)) * subgroup_size + subgroup_local_id, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, 1u, 0u))), 0u + (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)) | (workgroup_base)), _GLF_IDENTITY(~ (~ (workgroup_base)), min(~ (~ (workgroup_base)), ~ (~ (workgroup_base)))))) >> 0u))) + _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 1u, 1u))), subgroup_id)) * subgroup_size + subgroup_local_id))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u + (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) >> 0u))) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 1u, 1u))), subgroup_id)) * subgroup_size, 1u * (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 1u, 1u))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 1u, 1u))), (_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 1u, 1u)))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))), subgroup_id)) * subgroup_size)) + subgroup_local_id, ~ (~ (_GLF_IDENTITY(workgroup_base, 0u + (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) >> 0u))) + _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 1u, 1u))), subgroup_id)) * subgroup_size + subgroup_local_id)))) << 0u))))))), 0u, 0u, 0u)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(uint(uvec4((_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1), 0u, _GLF_IDENTITY((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), uint(8u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(8u), (uint(8u)) >> 0u), uint(8u)))))), ((_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) << 0u), 0u)) >> _GLF_IDENTITY(uint(8u), uint(8u)))) << 0u), 0u)), (uint(uvec4((subgroup_local_id + 1), 0u, (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(8u), uint(8u)), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) << 0u) >> _GLF_IDENTITY(uint(8u), uint(8u)), (_GLF_IDENTITY(0u, (0u) << 0u) >> _GLF_IDENTITY(uint(8u), uint(8u))) >> 0u)))), _GLF_IDENTITY(0u, (0u) | (0u))))) - 0u)) % subgroup_size), (true ? _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4((subgroup_local_id + 1), 0u, (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), 0u ^ (uint(8u))), uint(8u))), 0u)), (uint(uvec4((_GLF_IDENTITY(subgroup_local_id + 1, clamp(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(min(subgroup_local_id + 1, subgroup_local_id + 1), uint(uvec4(min(subgroup_local_id + 1, subgroup_local_id + 1), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), (1u ^ 0u))))), _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)), subgroup_local_id + 1))), 0u, _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(8u), uint(8u))), ((0u >> _GLF_IDENTITY(uint(8u), uint(8u)))) >> 0u), 0u))) - 0u), (_GLF_IDENTITY(uint(uvec4((subgroup_local_id + 1), 0u, (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), (uint(8u)) / 1u), uint(8u))), 0u)), (uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u, (0u >> _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), _GLF_IDENTITY((uint(8u)) | 0u, (0u >> _GLF_IDENTITY(uint(1u), uint(1u))) + (_GLF_IDENTITY((uint(8u)) | 0u, (true ? (uint(8u)) | 0u : _GLF_FUZZED(subgroup_local_id)))))))), 0u), max(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u, (0u >> _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), _GLF_IDENTITY((uint(8u)) | 0u, (0u >> _GLF_IDENTITY(uint(1u), uint(1u))) + (_GLF_IDENTITY((uint(8u)) | 0u, (true ? (uint(8u)) | 0u : _GLF_FUZZED(subgroup_local_id)))))))), 0u), (false ? _GLF_FUZZED(uvec4(32923u, 149445u, 116216u, 191784u)) : uvec4(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u, (0u >> _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), _GLF_IDENTITY((uint(8u)) | 0u, (0u >> _GLF_IDENTITY(uint(1u), uint(1u))) + (_GLF_IDENTITY((uint(8u)) | 0u, (true ? (uint(8u)) | 0u : _GLF_FUZZED(subgroup_local_id)))))))), 0u))), uvec4(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u, (0u >> _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), _GLF_IDENTITY((uint(8u)) | 0u, (0u >> _GLF_IDENTITY(uint(1u), uint(1u))) + (_GLF_IDENTITY((uint(8u)) | 0u, (true ? (uint(8u)) | 0u : _GLF_FUZZED(subgroup_local_id)))))))), 0u))))) - 0u)) ^ 0u)) % subgroup_size), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | (_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(min((subgroup_local_id + 1), (subgroup_local_id + 1)), max(_GLF_IDENTITY(min((subgroup_local_id + 1), (subgroup_local_id + 1)), min(min((subgroup_local_id + 1), (subgroup_local_id + 1)), min((subgroup_local_id + 1), (subgroup_local_id + 1)))), min((subgroup_local_id + 1), (subgroup_local_id + 1))))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4((subgroup_local_id + 1), 0u, (0u >> _GLF_IDENTITY(uint(8u), uint(8u))), 0u)), (uint(uvec4((subgroup_local_id + 1), 0u, (0u >> _GLF_IDENTITY(uint(8u), uint(8u))), 0u))) - 0u), (_GLF_IDENTITY(uint(uvec4((subgroup_local_id + 1), 0u, (0u >> _GLF_IDENTITY(uint(8u), uint(8u))), 0u)), (uint(uvec4((_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (_GLF_IDENTITY(subgroup_local_id + 1, ~ (_GLF_IDENTITY(~ (subgroup_local_id + 1), 0u ^ (~ (subgroup_local_id + 1))))))))), 0u, _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(8u), uint(8u))), uint(uvec4(_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(8u), uint(8u))), max((0u >> _GLF_IDENTITY(uint(8u), uint(8u))), (0u >> _GLF_IDENTITY(uint(8u), uint(8u))))), (0u << _GLF_IDENTITY(uint(4u), uint(4u))), 0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, 0u + (0u))))), 0u))))), 0u))) - 0u)) ^ 0u)) % subgroup_size))), (true ? workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4((subgroup_local_id + 1), 0u, (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), 0u ^ (uint(8u))), uint(8u))), 0u)), (uint(uvec4((_GLF_IDENTITY(subgroup_local_id + 1, clamp(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)), _GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, (1) | (1)))), min(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, (1) | (1)))), _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, (1) | (1)))), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, (1) | (1)))), (subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, (1) | (1))))) << 0u)))))) | (subgroup_local_id + 1)), subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(59742) : _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, min(1, 1)), 1))))))), _GLF_IDENTITY(0u, (0u) | 0u), (0u >> _GLF_IDENTITY(uint(8u), uint(8u))), 0u))) - 0u), (_GLF_IDENTITY(uint(uvec4((subgroup_local_id + 1), 0u, (0u >> _GLF_IDENTITY(uint(8u), uint(8u))), 0u)), (uint(uvec4(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), 0u, (0u >> _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), _GLF_IDENTITY((uint(8u)), min((uint(8u)), (uint(8u)))) | 0u))), 0u))) - 0u)) ^ 0u)) % subgroup_size), _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | (_GLF_IDENTITY((subgroup_local_id + 1), min(_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | 0u))), (subgroup_local_id + 1))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4((subgroup_local_id + 1), 0u, (0u >> _GLF_IDENTITY(uint(8u), uint(8u))), 0u)), (uint(uvec4((subgroup_local_id + 1), 0u, (0u >> _GLF_IDENTITY(uint(8u), uint(8u))), 0u))) - 0u), (_GLF_IDENTITY(uint(uvec4((subgroup_local_id + 1), _GLF_IDENTITY(0u, (0u) | (0u)), (0u >> _GLF_IDENTITY(uint(8u), uint(8u))), 0u)), (_GLF_IDENTITY(uint(uvec4((subgroup_local_id + 1), 0u, _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(8u), uint(8u))), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, (_GLF_IDENTITY(8u, 0u | (8u))) - 0u))), 0u | (0u >> _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, (_GLF_IDENTITY(8u, 0u | (8u))) - 0u)))))), (_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, (_GLF_IDENTITY(8u, 0u | (8u))) - 0u)))), ((0u >> _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, (_GLF_IDENTITY(8u, 0u | (8u))) - 0u))))) / 1u)) ^ 0u), max((0u >> _GLF_IDENTITY(uint(8u), uint(8u))), (0u >> _GLF_IDENTITY(uint(8u), uint(8u))))), (_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(0u, 0u), (true ? uvec2(0u, 0u) : _GLF_FUZZED((uvec2(108643u, 3913u) ^ uvec2(139255u, 44001u))))), uvec2(0u, 0u) ^ (_GLF_IDENTITY(uvec2(0u, 0u), (true ? uvec2(0u, 0u) : _GLF_FUZZED((uvec2(108643u, 3913u) ^ uvec2(139255u, 44001u))))))))) << _GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(4u, (4u) << (0u | 0u))))), 0u, 0u))), 0u)), (uint(uvec4((subgroup_local_id + 1), 0u, _GLF_IDENTITY((_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(8u), uint(8u)), 0u | (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(8u), uint(8u)), (0u >> _GLF_IDENTITY(uint(8u), uint(8u))) | (0u >> _GLF_IDENTITY(uint(8u), uint(8u))))))), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, (_GLF_IDENTITY(8u, 0u | (8u))) - 0u)))), (_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, (_GLF_IDENTITY(8u, 0u | (8u))) - 0u)))), ((0u >> _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, (_GLF_IDENTITY(8u, 0u | (8u))) - 0u))))) / 1u)) ^ 0u), max((0u >> _GLF_IDENTITY(uint(8u), uint(8u))), (0u >> _GLF_IDENTITY(uint(8u), uint(8u))))), min(_GLF_IDENTITY(_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, (_GLF_IDENTITY(8u, 0u | (8u))) - 0u)))), (_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, (_GLF_IDENTITY(8u, 0u | (8u))) - 0u)))), ((0u >> _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, (_GLF_IDENTITY(8u, 0u | (8u))) - 0u))))) / 1u)) ^ 0u), max((0u >> _GLF_IDENTITY(uint(8u), uint(8u))), (0u >> _GLF_IDENTITY(uint(8u), uint(8u))))), _GLF_IDENTITY(_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, (_GLF_IDENTITY(8u, 0u | (8u))) - 0u)))), (_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, (_GLF_IDENTITY(8u, 0u | (8u))) - 0u)))), ((0u >> _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, (_GLF_IDENTITY(8u, 0u | (8u))) - 0u))))) / 1u)) ^ 0u), max((0u >> _GLF_IDENTITY(uint(8u), uint(8u))), (0u >> _GLF_IDENTITY(uint(8u), uint(8u))))))), (_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec2(0u, 0u), (true ? uvec2(0u, 0u) : _GLF_FUZZED((uvec2(108643u, 3913u) ^ uvec2(139255u, 44001u))))))) << _GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(4u, (4u) << (0u | 0u))))), 0u, 0u))), 0u))) | (uint(uvec4((subgroup_local_id + 1), _GLF_IDENTITY(0u, ~ (~ (0u))), _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(8u), uint(8u))), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0u, min(0u, 0u)) >> _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, (_GLF_IDENTITY(8u, 0u | (8u))) - 0u)))), (_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, (_GLF_IDENTITY(8u, 0u | (8u))) - 0u)))), ((0u >> _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, (_GLF_IDENTITY(8u, 0u | (8u))) - _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, (0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))))) / 1u)) ^ 0u), max((0u >> _GLF_IDENTITY(uint(8u), uint(8u))), (0u >> _GLF_IDENTITY(uint(8u), uint(8u))))), (_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec2(0u, 0u), (true ? uvec2(0u, 0u) : _GLF_FUZZED((uvec2(108643u, 3913u) ^ uvec2(139255u, 44001u))))))) << _GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(4u, (4u) << (0u | 0u))))), 0u, 0u))), 0u))))) - 0u)) ^ 0u)) % subgroup_size)), max(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), min(_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | 0u))), (subgroup_local_id + 1))), ((0u | 0u) | 0u) ^ (_GLF_IDENTITY((subgroup_local_id + 1), min(_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | 0u))), (subgroup_local_id + 1))))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1), 0u, (0u >> _GLF_IDENTITY(uint(8u), uint(8u))), 0u)), (uint(uvec4((subgroup_local_id + 1), 0u, (0u >> _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, (8u) - (0u ^ 0u))))), 0u))) - 0u), (_GLF_IDENTITY(uint(uvec4((subgroup_local_id + 1), 0u, (0u >> _GLF_IDENTITY(uint(8u), uint(8u))), 0u)), (_GLF_IDENTITY(uint(uvec4((subgroup_local_id + 1), 0u, _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(8u), uint(8u))), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, (_GLF_IDENTITY(8u, 0u | (8u))) - 0u)))), (_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, (_GLF_IDENTITY(8u, 0u | (8u))) - 0u)))), ((0u >> _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, (_GLF_IDENTITY(_GLF_IDENTITY(8u, 0u | (8u)), 0u ^ (_GLF_IDENTITY(8u, 0u | (8u))))) - 0u))))) / 1u)) ^ 0u), max((0u >> _GLF_IDENTITY(uint(8u), uint(8u))), (0u >> _GLF_IDENTITY(uint(8u), uint(8u))))), (_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec2(0u, 0u), (true ? uvec2(0u, 0u) : _GLF_FUZZED((uvec2(108643u, 3913u) ^ uvec2(139255u, 44001u))))))) << _GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(4u, (4u) << (0u | 0u))))), 0u, 0u))), 0u)), (uint(uvec4((subgroup_local_id + 1), 0u, _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(8u), uint(8u))), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, (_GLF_IDENTITY(8u, 0u | (8u))) - 0u)))), (_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, (_GLF_IDENTITY(8u, 0u | (8u))) - 0u)))), ((0u >> _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, (_GLF_IDENTITY(8u, 0u | (8u))) - 0u))))) / 1u)) | ((0u | 0u) << _GLF_IDENTITY(uint(0u), uint(0u)))), (_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, (_GLF_IDENTITY(8u, 0u | (8u))) - 0u)))), ((0u >> _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, (_GLF_IDENTITY(8u, 0u | (8u))) - 0u))))) / 1u)) ^ _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_base)))), max((0u >> _GLF_IDENTITY(uint(8u), uint(8u))), (0u >> _GLF_IDENTITY(uint(8u), uint(8u))))), (_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec2(0u, 0u), (true ? uvec2(0u, 0u) : _GLF_FUZZED((uvec2(108643u, 3913u) ^ uvec2(139255u, 44001u))))))) << _GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(4u, (4u) << (0u | 0u))))), 0u, 0u))), 0u))) | (uint(uvec4((subgroup_local_id + 1), 0u, _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(8u, uint(uint(8u)))), uint(8u))), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, (_GLF_IDENTITY(8u, 0u | (8u))) - 0u)))), (_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, (_GLF_IDENTITY(8u, 0u | (8u))) - 0u)))), ((0u >> _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, (_GLF_IDENTITY(8u, 0u | (8u))) - 0u))))) / 1u)) ^ 0u), max((0u >> _GLF_IDENTITY(uint(8u), uint(8u))), (0u >> _GLF_IDENTITY(uint(8u), uint(8u))))), (_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec2(0u, 0u), (true ? uvec2(0u, 0u) : _GLF_FUZZED((uvec2(108643u, 3913u) ^ uvec2(139255u, 44001u))))))) << _GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(4u, (4u) << (0u | 0u))))), 0u, 0u))), 0u))))) - 0u)) ^ 0u)) % subgroup_size), (true ? _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), min(_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | 0u))), (subgroup_local_id + 1))), ((0u | 0u) | 0u) ^ (_GLF_IDENTITY((subgroup_local_id + 1), min(_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | 0u))), (subgroup_local_id + 1))))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1), 0u, (0u >> _GLF_IDENTITY(uint(8u), uint(8u))), 0u)), (uint(uvec4((subgroup_local_id + 1), 0u, (0u >> _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, (8u) - (0u ^ 0u))))), 0u))) - 0u), (_GLF_IDENTITY(uint(uvec4((subgroup_local_id + 1), 0u, (0u >> _GLF_IDENTITY(uint(8u), uint(8u))), 0u)), (_GLF_IDENTITY(uint(uvec4((subgroup_local_id + 1), 0u, _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(8u), uint(8u))), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, (_GLF_IDENTITY(8u, 0u | (8u))) - 0u)))), (_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, (_GLF_IDENTITY(8u, 0u | (8u))) - 0u)))), ((0u >> _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, (_GLF_IDENTITY(_GLF_IDENTITY(8u, 0u | (8u)), 0u ^ (_GLF_IDENTITY(8u, 0u | (8u))))) - 0u))))) / 1u)) ^ 0u), max((0u >> _GLF_IDENTITY(uint(8u), uint(8u))), (0u >> _GLF_IDENTITY(uint(8u), uint(8u))))), (_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec2(0u, 0u), (true ? uvec2(0u, 0u) : _GLF_FUZZED((uvec2(108643u, 3913u) ^ uvec2(139255u, 44001u))))))) << _GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(4u, (4u) << (0u | 0u))))), 0u, 0u))), 0u)), (uint(uvec4((subgroup_local_id + 1), 0u, _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(8u), uint(8u))), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, (_GLF_IDENTITY(8u, 0u | (8u))) - 0u)))), (_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, (_GLF_IDENTITY(8u, 0u | (8u))) - 0u)))), ((0u >> _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, (_GLF_IDENTITY(8u, 0u | (8u))) - 0u))))) / 1u)) | ((0u | 0u) << _GLF_IDENTITY(uint(0u), uint(0u)))), (_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, (_GLF_IDENTITY(8u, 0u | (8u))) - 0u)))), ((0u >> _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, (_GLF_IDENTITY(8u, 0u | (8u))) - 0u))))) / 1u)) ^ _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_base)))), max((0u >> _GLF_IDENTITY(uint(8u), uint(8u))), (0u >> _GLF_IDENTITY(uint(8u), uint(8u))))), (_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec2(0u, 0u), (true ? uvec2(0u, 0u) : _GLF_FUZZED((uvec2(108643u, 3913u) ^ uvec2(139255u, 44001u))))))) << _GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(4u, (4u) << (0u | 0u))))), 0u, 0u))), 0u))) | (uint(uvec4((subgroup_local_id + 1), 0u, _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(8u, uint(uint(8u)))), uint(8u))), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, (_GLF_IDENTITY(8u, 0u | (8u))) - 0u)))), (_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, (_GLF_IDENTITY(8u, 0u | (8u))) - 0u)))), ((0u >> _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, (_GLF_IDENTITY(8u, 0u | (8u))) - 0u))))) / 1u)) ^ 0u), max((0u >> _GLF_IDENTITY(uint(8u), uint(8u))), (0u >> _GLF_IDENTITY(uint(8u), uint(8u))))), (_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec2(0u, 0u), (true ? uvec2(0u, 0u) : _GLF_FUZZED((uvec2(108643u, 3913u) ^ uvec2(139255u, 44001u))))))) << _GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(4u, (4u) << (0u | 0u))))), 0u, 0u))), 0u))))) - 0u)) ^ 0u)) % subgroup_size) : _GLF_FUZZED(virtual_gid)))), ~ (~ ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(uint(subgroup_local_id), clamp(uint(subgroup_local_id), uint(subgroup_local_id), uint(subgroup_local_id))))) + 1), ((subgroup_local_id + 1)) | (_GLF_IDENTITY((subgroup_local_id + 1), min(_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | 0u))), (subgroup_local_id + 1))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4((subgroup_local_id + 1), 0u, (0u >> _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), min(uint(8u), _GLF_IDENTITY(uint(8u), 0u | (uint(8u))))))), 0u)), (uint(uvec4((subgroup_local_id + 1), 0u, (0u >> _GLF_IDENTITY(uint(8u), uint(8u))), 0u))) - 0u), (_GLF_IDENTITY(uint(uvec4((subgroup_local_id + 1), 0u, (0u >> _GLF_IDENTITY(uint(8u), uint(8u))), 0u)), (_GLF_IDENTITY(uint(uvec4((subgroup_local_id + 1), 0u, _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(8u), uint(8u))), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, (_GLF_IDENTITY(_GLF_IDENTITY(8u, 0u | (8u)), (_GLF_IDENTITY(8u, 0u | (8u))) << 0u)) - 0u)))), (_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, (_GLF_IDENTITY(8u, 0u | (8u))) - 0u)))), ((0u >> _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, (_GLF_IDENTITY(8u, 0u | (8u))) - 0u))))) / 1u)) ^ 0u), max((0u >> _GLF_IDENTITY(uint(8u), uint(8u))), (0u >> _GLF_IDENTITY(uint(8u), uint(8u))))), (_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec2(0u, 0u), _GLF_IDENTITY((true ? uvec2(0u, 0u) : _GLF_FUZZED((uvec2(108643u, 3913u) ^ uvec2(139255u, 44001u)))), (true ? (true ? uvec2(0u, 0u) : _GLF_FUZZED((uvec2(108643u, 3913u) ^ uvec2(139255u, 44001u)))) : _GLF_FUZZED(uvec2(111865u, 166751u))))))) << _GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(4u, (4u) << (0u | 0u))))), 0u, 0u))), 0u)), (uint(uvec4((subgroup_local_id + 1), 0u, _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(8u), uint(8u))), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, (_GLF_IDENTITY(8u, 0u | (8u))) - 0u))), 0u + (_GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, (_GLF_IDENTITY(8u, 0u | (8u))) - 0u)))))), (_GLF_IDENTITY((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), min(_GLF_IDENTITY(uint(8u), (uint(8u)) - 0u), uint(8u))), uint(_GLF_IDENTITY(8u, (_GLF_IDENTITY(8u, 0u | (8u))) - 0u)))), ((0u >> _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, (_GLF_IDENTITY(8u, 0u | (8u))) - 0u))))) / 1u)) ^ 0u), max((0u >> _GLF_IDENTITY(uint(8u), uint(8u))), (0u >> _GLF_IDENTITY(uint(8u), uint(8u))))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec2(0u, 0u), (true ? uvec2(0u, 0u) : _GLF_FUZZED((uvec2(108643u, 3913u) ^ uvec2(139255u, 44001u))))))), (_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec2(0u, 0u), (_GLF_IDENTITY(true ? uvec2(0u, 0u) : _GLF_FUZZED((uvec2(108643u, 3913u) ^ uvec2(_GLF_IDENTITY(139255u, (_GLF_IDENTITY(139255u, (139255u) | 0u)) * uint(_GLF_ONE(1.0, injectionSwitch.y))), 44001u))), uvec2(1u, 1u) * (true ? uvec2(0u, 0u) : _GLF_FUZZED((uvec2(108643u, 3913u) ^ uvec2(_GLF_IDENTITY(139255u, (_GLF_IDENTITY(139255u, (139255u) | 0u)) * uint(_GLF_ONE(1.0, injectionSwitch.y))), 44001u)))))))))) + 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), min(uint(4u), uint(4u))), uint(_GLF_IDENTITY(4u, (4u) << (0u | 0u))))), 0u, 0u))), 0u))) | (uint(uvec4(_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1))), 0u, _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(8u), uint(8u))), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, (_GLF_IDENTITY(8u, 0u | (8u))) - 0u)))), (_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, (_GLF_IDENTITY(8u, 0u | (8u))) - 0u)))), ((0u >> _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, (_GLF_IDENTITY(8u, 0u | (8u))) - 0u))))) / 1u)) ^ 0u), max((0u >> _GLF_IDENTITY(uint(8u), uint(8u))), (0u >> _GLF_IDENTITY(uint(8u), uint(8u))))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec2(0u, 0u), (true ? uvec2(0u, 0u) : _GLF_FUZZED((uvec2(108643u, 3913u) ^ uvec2(139255u, 44001u))))))), min(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec2(0u, 0u), (true ? uvec2(0u, 0u) : _GLF_FUZZED((uvec2(108643u, 3913u) ^ uvec2(139255u, 44001u))))))), _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec2(0u, 0u), (true ? uvec2(0u, 0u) : _GLF_FUZZED((uvec2(108643u, 3913u) ^ uvec2(139255u, 44001u))))))))) << _GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(4u, (4u) << (0u | 0u))))), 0u, 0u))), 0u))))) - 0u)) ^ 0u)) % subgroup_size))))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | (_GLF_IDENTITY((subgroup_local_id + 1), min(_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | 0u))), (subgroup_local_id + 1))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4((subgroup_local_id + 1), 0u, (0u >> _GLF_IDENTITY(uint(8u), uint(8u))), 0u)), (uint(uvec4((subgroup_local_id + 1), _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(num_workgroup) : 0u)), (0u >> _GLF_IDENTITY(uint(8u), uint(8u))), 0u))) - 0u), (_GLF_IDENTITY(uint(uvec4((subgroup_local_id + 1), 0u, (0u >> _GLF_IDENTITY(uint(8u), uint(8u))), 0u)), (_GLF_IDENTITY(uint(uvec4((subgroup_local_id + 1), 0u, _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, max(8u, _GLF_IDENTITY(8u, max(8u, 8u))))))), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, (_GLF_IDENTITY(_GLF_IDENTITY(8u, 0u | (8u)), (_GLF_IDENTITY(_GLF_IDENTITY(8u, 0u | (8u)), min(_GLF_IDENTITY(8u, 0u | (8u)), _GLF_IDENTITY(_GLF_IDENTITY(8u, 0u | (8u)), ~ (~ (_GLF_IDENTITY(8u, 0u | (8u)))))))) ^ 0u)) - 0u)))), (_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, (_GLF_IDENTITY(8u, 0u | (8u))) - 0u)))), ((0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(8u, clamp(8u, 8u, 8u))), uint(_GLF_IDENTITY(8u, (_GLF_IDENTITY(8u, 0u | (8u))) - 0u))))) / 1u)) ^ 0u), max((0u >> _GLF_IDENTITY(uint(8u), uint(8u))), (0u >> _GLF_IDENTITY(uint(8u), uint(8u))))), (_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec2(0u, 0u), (true ? uvec2(0u, 0u) : _GLF_FUZZED((uvec2(108643u, 3913u) ^ uvec2(_GLF_IDENTITY(139255u, (0u | 0u) | (139255u)), 44001u))))))) << _GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(4u, (4u) << (0u | 0u))))), 0u, 0u))), 0u)), (uint(uvec4(_GLF_IDENTITY((subgroup_local_id + 1), (true ? (subgroup_local_id + 1) : _GLF_FUZZED(uvec4(174936u, 53993u, 52810u, 84252u)[1]))), 0u, _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(8u), uint(8u))), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, (_GLF_IDENTITY(8u, 0u | _GLF_IDENTITY((8u), 0u | ((8u))))) - 0u)))), (_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, (_GLF_IDENTITY(8u, 0u | (8u))) - 0u)))), ((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) >> _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, (_GLF_IDENTITY(8u, 0u | (8u))) - 0u))))) / 1u)) ^ 0u), max((0u >> _GLF_IDENTITY(uint(8u), uint(8u))), (0u >> _GLF_IDENTITY(uint(8u), uint(8u))))), (_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec2(0u, 0u), (true ? uvec2(0u, 0u) : _GLF_FUZZED((uvec2(108643u, 3913u) ^ uvec2(139255u, 44001u))))))) << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(4u, (4u) << (0u | 0u)))), (_GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(4u, (4u) << (0u | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_base) : 0u))) | (_GLF_IDENTITY(0u, (0u) | (0u))))))))) - 0u)), 0u, 0u))), 0u))) | (uint(uvec4((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + 1), 0u, _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(8u), uint(8u))), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, (_GLF_IDENTITY(8u, 0u | (8u))) - 0u)))), (_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, (_GLF_IDENTITY(8u, 0u | (8u))) - 0u)))), ((0u >> _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(_GLF_IDENTITY(8u, (_GLF_IDENTITY(8u, 0u | (8u))) - 0u)), (uint(_GLF_IDENTITY(8u, (_GLF_IDENTITY(8u, 0u | (8u))) - 0u))) << (0u ^ 0u))))) / 1u)) ^ _GLF_IDENTITY(0u, min(0u, 0u))), max((0u >> _GLF_IDENTITY(uint(8u), uint(8u))), (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(8u, (8u) >> 0u)), uint(8u))))), (_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec2(0u, 0u), (true ? uvec2(0u, 0u) : _GLF_FUZZED((uvec2(108643u, 3913u) ^ uvec2(139255u, 44001u))))))) << _GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(4u, (4u) << (0u | 0u))))), 0u, 0u))), 0u))))) - _GLF_IDENTITY(0u, (0u) | 0u))) ^ 0u)) % subgroup_size))))) : _GLF_FUZZED(workgroup_size))) : _GLF_FUZZED(packSnorm4x8(vec4(567.304, -1172.1436, 7797.6228, -0.1)))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 buf[virtual_gid] = 1;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-54.78)), float(injectionSwitch.x), bool(true))), _GLF_ONE(1.0, injectionSwitch.y) * (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-54.78)), float(injectionSwitch.x), bool(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), (true) && true)))))))) > injectionSwitch.y)), true && (((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-54.78)), float(injectionSwitch.x), bool(true))), _GLF_ONE(1.0, injectionSwitch.y) * (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-54.78)), float(injectionSwitch.x), bool(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), (true) && true)))))))) > injectionSwitch.y))))))))))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       barrier();
      }
    }
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  barrier();
 for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0)))); _injected_loop_counter --)
  {
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bool(true)))))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bool(! (false))), bool(bvec4(bool(bool(! (false))), true, false, true))))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))), clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), max((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))))) * mat2(1.0), (injectionSwitch) * mat2(1.0)))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), max((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))), (injectionSwitch) * mat2(1.0)))))).x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) - vec2(0.0, 0.0)).y))))
            {
             if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))))))
              barrier();
             barrier();
            }
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   do
                    {
                     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                      barrier();
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                       do
                        {
                         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))))
                          barrier();
                         barrier();
                        }
                       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))));
                      }
                     barrier();
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                }
              }
             else
              {
               if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
                barrier();
              }
            }
           barrier();
          }
         if(subgroup_local_id + 1 < subgroup_size)
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _GLF_IDENTITY(_injected_loop_counter --, (_GLF_IDENTITY(_injected_loop_counter --, ~ (~ (_injected_loop_counter --)))) | 0))
              {
               barrier();
              }
            }
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), true && (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), (! (! (true))) || false)))))))))
              {
               atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 0);
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
              }
            }
           else
            {
            }
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false), true)), ! (! (bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true))))))), ! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))))), true)), bool(bvec3(bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))))), true)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true))))))))), false || ((! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))))), true)), bool(bvec3(bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))))), true)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)))))))))))))
            {
             do
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
               barrier();
               if(_GLF_DEAD(false))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           subgroupAll(false);
           if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false), false, false)))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), ! (! (_GLF_DEAD(false)))), false), false, false)))))))))
            barrier();
          }
         else
          {
           do
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(7480.4165) : _GLF_IDENTITY(1.0, float(vec2(1.0, 0.0)))))) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, 0.0, 0.0), mat2(mat2(mat2(injectionSwitch.y, 0.0, 0.0, 0.0))))))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(7480.4165) : _GLF_IDENTITY(1.0, float(vec2(1.0, 0.0)))))) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, 0.0, 0.0), mat2(_GLF_IDENTITY(mat2(mat2(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))), 0.0, 0.0, 0.0)), mat2(mat4x2(mat2(mat2(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))), 0.0, 0.0, 0.0)))))))))), bool(bool((_GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(7480.4165) : _GLF_IDENTITY(1.0, float(vec2(1.0, 0.0)))))) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, 0.0, 0.0, 0.0), mat2(mat2(_GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, 0.0, 0.0), mat2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (mat2(injectionSwitch.y, 0.0, 0.0, 0.0))))))))))))))))))
              {
               do
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), false || (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true))))))
                    {
                     barrier();
                    }
                   else
                    {
                    }
                  }
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, false, true, false))), (injectionSwitch.x < injectionSwitch.y))))
                    {
                     barrier();
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   else
                    {
                    }
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 do
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                    {
                     barrier();
                    }
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0))), injectionSwitch)))).y))));
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                }
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                }
               else
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                  }
                 else
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                }
              }
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
              {
               do
                {
                 if(_GLF_DEAD(false))
                  {
                   do
                    {
                     barrier();
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                }
               while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)), bool(bool(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true))))))));
               barrier();
              }
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
           for(int _injected_loop_counter = _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, int(ivec2(0, 0)))), 0 + (~ (_GLF_IDENTITY(0, int(ivec2(0, 0)))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               barrier();
              }
             else
              {
              }
            }
           for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(7, (false ? _GLF_FUZZED(41967) : 7))), int(7))); _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), float(_GLF_FUZZED(443.327)), bool(false)), max(_GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), float(_GLF_FUZZED(443.327)), bool(false)), min(mix(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), float(_GLF_FUZZED(443.327)), bool(false)), mix(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), float(_GLF_FUZZED(443.327)), bool(false)))), mix(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), float(_GLF_FUZZED(443.327)), bool(false))))))), _GLF_IDENTITY((false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), clamp(int(_GLF_ONE(1.0, injectionSwitch.y)), int(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (int(_GLF_ONE(1.0, injectionSwitch.y))) ^ 0)))), (true ? (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), clamp(int(_GLF_ONE(1.0, injectionSwitch.y)), int(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (int(_GLF_ONE(1.0, injectionSwitch.y))) ^ 0)))) : _GLF_FUZZED(-75814))))); _injected_loop_counter ++)
            {
             do
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
               else
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 0);
                  }
                 else
                  {
                  }
                }
               if(_GLF_DEAD(false))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               barrier();
              }
             else
              {
              }
            }
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), (_GLF_IDENTITY(bool(bvec4(false, false, true, false)), bool(bvec4(bool(bvec4(false, false, true, false)), true, false, false)))) || false)))))) || false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 barrier();
                }
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), 1.0, log(1.0), determinant(mat3(1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0), mat2x3(mat4x3(mat2x3(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), 1.0, log(1.0), determinant(mat3(1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0))))))))))))
                {
                }
               else
                {
                 barrier();
                }
               if(_GLF_DEAD(false))
                barrier();
              }
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0))))))) && _GLF_IDENTITY(true, (true) || false))))))
              barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), false || (_GLF_IDENTITY(bool(bvec4(false, true, false, true)), bool(bool(bool(bvec4(false, true, false, true)))))))))))
                  barrier();
                 barrier();
                }
               barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             do
              {
               subgroupAll(true);
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                {
                 do
                  {
                   barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                 if(_GLF_DEAD(false))
                  barrier();
                }
              }
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
          }
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < 1, _GLF_IDENTITY(true && (_injected_loop_counter < 1), ! (! (_GLF_IDENTITY(true && (_injected_loop_counter < 1), false || (true && (_injected_loop_counter < 1)))))))), ! (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < 1, _GLF_IDENTITY(true && (_injected_loop_counter < 1), ! (! (_GLF_IDENTITY(true && (_injected_loop_counter < 1), _GLF_IDENTITY(false || (true && (_injected_loop_counter < 1)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false || (true && (_injected_loop_counter < 1)), ! (! (false || (true && (_injected_loop_counter < 1)))))))))))))))); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), true))), false))))))
            barrier();
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             for(int _injected_loop_counter = (0 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
              {
               if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), (bool(bool(_GLF_DEAD(false)))) || false)))
                barrier();
              }
            }
          }
         do
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(false))
                barrier();
               do
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                {
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(_injected_loop_counter))))))); _injected_loop_counter --)
                  {
                   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 ^ 0)); _injected_loop_counter --)
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y)))))))) || false))), _GLF_IDENTITY(bool(bool(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false))))), ! (! (bool(bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-8539.7024, -909.407)))).x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-8539.7024, -909.407)))).x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(bool(bool(! ((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-8539.7024, -909.407)))).x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), bool(bool(bool(bool(! ((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-8539.7024, -909.407)))).x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))) || false)), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-8539.7024, -909.407)))).x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-8539.7024, -909.407)))).x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(bool(bool(! ((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-8539.7024, -909.407)))).x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), bool(bool(bool(bool(! ((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-8539.7024, -909.407)))).x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))) || false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(bvec3(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-8539.7024, -909.407)))).x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-8539.7024, -909.407)))).x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(bool(bool(! ((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-8539.7024, -909.407)))).x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), bool(bool(bool(bool(! ((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-8539.7024, -909.407)))).x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))) || false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))))))))))
                      {
                      }
                     else
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                        barrier();
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                        }
                       else
                        {
                         barrier();
                        }
                      }
                    }
                  }
                 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), false || (bool(bvec4(false, true, false, true)))))) || false), ! (! (_GLF_IDENTITY(false, (false) && true))))))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   barrier();
                  }
                }
               for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(5, clamp(5, 5, 5))), int(ivec4(_GLF_IDENTITY(int(_GLF_IDENTITY(5, clamp(5, 5, 5))), clamp(int(_GLF_IDENTITY(5, clamp(5, 5, 5))), int(_GLF_IDENTITY(5, clamp(5, 5, 5))), int(_GLF_IDENTITY(5, clamp(5, 5, 5))))), 0, 1, 0))), int(_GLF_IDENTITY(5, min(5, 5)))), (1 & 1) * (_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (true ? _GLF_IDENTITY(int(5), int(5)) : _GLF_FUZZED(atomicAnd(_injected_loop_counter, _injected_loop_counter))))))), _GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), clamp(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5))))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec3(1, 1, 1)))) >> 0) << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), (_GLF_IDENTITY(int(2), int(2))) << 0))); _injected_loop_counter ++)
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, cos(0.0), 1.0, sin(0.0)))) > injectionSwitch.y))))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec4((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))) || false), false, true)))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(441.194) : injectionSwitch.y)), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(441.194) : injectionSwitch.y)), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(441.194) : injectionSwitch.y)), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))))))) && true), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x2(injectionSwitch.x, exp(0.0), exp(0.0), 1.0, abs(0.0), 1.0)), max(_GLF_IDENTITY(float(mat3x2(injectionSwitch.x, exp(0.0), exp(0.0), 1.0, abs(0.0), 1.0)), float(float(float(mat3x2(injectionSwitch.x, exp(0.0), exp(0.0), 1.0, abs(0.0), 1.0))))), float(mat3x2(injectionSwitch.x, exp(0.0), exp(0.0), 1.0, abs(0.0), 1.0))))) > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x2(injectionSwitch.x, exp(0.0), exp(0.0), 1.0, abs(0.0), 1.0)), max(_GLF_IDENTITY(float(mat3x2(injectionSwitch.x, exp(0.0), exp(0.0), 1.0, abs(0.0), 1.0)), float(float(float(mat3x2(injectionSwitch.x, exp(0.0), exp(0.0), 1.0, abs(0.0), 1.0))))), float(mat3x2(injectionSwitch.x, exp(0.0), exp(0.0), 1.0, abs(0.0), 1.0))))) > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && ((! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x2(injectionSwitch.x, exp(0.0), exp(0.0), 1.0, abs(0.0), 1.0)), max(_GLF_IDENTITY(float(mat3x2(injectionSwitch.x, exp(0.0), exp(0.0), 1.0, abs(0.0), 1.0)), float(float(float(mat3x2(injectionSwitch.x, exp(0.0), exp(0.0), 1.0, abs(0.0), 1.0))))), float(mat3x2(injectionSwitch.x, exp(0.0), exp(0.0), 1.0, abs(0.0), 1.0))))) > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), false, true)))))))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                   for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(int(int(_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (true ? int(_GLF_ONE(1.0, injectionSwitch.y)) : _GLF_IDENTITY(_GLF_FUZZED(-62565), 0 ^ (_GLF_FUZZED(-62565))))))), (int(int(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (true ? int(_GLF_ONE(1.0, injectionSwitch.y)) : _GLF_FUZZED(-62565))), _GLF_IDENTITY(int(int(_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (true ? int(_GLF_ONE(1.0, injectionSwitch.y)) : _GLF_FUZZED(-62565))))), (false ? _GLF_FUZZED(_injected_loop_counter) : int(int(_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (true ? int(_GLF_ONE(1.0, injectionSwitch.y)) : _GLF_FUZZED(-62565))))))))))) >> 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                    {
                     barrier();
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                      }
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                  }
                }
               if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
                barrier();
              }
             else
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-9219.8584)), bool(false))))).y))))
                  barrier();
                 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                  barrier();
                 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
              }
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
     else
      {
      }
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x)) > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), (bool(injectionSwitch.x > injectionSwitch.y)) && true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-37.34)), bool(false))))))) > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), (bool(injectionSwitch.x > injectionSwitch.y)) && true)))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, bool(bool(injectionSwitch.x > injectionSwitch.y)))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) * vec2(1.0, 1.0)).x, injectionSwitch.x, injectionSwitch.x)), mix(float(_GLF_FUZZED(-72.81)), float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(4.5))))) > injectionSwitch.y))))))))) && true, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0 + (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-5.3) : injectionSwitch.x)), min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), bool(bvec2(bool(bool(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), false)))) && true)))))) && true, true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), injectionSwitch.x)))), 0.0 + (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))), ! _GLF_IDENTITY((! _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), float(vec2(min(injectionSwitch.x, injectionSwitch.x), 0.0)))) > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))), bool(bvec2(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), float(vec2(min(injectionSwitch.x, injectionSwitch.x), 0.0)))) > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))), ! (! (((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), float(vec2(min(injectionSwitch.x, injectionSwitch.x), 0.0)))) > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)))))))), false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)))))), ! (! ((! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(1.0, 1.0) * (mat2(1.0) * (injectionSwitch)))).x, max(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0), max(vec2(0.0, 0.0), vec2(0.0, 0.0))) + (injectionSwitch)).x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)))))))))), bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY((! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x) + (min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)), (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)), (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)), false || (bool(bool(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))) && true)) || false))))), ! (! ((! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)) > injectionSwitch.y, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(radians(injectionSwitch).rg) : injectionSwitch)).x, max(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)))))))))), false), bvec2(bvec3(bvec2(! (_GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)))), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))) || false))), ! _GLF_IDENTITY((! ((! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)))))))), ! (! ((! ((! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))))))))))), false), true)))))))) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x)) > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y) && true), bool(bool(injectionSwitch.x > injectionSwitch.y)))), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))) || false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-8.6), _GLF_FUZZED(-3239.1704)), bvec2(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)), false))).x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x)) > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), true))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), bool(bool(injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, 1.0))), injectionSwitch.x)) > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), ! (! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true, bool(bvec3(true, true, false))) ? injectionSwitch.x : _GLF_FUZZED(0.8))))) > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-8765.6938)), vec2(_GLF_FUZZED(-9.7), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))) || false))))), bool(bvec2(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-8.6), _GLF_FUZZED(-3239.1704)), bvec2(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)), false))).x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x)) > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), true))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), bool(bool(injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, 1.0))), injectionSwitch.x)) > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), ! (! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true, bool(bvec3(true, true, false))) ? injectionSwitch.x : _GLF_FUZZED(0.8))))) > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-8765.6938)), vec2(_GLF_FUZZED(-9.7), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))) || false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true))) && true))))));
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
