#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460
struct _GLF_struct_6 {
 uint _f0;
 bvec4 _f1;
 mat4x3 _f2;
 int _f3;
 mat3x2 _f4;
 ivec2 _f5;
} ;

struct _GLF_struct_5 {
 bool _f0;
 uint _f1;
 uvec2 _f2;
 ivec2 _f3;
} ;

struct _GLF_struct_4 {
 mat2x3 _f0;
 int _f1;
 bvec2 _f2;
 bool _f3;
 int _f4;
 vec4 _f5;
} ;

struct _GLF_struct_7 {
 uvec4 _f0;
 _GLF_struct_4 _f1;
 _GLF_struct_5 _f2;
 mat3x4 _f3;
 mat2 _f4;
 _GLF_struct_6 _f5;
 vec2 _f6;
} ;

struct _GLF_struct_2 {
 mat2 _f0;
 mat4 _f1;
 bvec2 _f2;
 bool _f3;
 mat4x2 _f4;
 bvec4 _f5;
 mat2x3 _f6;
} ;

struct _GLF_struct_1 {
 bvec3 _f0;
 uvec3 _f1;
 vec2 _f2;
 vec2 _f3;
 vec4 _f4;
 mat3 _f5;
} ;

struct _GLF_struct_0 {
 mat3x2 _f0;
 ivec3 _f1;
 mat3 _f2;
 ivec4 _f3;
} ;

struct _GLF_struct_3 {
 uint subgroup_size;
 ivec2 _f0;
 _GLF_struct_0 _f1;
 mat3 _f2;
 _GLF_struct_1 _f3;
 _GLF_struct_2 _f4;
} ;

struct _GLF_struct_8 {
 _GLF_struct_3 _f0;
 _GLF_struct_7 _f1;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec2 GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_base;
 uvec4 GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size;
 uint subgroup_id = gl_SubgroupID;
 GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size.x = subgroup_id;
 _GLF_struct_8 _GLF_struct_replacement_8 = _GLF_struct_8(_GLF_struct_3(16, ivec2(1), _GLF_struct_0(mat3x2(1.0), ivec3(1), mat3(1.0), ivec4(1)), mat3(1.0), _GLF_struct_1(bvec3(true), uvec3(1u), vec2(1.0), vec2(1.0), vec4(1.0), mat3(1.0)), _GLF_struct_2(mat2(1.0), mat4(1.0), bvec2(true), true, mat4x2(1.0), bvec4(true), mat2x3(1.0))), _GLF_struct_7(uvec4(1u), _GLF_struct_4(mat2x3(1.0), 1, bvec2(true), true, 1, vec4(1.0)), _GLF_struct_5(true, 1u, uvec2(1u), ivec2(1)), mat3x4(1.0), mat2(1.0), _GLF_struct_6(1u, bvec4(true), mat4x3(1.0), 1, mat3x2(1.0), ivec2(1)), vec2(1.0)));
 GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size.y = _GLF_struct_replacement_8._f0.subgroup_size;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_base.x = subgroup_local_id;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size.w = workgroup_size;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size.w * workgroup_id;
 GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_base.y = workgroup_base;
 uint virtual_gid = GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_base.y + GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size.x * GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size.y + GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_base.x;
 GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size.z = virtual_gid;
 uint next_virtual_gid = GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_base.y + GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size.x * GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size.y + ((GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_base.x + 1) % GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size.y);
 buf[GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size.z] = 1;
 if(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_base.x + 1 < GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size.y)
  {
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 0);
   subgroupAll(false);
  }
 else
  {
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 0);
   subgroupAll(true);
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
