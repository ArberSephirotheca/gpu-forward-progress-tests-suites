#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, 0u, 0u), clamp(_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) | (uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))) ^ (_GLF_IDENTITY(gl_NumWorkGroups, (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(6u), uvec3(6u))) + (gl_NumWorkGroups)))), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), clamp(uvec3(gl_NumWorkGroups), uvec3(gl_NumWorkGroups), uvec3(gl_NumWorkGroups))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), clamp(uvec3(gl_NumWorkGroups), uvec3(gl_NumWorkGroups), uvec3(gl_NumWorkGroups))), min(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), clamp(uvec3(gl_NumWorkGroups), uvec3(gl_NumWorkGroups), uvec3(gl_NumWorkGroups))), _GLF_IDENTITY(uvec3(gl_NumWorkGroups), clamp(uvec3(gl_NumWorkGroups), uvec3(gl_NumWorkGroups), uvec3(gl_NumWorkGroups)))))) << (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(5u), uvec3(5u)))), ~ (~ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, ~ (_GLF_IDENTITY(~ (gl_NumWorkGroups), min(~ (gl_NumWorkGroups), ~ (gl_NumWorkGroups)))))), (_GLF_IDENTITY(uvec3(gl_NumWorkGroups), ~ (~ (_GLF_IDENTITY(uvec3(gl_NumWorkGroups), clamp(uvec3(gl_NumWorkGroups), uvec3(gl_NumWorkGroups), uvec3(gl_NumWorkGroups))))))) | (uvec3(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups))) ^ uvec3(0u, 0u, 0u)))))))))))))), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), clamp(uvec3(gl_NumWorkGroups), uvec3(gl_NumWorkGroups), uvec3(gl_NumWorkGroups))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), clamp(uvec3(gl_NumWorkGroups), uvec3(gl_NumWorkGroups), uvec3(gl_NumWorkGroups))), min(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), clamp(uvec3(gl_NumWorkGroups), uvec3(gl_NumWorkGroups), uvec3(gl_NumWorkGroups))), _GLF_IDENTITY(uvec3(gl_NumWorkGroups), clamp(uvec3(gl_NumWorkGroups), uvec3(gl_NumWorkGroups), uvec3(gl_NumWorkGroups)))))) << (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(5u), uvec3(5u)))), ~ (~ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, ~ (_GLF_IDENTITY(~ (gl_NumWorkGroups), min(~ (gl_NumWorkGroups), ~ (gl_NumWorkGroups)))))), (_GLF_IDENTITY(uvec3(gl_NumWorkGroups), ~ (~ (_GLF_IDENTITY(uvec3(gl_NumWorkGroups), clamp(uvec3(gl_NumWorkGroups), uvec3(gl_NumWorkGroups), uvec3(gl_NumWorkGroups))))))) | (uvec3(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups))) ^ uvec3(0u, 0u, 0u)))))))))))))), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), clamp(uvec3(gl_NumWorkGroups), uvec3(gl_NumWorkGroups), uvec3(gl_NumWorkGroups))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), clamp(uvec3(gl_NumWorkGroups), uvec3(gl_NumWorkGroups), uvec3(gl_NumWorkGroups))), min(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), clamp(uvec3(gl_NumWorkGroups), uvec3(gl_NumWorkGroups), uvec3(gl_NumWorkGroups))), _GLF_IDENTITY(uvec3(gl_NumWorkGroups), clamp(uvec3(gl_NumWorkGroups), uvec3(gl_NumWorkGroups), uvec3(gl_NumWorkGroups)))))) << (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(5u), uvec3(5u)))), ~ (~ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, ~ (_GLF_IDENTITY(~ (gl_NumWorkGroups), min(~ (gl_NumWorkGroups), ~ (gl_NumWorkGroups)))))), (_GLF_IDENTITY(uvec3(gl_NumWorkGroups), ~ (~ (_GLF_IDENTITY(uvec3(gl_NumWorkGroups), clamp(uvec3(gl_NumWorkGroups), uvec3(gl_NumWorkGroups), uvec3(gl_NumWorkGroups))))))) | (uvec3(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups))) ^ uvec3(0u, 0u, 0u)))))))))))))), (uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), clamp(uvec3(gl_NumWorkGroups), uvec3(gl_NumWorkGroups), uvec3(gl_NumWorkGroups))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), clamp(uvec3(gl_NumWorkGroups), uvec3(gl_NumWorkGroups), uvec3(gl_NumWorkGroups))), min(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), clamp(uvec3(gl_NumWorkGroups), uvec3(gl_NumWorkGroups), uvec3(gl_NumWorkGroups))), _GLF_IDENTITY(uvec3(gl_NumWorkGroups), clamp(uvec3(gl_NumWorkGroups), uvec3(gl_NumWorkGroups), uvec3(gl_NumWorkGroups)))))) << (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(5u), uvec3(5u)))), ~ (~ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, ~ (_GLF_IDENTITY(~ (gl_NumWorkGroups), min(~ (gl_NumWorkGroups), ~ (gl_NumWorkGroups)))))), (_GLF_IDENTITY(uvec3(gl_NumWorkGroups), ~ (~ (_GLF_IDENTITY(uvec3(gl_NumWorkGroups), clamp(uvec3(gl_NumWorkGroups), uvec3(gl_NumWorkGroups), uvec3(gl_NumWorkGroups))))))) | (uvec3(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups))) ^ uvec3(0u, 0u, 0u))))))))))))))) / uvec3(1u, 1u, 1u))) ^ uvec3(0u, 0u, 0u))) >> uvec3(0u, 0u, 0u))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(gl_NumWorkGroups, (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(6u), uvec3(6u))) + (gl_NumWorkGroups))), (uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(gl_NumWorkGroups, (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(6u), uvec3(6u))) + (gl_NumWorkGroups)))) / uvec3(1u, 1u, 1u))), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), clamp(uvec3(gl_NumWorkGroups), uvec3(gl_NumWorkGroups), uvec3(gl_NumWorkGroups))), ~ (~ (_GLF_IDENTITY(uvec3(gl_NumWorkGroups), (uvec3(gl_NumWorkGroups)) | (uvec3(gl_NumWorkGroups)))))))))), (uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), clamp(uvec3(gl_NumWorkGroups), uvec3(gl_NumWorkGroups), uvec3(gl_NumWorkGroups))), ~ (~ (_GLF_IDENTITY(uvec3(gl_NumWorkGroups), (uvec3(gl_NumWorkGroups)) | (uvec3(gl_NumWorkGroups))))))))))) / uvec3(1u, 1u, 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) + uvec3(0u, 0u, 0u)) << _GLF_IDENTITY(uvec3(_GLF_IDENTITY(6u, (6u) - 0u)), _GLF_IDENTITY(uvec3(6u), uvec3(0u, 0u, 0u) + (uvec3(6u))))) + _GLF_IDENTITY((gl_NumWorkGroups), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY((gl_NumWorkGroups), (true ? (gl_NumWorkGroups) : _GLF_FUZZED(uvec3(31093u, 199861u, 128647u))))))))), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), clamp(uvec3(gl_NumWorkGroups), _GLF_IDENTITY(uvec3(gl_NumWorkGroups), (_GLF_IDENTITY(uvec3(gl_NumWorkGroups), (uvec3(gl_NumWorkGroups)) << uvec3(0u, 0u, 0u))) + (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY(uvec3(5u), (true ? uvec3(5u) : _GLF_FUZZED(uvec3(125389u, 87475u, 50127u))))))), uvec3(gl_NumWorkGroups))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), (_GLF_IDENTITY(uvec3(gl_NumWorkGroups), (uvec3(gl_NumWorkGroups)) | (uvec3(gl_NumWorkGroups)))) ^ uvec3(0u, 0u, 0u)), (uvec3(gl_NumWorkGroups)) | (uvec3(gl_NumWorkGroups)))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec3(gl_NumWorkGroups), (uvec3(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(183570u, 136546u, 169371u)) : gl_NumWorkGroups)))) | (uvec3(gl_NumWorkGroups)))), ~ (~ (~ (_GLF_IDENTITY(uvec3(gl_NumWorkGroups), (uvec3(gl_NumWorkGroups)) | (uvec3(gl_NumWorkGroups)))))))) >> uvec3(0u, 0u, 0u)))))))))) / (uvec3(0u, 0u, 0u) | uvec3(1u, 1u, 1u))) : _GLF_FUZZED(uvec3(33465u, 158762u, 167750u)))).x;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | _GLF_IDENTITY((gl_WorkGroupSize), max((gl_WorkGroupSize), (gl_WorkGroupSize))))) << uvec3(0u, 0u, 0u)).x;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, 1u * (workgroup_id));
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(workgroup_base, uint(uvec3(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)), 1u, 1u))))) + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), max((subgroup_size), (subgroup_size))) + 0u)) >> 0u), (workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u) * subgroup_size, (subgroup_id * subgroup_size) / 1u)) - 0u) + _GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(22155u))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uvec3(workgroup_base, 1u, 1u)), _GLF_IDENTITY((uint(uvec3(workgroup_base, 1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))))), min(_GLF_IDENTITY((uint(uvec3(workgroup_base, 1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))))), ((uint(uvec3(workgroup_base, 1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))))) * 1u), (uint(uvec3(workgroup_base, 1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), uint(uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), 1u, (0u | 1u))))) >> 0u), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), uint(uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), 1u, (0u | 1u))))) >> 0u), 1u, ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), 0u))), (workgroup_base + subgroup_id * subgroup_size) - 0u) + subgroup_local_id) + 0u);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, 1u * (subgroup_id)) * subgroup_size + ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)), (subgroup_local_id + 1) | (_GLF_IDENTITY(subgroup_local_id + 1, max(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)), subgroup_local_id + 1))))) + 0u), clamp(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)), (subgroup_local_id + 1) | (subgroup_local_id + 1))) + 0u), _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) << int(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)), (subgroup_local_id + 1) | (subgroup_local_id + 1))) + 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)), (subgroup_local_id + 1) | (subgroup_local_id + 1))) + 0u), clamp(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)), (subgroup_local_id + 1) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + 1))) + 0u), _GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)), (subgroup_local_id + 1) | (subgroup_local_id + 1))) + 0u), _GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)), (subgroup_local_id + 1) | (subgroup_local_id + 1))) + 0u))))), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)), _GLF_IDENTITY((subgroup_local_id + 1), uint(uvec2((subgroup_local_id + 1), 0u))) | (_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec4(subgroup_local_id + 1, 0u, 1u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_id))))))))) + 0u), clamp(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)), (subgroup_local_id + 1) | (_GLF_IDENTITY(subgroup_local_id, 0u ^ (_GLF_IDENTITY(subgroup_local_id, uint(uvec3(subgroup_local_id, 0u, 1u))))) + 1))) + 0u), _GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)), (subgroup_local_id + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), ~ (~ (~ (1))))))))) | (subgroup_local_id + 1))) + 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1))), min(subgroup_local_id + 1, subgroup_local_id + 1)), (subgroup_local_id + 1) | (subgroup_local_id + 1))) + 0u), clamp(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)), subgroup_local_id + 1)), (subgroup_local_id + 1) | (subgroup_local_id + 1))) + 0u), _GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)), (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)) + 1) | (subgroup_local_id + 1))) + 0u), _GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)), (subgroup_local_id + 1) | (subgroup_local_id + 1))) + 0u, 0u ^ ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)), (subgroup_local_id + 1) | (subgroup_local_id + 1))) + 0u))))))), 1u)))) % subgroup_size), _GLF_IDENTITY(0u | (workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 1u * (_GLF_IDENTITY(subgroup_id, (subgroup_id) >> (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(7u), uint(7u)))))) * subgroup_size, (_GLF_IDENTITY(subgroup_id, 1u * (subgroup_id)) * subgroup_size) >> 0u) + ((subgroup_local_id + 1) % subgroup_size)), (0u | _GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_id, 1u * (subgroup_id)) * subgroup_size + ((subgroup_local_id + 1) % subgroup_size)), (true ? _GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_id, 1u * (subgroup_id)) * subgroup_size + ((subgroup_local_id + 1) % subgroup_size)), ((workgroup_base + _GLF_IDENTITY(subgroup_id, 1u * (subgroup_id)) * subgroup_size + ((subgroup_local_id + 1) % subgroup_size))) >> 0u) : _GLF_FUZZED(mix(subgroup_id, workgroup_size, true))))) << 0u));
 buf[virtual_gid] = 1;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 atomicStore(buf[next_virtual_gid], uint(2), 4, _GLF_IDENTITY(64, ~ (~ (64))), 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bvec4(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), (bool(false)) && true)) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))), true && (bool(bool(false))))) || false)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7260.3396), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(202.420)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), vec2(injectionSwitch[0], injectionSwitch[1])).x, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), _GLF_IDENTITY(bool(bool(bool(bool(true)))), ! (_GLF_IDENTITY(! (bool(bool(bool(bool(true))))), false || (! (bool(bool(bool(bool(true))))))))))) ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(distance(vec2(-430.222, 94.15), injectionSwitch)), 0.0 + _GLF_IDENTITY((_GLF_FUZZED(distance(_GLF_IDENTITY(vec2(-430.222, 94.15), (true ? vec2(-430.222, 94.15) : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))))))), clamp(_GLF_IDENTITY((_GLF_FUZZED(distance(_GLF_IDENTITY(vec2(-430.222, 94.15), (true ? vec2(-430.222, 94.15) : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))))))), clamp((_GLF_FUZZED(distance(_GLF_IDENTITY(vec2(-430.222, 94.15), (true ? vec2(-430.222, 94.15) : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))))))), (_GLF_FUZZED(distance(_GLF_IDENTITY(vec2(-430.222, 94.15), (true ? vec2(-430.222, 94.15) : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))))))), (_GLF_FUZZED(distance(_GLF_IDENTITY(vec2(-430.222, 94.15), (true ? vec2(-430.222, 94.15) : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))))))))), _GLF_IDENTITY((_GLF_FUZZED(distance(_GLF_IDENTITY(vec2(-430.222, 94.15), (true ? vec2(-430.222, 94.15) : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))))))), (true ? (_GLF_FUZZED(distance(_GLF_IDENTITY(vec2(-430.222, 94.15), (true ? vec2(-430.222, 94.15) : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))))))) : _GLF_FUZZED(2.0))), _GLF_IDENTITY((_GLF_FUZZED(distance(_GLF_IDENTITY(vec2(-430.222, 94.15), (true ? vec2(-430.222, 94.15) : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))))))), ((_GLF_FUZZED(distance(_GLF_IDENTITY(vec2(-430.222, 94.15), (true ? vec2(-430.222, 94.15) : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))))))) + 0.0)))))) > injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))), true && (_GLF_IDENTITY(! _GLF_IDENTITY((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)) - vec2(0.0, 0.0)))).y)), ! (! ((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)) - vec2(0.0, 0.0)))).y))))), (_GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), bool(bool(! (! _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)) || false)))))) && true))))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, sqrt(vec2(1.0, 1.0)) * (injectionSwitch)).y)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false))))), (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))) || false), (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), bool(bvec4(_GLF_IDENTITY(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), ! (! (bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))), true, false, _GLF_IDENTITY(true, bool(bvec4(true, true, true, false))))))), true, true, false)), bool(bvec4(bool(bvec4(_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), _GLF_IDENTITY(bool(bvec4(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), true, false, true)), (bool(bvec4(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), true, false, true))) || false)), false || (_GLF_IDENTITY(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), bool(bvec4(bool(bvec2((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), false)), true, false, true)))))), true, true, false)), true, true, true)))), false || (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), bool(bvec4(_GLF_IDENTITY(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), ! (! (bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))), true, false, _GLF_IDENTITY(true, bool(bvec4(true, true, true, false))))))), true, true, false)), bool(bvec4(bool(bvec4(_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), _GLF_IDENTITY(bool(bvec4(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), true, false, true)), (bool(bvec4(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), true, false, true))) || false)), false || (_GLF_IDENTITY(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), bool(bvec4(bool(bvec2((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), false)), true, false, true)))))), true, true, false)), true, true, true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(3222.7341))), injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))))), _GLF_IDENTITY(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), bool(bvec4(_GLF_IDENTITY(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), ! (! (bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))), true, false, _GLF_IDENTITY(true, bool(bvec4(true, true, true, false))))))), true, true, false)), bool(bvec4(bool(bvec4(_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], 0.0 + (injectionSwitch[1])), injectionSwitch[1])))).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], 0.0 + (injectionSwitch[1])), injectionSwitch[1])))).y)) || false))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, bool(bool(false)))))) && true))), _GLF_IDENTITY(bool(bvec4(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), true, false, true)), (bool(bvec4(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), true, false, true))) || false)), false || (_GLF_IDENTITY(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), bool(bvec4(bool(bvec2((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-42.27)), vec2(_GLF_FUZZED(float(94711)), (injectionSwitch)[1]), bvec2(false, true))).y)))), _GLF_IDENTITY(false || (bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (false || (_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true))))), false)), true, false, true)))))), true, true, false)), true, true, true)))))))))))) && true), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y), clamp(clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y), clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y), clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)))))))))), _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))) || false), (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), bool(bvec4(bool(_GLF_IDENTITY(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), bvec2(bvec4(_GLF_IDENTITY(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), bvec2(bvec2(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))), _GLF_IDENTITY(false, bool(bool(false))), false)))), true, false, true)))), true, true, false)), bool(bvec4(bool(bvec4(_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(min(vec2(281.138, 287.575), 915.611)) : injectionSwitch)), injectionSwitch)).x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), bool(bvec4(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), true, false, true))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), bool(bvec4(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), true, false, true))), true)), (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), bool(bvec4(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), true, false, true))), true)), bool(bvec2(bool(bvec2(_GLF_IDENTITY(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), bool(bvec4(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), true, false, true))), true)), true)))) || false))), true, true, false)), true, true, true)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / abs(1.0))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), bool(bvec4(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), true, false, true)))), true, true, false)), bool(bvec4(bool(bvec4(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), bool(bvec4(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), true, false, true)))), true, true, false)), true, true, true))))), true && (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))), _GLF_IDENTITY(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), bool(bvec4(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))), false)), true, false, true)))), true, true, false)), bool(bvec4(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))) || (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)), injectionSwitch)).y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(bool(bvec2((_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-8.2, -1.9)) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).y))), false)), bool(bvec4(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), true, false, true)))), true, true, false)), true, true, true))))))))), ! (! (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))), false)), bool(bvec4(_GLF_IDENTITY(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), bool(bvec3(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), true, true))), true, false, true)))), true, true, false)), bool(bvec4(bool(bvec4(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), bool(bvec4(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((true ? injectionSwitch.y : _GLF_FUZZED(-20.37)), mix(float(_GLF_IDENTITY((true ? injectionSwitch.y : _GLF_FUZZED(-20.37)), ((true ? injectionSwitch.y : _GLF_FUZZED(-20.37))) - 0.0)), float(_GLF_FUZZED(-2.0)), bool(false))))))), _GLF_IDENTITY(false, ! (! (false))))), true, false, true)))), true, true, false)), true, true, true)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2((_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), false)), bool(bvec4(bool(bvec2((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false)), true, false, true)))), true, true, false)), bool(bvec4(bool(bvec4(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), bool(bvec4(bool(bvec2((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))), false)), true, false, true)))), true, true, false)), true, true, true))))), true && (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) - 0.0, clamp((injectionSwitch.y) - 0.0, _GLF_IDENTITY((injectionSwitch.y) - 0.0, mix(float(_GLF_FUZZED(96.29)), float((injectionSwitch.y) - 0.0), bool(true))), _GLF_IDENTITY((injectionSwitch.y) - 0.0, max((injectionSwitch.y) - 0.0, (injectionSwitch.y) - 0.0)))))))), _GLF_IDENTITY(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), bool(bvec4(bool(bvec2((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))), bool(bool(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))), true, true)), bool(bvec4(bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))), true, true)), false, false, true))))))))), false)), true, false, true)))), true, true, false)), bool(bvec4(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || false))))), _GLF_IDENTITY(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), bool(bvec4(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), true, false, true)))), true, true, false)), true, true, true))), true && (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) - 0.0, _GLF_IDENTITY(clamp((injectionSwitch.y) - 0.0, _GLF_IDENTITY((injectionSwitch.y) - 0.0, mix(float(_GLF_FUZZED(96.29)), float((injectionSwitch.y) - 0.0), bool(true))), _GLF_IDENTITY((injectionSwitch.y) - 0.0, max((injectionSwitch.y) - 0.0, (injectionSwitch.y) - 0.0))), min(clamp((injectionSwitch.y) - 0.0, _GLF_IDENTITY((injectionSwitch.y) - 0.0, mix(float(_GLF_FUZZED(96.29)), float((injectionSwitch.y) - 0.0), bool(true))), _GLF_IDENTITY((injectionSwitch.y) - 0.0, max((injectionSwitch.y) - 0.0, (injectionSwitch.y) - 0.0))), clamp((injectionSwitch.y) - 0.0, _GLF_IDENTITY((injectionSwitch.y) - 0.0, mix(float(_GLF_FUZZED(96.29)), float((injectionSwitch.y) - 0.0), bool(true))), _GLF_IDENTITY((injectionSwitch.y) - 0.0, max((injectionSwitch.y) - 0.0, (injectionSwitch.y) - 0.0)))))))))), _GLF_IDENTITY(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), bool(bvec4(bool(bvec2((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))), bool(bool(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(1.0, 1.0 * (1.0)) * (injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(1.0 * (injectionSwitch.y), min(1.0 * (injectionSwitch.y), 1.0 * (injectionSwitch.y))))), true, true)), bool(bvec4(bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))), true, true)), false, false, true))))))))), false)), true, false, true)))), true, true, false)), bool(bvec4(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || false))))), _GLF_IDENTITY(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), bool(bvec4(bool(bvec2((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false)), true, false, true)))), true, true, false)), true, true, true)))))))))))))))))), false || (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) || false), true, false)))) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), ! (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))), _GLF_IDENTITY(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), bool(bvec4(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), true, false, true)))), true, true, false)), bool(bvec4(bool(bvec4(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), (! (_GLF_IDENTITY(false, false || (false)))) && true))))), bool(bvec4(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), true, false, true)))), true, true, false)), true, true, true)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), ! (_GLF_IDENTITY(! (bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))), ! (_GLF_IDENTITY(! (! (bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))), (! (! (bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))) && true))))), _GLF_IDENTITY(bool(bvec4(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), true, false, true)), (bool(bvec4(_GLF_IDENTITY(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), (_GLF_IDENTITY(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), true && (bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false, true))) || false))), true, true, false)), bool(bool(bool(bvec4(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), _GLF_IDENTITY(bool(bvec4(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), true, false, true)), (bool(bvec4(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), true, false, true))) || false))), true, true, false))))), bool(bvec4(bool(bvec4(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), bool(bvec4(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, false, true))), ! (! (_GLF_IDENTITY(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), bool(bvec4(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, false, true))))))), true, true, false)), true, true, true))))), true && (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))), _GLF_IDENTITY(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), bool(bvec4(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))), false)), true, false, true)))), true, _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, (true) || false)))), false)), bool(bvec4(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-981.922), _GLF_FUZZED(vec4(10.11, 7.7, -806.739, -3.9).x)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))).x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-981.922), _GLF_FUZZED(vec4(10.11, 7.7, -806.739, -3.9).x)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))).x > injectionSwitch.y))), bool(bool((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-981.922), _GLF_FUZZED(vec4(10.11, 7.7, -806.739, -3.9).x)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))).x > injectionSwitch.y)))))))))))))), _GLF_IDENTITY(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec2(-4.2, 0.8).t), _GLF_FUZZED(-7.2)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y))), false)), bool(bvec4(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), true, false, true)))), true, true, false)), true, true, true))))))))))))), bool(bvec2((! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) || false), true, false)))) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), ! (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))), _GLF_IDENTITY(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), bool(bvec4(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), true, false, true)))), true, true, false)), bool(bvec4(bool(bvec4(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), (! (_GLF_IDENTITY(false, false || (false)))) && true))))), bool(bvec4(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), true, false, true)))), true, true, false)), true, true, true)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), ! (_GLF_IDENTITY(! (bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))), ! (_GLF_IDENTITY(! (! (bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))), (! (! (bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))) && true))))), _GLF_IDENTITY(bool(bvec4(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), true, false, true)), (bool(bvec4(_GLF_IDENTITY(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), (_GLF_IDENTITY(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), true && (bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false, true))) || false))), true, true, false)), bool(bool(bool(bvec4(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), _GLF_IDENTITY(bool(bvec4(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), true, false, true)), (bool(bvec4(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), true, false, true))) || false))), true, true, false))))), bool(bvec4(bool(bvec4(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), bool(bvec4(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, false, true))), ! (! (_GLF_IDENTITY(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), bool(bvec4(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, false, true))))))), true, true, false)), true, true, true))))), true && (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))), _GLF_IDENTITY(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), bool(bvec4(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))), false)), true, false, true)))), true, _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, (true) || false)))), false)), bool(bvec4(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-981.922), _GLF_FUZZED(vec4(10.11, 7.7, -806.739, -3.9).x)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))).x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-981.922), _GLF_FUZZED(vec4(10.11, 7.7, -806.739, -3.9).x)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))).x > injectionSwitch.y))), bool(bool((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-981.922), _GLF_FUZZED(vec4(10.11, 7.7, -806.739, -3.9).x)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))).x > injectionSwitch.y)))))))))))))), _GLF_IDENTITY(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec2(-4.2, 0.8).t), _GLF_FUZZED(-7.2)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y))), false)), bool(bvec4(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), true, false, true)))), true, true, false)), true, true, true))))))))))))), true))))) && true)), ((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)))))))), _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))) || false), (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))) || false), (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))) || false), (injectionSwitch.x > injectionSwitch.y)))))) && true), ! (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)).x > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (! (! (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))), false), bvec2(bvec4(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y)), false)))), bool(bvec4(bool(bvec2(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), true, false, true)))), true, true, false)), bool(bvec4(bool(bvec4(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))), _GLF_IDENTITY(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), false)), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), bvec2(bvec2(bvec2(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), bvec2(bvec2(bvec2(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))), true, false))))), _GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), bvec2(bvec2(bvec2(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), bvec2(bvec2(bvec2(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))), true, false))))))), ! (! (bool(bool(bool(_GLF_IDENTITY(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), bvec2(bvec2(bvec2(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), bvec2(bvec2(bvec2(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))), true, false))))))))))), true, false, true)))), true, true, false)), true, true, true)))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), bool(bvec4(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), _GLF_IDENTITY(true, false || (true)), false, true)))), true, true, false)), _GLF_IDENTITY(bool(bvec4(bool(bvec4(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), bool(bvec4(bool(bvec2((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false)), true, false, true)))), true, true, false)), true, true, true)), false || (bool(bvec4(bool(bvec4(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), bool(bvec4(bool(bvec2((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false)), true, false, true)))), true, true, false)), true, true, true))))))), bool(bvec4(! (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), bool(bvec4(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), _GLF_IDENTITY(true, false || (true)), false, true)))), true, true, false)), _GLF_IDENTITY(bool(bvec4(bool(bvec4(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), bool(bvec4(bool(bvec2((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false)), true, false, true)))), true, true, false)), true, true, true)), false || (bool(bvec4(bool(bvec4(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), bool(bvec4(bool(bvec2((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false)), true, false, true)))), true, true, false)), true, true, true))))))), true, true, true))), true && (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true) && true, (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true) && true) && true))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(clamp((mat2(95.56, _GLF_IDENTITY(-2344.1574, (-2344.1574) - 0.0), -0.0, 1.9) * injectionSwitch), 8.4, max(-2519.8720, 8.3))))).y, (injectionSwitch.y) - 0.0)))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false)), bool(bvec4(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(73.23)), float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), bool(true)))))))), false)), true, false, true)))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, false, false)), (bool(bvec4(true, false, false, false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, false)), bool(bvec4(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)) || (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 1.0, 1.0), (mat4x3(injectionSwitch.x, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 1.0, 1.0)) + mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), injectionSwitch.x)) > injectionSwitch.y))))))))))), _GLF_IDENTITY(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), bool(bvec4(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), true, false, true)))), true, true, false)), true, true, true))))))))))))), false || ((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))) || false), (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-5.8)), bool(false))), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))) > injectionSwitch.y))), false)), bool(bvec4(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), true, false, true)))), true, _GLF_IDENTITY(true, ! (! (true))), false)), bool(bvec4(bool(bvec4(_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), bool(bvec4(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), true, false, true)))), true, true, false)), true, true, true)))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), bool(bvec4(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), true, false, true)))), true, true, false)), bool(bvec4(bool(bvec4(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), bool(bvec4(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), true, false, true)))), true, true, false)), _GLF_IDENTITY(true, bool(bool(true))), true, true))))), true && (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))) && true)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))), _GLF_IDENTITY(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), bool(bvec4(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))), false)), true, false, true)))), true, true, false)), bool(bvec4(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), bool(bvec4(bool(bvec2((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), true, true, false))))), false)), true, false, true)))), true, true, false)), true, true, true)))))))), bool(bool((_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), bool(bvec4(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), true, false, true)))), true, true, false)), bool(bvec4(bool(bvec4(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), bool(bvec4(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), true, false, true)))), true, true, false)), _GLF_IDENTITY(true, bool(bool(true))), true, true))))), true && (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))) && true)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))), _GLF_IDENTITY(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), bool(bvec4(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))), false)), true, false, true)))), true, true, false)), bool(bvec4(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), bool(bvec4(bool(bvec2((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), true, true, false))))), false)), true, false, true)))), true, true, false)), true, true, true))))))))))))))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))) || false), (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-5.8)), bool(false))), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))) > injectionSwitch.y))), false)), bool(bvec4(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), true, false, true)))), true, _GLF_IDENTITY(true, ! (! (true))), false)), bool(bvec4(bool(bvec4(_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), bool(bvec4(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), true, false, true)))), true, true, false)), true, true, true)))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), bool(bvec4(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), true, false, true)))), true, true, false)), bool(bvec4(bool(bvec4(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), bool(bvec4(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), true, false, true)))), true, true, false)), _GLF_IDENTITY(true, bool(bool(true))), true, true))))), true && (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))) && true)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))), _GLF_IDENTITY(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), bool(bvec4(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))), false)), true, false, true)))), true, true, false)), bool(bvec4(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), bool(bvec4(bool(bvec2((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), true, true, false))))), false)), true, false, true)))), true, true, false)), true, true, true)))))))), bool(bool((_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), bool(bvec4(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), true, false, true)))), true, true, false)), bool(bvec4(bool(bvec4(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), bool(bvec4(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), true, false, true)))), true, true, false)), _GLF_IDENTITY(true, bool(bool(true))), true, true))))), true && (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))) && true)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))), _GLF_IDENTITY(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), bool(bvec4(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))), false)), true, false, true)))), true, true, false)), bool(bvec4(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), bool(bvec4(bool(bvec2((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), true, true, false))))), false)), true, false, true)))), true, true, false)), true, true, true)))))))))))))))), false || (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))) || false), (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-5.8)), bool(false))), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))) > injectionSwitch.y))), false)), bool(bvec4(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), true, false, true)))), true, _GLF_IDENTITY(true, ! (! (true))), false)), bool(bvec4(bool(bvec4(_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), bool(bvec4(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), true, false, true)))), true, true, false)), true, true, true)))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), bool(bvec4(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), true, false, true)))), true, true, false)), bool(bvec4(bool(bvec4(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), bool(bvec4(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), true, false, true)))), true, true, false)), _GLF_IDENTITY(true, bool(bool(true))), true, true))))), true && (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))) && true)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))), _GLF_IDENTITY(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), bool(bvec4(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))), false)), true, false, true)))), true, true, false)), bool(bvec4(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), bool(bvec4(bool(bvec2((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), true, true, false))))), false)), true, false, true)))), true, true, false)), true, true, true)))))))), bool(bool((_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), bool(bvec4(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), true, false, true)))), true, true, false)), bool(bvec4(bool(bvec4(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), bool(bvec4(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), true, false, true)))), true, true, false)), _GLF_IDENTITY(true, bool(bool(true))), true, true))))), true && (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))) && true)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))), _GLF_IDENTITY(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), bool(bvec4(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))), false)), true, false, true)))), true, true, false)), bool(bvec4(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), bool(bvec4(bool(bvec2((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), true, true, false))))), false)), true, false, true)))), true, true, false)), true, true, true)))))))))))))))), (! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))) || false), (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(bool(bvec2((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-5.8)), bool(false))), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))) > injectionSwitch.y))), false)), bool(bvec4(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 1.0, 1.0, 1.0, abs(0.0), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0)), (vec2(mat4x3(injectionSwitch, 1.0, 1.0, 1.0, abs(0.0), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0))) - vec2(0.0, 0.0))))).y))), false)), true, false, true)))), true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bool(! (true)))))), false)), bool(bvec4(bool(bvec4(_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).y, true && (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec2((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), false)), bool(bvec4(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), true, false, true)))), true, true, false)), true, true, true)))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), bool(bvec4(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), true, false, true)))), true, true, false)), bool(bvec4(bool(bvec4(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), bool(bvec4(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), true, false, true)))), true, true, false)), _GLF_IDENTITY(true, bool(bool(true))), true, true))))), true && (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))) && true)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))), _GLF_IDENTITY(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, bool(bvec4(false, false, true, true))))), bool(bvec4(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-95.08) : injectionSwitch.y)), 1.0 * (injectionSwitch.y))))), false)), true, false, true)))), true, true, false)), bool(bvec4(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(bool(bvec2((_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))).y))), false)), bool(bvec4(bool(bvec2((_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), true, true, false))))), false)), true, false, true)))), true, true, false)), true, true, true)))))))), bool(bool((_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), bool(bvec4(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), true, false, true)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), bool(bvec4(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), true, false, true))))), bool(bvec3(! (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), bool(bvec4(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), true, false, true))))), true, true))))), true, true, false)), bool(bvec4(bool(bvec4(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), bool(bvec4(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), true, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false))))), true)))), true, true, false)), _GLF_IDENTITY(true, bool(bool(true))), true, true))))), true && (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x > injectionSwitch.y)))))) && true)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(vec2(0.0, 0.0))))).y, (injectionSwitch.y) - 0.0)))), _GLF_IDENTITY(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), bool(bvec4(bool(bvec2((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))) || false)), false)), true, false, true)))), true, true, false)), bool(bvec4(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * abs(1.0)))) > injectionSwitch.y))), ! (! ((_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))))))), _GLF_IDENTITY(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), bool(bvec4(bool(_GLF_IDENTITY(bvec2((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false || ((injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false || ((injectionSwitch.x > injectionSwitch.y)), true && (false || ((injectionSwitch.x > injectionSwitch.y)))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(false || ((injectionSwitch.x > injectionSwitch.y)), true && (false || ((injectionSwitch.x > injectionSwitch.y)))), true), true, false)))))), true, true, false))))), false), _GLF_IDENTITY(bvec2(bvec2(bvec2((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false || ((injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false || ((injectionSwitch.x > injectionSwitch.y)), true && (false || ((injectionSwitch.x > injectionSwitch.y)))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(false || ((injectionSwitch.x > injectionSwitch.y)), true && (false || ((injectionSwitch.x > injectionSwitch.y)))), true), true, false)))))), true, true, false))))), false))), bvec2(bvec2(bvec2(bvec2(bvec2((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false || ((injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false || ((injectionSwitch.x > injectionSwitch.y)), true && (false || ((injectionSwitch.x > injectionSwitch.y)))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(false || ((injectionSwitch.x > injectionSwitch.y)), true && (false || ((injectionSwitch.x > injectionSwitch.y)))), true), true, false)))))), true, true, false))))), false)))))))), true, false, true)))), true, true, false)), true, true, true))))))))))))))))) || false)))))))) && true))) && true), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))) || false)), ! (! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (false) || false)))), bool(bvec3(false, true, false)))) || false))))))), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), bool(bvec4(bool(bvec2((_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true), true)))))), false)), true, false, true)))), true, true, false)), bool(bvec4(bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bool(bvec2((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), false)), bool(bvec4(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), true, false, true)))), true, true, false)), true, true, true))))), true && (! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), bool(bvec4(bool(bvec2((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))))))), false)), true, false, true)))), true, _GLF_IDENTITY(true, false || (true)), false)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - determinant(mat4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 0.0)))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-1162.9296, 2.7)) : injectionSwitch)).y))), false), _GLF_IDENTITY(bvec2(bvec4(bvec2((_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-1162.9296, 2.7)) : injectionSwitch)).y))), false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec4(bvec2((_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), ! (! ((_GLF_IDENTITY(false, bool(bool(false))))))) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-1162.9296, 2.7)) : injectionSwitch)).y))), false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec2(bvec2(bvec4(bvec2((_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, true, true)))))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-1162.9296, 2.7)) : injectionSwitch)).y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-1162.9296, 2.7)) : injectionSwitch)).y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-1162.9296, 2.7)) : injectionSwitch)).y))), true, true, true)))))), false), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).x > injectionSwitch.y))))))), false, false))))), bool(bvec4(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), true, false, true)))), true, true, _GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), bool(bvec2(bool(bvec4(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - determinant(mat4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 0.0)))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-1162.9296, 2.7)) : injectionSwitch)).y))), false), _GLF_IDENTITY(bvec2(bvec4(bvec2((_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-1162.9296, 2.7)) : injectionSwitch)).y))), false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec4(bvec2((_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), ! (! ((_GLF_IDENTITY(false, bool(bool(false))))))) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-1162.9296, 2.7)) : injectionSwitch)).y))), false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec2(bvec2(bvec4(bvec2((_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, true, true)))))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-1162.9296, 2.7)) : injectionSwitch)).y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-1162.9296, 2.7)) : injectionSwitch)).y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-1162.9296, 2.7)) : injectionSwitch)).y))), true, true, true)))))), false), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).x > injectionSwitch.y))))))), false, false))))), bool(bvec4(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), true, false, true)))), true, true, _GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), true))), true, true, true)), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), ! (! (bool(bool(true)))))) && (bool(bvec4(bool(bvec4(_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1113.9970), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(7492.6813)), bvec2(true, false))).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))), _GLF_IDENTITY(bool(bvec2((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5369.0488), _GLF_FUZZED(-7.2)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y))), false)), bool(bvec4(bool(bvec2((_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))), false)), true, false, _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, false || (true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))), true, true, false)), true, true, true)))))))))))) && true))) && _GLF_IDENTITY(true, (true) && true))))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false)))))))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
