#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))), (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))) && true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(217.436) : injectionSwitch.x)) > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! _GLF_IDENTITY((false), ((false)) && true)))), bool(bvec2(! (false), true))))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = _GLF_IDENTITY(16, max(16, _GLF_IDENTITY(16, max(_GLF_IDENTITY(16, (16) | _GLF_IDENTITY((16), clamp((16), (16), (16)))), 16))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))))
      barrier();
     barrier();
    }
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(float(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-968.641)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), injectionSwitch.x))))) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) / 1.0) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + tan(vec2(0.0, 0.0))).x > injectionSwitch.y)))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + tan(vec2(0.0, 0.0))).x > injectionSwitch.y))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), (! (false)) || false))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec2(! (_GLF_DEAD(false)), true))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), min(_GLF_IDENTITY((injectionSwitch), vec2(mat4x2((injectionSwitch), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0))), (injectionSwitch))) + vec2(0.0, 0.0))) / vec2(1.0, 1.0)), vec2(vec4(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 0.0, 1.0, 0.0))), 0.0, 1.0))), min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))))), max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0), mix(vec2(_GLF_FUZZED((1.9 / 5.5)), _GLF_FUZZED(165.526)), vec2((vec2(0.0, 0.0))[0], (vec2(0.0, 0.0))[1]), bvec2(true, true))) + (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))))), injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-25.16), _GLF_FUZZED(0.8)), bvec2(false, false))).y), float(_GLF_FUZZED((+ 925.460))), _GLF_IDENTITY(bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))), true && (bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))) && true), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0)))).y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY((+ 925.460), (_GLF_IDENTITY((+ 925.460), clamp((+ 925.460), (+ 925.460), (+ 925.460)))) - 0.0))), bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), ! (! ((injectionSwitch.x > injectionSwitch.y))))), ! (! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))))))), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec2(_GLF_IDENTITY(-1100.0032, (-1100.0032) - 0.0), -847.100).t), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-0.8)), bvec2(true, false))).y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((- 92.21))), bool(false))))) > injectionSwitch.y))))) && true), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))), false))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-25.16), _GLF_FUZZED(0.8)), bvec2(false, false))).y), float(_GLF_FUZZED((+ 925.460))), _GLF_IDENTITY(bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))), true && (bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))) && true), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0)))).y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY((+ 925.460), (_GLF_IDENTITY((+ 925.460), clamp((+ 925.460), (+ 925.460), (+ 925.460)))) - 0.0))), bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), ! (! ((injectionSwitch.x > injectionSwitch.y))))), ! (! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))))))), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec2(_GLF_IDENTITY(-1100.0032, (-1100.0032) - 0.0), -847.100).t), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-0.8)), bvec2(true, false))).y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((- 92.21))), bool(false))))) > injectionSwitch.y))))) && true), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))), false))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-25.16), _GLF_FUZZED(0.8)), bvec2(false, false))).y), float(_GLF_FUZZED((+ 925.460))), _GLF_IDENTITY(bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))), true && (bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))) && true), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0)))).y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY((+ 925.460), (_GLF_IDENTITY((+ 925.460), clamp((+ 925.460), (+ 925.460), (+ 925.460)))) - 0.0))), bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), ! (! ((injectionSwitch.x > injectionSwitch.y))))), ! (! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))))))), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec2(_GLF_IDENTITY(-1100.0032, (-1100.0032) - 0.0), -847.100).t), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-0.8)), bvec2(true, false))).y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((- 92.21))), bool(false))))) > injectionSwitch.y))))) && true), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))), false)))))), bool(bvec3(! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-25.16), _GLF_FUZZED(0.8)), bvec2(false, false))).y), float(_GLF_FUZZED((+ 925.460))), _GLF_IDENTITY(bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))), true && (bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))) && true), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0)))).y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY((+ 925.460), (_GLF_IDENTITY((+ 925.460), clamp((+ 925.460), (+ 925.460), (+ 925.460)))) - 0.0))), bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), ! (! ((injectionSwitch.x > injectionSwitch.y))))), ! (! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))))))), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec2(_GLF_IDENTITY(-1100.0032, (-1100.0032) - 0.0), -847.100).t), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-0.8)), bvec2(true, false))).y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((- 92.21))), bool(false))))) > injectionSwitch.y))))) && true), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))), false)))))), false, true)))))))))) || _GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(false || (! (false)), (false || (! (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false)))), false || _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false))))), ! (! ((bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false)))))))))) || (false)))))))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, _GLF_IDENTITY(0u, (0u) >> 0u), 0u) ^ (gl_WorkGroupID))) | (gl_WorkGroupID))), min(uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, _GLF_IDENTITY(0u, (0u) >> 0u), 0u) ^ (gl_WorkGroupID))) | (gl_WorkGroupID))), uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, _GLF_IDENTITY(0u, (0u) >> 0u), 0u) ^ (gl_WorkGroupID))) | (gl_WorkGroupID)))))).x, ~ (~ (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, _GLF_IDENTITY(0u, (0u) >> 0u), 0u) ^ (gl_WorkGroupID))) | (gl_WorkGroupID))), min(uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, _GLF_IDENTITY(0u, (0u) >> 0u), 0u) ^ (gl_WorkGroupID))) | (gl_WorkGroupID))), uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, _GLF_IDENTITY(0u, (0u) >> 0u), 0u) ^ (gl_WorkGroupID))) | (gl_WorkGroupID)))))).x)));
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), bool(_GLF_IDENTITY(bool(bool(bvec3(false, true, true))), true && (bool(bool(bvec3(false, true, true))))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id)), max(_GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id)), _GLF_IDENTITY(workgroup_id, (workgroup_id) | (_GLF_IDENTITY(workgroup_id, 0u ^ (workgroup_id)))))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(workgroup_id, 1u, 0u), (uvec3(_GLF_IDENTITY(workgroup_id, (workgroup_id) | 0u), 1u, 0u)) | uvec3(0u, 0u, 0u))), max(uint(_GLF_IDENTITY(uvec3(workgroup_id, 1u, 0u), (uvec3(workgroup_id, 1u, 0u)) | uvec3(0u, 0u, 0u))), uint(_GLF_IDENTITY(uvec3(workgroup_id, 1u, 0u), (uvec3(workgroup_id, 1u, 0u)) | uvec3(0u, _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) | 0u), _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(0u, 1u, (1u | 0u), 0u), _GLF_IDENTITY((uvec4(0u, 1u, (1u | 0u), 0u)) >> uvec4(0u, 0u, 0u, 0u), (_GLF_IDENTITY((uvec4(0u, 1u, (1u | 0u), 0u)) >> uvec4(0u, 0u, 0u, 0u), ((uvec4(0u, 1u, (1u | 0u), 0u)) >> uvec4(0u, 0u, 0u, 0u)) / uvec4(1u, 1u, 1u, 1u))) ^ uvec4(0u, 0u, 0u, 0u)))), 1u * (uint(_GLF_IDENTITY(uvec4(0u, 1u, (1u | 0u), 0u), (uvec4(0u, 1u, (1u | 0u), 0u)) >> uvec4(0u, 0u, _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) | (0u)), 0u)) : _GLF_FUZZED(workgroup_id))), 0u)))))), 0u)), 0u))))))) | (workgroup_id), max(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(workgroup_id, 1u, 0u), (uvec3(workgroup_id, 1u, 0u)) | uvec3(0u, 0u, 0u))), max(uint(_GLF_IDENTITY(uvec3(workgroup_id, 1u, 0u), (uvec3(workgroup_id, 1u, 0u)) | uvec3(_GLF_IDENTITY(0u, (0u) | (0u)), 0u, _GLF_IDENTITY(0u, 0u ^ (0u))))), uint(_GLF_IDENTITY(uvec3(workgroup_id, 1u, 0u), (uvec3(workgroup_id, 1u, 0u)) | uvec3(0u, _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) | 0u), _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(0u, 1u, (_GLF_IDENTITY(1u | 0u, clamp(1u | 0u, 1u | 0u, 1u | 0u))), 0u), (uvec4(0u, 1u, (1u | 0u), 0u)) >> uvec4(0u, 0u, 0u, 0u))), 1u * (uint(_GLF_IDENTITY(uvec4(0u, 1u, (1u | 0u), 0u), (uvec4(0u, 1u, (1u | 0u), 0u)) >> uvec4(0u, 0u, 0u, 0u)))))), 0u)), 0u))))))) | (workgroup_id), ((_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(workgroup_id, 1u, _GLF_IDENTITY(0u, ~ (~ (0u)))), (uvec3(workgroup_id, 1u, 0u)) | uvec3(0u, 0u, 0u))), (uint(_GLF_IDENTITY(uvec3(workgroup_id, 1u, _GLF_IDENTITY(0u, ~ (~ (0u)))), (uvec3(workgroup_id, 1u, 0u)) | uvec3(0u, 0u, 0u)))) | (uint(_GLF_IDENTITY(uvec3(workgroup_id, 1u, _GLF_IDENTITY(0u, ~ (~ (0u)))), (uvec3(workgroup_id, 1u, 0u)) | uvec3(0u, 0u, 0u))))), max(uint(_GLF_IDENTITY(uvec3(workgroup_id, 1u, 0u), (uvec3(workgroup_id, 1u, 0u)) | uvec3(0u, 0u, 0u))), uint(_GLF_IDENTITY(uvec3(workgroup_id, 1u, 0u), (uvec3(workgroup_id, 1u, 0u)) | uvec3(0u, _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) | 0u), _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(0u, 1u, (1u | 0u), 0u), (uvec4(0u, 1u, (1u | 0u), 0u)) >> uvec4(0u, _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec3(0u, 0u, 0u), max(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))))), 0u, 0u))), 1u * (uint(_GLF_IDENTITY(uvec4(0u, 1u, (1u | 0u), 0u), (uvec4(0u, 1u, (1u | 0u), 0u)) >> uvec4(0u, 0u, 0u, 0u)))))), 0u)), 0u))))))) | (workgroup_id)) | (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(workgroup_id, 1u, 0u), (uvec3(workgroup_id, 1u, 0u)) | uvec3(0u, 0u, 0u))), max(uint(_GLF_IDENTITY(uvec3(workgroup_id, 1u, 0u), (uvec3(workgroup_id, 1u, 0u)) | uvec3(0u, 0u, 0u))), uint(_GLF_IDENTITY(uvec3(workgroup_id, 1u, 0u), (uvec3(workgroup_id, 1u, 0u)) | uvec3(0u, _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) | 0u), _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(0u, 1u, (1u | 0u), 0u), (uvec4(0u, 1u, (1u | 0u), 0u)) >> uvec4(0u, 0u, 0u, 0u))), 1u * (uint(_GLF_IDENTITY(uvec4(0u, 1u, (1u | 0u), 0u), (uvec4(0u, 1u, (1u | 0u), 0u)) >> uvec4(0u, 0u, 0u, 0u)))))), 0u)), 0u))))))), clamp((_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(workgroup_id, 1u, 0u), (uvec3(workgroup_id, 1u, 0u)) | uvec3(0u, 0u, 0u))), max(uint(_GLF_IDENTITY(uvec3(workgroup_id, 1u, 0u), (uvec3(workgroup_id, 1u, 0u)) | uvec3(0u, 0u, 0u))), uint(_GLF_IDENTITY(uvec3(workgroup_id, 1u, 0u), (uvec3(workgroup_id, 1u, 0u)) | uvec3(0u, _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) | 0u), _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(0u, 1u, (1u | 0u), 0u), (uvec4(0u, 1u, (1u | 0u), 0u)) >> uvec4(0u, 0u, 0u, 0u))), 1u * (uint(_GLF_IDENTITY(uvec4(0u, 1u, (1u | 0u), 0u), (uvec4(0u, 1u, (1u | 0u), 0u)) >> uvec4(0u, 0u, 0u, 0u)))))), 0u)), 0u))))))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(workgroup_id, 1u, 0u), (uvec3(workgroup_id, 1u, 0u)) | uvec3(0u, 0u, 0u))), max(uint(_GLF_IDENTITY(uvec3(workgroup_id, 1u, 0u), (uvec3(workgroup_id, 1u, 0u)) | uvec3(0u, 0u, 0u))), uint(_GLF_IDENTITY(uvec3(workgroup_id, 1u, 0u), (uvec3(workgroup_id, 1u, 0u)) | uvec3(0u, _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) | 0u), _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(0u, 1u, (1u | 0u), 0u), (uvec4(0u, 1u, (1u | 0u), 0u)) >> uvec4(0u, 0u, 0u, 0u))), 1u * (uint(_GLF_IDENTITY(uvec4(0u, 1u, (1u | 0u), 0u), (uvec4(0u, 1u, (1u | 0u), 0u)) >> uvec4(0u, 0u, 0u, 0u)))))), 0u)), 0u))))))), 0u + ((_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(workgroup_id, 1u, 0u), (uvec3(workgroup_id, 1u, 0u)) | uvec3(0u, 0u, 0u))), max(uint(_GLF_IDENTITY(uvec3(workgroup_id, 1u, 0u), (uvec3(workgroup_id, 1u, 0u)) | uvec3(0u, 0u, 0u))), uint(_GLF_IDENTITY(uvec3(workgroup_id, 1u, 0u), (uvec3(workgroup_id, 1u, 0u)) | uvec3(0u, _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) | 0u), _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(0u, 1u, (1u | 0u), 0u), (uvec4(0u, 1u, (1u | 0u), 0u)) >> uvec4(0u, 0u, 0u, 0u))), 1u * (uint(_GLF_IDENTITY(uvec4(0u, 1u, (1u | 0u), 0u), (uvec4(0u, 1u, (1u | 0u), 0u)) >> uvec4(0u, 0u, 0u, 0u)))))), 0u)), 0u))))))))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(workgroup_id, 1u, 0u), (uvec3(workgroup_id, 1u, 0u)) | uvec3(0u, 0u, 0u))), max(uint(_GLF_IDENTITY(uvec3(workgroup_id, 1u, 0u), (uvec3(workgroup_id, 1u, 0u)) | uvec3(0u, 0u, 0u))), uint(_GLF_IDENTITY(uvec3(workgroup_id, 1u, 0u), (uvec3(workgroup_id, 1u, 0u)) | uvec3(0u, _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) | 0u), _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(0u, 1u, (1u | 0u), 0u), (uvec4(0u, 1u, (1u | 0u), 0u)) >> uvec4(0u, 0u, 0u, 0u))), 1u * (uint(_GLF_IDENTITY(uvec4(0u, 1u, (1u | 0u), 0u), (uvec4(0u, 1u, (1u | 0u), 0u)) >> uvec4(0u, 0u, 0u, 0u)))))), 0u)), 0u))))))), uint(uvec2((_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(workgroup_id, 1u, 0u), (uvec3(workgroup_id, 1u, 0u)) | uvec3(0u, 0u, 0u))), max(uint(_GLF_IDENTITY(uvec3(workgroup_id, 1u, 0u), (uvec3(workgroup_id, 1u, 0u)) | uvec3(0u, 0u, 0u))), uint(_GLF_IDENTITY(uvec3(workgroup_id, 1u, 0u), (uvec3(workgroup_id, 1u, 0u)) | uvec3(0u, _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) | 0u), _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(0u, 1u, (1u | 0u), 0u), (uvec4(0u, 1u, (1u | 0u), 0u)) >> uvec4(0u, 0u, 0u, 0u))), 1u * (uint(_GLF_IDENTITY(uvec4(0u, 1u, (1u | 0u), 0u), (uvec4(0u, 1u, (1u | 0u), 0u)) >> uvec4(0u, 0u, 0u, 0u)))))), 0u)), 0u))))))), 1u))))) | (workgroup_id))), (_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(workgroup_id, 1u, 0u), (uvec3(workgroup_id, 1u, 0u)) | uvec3(0u, 0u, 0u))), max(uint(_GLF_IDENTITY(uvec3(workgroup_id, 1u, 0u), (uvec3(workgroup_id, 1u, 0u)) | _GLF_IDENTITY(uvec3(0u, 0u, 0u), min(_GLF_IDENTITY(uvec3(0u, 0u, 0u), (true ? uvec3(0u, 0u, 0u) : _GLF_FUZZED(uvec3(163642u, 33533u, 15797u)))), uvec3(0u, 0u, 0u))))), uint(_GLF_IDENTITY(uvec3(workgroup_id, 1u, 0u), (uvec3(workgroup_id, 1u, 0u)) | uvec3(0u, _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) | 0u), _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(0u, 1u, (1u | 0u), 0u), (uvec4(0u, 1u, (1u | 0u), 0u)) >> uvec4(0u, 0u, 0u, 0u))), 1u * (uint(_GLF_IDENTITY(uvec4(0u, 1u, (1u | 0u), 0u), (uvec4(0u, 1u, (1u | 0u), 0u)) >> uvec4(0u, 0u, 0u, 0u)))))), 0u)), 0u))))))) | (workgroup_id)))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id))) | (_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id) | (workgroup_id), ((workgroup_id) | (_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id)))) - 0u))) | ((workgroup_id) | (workgroup_id))))), min((_GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id))) | (_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id) | (workgroup_id), ((workgroup_id) | (_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id)))) - 0u))) | ((workgroup_id) | (workgroup_id))))), (_GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id))) | (_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id) | (workgroup_id), ((workgroup_id) | (_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id)))) - 0u))) | ((workgroup_id) | (workgroup_id)))))))), _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, 0u | (workgroup_id))) | (workgroup_id))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))), ! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (! (false))))), ! (! ((! (_GLF_IDENTITY(false, ! (! (false)))))))))) || false))), false || _GLF_IDENTITY(((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))))))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (! (false))))), ! (! ((! (_GLF_IDENTITY(false, ! (! (false)))))))))) || false)))), bool(bvec2(((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))))))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (! (false))))), ! (! ((! (_GLF_IDENTITY(false, ! (! (false)))))))))) || false)))), false)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, 0.0), max(vec3(injectionSwitch, 0.0), vec3(injectionSwitch, 0.0))))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, 0.0), max(vec3(injectionSwitch, 0.0), vec3(injectionSwitch, 0.0))))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, 0.0), max(vec3(injectionSwitch, 0.0), vec3(injectionSwitch, 0.0))))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))) * mat2(1.0))) * vec2(1.0, 1.0)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || false)), bool(bvec4(! ((injectionSwitch.x > injectionSwitch.y)), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (workgroup_base + subgroup_id * subgroup_size) / 1u) + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), true, false, false)), (bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), true, false, false))) && true))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(atomicMin(subgroup_id, 154831u)) : subgroup_id)))) * _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(7.2) : _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x4(injectionSwitch.x, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0)), max(float(mat2x4(injectionSwitch.x, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0)), float(mat2x4(injectionSwitch.x, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0)))))))))) + (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(subgroup_size, 0u), (uvec2(subgroup_size, 0u)) / uvec2(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY((1u) | (1u), (false ? _GLF_FUZZED(num_workgroup) : (1u) | (1u))))))), uint(uvec2(uint(_GLF_IDENTITY(uvec2(subgroup_size, 0u), (uvec2(subgroup_size, 0u)) / uvec2(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY((1u) | (1u), (false ? _GLF_FUZZED(num_workgroup) : (1u) | (1u))))))), 1u))), uint(uvec4(uint(_GLF_IDENTITY(uvec2(subgroup_size, 0u), (uvec2(subgroup_size, 0u)) / uvec2(1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, (1u) ^ 0u)))) | (1u))))), 0u, (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(3u), uint(3u)), min(_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(3u), uint(3u)), clamp(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 0u << _GLF_IDENTITY(uint(3u), uint(3u)), 0u << _GLF_IDENTITY(uint(3u), uint(3u)))), 0u << _GLF_IDENTITY(uint(3u), uint(3u))))), 1u)))), _GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_size, 0u), (uvec2(subgroup_size, 0u)) - _GLF_IDENTITY(uvec2(0u, 0u), max(uvec2(0u, 0u), _GLF_IDENTITY(_GLF_IDENTITY(uvec2(0u, 0u), max(uvec2(0u, 0u), uvec2(0u, 0u))), max(_GLF_IDENTITY(uvec2(0u, 0u), max(uvec2(0u, 0u), uvec2(0u, 0u))), _GLF_IDENTITY(uvec2(0u, 0u), max(uvec2(0u, 0u), uvec2(0u, 0u)))))))), (uvec2(subgroup_size, 0u)) / uvec2(1u, 1u))))), (((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_size, 0u), (_GLF_IDENTITY(uvec2(subgroup_size, 0u), _GLF_IDENTITY(uvec2(uvec2(uvec2(subgroup_size, 0u))), (_GLF_IDENTITY(uvec2(uvec2(uvec2(subgroup_size, 0u))), (uvec2(uvec2(uvec2(subgroup_size, 0u)))) - uvec2(0u, 0u))) - uvec2(0u, 0u)))) - uvec2(_GLF_IDENTITY(0u, 0u ^ (0u)), 0u)), (uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u)) / uvec2(1u, 1u)))))) ^ 0u) | ((subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-47548) : _GLF_IDENTITY(1, (false ? _GLF_FUZZED(90392) : 1))))) % _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec2(subgroup_size, 0u), (uvec2(subgroup_size, 0u)) / uvec2(1u, 1u)))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), false, true))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), 0.0, 0.0)), (float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(6.0) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), mix(float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))))), float(_GLF_FUZZED(-446.123)), bool(false))))) : _GLF_FUZZED(float(98909)))), 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-83.18)))))) * 1.0)), mix(float(_GLF_FUZZED(-9.7)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-652.123)), vec2(_GLF_FUZZED((-5.8 * 1460.0150)), (injectionSwitch)[1]), bvec2(false, true))).x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).x)))), _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0)), min(float(vec3(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-652.123)), vec2(_GLF_FUZZED((-5.8 * 1460.0150)), (injectionSwitch)[1]), bvec2(false, true))).x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).x)))), _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0)), float(vec3(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-652.123)), vec2(_GLF_FUZZED((-5.8 * 1460.0150)), (injectionSwitch)[1]), bvec2(false, true))).x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, log(1.0), 0.0, 0.0, 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), round(length(normalize(1.0))), 1.0))).x)))), _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0)))), (float(vec3(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_IDENTITY(mat4(max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), 0.0, 0.0, length(0.0), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x)), (true ? mat4(max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), 0.0, 0.0, length(0.0), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(mat4(6.1, -7666.7986, 978.282, 1.6, -9.1, 85.04, 4.2, 7205.2931, -1973.5578, 2.6, -4810.0965, -3481.4781, 9.3, 844.859, -74.94, 473.897))))))), 0.0, 0.0))) * 1.0)), max(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), 0.0, 0.0)), (float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))))), float(mat4x2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))))), min((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))))), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))))))), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))) / 1.0), 0.0, 0.0))) * 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), 0.0, 0.0)), (float(vec3(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(9.7)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), mix(float(_GLF_FUZZED(-5529.0971)), float(_GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(9.7)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), clamp(mix(float(injectionSwitch.x), float(_GLF_FUZZED(9.7)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), mix(float(injectionSwitch.x), float(_GLF_FUZZED(9.7)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), mix(float(injectionSwitch.x), float(_GLF_FUZZED(9.7)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(true)))), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), 0.0, 0.0))) * 1.0))))), bool(_GLF_IDENTITY(true, (true) || false)))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
      barrier();
     barrier();
    }
   barrier();
  }
 _GLF_IDENTITY(buf[virtual_gid] = 1, (buf[virtual_gid] = 1) - 0u);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, bool(_GLF_IDENTITY(bvec3((_GLF_DEAD(false)) && true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(_GLF_IDENTITY(bvec3(bvec3((_GLF_DEAD(false)) && true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec3(bvec3(bvec3((_GLF_DEAD(false)) && true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_DEAD(false)), (_GLF_IDENTITY(true && (_GLF_DEAD(false)), bool(bvec3(true && (_GLF_DEAD(false)), false, false)))) || false)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(45.93)), float(injectionSwitch.x), bool(true))))))) > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(102916u)), _GLF_FUZZED(-87.53)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(true, true))).y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(102916u)), _GLF_FUZZED(-87.53)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(102916u)), _GLF_FUZZED(-87.53)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))) * mat2(1.0)).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(102916u)), _GLF_FUZZED(-87.53)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y)) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), ! (! (bool(bvec3(false, true, false))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 atomicStore(buf[next_virtual_gid], uint(2), _GLF_IDENTITY(4, int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x)) ^ (4)), _GLF_IDENTITY(64, (_GLF_IDENTITY(64, max(64, 64))) + 0), 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)) || _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), ! (! ((_GLF_IDENTITY(false, bool(bvec3(false, true, true))))))))), false || (_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec3(false, true, true))), false || (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false)))), true, true)))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (false ? _GLF_FUZZED(24.65) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y : _GLF_FUZZED(9772.3939)))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 1.0, 1.0, 1.0))).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
