#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(gl_NumWorkGroups[0], _GLF_IDENTITY((gl_NumWorkGroups[0]), (_GLF_IDENTITY((gl_NumWorkGroups[0]), 0u + ((gl_NumWorkGroups[0])))) | ((gl_NumWorkGroups[0]))) | (_GLF_IDENTITY(gl_NumWorkGroups[0], uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (gl_NumWorkGroups[0])))), gl_NumWorkGroups[1], gl_NumWorkGroups[_GLF_IDENTITY(2, (2) | 0)])).x;
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))), bool(bvec4(true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(false), (bool(false)) && true), true, false)), bool(_GLF_IDENTITY(bvec3(bool(bvec3(_GLF_IDENTITY(bool(false), (bool(false)) && true), true, false)), false, false), bvec3(bvec3(bvec3(bool(bvec3(_GLF_IDENTITY(bool(false), (bool(false)) && true), true, false)), false, false))))))), bool(bvec3(bool(false), true, false))))), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) < injectionSwitch.y)))))))
      {
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, uvec3(1u, 1u, 1u) * (gl_WorkGroupSize)).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false)))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     barrier();
    }
  }
 do
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) || false, bool(bool((_GLF_DEAD(false)) || false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, (true ? _GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID.x, 0u | (_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u), (_GLF_IDENTITY(uvec3(0u, 0u, 0u), (false ? _GLF_IDENTITY(_GLF_FUZZED(uvec3(34312u, 168700u, 141093u)), max(_GLF_IDENTITY(_GLF_FUZZED(uvec3(34312u, 168700u, 141093u)), uvec3(uvec4(_GLF_FUZZED(uvec3(34312u, 168700u, 141093u)), ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u)))))), _GLF_FUZZED(uvec3(34312u, 168700u, 141093u)))) : uvec3(0u, 0u, 0u)))) + uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(uvec3(0u, 0u, 0u), (_GLF_IDENTITY(uvec3(0u, 0u, 0u), (false ? _GLF_FUZZED(uvec3(34312u, 168700u, 141093u)) : uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) >> 0u))))) + _GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) * 1.0), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), (uvec3(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) >> _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u) ^ uvec3(1u, 1u, 1u)) * (uvec3(0u, 0u, 0u))))) + uvec3(0u, 0u, 0u)))) / uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))) >> _GLF_IDENTITY(uvec3(7u), uvec3(7u))) ^ _GLF_IDENTITY((gl_WorkGroupID), (_GLF_IDENTITY((gl_WorkGroupID), uvec3(0u, 0u, 0u) | ((gl_WorkGroupID)))) >> uvec3(0u, 0u, 0u))).x))) ^ _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) : _GLF_FUZZED(subgroup_local_id)));
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, max(workgroup_size, _GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)))), clamp(_GLF_IDENTITY(workgroup_size, max(workgroup_size, _GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)))), _GLF_IDENTITY(workgroup_size, max(workgroup_size, _GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, max(workgroup_size, _GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)))), (_GLF_IDENTITY(workgroup_size, max(_GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u), _GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size))))) - 0u))) * _GLF_IDENTITY(workgroup_id, ~ _GLF_IDENTITY((~ (workgroup_id)), 0u + (_GLF_IDENTITY((~ (workgroup_id)), ((~ (workgroup_id))) | ((~ (workgroup_id)))))));
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true)))))) ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), uint(_GLF_IDENTITY(uint(_GLF_FUZZED(workgroup_base)), (uint(_GLF_FUZZED(workgroup_base))) / 1u))) : subgroup_id * subgroup_size)) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_local_id : _GLF_FUZZED(workgroup_id))), (subgroup_local_id) | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)), min((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u))))), _GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), 0u + (0u))) ^ 0u) | (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, _GLF_IDENTITY(min(workgroup_base + _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))))) * subgroup_size + subgroup_local_id, workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), max(min(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), min(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, workgroup_base + subgroup_id * subgroup_size + subgroup_local_id))))));
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), ! (! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))))) || false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
      }
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(false))
      {
       do
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))))))
          barrier();
        }
       else
        {
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, abs(0.0), 1.0, 1.0, cos(0.0), determinant(mat4(cos(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, abs(0.0), 0.0, 1.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(ldexp(refract(-9.4, 5253.9157, _GLF_IDENTITY(-5.4, (true ? -5.4 : _GLF_FUZZED((7.0 / 43.34))))), -75847)) : 1.0)), 1.0)))))))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) / (1 & ((1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), max(_GLF_IDENTITY(int(0), max(int(0), int(0))), int(0))))) >> _GLF_IDENTITY(int(0), int(0))))))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), ! (! (! (false)))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! _GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), ((false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)))))))), bool(bvec4(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! (false), bool(bool(! (false)))), false, false, false))), false || (! (false)))))), false, false, _GLF_IDENTITY(false, ! (! (false))))))))))
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                  {
                   barrier();
                  }
                 else
                  {
                  }
                }
               barrier();
              }
            }
           else
            {
             barrier();
            }
          }
        }
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec3(true, true, true)))))
        {
         barrier();
        }
       else
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(73.13)), vec2(_GLF_FUZZED(-171.384), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true) || false), true, true), false))), true)))))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))), true && ((injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
        }
       else
        {
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((! (true)), _GLF_IDENTITY(! (! (_GLF_IDENTITY((! (true)), ! (! ((! (true))))))), true && (! (! (_GLF_IDENTITY(_GLF_IDENTITY((! (true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((! (true)))), ! (! ((! (true)))))))))), ! (! (_GLF_IDENTITY((! (true)), _GLF_IDENTITY(! (! (_GLF_IDENTITY((! (true)), ! (! ((! (true))))))), true && (! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(true, bool(bvec2(true, true))))), ! (! ((! (_GLF_IDENTITY(true, bool(bvec2(true, true)))))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && ((! (true)))), ! (! ((! (true)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(true, bool(bvec2(true, true))))), ! (! ((! (_GLF_IDENTITY(true, bool(bvec2(true, true)))))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && ((! (true)))), ! (! ((! (true))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(true, bool(bvec2(true, true))))), ! (! ((! (_GLF_IDENTITY(true, bool(bvec2(true, true)))))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && ((! (true)))), ! (! ((! (true))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(true, bool(bvec2(true, true))))), ! (! ((! (_GLF_IDENTITY(true, bool(bvec2(true, true)))))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && ((! (true)))), ! (! ((! (true)))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(true, bool(bvec2(true, true))))), ! (! ((! (_GLF_IDENTITY(true, bool(bvec2(true, true)))))))), _GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && ((! (true)))), ! (! ((! (true))))))) || false)))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(true, bool(bvec2(true, true))))), ! (! ((! (_GLF_IDENTITY(true, bool(bvec2(true, true)))))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && ((! (true)))), ! (! ((! (true))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))))))), false)))), true && _GLF_IDENTITY((true), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((true), false || ((true))), bool(bvec4((true), false, true, true))), false, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bvec4((true), _GLF_IDENTITY(false, (false) || false), true, true))), ! (! (_GLF_IDENTITY((true), bool(bvec4((true), false, true, true)))))), false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bvec4((true), _GLF_IDENTITY(false, (false) || false), true, true))), ! (! (_GLF_IDENTITY((true), bool(bvec4((true), false, true, true)))))), false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bvec4((true), _GLF_IDENTITY(false, (false) || false), true, true))), ! (! (_GLF_IDENTITY((true), bool(bvec4((true), false, true, true)))))), false, false)), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bvec4((true), _GLF_IDENTITY(false, (false) || false), true, true))), ! (! (_GLF_IDENTITY((true), bool(bvec4((true), false, true, true)))))), false, false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), bool(bvec2(_GLF_IDENTITY((! (true)), _GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY((! (true)), ! (! _GLF_IDENTITY(((! (true))), bool(bvec2(_GLF_IDENTITY(((! (true))), ! (! (((! (true)))))), false))))))), true && (! (! (_GLF_IDENTITY(_GLF_IDENTITY((! (true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((! (true)))), ! (! ((! (true))))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY((! (true)), ! (! _GLF_IDENTITY(((! (true))), bool(bvec2(_GLF_IDENTITY(((! (true))), ! (_GLF_IDENTITY(! (((! (true)))), bool(bvec4(! (((! (true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false))))))), true && (! (! (_GLF_IDENTITY(_GLF_IDENTITY((! (true)), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x < injectionSwitch.y)), (bool((injectionSwitch.x < injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && ((! (true)))), ! (! ((! (true))))))))), (_GLF_IDENTITY(! (! (_GLF_IDENTITY((! (true)), ! (! _GLF_IDENTITY((_GLF_IDENTITY((! (true)), false || ((! (true))))), bool(bvec2(_GLF_IDENTITY(((! (true))), ! (! (((! (true)))))), false))))))), true && (! (! (_GLF_IDENTITY(_GLF_IDENTITY((! (true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((! (true)))), ! (! ((! (true)))))))))) && true), true, false, true)), false || (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY((! (true)), ! (! _GLF_IDENTITY(((! (true))), bool(bvec2(_GLF_IDENTITY(((! (true))), ! (_GLF_IDENTITY(! (((! (true)))), bool(bvec4(! (((! (true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false))))))), true && (! (! (_GLF_IDENTITY(_GLF_IDENTITY((! (true)), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x < injectionSwitch.y)), (bool((injectionSwitch.x < injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && ((! (true)))), ! (! ((! (true))))))))), (_GLF_IDENTITY(! (! (_GLF_IDENTITY((! (true)), ! (! _GLF_IDENTITY((_GLF_IDENTITY((! (true)), false || ((! (true))))), bool(bvec2(_GLF_IDENTITY(((! (true))), ! (! (((! (true)))))), false))))))), true && (! (! (_GLF_IDENTITY(_GLF_IDENTITY((! (true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((! (true)))), ! (! ((! (true)))))))))) && true), true, false, true)))))), false)))), true && _GLF_IDENTITY((true), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((true), bool(bvec4((true), false, true, true))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bvec4(_GLF_IDENTITY((true), true && ((true))), false, true, true))), ! _GLF_IDENTITY((! (_GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec4((true), false, true, true)), (bool(bvec4((true), false, true, true))) || false)))), false || ((! (_GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec4((true), false, true, true)), (bool(bvec4((true), false, true, true))) || false))))))), false, false))))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (false))))
          barrier();
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
          }
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
          }
        }
       for(int _injected_loop_counter = (_GLF_IDENTITY(0, (0) | int(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)))))).x))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY((0 | 1), (_GLF_IDENTITY((0 | 1), 0 + ((0 | 1)))) << 0) * (_GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), (0 >> _GLF_IDENTITY(int(3), int(3))) | (int(8))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)))); _injected_loop_counter ++)
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x < injectionSwitch.y)))), bool(bvec4(_GLF_IDENTITY(bool(bvec3(false, true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)) || false), true && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))) || false), false)), (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y) - 0.0)), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y) - 0.0)), false, false)), ! (! (bool(bvec3((injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y) - 0.0)), false, false)))))), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)) && true), true && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))) || false), false)), bool(bvec4(bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(bool(bool(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), true && (bool(bool(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))))), (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), true && ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(7557.8013)), float(injectionSwitch.x), bool(true))) < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))) || false), false)), false, true, true)))) || false))))), (bool(bvec3(false, true, _GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false), (injectionSwitch.x < injectionSwitch.y))))) && true), false, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), false))))), false)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x < injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x < injectionSwitch.y)))))), bool(bvec4(_GLF_IDENTITY(bool(bvec3(false, true, _GLF_TRUE(true, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), true && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))) || false), false)), (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), true && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))) || false), false)), bool(bvec4(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), true && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))) || false), false), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), true && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))) || false), false), false), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), true && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))) || false), false), false), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), true && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))) || false), false), false), false)), false))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), true && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))) || false), false), false), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), true && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))) || false), false), false), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), true && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))) || false), false), false), false)), false))))), true, true))))), false, true, true)))) || false)), true && (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), max(_GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (true ? mat2(1.0) * (clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(1.5, -4845.6821))))), _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), vec2(mat3(clamp(injectionSwitch, injectionSwitch, injectionSwitch), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)))))).y), (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), mat2(1.0) * (clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), mat2(1.0) * (clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y : _GLF_FUZZED(radians(injectionSwitch[1]))))), true && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))) || false), false)), (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))) - 0.0)), _GLF_IDENTITY(true && _GLF_IDENTITY(((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), true && (_GLF_IDENTITY(((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), ! (_GLF_IDENTITY(! (((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), (! (((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))) && true))))), (_GLF_IDENTITY(true && ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y)), ! (! (_GLF_IDENTITY(true && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))) + vec2(0.0, 0.0)))).y)), ! (! _GLF_IDENTITY((true && _GLF_IDENTITY(((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), (((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))) && true)), _GLF_IDENTITY(bool(bvec2((true && _GLF_IDENTITY(((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), (((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))) && true)), false)), false || (bool(bvec2((true && _GLF_IDENTITY(((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), (((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))) && true)), false))))))))))) || false))) || _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), true && (bool(bvec3(_GLF_IDENTITY(false, (false) || false), false, true))))), true, false, _GLF_IDENTITY(false, ! (! (false))))))), false)), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), _GLF_IDENTITY(true && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), bool(bvec3(_GLF_IDENTITY(true && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, true && (true)) && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))), (bool(bool(_GLF_IDENTITY(true && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), _GLF_IDENTITY(bool(bool(true && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))), (bool(bool(true && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))) && true))))) || false)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))), false))))) || false), false), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), _GLF_IDENTITY(true && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), bool(bvec3(_GLF_IDENTITY(true && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, true && (true)) && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))), (bool(bool(_GLF_IDENTITY(true && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), _GLF_IDENTITY(bool(bool(true && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))), (bool(bool(true && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))) && true))))) || false)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))), false))))) || false), false), true), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), _GLF_IDENTITY(true && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), bool(bvec3(_GLF_IDENTITY(true && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, true && (true)) && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))), (bool(bool(_GLF_IDENTITY(true && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), _GLF_IDENTITY(bool(bool(true && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))), (bool(bool(true && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))) && true))))) || false)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))), false))))) || false), false), true), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), _GLF_IDENTITY(true && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), bool(bvec3(_GLF_IDENTITY(true && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, true && (true)) && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))), (bool(bool(_GLF_IDENTITY(true && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), _GLF_IDENTITY(bool(bool(true && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))), (bool(bool(true && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))) && true))))) || false)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))), false))))) || false), false), true), false))))))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), _GLF_IDENTITY(true && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), bool(bvec3(_GLF_IDENTITY(true && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, true && (true)) && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))), (bool(bool(_GLF_IDENTITY(true && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), _GLF_IDENTITY(bool(bool(true && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))), (bool(bool(true && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))) && true))))) || false)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))), false))))) || false), false), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), _GLF_IDENTITY(true && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), bool(bvec3(_GLF_IDENTITY(true && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, true && (true)) && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))), (bool(bool(_GLF_IDENTITY(true && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), _GLF_IDENTITY(bool(bool(true && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))), (bool(bool(true && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))) && true))))) || false)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))), false))))) || false), false), true), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), _GLF_IDENTITY(true && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), bool(bvec3(_GLF_IDENTITY(true && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, true && (true)) && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))), (bool(bool(_GLF_IDENTITY(true && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), _GLF_IDENTITY(bool(bool(true && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))), (bool(bool(true && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))) && true))))) || false)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))), false))))) || false), false), true), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), _GLF_IDENTITY(true && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), bool(bvec3(_GLF_IDENTITY(true && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, true && (true)) && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))), (bool(bool(_GLF_IDENTITY(true && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), _GLF_IDENTITY(bool(bool(true && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))), (bool(bool(true && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))) && true))))) || false)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))), false))))) || false), false), true), false))))))))), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), _GLF_IDENTITY(true && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), bool(bvec3(_GLF_IDENTITY(true && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, true && (true)) && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))), (bool(bool(_GLF_IDENTITY(true && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), _GLF_IDENTITY(bool(bool(true && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))), (bool(bool(true && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))) && true))))) || false)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))), false))))) || false), false), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), _GLF_IDENTITY(true && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), bool(bvec3(_GLF_IDENTITY(true && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, true && (true)) && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))), (bool(bool(_GLF_IDENTITY(true && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), _GLF_IDENTITY(bool(bool(true && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))), (bool(bool(true && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))) && true))))) || false)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))), false))))) || false), false), true), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), _GLF_IDENTITY(true && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), bool(bvec3(_GLF_IDENTITY(true && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, true && (true)) && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))), (bool(bool(_GLF_IDENTITY(true && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), _GLF_IDENTITY(bool(bool(true && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))), (bool(bool(true && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))) && true))))) || false)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))), false))))) || false), false), true), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), _GLF_IDENTITY(true && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), bool(bvec3(_GLF_IDENTITY(true && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, true && (true)) && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))), (bool(bool(_GLF_IDENTITY(true && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), _GLF_IDENTITY(bool(bool(true && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))), (bool(bool(true && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))) && true))))) || false)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))), false))))) || false), false), true), false)))))))))) || false)))), false, true, true)))) || false))))))), (bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true), false, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), ! (! (true))), false))))), false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), bool(bvec4(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x < _GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 0.0, 0.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y), 0.0, sin(0.0), 0.0, 1.0, 0.0, determinant(mat4(cos(0.0), 0.0, 0.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, tan(0.0), determinant(mat3(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))), length(log(vec2(1.0, 1.0))), 1.0))).y), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x < _GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 0.0, 0.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y), 0.0, sin(0.0), 0.0, 1.0, 0.0, determinant(mat4(cos(0.0), 0.0, 0.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, tan(0.0), determinant(mat3(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))), length(log(vec2(1.0, 1.0))), 1.0))).y)), false || (bool((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x < _GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 0.0, 0.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y), 0.0, sin(0.0), 0.0, 1.0, 0.0, determinant(mat4(cos(0.0), 0.0, 0.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, tan(0.0), determinant(mat3(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))), length(log(vec2(1.0, 1.0))), 1.0))).y))))))))), bool(bvec4(_GLF_IDENTITY(bool(bvec3(false, true, _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(8.5)), bool(false))) < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))), clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(vec2(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0)), min(vec2(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0)), vec2(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0))))).y), true && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))) || false), false)), (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), max(_GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), min(clamp(injectionSwitch, injectionSwitch, injectionSwitch), clamp(injectionSwitch, injectionSwitch, injectionSwitch))), _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), vec2(vec2(clamp(injectionSwitch, injectionSwitch, injectionSwitch))))))).y), (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), true && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))) || false), false)), bool(bvec4(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), true && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), true && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))), bool(bool(! (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), true && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))))))))) || false), false)), false, true, true)))) || false))))), (bool(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true), false, _GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), false || (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, ! (! (true))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(true, ! (! (true))), false), false))))))), false)))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), false || (bool(bvec2(true, true)))))))))), _GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, bool(bool(_GLF_IDENTITY((true) && true, bool(bvec3((true) && true, true, false))))))), true, false)))), (injectionSwitch.x > injectionSwitch.y))))
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (_GLF_IDENTITY(int(0), max(_GLF_IDENTITY(int(0), min(int(0), int(0))), int(_GLF_IDENTITY(0, (0) + 0))))) | (int(0))))) >> _GLF_IDENTITY(int(0), int(0)))); _injected_loop_counter ++)
              {
               do
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), true && (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))) || false))
                    {
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       barrier();
                      }
                     else
                      {
                      }
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                  }
                 else
                  {
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
               for(int _injected_loop_counter = _GLF_IDENTITY(1, int(ivec4(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1, 0, 1))); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                {
                 do
                  {
                   do
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, true && (true))))
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))
                      barrier();
                    }
                   else
                    {
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                }
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     barrier();
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   else
                    {
                    }
                  }
                }
               else
                {
                }
               if(_GLF_DEAD(false))
                barrier();
              }
            }
           else
            {
             if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(8.5), _GLF_FUZZED(-50.91)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(true, true))), injectionSwitch))) - vec2(0.0, 0.0), (false ? _GLF_FUZZED(injectionSwitch) : (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)))).x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), vec2(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(abs(0.0), _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(abs(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), _GLF_IDENTITY(float(mat2(abs(0.0), 0.0, 1.0, 0.0)), clamp(float(mat2(abs(0.0), 0.0, 1.0, 0.0)), _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(abs(0.0), 0.0, 1.0, 0.0), _GLF_IDENTITY((mat2(abs(0.0), 0.0, 1.0, 0.0)), mat2(mat2x3((mat2(abs(0.0), 0.0, 1.0, 0.0))))) * mat2(1.0))), (float(_GLF_IDENTITY(mat2(abs(0.0), 0.0, 1.0, 0.0), _GLF_IDENTITY((mat2(abs(0.0), 0.0, 1.0, 0.0)), mat2(mat2x3((mat2(abs(0.0), 0.0, 1.0, 0.0))))) * mat2(1.0)))) - 0.0), float(mat2(abs(0.0), 0.0, 1.0, 0.0))))), 1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 1.0), vec4(0.0, 1.0, 1.0, 0.0))), 0.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), determinant(mat3(0.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), float(_GLF_IDENTITY(mat3x4(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, sin(0.0), 0.0, 1.0, 1.0, 1.0, abs(0.0), 1.0), mat4(1.0) * (mat3x4(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, sin(0.0), 0.0, 1.0, 1.0, 1.0, abs(0.0), 1.0)))))), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0)), (_GLF_IDENTITY(float(mat4(_GLF_IDENTITY(abs(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), _GLF_IDENTITY(float(mat2(abs(0.0), 0.0, 1.0, 0.0)), clamp(float(mat2(abs(0.0), 0.0, 1.0, 0.0)), _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(abs(0.0), 0.0, 1.0, 0.0), _GLF_IDENTITY((mat2(abs(0.0), 0.0, 1.0, 0.0)), mat2(mat2x3((mat2(abs(0.0), 0.0, 1.0, 0.0))))) * mat2(1.0))), (float(_GLF_IDENTITY(mat2(abs(0.0), 0.0, 1.0, 0.0), _GLF_IDENTITY((mat2(abs(0.0), 0.0, 1.0, 0.0)), mat2(mat2x3((mat2(abs(0.0), 0.0, 1.0, 0.0))))) * mat2(1.0)))) - 0.0), float(mat2(abs(0.0), 0.0, 1.0, 0.0))))), 1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 1.0), vec4(0.0, 1.0, 1.0, 0.0))), 0.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), determinant(mat3(0.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), float(_GLF_IDENTITY(mat3x4(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, sin(0.0), 0.0, 1.0, 1.0, 1.0, abs(0.0), 1.0), mat4(1.0) * (mat3x4(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, sin(0.0), 0.0, 1.0, 1.0, 1.0, abs(0.0), 1.0)))))), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0)), (float(mat4(_GLF_IDENTITY(abs(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), _GLF_IDENTITY(float(mat2(abs(0.0), 0.0, 1.0, 0.0)), clamp(float(mat2(abs(0.0), 0.0, 1.0, 0.0)), _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(abs(0.0), 0.0, 1.0, 0.0), _GLF_IDENTITY((mat2(abs(0.0), 0.0, 1.0, 0.0)), mat2(mat2x3((mat2(abs(0.0), 0.0, 1.0, 0.0))))) * mat2(1.0))), (float(_GLF_IDENTITY(mat2(abs(0.0), 0.0, 1.0, 0.0), _GLF_IDENTITY((mat2(abs(0.0), 0.0, 1.0, 0.0)), mat2(mat2x3((mat2(abs(0.0), 0.0, 1.0, 0.0))))) * mat2(1.0)))) - 0.0), float(mat2(abs(0.0), 0.0, 1.0, 0.0))))), 1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 1.0), vec4(0.0, 1.0, 1.0, 0.0))), 0.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), determinant(mat3(0.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), float(_GLF_IDENTITY(mat3x4(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, sin(0.0), 0.0, 1.0, 1.0, 1.0, abs(0.0), 1.0), mat4(1.0) * (mat3x4(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, sin(0.0), 0.0, 1.0, 1.0, 1.0, abs(0.0), 1.0)))))), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0))) - 0.0)) - 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, 0.0))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 0.0))).x > injectionSwitch.y, _GLF_TRUE(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), false)), true && (bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), false))))), bool(bvec2(true, true))))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, sqrt(1.0) * (injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat3x2((injectionSwitch)[0], 1.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 0.0))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-3996.8711), _GLF_FUZZED(9.5)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(8.8)), float(injectionSwitch.y), bool(true))))))), min(_GLF_IDENTITY(mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat3x2((injectionSwitch)[0], 1.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 0.0))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-3996.8711), _GLF_FUZZED(9.5)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), sqrt(vec2(1.0, 1.0)) * (mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat3x2((injectionSwitch)[0], 1.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 0.0))), (injectionSwitch)[_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, (1) | 0) : _GLF_FUZZED(_injected_loop_counter)))]), vec2(_GLF_FUZZED(-3996.8711), _GLF_FUZZED(9.5)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat3x2((injectionSwitch)[0], 1.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 0.0))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-3996.8711), _GLF_FUZZED(9.5)), bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))), vec2(mat2(mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat3x2((injectionSwitch)[0], 1.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 0.0))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-3996.8711), _GLF_FUZZED(9.5)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(6.5) : injectionSwitch.y)))))), 1.0, 1.0)))))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(float(_GLF_IDENTITY(true, bool(bvec4(true, true, true, false)))))), float(1.0), bool(true))))), 0.0, 0.0, 0.0)), vec2(_GLF_IDENTITY(1.0, float(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), abs(1.0) * (_GLF_IDENTITY(1.0, min(1.0, 1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat3x2(1.0, 0.0, 0.0, 1.0, 1.0, 1.0))), _GLF_IDENTITY(min(1.0, 1.0), _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))) + (min(1.0, 1.0)))))), 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 1.0, 0.0, 1.0, abs(0.0), 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) ? _GLF_FUZZED(65.16) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, float(mat4(0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0))), min(_GLF_IDENTITY(0.0, float(mat4(0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(0.0, float(mat4(0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0))))))))), 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) + _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 1.0), vec2(0.0, 0.0)), dot(vec2(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 1.0), vec2(0.0, 0.0)))), (0.0) - log(1.0)), 0.0, 0.0), (true ? mat4x3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 1.0, 0.0, 1.0, abs(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-10.16) : 0.0))), 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(7.8)), float(0.0), bool(true))))), 0.0, 0.0, 0.0) : _GLF_FUZZED(mat4x3(745.329, 43.82, 246.574, -654.482, 3.6, 5.6, -3752.4024, 13.40, 4.7, 8043.0158, 7.7, _GLF_IDENTITY(-936.638, (_GLF_IDENTITY(-936.638, clamp(-936.638, -936.638, -936.638))) / 1.0))))))))), 0.0))), 1.0) * (vec2(mat4x3(injectionSwitch, 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(0.0, float(float(0.0))), 0.0))))), injectionSwitch)).y, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 0.0, 1.0, sqrt(0.0), 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0)), 1.0, 0.0, 0.0, 0.0)), vec2(1.0, 1.0) * (vec2(mat4x3(injectionSwitch, 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0))))), injectionSwitch)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(527.214), _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED(-1.2)), bvec2(true, false))), _GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(vec2(1.0, 1.0) * (vec2(mat4x3(injectionSwitch, 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, min(0.0, 0.0))), float(_GLF_FUZZED(vec4(365.022, -4.4, 6368.7455, -27.32).g)), bool(false)))))), mix(vec2((vec2(1.0, 1.0) * (vec2(mat4x3(injectionSwitch, 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, min(0.0, 0.0))), float(_GLF_FUZZED(vec4(365.022, -4.4, 6368.7455, -27.32).g)), bool(false)))))))[0], _GLF_FUZZED(1.9)), vec2(_GLF_FUZZED(91.58), (vec2(1.0, 1.0) * (vec2(mat4x3(injectionSwitch, 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, min(0.0, 0.0))), float(_GLF_FUZZED(vec4(365.022, -4.4, 6368.7455, -27.32).g)), bool(false)))))))[1]), bvec2(false, true))))), injectionSwitch)))).y : _GLF_FUZZED(float(sign(11717)))))))) && true), true)))))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))) || false), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), mix(vec2(_GLF_FUZZED(765.089), _GLF_FUZZED(-5.8)), vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))[0], (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))[1]), bvec2(true, true))).y), false || _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)), ((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-3433.0095)), bool(false))) > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), 0.0, 0.0, 0.0, 0.0, determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, log(1.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0), (mat3(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), 0.0, 0.0, 0.0, 0.0, determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, log(1.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-3433.0095)), bool(false))) > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), 0.0, 0.0, 0.0, 0.0, determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, log(1.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0), (mat3(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), 0.0, 0.0, 0.0, 0.0, determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, log(1.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-3433.0095)), bool(false))) > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), 0.0, 0.0, 0.0, 0.0, determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, log(1.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0), (mat3(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), 0.0, 0.0, 0.0, 0.0, determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, log(1.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))))), true, true)), true && (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-3433.0095)), bool(false))) > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), 0.0, 0.0, 0.0, 0.0, determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, log(1.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0), (mat3(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), 0.0, 0.0, 0.0, 0.0, determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, log(1.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-3433.0095)), bool(false))) > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), 0.0, 0.0, 0.0, 0.0, determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, log(1.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0), (mat3(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), 0.0, 0.0, 0.0, 0.0, determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, log(1.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))))), true, true)), (bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-3433.0095)), bool(false))) > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), 0.0, 0.0, 0.0, 0.0, determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, log(1.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0), (mat3(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), 0.0, 0.0, 0.0, 0.0, determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, log(1.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-3433.0095)), bool(false))) > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), 0.0, 0.0, 0.0, 0.0, determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, log(1.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0), (mat3(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), 0.0, 0.0, 0.0, 0.0, determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, log(1.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))))), true, true))) && true)))))) || false))))) || _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, true), true)), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, true), true)), bvec3(bvec4(bvec3(bvec4(bvec3(false, true, true), true)), true))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, true), true)), bvec3(bvec4(bvec3(bvec4(bvec3(false, true, true), true)), true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, true), true)), bvec3(bvec4(bvec3(bvec4(bvec3(false, true, true), true)), true))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, true), true)), bvec3(bvec4(bvec3(bvec4(bvec3(false, true, true), true)), true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, true), true)), bvec3(bvec4(bvec3(bvec4(bvec3(false, true, true), true)), true))))))))))))))))), false || (bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), true)))))))))
              {
               do
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   barrier();
                  }
                 else
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 do
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
              }
            }
           do
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false)))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false)))), true))))))), (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               for(int _injected_loop_counter = _GLF_IDENTITY((0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(3)) | 0), int(3))), clamp((0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(3)) | 0), int(3))), _GLF_IDENTITY((0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(3)) | 0), int(3))), (true ? (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(3)) | 0), int(3))) : _GLF_FUZZED(clamp(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter)))), (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(3)) | 0), int(3))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                {
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                  }
                 else
                  {
                   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (_GLF_IDENTITY((_GLF_IDENTITY((1 ^ 0), 0 | ((1 ^ 0))) << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), 0 + (int(4))))) >> _GLF_IDENTITY(int(4), int(4)), 0 ^ ((_GLF_IDENTITY((1 ^ 0), 0 | ((1 ^ 0))) << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), 0 + (int(4))))) >> _GLF_IDENTITY(int(4), int(4)))))); _injected_loop_counter ++)
                    {
                     barrier();
                    }
                  }
                }
              }
             else
              {
              }
            }
          }
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), (! (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))) || false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), (! (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))) || false))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), (! (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))) || false))), false))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), (! (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), ! (! (! (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))))), (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), (_GLF_IDENTITY(bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), (_GLF_IDENTITY(bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bool(bvec2(bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), false)))) && true)) && true)))) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, (false) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), (! (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))) || false), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(242.110)), vec2(_GLF_FUZZED(-8.5), (injectionSwitch)[1]), bvec2(false, true))).x < injectionSwitch.y)), false)))), (! (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))) || _GLF_IDENTITY(false, false || (false))))))))))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), (! (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), ! (! (! (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))))), (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), (_GLF_IDENTITY(bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), (_GLF_IDENTITY(bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bool(bvec2(bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), false)))) && true)) && true)))) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, (false) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), (! (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))) || false), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(242.110)), vec2(_GLF_FUZZED(-8.5), (injectionSwitch)[1]), bvec2(false, true))).x < injectionSwitch.y)), false)))), (! (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))) || _GLF_IDENTITY(false, false || (false)))))))))))))), ! (! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), (! (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), ! (! (! (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))))), (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), (_GLF_IDENTITY(bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), (_GLF_IDENTITY(bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bool(bvec2(bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), false)))) && true)) && true)))) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, (false) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), (! (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))) || false), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(242.110)), vec2(_GLF_FUZZED(-8.5), (injectionSwitch)[1]), bvec2(false, true))).x < injectionSwitch.y)), false)))), (! (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))) || _GLF_IDENTITY(false, false || (false)))))))))))))), bool(bvec4(! ((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), (! (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), ! (! (! (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))))), (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), (_GLF_IDENTITY(bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), (_GLF_IDENTITY(bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bool(bvec2(bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), false)))) && true)) && true)))) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, (false) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), (! (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))) || false), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(242.110)), vec2(_GLF_FUZZED(-8.5), (injectionSwitch)[1]), bvec2(false, true))).x < injectionSwitch.y)), false)))), (! (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))) || _GLF_IDENTITY(false, false || (false)))))))))))))), true, true, false)))))))))))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           do
            {
             if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)))), true), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), true))))))))), (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               do
                {
                 barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
               if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), false)), bool(bvec4(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), false)), true, true, true)))))
                barrier();
              }
             for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), 0 + (int(0))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
              {
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > 0, _GLF_IDENTITY(true && (_injected_loop_counter > 0), ! (! (true && (_injected_loop_counter > 0)))))); _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) - int(_GLF_ZERO(0.0, injectionSwitch.x))), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter --, 0 ^ (_injected_loop_counter --)), (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter --, 0 ^ (_injected_loop_counter --)), (true ? _GLF_IDENTITY(_injected_loop_counter --, 0 ^ (_injected_loop_counter --)) : _GLF_FUZZED(_injected_loop_counter)))) - 0))), (_GLF_IDENTITY(_injected_loop_counter --, 0 | (_GLF_IDENTITY(_injected_loop_counter --, 0 ^ _GLF_IDENTITY((_injected_loop_counter --), 0 + ((_injected_loop_counter --))))))) << (0 | 0)))
                {
                 for(int _injected_loop_counter = (1 | int(_GLF_ONE(1.0, injectionSwitch.y))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   if(_GLF_DEAD(false))
                    {
                     do
                      {
                       barrier();
                      }
                     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))));
                    }
                  }
                 else
                  {
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))))), ! (! (true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)))) || false), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))))))))))
                  barrier();
                 barrier();
                }
              }
            }
           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))))))) || false)));
          }
        }
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), 0.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 0.0, 1.0, 1.0))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y))))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), (injectionSwitch) - vec2(0.0, 0.0)).y))))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bool(false)))))
        {
        }
       else
        {
         barrier();
        }
      }
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter)) != 0); _injected_loop_counter --)
    {
     do
      {
       if(_GLF_DEAD(false))
        {
         do
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
         do
          {
           if(_GLF_DEAD(false))
            {
             for(int _injected_loop_counter = (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), max(_GLF_IDENTITY(int(3), int(3)), _GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(3)) >> 0), int(3))))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))) * (_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(~ (~ (_injected_loop_counter)), max(~ (~ (_injected_loop_counter)), ~ (~ (_injected_loop_counter))))))) < int(_GLF_ONE(1.0, injectionSwitch.y))); _GLF_IDENTITY(_injected_loop_counter ++, ~ (~ (_injected_loop_counter ++))))
              {
               barrier();
              }
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
         barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 ^ 0)); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bool(false)))))
          {
          }
         else
          {
           do
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
                barrier();
               barrier();
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
           do
            {
             for(int _injected_loop_counter = int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _GLF_IDENTITY(_injected_loop_counter --, (32598 & 0) ^ (_injected_loop_counter --)))
              {
               for(int _injected_loop_counter = _GLF_IDENTITY(0, 1 * (0)); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), bool(bvec4(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))); _GLF_IDENTITY(_injected_loop_counter ++, _GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter ++, ~ (~ (_injected_loop_counter ++)))) >> 0, ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter ++, ~ (~ (_injected_loop_counter ++)))) >> 0, (_GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter ++, ~ (~ (_injected_loop_counter ++)))) >> 0, ~ (~ ((_GLF_IDENTITY(_injected_loop_counter ++, ~ (~ (_injected_loop_counter ++)))) >> 0)))) << 0))))))
                {
                 do
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), false, true, false)))))))))
                    barrier();
                   barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                    {
                     for(int _injected_loop_counter = (0 ^ int(_GLF_ONE(1.0, injectionSwitch.y))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter))) ^ 0) > 0); _injected_loop_counter --)
                      {
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                         barrier();
                        }
                      }
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
              }
            }
           while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))));
          }
         do
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
              barrier();
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) && true)))))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y))))))
        {
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((0 << _GLF_IDENTITY(int(1), int(1))) | 1)); _injected_loop_counter ++)
            {
             barrier();
            }
          }
        }
       else
        {
        }
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 | _GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), _GLF_IDENTITY(0 ^ (int(int(1))), _GLF_IDENTITY(int(int(_GLF_IDENTITY(0 ^ (int(int(1))), clamp(0 ^ (int(int(1))), 0 ^ (int(int(1))), 0 ^ (int(int(1))))))), (int(int(_GLF_IDENTITY(0 ^ (int(int(1))), clamp(0 ^ (int(int(1))), 0 ^ (int(int(1))), 0 ^ (int(int(1)))))))) | 0))))))), (_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), _GLF_IDENTITY(0 ^ (int(int(1))), _GLF_IDENTITY(int(int(_GLF_IDENTITY(0 ^ (int(int(1))), clamp(0 ^ (int(int(1))), 0 ^ (int(int(1))), 0 ^ (int(int(1))))))), (int(int(_GLF_IDENTITY(0 ^ (int(int(1))), clamp(0 ^ (int(int(1))), 0 ^ (int(int(1))), 0 ^ (int(int(1)))))))) | 0)))))))) << 0))); _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter ++, (false ? _GLF_FUZZED((int(workgroup_size) | _injected_loop_counter)) : _injected_loop_counter ++)), (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter ++, (false ? _GLF_FUZZED((int(workgroup_size) | _injected_loop_counter)) : _injected_loop_counter ++)), (_GLF_IDENTITY(_injected_loop_counter ++, (false ? _GLF_FUZZED((int(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size))) | _injected_loop_counter)) : _injected_loop_counter ++))) << 0)) << 0), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_injected_loop_counter ++, (false ? _GLF_FUZZED((int(workgroup_size) | _injected_loop_counter)) : _injected_loop_counter ++))), (~ (_GLF_IDENTITY(_injected_loop_counter ++, (_GLF_IDENTITY(false ? _GLF_FUZZED((int(_GLF_IDENTITY(workgroup_size, uint(uvec3(workgroup_size, 1u, ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (uint(5u)) | (uint(_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, 0u ^ (5u))) - 0u)))))))))) | _injected_loop_counter)) : _injected_loop_counter ++, (false ? _GLF_FUZZED((int(_GLF_IDENTITY(workgroup_size, uint(uvec3(workgroup_size, 1u, ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (uint(5u)) | (uint(_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, 0u ^ (5u))) - 0u)))))))))) | _injected_loop_counter)) : _injected_loop_counter ++) << (int(_GLF_ZERO(0.0, injectionSwitch.x)) & 10687)))))) >> (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(7, (7) | 0)), int(7)))))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))), bool(bool(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))))))), bool(bvec3(_GLF_DEAD(false), true, true)))) && _GLF_IDENTITY(true, (true) || false)))
        {
         do
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true)))))), ! (! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x < injectionSwitch.y)))) && (! (_GLF_IDENTITY(true, (true) || false)))), false || (! (true))))))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _GLF_IDENTITY(_injected_loop_counter --, (_GLF_IDENTITY(_injected_loop_counter --, 0 | (_injected_loop_counter --))) << (79971 & 0)))
            {
             barrier();
            }
          }
         else
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)), (! ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))) && true))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
            barrier();
          }
         do
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, false)))) || false)))
            {
            }
           else
            {
             barrier();
            }
          }
        }
      }
    }
  }
 else
  {
   do
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec4(subgroup_size, 1u, 0u, _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(0u), uint(0u))), ((0u << _GLF_IDENTITY(uint(0u), uint(0u)))) | _GLF_IDENTITY(((0u << _GLF_IDENTITY(uint(0u), uint(0u)))), (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(((0u << _GLF_IDENTITY(uint(0u), uint(0u)))), clamp(_GLF_IDENTITY(((0u << _GLF_IDENTITY(uint(0u), uint(0u)))), max(_GLF_IDENTITY(((0u << _GLF_IDENTITY(uint(0u), uint(0u)))), (((0u << _GLF_IDENTITY(uint(0u), uint(0u))))) << 0u), ((0u << _GLF_IDENTITY(uint(0u), uint(0u)))))), ((0u << _GLF_IDENTITY(uint(0u), uint(0u)))), _GLF_IDENTITY(((0u << _GLF_IDENTITY(uint(0u), uint(0u)))), 1u * (((0u << _GLF_IDENTITY(uint(0u), uint(0u)))))))), max(false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(((0u << _GLF_IDENTITY(uint(0u), uint(0u)))), clamp(_GLF_IDENTITY(((0u << _GLF_IDENTITY(uint(0u), uint(0u)))), max(_GLF_IDENTITY(((0u << _GLF_IDENTITY(uint(0u), uint(0u)))), (((0u << _GLF_IDENTITY(uint(0u), uint(0u))))) << 0u), ((0u << _GLF_IDENTITY(uint(0u), uint(0u)))))), ((0u << _GLF_IDENTITY(uint(0u), uint(0u)))), _GLF_IDENTITY(((0u << _GLF_IDENTITY(uint(0u), uint(0u)))), 1u * (((0u << _GLF_IDENTITY(uint(0u), uint(0u)))))))), _GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(((0u << _GLF_IDENTITY(uint(0u), uint(0u)))), clamp(_GLF_IDENTITY(((0u << _GLF_IDENTITY(uint(0u), uint(0u)))), max(_GLF_IDENTITY(((0u << _GLF_IDENTITY(uint(0u), uint(0u)))), (((0u << _GLF_IDENTITY(uint(0u), uint(0u))))) << 0u), ((0u << _GLF_IDENTITY(uint(0u), uint(0u)))))), ((0u << _GLF_IDENTITY(uint(0u), uint(0u)))), _GLF_IDENTITY(((0u << _GLF_IDENTITY(uint(0u), uint(0u)))), 1u * (((0u << _GLF_IDENTITY(uint(0u), uint(0u)))))))), (false ? _GLF_FUZZED(num_workgroup) : false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(((0u << _GLF_IDENTITY(uint(0u), uint(0u)))), clamp(_GLF_IDENTITY(((0u << _GLF_IDENTITY(uint(0u), uint(0u)))), max(_GLF_IDENTITY(((0u << _GLF_IDENTITY(uint(0u), uint(0u)))), (((0u << _GLF_IDENTITY(uint(0u), uint(0u))))) << 0u), ((0u << _GLF_IDENTITY(uint(0u), uint(0u)))))), ((0u << _GLF_IDENTITY(uint(0u), uint(0u)))), _GLF_IDENTITY(((0u << _GLF_IDENTITY(uint(0u), uint(0u)))), 1u * (((0u << _GLF_IDENTITY(uint(0u), uint(0u))))))))))))))))), _GLF_IDENTITY(max(uint(uvec4(subgroup_size, 1u, 0u, (0u << _GLF_IDENTITY(uint(0u), uint(0u))))), uint(uvec4(subgroup_size, _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(workgroup_base))), 0u, (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(0u), uint(0u)), 0u + (0u << _GLF_IDENTITY(uint(0u), uint(0u)))))))), (max(uint(uvec4(subgroup_size, 1u, _GLF_IDENTITY(0u, (0u) / ((1u ^ 1u) ^ 1u)), (0u << _GLF_IDENTITY(uint(0u), uint(0u))))), uint(uvec4(subgroup_size, _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(workgroup_base))), 0u, (0u << _GLF_IDENTITY(uint(0u), uint(0u))))))) >> 0u))), (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_size)));
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   for(int _injected_loop_counter = _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-11663))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)) ? _GLF_FUZZED(-0.7) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)) > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-0.7) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(mat2x4(vec2(injectionSwitch[0], injectionSwitch[1]), tan(0.0), 1.0, 1.0, 1.0, 1.0, 0.0)))).x)) > injectionSwitch.y)), true, false, true)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) && true))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true), ! (! _GLF_IDENTITY((false), ((false)) || false)))))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               do
                {
                 barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
              }
            }
          }
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bvec2(_GLF_WRAPPED_IF_TRUE(true), false))), (_GLF_WRAPPED_IF_TRUE(true)) || false), true)), ! (_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) || false), false || (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) || false))), true))), _GLF_IDENTITY(true && (! (bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) || false), true)))), bool(bvec3(_GLF_IDENTITY(true && (! (bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) || false), true)))), ! (! (true && (! (bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) || false), true))))))), true, true))))))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, 0.0, 0.0, 0.0, 1.0))), injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(0.1), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-71.79)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y))))))) || false, bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, ! (! ((injectionSwitch.x > injectionSwitch.y) || false))), true))))))))
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         else
          {
          }
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, false)))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), bvec3(bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), bvec3(bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), bvec3(bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), bvec3(bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))))))))))))))))), (bool(bvec4(false, false, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))) && true))))
            barrier();
           do
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec3(true, true, true)))))
                {
                 barrier();
                }
               else
                {
                }
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))))))))))
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec3(true, false, false)))))
                {
                 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
                  barrier();
                 barrier();
                }
               else
                {
                }
              }
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             do
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         for(int _injected_loop_counter = (1 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(3), int(3)))); _injected_loop_counter --)
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec4(injectionSwitch.y, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x2(1.0, 0.0, 0.0, 0.0, 1.0, 1.0), _GLF_IDENTITY(mat2(1.0) * (mat3x2(1.0, 0.0, 0.0, 0.0, 1.0, 1.0)), (mat2(1.0) * (mat3x2(1.0, 0.0, 0.0, 0.0, 1.0, 1.0))) + mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), tan(0.0), 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0)), mix(_GLF_IDENTITY(float(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0)))), 0.0)), (float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0))) + 0.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-6318.1092) : float(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0)))), 0.0)), (float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0))) + 0.0)))), float(_GLF_FUZZED(4.2)), bool(false))), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0)), mix(_GLF_IDENTITY(float(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0)))), 0.0)), (float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0))) + 0.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-6318.1092) : float(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0)))), 0.0)), (float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0))) + 0.0)))), float(_GLF_FUZZED(4.2)), bool(false))), (false ? _GLF_FUZZED(251.597) : _GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0)), mix(_GLF_IDENTITY(float(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0)))), _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)))), _GLF_IDENTITY((float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0))) + 0.0, min((float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0))) + 0.0, (float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0))) + 0.0)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-6318.1092) : float(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0)))), 0.0)), (float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0))) + 0.0)))), float(_GLF_FUZZED(4.2)), bool(false))))))), float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0))))))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0)), max(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0)), clamp(float(vec4(injectionSwitch.y, 1.0, tan(_GLF_IDENTITY(0.0, 0.0 + (0.0))), 0.0)), float(_GLF_IDENTITY(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0), (vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0)) + vec4(0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0)), max(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0)), _GLF_IDENTITY((float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0))) / 1.0, min((float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0))) / 1.0, _GLF_IDENTITY((float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0))) / 1.0, ((float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0))) / 1.0) / 1.0)))), _GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0)), mix(float(float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0))), float(_GLF_FUZZED(726.377)), bool(false))))))), (float(vec4(injectionSwitch.y, 1.0, _GLF_IDENTITY(tan(0.0), max(_GLF_IDENTITY(tan(0.0), min(_GLF_IDENTITY(tan(0.0), mix(float(tan(0.0)), float(_GLF_FUZZED(72.36)), bool(false))), tan(0.0))), tan(0.0))), 0.0))) + 0.0)), float(_GLF_IDENTITY(_GLF_FUZZED(4.2), float(mat2(_GLF_IDENTITY(_GLF_FUZZED(4.2), (_GLF_FUZZED(4.2)) * 1.0), sqrt(0.0), 1.0, 0.0)))), bool(false))), float(vec4(injectionSwitch.y, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(roundEven(sqrt(1654.0385))) : 1.0)), tan(0.0), _GLF_IDENTITY(0.0, 0.0 + (0.0))))))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0)), max(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0)), mix(float(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) * 1.0))), (float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0))) + 0.0)), float(_GLF_FUZZED(4.2)), bool(false))), float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0))))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(vec2(0.0, 0.0), max(vec2(0.0, 0.0), vec2(0.0, 0.0)))).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), _GLF_IDENTITY(0.0, max(0.0, 0.0)))), max(_GLF_IDENTITY(float(_GLF_IDENTITY(vec4(injectionSwitch.y, _GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-7.0)), float(1.0), bool(true)), 1.0 * (_GLF_IDENTITY(mix(float(_GLF_FUZZED(-7.0)), float(1.0), bool(true)), float(vec4(mix(float(_GLF_FUZZED(-7.0)), float(1.0), bool(true)), 1.0, 1.0, 1.0)))))), tan(0.0), 0.0), (false ? _GLF_FUZZED(vec4(2983.5062, -64.37, 1612.2833, -6.5)) : vec4(injectionSwitch.y, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7.0)), float(1.0), bool(true))), tan(0.0), 0.0)))), mix(float(_GLF_IDENTITY(float(vec4(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(sin(0.0), (true ? _GLF_IDENTITY(sin(0.0), (sin(0.0)) - 0.0) : _GLF_FUZZED(smoothstep(-2.2, -7.2, 227.295)))), 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(sin(0.0), 1.0, 0.0), vec3(0.0, 1.0, 0.0))) * (injectionSwitch.y)), 1.0, tan(0.0), _GLF_IDENTITY(0.0, (0.0) - 0.0))), (float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0))) + 0.0)), float(_GLF_FUZZED(4.2)), bool(false))), float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0)))))))))))), _GLF_IDENTITY((_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec4(injectionSwitch.y, _GLF_IDENTITY(1.0, min(1.0, 1.0)), tan(0.0), 0.0)), _GLF_IDENTITY(max(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0)), mix(float(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) * 1.0))), (float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0))) + 0.0)), float(_GLF_FUZZED(4.2)), bool(false))), float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0))), max(max(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0)), mix(float(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) * 1.0))), (float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0))) + 0.0)), float(_GLF_FUZZED(4.2)), bool(false))), float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0))), _GLF_IDENTITY(max(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0)), mix(float(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) * 1.0))), (float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0))) + 0.0)), float(_GLF_FUZZED(4.2)), bool(false))), float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0))), mix(float(max(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0)), mix(float(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) * 1.0))), (float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0))) + 0.0)), float(_GLF_FUZZED(4.2)), bool(false))), float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0)))), float(_GLF_FUZZED(-8946.2096)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0))).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec4(injectionSwitch.y, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-47.31)), bool(false))), tan(0.0), _GLF_IDENTITY(0.0, max(0.0, 0.0)))), max(_GLF_IDENTITY(float(_GLF_IDENTITY(vec4(injectionSwitch.y, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7.0)), float(1.0), bool(true))), tan(0.0), 0.0), (false ? _GLF_FUZZED(vec4(2983.5062, -64.37, 1612.2833, _GLF_IDENTITY(-6.5, (true ? _GLF_IDENTITY(-6.5, float(mat3x4(-6.5, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, sqrt(1.0), abs(1.0), 1.0, 0.0))) : _GLF_FUZZED(7.4))))) : vec4(injectionSwitch.y, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7.0)), float(1.0), bool(true))), tan(0.0), 0.0)))), mix(float(_GLF_IDENTITY(float(vec4(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(dot(vec3(sin(0.0), 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(sin(0.0), 1.0, 0.0), vec3(0.0, 1.0, 0.0))) * (injectionSwitch.y)), 1.0, tan(0.0), _GLF_IDENTITY(0.0, (0.0) - 0.0))), (float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0))) + 0.0)), float(_GLF_FUZZED(4.2)), bool(false))), float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0))))))))))), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec4(injectionSwitch.y, _GLF_IDENTITY(1.0, min(1.0, 1.0)), tan(0.0), 0.0)), _GLF_IDENTITY(max(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0)), mix(float(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) * 1.0))), (float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0))) + 0.0)), float(_GLF_FUZZED(4.2)), bool(false))), float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0))), max(max(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0)), mix(float(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) * 1.0))), (float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0))) + 0.0)), float(_GLF_FUZZED(4.2)), bool(false))), float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0))), _GLF_IDENTITY(max(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0)), mix(float(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) * 1.0))), (float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0))) + 0.0)), float(_GLF_FUZZED(4.2)), bool(false))), float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0))), mix(float(max(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0)), mix(float(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) * 1.0))), (float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0))) + 0.0)), float(_GLF_FUZZED(4.2)), bool(false))), float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0)))), float(_GLF_FUZZED(-8946.2096)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0))).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec4(injectionSwitch.y, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-47.31)), bool(false))), tan(0.0), _GLF_IDENTITY(0.0, max(0.0, 0.0)))), max(_GLF_IDENTITY(float(_GLF_IDENTITY(vec4(injectionSwitch.y, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7.0)), float(1.0), bool(true))), tan(0.0), 0.0), (false ? _GLF_FUZZED(vec4(2983.5062, -64.37, 1612.2833, _GLF_IDENTITY(-6.5, (true ? _GLF_IDENTITY(-6.5, float(mat3x4(-6.5, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, sqrt(1.0), abs(1.0), 1.0, 0.0))) : _GLF_FUZZED(7.4))))) : vec4(injectionSwitch.y, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7.0)), float(1.0), bool(true))), tan(0.0), 0.0)))), mix(float(_GLF_IDENTITY(float(vec4(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(dot(vec3(sin(0.0), 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(sin(0.0), 1.0, 0.0), vec3(0.0, 1.0, 0.0))) * (injectionSwitch.y)), 1.0, tan(0.0), _GLF_IDENTITY(0.0, (0.0) - 0.0))), (float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0))) + 0.0)), float(_GLF_FUZZED(4.2)), bool(false))), float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0)))))))))))), false || (bool((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec4(injectionSwitch.y, _GLF_IDENTITY(1.0, min(1.0, 1.0)), tan(0.0), 0.0)), _GLF_IDENTITY(max(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0)), mix(float(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) * 1.0))), (float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0))) + 0.0)), float(_GLF_FUZZED(4.2)), bool(false))), float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0))), max(max(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0)), mix(float(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) * 1.0))), (float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0))) + 0.0)), float(_GLF_FUZZED(4.2)), bool(false))), float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0))), _GLF_IDENTITY(max(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0)), mix(float(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) * 1.0))), (float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0))) + 0.0)), float(_GLF_FUZZED(4.2)), bool(false))), float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0))), mix(float(max(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0)), mix(float(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) * 1.0))), (float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0))) + 0.0)), float(_GLF_FUZZED(4.2)), bool(false))), float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0)))), float(_GLF_FUZZED(-8946.2096)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0))).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec4(injectionSwitch.y, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-47.31)), bool(false))), tan(0.0), _GLF_IDENTITY(0.0, max(0.0, 0.0)))), max(_GLF_IDENTITY(float(_GLF_IDENTITY(vec4(injectionSwitch.y, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7.0)), float(1.0), bool(true))), tan(0.0), 0.0), (false ? _GLF_FUZZED(vec4(2983.5062, -64.37, 1612.2833, _GLF_IDENTITY(-6.5, (true ? _GLF_IDENTITY(-6.5, float(mat3x4(-6.5, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, sqrt(1.0), abs(1.0), 1.0, 0.0))) : _GLF_FUZZED(7.4))))) : vec4(injectionSwitch.y, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7.0)), float(1.0), bool(true))), tan(0.0), 0.0)))), mix(float(_GLF_IDENTITY(float(vec4(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(dot(vec3(sin(0.0), 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(sin(0.0), 1.0, 0.0), vec3(0.0, 1.0, 0.0))) * (injectionSwitch.y)), 1.0, tan(0.0), _GLF_IDENTITY(0.0, (0.0) - 0.0))), (float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0))) + 0.0)), float(_GLF_FUZZED(4.2)), bool(false))), float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0))))))))))))))))), ! (! ((! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0)), mix(float(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) * 1.0))), (float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0))) + 0.0)), float(_GLF_FUZZED(4.2)), bool(false))), max(_GLF_IDENTITY(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0)), mix(float(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) * 1.0))), (float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0))) + 0.0)), float(_GLF_FUZZED(4.2)), bool(false))), (_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0)), mix(float(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) * 1.0))), (float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0))) + 0.0)), float(_GLF_FUZZED(4.2)), bool(false)))) - abs(0.0)), _GLF_IDENTITY(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0)), mix(float(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) * 1.0))), (float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0))) + 0.0)), float(_GLF_FUZZED(4.2)), bool(false))), float(mat4x2(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0)), mix(float(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) * 1.0))), (float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0))) + 0.0)), float(_GLF_FUZZED(4.2)), bool(false))), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))))), float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0))))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), _GLF_IDENTITY(0.0, max(0.0, 0.0)))), max(_GLF_IDENTITY(float(_GLF_IDENTITY(vec4(injectionSwitch.y, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7.0)), float(1.0), bool(true))), tan(0.0), 0.0), (false ? _GLF_FUZZED(vec4(_GLF_IDENTITY(2983.5062, min(2983.5062, 2983.5062)), _GLF_IDENTITY(-64.37, min(-64.37, -64.37)), 1612.2833, -6.5)) : vec4(injectionSwitch.y, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7.0)), float(1.0), bool(true))), tan(0.0), 0.0)))), mix(float(_GLF_IDENTITY(float(vec4(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(dot(vec3(sin(0.0), 1.0, 0.0), vec3(0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), dot(vec3(sin(0.0), 1.0, 0.0), vec3(0.0, 1.0, 0.0))) * (injectionSwitch.y)), 1.0, tan(0.0), _GLF_IDENTITY(0.0, (0.0) - 0.0))), (float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0))) + 0.0)), float(_GLF_FUZZED(4.2)), bool(false))), float(vec4(injectionSwitch.y, 1.0, tan(0.0), _GLF_IDENTITY(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), 0.0 + (dot(vec2(1.0, 0.0), vec2(0.0, 1.0))))) + (0.0)))))))))))))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec4(injectionSwitch.y, _GLF_IDENTITY(1.0, min(1.0, 1.0)), tan(0.0), 0.0)), _GLF_IDENTITY(max(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0)), mix(float(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) * 1.0))), (float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0))) + 0.0)), float(_GLF_FUZZED(4.2)), bool(false))), float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0))), max(max(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0)), mix(float(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) * 1.0))), (float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0))) + 0.0)), float(_GLF_FUZZED(4.2)), bool(false))), float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0))), _GLF_IDENTITY(max(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0)), mix(float(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) * 1.0))), (float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0))) + 0.0)), float(_GLF_FUZZED(4.2)), bool(false))), float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0))), mix(float(max(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0)), mix(float(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) * 1.0))), (float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0))) + 0.0)), float(_GLF_FUZZED(4.2)), bool(false))), float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0)))), float(_GLF_FUZZED(-8946.2096)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0))).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec4(injectionSwitch.y, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-47.31)), bool(false))), tan(0.0), _GLF_IDENTITY(0.0, max(0.0, 0.0)))), max(_GLF_IDENTITY(float(_GLF_IDENTITY(vec4(injectionSwitch.y, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7.0)), float(1.0), bool(true))), tan(0.0), 0.0), (false ? _GLF_FUZZED(vec4(2983.5062, -64.37, 1612.2833, _GLF_IDENTITY(-6.5, (true ? _GLF_IDENTITY(-6.5, float(mat3x4(-6.5, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, sqrt(1.0), abs(1.0), 1.0, 0.0))) : _GLF_FUZZED(7.4))))) : vec4(injectionSwitch.y, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7.0)), float(1.0), bool(true))), tan(0.0), 0.0)))), mix(float(_GLF_IDENTITY(float(vec4(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(dot(vec3(sin(0.0), 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(sin(0.0), 1.0, 0.0), vec3(0.0, 1.0, 0.0))) * (injectionSwitch.y)), 1.0, tan(0.0), _GLF_IDENTITY(0.0, (0.0) - 0.0))), (float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0))) + 0.0)), float(_GLF_FUZZED(4.2)), bool(false))), float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0))))))))))), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec4(injectionSwitch.y, _GLF_IDENTITY(1.0, min(1.0, 1.0)), tan(0.0), 0.0)), _GLF_IDENTITY(max(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0)), mix(float(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) * 1.0))), (float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0))) + 0.0)), float(_GLF_FUZZED(4.2)), bool(false))), float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0))), max(max(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0)), mix(float(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) * 1.0))), (float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0))) + 0.0)), float(_GLF_FUZZED(4.2)), bool(false))), float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0))), _GLF_IDENTITY(max(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0)), mix(float(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) * 1.0))), (float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0))) + 0.0)), float(_GLF_FUZZED(4.2)), bool(false))), float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0))), mix(float(max(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0)), mix(float(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) * 1.0))), (float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0))) + 0.0)), float(_GLF_FUZZED(4.2)), bool(false))), float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0)))), float(_GLF_FUZZED(-8946.2096)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0))).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec4(injectionSwitch.y, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-47.31)), bool(false))), tan(0.0), _GLF_IDENTITY(0.0, max(0.0, 0.0)))), max(_GLF_IDENTITY(float(_GLF_IDENTITY(vec4(injectionSwitch.y, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7.0)), float(1.0), bool(true))), tan(0.0), 0.0), (false ? _GLF_FUZZED(vec4(2983.5062, -64.37, 1612.2833, _GLF_IDENTITY(-6.5, (true ? _GLF_IDENTITY(-6.5, float(mat3x4(-6.5, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, sqrt(1.0), abs(1.0), 1.0, 0.0))) : _GLF_FUZZED(7.4))))) : vec4(injectionSwitch.y, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7.0)), float(1.0), bool(true))), tan(0.0), 0.0)))), mix(float(_GLF_IDENTITY(float(vec4(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(dot(vec3(sin(0.0), 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(sin(0.0), 1.0, 0.0), vec3(0.0, 1.0, 0.0))) * (injectionSwitch.y)), 1.0, tan(0.0), _GLF_IDENTITY(0.0, (0.0) - 0.0))), (float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0))) + 0.0)), float(_GLF_FUZZED(4.2)), bool(false))), float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0)))))))))))), false || (bool((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec4(injectionSwitch.y, _GLF_IDENTITY(1.0, min(1.0, 1.0)), tan(0.0), 0.0)), _GLF_IDENTITY(max(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0)), mix(float(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) * 1.0))), (float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0))) + 0.0)), float(_GLF_FUZZED(4.2)), bool(false))), float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0))), max(max(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0)), mix(float(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) * 1.0))), (float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0))) + 0.0)), float(_GLF_FUZZED(4.2)), bool(false))), float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0))), _GLF_IDENTITY(max(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0)), mix(float(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) * 1.0))), (float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0))) + 0.0)), float(_GLF_FUZZED(4.2)), bool(false))), float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0))), mix(float(max(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0)), mix(float(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) * 1.0))), (float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0))) + 0.0)), float(_GLF_FUZZED(4.2)), bool(false))), float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0)))), float(_GLF_FUZZED(-8946.2096)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0))).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec4(injectionSwitch.y, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-47.31)), bool(false))), tan(0.0), _GLF_IDENTITY(0.0, max(0.0, 0.0)))), max(_GLF_IDENTITY(float(_GLF_IDENTITY(vec4(injectionSwitch.y, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7.0)), float(1.0), bool(true))), tan(0.0), 0.0), (false ? _GLF_FUZZED(vec4(2983.5062, -64.37, 1612.2833, _GLF_IDENTITY(-6.5, (true ? _GLF_IDENTITY(-6.5, float(mat3x4(-6.5, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, sqrt(1.0), abs(1.0), 1.0, 0.0))) : _GLF_FUZZED(7.4))))) : vec4(injectionSwitch.y, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7.0)), float(1.0), bool(true))), tan(0.0), 0.0)))), mix(float(_GLF_IDENTITY(float(vec4(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(dot(vec3(sin(0.0), 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(sin(0.0), 1.0, 0.0), vec3(0.0, 1.0, 0.0))) * (injectionSwitch.y)), 1.0, tan(0.0), _GLF_IDENTITY(0.0, (0.0) - 0.0))), (float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0))) + 0.0)), float(_GLF_FUZZED(4.2)), bool(false))), float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0))))))))))))))))), ! (! ((! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0)), mix(float(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) * 1.0))), (float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0))) + 0.0)), float(_GLF_FUZZED(4.2)), bool(false))), max(_GLF_IDENTITY(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0)), mix(float(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) * 1.0))), (float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0))) + 0.0)), float(_GLF_FUZZED(4.2)), bool(false))), (_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0)), mix(float(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) * 1.0))), (float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0))) + 0.0)), float(_GLF_FUZZED(4.2)), bool(false)))) - abs(0.0)), _GLF_IDENTITY(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0)), mix(float(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) * 1.0))), (float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0))) + 0.0)), float(_GLF_FUZZED(4.2)), bool(false))), float(mat4x2(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0)), mix(float(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) * 1.0))), (float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0))) + 0.0)), float(_GLF_FUZZED(4.2)), bool(false))), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))))), float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0))))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), _GLF_IDENTITY(0.0, max(0.0, 0.0)))), max(_GLF_IDENTITY(float(_GLF_IDENTITY(vec4(injectionSwitch.y, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7.0)), float(1.0), bool(true))), tan(0.0), 0.0), (false ? _GLF_FUZZED(vec4(_GLF_IDENTITY(2983.5062, min(2983.5062, 2983.5062)), _GLF_IDENTITY(-64.37, min(-64.37, -64.37)), 1612.2833, -6.5)) : vec4(injectionSwitch.y, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7.0)), float(1.0), bool(true))), tan(0.0), 0.0)))), mix(float(_GLF_IDENTITY(float(vec4(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(dot(vec3(sin(0.0), 1.0, 0.0), vec3(0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), dot(vec3(sin(0.0), 1.0, 0.0), vec3(0.0, 1.0, 0.0))) * (injectionSwitch.y)), 1.0, tan(0.0), _GLF_IDENTITY(0.0, (0.0) - 0.0))), (float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0))) + 0.0)), float(_GLF_FUZZED(4.2)), bool(false))), float(vec4(injectionSwitch.y, 1.0, tan(0.0), _GLF_IDENTITY(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), 0.0 + (dot(vec2(1.0, 0.0), vec2(0.0, 1.0))))) + (0.0)))))))))))))))))), false || (_GLF_IDENTITY((_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec4(injectionSwitch.y, _GLF_IDENTITY(1.0, min(1.0, 1.0)), tan(0.0), 0.0)), _GLF_IDENTITY(max(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0)), mix(float(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) * 1.0))), (float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0))) + 0.0)), float(_GLF_FUZZED(4.2)), bool(false))), float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0))), max(max(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0)), mix(float(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) * 1.0))), (float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0))) + 0.0)), float(_GLF_FUZZED(4.2)), bool(false))), float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0))), _GLF_IDENTITY(max(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0)), mix(float(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) * 1.0))), (float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0))) + 0.0)), float(_GLF_FUZZED(4.2)), bool(false))), float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0))), mix(float(max(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0)), mix(float(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) * 1.0))), (float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0))) + 0.0)), float(_GLF_FUZZED(4.2)), bool(false))), float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0)))), float(_GLF_FUZZED(-8946.2096)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0))).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec4(injectionSwitch.y, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-47.31)), bool(false))), tan(0.0), _GLF_IDENTITY(0.0, max(0.0, 0.0)))), max(_GLF_IDENTITY(float(_GLF_IDENTITY(vec4(injectionSwitch.y, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7.0)), float(1.0), bool(true))), tan(0.0), 0.0), (false ? _GLF_FUZZED(vec4(2983.5062, -64.37, 1612.2833, _GLF_IDENTITY(-6.5, (true ? _GLF_IDENTITY(-6.5, float(mat3x4(-6.5, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, sqrt(1.0), abs(1.0), 1.0, 0.0))) : _GLF_FUZZED(7.4))))) : vec4(injectionSwitch.y, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7.0)), float(1.0), bool(true))), tan(0.0), 0.0)))), mix(float(_GLF_IDENTITY(float(vec4(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(dot(vec3(sin(0.0), 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(sin(0.0), 1.0, 0.0), vec3(0.0, 1.0, 0.0))) * (injectionSwitch.y)), 1.0, tan(0.0), _GLF_IDENTITY(0.0, (0.0) - 0.0))), (float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0))) + 0.0)), float(_GLF_FUZZED(4.2)), bool(false))), float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0))))))))))), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec4(injectionSwitch.y, _GLF_IDENTITY(1.0, min(1.0, 1.0)), tan(0.0), 0.0)), _GLF_IDENTITY(max(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0)), mix(float(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) * 1.0))), (float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0))) + 0.0)), float(_GLF_FUZZED(4.2)), bool(false))), float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0))), max(max(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0)), mix(float(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) * 1.0))), (float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0))) + 0.0)), float(_GLF_FUZZED(4.2)), bool(false))), float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0))), _GLF_IDENTITY(max(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0)), mix(float(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) * 1.0))), (float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0))) + 0.0)), float(_GLF_FUZZED(4.2)), bool(false))), float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0))), mix(float(max(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0)), mix(float(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) * 1.0))), (float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0))) + 0.0)), float(_GLF_FUZZED(4.2)), bool(false))), float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0)))), float(_GLF_FUZZED(-8946.2096)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0))).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec4(injectionSwitch.y, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-47.31)), bool(false))), tan(0.0), _GLF_IDENTITY(0.0, max(0.0, 0.0)))), max(_GLF_IDENTITY(float(_GLF_IDENTITY(vec4(injectionSwitch.y, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7.0)), float(1.0), bool(true))), tan(0.0), 0.0), (false ? _GLF_FUZZED(vec4(2983.5062, -64.37, 1612.2833, _GLF_IDENTITY(-6.5, (true ? _GLF_IDENTITY(-6.5, float(mat3x4(-6.5, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, sqrt(1.0), abs(1.0), 1.0, 0.0))) : _GLF_FUZZED(7.4))))) : vec4(injectionSwitch.y, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7.0)), float(1.0), bool(true))), tan(0.0), 0.0)))), mix(float(_GLF_IDENTITY(float(vec4(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(dot(vec3(sin(0.0), 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(sin(0.0), 1.0, 0.0), vec3(0.0, 1.0, 0.0))) * (injectionSwitch.y)), 1.0, tan(0.0), _GLF_IDENTITY(0.0, (0.0) - 0.0))), (float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0))) + 0.0)), float(_GLF_FUZZED(4.2)), bool(false))), float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0)))))))))))), false || (bool((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec4(injectionSwitch.y, _GLF_IDENTITY(1.0, min(1.0, 1.0)), tan(0.0), 0.0)), _GLF_IDENTITY(max(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0)), mix(float(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) * 1.0))), (float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0))) + 0.0)), float(_GLF_FUZZED(4.2)), bool(false))), float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0))), max(max(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0)), mix(float(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) * 1.0))), (float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0))) + 0.0)), float(_GLF_FUZZED(4.2)), bool(false))), float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0))), _GLF_IDENTITY(max(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0)), mix(float(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) * 1.0))), (float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0))) + 0.0)), float(_GLF_FUZZED(4.2)), bool(false))), float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0))), mix(float(max(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0)), mix(float(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) * 1.0))), (float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0))) + 0.0)), float(_GLF_FUZZED(4.2)), bool(false))), float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0)))), float(_GLF_FUZZED(-8946.2096)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0))).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec4(injectionSwitch.y, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-47.31)), bool(false))), tan(0.0), _GLF_IDENTITY(0.0, max(0.0, 0.0)))), max(_GLF_IDENTITY(float(_GLF_IDENTITY(vec4(injectionSwitch.y, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7.0)), float(1.0), bool(true))), tan(0.0), 0.0), (false ? _GLF_FUZZED(vec4(2983.5062, -64.37, 1612.2833, _GLF_IDENTITY(-6.5, (true ? _GLF_IDENTITY(-6.5, float(mat3x4(-6.5, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, sqrt(1.0), abs(1.0), 1.0, 0.0))) : _GLF_FUZZED(7.4))))) : vec4(injectionSwitch.y, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7.0)), float(1.0), bool(true))), tan(0.0), 0.0)))), mix(float(_GLF_IDENTITY(float(vec4(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(dot(vec3(sin(0.0), 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(sin(0.0), 1.0, 0.0), vec3(0.0, 1.0, 0.0))) * (injectionSwitch.y)), 1.0, tan(0.0), _GLF_IDENTITY(0.0, (0.0) - 0.0))), (float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0))) + 0.0)), float(_GLF_FUZZED(4.2)), bool(false))), float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0))))))))))))))))), ! (! ((! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0)), mix(float(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) * 1.0))), (float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0))) + 0.0)), float(_GLF_FUZZED(4.2)), bool(false))), max(_GLF_IDENTITY(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0)), mix(float(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) * 1.0))), (float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0))) + 0.0)), float(_GLF_FUZZED(4.2)), bool(false))), (_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0)), mix(float(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) * 1.0))), (float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0))) + 0.0)), float(_GLF_FUZZED(4.2)), bool(false)))) - abs(0.0)), _GLF_IDENTITY(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0)), mix(float(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) * 1.0))), (float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0))) + 0.0)), float(_GLF_FUZZED(4.2)), bool(false))), float(mat4x2(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0)), mix(float(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) * 1.0))), (float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0))) + 0.0)), float(_GLF_FUZZED(4.2)), bool(false))), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))))), float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0))))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), _GLF_IDENTITY(0.0, max(0.0, 0.0)))), max(_GLF_IDENTITY(float(_GLF_IDENTITY(vec4(injectionSwitch.y, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7.0)), float(1.0), bool(true))), tan(0.0), 0.0), (false ? _GLF_FUZZED(vec4(_GLF_IDENTITY(2983.5062, min(2983.5062, 2983.5062)), _GLF_IDENTITY(-64.37, min(-64.37, -64.37)), 1612.2833, -6.5)) : vec4(injectionSwitch.y, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7.0)), float(1.0), bool(true))), tan(0.0), 0.0)))), mix(float(_GLF_IDENTITY(float(vec4(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(dot(vec3(sin(0.0), 1.0, 0.0), vec3(0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), dot(vec3(sin(0.0), 1.0, 0.0), vec3(0.0, 1.0, 0.0))) * (injectionSwitch.y)), 1.0, tan(0.0), _GLF_IDENTITY(0.0, (0.0) - 0.0))), (float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0))) + 0.0)), float(_GLF_FUZZED(4.2)), bool(false))), float(vec4(injectionSwitch.y, 1.0, tan(0.0), _GLF_IDENTITY(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), 0.0 + (dot(vec2(1.0, 0.0), vec2(0.0, 1.0))))) + (0.0)))))))))))))))))), true && ((_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec4(injectionSwitch.y, _GLF_IDENTITY(1.0, min(1.0, 1.0)), tan(0.0), 0.0)), _GLF_IDENTITY(max(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0)), mix(float(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) * 1.0))), (float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0))) + 0.0)), float(_GLF_FUZZED(4.2)), bool(false))), float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0))), max(max(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0)), mix(float(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) * 1.0))), (float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0))) + 0.0)), float(_GLF_FUZZED(4.2)), bool(false))), float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0))), _GLF_IDENTITY(max(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0)), mix(float(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) * 1.0))), (float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0))) + 0.0)), float(_GLF_FUZZED(4.2)), bool(false))), float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0))), mix(float(max(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0)), mix(float(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) * 1.0))), (float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0))) + 0.0)), float(_GLF_FUZZED(4.2)), bool(false))), float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0)))), float(_GLF_FUZZED(-8946.2096)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0))).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec4(injectionSwitch.y, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-47.31)), bool(false))), tan(0.0), _GLF_IDENTITY(0.0, max(0.0, 0.0)))), max(_GLF_IDENTITY(float(_GLF_IDENTITY(vec4(injectionSwitch.y, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7.0)), float(1.0), bool(true))), tan(0.0), 0.0), (false ? _GLF_FUZZED(vec4(2983.5062, -64.37, 1612.2833, _GLF_IDENTITY(-6.5, (true ? _GLF_IDENTITY(-6.5, float(mat3x4(-6.5, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, sqrt(1.0), abs(1.0), 1.0, 0.0))) : _GLF_FUZZED(7.4))))) : vec4(injectionSwitch.y, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7.0)), float(1.0), bool(true))), tan(0.0), 0.0)))), mix(float(_GLF_IDENTITY(float(vec4(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(dot(vec3(sin(0.0), 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(sin(0.0), 1.0, 0.0), vec3(0.0, 1.0, 0.0))) * (injectionSwitch.y)), 1.0, tan(0.0), _GLF_IDENTITY(0.0, (0.0) - 0.0))), (float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0))) + 0.0)), float(_GLF_FUZZED(4.2)), bool(false))), float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0))))))))))), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec4(injectionSwitch.y, _GLF_IDENTITY(1.0, min(1.0, 1.0)), tan(0.0), 0.0)), _GLF_IDENTITY(max(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0)), mix(float(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) * 1.0))), (float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0))) + 0.0)), float(_GLF_FUZZED(4.2)), bool(false))), float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0))), max(max(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0)), mix(float(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) * 1.0))), (float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0))) + 0.0)), float(_GLF_FUZZED(4.2)), bool(false))), float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0))), _GLF_IDENTITY(max(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0)), mix(float(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) * 1.0))), (float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0))) + 0.0)), float(_GLF_FUZZED(4.2)), bool(false))), float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0))), mix(float(max(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0)), mix(float(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) * 1.0))), (float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0))) + 0.0)), float(_GLF_FUZZED(4.2)), bool(false))), float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0)))), float(_GLF_FUZZED(-8946.2096)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0))).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec4(injectionSwitch.y, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-47.31)), bool(false))), tan(0.0), _GLF_IDENTITY(0.0, max(0.0, 0.0)))), max(_GLF_IDENTITY(float(_GLF_IDENTITY(vec4(injectionSwitch.y, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7.0)), float(1.0), bool(true))), tan(0.0), 0.0), (false ? _GLF_FUZZED(vec4(2983.5062, -64.37, 1612.2833, _GLF_IDENTITY(-6.5, (true ? _GLF_IDENTITY(-6.5, float(mat3x4(-6.5, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, sqrt(1.0), abs(1.0), 1.0, 0.0))) : _GLF_FUZZED(7.4))))) : vec4(injectionSwitch.y, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7.0)), float(1.0), bool(true))), tan(0.0), 0.0)))), mix(float(_GLF_IDENTITY(float(vec4(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(dot(vec3(sin(0.0), 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(sin(0.0), 1.0, 0.0), vec3(0.0, 1.0, 0.0))) * (injectionSwitch.y)), 1.0, tan(0.0), _GLF_IDENTITY(0.0, (0.0) - 0.0))), (float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0))) + 0.0)), float(_GLF_FUZZED(4.2)), bool(false))), float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0)))))))))))), false || (bool((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec4(injectionSwitch.y, _GLF_IDENTITY(1.0, min(1.0, 1.0)), tan(0.0), 0.0)), _GLF_IDENTITY(max(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0)), mix(float(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) * 1.0))), (float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0))) + 0.0)), float(_GLF_FUZZED(4.2)), bool(false))), float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0))), max(max(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0)), mix(float(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) * 1.0))), (float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0))) + 0.0)), float(_GLF_FUZZED(4.2)), bool(false))), float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0))), _GLF_IDENTITY(max(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0)), mix(float(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) * 1.0))), (float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0))) + 0.0)), float(_GLF_FUZZED(4.2)), bool(false))), float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0))), mix(float(max(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0)), mix(float(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) * 1.0))), (float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0))) + 0.0)), float(_GLF_FUZZED(4.2)), bool(false))), float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0)))), float(_GLF_FUZZED(-8946.2096)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0))).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec4(injectionSwitch.y, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-47.31)), bool(false))), tan(0.0), _GLF_IDENTITY(0.0, max(0.0, 0.0)))), max(_GLF_IDENTITY(float(_GLF_IDENTITY(vec4(injectionSwitch.y, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7.0)), float(1.0), bool(true))), tan(0.0), 0.0), (false ? _GLF_FUZZED(vec4(2983.5062, -64.37, 1612.2833, _GLF_IDENTITY(-6.5, (true ? _GLF_IDENTITY(-6.5, float(mat3x4(-6.5, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, sqrt(1.0), abs(1.0), 1.0, 0.0))) : _GLF_FUZZED(7.4))))) : vec4(injectionSwitch.y, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7.0)), float(1.0), bool(true))), tan(0.0), 0.0)))), mix(float(_GLF_IDENTITY(float(vec4(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(dot(vec3(sin(0.0), 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(sin(0.0), 1.0, 0.0), vec3(0.0, 1.0, 0.0))) * (injectionSwitch.y)), 1.0, tan(0.0), _GLF_IDENTITY(0.0, (0.0) - 0.0))), (float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0))) + 0.0)), float(_GLF_FUZZED(4.2)), bool(false))), float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0))))))))))))))))), ! (! ((! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0)), mix(float(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) * 1.0))), (float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0))) + 0.0)), float(_GLF_FUZZED(4.2)), bool(false))), max(_GLF_IDENTITY(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0)), mix(float(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) * 1.0))), (float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0))) + 0.0)), float(_GLF_FUZZED(4.2)), bool(false))), (_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0)), mix(float(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) * 1.0))), (float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0))) + 0.0)), float(_GLF_FUZZED(4.2)), bool(false)))) - abs(0.0)), _GLF_IDENTITY(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0)), mix(float(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) * 1.0))), (float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0))) + 0.0)), float(_GLF_FUZZED(4.2)), bool(false))), float(mat4x2(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0)), mix(float(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) * 1.0))), (float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0))) + 0.0)), float(_GLF_FUZZED(4.2)), bool(false))), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))))), float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0))))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, tan(0.0), _GLF_IDENTITY(0.0, max(0.0, 0.0)))), max(_GLF_IDENTITY(float(_GLF_IDENTITY(vec4(injectionSwitch.y, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7.0)), float(1.0), bool(true))), tan(0.0), 0.0), (false ? _GLF_FUZZED(vec4(_GLF_IDENTITY(2983.5062, min(2983.5062, 2983.5062)), _GLF_IDENTITY(-64.37, min(-64.37, -64.37)), 1612.2833, -6.5)) : vec4(injectionSwitch.y, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7.0)), float(1.0), bool(true))), tan(0.0), 0.0)))), mix(float(_GLF_IDENTITY(float(vec4(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(dot(vec3(sin(0.0), 1.0, 0.0), vec3(0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), dot(vec3(sin(0.0), 1.0, 0.0), vec3(0.0, 1.0, 0.0))) * (injectionSwitch.y)), 1.0, tan(0.0), _GLF_IDENTITY(0.0, (0.0) - 0.0))), (float(vec4(injectionSwitch.y, 1.0, tan(0.0), 0.0))) + 0.0)), float(_GLF_FUZZED(4.2)), bool(false))), float(vec4(injectionSwitch.y, 1.0, tan(0.0), _GLF_IDENTITY(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), 0.0 + (dot(vec2(1.0, 0.0), vec2(0.0, 1.0))))) + (0.0))))))))))))))))))))))))) || false))))))
            {
             do
              {
               if(_GLF_DEAD(false))
                {
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                  {
                   barrier();
                  }
                }
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, true))), false, true)))), bool(bvec4(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), (bool(bvec3(false, false, true))) || false))), bvec2(bvec4(bvec2(false, false), false, true))), false, true)))), true, false, true)))) || (_GLF_IDENTITY(false, bool(bvec2(false, false)))))), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, false)))))))), bool(_GLF_IDENTITY(bool(bool(bool((_GLF_IDENTITY(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))) && true) || (_GLF_IDENTITY(false, bool(bvec2(false, false))))))))), false || (bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false))))))), ((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)))))))) && true), false || (_GLF_IDENTITY((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false))))))), ((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), (false) && true)) || false)))))))) && true))))), ! (! (bool(bool((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, false))))))))))))))))))))
                {
                 do
                  {
                   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                    {
                     barrier();
                    }
                   else
                    {
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                }
              }
             else
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   barrier();
                  }
                 else
                  {
                  }
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   if(_GLF_DEAD(false))
                    {
                     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 ^ 1)); _injected_loop_counter ++)
                      {
                       barrier();
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)).y))))
                          {
                           barrier();
                          }
                         else
                          {
                          }
                        }
                      }
                    }
                  }
                }
               for(int _injected_loop_counter = _GLF_IDENTITY(1, (1) | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   do
                    {
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_WRAPPED_IF_FALSE(false))
                          {
                          }
                         else
                          {
                           if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                            barrier();
                          }
                         barrier();
                        }
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, determinant(mat4(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)) + (injectionSwitch.y))))))
                        barrier();
                       if(_GLF_DEAD(false))
                        {
                         do
                          {
                           barrier();
                          }
                         while(_GLF_WRAPPED_LOOP(false));
                        }
                       barrier();
                      }
                    }
                   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))));
                  }
                }
               if(_GLF_DEAD(false))
                barrier();
              }
            }
          }
        }
       else
        {
         do
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(true, true && (true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))), false, true)))))))
            {
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             buf[virtual_gid] = 1;
             do
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
        {
         do
          {
           barrier();
          }
         while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false))))) || false));
        }
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 buf[next_virtual_gid] = 2;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, cos(0.0), 0.0, sin(0.0), exp(0.0), 1.0, 1.0, 0.0))))))), _GLF_IDENTITY(bool(bvec3((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, cos(0.0), 0.0, sin(0.0), exp(0.0), 1.0, 1.0, 0.0))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec3((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, cos(0.0), 0.0, sin(0.0), exp(0.0), 1.0, 1.0, 0.0))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     do
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_DEAD(false)), true && (false || (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), _GLF_IDENTITY(_GLF_IDENTITY(true && (bool(bvec3(false, true, false))), true && (true && (bool(bvec3(false, true, _GLF_IDENTITY(false, (false) && true)))))), bool(bvec2(true && (bool(bvec3(false, true, false))), true)))))))))))
        {
         do
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))));
         barrier();
        }
      }
     while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bvec3(_GLF_WRAPPED_LOOP(false), false, true))));
    }
  }
 else
  {
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
