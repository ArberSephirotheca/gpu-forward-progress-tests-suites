#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, true)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 1.0, 1.0)), (vec2(mat2(injectionSwitch, 1.0, 1.0))) / vec2(1.0, 1.0))).x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), bool(bvec4((false), true, false, true))))), (! (false)) || false))))), false || (false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0))).y)))), true && (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))) || false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), false, true, false)), (bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), false, true, false))) || false))) && true))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), false)), _GLF_IDENTITY(bool(bool(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), false)))), bool(bvec3(bool(bool(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), false)))), _GLF_IDENTITY(false, (false) && true), false))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)), (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize))) + uvec3(0u, 0u, 0u)).x, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), max(gl_WorkGroupSize, gl_WorkGroupSize)), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize))), ((_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)))) - (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))) + uvec3(0u, 0u, 0u)).x) + 0u);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_DEAD(false), true, true))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), true, true))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(0.0, 1.0, 1.0), vec3(mat2x4(_GLF_IDENTITY(vec3(0.0, 1.0, 1.0), clamp(vec3(0.0, 1.0, 1.0), vec3(0.0, 1.0, 1.0), vec3(0.0, 1.0, 1.0))), 1.0, sin(0.0), 1.0, exp(0.0), round(length(normalize(1.0)))))), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)))), (mat2x3(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x2(0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0), mat3x2(mat4x3(mat3x2(0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0))))))))))) - mat2x3(0.0, _GLF_IDENTITY(0.0, (0.0) / determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0))), 0.0, 0.0, 0.0, 0.0))))), (injectionSwitch) / vec2(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))))) + vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))), (_GLF_DEAD(false)) && true)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))), (_GLF_DEAD(false)) && true))), bool(bvec3(! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))), (_GLF_DEAD(false)) && true))), true, true))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))))) || false))), true, true, false)), (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY((true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((true), false || ((true)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY((true), false || ((true))))), bool(bool(! (! (_GLF_IDENTITY((true), false || ((true)))))))))))) && true), false, false, false))) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true, false)), true && (bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true, false))))) || false)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID), _GLF_IDENTITY(min(_GLF_IDENTITY((gl_WorkGroupID), (false ? _GLF_FUZZED(uvec3(175026u, 99530u, 166223u)) : (gl_WorkGroupID))), (gl_WorkGroupID)), min(min(_GLF_IDENTITY((gl_WorkGroupID), (false ? _GLF_FUZZED(uvec3(175026u, 99530u, 166223u)) : (gl_WorkGroupID))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupID, 1u)), ~ _GLF_IDENTITY((~ (uvec3(uvec4(gl_WorkGroupID, 1u)))), min((~ (uvec3(uvec4(gl_WorkGroupID, 1u)))), _GLF_IDENTITY((~ (uvec3(uvec4(gl_WorkGroupID, 1u)))), ((~ (uvec3(uvec4(gl_WorkGroupID, 1u))))) - uvec3(0u, 0u, 0u))))))) - uvec3(0u, 0u, 0u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(98198u, 105277u, 94834u)) : gl_WorkGroupID)))), min(_GLF_IDENTITY((gl_WorkGroupID), (false ? _GLF_FUZZED(uvec3(175026u, 99530u, 166223u)) : (gl_WorkGroupID))), (gl_WorkGroupID))))) | uvec3(0u, 0u, 0u)).x;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) : _GLF_FUZZED(573.094))) > injectionSwitch.y)))), bool(bool(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(-2916.5605, (-2916.5605) + 0.0))), bool(false))), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) - 0.0, ((injectionSwitch.y) - 0.0) - length(0.0))))), injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(-2916.5605, (-2916.5605) + 0.0))), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) / 1.0))), injectionSwitch.y))) / 1.0), false || (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(injectionSwitch.y), min(_GLF_IDENTITY(float(injectionSwitch.y), _GLF_IDENTITY(0.0 + (float(injectionSwitch.y)), min(0.0 + (float(injectionSwitch.y)), 0.0 + (float(injectionSwitch.y))))), float(injectionSwitch.y))), float(_GLF_FUZZED(-2916.5605)), bool(false))), (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(-2916.5605, min(-2916.5605, -2916.5605)))), bool(false)))) / 1.0), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), mix(float(_GLF_FUZZED(vec3(-236.780, -3.6, -60.61).z)), float(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y))) - 0.0))), bool(true)))), injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2916.5605)), bool(false))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-175.755)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(1.2, clamp(1.2, _GLF_IDENTITY(1.2, sqrt(1.0) * (_GLF_IDENTITY(1.2, max(1.2, 1.2)))), 1.2))) : _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), (dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))) - sin(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, float(vec3(0.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(tan(0.0), 0.0)), dot(vec2(1.0, 1.0), vec2(tan(0.0), 0.0))), 1.0))), 1.0), vec4(0.0, 0.0, 0.0, 1.0)))))), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 0.0, 0.0, log(1.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, exp(0.0), 0.0), mat3x4(mat3x4(mat3x4(_GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-175.755)), clamp(_GLF_IDENTITY(float(_GLF_FUZZED(-175.755)), float(mat2x4(float(_GLF_FUZZED(-175.755)), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(float(_GLF_FUZZED(-175.755)), (false ? _GLF_FUZZED(-29.20) : float(_GLF_FUZZED(-175.755)))), float(_GLF_FUZZED(-175.755)))), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 0.0, 0.0, log(1.0), 1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-3.8)), vec2(_GLF_FUZZED(6389.2103), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), injectionSwitch, injectionSwitch)))).y), 1.0, 0.0, 1.0, exp(0.0), 0.0))))))) - 0.0), clamp(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-175.755)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(1.2, clamp(1.2, _GLF_IDENTITY(1.2, sqrt(1.0) * (_GLF_IDENTITY(1.2, max(1.2, 1.2)))), 1.2))) : _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), (dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))) - sin(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, float(vec3(0.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(tan(0.0), 0.0)), dot(vec2(1.0, 1.0), vec2(tan(0.0), 0.0))), 1.0))), 1.0), vec4(0.0, 0.0, 0.0, 1.0)))))), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 0.0, 0.0, log(1.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, exp(0.0), 0.0), mat3x4(mat3x4(mat3x4(_GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-175.755)), clamp(_GLF_IDENTITY(float(_GLF_FUZZED(-175.755)), float(mat2x4(float(_GLF_FUZZED(-175.755)), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(float(_GLF_FUZZED(-175.755)), (false ? _GLF_FUZZED(-29.20) : float(_GLF_FUZZED(-175.755)))), float(_GLF_FUZZED(-175.755)))), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 0.0, 0.0, log(1.0), 1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-3.8)), vec2(_GLF_FUZZED(6389.2103), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), injectionSwitch, injectionSwitch)))).y), 1.0, 0.0, 1.0, exp(0.0), 0.0))))))) - 0.0), _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-175.755)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(1.2, clamp(1.2, _GLF_IDENTITY(1.2, sqrt(1.0) * (_GLF_IDENTITY(1.2, max(1.2, 1.2)))), 1.2))) : _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), (dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))) - sin(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, float(vec3(0.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(tan(0.0), 0.0)), dot(vec2(1.0, 1.0), vec2(tan(0.0), 0.0))), 1.0))), 1.0), vec4(0.0, 0.0, 0.0, 1.0)))))), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 0.0, 0.0, log(1.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, exp(0.0), 0.0), mat3x4(mat3x4(mat3x4(_GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-175.755)), clamp(_GLF_IDENTITY(float(_GLF_FUZZED(-175.755)), float(mat2x4(float(_GLF_FUZZED(-175.755)), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(float(_GLF_FUZZED(-175.755)), (false ? _GLF_FUZZED(-29.20) : float(_GLF_FUZZED(-175.755)))), float(_GLF_FUZZED(-175.755)))), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 0.0, 0.0, log(1.0), 1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-3.8)), vec2(_GLF_FUZZED(6389.2103), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), injectionSwitch, injectionSwitch)))).y), 1.0, 0.0, 1.0, exp(0.0), 0.0))))))) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-175.755)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(1.2, clamp(1.2, _GLF_IDENTITY(1.2, sqrt(1.0) * (_GLF_IDENTITY(1.2, max(1.2, 1.2)))), 1.2))) : _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), (dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))) - sin(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, float(vec3(0.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(tan(0.0), 0.0)), dot(vec2(1.0, 1.0), vec2(tan(0.0), 0.0))), 1.0))), 1.0), vec4(0.0, 0.0, 0.0, 1.0)))))), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 0.0, 0.0, log(1.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, exp(0.0), 0.0), mat3x4(mat3x4(mat3x4(_GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-175.755)), clamp(_GLF_IDENTITY(float(_GLF_FUZZED(-175.755)), float(mat2x4(float(_GLF_FUZZED(-175.755)), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(float(_GLF_FUZZED(-175.755)), (false ? _GLF_FUZZED(-29.20) : float(_GLF_FUZZED(-175.755)))), float(_GLF_FUZZED(-175.755)))), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 0.0, 0.0, log(1.0), 1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-3.8)), vec2(_GLF_FUZZED(6389.2103), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), injectionSwitch, injectionSwitch)))).y), 1.0, 0.0, 1.0, exp(0.0), 0.0))))))) - 0.0), clamp(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-175.755)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(1.2, clamp(1.2, _GLF_IDENTITY(1.2, sqrt(1.0) * (_GLF_IDENTITY(1.2, max(1.2, 1.2)))), 1.2))) : _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), (dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))) - sin(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, float(vec3(0.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(tan(0.0), 0.0)), dot(vec2(1.0, 1.0), vec2(tan(0.0), 0.0))), 1.0))), 1.0), vec4(0.0, 0.0, 0.0, 1.0)))))), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 0.0, 0.0, log(1.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, exp(0.0), 0.0), mat3x4(mat3x4(mat3x4(_GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-175.755)), clamp(_GLF_IDENTITY(float(_GLF_FUZZED(-175.755)), float(mat2x4(float(_GLF_FUZZED(-175.755)), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(float(_GLF_FUZZED(-175.755)), (false ? _GLF_FUZZED(-29.20) : float(_GLF_FUZZED(-175.755)))), float(_GLF_FUZZED(-175.755)))), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 0.0, 0.0, log(1.0), 1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-3.8)), vec2(_GLF_FUZZED(6389.2103), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), injectionSwitch, injectionSwitch)))).y), 1.0, 0.0, 1.0, exp(0.0), 0.0))))))) - 0.0), _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-175.755)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(1.2, clamp(1.2, _GLF_IDENTITY(1.2, sqrt(1.0) * (_GLF_IDENTITY(1.2, max(1.2, 1.2)))), 1.2))) : _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), (dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))) - sin(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, float(vec3(0.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(tan(0.0), 0.0)), dot(vec2(1.0, 1.0), vec2(tan(0.0), 0.0))), 1.0))), 1.0), vec4(0.0, 0.0, 0.0, 1.0)))))), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 0.0, 0.0, log(1.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, exp(0.0), 0.0), mat3x4(mat3x4(mat3x4(_GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-175.755)), clamp(_GLF_IDENTITY(float(_GLF_FUZZED(-175.755)), float(mat2x4(float(_GLF_FUZZED(-175.755)), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(float(_GLF_FUZZED(-175.755)), (false ? _GLF_FUZZED(-29.20) : float(_GLF_FUZZED(-175.755)))), float(_GLF_FUZZED(-175.755)))), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 0.0, 0.0, log(1.0), 1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-3.8)), vec2(_GLF_FUZZED(6389.2103), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), injectionSwitch, injectionSwitch)))).y), 1.0, 0.0, 1.0, exp(0.0), 0.0))))))) - 0.0), _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-175.755)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(1.2, clamp(1.2, _GLF_IDENTITY(1.2, sqrt(1.0) * (_GLF_IDENTITY(1.2, max(1.2, 1.2)))), 1.2))) : _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), (dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))) - sin(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, float(vec3(0.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(tan(0.0), 0.0)), dot(vec2(1.0, 1.0), vec2(tan(0.0), 0.0))), 1.0))), 1.0), vec4(0.0, 0.0, 0.0, 1.0)))))), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 0.0, 0.0, log(1.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, exp(0.0), 0.0), mat3x4(mat3x4(mat3x4(_GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-175.755)), clamp(_GLF_IDENTITY(float(_GLF_FUZZED(-175.755)), float(mat2x4(float(_GLF_FUZZED(-175.755)), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(float(_GLF_FUZZED(-175.755)), (false ? _GLF_FUZZED(-29.20) : float(_GLF_FUZZED(-175.755)))), float(_GLF_FUZZED(-175.755)))), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 0.0, 0.0, log(1.0), 1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-3.8)), vec2(_GLF_FUZZED(6389.2103), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), injectionSwitch, injectionSwitch)))).y), 1.0, 0.0, 1.0, exp(0.0), 0.0))))))) - 0.0)))))), mix(float(_GLF_FUZZED(vec3(-236.780, -3.6, -60.61).z)), _GLF_IDENTITY(float(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), (_GLF_IDENTITY(float(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), (float(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) - 0.0, (_GLF_IDENTITY((injectionSwitch.y) - 0.0, max((injectionSwitch.y) - 0.0, (injectionSwitch.y) - 0.0))) - 0.0))))) * 1.0)) / 1.0), bool(true)))), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))) / 1.0, max((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2916.5605)), bool(false))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), mix(float(_GLF_FUZZED(vec3(-236.780, -3.6, -60.61).z)), float(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), bool(true)))), injectionSwitch.y)), (false ? _GLF_FUZZED(-9.6) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-9.3))), injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2916.5605)), bool(false))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), mix(float(_GLF_FUZZED(vec3(-236.780, _GLF_IDENTITY(-3.6, (true ? -3.6 : _GLF_FUZZED(asinh(6729.2494)))), -60.61).z)), float(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), bool(true)))), injectionSwitch.y))))) / 1.0, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), vec2(mat3x4(vec2(vec2(injectionSwitch)), 1.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)))).y, mix(_GLF_IDENTITY(float(injectionSwitch.y), _GLF_IDENTITY(max(float(injectionSwitch.y), float(injectionSwitch.y)), (max(float(injectionSwitch.y), float(injectionSwitch.y))) - tan(_GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0)))))), float(_GLF_FUZZED(_GLF_IDENTITY(-2916.5605, clamp(-2916.5605, -2916.5605, -2916.5605)))), bool(false))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.y), mix(float((injectionSwitch.y)), float(_GLF_FUZZED(522.144)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), min((injectionSwitch.y), _GLF_IDENTITY((injectionSwitch.y), 1.0 * (_GLF_IDENTITY((injectionSwitch.y), clamp((injectionSwitch.y), (injectionSwitch.y), (injectionSwitch.y))))))) - 0.0)), _GLF_IDENTITY(mix(float(_GLF_FUZZED(vec3(-236.780, -3.6, -60.61).z)), float(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), bool(true)), (mix(float(_GLF_FUZZED(vec3(-236.780, -3.6, -60.61).z)), float(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(0.9)), float(0.0), bool(true)))))), bool(true))) / 1.0))), injectionSwitch.y))) / 1.0)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, log(1.0), sin(_GLF_IDENTITY(0.0, min(0.0, 0.0))), 1.0, 0.0, determinant(_GLF_IDENTITY(mat4(0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)), 1.0, 0.0, 0.0, 1.0, determinant(mat2(_GLF_IDENTITY(1.0, float(mat2(1.0, 1.0, cos(0.0), determinant(mat3(0.0, 1.0, 1.0, 0.0, sqrt(0.0), 1.0, 0.0, 0.0, 0.0))))), 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), mat4(1.0) * (mat4(0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)), 1.0, 0.0, 0.0, 1.0, determinant(mat2(_GLF_IDENTITY(1.0, float(mat2(1.0, 1.0, cos(0.0), determinant(mat3(0.0, 1.0, 1.0, 0.0, sqrt(0.0), 1.0, 0.0, 0.0, 0.0))))), 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, bool(bvec2(true, true))), false), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, bool(bvec2(true, true))), false), false))))))), true, false, true))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) ^ 0u);
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (false))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((! (! (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(((! (! (injectionSwitch.x > injectionSwitch.y)))) || false, (_GLF_IDENTITY(((! (! (injectionSwitch.x > injectionSwitch.y)))) || false, bool(bool(((! (! (injectionSwitch.x > injectionSwitch.y)))) || false)))) && true)))), (! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 0.0, length(vec2(0.0, 0.0)), 0.0, log(sqrt(1.0)), 1.0, 1.0, 1.0, sqrt(determinant(mat2(0.0, 1.0, 0.0, 0.0))), 0.0)))) * _GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0))))).x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 0.0, length(vec2(0.0, 0.0)), 0.0, log(sqrt(1.0)), 1.0, 1.0, 1.0, sqrt(determinant(mat2(0.0, 1.0, 0.0, 0.0))), 0.0)))) * mat2(1.0)).x > injectionSwitch.y, false, true)))))), ((! (! (injectionSwitch.x > injectionSwitch.y)))) || false)))) || false), bool(bool(! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)))))))))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + _GLF_IDENTITY((injectionSwitch.x), (false ? _GLF_FUZZED(-5.3) : (injectionSwitch.x)))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_FUZZED((-579.639))), _GLF_IDENTITY(vec2(_GLF_FUZZED(253.140), (injectionSwitch)[1]), clamp(vec2(_GLF_FUZZED(253.140), (injectionSwitch)[1]), vec2(_GLF_FUZZED(253.140), (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(253.140), (injectionSwitch)[1]), _GLF_IDENTITY(vec2(vec3(vec2(_GLF_FUZZED(253.140), (injectionSwitch)[1]), 0.0)), clamp(vec2(vec3(vec2(_GLF_FUZZED(253.140), (injectionSwitch)[1]), 0.0)), vec2(vec3(vec2(_GLF_FUZZED(253.140), (injectionSwitch)[1]), 0.0)), vec2(vec3(vec2(_GLF_FUZZED(253.140), (injectionSwitch)[1]), 0.0))))))), bvec2(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(bvec2(true, false))))))), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(bvec2(true, false))))))), (! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(bvec2(true, false)))))))) && true), false))))))), min(mix(vec2((_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))[0], _GLF_FUZZED((-579.639))), _GLF_IDENTITY(vec2(_GLF_FUZZED(253.140), (injectionSwitch)[1]), clamp(vec2(_GLF_FUZZED(253.140), (injectionSwitch)[1]), vec2(_GLF_FUZZED(253.140), (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_FUZZED(253.140), (_GLF_FUZZED(253.140)) / 1.0), (injectionSwitch)[1]), _GLF_IDENTITY(vec2(vec3(vec2(_GLF_FUZZED(253.140), (injectionSwitch)[1]), 0.0)), _GLF_IDENTITY(clamp(vec2(vec3(vec2(_GLF_FUZZED(253.140), (injectionSwitch)[1]), 0.0)), vec2(vec3(vec2(_GLF_FUZZED(253.140), (injectionSwitch)[1]), 0.0)), vec2(vec3(vec2(_GLF_FUZZED(253.140), (injectionSwitch)[1]), 0.0))), min(_GLF_IDENTITY(clamp(vec2(vec3(vec2(_GLF_FUZZED(253.140), (injectionSwitch)[1]), 0.0)), vec2(vec3(_GLF_IDENTITY(vec2(_GLF_FUZZED(253.140), (injectionSwitch)[1]), (true ? vec2(_GLF_FUZZED(253.140), (injectionSwitch)[1]) : _GLF_FUZZED((-2.7 + vec2(1.1, -1622.6881))))), 0.0)), vec2(vec3(vec2(_GLF_FUZZED(253.140), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0))[1]), 0.0))), (clamp(vec2(vec3(vec2(_GLF_FUZZED(253.140), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4(injectionSwitch, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0), (false ? _GLF_FUZZED(mat4(7224.1385, 3.1, -6086.5494, -8.7, -5.1, -377.235, -3183.9583, 9.6, 6.9, -78.13, 561.537, -20.06, -5701.3806, -9.4, 699.004, 74.97)) : mat4(injectionSwitch, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0)))), max(vec2(_GLF_IDENTITY(mat4(injectionSwitch, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0), (false ? _GLF_FUZZED(mat4(7224.1385, 3.1, -6086.5494, -8.7, -5.1, -377.235, -3183.9583, 9.6, 6.9, -78.13, 561.537, -20.06, -5701.3806, -9.4, 699.004, 74.97)) : mat4(injectionSwitch, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0)))), vec2(_GLF_IDENTITY(mat4(injectionSwitch, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0), (false ? _GLF_FUZZED(mat4(7224.1385, 3.1, -6086.5494, -8.7, -5.1, -377.235, -3183.9583, 9.6, 6.9, -78.13, 561.537, -20.06, -5701.3806, -9.4, 699.004, 74.97)) : mat4(injectionSwitch, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0))))))))[1]), 0.0)), vec2(vec3(vec2(_GLF_FUZZED(253.140), (injectionSwitch)[1]), 0.0)), vec2(vec3(vec2(_GLF_FUZZED(253.140), (injectionSwitch)[1]), 0.0)))) / vec2(1.0, 1.0)), clamp(vec2(vec3(vec2(_GLF_FUZZED(253.140), (injectionSwitch)[1]), 0.0)), vec2(vec3(vec2(_GLF_FUZZED(253.140), (injectionSwitch)[1]), 0.0)), vec2(vec3(vec2(_GLF_FUZZED(253.140), (injectionSwitch)[1]), 0.0))))))))), bvec2(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(true, false)), bvec2(bvec2(bvec2(bvec2(true, false)))))), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(true, false)), bvec2(bvec2(bvec2(bvec2(true, false)))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(bvec2(true, false)), bvec2(bvec2(bvec2(bvec2(true, false)))))), true)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(true, false)), bvec2(bvec2(bvec2(bvec2(true, false)))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(bvec2(true, false)), bvec2(bvec2(bvec2(bvec2(true, false)))))), true)))), false, false))))))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(bvec2(true, false))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(bvec2(true, false))))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(bvec2(true, false))))))), true && (! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(bvec2(true, false))))))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(bvec2(true, false))))))), true && (! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(bvec2(true, false)))))))))))))))) || false), (! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(bvec2(true, false)))))))) && true), false))))))), mix(vec2((injectionSwitch)[0], _GLF_FUZZED((-579.639))), _GLF_IDENTITY(vec2(_GLF_FUZZED(253.140), (injectionSwitch)[1]), clamp(vec2(_GLF_FUZZED(253.140), (injectionSwitch)[1]), vec2(_GLF_FUZZED(253.140), (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(253.140), (injectionSwitch)[1]), _GLF_IDENTITY(vec2(vec3(vec2(_GLF_FUZZED(253.140), (injectionSwitch)[1]), 0.0)), clamp(vec2(vec3(vec2(_GLF_IDENTITY(_GLF_FUZZED(253.140), float(mat2x3(_GLF_FUZZED(253.140), 1.0, 1.0, 1.0, 0.0, 1.0))), (injectionSwitch)[1]), 0.0)), vec2(vec3(vec2(_GLF_FUZZED(253.140), (injectionSwitch)[1]), 0.0)), vec2(vec3(vec2(_GLF_FUZZED(253.140), (injectionSwitch)[1]), 0.0))))))), bvec2(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(bvec2(true, false))))))), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(bvec2(true, false))))))), (! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(bvec2(true, false)))))))) && true), false)))))))))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)), (bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))) && true))))) || false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, false)))))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) - (0u << _GLF_IDENTITY(uint(1u), uint(1u)))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) - (0u << _GLF_IDENTITY(uint(1u), uint(1u)))), (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) - (0u << _GLF_IDENTITY(uint(1u), uint(1u))))) - 0u)) >> 0u), _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), (true ? (workgroup_base + subgroup_id * subgroup_size) : _GLF_FUZZED(subgroup_id))) - _GLF_IDENTITY(0u, uint(uvec2(0u, 0u)))) + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (_GLF_IDENTITY(false, ! (! (false)))))) && true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, true)), bool(bvec2(bool(bvec3(_GLF_DEAD(false), true, true)), false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))) || (_GLF_DEAD(false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))) || (_GLF_DEAD(false)))), bool(bvec2(! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))) || (_GLF_DEAD(false)))), false))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, _GLF_ONE(1.0, injectionSwitch.y))), dot(vec2(1.0, 0.0), vec2(0.0, _GLF_ONE(1.0, injectionSwitch.y)))), exp(0.0), tan(0.0)))).x > injectionSwitch.y))))
  barrier();
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, false || (false)), false)), ! (! (bool(bvec2(false, false))))))), _GLF_IDENTITY(false, true && (false)), true, true)), _GLF_IDENTITY((bool(bvec4((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))))), _GLF_IDENTITY(false, true && (false)), true, true))) || _GLF_IDENTITY(false, false || (false)), ! (! ((bool(bvec4((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))), true && (_GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))))))), _GLF_IDENTITY(false, true && (false)), true, true))) || _GLF_IDENTITY(false, false || (false)))))))) ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (subgroup_id), (~ (subgroup_id)) | (_GLF_IDENTITY(~ (subgroup_id), ~ (~ (~ (subgroup_id)))))))))) * subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) | 0u, (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY((subgroup_size) | 0u, ((subgroup_size) | 0u) << 0u)))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u), (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u)) | 0u)) / 1u, min((_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * subgroup_size), min((subgroup_id * subgroup_size), _GLF_IDENTITY((subgroup_id * subgroup_size), clamp((subgroup_id * subgroup_size), _GLF_IDENTITY((subgroup_id * subgroup_size), uint(uvec3((subgroup_id * subgroup_size), 1u, 1u))), (subgroup_id * subgroup_size))))) ^ 0u)) / 1u, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * subgroup_size) ^ 0u, ((subgroup_id * subgroup_size) ^ 0u) - 0u))) / 1u, max((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec2(subgroup_id * subgroup_size, (1u | 1u)))), (subgroup_id * subgroup_size) ^ 0u)) / 1u, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), subgroup_id * subgroup_size))))) ^ 0u)) / 1u, (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(virtual_gid)))) | (subgroup_size), ~ (~ ((_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(virtual_gid)))) | (subgroup_size)))))) : (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u)) / 1u)))))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u)) / 1u, min(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u)), _GLF_IDENTITY(min((_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u)), (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u))), ~ (_GLF_IDENTITY(~ (min((_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u)), (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u)))), ~ (~ (~ (min((_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u)) + 0u)) << (1u ^ 1u))) ^ 0u)), (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u)))))))))) / _GLF_IDENTITY(1u, (_GLF_IDENTITY(true, bool(bool(true))) ? 1u : _GLF_FUZZED(workgroup_size))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u)), clamp((_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)))) ^ _GLF_IDENTITY(0u, (0u) - 0u))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) - _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, (0u) / 1u) : _GLF_FUZZED(virtual_gid)))), (subgroup_id * subgroup_size) ^ 0u)), min((_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u), (subgroup_id * subgroup_size) ^ 0u)), (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u), (subgroup_id * subgroup_size) ^ 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)) * subgroup_size, (subgroup_id * subgroup_size) ^ 0u)))) / 1u, max((_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u)) / 1u, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) - 0u)) ^ 0u), (subgroup_id * subgroup_size) ^ 0u)), clamp((_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u)), (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * subgroup_size) ^ 0u, min(_GLF_IDENTITY((subgroup_id * subgroup_size) ^ 0u, ((subgroup_id * subgroup_size) ^ 0u) << 0u), (subgroup_id * subgroup_size) ^ _GLF_IDENTITY(0u, (0u >> _GLF_IDENTITY(uint(0u), uint(0u))) ^ (0u)))))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u)), uint(uvec4(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u)), ((_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u))) / 1u), 1u, 1u, 0u))))) / 1u, (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_size) : (_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size))) ^ 0u)) / 1u, (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_size) : (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u)) / 1u, max(false ? _GLF_FUZZED(subgroup_size) : (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u)) / 1u, false ? _GLF_FUZZED(subgroup_size) : (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u)) / 1u))) | (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_size) : (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u)) / 1u, uint(uvec3(_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_size) : (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u)) / 1u, ~ (~ (false ? _GLF_FUZZED(subgroup_size) : (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u)) / 1u))), 0u, (0u << _GLF_IDENTITY(uint(5u), uint(5u))))))))))))))) * 1u))))) + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))), _GLF_IDENTITY(! (! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))) && true), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true))))))), false || (! (! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), true)), (bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), true))) && true)))), true && (bool(bool(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), true)), (bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), true))) && true))))))))), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-1.1)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))) && true), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), mix(float(_GLF_FUZZED(-5.5)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)) / 1.0)), bool(true))))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(log2(-5.1)) : injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), ! (_GLF_IDENTITY(! (bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))), (! (bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))) || false)))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), true && (! (! (false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), true && (! (! (false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, bool(bvec3(true, false, false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), true && (! (! (false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(bool(bool(! (false))), (bool(_GLF_IDENTITY(bool(! (false)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(bool(! (false)), (bool(! (false))) || false)) && true)), true && ((_GLF_IDENTITY(bool(! (false)), (_GLF_IDENTITY(bool(! (false)), (bool(! (false))) || false)) && true)))))))) && true)))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), true && (! (! (false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), true && (! (! (false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, bool(bvec3(true, false, false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), true && (! (! (false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(bool(bool(! (false))), (bool(_GLF_IDENTITY(bool(! (false)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(bool(! (false)), (bool(! (false))) || false)) && true)), true && ((_GLF_IDENTITY(bool(! (false)), (_GLF_IDENTITY(bool(! (false)), (bool(! (false))) || false)) && true)))))))) && true)))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), true && (! (! (false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), true && (! (! (false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, bool(bvec3(true, false, false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), true && (! (! (false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(bool(bool(! (false))), (bool(_GLF_IDENTITY(bool(! (false)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(bool(! (false)), (bool(! (false))) || false)) && true)), true && ((_GLF_IDENTITY(bool(! (false)), (_GLF_IDENTITY(bool(! (false)), (bool(! (false))) || false)) && true)))))))) && true))))), bool(bvec4(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), true && (! (! (false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), true && (! (! (false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, bool(bvec3(true, false, false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), true && (! (! (false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(bool(bool(! (false))), (bool(_GLF_IDENTITY(bool(! (false)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(bool(! (false)), (bool(! (false))) || false)) && true)), true && ((_GLF_IDENTITY(bool(! (false)), (_GLF_IDENTITY(bool(! (false)), (bool(! (false))) || false)) && true)))))))) && true))))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), true && (! (! (false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), true && (! (! (false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, bool(bvec3(true, false, false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), true && (! (! (false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(bool(bool(! (false))), (bool(_GLF_IDENTITY(bool(! (false)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(bool(! (false)), (bool(! (false))) || false)) && true)), true && ((_GLF_IDENTITY(bool(! (false)), (_GLF_IDENTITY(bool(! (false)), (bool(! (false))) || false)) && true)))))))) && true)))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), true && (! (! (false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), true && (! (! (false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, bool(bvec3(true, false, false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), true && (! (! (false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(bool(bool(! (false))), (bool(_GLF_IDENTITY(bool(! (false)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(bool(! (false)), (bool(! (false))) || false)) && true)), true && ((_GLF_IDENTITY(bool(! (false)), (_GLF_IDENTITY(bool(! (false)), (bool(! (false))) || false)) && true)))))))) && true)))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), true && (! (! (false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), true && (! (! (false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, bool(bvec3(true, false, false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), true && (! (! (false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(bool(bool(! (false))), (bool(_GLF_IDENTITY(bool(! (false)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(bool(! (false)), (bool(! (false))) || false)) && true)), true && ((_GLF_IDENTITY(bool(! (false)), (_GLF_IDENTITY(bool(! (false)), (bool(! (false))) || false)) && true)))))))) && true))))), bool(bvec4(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), true && (! (! (false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), true && (! (! (false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, bool(bvec3(true, false, false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), true && (! (! (false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(bool(bool(! (false))), (bool(_GLF_IDENTITY(bool(! (false)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(bool(! (false)), (bool(! (false))) || false)) && true)), true && ((_GLF_IDENTITY(bool(! (false)), (_GLF_IDENTITY(bool(! (false)), (bool(! (false))) || false)) && true)))))))) && true))))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), true && (! (! (false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), true && (! (! (false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, bool(bvec3(true, false, false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), true && (! (! (false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(bool(bool(! (false))), (bool(_GLF_IDENTITY(bool(! (false)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(bool(! (false)), (bool(! (false))) || false)) && true)), true && ((_GLF_IDENTITY(bool(! (false)), (_GLF_IDENTITY(bool(! (false)), (bool(! (false))) || false)) && true)))))))) && true)))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), true && (! (! (false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), true && (! (! (false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, bool(bvec3(true, false, false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), true && (! (! (false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(bool(bool(! (false))), (bool(_GLF_IDENTITY(bool(! (false)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(bool(! (false)), (bool(! (false))) || false)) && true)), true && ((_GLF_IDENTITY(bool(! (false)), (_GLF_IDENTITY(bool(! (false)), (bool(! (false))) || false)) && true)))))))) && true)))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), true && (! (! (false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), true && (! (! (false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, bool(bvec3(true, false, false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), true && (! (! (false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(bool(bool(! (false))), (bool(_GLF_IDENTITY(bool(! (false)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(bool(! (false)), (bool(! (false))) || false)) && true)), true && ((_GLF_IDENTITY(bool(! (false)), (_GLF_IDENTITY(bool(! (false)), (bool(! (false))) || false)) && true)))))))) && true))))), bool(bvec4(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), true && (! (! (false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), true && (! (! (false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, bool(bvec3(true, false, false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), true && (! (! (false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(bool(bool(! (false))), (bool(_GLF_IDENTITY(bool(! (false)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(bool(! (false)), (bool(! (false))) || false)) && true)), true && ((_GLF_IDENTITY(bool(! (false)), (_GLF_IDENTITY(bool(! (false)), (bool(! (false))) || false)) && true)))))))) && true))))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), true && (! (! (false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), true && (! (! (false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, bool(bvec3(true, false, false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), true && (! (! (false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(bool(bool(! (false))), (bool(_GLF_IDENTITY(bool(! (false)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(bool(! (false)), (bool(! (false))) || false)) && true)), true && ((_GLF_IDENTITY(bool(! (false)), (_GLF_IDENTITY(bool(! (false)), (bool(! (false))) || false)) && true)))))))) && true)))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), true && (! (! (false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), true && (! (! (false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, bool(bvec3(true, false, false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), true && (! (! (false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(bool(bool(! (false))), (bool(_GLF_IDENTITY(bool(! (false)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(bool(! (false)), (bool(! (false))) || false)) && true)), true && ((_GLF_IDENTITY(bool(! (false)), (_GLF_IDENTITY(bool(! (false)), (bool(! (false))) || false)) && true)))))))) && true)))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), true && (! (! (false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), true && (! (! (false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, bool(bvec3(true, false, false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), true && (! (! (false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(bool(bool(! (false))), (bool(_GLF_IDENTITY(bool(! (false)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(bool(! (false)), (bool(! (false))) || false)) && true)), true && ((_GLF_IDENTITY(bool(! (false)), (_GLF_IDENTITY(bool(! (false)), (bool(! (false))) || false)) && true)))))))) && true))))), bool(bvec4(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), true && (! (! (false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), true && (! (! (false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, bool(bvec3(true, false, false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), true && (! (! (false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(bool(bool(! (false))), (bool(_GLF_IDENTITY(bool(! (false)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(bool(! (false)), (bool(! (false))) || false)) && true)), true && ((_GLF_IDENTITY(bool(! (false)), (_GLF_IDENTITY(bool(! (false)), (bool(! (false))) || false)) && true)))))))) && true))))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false || (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), true && (! (! (false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), true && (! (! (false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, bool(bvec3(true, false, false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), true && (! (! (false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(bool(bool(! (false))), (bool(_GLF_IDENTITY(bool(! (false)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(bool(! (false)), (bool(! (false))) || false)) && true)), true && ((_GLF_IDENTITY(bool(! (false)), (_GLF_IDENTITY(bool(! (false)), (bool(! (false))) || false)) && true)))))))) && true)))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), true && (! (! (false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), true && (! (! (false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, bool(bvec3(true, false, false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), true && (! (! (false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(bool(bool(! (false))), (bool(_GLF_IDENTITY(bool(! (false)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(bool(! (false)), (bool(! (false))) || false)) && true)), true && ((_GLF_IDENTITY(bool(! (false)), (_GLF_IDENTITY(bool(! (false)), (bool(! (false))) || false)) && true)))))))) && true)))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), true && (! (! (false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), true && (! (! (false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, bool(bvec3(true, false, false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), true && (! (! (false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(bool(bool(! (false))), (bool(_GLF_IDENTITY(bool(! (false)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(bool(! (false)), (bool(! (false))) || false)) && true)), true && ((_GLF_IDENTITY(bool(! (false)), (_GLF_IDENTITY(bool(! (false)), (bool(! (false))) || false)) && true)))))))) && true))))), bool(bvec4(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), true && (! (! (false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), true && (! (! (false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, bool(bvec3(true, false, false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), true && (! (! (false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(bool(bool(! (false))), (bool(_GLF_IDENTITY(bool(! (false)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(bool(! (false)), (bool(! (false))) || false)) && true)), true && ((_GLF_IDENTITY(bool(! (false)), (_GLF_IDENTITY(bool(! (false)), (bool(! (false))) || false)) && true)))))))) && true))))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), true && (! (! (false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), true && (! (! (false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, bool(bvec3(true, false, false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), true && (! (! (false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(bool(bool(! (false))), (bool(_GLF_IDENTITY(bool(! (false)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(bool(! (false)), (bool(! (false))) || false)) && true)), true && ((_GLF_IDENTITY(bool(! (false)), (_GLF_IDENTITY(bool(! (false)), (bool(! (false))) || false)) && true)))))))) && true)))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), true && (! (! (false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), true && (! (! (false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, bool(bvec3(true, false, false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), true && (! (! (false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(bool(bool(! (false))), (bool(_GLF_IDENTITY(bool(! (false)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(bool(! (false)), (bool(! (false))) || false)) && true)), true && ((_GLF_IDENTITY(bool(! (false)), (_GLF_IDENTITY(bool(! (false)), (bool(! (false))) || false)) && true)))))))) && true)))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), true && (! (! (false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), true && (! (! (false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, bool(bvec3(true, false, false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), true && (! (! (false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(bool(bool(! (false))), (bool(_GLF_IDENTITY(bool(! (false)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(bool(! (false)), (bool(! (false))) || false)) && true)), true && ((_GLF_IDENTITY(bool(! (false)), (_GLF_IDENTITY(bool(! (false)), (bool(! (false))) || false)) && true)))))))) && true))))), bool(bvec4(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), true && (! (! (false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), true && (! (! (false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, bool(bvec3(true, false, false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), true && (! (! (false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(bool(bool(! (false))), (bool(_GLF_IDENTITY(bool(! (false)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(bool(! (false)), (bool(! (false))) || false)) && true)), true && ((_GLF_IDENTITY(bool(! (false)), (_GLF_IDENTITY(bool(! (false)), (bool(! (false))) || false)) && true)))))))) && true))))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) && true))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))), true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true)), true && (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true)))))), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true)), true && (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))))))))), false, _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)) && (true))))))), _GLF_IDENTITY(true, bool(bvec4(true, false, false, false))), false))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false))), true))))), true, false))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false))), true))))), true, false))), false)))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 _GLF_IDENTITY(buf[virtual_gid] = 1, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(buf[virtual_gid] = 1, (buf[virtual_gid] = 1) - 0u))), ~ (~ ((~ (_GLF_IDENTITY(buf[virtual_gid] = 1, (buf[virtual_gid] = 1) - 0u)))))));
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-9.0)), vec2(_GLF_FUZZED(-3696.9093), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y), _GLF_IDENTITY(! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) - vec2(0.0, 0.0))), _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(refract(vec2(-8.8, -97.56), vec2(114.728, 121.171), -97.31)) : injectionSwitch))))), (injectionSwitch)))[0], _GLF_FUZZED(-9.0)), vec2(_GLF_FUZZED(-3696.9093), (injectionSwitch)[_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) | (~ (_GLF_IDENTITY(1, (1) >> ((-66841 * -94261) & (0 >> _GLF_IDENTITY(int(2), int(2))))))))))]), bvec2(false, true))).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-9.0)), vec2(_GLF_FUZZED(-3696.9093), _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) - log(1.0))), bvec2(false, true))).x > injectionSwitch.y)) || _GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))))), false || (! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)))[0], _GLF_FUZZED(-9.0)), vec2(_GLF_FUZZED(-3696.9093), (injectionSwitch)[_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) | (~ (_GLF_IDENTITY(1, (1) >> ((-66841 * _GLF_IDENTITY(-94261, (_GLF_IDENTITY(-94261, (false ? _GLF_FUZZED(73349) : -94261))) * 1)) & (0 >> _GLF_IDENTITY(int(2), int(2))))))))))]), bvec2(_GLF_IDENTITY(false, ! (! (false))), true))).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-9.0)), vec2(_GLF_FUZZED(-3696.9093), _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, (1) | 0)], ((injectionSwitch)[1]) - log(1.0))), bvec2(false, true))).x > injectionSwitch.y)) || _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).y)), false, false))))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(false, bool(bool(false))))), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))), true && (true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))), true && (_GLF_IDENTITY(false, bool(bool(false))))), (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)), 1.0, 1.0, log(1.0)))).x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)) || false))))))), true, _GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((true) || false, ((true) || false) && true))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), float(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)))) > injectionSwitch.y)), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), _GLF_IDENTITY((bool(bool(true))), ! (! ((bool(bool(true)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(6.5, float(_GLF_IDENTITY(mat2(6.5, 0.0, 1.0, 1.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(6.5, 0.0, 1.0, 1.0))))))), bool(false))), max(_GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(injectionSwitch.y), min(float(injectionSwitch.y), _GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) + _GLF_ZERO(0.0, injectionSwitch.x)))), float(_GLF_FUZZED(6.5)), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), mix(float(injectionSwitch.y), float(_GLF_FUZZED(6.5)), bool(false))))))))), true, true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), _GLF_IDENTITY(true, false || (true)) && (bool(false))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), _GLF_IDENTITY(true, false || (true)) && (bool(false))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), _GLF_IDENTITY(true, false || (true)) && (bool(false))))))), false || (bool(_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), _GLF_IDENTITY(true, false || (true)) && (bool(false)))))))))) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0)).x > injectionSwitch.y)))), true, true))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false || ((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))), ! (! (false || ((injectionSwitch.x > injectionSwitch.y)))))) && true))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true, (true) || false) && (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false || ((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bvec2(true, false))) && (_GLF_IDENTITY(false, ! (! (false))))) || ((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(5.0))) > injectionSwitch.y)), ! (! (false || ((injectionSwitch.x > injectionSwitch.y)))))) && true))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, true), true)))))))), true)))))))), (bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y)), true && (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (false) && true))), ! (! (bool(bool(_GLF_IDENTITY(false, (false) && true))))))), (injectionSwitch.x > injectionSwitch.y)))), true, true))) || false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 _GLF_IDENTITY(buf[next_virtual_gid] = 2, 0u ^ (buf[next_virtual_gid] = 2));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) + vec2(0.0, 0.0), min(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0), vec2(0.0, 0.0) + ((injectionSwitch) + vec2(0.0, 0.0))), (injectionSwitch) + vec2(0.0, 0.0)))).y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) + vec2(0.0, 0.0), min(_GLF_IDENTITY((injectionSwitch) + vec2(0.0, 0.0), vec2(0.0, 0.0) + ((injectionSwitch) + vec2(0.0, 0.0))), (injectionSwitch) + vec2(0.0, 0.0)))).y))) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) + vec2(0.0, 0.0), min(_GLF_IDENTITY((injectionSwitch) + vec2(0.0, 0.0), vec2(0.0, 0.0) + ((injectionSwitch) + vec2(0.0, 0.0))), (injectionSwitch) + vec2(0.0, 0.0)))).y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) + vec2(0.0, 0.0), min(_GLF_IDENTITY((injectionSwitch) + vec2(0.0, 0.0), vec2(0.0, 0.0) + ((injectionSwitch) + vec2(0.0, 0.0))), (injectionSwitch) + vec2(0.0, 0.0)))).y))))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) + vec2(0.0, 0.0), _GLF_IDENTITY(min(_GLF_IDENTITY((injectionSwitch) + vec2(0.0, 0.0), vec2(0.0, 0.0) + ((injectionSwitch) + vec2(0.0, 0.0))), (injectionSwitch) + vec2(0.0, 0.0)), (min(_GLF_IDENTITY((injectionSwitch) + vec2(0.0, 0.0), vec2(0.0, 0.0) + ((injectionSwitch) + vec2(0.0, 0.0))), (injectionSwitch) + vec2(0.0, 0.0))) + abs(vec2(0.0, 0.0))))).y))) && true))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
