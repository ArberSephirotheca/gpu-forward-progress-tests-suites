#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 0) uniform buf0 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y) - 0.0), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y) - 0.0), float(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y) - 0.0), 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)))), float(_GLF_FUZZED(37.77)), bool(false))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)), false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), vec2(vec4((injectionSwitch), length(vec2(0.0, 0.0)), sqrt(1.0)))) - vec2(0.0, 0.0)).y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)) ? _GLF_FUZZED(intBitsToFloat(int(190988u))) : _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) * 1.0), (true ? _GLF_IDENTITY(0.0, (0.0) * 1.0) : _GLF_FUZZED(2816.8831)))))) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), max(vec2(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])), _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1]))), vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, determinant(mat3(exp(0.0), 1.0, 0.0, tan(0.0), 1.0, 0.0, 0.0, 0.0, 1.0)), sqrt(1.0))))[1]))), max(_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), max(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1]))), _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), max(vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, max(1, 1))]), vec2(injectionSwitch[0], injectionSwitch[1])))))).y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) && true))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))), true && (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) && true)))), ! (! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) && true)))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (_GLF_IDENTITY(false || (false), bool(bvec4(false || (false), true, false, false)))) && true))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(96.24, 61.80)) : injectionSwitch))) * vec2(1.0, 1.0)), mix(vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])), injectionSwitch[0])), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(8.1, -563.110)) : injectionSwitch))[1], 0.0 + (_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(8.1, -563.110)) : injectionSwitch))[1])))))[1]), vec2(_GLF_FUZZED(-1.1), _GLF_FUZZED(25.08)), bvec2(false, false))).y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(96.24, 61.80)) : injectionSwitch))) * vec2(1.0, 1.0)), mix(vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])), injectionSwitch[0])), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(8.1, -563.110)) : injectionSwitch))[1], 0.0 + (_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(8.1, -563.110)) : injectionSwitch))[1])))))[1]), vec2(_GLF_FUZZED(-1.1), _GLF_FUZZED(25.08)), bvec2(false, false))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(96.24, 61.80)) : injectionSwitch))) * vec2(1.0, 1.0)), mix(vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])), injectionSwitch[0])), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(8.1, -563.110)) : injectionSwitch))[1], 0.0 + (_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(8.1, -563.110)) : injectionSwitch))[1])))))[1]), vec2(_GLF_FUZZED(-1.1), _GLF_FUZZED(25.08)), bvec2(false, false))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(96.24, 61.80)) : injectionSwitch))) * vec2(1.0, 1.0)), mix(vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])), injectionSwitch[0])), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(8.1, -563.110)) : injectionSwitch))[1], 0.0 + (_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(8.1, -563.110)) : injectionSwitch))[1])))))[1]), vec2(_GLF_FUZZED(-1.1), _GLF_FUZZED(25.08)), bvec2(false, false))).y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(0u | _GLF_IDENTITY((gl_NumWorkGroups.x), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY((gl_NumWorkGroups.x), max((gl_NumWorkGroups.x), _GLF_IDENTITY((gl_NumWorkGroups.x), _GLF_IDENTITY(1u * ((gl_NumWorkGroups.x)), (true ? 1u * ((gl_NumWorkGroups.x)) : _GLF_FUZZED((subgroup_size ++))))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(uint(_GLF_IDENTITY((gl_NumWorkGroups.x), max((gl_NumWorkGroups.x), _GLF_IDENTITY((gl_NumWorkGroups.x), 1u * ((gl_NumWorkGroups.x))))))), (uint(uint(_GLF_IDENTITY((gl_NumWorkGroups.x), max((gl_NumWorkGroups.x), _GLF_IDENTITY((gl_NumWorkGroups.x), 1u * ((gl_NumWorkGroups.x)))))))) + 0u)), (true ? ~ (uint(uint(_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups.x, max(gl_NumWorkGroups.x, gl_NumWorkGroups.x))), max((gl_NumWorkGroups.x), _GLF_IDENTITY((gl_NumWorkGroups.x), 1u * ((gl_NumWorkGroups.x)))))))) : _GLF_FUZZED(subgroup_size)))))), ~ (~ (0u | _GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups.x), max(_GLF_IDENTITY((gl_NumWorkGroups.x), clamp(_GLF_IDENTITY((gl_NumWorkGroups.x), ~ (~ ((gl_NumWorkGroups.x)))), (gl_NumWorkGroups.x), _GLF_IDENTITY((gl_NumWorkGroups.x), ((gl_NumWorkGroups.x)) | ((gl_NumWorkGroups.x))))), _GLF_IDENTITY((gl_NumWorkGroups.x), ((gl_NumWorkGroups.x)) + 0u))), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY((gl_NumWorkGroups.x), max((gl_NumWorkGroups.x), _GLF_IDENTITY((gl_NumWorkGroups.x), _GLF_IDENTITY(1u * ((gl_NumWorkGroups.x)), (_GLF_IDENTITY(true, (true) || false) ? 1u * ((gl_NumWorkGroups.x)) : _GLF_FUZZED((subgroup_size ++))))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(uint(_GLF_IDENTITY((gl_NumWorkGroups.x), max((gl_NumWorkGroups.x), _GLF_IDENTITY((gl_NumWorkGroups.x), 1u * ((gl_NumWorkGroups.x))))))), (uint(uint(_GLF_IDENTITY((gl_NumWorkGroups.x), max((gl_NumWorkGroups.x), _GLF_IDENTITY((gl_NumWorkGroups.x), 1u * ((_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)).x)))))))) + 0u)), (true ? ~ (uint(uint(_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups.x, max(gl_NumWorkGroups.x, gl_NumWorkGroups.x))), max((gl_NumWorkGroups.x), _GLF_IDENTITY((gl_NumWorkGroups.x), 1u * _GLF_IDENTITY(((gl_NumWorkGroups.x)), (((gl_NumWorkGroups.x))) | (((gl_NumWorkGroups.x)))))))))) : _GLF_FUZZED(subgroup_size))))))))));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, _GLF_IDENTITY(false, (false) && true), false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))) || false)))), false, true, false))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, uint(uint(gl_WorkGroupSize.x)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), false))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, true)), false || (bool(bvec3(_GLF_DEAD(false), true, true))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, bool(bvec4(true, true, false, false))), false, false, false))) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, bool(bvec4(true, true, false, false))), false, false, false))) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(1u, (1u) | 0u) ^ 1u) + (gl_WorkGroupID.x)), ~ (~ (_GLF_IDENTITY(gl_WorkGroupID.x, (1u ^ 1u) + (gl_WorkGroupID.x)))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))) && true)) && true, ! (! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))))) || false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), (bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))) && true)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))) || false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ((false)) || false), ! (! (! (false))))))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true)))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(acos(-6450.4229)) : _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, 0u + (_GLF_IDENTITY(workgroup_id, (workgroup_id) - 0u))), (workgroup_size * workgroup_id) | (workgroup_size * workgroup_id));
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))))), 0u ^ (subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u, min(0u, 0u)) | _GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size)))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u | _GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) | _GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size)))), _GLF_IDENTITY(subgroup_size, 0u | _GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size)))), _GLF_IDENTITY(subgroup_size, 0u | _GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(((subgroup_size)) | ((subgroup_size)), (_GLF_IDENTITY(((subgroup_size)) | ((subgroup_size)), (false ? _GLF_FUZZED(subgroup_local_id) : ((subgroup_size)) | ((subgroup_size))))) | 0u)))))) | (_GLF_IDENTITY(subgroup_size, 0u | _GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), 0u, 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u) * subgroup_size, uint(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), 0u, 0u)))) * uint(_GLF_ONE(1.0, injectionSwitch.y))), (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(subgroup_id * subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)), (1u ^ 0u))), (uint(uvec3(subgroup_id * subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)), (1u ^ 0u)))) * uint(_GLF_ONE(1.0, injectionSwitch.y))), max(uint(uvec3(subgroup_id * subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)), (1u ^ 0u))), uint(uvec3(subgroup_id * subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)), (1u ^ 0u))))))) | (subgroup_id * subgroup_size)), 0u, 0u), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), subgroup_size, subgroup_size))) - 0u), (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), 0u, 0u), clamp(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), 0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) - 0u)))), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), 0u, 0u), clamp(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), 0u, 0u), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * subgroup_size) | _GLF_IDENTITY((subgroup_id * subgroup_size), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4((subgroup_id * subgroup_size), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), 0u, 0u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4((subgroup_id * subgroup_size), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), 0u, 0u)))), (uint(_GLF_IDENTITY(uvec4((subgroup_id * subgroup_size), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), 0u, 0u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4((subgroup_id * subgroup_size), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), 0u, 0u))))) << 0u)), ~ (~ ((subgroup_id * subgroup_size) | (subgroup_id * subgroup_size))))), (true ? _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)))))), (_GLF_IDENTITY(subgroup_id, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_id : _GLF_FUZZED(49124u))) * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))) | (subgroup_id * subgroup_size)) : _GLF_FUZZED(workgroup_base))), 0u, 0u), uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), 0u, 0u))), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u) * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), 0u, 0u)))) ^ uvec3(0u, 0u, 0u))))) << 0u), uint(_GLF_ONE(1.0, injectionSwitch.y)) * _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * subgroup_size) | (subgroup_id * subgroup_size), ((subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)) << (0u & 85726u))), 0u, 0u))), (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u) * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(uvec3(subgroup_id * subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)), (1u ^ 0u))), max(_GLF_IDENTITY(uint(uvec3(subgroup_id * subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)), (1u ^ 0u))), (false ? _GLF_FUZZED(subgroup_size) : uint(uvec3(subgroup_id * subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)), (1u ^ 0u))))), uint(uvec3(subgroup_id * subgroup_size, uint(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, 1.0)), injectionSwitch.y)), (_GLF_IDENTITY(1u, (1u) | (1u)) ^ 0u))))))) | (subgroup_id * subgroup_size)), 0u, 0u), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uint(subgroup_id)), uint(_GLF_IDENTITY(uvec2(uint(uint(subgroup_id)), 1u), (_GLF_IDENTITY(uvec2(uint(uint(subgroup_id)), 1u), uvec2(0u, 0u) | (uvec2(uint(uint(subgroup_id)), 1u)))) | (uvec2(uint(uint(subgroup_id)), 1u)))))) * subgroup_size)), 0u, 0u), clamp(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(_GLF_IDENTITY(105243u, (105243u) | (_GLF_IDENTITY(105243u, (false ? _GLF_FUZZED(subgroup_local_id) : 105243u))))))) * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), 0u, _GLF_IDENTITY(0u, (0u) | (0u))), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) >> 0u) | (subgroup_id * subgroup_size)), 0u, 0u), clamp(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)) : _GLF_FUZZED(56060u))), (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), 0u | (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)))), _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(num_workgroup) : 0u)), 0u), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uvec4(subgroup_id, 1u, 0u, 0u), max(uvec4(subgroup_id, 1u, 0u, 0u), _GLF_IDENTITY(uvec4(subgroup_id, 1u, 0u, 0u), uvec4(_GLF_IDENTITY(0u, 0u | (0u)), 0u, 0u, 0u) | (uvec4(subgroup_id, 1u, 0u, 0u))))))) * subgroup_size)), _GLF_IDENTITY((true ? _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), 0u | (_GLF_FUZZED(workgroup_base))) : _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 0u, 1u, 1u)))) / 1u)))))), (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)) : _GLF_FUZZED(workgroup_base)), ((true ? _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), 0u | (_GLF_FUZZED(workgroup_base))) : _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 0u, 1u, 1u)))) / 1u)))))), (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)) : _GLF_FUZZED(workgroup_base))) ^ 0u)), 0u, 0u), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)) * subgroup_size)), (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_base))), min(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) | (subgroup_id * subgroup_size)), 0u, 0u))), uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), 0u, 0u)))) ^ uvec3(0u, 0u, 0u))))) << 0u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), 0u, 0u))), (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(uvec3(subgroup_id * subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)), (1u ^ 0u))), max(uint(uvec3(subgroup_id * subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)), (1u ^ 0u))), uint(uvec3(subgroup_id * subgroup_size, uint(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, 1.0)), injectionSwitch.y)), (1u ^ 0u))))))) | (subgroup_id * subgroup_size)), 0u, 0u), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))) * subgroup_size)), 0u, 0u), clamp(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(105243u))) * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), 0u, _GLF_IDENTITY(0u, (0u) | (0u))), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) >> 0u) | (subgroup_id * subgroup_size)), 0u, 0u), clamp(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), 0u | (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)))), 0u, 0u), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uvec4(subgroup_id, 1u, 0u, 0u), max(uvec4(subgroup_id, 1u, 0u, 0u), _GLF_IDENTITY(uvec4(subgroup_id, 1u, 0u, 0u), uvec4(0u, 0u, 0u, 0u) | (uvec4(subgroup_id, 1u, 0u, 0u))))))) * subgroup_size)), (true ? _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), 0u | (_GLF_FUZZED(workgroup_base))) : _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 0u, 1u, 1u)))) / 1u)))))), (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)) : _GLF_FUZZED(workgroup_base))), 0u, 0u), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_base))), min(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) | (subgroup_id * subgroup_size)), 0u, 0u))), uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), 0u, 0u)))) ^ uvec3(0u, 0u, 0u))))) << 0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + ((_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), 0u, 0u))), (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(uvec3(subgroup_id * subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)), (1u ^ 0u))), max(uint(uvec3(subgroup_id * subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)), (1u ^ 0u))), uint(uvec3(subgroup_id * subgroup_size, uint(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, 1.0)), injectionSwitch.y)), (1u ^ 0u))))))) | (subgroup_id * subgroup_size)), 0u, 0u), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))) * subgroup_size)), 0u, 0u), clamp(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(105243u))) * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), 0u, _GLF_IDENTITY(0u, (0u) | (0u))), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) >> 0u) | (subgroup_id * subgroup_size)), 0u, 0u), clamp(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), 0u | (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)))), 0u, 0u), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uvec4(subgroup_id, 1u, 0u, 0u), max(uvec4(subgroup_id, 1u, 0u, 0u), _GLF_IDENTITY(uvec4(subgroup_id, 1u, 0u, 0u), uvec4(0u, 0u, 0u, 0u) | (uvec4(subgroup_id, 1u, 0u, 0u))))))) * subgroup_size)), (true ? _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), 0u | (_GLF_FUZZED(workgroup_base))) : _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 0u, 1u, 1u)))) / 1u)))))), (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)) : _GLF_FUZZED(workgroup_base))), 0u, 0u), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_base))), min(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) | (subgroup_id * subgroup_size)), 0u, 0u))), uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), 0u, 0u)))) ^ uvec3(0u, 0u, 0u))))) << 0u)))), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), 0u, 0u))), (_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), 0u, 0u)))) * 1u), (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(uvec3(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), clamp(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), clamp(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u ^ (uint(_GLF_ONE(1.0, injectionSwitch.y)))))))), (1u ^ 0u))), max(uint(uvec3(subgroup_id * subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)), (1u ^ 0u))), uint(uvec3(subgroup_id * subgroup_size, uint(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, 1.0)), injectionSwitch.y)), (1u ^ 0u))))))) | (subgroup_id * subgroup_size)), 0u, 0u), _GLF_IDENTITY((_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))) * subgroup_size)), 0u, 0u), clamp(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(105243u))) * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), 0u, _GLF_IDENTITY(0u, (0u) | (0u))), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) >> 0u) | (subgroup_id * subgroup_size)), 0u, 0u), clamp(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), 0u | (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)))), 0u, 0u), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uvec4(subgroup_id, 1u, 0u, 0u), max(uvec4(subgroup_id, 1u, 0u, 0u), _GLF_IDENTITY(uvec4(subgroup_id, 1u, 0u, 0u), uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(atomicMin(subgroup_size, workgroup_size))))))) | (uvec4(subgroup_id, 1u, 0u, 0u))))))) * subgroup_size)), (true ? _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), 0u | (_GLF_FUZZED(workgroup_base))) : _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 0u, 1u, 1u)))) / 1u), (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), 0u | (_GLF_FUZZED(workgroup_base))) : _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 0u, 1u, 1u)))) / 1u)) / 1u)))))), (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)) : _GLF_FUZZED(workgroup_base))), 0u, 0u), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)))))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_base))), min(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) | (subgroup_id * subgroup_size), ((_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_base))), min(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) | (subgroup_id * subgroup_size)) << 0u)), 0u, 0u))), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), 0u, 0u)))), ((_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))) * subgroup_size)), 0u, 0u), clamp(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(105243u))) * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), 0u, _GLF_IDENTITY(0u, (0u) | (0u))), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) >> 0u) | (subgroup_id * subgroup_size)), 0u, 0u), clamp(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), 0u | (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)))), 0u, 0u), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uvec4(subgroup_id, 1u, 0u, 0u), max(uvec4(subgroup_id, 1u, 0u, 0u), _GLF_IDENTITY(uvec4(subgroup_id, 1u, 0u, 0u), uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(atomicMin(subgroup_size, workgroup_size))))))) | (uvec4(subgroup_id, 1u, 0u, 0u))))))) * subgroup_size)), (true ? _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), 0u | (_GLF_FUZZED(workgroup_base))) : _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 0u, 1u, 1u)))) / 1u), (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), 0u | (_GLF_FUZZED(workgroup_base))) : _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 0u, 1u, 1u)))) / 1u)) / 1u)))))), (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)) : _GLF_FUZZED(workgroup_base))), 0u, 0u), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)))))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_base))), min(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) | (subgroup_id * subgroup_size), ((_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_base))), min(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) | (subgroup_id * subgroup_size)) << 0u)), 0u, 0u))), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), 0u, 0u))))) | uvec3(0u, 0u, 0u)) ^ uvec3(0u, 0u, 0u))))) << 0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + ((_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))), (((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u)))) / 1u), 1u, 1u))) * subgroup_size, uint(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), 0u, 0u))), (workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(uvec3(subgroup_id * subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)), (1u ^ 0u))), max(uint(uvec3(subgroup_id * subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)), (1u ^ 0u))), uint(uvec3(subgroup_id * subgroup_size, uint(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, 1.0)), injectionSwitch.y)), (1u ^ 0u))))))) | (subgroup_id * subgroup_size)), 0u, 0u), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))) * subgroup_size)), 0u, 0u), clamp(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(105243u))) * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), 0u, _GLF_IDENTITY(0u, (0u) | (0u))), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) >> 0u) | (subgroup_id * subgroup_size)), 0u, 0u), clamp(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), 0u | (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)))), 0u, 0u), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uvec4(subgroup_id, 1u, 0u, 0u), max(uvec4(subgroup_id, 1u, 0u, 0u), _GLF_IDENTITY(uvec4(subgroup_id, 1u, 0u, 0u), uvec4(0u, 0u, 0u, 0u) | (uvec4(subgroup_id, 1u, 0u, 0u))))))) * subgroup_size)), (true ? _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), 0u | (_GLF_FUZZED(workgroup_base))) : _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 0u, 1u, 1u)))) / 1u)))))), (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)) : _GLF_FUZZED(workgroup_base))), 0u, 0u), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_base))), min(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) | (subgroup_id * subgroup_size)), 0u, 0u))), uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), 0u, 0u)))) ^ uvec3(0u, 0u, 0u)))), (_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(uvec3(subgroup_id * subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)), (1u ^ 0u))), max(uint(uvec3(subgroup_id * subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)), (1u ^ 0u))), uint(uvec3(subgroup_id * subgroup_size, uint(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, 1.0)), injectionSwitch.y)), (1u ^ 0u))))))) | (subgroup_id * subgroup_size)), 0u, 0u), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))) * subgroup_size)), 0u, 0u), clamp(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(105243u))) * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), 0u, _GLF_IDENTITY(0u, (0u) | (0u))), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) >> 0u) | (subgroup_id * subgroup_size)), 0u, 0u), clamp(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), 0u | (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)))), 0u, 0u), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uvec4(subgroup_id, 1u, 0u, 0u), max(uvec4(subgroup_id, 1u, 0u, 0u), _GLF_IDENTITY(uvec4(subgroup_id, 1u, 0u, 0u), uvec4(0u, 0u, 0u, 0u) | (uvec4(subgroup_id, 1u, 0u, 0u))))))) * subgroup_size)), (true ? _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), 0u | (_GLF_FUZZED(workgroup_base))) : _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 0u, 1u, 1u)))) / 1u)))))), (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)) : _GLF_FUZZED(workgroup_base))), 0u, 0u), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_base))), min(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) | (subgroup_id * subgroup_size)), 0u, 0u))), uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), 0u, 0u)))) ^ uvec3(0u, 0u, 0u))))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(uvec3(subgroup_id * subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)), (1u ^ 0u))), max(uint(uvec3(subgroup_id * subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)), (1u ^ 0u))), uint(uvec3(subgroup_id * subgroup_size, uint(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, 1.0)), injectionSwitch.y)), (1u ^ 0u))))))) | (subgroup_id * subgroup_size)), 0u, 0u), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))) * subgroup_size)), 0u, 0u), clamp(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(105243u))) * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), 0u, _GLF_IDENTITY(0u, (0u) | (0u))), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) >> 0u) | (subgroup_id * subgroup_size)), 0u, 0u), clamp(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), 0u | (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)))), 0u, 0u), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uvec4(subgroup_id, 1u, 0u, 0u), max(uvec4(subgroup_id, 1u, 0u, 0u), _GLF_IDENTITY(uvec4(subgroup_id, 1u, 0u, 0u), uvec4(0u, 0u, 0u, 0u) | (uvec4(subgroup_id, 1u, 0u, 0u))))))) * subgroup_size)), (true ? _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), 0u | (_GLF_FUZZED(workgroup_base))) : _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 0u, 1u, 1u)))) / 1u)))))), (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)) : _GLF_FUZZED(workgroup_base))), 0u, 0u), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_base))), min(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) | (subgroup_id * subgroup_size)), 0u, 0u))), uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), 0u, 0u)))) ^ uvec3(0u, 0u, 0u)))), clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(uvec3(subgroup_id * subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)), (1u ^ 0u))), max(uint(uvec3(subgroup_id * subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)), (1u ^ 0u))), uint(uvec3(subgroup_id * subgroup_size, uint(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, 1.0)), injectionSwitch.y)), (1u ^ 0u))))))) | (subgroup_id * subgroup_size)), 0u, 0u), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))) * subgroup_size)), 0u, 0u), clamp(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(105243u))) * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), 0u, _GLF_IDENTITY(0u, (0u) | (0u))), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) >> 0u) | (subgroup_id * subgroup_size)), 0u, 0u), clamp(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), 0u | (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)))), 0u, 0u), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uvec4(subgroup_id, 1u, 0u, 0u), max(uvec4(subgroup_id, 1u, 0u, 0u), _GLF_IDENTITY(uvec4(subgroup_id, 1u, 0u, 0u), uvec4(0u, 0u, 0u, 0u) | (uvec4(subgroup_id, 1u, 0u, 0u))))))) * subgroup_size)), (true ? _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), 0u | (_GLF_FUZZED(workgroup_base))) : _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 0u, 1u, 1u)))) / 1u)))))), (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)) : _GLF_FUZZED(workgroup_base))), 0u, 0u), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_base))), min(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) | (subgroup_id * subgroup_size)), 0u, 0u))), uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), 0u, 0u)))) ^ uvec3(0u, 0u, 0u)))), _GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(uvec3(subgroup_id * subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)), (1u ^ 0u))), max(uint(uvec3(subgroup_id * subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)), (1u ^ 0u))), uint(uvec3(subgroup_id * subgroup_size, uint(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, 1.0)), injectionSwitch.y)), (1u ^ 0u))))))) | (subgroup_id * subgroup_size)), 0u, 0u), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))) * subgroup_size)), 0u, 0u), clamp(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(105243u))) * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), 0u, _GLF_IDENTITY(0u, (0u) | (0u))), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) >> 0u) | (subgroup_id * subgroup_size)), 0u, 0u), clamp(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), 0u | (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)))), 0u, 0u), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uvec4(subgroup_id, 1u, 0u, 0u), max(uvec4(subgroup_id, 1u, 0u, 0u), _GLF_IDENTITY(uvec4(subgroup_id, 1u, 0u, 0u), uvec4(0u, 0u, 0u, 0u) | (uvec4(subgroup_id, 1u, 0u, 0u))))))) * subgroup_size)), (true ? _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), 0u | (_GLF_FUZZED(workgroup_base))) : _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 0u, 1u, 1u)))) / 1u)))))), (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)) : _GLF_FUZZED(workgroup_base))), 0u, 0u), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_base))), min(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) | (subgroup_id * subgroup_size)), 0u, 0u))), uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), 0u, 0u)))) ^ uvec3(0u, 0u, 0u)))), _GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(uvec3(subgroup_id * subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)), (1u ^ 0u))), max(uint(uvec3(subgroup_id * subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)), (1u ^ 0u))), uint(uvec3(subgroup_id * subgroup_size, uint(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, 1.0)), injectionSwitch.y)), (1u ^ 0u))))))) | (subgroup_id * subgroup_size)), 0u, 0u), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))) * subgroup_size)), 0u, 0u), clamp(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(105243u))) * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), 0u, _GLF_IDENTITY(0u, (0u) | (0u))), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) >> 0u) | (subgroup_id * subgroup_size)), 0u, 0u), clamp(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), 0u | (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)))), 0u, 0u), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uvec4(subgroup_id, 1u, 0u, 0u), max(uvec4(subgroup_id, 1u, 0u, 0u), _GLF_IDENTITY(uvec4(subgroup_id, 1u, 0u, 0u), uvec4(0u, 0u, 0u, 0u) | (uvec4(subgroup_id, 1u, 0u, 0u))))))) * subgroup_size)), (true ? _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), 0u | (_GLF_FUZZED(workgroup_base))) : _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 0u, 1u, 1u)))) / 1u)))))), (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)) : _GLF_FUZZED(workgroup_base))), 0u, 0u), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_base))), min(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) | (subgroup_id * subgroup_size)), 0u, 0u))), uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), 0u, 0u)))) ^ uvec3(0u, 0u, 0u))))))))) << 0u))))) + 0u)))))) - 0u) + subgroup_local_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y)) || (false), (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), bool(bool(false))), (injectionSwitch.x > injectionSwitch.y)) || (false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-4.8)), float(injectionSwitch.y), bool(true)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! _GLF_IDENTITY((! (false)), bool(bool((! (false)))))))), true && (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec2((false), true)), bool(bvec2(bool(bvec2(_GLF_IDENTITY((false), false || ((false))), true)), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true)))))))))), bool(_GLF_IDENTITY(bool((! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec2((false), true)), bool(bvec2(bool(bvec2(_GLF_IDENTITY((false), false || ((false))), true)), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true))))))))))), (_GLF_IDENTITY(bool((! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec2((false), true)), bool(bvec2(bool(bvec2(_GLF_IDENTITY((false), false || ((false))), true)), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true))))))))))), false || (bool((! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec2((false), true)), bool(bvec2(bool(bvec2(_GLF_IDENTITY((false), false || ((false))), true)), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true)))))))))))))) || false)))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), bool(bvec2(_GLF_IDENTITY(! _GLF_IDENTITY(((! (false))), ! (! (((! (false)))))), true && _GLF_IDENTITY((! ((! (false)))), ! (! ((! ((! (false)))))))), true)))))))), bool(bvec4(! (! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY(((! (false))), ! (! (((! (false)))))), (! _GLF_IDENTITY(((! (false))), ! (! (((! (false))))))) && true), true && _GLF_IDENTITY((! ((! (false)))), ! (! ((! ((! (false)))))))), true)))))))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(23.39), _GLF_FUZZED(-4037.2850)), bvec2(false, false))).x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! _GLF_IDENTITY((bool(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x4(injectionSwitch.x, 0.0, 0.0, 0.0, abs(0.0), 0.0, exp(0.0), 1.0)), clamp(float(mat2x4(injectionSwitch.x, 0.0, 0.0, 0.0, abs(0.0), 0.0, _GLF_IDENTITY(exp(0.0), mix(float(_GLF_IDENTITY(exp(0.0), float(mat3x4(exp(0.0), 1.0, 1.0, 1.0, sqrt(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x))))), float(_GLF_FUZZED(-5.7)), bool(false))), 1.0)), float(mat2x4(injectionSwitch.x, 0.0, 0.0, 0.0, abs(0.0), 0.0, exp(0.0), 1.0)), float(mat2x4(injectionSwitch.x, 0.0, 0.0, 0.0, abs(0.0), 0.0, exp(0.0), 1.0))))), injectionSwitch.x, injectionSwitch.x), (clamp(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x4(injectionSwitch.x, 0.0, 0.0, 0.0, abs(0.0), 0.0, exp(0.0), 1.0)), clamp(float(mat2x4(injectionSwitch.x, 0.0, 0.0, 0.0, abs(0.0), 0.0, exp(0.0), 1.0)), float(mat2x4(injectionSwitch.x, 0.0, 0.0, 0.0, abs(0.0), 0.0, exp(0.0), 1.0)), float(mat2x4(injectionSwitch.x, 0.0, 0.0, 0.0, abs(0.0), _GLF_IDENTITY(0.0, tan(0.0) + (0.0)), exp(0.0), 1.0))))), injectionSwitch.x, injectionSwitch.x)) + 0.0)) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x4(injectionSwitch.x, 0.0, 0.0, 0.0, abs(0.0), 0.0, exp(0.0), 1.0)), clamp(float(mat2x4(injectionSwitch.x, 0.0, 0.0, 0.0, abs(0.0), 0.0, _GLF_IDENTITY(exp(0.0), mix(float(_GLF_IDENTITY(exp(0.0), float(mat3x4(exp(0.0), 1.0, 1.0, 1.0, sqrt(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x))))), float(_GLF_FUZZED(-5.7)), bool(false))), 1.0)), float(mat2x4(injectionSwitch.x, 0.0, 0.0, 0.0, abs(0.0), 0.0, exp(0.0), 1.0)), float(mat2x4(injectionSwitch.x, 0.0, 0.0, 0.0, abs(0.0), _GLF_IDENTITY(0.0, max(0.0, 0.0)), exp(0.0), 1.0))))), injectionSwitch.x, injectionSwitch.x), (clamp(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x4(injectionSwitch.x, 0.0, 0.0, 0.0, abs(0.0), 0.0, exp(0.0), 1.0)), clamp(float(mat2x4(injectionSwitch.x, 0.0, 0.0, 0.0, abs(0.0), 0.0, exp(0.0), 1.0)), _GLF_IDENTITY(float(mat2x4(injectionSwitch.x, 0.0, 0.0, 0.0, abs(0.0), 0.0, exp(0.0), 1.0)), 1.0 * (float(mat2x4(injectionSwitch.x, 0.0, 0.0, 0.0, abs(0.0), 0.0, exp(0.0), 1.0)))), float(mat2x4(injectionSwitch.x, 0.0, 0.0, 0.0, abs(0.0), _GLF_IDENTITY(0.0, tan(0.0) + (0.0)), exp(0.0), 1.0))))), injectionSwitch.x, injectionSwitch.x)) + _GLF_IDENTITY(0.0, max(0.0, 0.0)))) > injectionSwitch.y) && _GLF_IDENTITY(true, false || (true))))))))), bool(bool((bool(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x4(injectionSwitch.x, 0.0, 0.0, 0.0, abs(0.0), 0.0, exp(0.0), 1.0)), clamp(float(mat2x4(injectionSwitch.x, 0.0, 0.0, 0.0, abs(0.0), 0.0, _GLF_IDENTITY(exp(0.0), mix(float(_GLF_IDENTITY(exp(0.0), float(mat3x4(exp(0.0), 1.0, 1.0, 1.0, sqrt(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x))))), float(_GLF_FUZZED(-5.7)), bool(false))), 1.0)), float(mat2x4(injectionSwitch.x, 0.0, 0.0, 0.0, abs(0.0), 0.0, exp(0.0), 1.0)), float(mat2x4(injectionSwitch.x, 0.0, 0.0, 0.0, abs(0.0), 0.0, exp(0.0), 1.0))))), injectionSwitch.x, injectionSwitch.x), (clamp(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x4(injectionSwitch.x, 0.0, 0.0, 0.0, abs(0.0), 0.0, exp(0.0), 1.0)), clamp(float(mat2x4(injectionSwitch.x, 0.0, 0.0, 0.0, abs(0.0), 0.0, exp(0.0), 1.0)), float(mat2x4(injectionSwitch.x, 0.0, 0.0, 0.0, abs(0.0), 0.0, exp(0.0), 1.0)), float(mat2x4(injectionSwitch.x, 0.0, 0.0, 0.0, abs(0.0), _GLF_IDENTITY(0.0, tan(0.0) + (0.0)), exp(0.0), 1.0))))), injectionSwitch.x, injectionSwitch.x)) + 0.0)) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x4(injectionSwitch.x, 0.0, 0.0, 0.0, abs(0.0), 0.0, exp(0.0), 1.0)), clamp(float(mat2x4(injectionSwitch.x, 0.0, 0.0, 0.0, abs(0.0), 0.0, _GLF_IDENTITY(exp(0.0), mix(float(_GLF_IDENTITY(exp(0.0), float(mat3x4(exp(0.0), 1.0, 1.0, 1.0, sqrt(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x))))), float(_GLF_FUZZED(-5.7)), bool(false))), 1.0)), float(mat2x4(injectionSwitch.x, 0.0, 0.0, 0.0, abs(0.0), 0.0, exp(0.0), 1.0)), float(mat2x4(injectionSwitch.x, 0.0, 0.0, 0.0, abs(0.0), _GLF_IDENTITY(0.0, max(0.0, 0.0)), exp(0.0), 1.0))))), injectionSwitch.x, injectionSwitch.x), (clamp(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x4(injectionSwitch.x, 0.0, 0.0, 0.0, abs(0.0), 0.0, exp(0.0), 1.0)), clamp(float(mat2x4(injectionSwitch.x, 0.0, 0.0, 0.0, abs(0.0), 0.0, exp(0.0), 1.0)), _GLF_IDENTITY(float(mat2x4(injectionSwitch.x, 0.0, 0.0, 0.0, abs(0.0), 0.0, exp(0.0), 1.0)), 1.0 * (float(mat2x4(injectionSwitch.x, 0.0, 0.0, 0.0, abs(0.0), 0.0, exp(0.0), 1.0)))), float(mat2x4(injectionSwitch.x, 0.0, 0.0, 0.0, abs(0.0), _GLF_IDENTITY(0.0, tan(0.0) + (0.0)), exp(0.0), 1.0))))), injectionSwitch.x, injectionSwitch.x)) + _GLF_IDENTITY(0.0, max(0.0, 0.0)))) > injectionSwitch.y) && _GLF_IDENTITY(true, false || (true))))))))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false)))))))), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(false, false))))), bool(bvec2(_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(false, false))))), bool(bvec4((! (_GLF_IDENTITY(false, bool(bvec2(false, false))))), false, true, false))), true))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (_GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) || false))))))))))))), ! (! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))))))), false, true))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))) >> 0u) * _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_size)) + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && _GLF_IDENTITY((! (_GLF_DEAD(false))), ((! (_GLF_DEAD(false)))) || false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, true))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
  }
 buf[virtual_gid] = _GLF_IDENTITY(1, _GLF_IDENTITY(1 * (_GLF_IDENTITY(1, max(1, 1))), 0 ^ _GLF_IDENTITY((1 * (_GLF_IDENTITY(1, max(1, 1)))), max((1 * (_GLF_IDENTITY(1, max(1, 1)))), (1 * (_GLF_IDENTITY(1, max(1, 1))))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false))), ! (! (bool(bool(false)))))) && true)), (false) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), true), bvec2(bvec4(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), true), bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), true), true, false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true && (bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), true), bvec2(bvec4(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), true), bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), true), true, false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))
        barrier();
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)) / 1.0), mix(float(injectionSwitch.x), float(_GLF_FUZZED(float(true))), bool(false))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x)) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 buf[next_virtual_gid] = _GLF_IDENTITY(2, (2) / 1);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
