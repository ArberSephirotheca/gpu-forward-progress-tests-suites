#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 0) uniform buf0 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(16, ~ (~ (_GLF_IDENTITY(16, _GLF_IDENTITY((16) << (0 << _GLF_IDENTITY(int(8), int(8))), min((16) << (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), clamp(_GLF_IDENTITY(int(_GLF_IDENTITY(8, (8) / _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(90462))))), int(8)), _GLF_IDENTITY(_GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), int(ivec4(int(8), 0, 0, 1)))), (_GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), (_GLF_IDENTITY(int(8), int(8))) / 1)) | 0), _GLF_IDENTITY(int(8), int(8))))), _GLF_IDENTITY((16) << (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(8, min(8, _GLF_IDENTITY(8, (8) * 1))), max(8, 8))), int(8))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-89004) : (16) << (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(8, min(8, _GLF_IDENTITY(8, (8) * 1))), max(8, 8))), int(8))))))))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(16, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(16, _GLF_IDENTITY((16) << (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(8), int(int(int(8)))), int(8))), min((16) << (0 << _GLF_IDENTITY(int(8), int(8))), (16) << (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(8, max(_GLF_IDENTITY(8, min(8, 8)), _GLF_IDENTITY(8, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(-79149) : _GLF_IDENTITY(8, (8) + 0)))))), int(8))))))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(16, _GLF_IDENTITY(_GLF_IDENTITY((16), (true ? (_GLF_IDENTITY(16, (16) | (16))) : _GLF_FUZZED(91155))) << (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(8), clamp(_GLF_IDENTITY(int(8), (int(8)) << 0), int(8), _GLF_IDENTITY(int(8), (true ? int(8) : _GLF_FUZZED(40919))))), int(_GLF_IDENTITY(8, clamp(8, 8, 8))))), _GLF_IDENTITY(min((16) << (0 << _GLF_IDENTITY(int(8), int(8))), (16) << (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(8, max(_GLF_IDENTITY(8, min(8, 8)), 8))), int(8)))), 1 * (min((16) << (0 << _GLF_IDENTITY(int(8), int(8))), _GLF_IDENTITY((16) << (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(8, max(8, 8)), max(_GLF_IDENTITY(8, min(8, 8)), 8))), int(8))), _GLF_IDENTITY(0 | ((16) << (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(8, max(_GLF_IDENTITY(8, min(8, 8)), 8))), int(8)))), 0 ^ (_GLF_IDENTITY(0 | ((16) << (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(8, max(_GLF_IDENTITY(8, min(8, 8)), 8))), int(8)))), int(ivec4(_GLF_IDENTITY(0 | ((16) << (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(8, max(_GLF_IDENTITY(8, min(8, 8)), 8))), int(8)))), int(int(0 | ((16) << (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(8, max(_GLF_IDENTITY(8, min(8, 8)), 8))), int(8))))))), ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))), 0, 0)))))))))))), clamp((_GLF_IDENTITY(16, _GLF_IDENTITY(_GLF_IDENTITY((16), ~ (_GLF_IDENTITY(~ ((16)), ~ (~ (~ ((16))))))) << (0 << _GLF_IDENTITY(int(8), int(8))), _GLF_IDENTITY(min((16) << (0 << _GLF_IDENTITY(int(8), int(8))), (16) << (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(_GLF_IDENTITY(8, max(_GLF_IDENTITY(8, min(8, 8)), 8))), int(8)), max(0 << _GLF_IDENTITY(int(_GLF_IDENTITY(8, max(_GLF_IDENTITY(8, min(8, 8)), 8))), int(8)), _GLF_IDENTITY(0 << _GLF_IDENTITY(int(_GLF_IDENTITY(8, max(_GLF_IDENTITY(8, min(8, 8)), 8))), int(8)), (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(8, max(_GLF_IDENTITY(8, min(8, 8)), 8))), int(8))) ^ 0))))), ~ (~ (_GLF_IDENTITY(min((16) << (0 << _GLF_IDENTITY(int(8), int(8))), (_GLF_IDENTITY(16, 0 ^ (16))) << (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(8, max(_GLF_IDENTITY(8, min(8, 8)), 8))), int(8)))), _GLF_IDENTITY(0, (0) | (0)) | (min((16) << (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(8, (8) / 1)), int(8))), (16) << (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(8, max(_GLF_IDENTITY(8, min(8, 8)), 8))), int(8)))))))))))), _GLF_IDENTITY((_GLF_IDENTITY(16, _GLF_IDENTITY((16) << (0 << _GLF_IDENTITY(int(8), int(8))), min((16) << (0 << _GLF_IDENTITY(int(8), int(8))), (16) << (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(8, max(_GLF_IDENTITY(8, min(8, _GLF_IDENTITY(8, clamp(8, 8, 8)))), 8))), int(_GLF_IDENTITY(8, max(8, _GLF_IDENTITY(8, _GLF_IDENTITY(1, (false ? _GLF_FUZZED(10561) : _GLF_IDENTITY(1, (1) * ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0)))))) * (8))))))))))), min((_GLF_IDENTITY(16, _GLF_IDENTITY((16) << (0 << _GLF_IDENTITY(int(8), int(8))), min((16) << _GLF_IDENTITY((0 << _GLF_IDENTITY(int(_GLF_IDENTITY(8, (8) * 1)), int(8))), ~ (_GLF_IDENTITY(~ ((0 << _GLF_IDENTITY(int(_GLF_IDENTITY(8, (8) * 1)), int(8)))), (~ ((0 << _GLF_IDENTITY(int(_GLF_IDENTITY(8, (8) * 1)), int(8))))) ^ 0))), (16) << (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(8, max(_GLF_IDENTITY(8, min(8, 8)), 8))), int(8))))))), (_GLF_IDENTITY(16, _GLF_IDENTITY(_GLF_IDENTITY((16) << (0 << _GLF_IDENTITY(int(8), int(8))), int(_GLF_IDENTITY(ivec2((16) << (0 << _GLF_IDENTITY(int(8), int(8))), 1), (ivec2((16) << (0 << _GLF_IDENTITY(int(8), int(8))), 1)) | ivec2(0, 0)))), min((16) << (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(8), int(ivec4(_GLF_IDENTITY(int(8), 0 + (int(8))), (0 >> _GLF_IDENTITY(int(8), int(8))), 0, (1 ^ 0)))), int(8))), (16) << (_GLF_IDENTITY(0, (0) - 0) << _GLF_IDENTITY(int(_GLF_IDENTITY(8, max(_GLF_IDENTITY(8, min(8, 8)), 8))), int(8))))))))), _GLF_IDENTITY((_GLF_IDENTITY(16, _GLF_IDENTITY((16) << _GLF_IDENTITY((0 << _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), _GLF_IDENTITY(0 | (int(8)), (0 | (int(8))) | (0 | (int(8))))))), clamp((0 << _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), _GLF_IDENTITY(0 | (int(8)), (0 | (int(8))) | (0 | (int(8))))))), (0 << _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), _GLF_IDENTITY(0 | (int(8)), (0 | (int(8))) | (0 | (int(8))))))), (0 << _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), _GLF_IDENTITY(0 | (int(8)), (0 | (int(8))) | (0 | (int(8))))))))), min(_GLF_IDENTITY((_GLF_IDENTITY(16, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(16, (16) | (16))))) << (0 << _GLF_IDENTITY(int(8), int(8))), (_GLF_IDENTITY((16) << (0 << _GLF_IDENTITY(int(8), int(8))), (false ? _GLF_FUZZED(4759) : (16) << (0 << _GLF_IDENTITY(int(8), int(8)))))) | ((16) << (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), min(_GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(int(8), int(8))))))), (16) << (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(8, max(_GLF_IDENTITY(8, min(8, 8)), 8))), int(8))))))), ((_GLF_IDENTITY(16, _GLF_IDENTITY((16) << (0 << _GLF_IDENTITY(int(8), int(8))), min((16) << (0 << _GLF_IDENTITY(int(8), int(8))), (16) << (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(8, max(_GLF_IDENTITY(8, min(8, 8)), 8))), int(8)), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(8, max(_GLF_IDENTITY(8, min(8, 8)), 8))), int(8)), (_GLF_IDENTITY(int(_GLF_IDENTITY(8, max(_GLF_IDENTITY(8, min(8, 8)), 8))), int(8))) << 0))))))))) ^ 0)))))))), clamp(_GLF_IDENTITY(16, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(16, _GLF_IDENTITY((16) << (0 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(8), min(int(8), int(8))), int(8)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(8), min(int(8), int(8))), int(8)))))), min((16) << (0 << _GLF_IDENTITY(int(8), int(8))), (_GLF_IDENTITY(16, max(_GLF_IDENTITY(16, min(16, 16)), 16))) << (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(8, max(8, 8))), int(8)))))))), (~ (~ (_GLF_IDENTITY(16, _GLF_IDENTITY((16) << (0 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(8), min(int(8), int(8))), int(8)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(8), min(int(8), int(8))), int(8)))))), min((16) << (0 << _GLF_IDENTITY(int(8), int(8))), (_GLF_IDENTITY(16, max(_GLF_IDENTITY(16, min(16, 16)), 16))) << (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(8, max(8, 8))), int(8))))))))) | (~ (~ (_GLF_IDENTITY(16, _GLF_IDENTITY((16) << (0 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(8), min(int(8), int(8))), int(8)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(8), min(int(8), int(8))), int(8)))))), min((16) << (0 << _GLF_IDENTITY(int(8), int(8))), (_GLF_IDENTITY(16, max(_GLF_IDENTITY(16, min(16, 16)), 16))) << (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(8, max(8, 8))), int(8))))))))))), _GLF_IDENTITY(16, ~ (~ (_GLF_IDENTITY(16, _GLF_IDENTITY((16) << (0 << _GLF_IDENTITY(int(8), int(8))), _GLF_IDENTITY(min((16) << (0 << _GLF_IDENTITY(int(8), int(8))), (16) << (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(8, max(8, 8))), int(8)))), (min((16) << (0 << _GLF_IDENTITY(int(8), int(8))), (16) << (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(8, max(8, 8))), int(8))))) << 0)))))), _GLF_IDENTITY(16, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(16, _GLF_IDENTITY((16) << (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(8), clamp(int(8), _GLF_IDENTITY(int(8), 0 ^ (int(8))), int(8))), int(8))), min((16) << (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), int(ivec2(_GLF_IDENTITY(int(8), int(8)), 1)))), _GLF_IDENTITY((16) << (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(8, max(8, 8))), int(8))), clamp(_GLF_IDENTITY((16) << (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(8, max(8, 8))), int(8))), ~ (~ ((16) << (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(8, max(8, 8))), int(8)))))), _GLF_IDENTITY((16) << (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(8, max(8, 8))), int(8))), (_GLF_IDENTITY((16) << (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(8, max(8, 8))), int(8))), ((16) << (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(8, max(8, 8))), int(8)))) / 1)) >> 0), (16) << (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(8, max(8, 8))), int(8))))))))), (~ (_GLF_IDENTITY(16, _GLF_IDENTITY((16) << (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(8), clamp(int(8), _GLF_IDENTITY(int(8), 0 ^ (int(8))), int(8))), int(8))), min((16) << (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), int(ivec2(_GLF_IDENTITY(int(8), int(8)), 1)))), _GLF_IDENTITY((16) << (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(8, max(8, 8))), int(8))), clamp(_GLF_IDENTITY((16) << (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(8, max(8, 8))), int(8))), ~ (~ ((16) << (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(8, max(8, 8))), int(8)))))), _GLF_IDENTITY((16) << (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(8, max(8, 8))), int(8))), (_GLF_IDENTITY((16) << (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(8, max(8, 8))), int(8))), ((16) << (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(8, max(8, 8))), int(8)))) / 1)) >> 0), (16) << (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(8, max(8, 8))), int(8)))))))))) >> 0))))) : _GLF_FUZZED(-4966)));
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), _GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), bool(bvec4(! (! ((injectionSwitch.x > injectionSwitch.y))), false, false, false)))))), bool(bvec3(bool(_GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), bool(bvec4(! (! ((injectionSwitch.x > injectionSwitch.y))), false, false, false)))))), false, true)))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(5.1))), injectionSwitch.x)) > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(1.6)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
        {
         do
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(5.4))) > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             continue;
            }
           do
            {
             barrier();
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
              {
               if(_GLF_DEAD(false))
                break;
               barrier();
              }
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))));
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 0.0, 1.0, 0.0, cos(0.0), sqrt(1.0), _GLF_IDENTITY(abs(1.0), (abs(1.0)) - 0.0), cos(0.0), _GLF_IDENTITY(_GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), mix(vec4(_GLF_FUZZED(-5.9), _GLF_FUZZED((+ 4.2)), (vec4(0.0, 0.0, 1.0, 0.0))[2], (vec4(0.0, 0.0, 1.0, 0.0))[3]), vec4((vec4(0.0, 0.0, 1.0, 0.0))[0], (vec4(0.0, 0.0, 1.0, 0.0))[1], _GLF_FUZZED(-72.52), _GLF_FUZZED(8.9)), bvec4(true, true, false, _GLF_IDENTITY(false, true && (false))))), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), (_GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), mix(vec4(_GLF_FUZZED(-5.9), _GLF_FUZZED((+ 4.2)), (vec4(0.0, 0.0, 1.0, 0.0))[2], (vec4(0.0, 0.0, 1.0, 0.0))[3]), vec4(_GLF_IDENTITY((vec4(0.0, 0.0, 1.0, 0.0)), max((vec4(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY((vec4(0.0, 0.0, 1.0, 0.0)), min(_GLF_IDENTITY((vec4(0.0, 0.0, 1.0, 0.0)), vec4(mat4x3((vec4(0.0, 0.0, 1.0, 0.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY((vec4(0.0, 0.0, 1.0, 0.0)), mix(vec4(((vec4(0.0, 0.0, 1.0, 0.0)))[0], ((vec4(0.0, 0.0, 1.0, 0.0)))[1], _GLF_FUZZED(4.0), _GLF_FUZZED(-89.83)), vec4(_GLF_FUZZED(4157.9282), _GLF_FUZZED(6482.8810), ((vec4(0.0, 0.0, 1.0, 0.0)))[2], ((vec4(0.0, 0.0, 1.0, 0.0)))[3]), bvec4(false, false, true, true)))))))[0], (vec4(0.0, 0.0, 1.0, 0.0))[1], _GLF_FUZZED(-72.52), _GLF_FUZZED(8.9)), bvec4(true, true, false, _GLF_IDENTITY(false, true && (false))))), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)))) * determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))), length(0.0), 1.0))), _GLF_ONE(1.0, injectionSwitch.y)))).x > injectionSwitch.y))))
        break;
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
  }
 do
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ((false)) && true)), _GLF_IDENTITY(! (! _GLF_IDENTITY((! ((false))), ((! ((false)))) || false)), (_GLF_IDENTITY(! (! _GLF_IDENTITY((! ((false))), ((! ((false)))) || false)), ! (! (_GLF_IDENTITY(! (! _GLF_IDENTITY((! ((false))), ((! ((false)))) || false)), true && (! (! _GLF_IDENTITY((! ((false))), ((! ((false)))) || false)))))))) || false))), bool(bool(! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ((false)) && true)), _GLF_IDENTITY(! (! _GLF_IDENTITY((! ((false))), ((! ((false)))) || false)), (_GLF_IDENTITY(! (! _GLF_IDENTITY((! ((false))), ((! ((false)))) || false)), ! (! (_GLF_IDENTITY(! (! _GLF_IDENTITY((! ((false))), ((! ((false)))) || false)), true && (! (! _GLF_IDENTITY((! ((false))), ((! ((false)))) || false)))))))) || false))))))))))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * vec2(1.0, 1.0)), min(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(1.0, 1.0) * (mat2(1.0) * (injectionSwitch)))))).x) - 0.0), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))) > injectionSwitch.y))))
  barrier();
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _GLF_IDENTITY(_injected_loop_counter ++, ~ (~ (_injected_loop_counter ++))))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(workgroup_id, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u)), (_GLF_IDENTITY(uint(uvec4(workgroup_id, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u)), clamp(uint(uvec4(workgroup_id, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u)), uint(uvec4(workgroup_id, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u)), _GLF_IDENTITY(uint(uvec4(workgroup_id, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u)), (uint(uvec4(workgroup_id, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u))) | (uint(uvec4(workgroup_id, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u))))))) ^ 0u), (_GLF_IDENTITY(uint(uvec4(workgroup_id, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u)), (_GLF_IDENTITY(uint(uvec4(workgroup_id, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u)), clamp(uint(uvec4(workgroup_id, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u)), uint(uvec4(workgroup_id, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u)), uint(uvec4(workgroup_id, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u))))) ^ 0u)) ^ _GLF_IDENTITY(0u, ~ (~ (0u))))), min(workgroup_size * workgroup_id, _GLF_IDENTITY(workgroup_size * workgroup_id, (true ? _GLF_IDENTITY(workgroup_size, (workgroup_size) << _GLF_IDENTITY(0u, (0u) << _GLF_IDENTITY(0u, _GLF_IDENTITY(clamp(0u, 0u, 0u), uint(uvec3(clamp(0u, 0u, 0u), 1u, 0u)))))) * workgroup_id : _GLF_FUZZED(workgroup_size)))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         barrier();
        }
      }
     return;
    }
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (injectionSwitch.x > injectionSwitch.y))));
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), false || _GLF_IDENTITY(_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ((false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ((false)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-3.4))) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))))), _GLF_IDENTITY((! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ((false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true, ((! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), _GLF_IDENTITY(((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false))))), bool(bvec2(((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false))))), false))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false))))), bool(bvec2(((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false))))), false))), false), false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true) || false)))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 do
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    continue;
   if(_GLF_DEAD(false))
    return;
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(true ? workgroup_base : _GLF_FUZZED(workgroup_size), (_GLF_IDENTITY(true ? workgroup_base : _GLF_FUZZED(workgroup_size), clamp(true ? workgroup_base : _GLF_FUZZED(workgroup_size), true ? workgroup_base : _GLF_FUZZED(workgroup_size), true ? workgroup_base : _GLF_FUZZED(workgroup_size)))) << 0u))) + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
  {
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))))
    barrier();
   do
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 1.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 0.0, 0.0, 0.0, 1.0))) > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         return;
        }
       barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))));
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_ONE(1.0, injectionSwitch.y)) > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))), true), bvec2(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), true)))))))))
  return;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _GLF_IDENTITY(_injected_loop_counter ++, (true ? _injected_loop_counter ++ : _GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), (_GLF_FUZZED(_injected_loop_counter)) + 0))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 1.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, 0.0, tan(0.0), 0.0, 0.0)), log(1.0), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0), (mat3x4(injectionSwitch.y, 1.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, 0.0, tan(0.0), 0.0, 0.0)), log(1.0), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0)) + mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))))))
    break;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(9.1), _GLF_FUZZED(-281.695)), bvec2(false, false)))), _GLF_IDENTITY(max((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(9.1), _GLF_FUZZED(-281.695)), bvec2(false, false)))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(9.1), _GLF_FUZZED(-281.695)), bvec2(false, false)))), mix(vec2(((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(9.1), _GLF_FUZZED(-281.695)), bvec2(false, false)))))[0], _GLF_FUZZED(-41.55)), vec2(_GLF_FUZZED(-287.579), ((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(9.1), _GLF_FUZZED(-281.695)), bvec2(false, false)))))[1]), bvec2(false, true)))), clamp(max((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(9.1), _GLF_FUZZED(-281.695)), bvec2(false, false)))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(9.1), _GLF_FUZZED(-281.695)), bvec2(false, false)))), mix(vec2(((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(9.1), _GLF_FUZZED(-281.695)), bvec2(false, false)))))[0], _GLF_FUZZED(-41.55)), vec2(_GLF_FUZZED(-287.579), ((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(9.1), _GLF_FUZZED(-281.695)), bvec2(false, false)))))[1]), bvec2(false, true)))), max((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(9.1), _GLF_FUZZED(-281.695)), bvec2(false, false)))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(9.1), _GLF_FUZZED(-281.695)), bvec2(false, false)))), mix(vec2(((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(9.1), _GLF_FUZZED(-281.695)), bvec2(false, false)))))[0], _GLF_FUZZED(-41.55)), vec2(_GLF_FUZZED(-287.579), ((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(9.1), _GLF_FUZZED(-281.695)), bvec2(false, false)))))[1]), bvec2(false, true)))), _GLF_IDENTITY(max((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(9.1), _GLF_FUZZED(-281.695)), bvec2(false, false)))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(9.1), _GLF_FUZZED(-281.695)), bvec2(false, false)))), mix(vec2(((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(9.1), _GLF_FUZZED(-281.695)), bvec2(false, false)))))[0], _GLF_FUZZED(-41.55)), vec2(_GLF_FUZZED(-287.579), ((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(9.1), _GLF_FUZZED(-281.695)), bvec2(false, false)))))[1]), bvec2(false, true)))), (false ? _GLF_FUZZED(vec2(973.572, 9.3)) : max((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(9.1), _GLF_FUZZED(-281.695)), bvec2(false, false)))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(9.1), _GLF_FUZZED(-281.695)), bvec2(false, false)))), mix(vec2(((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(9.1), _GLF_FUZZED(-281.695)), bvec2(false, false)))))[0], _GLF_FUZZED(-41.55)), vec2(_GLF_FUZZED(-287.579), ((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(9.1), _GLF_FUZZED(-281.695)), bvec2(false, false)))))[1]), bvec2(false, true))))))))) - vec2(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) * 1.0)), float(_GLF_FUZZED(62.66)), bool(false))), 0.0)), (injectionSwitch) * mat2(1.0)).y, float(_GLF_IDENTITY(_GLF_IDENTITY(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_ZERO(0.0, injectionSwitch.x) + (injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y))) / 1.0), 1.0, 1.0, determinant(mat3(0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(0.0, 1.0, 1.0, 0.0), (vec4(0.0, 1.0, 1.0, 0.0)) + abs(vec4(0.0, 0.0, 0.0, 0.0))), vec4(1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, 0.0 + (1.0)), _GLF_IDENTITY(1.0, (1.0) * 1.0))))), 0.0 + (dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)))), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0))), sqrt(0.0), 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - sin(0.0)), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(707.427), (_GLF_FUZZED(707.427)) - 0.0)), float(0.0), bool(true))), _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0)), 0.0)), 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 1.0), mat3(_GLF_IDENTITY(_GLF_IDENTITY(mat3(mat3(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, injectionSwitch.y)), max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))) / 1.0), 1.0, 1.0, determinant(mat3(0.0, _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-73.92)), bool(false))), 1.0, 1.0, 0.0), vec4(1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(cos(5.7)))), 0.0, 1.0)), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(sqrt(0.0), max(_GLF_IDENTITY(sqrt(0.0), clamp(sqrt(0.0), sqrt(0.0), sqrt(0.0))), sqrt(0.0))), 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - sin(0.0)), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(707.427)), _GLF_IDENTITY(_GLF_IDENTITY(float(0.0), (false ? _GLF_FUZZED(_GLF_IDENTITY(dot(vec2(4.2, 4782.9284), vec2(76.01, -4.5)), (dot(vec2(4.2, 4782.9284), vec2(76.01, -4.5))) * 1.0)) : _GLF_IDENTITY(float(0.0), min(float(0.0), _GLF_IDENTITY(float(0.0), 1.0 * (float(0.0))))))), float(_GLF_IDENTITY(float(_GLF_IDENTITY(float(0.0), (_GLF_IDENTITY(false ? _GLF_FUZZED(dot(vec2(4.2, 4782.9284), vec2(76.01, -4.5))) : _GLF_IDENTITY(float(0.0), min(float(0.0), _GLF_IDENTITY(_GLF_IDENTITY(float(0.0), 1.0 * (float(0.0))), float(float(_GLF_IDENTITY(float(0.0), 1.0 * (float(0.0)))))))), (true ? false ? _GLF_FUZZED(dot(vec2(4.2, 4782.9284), vec2(76.01, -4.5))) : _GLF_IDENTITY(float(0.0), min(float(0.0), _GLF_IDENTITY(_GLF_IDENTITY(float(0.0), 1.0 * (float(0.0))), float(float(_GLF_IDENTITY(float(0.0), 1.0 * (float(0.0)))))))) : _GLF_FUZZED(3.4)))))), clamp(float(_GLF_IDENTITY(float(0.0), (false ? _GLF_FUZZED(dot(vec2(4.2, 4782.9284), vec2(76.01, -4.5))) : _GLF_IDENTITY(float(0.0), min(float(0.0), _GLF_IDENTITY(float(0.0), 1.0 * (float(0.0)))))))), float(_GLF_IDENTITY(float(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec4(0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), mix(float(_GLF_FUZZED(610.014)), float(float(vec4(0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)))), bool(true))))), (false ? _GLF_FUZZED(dot(vec2(4.2, 4782.9284), vec2(76.01, -4.5))) : _GLF_IDENTITY(float(0.0), min(float(0.0), _GLF_IDENTITY(float(0.0), _GLF_IDENTITY(1.0 * (float(0.0)), mix(float(_GLF_IDENTITY(1.0 * (float(0.0)), min(1.0 * (float(0.0)), 1.0 * (float(0.0))))), float(_GLF_FUZZED(1337.2906)), bool(false))))))))), float(_GLF_IDENTITY(float(0.0), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_IDENTITY(true, ! (! (true)))))), false || (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, ! (! (true))), false, _GLF_IDENTITY(true, ! (! (true)))))))) ? _GLF_FUZZED(dot(vec2(4.2, 4782.9284), vec2(76.01, -4.5))) : _GLF_IDENTITY(float(0.0), min(float(0.0), _GLF_IDENTITY(float(0.0), 1.0 * (float(0.0)))))))))))), bool(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! _GLF_IDENTITY((true), ((true)) && true))))))) && true)))))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0 * (0.0)), 0.0)), 0.0)), 0.0, 0.0, 0.0, 1.0, 1.0)), (mat3(mat3(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))) / 1.0), 1.0, 1.0, determinant(mat3(0.0, _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-73.92)), bool(_GLF_IDENTITY(false, (false) || false)))), _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0))), sqrt(0.0), 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - sin(0.0)), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(707.427)), _GLF_IDENTITY(_GLF_IDENTITY(float(0.0), (false ? _GLF_FUZZED(_GLF_IDENTITY(dot(vec2(4.2, 4782.9284), vec2(76.01, -4.5)), (dot(vec2(4.2, 4782.9284), vec2(76.01, -4.5))) * 1.0)) : _GLF_IDENTITY(float(0.0), min(float(0.0), _GLF_IDENTITY(float(0.0), 1.0 * (float(0.0))))))), float(_GLF_IDENTITY(float(_GLF_IDENTITY(float(0.0), (false ? _GLF_FUZZED(dot(vec2(4.2, 4782.9284), vec2(76.01, -4.5))) : _GLF_IDENTITY(float(0.0), min(float(0.0), _GLF_IDENTITY(float(0.0), 1.0 * (float(0.0)))))))), clamp(float(_GLF_IDENTITY(float(0.0), (false ? _GLF_FUZZED(dot(vec2(4.2, 4782.9284), vec2(76.01, -4.5))) : _GLF_IDENTITY(float(0.0), min(float(0.0), _GLF_IDENTITY(float(0.0), 1.0 * (float(0.0)))))))), float(_GLF_IDENTITY(float(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec4(0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), mix(float(_GLF_FUZZED(610.014)), float(float(vec4(0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)))), bool(true))))), (false ? _GLF_FUZZED(dot(vec2(4.2, 4782.9284), vec2(76.01, _GLF_IDENTITY(-4.5, (false ? _GLF_FUZZED(-4.7) : -4.5))))) : _GLF_IDENTITY(float(0.0), min(float(0.0), _GLF_IDENTITY(_GLF_IDENTITY(float(0.0), _GLF_IDENTITY(1.0 * (float(0.0)), mix(float(_GLF_IDENTITY(1.0 * (float(0.0)), min(1.0 * (float(0.0)), 1.0 * (float(0.0))))), float(_GLF_FUZZED(1337.2906)), bool(false)))), mix(float(_GLF_FUZZED(73.63)), float(_GLF_IDENTITY(float(0.0), _GLF_IDENTITY(1.0 * (float(0.0)), mix(float(_GLF_IDENTITY(1.0 * (float(0.0)), min(1.0 * (float(0.0)), 1.0 * (float(0.0))))), float(_GLF_FUZZED(1337.2906)), bool(false))))), bool(true)))))))), float(_GLF_IDENTITY(float(0.0), (_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), false || ((! (true)))))))) ? _GLF_FUZZED(dot(vec2(4.2, 4782.9284), vec2(76.01, _GLF_IDENTITY(-4.5, clamp(-4.5, -4.5, -4.5))))) : _GLF_IDENTITY(float(0.0), min(float(0.0), _GLF_IDENTITY(_GLF_IDENTITY(float(0.0), 1.0 * (float(0.0))), max(_GLF_IDENTITY(_GLF_IDENTITY(float(0.0), 1.0 * (float(0.0))), float(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(float(0.0), 1.0 * (float(0.0))), min(_GLF_IDENTITY(float(0.0), 1.0 * (float(0.0))), _GLF_IDENTITY(float(0.0), 1.0 * (float(0.0))))), 0.0, 0.0, length(0.0), 0.0, 0.0))), _GLF_IDENTITY(float(0.0), 1.0 * (float(0.0)))))))))))))), bool(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true))))))), (_GLF_IDENTITY((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true))))))), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true))))))), false), bvec2(bvec3(bvec2((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true))))))), false), false)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true)))))), _GLF_IDENTITY(0.0, _GLF_IDENTITY(1.0 * (0.0), clamp(1.0 * (0.0), 1.0 * (0.0), _GLF_IDENTITY(1.0 * (0.0), clamp(1.0 * (0.0), _GLF_IDENTITY(1.0 * (0.0), float(mat2x3(1.0 * (0.0), 0.0, 0.0, 0.0, 1.0, 0.0))), 1.0 * (0.0)))))), 0.0)), 0.0)), 0.0, 0.0, 0.0, 1.0, 1.0))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)), (mat3(mat3(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), 1.0 * ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, sqrt(1.0), cos(0.0), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), float(mat4(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0)))), 0.0, 1.0, 0.0, sqrt(0.0), 0.0))), injectionSwitch.y))))))) / 1.0), 1.0, 1.0, determinant(mat3(0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-73.92)), bool(false))), 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(fract(0.7)) : 1.0, clamp(false ? _GLF_FUZZED(fract(0.7)) : 1.0, _GLF_IDENTITY(false ? _GLF_FUZZED(fract(0.7)) : 1.0, (false ? _GLF_FUZZED(-2567.6050) : false ? _GLF_FUZZED(fract(0.7)) : 1.0)), false ? _GLF_FUZZED(fract(0.7)) : 1.0)))), 0.0), (_GLF_IDENTITY(vec4(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-73.92)), bool(false))), 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(fract(0.7)) : 1.0, clamp(false ? _GLF_FUZZED(fract(0.7)) : 1.0, _GLF_IDENTITY(false ? _GLF_FUZZED(fract(0.7)) : 1.0, (false ? _GLF_FUZZED(-2567.6050) : false ? _GLF_FUZZED(fract(0.7)) : 1.0)), false ? _GLF_FUZZED(fract(0.7)) : 1.0)))), 0.0), max(vec4(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-73.92)), bool(false))), 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(fract(0.7)) : 1.0, clamp(false ? _GLF_FUZZED(fract(0.7)) : 1.0, _GLF_IDENTITY(false ? _GLF_FUZZED(fract(0.7)) : 1.0, (false ? _GLF_FUZZED(-2567.6050) : false ? _GLF_FUZZED(fract(0.7)) : 1.0)), false ? _GLF_FUZZED(fract(0.7)) : 1.0)))), 0.0), vec4(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-73.92)), bool(false))), 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(fract(0.7)) : 1.0, clamp(false ? _GLF_FUZZED(fract(0.7)) : 1.0, _GLF_IDENTITY(false ? _GLF_FUZZED(fract(0.7)) : 1.0, (false ? _GLF_FUZZED(-2567.6050) : false ? _GLF_FUZZED(fract(0.7)) : 1.0)), false ? _GLF_FUZZED(fract(0.7)) : 1.0)))), 0.0)))) / vec4(1.0, 1.0, 1.0, 1.0)), vec4(1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 1.0)), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0))), sqrt(0.0), 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - _GLF_IDENTITY(sin(0.0), abs(0.0) + (sin(0.0)))), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(707.427)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(float(0.0), clamp(_GLF_IDENTITY(float(0.0), clamp(float(0.0), float(0.0), float(0.0))), _GLF_IDENTITY(float(0.0), (false ? _GLF_FUZZED(sinh(0.3)) : float(0.0))), float(0.0))), 1.0 * _GLF_IDENTITY((float(0.0)), ((float(0.0))) - sin(0.0))), (false ? _GLF_FUZZED(dot(vec2(4.2, 4782.9284), vec2(76.01, _GLF_IDENTITY(-4.5, (-4.5) - 0.0)))) : _GLF_IDENTITY(float(0.0), min(float(0.0), _GLF_IDENTITY(_GLF_IDENTITY(float(0.0), max(float(0.0), _GLF_IDENTITY(float(0.0), min(float(0.0), float(0.0))))), _GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, max(1.0, 1.0)))) * (float(0.0))))))), bool(_GLF_IDENTITY(true, false || (true))))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0 * (0.0)), 0.0)), 0.0)), 0.0, 0.0, 0.0, 1.0, 1.0))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))), transpose(transpose(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0)).y, (_GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-6305.9151)))) / 1.0), 1.0, 1.0, determinant(mat3(0.0, _GLF_IDENTITY(dot(vec4(0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))), 1.0)), (_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))), 1.0))) - 0.0), 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, float(vec2(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x3(1.0, 0.0, 1.0, 0.0, 1.0, log(1.0)), transpose(transpose(mat2x3(1.0, 0.0, 1.0, 0.0, 1.0, log(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))))))), 0.0))))))), mix(float(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, float(vec2(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x3(1.0, 0.0, 1.0, 0.0, 1.0, log(1.0)), transpose(transpose(mat2x3(1.0, 0.0, 1.0, 0.0, 1.0, log(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))))))), 0.0)))))))), float(_GLF_FUZZED(-7.0)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), sqrt(0.0), _GLF_IDENTITY(1.0, float(float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), float(mat3x4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 1.0, 0.0, 0.0, cos(0.0), abs(1.0), exp(0.0), 0.0, 0.0, 0.0, 0.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(vec4(54.15, _GLF_IDENTITY(0.2, clamp(0.2, 0.2, 0.2)), _GLF_IDENTITY(-9.4, _GLF_IDENTITY(_GLF_IDENTITY(clamp(-9.4, -9.4, _GLF_IDENTITY(-9.4, max(_GLF_IDENTITY(-9.4, clamp(-9.4, -9.4, -9.4)), -9.4))), float(_GLF_IDENTITY(_GLF_IDENTITY(mat3(clamp(-9.4, -9.4, _GLF_IDENTITY(-9.4, max(_GLF_IDENTITY(-9.4, clamp(-9.4, -9.4, -9.4)), -9.4))), tan(0.0), sqrt(0.0), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0), (mat3(clamp(-9.4, -9.4, _GLF_IDENTITY(-9.4, max(_GLF_IDENTITY(-9.4, clamp(-9.4, -9.4, -9.4)), -9.4))), tan(0.0), sqrt(0.0), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)), mat3(mat3x4(mat3(clamp(-9.4, -9.4, _GLF_IDENTITY(-9.4, max(_GLF_IDENTITY(-9.4, clamp(-9.4, -9.4, -9.4)), -9.4))), tan(0.0), sqrt(0.0), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)))))), clamp(clamp(-9.4, -9.4, _GLF_IDENTITY(-9.4, max(_GLF_IDENTITY(-9.4, clamp(-9.4, _GLF_IDENTITY(-9.4, clamp(_GLF_IDENTITY(-9.4, _GLF_IDENTITY(float(float(-9.4)), max(float(float(-9.4)), float(float(-9.4))))), _GLF_IDENTITY(-9.4, clamp(-9.4, -9.4, -9.4)), -9.4)), -9.4)), -9.4))), clamp(-9.4, -9.4, _GLF_IDENTITY(-9.4, max(_GLF_IDENTITY(-9.4, clamp(-9.4, -9.4, -9.4)), -9.4))), _GLF_IDENTITY(clamp(-9.4, -9.4, _GLF_IDENTITY(-9.4, max(_GLF_IDENTITY(-9.4, clamp(-9.4, -9.4, -9.4)), -9.4))), (false ? _GLF_FUZZED(195.358) : clamp(-9.4, -9.4, _GLF_IDENTITY(-9.4, max(_GLF_IDENTITY(_GLF_IDENTITY(-9.4, clamp(-9.4, -9.4, -9.4)), clamp(_GLF_IDENTITY(-9.4, clamp(-9.4, -9.4, -9.4)), _GLF_IDENTITY(-9.4, clamp(-9.4, -9.4, -9.4)), _GLF_IDENTITY(-9.4, clamp(-9.4, -9.4, -9.4)))), -9.4)))))))), 8.0).y)), bool(false))), max(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), true))) ? _GLF_FUZZED(-5.3) : 0.0, clamp(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), true))) ? _GLF_FUZZED(-5.3) : 0.0, _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), true))), ! (! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), true)))))) ? _GLF_FUZZED(-5.3) : 0.0, _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), true))) ? _GLF_FUZZED(_GLF_IDENTITY(-5.3, (-5.3) / 1.0)) : 0.0, clamp(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bvec3((! (false)), false, false))))))), true))) ? _GLF_FUZZED(-5.3) : 0.0, _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), true))) ? _GLF_FUZZED(-5.3) : 0.0, _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), true))) ? _GLF_FUZZED(-5.3) : 0.0)))), 0.0 + (false ? _GLF_FUZZED(-5.3) : 0.0)))), 1.0, 1.0))))))))))
  {
   do
    {
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ((false)) || false), true && (! _GLF_IDENTITY((false), ((false)) || false)))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
        }
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         barrier();
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) | (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uvec4(workgroup_base, 1u, 1u, 1u)), (_GLF_IDENTITY(uint(uvec4(workgroup_base, 1u, 1u, 1u)), uint(_GLF_IDENTITY(uvec2(uint(uvec4(workgroup_base, 1u, 1u, 1u)), 1u), (uvec2(uint(uvec4(workgroup_base, 1u, 1u, 1u)), 1u)) | uvec2(0u, 0u))))) | (uint(uvec4(workgroup_base, 1u, 1u, 1u))))) + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size)))), clamp(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)) + subgroup_id * subgroup_size), _GLF_IDENTITY(((_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)) + subgroup_id * subgroup_size)) ^ 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(((_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)) + subgroup_id * subgroup_size)) ^ 0u, 1u * (((_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)) + subgroup_id * subgroup_size)) ^ 0u))))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) | (workgroup_base), (_GLF_IDENTITY(true, false || (true)) ? (workgroup_base) | _GLF_IDENTITY((workgroup_base), (_GLF_IDENTITY((workgroup_base), 0u + (_GLF_IDENTITY((workgroup_base), ~ (~ ((workgroup_base))))))) / 1u) : _GLF_FUZZED((workgroup_size * subgroup_local_id))))), workgroup_base)), workgroup_base)) + subgroup_id * subgroup_size)), clamp(~ ((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)) + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)) + subgroup_id * subgroup_size) | (_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)) + subgroup_id * subgroup_size)))), ~ ((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), ~ (~ (_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))))) + subgroup_id * subgroup_size)), ~ ((_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)) + subgroup_id * subgroup_size)))))) >> 0u), workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size)) + _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), 0u | (((subgroup_local_id + 1) % subgroup_size))), max(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(subgroup_local_id + 1, 1u)))) % subgroup_size), 0u | (((subgroup_local_id + 1) % subgroup_size))), _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (117507u & 0u) + (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), max(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size))))), 0u | (((subgroup_local_id + 1) % subgroup_size)))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), true && ((false)))))))
  {
   for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(2), int(2))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     return;
    }
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), 1 * (int(7)))), (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), 1 * (int(_GLF_IDENTITY(7, (_GLF_IDENTITY(7, (7) + 0)) * 1))))), (0 >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), 1 * (int(7))))) | 0)) | 0)) | _GLF_IDENTITY((_GLF_IDENTITY(0, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(0, int(int(0))))), (_GLF_IDENTITY((~ (_GLF_IDENTITY(0, int(_GLF_IDENTITY(int(0), (int(0)) >> 0))))), ((~ _GLF_IDENTITY((_GLF_IDENTITY(0, int(int(0)))), (_GLF_IDENTITY((_GLF_IDENTITY(0, int(int(0)))), ((_GLF_IDENTITY(0, int(int(0))))) * 1)) | 0))) | ((~ _GLF_IDENTITY((_GLF_IDENTITY(0, int(_GLF_IDENTITY(int(0), int(_GLF_ZERO(0.0, injectionSwitch.x)) | (int(0)))))), ((_GLF_IDENTITY(0, int(_GLF_IDENTITY(int(0), int(_GLF_ZERO(0.0, injectionSwitch.x)) | (int(0))))))) << 0))))) * ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)))))), (_GLF_IDENTITY((_GLF_IDENTITY(0, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(0, _GLF_IDENTITY(int(int(0)), (int(int(0))) | (int(int(0))))))), (_GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_IDENTITY(0, int(int(0)))), (_GLF_IDENTITY((_GLF_IDENTITY(0, int(int(0)))), (true ? (_GLF_IDENTITY(0, int(int(0)))) : _GLF_FUZZED(_injected_loop_counter)))) | ((_GLF_IDENTITY(0, int(int(0))))))), ((~ (_GLF_IDENTITY(0, int(int(0)))))) | ((~ (_GLF_IDENTITY(0, int(int(0)))))))) * _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, (_GLF_IDENTITY(_GLF_IDENTITY(2, (2) + 0), (_GLF_IDENTITY(_GLF_IDENTITY(2, (2) + 0), clamp(_GLF_IDENTITY(2, (2) + 0), _GLF_IDENTITY(_GLF_IDENTITY(2, (2) + 0), max(_GLF_IDENTITY(2, (2) + 0), _GLF_IDENTITY(2, (2) + 0))), _GLF_IDENTITY(2, (2) + 0)))) / ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), 0 | (int(2))))))) | (2))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), ~ (_GLF_IDENTITY(~ (int(2)), (~ (int(2))) / 1))), int(2))), int(_GLF_IDENTITY(ivec3(((1 << _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, (_GLF_IDENTITY(_GLF_IDENTITY(2, (2) + 0), (_GLF_IDENTITY(_GLF_IDENTITY(2, (2) + 0), clamp(_GLF_IDENTITY(2, (2) + 0), _GLF_IDENTITY(_GLF_IDENTITY(2, (2) + 0), max(_GLF_IDENTITY(2, (2) + 0), _GLF_IDENTITY(2, (2) + 0))), _GLF_IDENTITY(2, (2) + 0)))) / ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), 0 | (int(2))))))) | (2))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), ~ (_GLF_IDENTITY(~ (int(2)), (~ (int(2))) / 1))), int(2))), 0, 1), ~ (~ (ivec3(((1 << _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, (_GLF_IDENTITY(_GLF_IDENTITY(2, (2) + 0), (_GLF_IDENTITY(_GLF_IDENTITY(2, (2) + 0), clamp(_GLF_IDENTITY(2, (2) + 0), _GLF_IDENTITY(_GLF_IDENTITY(2, (2) + 0), max(_GLF_IDENTITY(2, (2) + 0), _GLF_IDENTITY(2, (2) + 0))), _GLF_IDENTITY(2, (2) + 0)))) / ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), 0 | (int(2))))))) | (2))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), ~ (_GLF_IDENTITY(~ (int(2)), (~ (int(2))) / 1))), int(2))), 0, 1))))))))), max((_GLF_IDENTITY(0, ~ _GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(0, int(int(0))))), clamp((~ (_GLF_IDENTITY(0, int(int(0))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, int(int(0)))), int(ivec3(_GLF_IDENTITY(~ (_GLF_IDENTITY(0, int(int(0)))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, int(int(0)))), 0 + (~ (_GLF_IDENTITY(0, int(int(0))))))) << 0), 1, 0)))), (~ (_GLF_IDENTITY(0, int(int(0))))))), (_GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_IDENTITY(0, int(int(0)))), ((_GLF_IDENTITY(0, int(int(0))))) | 0)), ((~ (_GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY(max(0, 0), (max(0, 0)) ^ 0)), int(int(0)))))) | ((~ (_GLF_IDENTITY(0, int(int(_GLF_IDENTITY(0, 0 | (0)))))))))) * ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, (2) | (2)), 2, 2)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), (~ (0)) * 1))))), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(0, int(int(0))))), (_GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(0, int(int(0)))), (~ (_GLF_IDENTITY(0, int(int(0))))) - ((0 | 0) & -50808))), _GLF_IDENTITY(((~ (_GLF_IDENTITY(0, int(int(0)))))), _GLF_IDENTITY(int(ivec3(((~ (_GLF_IDENTITY(0, int(int(0)))))), 1, 1)), (int(ivec3(((~ (_GLF_IDENTITY(0, int(int(0)))))), 1, 1))) / 1)) | ((~ (_GLF_IDENTITY(0, int(_GLF_IDENTITY(int(0), (int(0)) >> int(_GLF_ZERO(0.0, injectionSwitch.x)))))))))) * (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)), ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))) / 1)))), max(_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, 0)), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(0, int(int(0))))), (_GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(0, int(int(0))))), (_GLF_IDENTITY((~ (_GLF_IDENTITY(0, int(int(0))))), ((~ (_GLF_IDENTITY(0, int(int(0)))))) | 0)) / 1), ((~ (_GLF_IDENTITY(0, int(int(0)))))) | ((~ (_GLF_IDENTITY(0, int(_GLF_IDENTITY(int(0), (int(0)) >> int(_GLF_ZERO(0.0, injectionSwitch.x)))))))))) * ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))))), _GLF_IDENTITY(_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, int(ivec2(0, 0))), 0, 0)), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(0, int(int(0))))), (_GLF_IDENTITY((~ (_GLF_IDENTITY(0, int(int(0))))), ((~ (_GLF_IDENTITY(0, int(int(0)))))) | ((~ (_GLF_IDENTITY(0, int(_GLF_IDENTITY(int(0), (int(0)) >> int(_GLF_ZERO(0.0, injectionSwitch.x)))))))))) * ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), int(_GLF_ZERO(0.0, injectionSwitch.x)) | (int(2))))))))))))) | (_GLF_IDENTITY((_GLF_IDENTITY(0, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(0, int(int(0))))), (_GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(0, int(int(0))))), clamp((~ (_GLF_IDENTITY(0, int(int(0))))), _GLF_IDENTITY((~ (_GLF_IDENTITY(0, int(int(0))))), 0 ^ (_GLF_IDENTITY((~ (_GLF_IDENTITY(0, int(int(0))))), (true ? (~ (_GLF_IDENTITY(0, int(int(0))))) : _GLF_FUZZED(-65069))))), (~ (_GLF_IDENTITY(0, int(int(0))))))), (_GLF_IDENTITY((~ (_GLF_IDENTITY(0, int(int(0))))), clamp(_GLF_IDENTITY((~ (_GLF_IDENTITY(0, int(int(0))))), clamp((~ (_GLF_IDENTITY(0, int(int(0))))), _GLF_IDENTITY((~ (_GLF_IDENTITY(0, int(int(0))))), (false ? _GLF_FUZZED(12461) : (~ (_GLF_IDENTITY(0, int(int(0))))))), (~ (_GLF_IDENTITY(0, int(int(0))))))), _GLF_IDENTITY((~ (_GLF_IDENTITY(0, int(int(0))))), 1 * ((~ (_GLF_IDENTITY(0, int(int(0))))))), _GLF_IDENTITY((~ (_GLF_IDENTITY(0, int(int(0))))), clamp(_GLF_IDENTITY((~ (_GLF_IDENTITY(0, int(int(0))))), max((~ (_GLF_IDENTITY(0, int(int(0))))), (~ (_GLF_IDENTITY(0, int(int(0))))))), (~ (_GLF_IDENTITY(0, int(int(0))))), (~ (_GLF_IDENTITY(0, int(int(0)))))))))) | ((~ (_GLF_IDENTITY(0, int(int(0)))))))) * ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(2, max(2, 2))), int(2)))))), min((_GLF_IDENTITY(_GLF_IDENTITY(0, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(0, int(int(0))))), (_GLF_IDENTITY((~ (_GLF_IDENTITY(0, int(int(0))))), (_GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(0, int(int(0)))), (~ (_GLF_IDENTITY(0, int(int(0))))) ^ 0)), (_GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(0, int(int(0)))), (~ (_GLF_IDENTITY(0, int(int(0))))) ^ 0)), int(int((_GLF_IDENTITY(~ (_GLF_IDENTITY(0, int(int(0)))), (~ (_GLF_IDENTITY(0, int(int(0))))) ^ 0)))))) / 1)) | ((~ (_GLF_IDENTITY(0, int(int(0)))))))) * ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(0, int(int(0))))), (_GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(0, 0 | (0)), int(int(0))))), ((~ (_GLF_IDENTITY(0, int(int(0)))))) | (_GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(0, int(int(0))), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(0, int(int(0))))))), (_GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(0, int(int(0))), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(0, int(int(0))))))), min(_GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(0, int(int(0))), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(0, int(int(0))))))), ((~ (_GLF_IDENTITY(_GLF_IDENTITY(0, int(int(0))), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(0, int(int(0)))))))) / 1), _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(0, int(int(0))), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(0, int(int(0))))))), ((~ (_GLF_IDENTITY(_GLF_IDENTITY(0, int(int(0))), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(0, int(int(0)))))))) + 0)))) | 0)))) * ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))))), (true ? _GLF_IDENTITY(0, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(0, int(int(0))))), (_GLF_IDENTITY((~ (_GLF_IDENTITY(0, int(int(_GLF_IDENTITY(0, (0) << 0)))))), ((~ (_GLF_IDENTITY(0, int(int(0)))))) | ((~ (_GLF_IDENTITY(0, int(int(0)))))))) * ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))))) : _GLF_FUZZED(_injected_loop_counter))), _GLF_IDENTITY(0, ~ _GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(0, int(int(0))))), (_GLF_IDENTITY((~ (_GLF_IDENTITY(0, int(int(0))))), ((~ (_GLF_IDENTITY(0, int(int(0)))))) | ((~ (_GLF_IDENTITY(0, int(int(0)))))))) * ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)))), (_GLF_IDENTITY((~ (_GLF_IDENTITY(0, int(int(0))))), (_GLF_IDENTITY((~ (_GLF_IDENTITY(0, int(int(0))))), ((~ (_GLF_IDENTITY(0, int(int(0)))))) | ((~ (_GLF_IDENTITY(0, int(int(0)))))))) * ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))))) ^ 0)), _GLF_IDENTITY(_GLF_IDENTITY(0, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(0, int(int(0))))), (_GLF_IDENTITY((~ (_GLF_IDENTITY(0, int(int(0))))), ((_GLF_IDENTITY(~ (_GLF_IDENTITY(0, int(int(0)))), (~ (_GLF_IDENTITY(0, int(int(0))))) + 0))) | ((~ (_GLF_IDENTITY(0, int(int(0)))))))) * ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))))), (true ? _GLF_IDENTITY(0, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(0, int(int(0))))), (_GLF_IDENTITY((~ (_GLF_IDENTITY(0, int(int(0))))), ((~ (_GLF_IDENTITY(0, _GLF_IDENTITY(int(int(0)), clamp(_GLF_IDENTITY(int(int(0)), clamp(int(int(0)), _GLF_IDENTITY(int(int(0)), (int(int(0))) | 0), int(int(0)))), int(int(0)), int(int(0)))))))) | ((~ (_GLF_IDENTITY(0, int(int(0)))))))) * ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))))) : _GLF_FUZZED(_injected_loop_counter)))))), _GLF_IDENTITY((_GLF_IDENTITY(0, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(0, int(int(0))))), (_GLF_IDENTITY((~ (_GLF_IDENTITY(0, int(int(0))))), ((~ (_GLF_IDENTITY(0, int(int(0)))))) | ((~ (_GLF_IDENTITY(_GLF_IDENTITY(0, int(int(0))), (_GLF_IDENTITY(0, int(int(0)))) ^ 0)))))) * ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), ~ (~ (int(2)))), int(2))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) / 1)))))), ((_GLF_IDENTITY(0, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(0, int(int(0)))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(0, int(int(0)))), (~ (_GLF_IDENTITY(0, int(int(0))))) - 0), ~ (_GLF_IDENTITY(0, int(int(0)))), ~ (_GLF_IDENTITY(0, int(int(0))))))), (_GLF_IDENTITY((~ (_GLF_IDENTITY(0, int(int(0))))), ((~ (_GLF_IDENTITY(0, int(int(0)))))) | ((~ (_GLF_IDENTITY(0, int(int(0)))))))) * ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(2, max(2, 2))), _GLF_IDENTITY(_GLF_IDENTITY(int(2), ~ (_GLF_IDENTITY(~ (int(2)), max(~ (int(2)), ~ (int(2)))))), min(_GLF_IDENTITY(int(2), ~ (_GLF_IDENTITY(~ (int(2)), max(~ (int(2)), ~ (int(2)))))), _GLF_IDENTITY(int(2), ~ (_GLF_IDENTITY(~ (int(2)), max(~ (int(2)), ~ (int(2)))))))))) >> _GLF_IDENTITY(int(2), int(2))))))) | (_GLF_IDENTITY((_GLF_IDENTITY(0, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(0, int(int(0))))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(0, int(int(0)))), ~ (~ (~ (_GLF_IDENTITY(0, int(int(0)))))))), (_GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) << 0), int(int(0))))), clamp((~ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) << 0), int(int(0))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) << 0), int(int(0))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) << 0), int(int(0)))))))) | ((_GLF_IDENTITY(~ (_GLF_IDENTITY(0, int(int(0)))), (~ (_GLF_IDENTITY(0, int(int(0))))) + 0))))) * ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))) ? _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_IDENTITY(0, int(int(0)))), ~ (~ ((_GLF_IDENTITY(0, int(int(0)))))))), (true ? (~ (_GLF_IDENTITY(0, int(int(0))))) : _GLF_FUZZED(6543))), ((~ (_GLF_IDENTITY(0, int(int(0)))))) | ((~ (_GLF_IDENTITY(0, int(int(_GLF_IDENTITY(0, 0 ^ (0)))))))))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(0, int(int(0))))), (true ? (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, int(int(0)))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, int(int(0)))), min(~ (_GLF_IDENTITY(0, int(int(0)))), ~ (_GLF_IDENTITY(0, int(_GLF_IDENTITY(int(0), (int(0)) >> 0))))))) + (0 | 0))) : _GLF_FUZZED(6543))), ((~ (_GLF_IDENTITY(0, int(int(0)))))) | ((~ (_GLF_IDENTITY(0, _GLF_IDENTITY(int(int(0)), ~ (~ (_GLF_IDENTITY(int(int(0)), (int(int(0))) >> 0)))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(0, int(int(0))))), (_GLF_IDENTITY(true, ! (! (true))) ? (~ (_GLF_IDENTITY(0, int(int(0))))) : _GLF_FUZZED(6543))), ((~ (_GLF_IDENTITY(0, int(int(0)))))) | ((~ (_GLF_IDENTITY(0, int(int(0))))))))) << 0), (_GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(0, int(int(0))))), (true ? (~ (_GLF_IDENTITY(0, int(int(0))))) : _GLF_FUZZED(6543))), ((~ (_GLF_IDENTITY(0, int(int(0)))))) | (_GLF_IDENTITY((~ (_GLF_IDENTITY(0, int(int(0))))), ((~ (_GLF_IDENTITY(0, int(int(0)))))) | 0)))), (_GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(0, int(int(0))))), (true ? (~ (_GLF_IDENTITY(0, int(int(0))))) : _GLF_FUZZED(6543))), ((~ (_GLF_IDENTITY(0, int(int(0)))))) | ((~ (_GLF_IDENTITY(0, int(int(0)))))))))) * ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(2, 0 + (2))), int(2))) : _GLF_FUZZED(26879)))))), ((_GLF_IDENTITY(0, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(0, int(int(0))))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(0, int(int(0)))), ~ (~ (~ (_GLF_IDENTITY(0, int(int(0)))))))), (_GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) << 0), int(int(0))))), clamp((~ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) << 0), int(int(0))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) << 0), int(int(0))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) << 0), int(int(0)))))))) | ((_GLF_IDENTITY(~ (_GLF_IDENTITY(0, int(int(0)))), (~ (_GLF_IDENTITY(0, int(int(0))))) + 0))))) * ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))) ? _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_IDENTITY(0, int(int(0)))), ~ (~ ((_GLF_IDENTITY(0, int(int(0)))))))), (true ? (~ (_GLF_IDENTITY(0, int(int(0))))) : _GLF_FUZZED(6543))), ((~ (_GLF_IDENTITY(0, int(int(0)))))) | ((~ (_GLF_IDENTITY(0, int(int(_GLF_IDENTITY(0, 0 ^ (0)))))))))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(0, int(int(0))))), (true ? (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, int(int(0)))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, int(int(0)))), min(~ (_GLF_IDENTITY(0, int(int(0)))), ~ (_GLF_IDENTITY(0, int(_GLF_IDENTITY(int(0), (int(0)) >> 0))))))) + (0 | 0))) : _GLF_FUZZED(6543))), ((~ (_GLF_IDENTITY(0, int(int(0)))))) | ((~ (_GLF_IDENTITY(0, _GLF_IDENTITY(int(int(0)), ~ (~ (_GLF_IDENTITY(int(int(0)), (int(int(0))) >> 0)))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(0, int(int(0))))), (_GLF_IDENTITY(true, ! (! (true))) ? (~ (_GLF_IDENTITY(0, int(int(0))))) : _GLF_FUZZED(6543))), ((~ (_GLF_IDENTITY(0, int(int(0)))))) | ((~ (_GLF_IDENTITY(0, int(int(0))))))))) << 0), (_GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(0, int(int(0))))), (true ? (~ (_GLF_IDENTITY(0, int(int(0))))) : _GLF_FUZZED(6543))), ((~ (_GLF_IDENTITY(0, int(int(0)))))) | (_GLF_IDENTITY((~ (_GLF_IDENTITY(0, int(int(0))))), ((~ (_GLF_IDENTITY(0, int(int(0)))))) | 0)))), (_GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(0, int(int(0))))), (true ? (~ (_GLF_IDENTITY(0, int(int(0))))) : _GLF_FUZZED(6543))), ((~ (_GLF_IDENTITY(0, int(int(0)))))) | ((~ (_GLF_IDENTITY(0, int(int(0)))))))))) * ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(2, 0 + (2))), int(2))) : _GLF_FUZZED(26879))))))) | (0 << _GLF_IDENTITY(int(2), int(2)))))))))))); _injected_loop_counter --)
  {
   _GLF_IDENTITY(buf[virtual_gid] = 1, (buf[virtual_gid] = 1) - 0u);
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-24.25)), _GLF_IDENTITY(float(1.0), max(float(1.0), _GLF_IDENTITY(float(1.0), max(_GLF_IDENTITY(float(1.0), max(float(1.0), float(1.0))), _GLF_IDENTITY(float(1.0), max(float(1.0), float(1.0))))))), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y))))), 1.0), clamp(vec2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-24.25)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 1.0), vec2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))), 1.0, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))), mix(float(_GLF_FUZZED(-24.25)), float(1.0), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec2(injectionSwitch.x < injectionSwitch.y, true)))))))), 1.0), _GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-24.25)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 1.0), _GLF_IDENTITY(mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, 1.0, 1.0))))) * (vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) + 0.0), mix(float(_GLF_FUZZED(-24.25)), float(1.0), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4.2), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(5.5)), bvec2(true, false))).x < injectionSwitch.y))))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) + 0.0), mix(_GLF_IDENTITY(float(_GLF_FUZZED(-24.25)), mix(float(_GLF_FUZZED(5.4)), float(float(_GLF_FUZZED(-24.25))), bool(true))), float(1.0), bool(_GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4.2), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(5.5), clamp(_GLF_FUZZED(5.5), _GLF_FUZZED(5.5), _GLF_FUZZED(5.5)))), bvec2(true, false))).x < injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) + 0.0), mix(float(_GLF_FUZZED(-24.25)), float(1.0), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4.2), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(5.5)), bvec2(true, false))).x < injectionSwitch.y))))), (false ? _GLF_FUZZED(distance(vec4(-0.5, 9942.3106, -2.5, -7.3), uintBitsToFloat(uvec4(71820u, 32466u, 64360u, 107052u)))) : _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) + 0.0), mix(float(_GLF_FUZZED(-24.25)), float(1.0), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4.2), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(5.5)), bvec2(true, false))).x < injectionSwitch.y)))))))) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) + 0.0), mix(float(_GLF_FUZZED(-24.25)), float(1.0), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4.2), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(5.5)), bvec2(true, false))).x < injectionSwitch.y))))))), 1.0)), _GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), _GLF_IDENTITY(vec2(0.0, 0.0), mat2(1.0) * (vec2(0.0, 0.0))))) + (mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (vec2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-24.25)), float(1.0), bool(_GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) < injectionSwitch.y))))), 1.0))))))) * _GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0))).y)), false || (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0))).y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0))).y)), false, true, true))))) ? (injectionSwitch) : _GLF_FUZZED(injectionSwitch)))).x > injectionSwitch.y))))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), true))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  barrier();
 for(int _injected_loop_counter = ((0 ^ (0 << _GLF_IDENTITY(int(7), int(7)))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 | (int(3))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < (0 ^ (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)), ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))) * (1 ^ 0))))); _GLF_IDENTITY(_injected_loop_counter ++, (_GLF_IDENTITY(_injected_loop_counter ++, 0 ^ (_GLF_IDENTITY(_injected_loop_counter ++, (false ? _GLF_FUZZED(32405) : _injected_loop_counter ++))))) | 0))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
      {
      }
     else
      {
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec2(bool(bvec2(false, false)), false)))), false)), bool(bool(bool(bvec3(_GLF_WRAPPED_IF_FALSE(false), false, false)))))))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > 0, _GLF_IDENTITY(true, bool(bvec2(true, true))) && (_injected_loop_counter > 0))); _GLF_IDENTITY(_injected_loop_counter --, (1 & 1) * (_injected_loop_counter --)))
  {
   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(97.82)), float(injectionSwitch.x), bool(true))))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < (1 & 1), ! (_GLF_IDENTITY(! (_injected_loop_counter < (1 & 1)), false || (! (_injected_loop_counter < (1 & 1))))))), true && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < (1 & 1), ! (_GLF_IDENTITY(! (_injected_loop_counter < (1 & 1)), false || (! (_injected_loop_counter < (1 & 1))))))), false || (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < (1 & 1), ! (_GLF_IDENTITY(! (_injected_loop_counter < (1 & 1)), false || (! (_injected_loop_counter < (1 & 1))))))), false || (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < (1 & 1), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_injected_loop_counter < (1 & 1)), false || (! (_injected_loop_counter < (1 & 1)))), ! (! (_GLF_IDENTITY(! (_injected_loop_counter < (1 & 1)), false || (! (_injected_loop_counter < (1 & 1)))))))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))) && (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < (1 & 1), ! (_GLF_IDENTITY(! (_injected_loop_counter < (1 & 1)), false || (! (_injected_loop_counter < _GLF_IDENTITY((1 & 1), ~ (~ (_GLF_IDENTITY((1 & 1), (_GLF_IDENTITY((1 & 1), ((1 & 1)) ^ 0)) | 0)))))))))))))))))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-142.716)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))) - vec2(0.0, 0.0)).y), bool(true))), ! (! (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-142.716)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))) - vec2(0.0, 0.0)).y), bool(true))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (! ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || false))))))
          barrier();
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), (injectionSwitch.x > injectionSwitch.y) || false)))))
            continue;
           barrier();
           if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false)))) && true))
            break;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
              return;
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                break;
               barrier();
              }
             else
              {
              }
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        continue;
       barrier();
      }
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))
    return;
  }
 do
  {
   do
    {
     buf[next_virtual_gid] = 2;
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (false))));
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         return;
        }
       else
        {
        }
      }
     return;
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         return;
        }
      }
    }
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + determinant(mat4(0.0, 0.0, 0.0, log(1.0), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, sin(0.0), 1.0, abs(1.0), 1.0, 0.0)))) && true)))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), bool(bvec3((! (_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))), (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, true))))))) && true)), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(bool(bvec3(false, false, true)), (bool(bvec3(false, false, true))) || false))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(bool(bvec3(false, false, true)), (bool(bvec3(false, false, true))) || false))), false || (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(bool(bvec3(false, false, true)), (bool(bvec3(false, false, true))) || false))))), true)), false || (bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(bool(bvec3(false, false, true)), (bool(bvec3(false, false, true))) || false))), false || (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(bool(bvec3(false, false, true)), (bool(bvec3(false, false, true))) || false))))), true))))))), _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, true))))))) && true, false || (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true)))))))))) && true, ! (! ((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, true))))))) && true)))))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(mod(-9.3, 8168.2678)))))) > injectionSwitch.y))))))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     return;
    }
  }
 do
  {
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           barrier();
          }
        }
       do
        {
         for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           do
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                  return;
                }
               else
                {
                }
               return;
              }
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, determinant(mat3(1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), determinant(mat4(0.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, float(mat3x2(0.0, 1.0, 1.0, 1.0, 0.0, 0.0))))), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4x3(0.0, 1.0, 1.0, 1.0, 0.0, 1.0, length(0.0), 0.0, 1.0, 1.0, 1.0, 1.0), mat3(1.0) * (mat4x3(0.0, 1.0, 1.0, 1.0, 0.0, 1.0, length(0.0), 0.0, 1.0, 1.0, 1.0, 1.0))))), float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4x3(0.0, 1.0, 1.0, 1.0, 0.0, 1.0, length(0.0), 0.0, 1.0, 1.0, 1.0, 1.0), mat3(1.0) * (mat4x3(0.0, 1.0, 1.0, 1.0, 0.0, 1.0, length(0.0), 0.0, 1.0, 1.0, 1.0, 1.0))))), 0.0, _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, tan(0.0), 0.0), transpose(transpose(mat4x3(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4x3(0.0, 1.0, 1.0, 1.0, 0.0, 1.0, length(0.0), 0.0, 1.0, 1.0, 1.0, 1.0), mat3(1.0) * (mat4x3(0.0, 1.0, 1.0, 1.0, 0.0, 1.0, length(0.0), 0.0, 1.0, 1.0, 1.0, 1.0))))), 0.0, _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, tan(0.0), 0.0)))))), 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0)), 0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 0.0, 0.0))).y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), vec2(1.0, 1.0) * _GLF_IDENTITY((clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - log(vec2(1.0, 1.0))), injectionSwitch)), (false ? _GLF_FUZZED(vec2(-4.9, -9870.0556)) : (clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - log(vec2(1.0, 1.0))), injectionSwitch)))))), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, determinant(mat3(1.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 0.0, 0.0)), (vec2(mat4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), vec2(1.0, 1.0) * (clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - log(vec2(1.0, 1.0))), injectionSwitch)))), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, determinant(mat3(1.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 0.0, 0.0))) / vec2(1.0, 1.0))).y), ! (! (bool(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(mat4x3(0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 1.0))), 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0))), determinant(mat3(1.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-4.1) : _GLF_IDENTITY(0.0, float(vec2(0.0, 1.0))))), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) - 0.0), 1.0, 0.0, 0.0))).y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), vec2(mat4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, determinant(mat3(1.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-761.546)), float(0.0), bool(_GLF_IDENTITY(true, ! (! (true)))))), _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0, 0.0)), 0.0, 0.0)), (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) - 0.0), 1.0, 0.0, 0.0))).y, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, determinant(mat3(1.0, 0.0, determinant(mat4(0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-6.0)), float(_GLF_IDENTITY(0.0, 0.0 + (0.0))), bool(true))) : _GLF_FUZZED(133.023))), 0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-1146.8211)), bool(false))), 0.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) - 0.0), 1.0, 0.0, 0.0))), mix(vec2(_GLF_IDENTITY(_GLF_FUZZED((-42.50)), float(mat3x4(_GLF_FUZZED((-42.50)), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, abs(1.0), 0.0, 0.0))), _GLF_FUZZED(-60.10)), vec2((_GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, determinant(mat3(1.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) - 0.0), 1.0, 0.0, 0.0))))[0], (_GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, determinant(mat3(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(656.105) : _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-5988.6952)), float(1.0), bool(true))))), 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(8.0)), bool(false))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-268.881)), bool(false))))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(2.4)), bool(false))))), _GLF_IDENTITY((_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), 1.0 * ((_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))) - 0.0), 1.0, 0.0, 0.0))))[1]), bvec2(true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(464.610)), bool(false))) < injectionSwitch.y))))).y : _GLF_FUZZED(164.607))), _GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))), clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(55.84), _GLF_FUZZED(-858.805)), bvec2(false, false))))), 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-68.12))), 0.0)), _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, 1.0 * (1.0)) : _GLF_FUZZED((-2345.7139 - -7.7)))), 0.0, 1.0, 1.0, 0.0, determinant(mat3(1.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(927.094)), bool(false))), 0.0)), 0.0)), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) - 0.0), 1.0, 0.0, 0.0))).y))))))))))));
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            break;
          }
         barrier();
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
