#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_5 {
 ivec2 _f0;
 uint _f1;
 vec2 _f2;
 mat3x2 _f3;
} ;

struct _GLF_struct_4 {
 ivec3 _f0;
 mat4x3 _f1;
 bvec4 _f2;
 vec2 _f3;
 vec3 _f4;
} ;

struct _GLF_struct_3 {
 mat2x4 _f0;
 mat2 _f1;
 vec4 _f2;
 uvec3 _f3;
} ;

struct _GLF_struct_2 {
 ivec4 _f0;
 vec2 _f1;
} ;

struct _GLF_struct_6 {
 _GLF_struct_2 _f0;
 uvec2 _f1;
 _GLF_struct_3 _f2;
 _GLF_struct_4 _f3;
 mat2x3 _f4;
 _GLF_struct_5 _f5;
} ;

struct _GLF_struct_0 {
 uvec4 _f0;
} ;

struct _GLF_struct_1 {
 _GLF_struct_0 _f0;
 uint subgroup_local_id;
 mat3 _f1;
} ;

struct _GLF_struct_7 {
 _GLF_struct_1 _f0;
 uvec3 _f1;
 bool _f2;
 _GLF_struct_6 _f3;
 mat2x3 _f4;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_7 _GLF_struct_replacement_7 = _GLF_struct_7(_GLF_struct_1(_GLF_struct_0(uvec4(1u)), gl_SubgroupInvocationID, mat3(1.0)), uvec3(1u), true, _GLF_struct_6(_GLF_struct_2(_GLF_IDENTITY(ivec4(1), _GLF_IDENTITY((_GLF_IDENTITY(ivec4(1), (ivec4(1)) | (ivec4(1)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ivec4(-22915, -58947, 90531, -57611)) : _GLF_IDENTITY((_GLF_IDENTITY(ivec4(1), (ivec4(1)) | (ivec4(1)))), ((_GLF_IDENTITY(ivec4(1), (ivec4(1)) | (ivec4(1))))) | (_GLF_IDENTITY((_GLF_IDENTITY(ivec4(1), (ivec4(1)) | (ivec4(1)))), ((_GLF_IDENTITY(ivec4(1), (ivec4(1)) | (ivec4(1))))) >> ivec4(0, 0, 0, 0)))))) | _GLF_IDENTITY(ivec4(0, 0, 0, 0), ivec4(0, 0, 0, 0) ^ (ivec4(0, 0, _GLF_IDENTITY(0, (0) + 0), 0)))), vec2(1.0)), uvec2(1u), _GLF_struct_3(mat2x4(1.0), _GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mat2(1.0) : _GLF_FUZZED(mat2(-56.95, 603.855, 3270.1835, -9.2))), (false ? _GLF_FUZZED(transpose(mat2(2969.7492, -126.130, -1.0, -71.95))) : (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mat2(1.0) : _GLF_FUZZED(mat2(-56.95, 603.855, 3270.1835, -9.2)))))), vec4(1.0), uvec3(1u)), _GLF_struct_4(ivec3(1), mat4x3(1.0), bvec4(true), vec2(1.0), _GLF_IDENTITY(vec3(1.0), mix(vec3(_GLF_FUZZED((8.7 / 1.0)), _GLF_FUZZED(8.9), (vec3(1.0))[2]), vec3(_GLF_IDENTITY((_GLF_IDENTITY(vec3(1.0), _GLF_IDENTITY(vec3(mat4x2(_GLF_IDENTITY(vec3(1.0), vec3(mat2x3(vec3(1.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, sqrt(1.0)))), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), _GLF_IDENTITY(vec3(1.0, 0.0, 0.0), min(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))))), sqrt(1.0), 0.0)), clamp(_GLF_IDENTITY(vec3(mat4x2(vec3(1.0), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), sqrt(1.0), 0.0)), (vec3(mat4x2(vec3(1.0), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-751.669) : 1.0)), 1.0), _GLF_IDENTITY(vec3(1.0, 0.0, 0.0), mix(vec3(_GLF_FUZZED(-2.7), (vec3(1.0, 0.0, 0.0))[_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-47448)))], _GLF_FUZZED(-3.3)), vec3(_GLF_IDENTITY((vec3(1.0, 0.0, 0.0))[0], ((vec3(1.0, 0.0, 0.0))[0]) - 0.0), _GLF_FUZZED(float(-37346)), (vec3(1.0, 0.0, 0.0))[2]), bvec3(true, false, true))))), sqrt(1.0), 0.0))) * mat3(1.0)), vec3(mat4x2(vec3(1.0), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, max(1.0, 1.0)) : _GLF_FUZZED(-2.0))), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), float(mat2(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 0.0)))) + 0.0), 0.0))), sqrt(1.0), 0.0)), _GLF_IDENTITY(vec3(mat4x2(vec3(1.0), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(_GLF_IDENTITY(0.0, (false ? _GLF_IDENTITY(_GLF_FUZZED(8.6), mix(float(_GLF_FUZZED(45.69)), float(_GLF_FUZZED(8.6)), bool(true))) : 0.0)), 1.0, 1.0), vec3(1.0, 0.0, 0.0))), sqrt(1.0), 0.0)), (vec3(mat4x2(vec3(1.0), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), sqrt(1.0), 0.0))) - vec3(0.0, 0.0, 0.0))))))[0], float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY((_GLF_IDENTITY(vec3(1.0), _GLF_IDENTITY(vec3(mat4x2(_GLF_IDENTITY(vec3(1.0), vec3(mat2x3(vec3(1.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, sqrt(1.0)))), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), _GLF_IDENTITY(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), min(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), min(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), max(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), min(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), _GLF_IDENTITY(vec3(1.0, 0.0, 0.0), min(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))))), _GLF_IDENTITY(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), min(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), (_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), min(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))) * mat3(1.0)), _GLF_IDENTITY(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), min(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), vec3(mat4(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), min(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0))))))), sqrt(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))))), 0.0)), clamp(_GLF_IDENTITY(vec3(mat4x2(vec3(1.0), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), sqrt(1.0), 0.0)), (vec3(mat4x2(vec3(1.0), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), _GLF_IDENTITY(vec3(1.0, 0.0, 0.0), (vec3(1.0, 0.0, 0.0)) - vec3(0.0, 0.0, 0.0))), dot(vec3(0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-751.669) : 1.0)), 1.0), _GLF_IDENTITY(vec3(1.0, 0.0, 0.0), mix(vec3(_GLF_FUZZED(-2.7), (vec3(1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(2432.3195)), bool(false))), 0.0))[1], _GLF_FUZZED(-3.3)), vec3(_GLF_IDENTITY((vec3(1.0, 0.0, 0.0))[0], ((vec3(1.0, 0.0, 0.0))[0]) - 0.0), _GLF_FUZZED(float(-37346)), (vec3(1.0, 0.0, 0.0))[2]), bvec3(true, false, true))))), sqrt(1.0), 0.0))) * mat3(1.0)), vec3(mat4x2(vec3(1.0), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((_GLF_IDENTITY(0.0, max(0.0, 0.0))) + 0.0, ((_GLF_IDENTITY(0.0, max(0.0, 0.0))) + 0.0) * 1.0)), 0.0))), sqrt(1.0), 0.0)), _GLF_IDENTITY(vec3(mat4x2(vec3(1.0), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), _GLF_IDENTITY(vec3(1.0, 0.0, 0.0), mix(vec3(_GLF_FUZZED(-965.405), (vec3(1.0, 0.0, 0.0))[1], (vec3(1.0, 0.0, 0.0))[2]), vec3(_GLF_IDENTITY((vec3(1.0, 0.0, 0.0))[0], (true ? (vec3(1.0, 0.0, 0.0))[0] : _GLF_FUZZED(0.5))), _GLF_FUZZED(90.41), _GLF_FUZZED((-5.5 + 1.0))), bvec3(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), dot(vec3(_GLF_IDENTITY(0.0, (false ? _GLF_IDENTITY(_GLF_FUZZED(8.6), mix(float(_GLF_FUZZED(45.69)), float(_GLF_FUZZED(8.6)), bool(true))) : 0.0)), 1.0, 1.0), vec3(1.0, 0.0, 0.0))), sqrt(1.0), 0.0)), (vec3(mat4x2(vec3(1.0), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), sqrt(1.0), 0.0))) - vec3(0.0, 0.0, 0.0))))))[0], 0.0 + ((_GLF_IDENTITY(vec3(1.0), _GLF_IDENTITY(vec3(mat4x2(_GLF_IDENTITY(vec3(1.0), vec3(mat2x3(vec3(1.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, sqrt(1.0)))), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), _GLF_IDENTITY(vec3(1.0, 0.0, 0.0), min(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))))), sqrt(1.0), 0.0)), clamp(_GLF_IDENTITY(vec3(mat4x2(vec3(1.0), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), sqrt(1.0), 0.0)), (vec3(mat4x2(vec3(1.0), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-751.669) : 1.0)), 1.0), _GLF_IDENTITY(vec3(1.0, 0.0, 0.0), mix(vec3(_GLF_FUZZED(-2.7), (vec3(1.0, 0.0, 0.0))[1], _GLF_FUZZED(-3.3)), vec3(_GLF_IDENTITY((vec3(1.0, 0.0, 0.0))[0], ((vec3(1.0, 0.0, 0.0))[0]) - 0.0), _GLF_FUZZED(float(-37346)), (_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), mix(vec3(_GLF_FUZZED(-4857.7502), _GLF_FUZZED((34.07)), (vec3(1.0, 0.0, 0.0))[2]), vec3((vec3(1.0, 0.0, 0.0))[0], (vec3(1.0, 0.0, 0.0))[1], _GLF_FUZZED(4.8)), bvec3(true, true, false))))[2]), bvec3(true, false, true))))), sqrt(1.0), 0.0))) * mat3(1.0)), vec3(mat4x2(vec3(1.0), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) + 0.0), 0.0))), sqrt(1.0), 0.0)), _GLF_IDENTITY(vec3(mat4x2(vec3(1.0), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(_GLF_IDENTITY(0.0, (false ? _GLF_IDENTITY(_GLF_FUZZED(8.6), mix(float(_GLF_FUZZED(45.69)), float(_GLF_FUZZED(8.6)), bool(true))) : 0.0)), 1.0, 1.0), vec3(1.0, 0.0, 0.0))), _GLF_IDENTITY(sqrt(1.0), (sqrt(1.0)) - 0.0), 0.0)), (vec3(mat4x2(vec3(1.0), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), sqrt(1.0), 0.0))) - vec3(0.0, 0.0, 0.0))))))[0])), 0.0, 1.0, sqrt(1.0), 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0))), mat3(1.0) * (mat2x3(_GLF_IDENTITY((_GLF_IDENTITY(vec3(1.0), _GLF_IDENTITY(vec3(mat4x2(_GLF_IDENTITY(vec3(1.0), vec3(mat2x3(vec3(1.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, sqrt(1.0)))), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), _GLF_IDENTITY(vec3(1.0, 0.0, 0.0), min(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), max(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), vec3(1.0, 0.0, 0.0))))), sqrt(1.0), 0.0)), clamp(_GLF_IDENTITY(vec3(mat4x2(vec3(1.0), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), sqrt(1.0), 0.0)), _GLF_IDENTITY((vec3(mat4x2(vec3(1.0), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-751.669) : 1.0)), 1.0), _GLF_IDENTITY(vec3(1.0, 0.0, 0.0), mix(vec3(_GLF_FUZZED(-2.7), _GLF_IDENTITY((vec3(1.0, 0.0, 0.0)), ((vec3(1.0, 0.0, 0.0))) * mat3(1.0))[1], _GLF_FUZZED(-3.3)), vec3(_GLF_IDENTITY((vec3(1.0, 0.0, 0.0))[0], ((vec3(1.0, 0.0, 0.0))[0]) - 0.0), _GLF_FUZZED(float(-37346)), (vec3(1.0, 0.0, 0.0))[2]), bvec3(true, false, true))))), sqrt(1.0), 0.0))), clamp((vec3(mat4x2(vec3(1.0), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-751.669) : 1.0)), 1.0), _GLF_IDENTITY(vec3(1.0, 0.0, 0.0), mix(vec3(_GLF_FUZZED(-2.7), _GLF_IDENTITY((vec3(1.0, 0.0, 0.0)), ((vec3(1.0, 0.0, 0.0))) * mat3(1.0))[1], _GLF_FUZZED(-3.3)), vec3(_GLF_IDENTITY((vec3(1.0, 0.0, 0.0))[0], ((vec3(1.0, 0.0, 0.0))[0]) - 0.0), _GLF_FUZZED(float(-37346)), (vec3(1.0, 0.0, 0.0))[2]), bvec3(true, false, true))))), sqrt(1.0), 0.0))), (vec3(mat4x2(vec3(1.0), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-751.669) : 1.0)), 1.0), _GLF_IDENTITY(vec3(1.0, 0.0, 0.0), mix(vec3(_GLF_FUZZED(-2.7), _GLF_IDENTITY((vec3(1.0, 0.0, 0.0)), ((vec3(1.0, 0.0, 0.0))) * mat3(1.0))[1], _GLF_FUZZED(-3.3)), vec3(_GLF_IDENTITY((vec3(1.0, 0.0, 0.0))[0], ((vec3(1.0, 0.0, 0.0))[0]) - 0.0), _GLF_FUZZED(float(-37346)), (vec3(1.0, 0.0, 0.0))[2]), bvec3(true, false, true))))), sqrt(1.0), 0.0))), (vec3(mat4x2(vec3(1.0), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-751.669) : 1.0)), 1.0), _GLF_IDENTITY(vec3(1.0, 0.0, 0.0), mix(vec3(_GLF_FUZZED(-2.7), _GLF_IDENTITY((vec3(1.0, 0.0, 0.0)), ((vec3(1.0, 0.0, 0.0))) * mat3(1.0))[1], _GLF_FUZZED(-3.3)), vec3(_GLF_IDENTITY((vec3(1.0, 0.0, 0.0))[0], ((vec3(1.0, 0.0, 0.0))[0]) - 0.0), _GLF_FUZZED(float(-37346)), (vec3(1.0, 0.0, 0.0))[2]), bvec3(true, false, true))))), sqrt(1.0), 0.0))))) * mat3(1.0)), vec3(mat4x2(vec3(1.0), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) + 0.0), 0.0))), sqrt(1.0), 0.0)), _GLF_IDENTITY(vec3(mat4x2(vec3(1.0), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), _GLF_IDENTITY(vec3(1.0, 0.0, 0.0), clamp(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))), dot(vec3(_GLF_IDENTITY(0.0, (false ? _GLF_IDENTITY(_GLF_FUZZED(8.6), mix(float(_GLF_FUZZED(45.69)), float(_GLF_FUZZED(8.6)), bool(true))) : 0.0)), 1.0, 1.0), vec3(1.0, 0.0, 0.0))), sqrt(1.0), 0.0)), (vec3(mat4x2(vec3(1.0), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), sqrt(1.0), 0.0))) - vec3(0.0, 0.0, 0.0))))))[0], _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-845.953) : 0.0)) + ((_GLF_IDENTITY(vec3(1.0), _GLF_IDENTITY(vec3(mat4x2(_GLF_IDENTITY(vec3(1.0), vec3(mat2x3(vec3(1.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, sqrt(1.0)))), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), _GLF_IDENTITY(vec3(1.0, 0.0, 0.0), min(vec3(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(61.33)), bool(false))), 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-0.7) : 1.0)))), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) + tan(0.0)), 0.0), vec3(1.0, 0.0, 0.0))))), sqrt(1.0), 0.0)), clamp(_GLF_IDENTITY(vec3(mat4x2(vec3(1.0), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), sqrt(1.0), 0.0)), (vec3(mat4x2(vec3(1.0), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-751.669) : 1.0)), 1.0), _GLF_IDENTITY(vec3(1.0, 0.0, 0.0), mix(vec3(_GLF_FUZZED(-2.7), (vec3(1.0, 0.0, 0.0))[1], _GLF_IDENTITY(_GLF_FUZZED(-3.3), clamp(_GLF_IDENTITY(_GLF_FUZZED(-3.3), 1.0 * (_GLF_FUZZED(-3.3))), _GLF_IDENTITY(_GLF_FUZZED(-3.3), clamp(_GLF_FUZZED(-3.3), _GLF_FUZZED(-3.3), _GLF_FUZZED(-3.3))), _GLF_FUZZED(-3.3)))), vec3(_GLF_IDENTITY((vec3(1.0, 0.0, 0.0))[0], ((vec3(1.0, 0.0, 0.0))[0]) - 0.0), _GLF_FUZZED(float(-37346)), (vec3(1.0, 0.0, 0.0))[2]), bvec3(true, false, true))))), sqrt(1.0), 0.0))) * mat3(1.0)), vec3(mat4x2(vec3(1.0), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) + 0.0), 0.0))), sqrt(1.0), 0.0)), _GLF_IDENTITY(vec3(mat4x2(vec3(1.0), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(_GLF_IDENTITY(0.0, (false ? _GLF_IDENTITY(_GLF_FUZZED(8.6), mix(float(_GLF_FUZZED(45.69)), float(_GLF_FUZZED(8.6)), bool(true))) : 0.0)), 1.0, 1.0), vec3(1.0, 0.0, 0.0))), sqrt(1.0), 0.0)), (vec3(mat4x2(vec3(1.0), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), sqrt(1.0), 0.0))) - vec3(0.0, 0.0, 0.0))))))[0])), 0.0, 1.0, sqrt(1.0), 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0))))))), _GLF_IDENTITY((_GLF_IDENTITY(vec3(1.0), mix(vec3(_GLF_FUZZED(-9367.4847), _GLF_FUZZED(-87.86), _GLF_FUZZED(9.0)), vec3((vec3(1.0))[0], (vec3(1.0))[1], (vec3(1.0))[2]), bvec3(true, true, true)))), (false ? _GLF_FUZZED(atanh(vec3(1.2, 94.69, -924.320))) : (vec3(1.0))))[1], _GLF_FUZZED(4.9)), bvec3(true, true, false)))), mat2x3(1.0), _GLF_struct_5(ivec2(1), _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), vec2(1.0), mat3x2(1.0))), mat2x3(1.0));
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! _GLF_IDENTITY((! (_GLF_IDENTITY((false), bool(bvec2(_GLF_IDENTITY((false), ! (! ((false)))), false))))), ((! (_GLF_IDENTITY((false), bool(bvec2(_GLF_IDENTITY((false), ! (! ((false)))), false)))))) || false))))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (! (false)), false), bvec2(bvec4(bvec2(! (! (false)), false), true, true)))), _GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(bvec2(! (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), bool(bvec2((false), false)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec2((false), false))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec2((false), false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec2((false), false))), (_GLF_IDENTITY((false), bool(bvec2((false), false)))) && true)))))), (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec2((false), false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec2((false), false))), (_GLF_IDENTITY((false), bool(bvec2((false), false)))) && true))))))) && true)))), (! (! (_GLF_IDENTITY((false), bool(bvec2((false), false)))))) && true)))))), false), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(! (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), bool(bvec2((false), false)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec2((false), false))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec2((false), false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec2((false), false))), (_GLF_IDENTITY((false), bool(bvec2((false), false)))) && true)))))), (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec2((false), false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec2((false), false))), (_GLF_IDENTITY((false), bool(bvec2((false), false)))) && true))))))) && true)))), (! (! (_GLF_IDENTITY((false), bool(bvec2((false), false)))))) && true)))))), false), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(! (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), bool(bvec2((false), false)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec2((false), false))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec2((false), false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec2((false), false))), (_GLF_IDENTITY((false), bool(bvec2((false), false)))) && true)))))), (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec2((false), false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec2((false), false))), (_GLF_IDENTITY((false), bool(bvec2((false), false)))) && true))))))) && true)))), (! (! (_GLF_IDENTITY((false), bool(bvec2((false), false)))))) && true)))))), false), bvec2(bvec3(bvec2(! (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), bool(bvec2((false), false)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec2((false), false))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec2((false), false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec2((false), false))), (_GLF_IDENTITY((false), bool(bvec2((false), false)))) && true)))))), (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec2((false), false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec2((false), false))), (_GLF_IDENTITY((false), bool(bvec2((false), false)))) && true))))))) && true)))), (! (! (_GLF_IDENTITY((false), bool(bvec2((false), false)))))) && true)))))), false), true))), false)), bvec2(bvec4(bvec2(bvec3(_GLF_IDENTITY(bvec2(! (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), bool(bvec2((false), false)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec2((false), false))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec2((false), false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec2((false), false))), (_GLF_IDENTITY((false), bool(bvec2((false), false)))) && true)))))), (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec2((false), false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec2((false), false))), (_GLF_IDENTITY((false), bool(bvec2((false), false)))) && true))))))) && true)))), (! (! (_GLF_IDENTITY((false), bool(bvec2((false), false)))))) && true)))))), false), bvec2(bvec3(bvec2(! (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), bool(bvec2((false), false)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec2((false), false))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec2((false), false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec2((false), false))), (_GLF_IDENTITY((false), bool(bvec2((false), false)))) && true)))))), (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec2((false), false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec2((false), false))), (_GLF_IDENTITY((false), bool(bvec2((false), false)))) && true))))))) && true)))), (! (! (_GLF_IDENTITY((false), bool(bvec2((false), false)))))) && true)))))), false), true))), false)), true, false)))), false, true)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(! (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), bool(bvec2((false), false)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec2((false), false))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec2((false), false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec2((false), false))), (_GLF_IDENTITY((false), bool(bvec2((false), false)))) && true)))))), (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec2((false), false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec2((false), false))), (_GLF_IDENTITY((false), bool(bvec2((false), false)))) && true))))))) && true)))), (! (! (_GLF_IDENTITY((false), bool(bvec2((false), false)))))) && true)))))), false), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(! (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), bool(bvec2((false), false)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec2((false), false))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec2((false), false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec2((false), false))), (_GLF_IDENTITY((false), bool(bvec2((false), false)))) && true)))))), (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec2((false), false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec2((false), false))), (_GLF_IDENTITY((false), bool(bvec2((false), false)))) && true))))))) && true)))), (! (! (_GLF_IDENTITY((false), bool(bvec2((false), false)))))) && true)))))), false), bvec2(bvec3(bvec2(! (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), bool(bvec2((false), false)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec2((false), false))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec2((false), false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec2((false), false))), (_GLF_IDENTITY((false), bool(bvec2((false), false)))) && true)))))), (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec2((false), false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec2((false), false))), (_GLF_IDENTITY((false), bool(bvec2((false), false)))) && true))))))) && true)))), (! (! (_GLF_IDENTITY((false), bool(bvec2((false), false)))))) && true)))))), false), true))), false)), bvec2(bvec4(bvec2(bvec3(_GLF_IDENTITY(bvec2(! (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), bool(bvec2((false), false)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec2((false), false))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec2((false), false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec2((false), false))), (_GLF_IDENTITY((false), bool(bvec2((false), false)))) && true)))))), (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec2((false), false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec2((false), false))), (_GLF_IDENTITY((false), bool(bvec2((false), false)))) && true))))))) && true)))), (! (! (_GLF_IDENTITY((false), bool(bvec2((false), false)))))) && true)))))), false), bvec2(bvec3(bvec2(! (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), bool(bvec2((false), false)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec2((false), false))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec2((false), false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec2((false), false))), (_GLF_IDENTITY((false), bool(bvec2((false), false)))) && true)))))), (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec2((false), false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec2((false), false))), (_GLF_IDENTITY((false), bool(bvec2((false), false)))) && true))))))) && true)))), (! (! (_GLF_IDENTITY((false), bool(bvec2((false), false)))))) && true)))))), false), true))), false)), true, false)))), false, true)), bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(bvec2(! (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), bool(bvec2((false), false)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec2((false), false))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec2((false), false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec2((false), false))), (_GLF_IDENTITY((false), bool(bvec2((false), false)))) && true)))))), (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec2((false), false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec2((false), false))), (_GLF_IDENTITY((false), bool(bvec2((false), false)))) && true))))))) && true)))), (! (! (_GLF_IDENTITY((false), bool(bvec2((false), false)))))) && true)))))), false), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(! (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), bool(bvec2((false), false)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec2((false), false))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec2((false), false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec2((false), false))), (_GLF_IDENTITY((false), bool(bvec2((false), false)))) && true)))))), (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec2((false), false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec2((false), false))), (_GLF_IDENTITY((false), bool(bvec2((false), false)))) && true))))))) && true)))), (! (! (_GLF_IDENTITY((false), bool(bvec2((false), false)))))) && true)))))), false), bvec2(bvec3(bvec2(! (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), bool(bvec2((false), false)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec2((false), false))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec2((false), false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec2((false), false))), (_GLF_IDENTITY((false), bool(bvec2((false), false)))) && true)))))), (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec2((false), false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec2((false), false))), (_GLF_IDENTITY((false), bool(bvec2((false), false)))) && true))))))) && true)))), (! (! (_GLF_IDENTITY((false), bool(bvec2((false), false)))))) && true)))))), false), true))), false)), bvec2(bvec4(bvec2(bvec3(_GLF_IDENTITY(bvec2(! (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), bool(bvec2((false), false)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec2((false), false))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec2((false), false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec2((false), false))), (_GLF_IDENTITY((false), bool(bvec2((false), false)))) && true)))))), (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec2((false), false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec2((false), false))), (_GLF_IDENTITY((false), bool(bvec2((false), false)))) && true))))))) && true)))), (! (! (_GLF_IDENTITY((false), bool(bvec2((false), false)))))) && true)))))), false), bvec2(bvec3(bvec2(! (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), bool(bvec2((false), false)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec2((false), false))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec2((false), false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec2((false), false))), (_GLF_IDENTITY((false), bool(bvec2((false), false)))) && true)))))), (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec2((false), false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec2((false), false))), (_GLF_IDENTITY((false), bool(bvec2((false), false)))) && true))))))) && true)))), (! (! (_GLF_IDENTITY((false), bool(bvec2((false), false)))))) && true)))))), false), true))), false)), true, false)))), false, true)), false, true))), false, true))))), true)), false || (bool(bvec2(bool(_GLF_IDENTITY(bvec2(! (! (false)), false), _GLF_IDENTITY(bvec2(bvec2(bvec2(! (! (false)), false))), bvec2(bvec2(bvec2(bvec2(bvec2(! (! (false)), false)))))))), true))))))), true && (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) || false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && _GLF_IDENTITY((_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), bool(bvec4(_GLF_IDENTITY((! (false)), bool(bvec3((! (false)), false, true))), false, false, true)))) || false))), true && ((_GLF_IDENTITY(false, ! _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((! (false)), bool(bvec4((! (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY((! (false)), bool(bvec4((! (false)), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((! (false)), _GLF_IDENTITY(false || (_GLF_IDENTITY((! (false)), true && (_GLF_IDENTITY((! (false)), ((! (false))) && true)))), bool(_GLF_IDENTITY(bool(false || (_GLF_IDENTITY((! (false)), true && ((! (false)))))), ! (! (bool(false || (_GLF_IDENTITY((! (false)), true && ((! (false)))))))))))), false, _GLF_IDENTITY(false, true && (false)), true)), true && (bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (false)))), _GLF_IDENTITY(false || (_GLF_IDENTITY((! (false)), true && ((! (false))))), bool(_GLF_IDENTITY(bool(false || _GLF_IDENTITY((_GLF_IDENTITY((! (false)), true && ((! (false))))), ((_GLF_IDENTITY((! (false)), true && ((! (false)))))) || false)), ! _GLF_IDENTITY(_GLF_IDENTITY((! (bool(false || (_GLF_IDENTITY((! (false)), true && ((! (false)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (bool(false || (_GLF_IDENTITY((! (false)), true && ((! (false)))))))), ((! (bool(false || (_GLF_IDENTITY((! (false)), true && ((! (false))))))))) || false)), false || (! (_GLF_IDENTITY((! (bool(false || (_GLF_IDENTITY((! (false)), true && ((! (false)))))))), ((! (bool(false || (_GLF_IDENTITY((! (false)), true && ((! (false))))))))) || false)))))), (_GLF_IDENTITY((! (bool(false || (_GLF_IDENTITY((! (false)), true && ((! (false)))))))), true && _GLF_IDENTITY(((! (bool(false || _GLF_IDENTITY((_GLF_IDENTITY((! (false)), true && ((! (false))))), ((_GLF_IDENTITY((! (false)), true && ((! (false)))))) && true))))), false || (((! (bool(false || _GLF_IDENTITY((_GLF_IDENTITY((! (false)), true && ((! (false))))), ((_GLF_IDENTITY((! (false)), true && ((! (false)))))) && true))))))))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))))), false, false, true))))))))))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false))))))) && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, bool(bvec2(false, false)))), ! (! _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), (_GLF_IDENTITY(_GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(bvec2((false), true)))) && true), ((false)) && true)) || false), true && ((false))))))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), true && ((_GLF_IDENTITY(false, ! (! (false)))))))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, _GLF_IDENTITY(! _GLF_IDENTITY((! (false)), bool(bvec3((! (false)), false, false))), _GLF_IDENTITY(bool(bool(! _GLF_IDENTITY((! (false)), bool(bvec3((! (false)), false, false))))), bool(bvec4(_GLF_IDENTITY(bool(bool(! _GLF_IDENTITY((! (false)), bool(bvec3((! (false)), false, false))))), bool(bvec3(bool(bool(! _GLF_IDENTITY((! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((false), ((false)) || false), false, true)), false || (bool(bvec3(_GLF_IDENTITY((false), ((false)) || false), false, true)))))), bool(bvec3((! (false)), false, false))))), false, false))), false, false, true))))))))))))), _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bvec2((! (false)), true)), ! (_GLF_IDENTITY(! (bool(bvec2((! (false)), true))), ! (! (! (bool(bvec2((! (false)), true)))))))))), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true)))) && _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), true && ((_GLF_IDENTITY(false, ! (! (false)))))))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! _GLF_IDENTITY((! (false)), ((! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))))) || false))))))))))) || false, (_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(true, (true) || false) && ((_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), false || ((! (false)))))))))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false)))))))))))) || false, true && (((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), true && ((_GLF_IDENTITY(false, ! (! (false)))))))), bool(bvec3(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), true && ((_GLF_IDENTITY(false, ! (! (false)))))))), true, true))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && ((false)))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY((false), true && ((false))), true && (_GLF_IDENTITY((false), true && ((false)))))))))))), true && _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(true, (true) || false) && _GLF_IDENTITY(((_GLF_IDENTITY(false, ! (! (false))))), false || (((_GLF_IDENTITY(false, ! (! (false)))))))))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), false || (_GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), true && (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! ((false))))))))))))))) || false))) && true))), bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bool((! (false)))))), true && (_GLF_IDENTITY(false, ! (! (false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (! ((_GLF_IDENTITY(false, ! (! (false))))))), true && ((_GLF_IDENTITY(false, ! (! (false)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (! ((_GLF_IDENTITY(false, ! (! (false))))))), true && ((_GLF_IDENTITY(false, ! (! (false)))))))))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false))))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true && (_GLF_IDENTITY(false, ! (! (false)))), true && (true && _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(bvec2((_GLF_IDENTITY(false, ! (! (false)))), false)))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! ((false))))))))), _GLF_IDENTITY(true && _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), true && ((_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(true && _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), true && ((_GLF_IDENTITY(false, ! (! (false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true && _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), true && ((_GLF_IDENTITY(false, ! (! (false))))))))) || false))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false))))))))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! ((false))))))))), _GLF_IDENTITY(true && _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), true && ((_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(true && _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(false, ! (! (false)))))) || false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true && _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), true && ((_GLF_IDENTITY(false, ! (! (false))))))))) || false))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false))))))))), ! (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! ((false))))))))), _GLF_IDENTITY(true && _GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), ! (! (false)))))), (_GLF_IDENTITY(true && _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), true && ((_GLF_IDENTITY(false, ! (! (false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true && _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), true && ((_GLF_IDENTITY(false, ! (! (false))))))))) || false))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false))))))))))))))))) || _GLF_IDENTITY(false, true && (false))))), true && (bool(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(bool(! (false))))), bool(bool((! (false)))))), true && (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (_GLF_IDENTITY(! (! (false)), false || (_GLF_IDENTITY(! (! (false)), false || (! (! (false)))))))))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))), true && ((_GLF_IDENTITY(false, ! (! (false)))))))), bool(bool(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), bvec3(bvec3(bvec3(bvec3(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3(injectionSwitch.y, 1.0, 1.0, sin(0.0), 1.0, 0.0, round(length(normalize(cos(0.0)))), 1.0, 1.0)), mix(float(float(mat3(injectionSwitch.y, 1.0, 1.0, sin(0.0), 1.0, 0.0, round(length(normalize(cos(0.0)))), 1.0, 1.0))), float(_GLF_FUZZED(5674.5743)), bool(false)))))), false))))))))))))), true && ((_GLF_IDENTITY(false, ! (! (false))))))))))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bool(_GLF_IDENTITY(false, ! (! (false)))))), true, _GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < injectionSwitch.y)), false))), true && (_GLF_IDENTITY(false, ! (! (false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(false, ! (! (false)))))), true && (bool(bool((_GLF_IDENTITY(false, ! (! (false))))))))))), _GLF_IDENTITY(true && _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ((_GLF_IDENTITY(false, ! (! (false))))) || false)))), true && _GLF_IDENTITY(((_GLF_IDENTITY(false, ! (! (false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(false, ! (! (false))))), false || (((_GLF_IDENTITY(false, ! (! (false))))))), ! (! (_GLF_IDENTITY(((_GLF_IDENTITY(false, ! (! (false))))), false || (((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! ((false)))))))))))))))), bool(bvec4(! (_GLF_IDENTITY(((_GLF_IDENTITY(false, ! (! (false))))), false || (((_GLF_IDENTITY(false, ! (! (false)))))))), false, true, true)))))), (true && _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), true && ((_GLF_IDENTITY(false, ! (! (false))))))) || false))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false)))))))))))), (((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bool(_GLF_IDENTITY(false, ! (! (false)))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), true && (_GLF_IDENTITY(false, ! (! (false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), _GLF_IDENTITY(true && _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), true && _GLF_IDENTITY(((_GLF_IDENTITY(false, ! (! (false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((_GLF_IDENTITY(false, ! (! (false))))), false || (((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(false, ! (! (false)))))))))), bool(bvec4(! (_GLF_IDENTITY(((_GLF_IDENTITY(false, ! (! (false))))), false || (((_GLF_IDENTITY(false, ! (! (false)))))))), false, true, true)))))), (true && _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), true && ((_GLF_IDENTITY(false, ! (! (false))))))) || false))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false))))))))))))) || false) || false, bool(bvec4(((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) || false))), true && (_GLF_IDENTITY(false, ! (! (false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), _GLF_IDENTITY(true && _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), true && _GLF_IDENTITY(((_GLF_IDENTITY(false, ! (! (false))))), (((_GLF_IDENTITY(false, ! (! (false)))))) && true)), (true && _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), true && ((_GLF_IDENTITY(false, ! (! (false))))))) || false))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false)))))))))))) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y))))))))))))))))))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY((false), true && ((false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, false, true))))), ! (! (bool(bool(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, false, true))))))))), true && (_GLF_IDENTITY(false, ! (! (false)))))))))))) && true))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))) && true), false, true))))), false || (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))) && true), false, true))))), ((! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))) && true), false, true)))))) || false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))) || false))))) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + _GLF_struct_replacement_7._f0.subgroup_local_id, (workgroup_base + subgroup_id * subgroup_size + _GLF_struct_replacement_7._f0.subgroup_local_id) << 0u);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)))
    barrier();
   barrier();
  }
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)) + subgroup_id * subgroup_size)), max(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))))) + ((_GLF_struct_replacement_7._f0.subgroup_local_id + _GLF_IDENTITY(1, 1 * (1))) % subgroup_size);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, false)), bool(bvec2(bool(bvec4(false, false, false, false)), true))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (false)))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(1), _GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (4) >> 0), 4)), 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), ! (! (_GLF_IDENTITY(true, (true) && true))))) || false))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), true)), ! (_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), true))), ! (! (! (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), true)))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_7._f0.subgroup_local_id + 1, (_GLF_IDENTITY(_GLF_struct_replacement_7._f0.subgroup_local_id + 1, (_GLF_struct_replacement_7._f0.subgroup_local_id + 1) / 1u)) << 0u) < subgroup_size, (_GLF_IDENTITY(_GLF_struct_replacement_7._f0.subgroup_local_id + 1 < subgroup_size, false || (_GLF_struct_replacement_7._f0.subgroup_local_id + 1 < subgroup_size))) && true))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(vec2(mat2(1.0) * (injectionSwitch))))).x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))))))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(checker[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(~ (~ (virtual_gid)), (~ (~ (virtual_gid))) ^ 0u))], read, 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   subgroupAll(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))));
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (_GLF_IDENTITY(! ((false) && true), ! (! (! ((false) && true))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (_GLF_IDENTITY(! ((false) && true), ! (! (! ((false) && true))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (_GLF_IDENTITY(! ((false) && true), ! (! (! ((false) && true))))))))), bool(bvec4(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (_GLF_IDENTITY(! ((false) && true), ! (! (! ((false) && true))))))))), true, true, true)))) || false))))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(313.397))) > injectionSwitch.y)))) || false)) || false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), ! (! (! (_GLF_IDENTITY(false, false || (false))))))))))), ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), ! (! (! (_GLF_IDENTITY(false, false || (false))))))))))))))))
      barrier();
     barrier();
    }
   atomicStore(buf[virtual_gid], read, 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * vec2(1.0, 1.0)).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   subgroupAll(true);
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
