#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(55.15), _GLF_IDENTITY(max(_GLF_FUZZED(55.15), _GLF_FUZZED(55.15)), (max(_GLF_FUZZED(55.15), _GLF_FUZZED(55.15))) / 1.0)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).x, float(mat2(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).x, 1.0, 0.0, 1.0))))) > injectionSwitch.y))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false))), ! _GLF_IDENTITY((! (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)) && _GLF_IDENTITY(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), bool(bvec2((false), true)))), (! (_GLF_IDENTITY((false), bool(bvec2((false), true))))) || false))), (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), bool(bvec2((false), true)))), (! (_GLF_IDENTITY((false), bool(bvec2((false), true))))) || false)))) || false)), (injectionSwitch.x > injectionSwitch.y)))), ! (! ((! (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)) && _GLF_IDENTITY(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), bool(bvec2((false), true)))), (! (_GLF_IDENTITY((false), bool(bvec2((false), true))))) || false))), (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), bool(bvec2((false), true)))), (! (_GLF_IDENTITY((false), bool(bvec2((false), true))))) || false)))) || false)), (injectionSwitch.x > injectionSwitch.y)))))))))) && true))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (false)))))))))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))), (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))) && true))), _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY((true), bool(bvec3((true), true, false))), _GLF_IDENTITY(bool(bvec4((true), true, true, false)), _GLF_IDENTITY(! (! (bool(bvec4((true), true, true, false)))), (! (! (bool(bvec4((true), true, true, false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false), true, false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, false || (_GLF_IDENTITY((false) && true, false || ((false) && true)))))), (_GLF_DEAD(false)) && _GLF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true))))), (bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true)))))) || false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true), bvec3(bvec4(_GLF_IDENTITY(bvec3(true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true))))), (bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true)))))) || false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true), bvec3(_GLF_IDENTITY(bvec3(bvec3(true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true))))), (bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true)))))) || false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)), bvec3(bvec4(bvec3(bvec3(true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true))))), (bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true)))))) || false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)), true))))), true)))))))), (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(87925)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-0.7)), bvec2(true, false))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))) * (injectionSwitch)).y, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))) * (injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))) * (injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))) * (injectionSwitch)).y, mix(float(_GLF_FUZZED(9661.9375)), float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))) * (injectionSwitch)).y), bool(true))))))))) || _GLF_IDENTITY(false, true && (false))))), ((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (! ((false) && true))))), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), false)))))) && _GLF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec3(true, true, true)))))), (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))) * (injectionSwitch)).y, true && (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(72.69) : 1.0)))))) * (injectionSwitch)).y)))))) || _GLF_IDENTITY(false, true && (false)))))) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, (true ? gl_WorkGroupSize.x : _GLF_FUZZED(28168u)))) | (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))), clamp((_GLF_IDENTITY(gl_WorkGroupSize.x, (true ? gl_WorkGroupSize.x : _GLF_FUZZED(28168u)))) | (_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x), (false ? _GLF_FUZZED(subgroup_local_id) : clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))))), (_GLF_IDENTITY(gl_WorkGroupSize.x, (true ? gl_WorkGroupSize.x : _GLF_FUZZED(28168u)))) | (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, (true ? gl_WorkGroupSize.x : _GLF_FUZZED(28168u)))) | (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))), 0u + ((_GLF_IDENTITY(gl_WorkGroupSize.x, (true ? gl_WorkGroupSize.x : _GLF_FUZZED(28168u)))) | (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | uvec3(0u, 0u, 0u)).x, gl_WorkGroupSize.x))))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))))) || false))))))))) && (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), min(injectionSwitch, injectionSwitch)).y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))) : _GLF_FUZZED(min((vec3(158.009, 9.1, 8.0) * mat2x3(2408.2171, 7.7, -3638.2150, 628.112, -3903.8869, -4.7)), float(num_workgroup))))).x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))) : _GLF_FUZZED(min((vec3(158.009, 9.1, 8.0) * mat2x3(2408.2171, 7.7, -3638.2150, 628.112, -3903.8869, -4.7)), float(num_workgroup))))).x > injectionSwitch.y))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))) : _GLF_FUZZED(min((vec3(158.009, 9.1, 8.0) * mat2x3(2408.2171, 7.7, -3638.2150, 628.112, -3903.8869, -4.7)), float(num_workgroup))))).x > injectionSwitch.y))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))), (false) || false)) && true)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) && true)), (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) && true))) && true)), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) || false)), bool(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) || false)), true))))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) || false)), bool(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) || false)), true))))))), ((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) || false)), bool(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) || false)), true)))))))) && true), true, false)), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) || false)), bool(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) || false)), true))))))), ((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) || false)), bool(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) || false)), true)))))))) && true), true, false)), true && (bool(bvec3(_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) || false)), bool(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) || false)), true))))))), ((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) || false)), bool(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) || false)), true)))))))) && true), true, false))))) && true)), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, false)), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(5.2) : injectionSwitch.y))))), ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(5.2) : injectionSwitch.y)))))) && true)) && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), true, false), false)))), true && (bool(bvec3(_GLF_DEAD(false), true, false))))))), true, true)))), (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false))), true, true)))), bool(bvec3((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(true, false || (true)), false))), true, true)))), true, true)))) && true)) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) && true), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) && true)))), ! (! (bool(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) && true))))))))), true, true)), (bool(bvec4(true, true, true, true))) && true))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(pow(vec2(-53.73, 2772.2082), vec2(9.2, -125.768))) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))).y))) || false), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y))))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) - 0u), uint(uvec4(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) - 0u), 1u, 0u, 1u)))) ^ 0u), _GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) * _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u | (1u))) << _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), max(~ (0u), ~ (0u)))))))), 0u ^ ((workgroup_base + subgroup_id * subgroup_size))) | (workgroup_base + subgroup_id * subgroup_size)), _GLF_IDENTITY(0u, (0u) | (0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) - 0u)) ^ 0u), _GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)) * _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u | (_GLF_IDENTITY(1u, (1u) << 0u)))) << 0u))), 0u ^ _GLF_IDENTITY(((workgroup_base + subgroup_id * subgroup_size)), max(_GLF_IDENTITY(((workgroup_base + subgroup_id * subgroup_size)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : ((workgroup_base + subgroup_id * subgroup_size)))), ((workgroup_base + subgroup_id * subgroup_size))))) | (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))) + subgroup_id * subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)) + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 1u * (subgroup_id * subgroup_size))) - 0u)) ^ 0u), _GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) * _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY(0u | (1u), _GLF_IDENTITY(uint(uvec4(0u | (1u), 1u, 0u, 1u)), max(uint(uvec4(0u | (1u), 1u, 0u, 1u)), uint(uvec4(0u | (1u), 1u, 0u, 1u))))))) << 0u))), 0u ^ ((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) | (workgroup_base + subgroup_id * subgroup_size))), clamp(~ (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) | (workgroup_base + subgroup_id * subgroup_size))), _GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) | (workgroup_base + subgroup_id * subgroup_size))), (true ? ~ (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) | (workgroup_base + subgroup_id * subgroup_size))) : _GLF_FUZZED(132058u))), ~ (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) | (workgroup_base + subgroup_id * subgroup_size))))), max(~ (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) | (workgroup_base + subgroup_id * subgroup_size))), ~ (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) | (workgroup_base + subgroup_id * subgroup_size)))))))))) | (workgroup_base + subgroup_id * subgroup_size))) ^ 0u))) + subgroup_local_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec2(subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) * 1u, (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY((subgroup_size), min((subgroup_size), (subgroup_size))) * 1u))), 1u))) + ((_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)))), (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))))) ^ 0u), subgroup_local_id)) + 1) % subgroup_size), _GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_size) : subgroup_size))) | (163484u & 0u)), _GLF_IDENTITY(uint(uvec2(subgroup_id * subgroup_size, 1u)), (true ? uint(uvec2(subgroup_id * subgroup_size, 1u)) : _GLF_FUZZED((151669u - (subgroup_id >> subgroup_id)))))) + ((_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)))), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)))) + 1) % subgroup_size)), ((workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_id * subgroup_size, 1u)), (true ? uint(uvec2(subgroup_id * subgroup_size, 1u)) : _GLF_FUZZED((151669u - (subgroup_id >> subgroup_id)))))) + ((_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)))), subgroup_local_id)) + 1) % subgroup_size))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(1u), uint(_GLF_IDENTITY(1u, 1u * (1u)))))) >> 0u), (false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_base, uint(uvec2(_GLF_IDENTITY(workgroup_base, max(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))), 1u)))) : _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec2(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u), 1u))) + ((_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)), clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)))), subgroup_local_id)) + 1) % subgroup_size), (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uvec2(subgroup_id, 1u), uvec2(0u, 0u) ^ (_GLF_IDENTITY(uvec2(subgroup_id, 1u), (uvec2(subgroup_id, 1u)) | (uvec2(subgroup_id, 1u))))))) * subgroup_size, uint(uvec2(subgroup_id * subgroup_size, 1u))) + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u), min(subgroup_local_id, subgroup_local_id)))), _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)))))) + 1), ((_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u), min(subgroup_local_id, subgroup_local_id)))), _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)))))) + 1)) / 1u) % subgroup_size), (workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), uint(uvec2(subgroup_id * subgroup_size, 1u))) + _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)), clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)))), subgroup_local_id)), (0u >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), clamp(uint(7u), uint(7u), uint(7u))))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) / 1u), min(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)))), subgroup_local_id)))) + 1) % subgroup_size), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(min(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)))), subgroup_local_id), max(min(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)))), subgroup_local_id), min(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)))), subgroup_local_id)))), (0u >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), clamp(uint(7u), uint(7u), uint(7u))))) ^ (_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), subgroup_local_id)))), subgroup_local_id)))) + 1) % subgroup_size) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), 0u | (_GLF_FUZZED(workgroup_id)))))) - 0u)) >> 0u))), _GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), (_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u)) ^ 0u), _GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))), subgroup_size), max(_GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), uint(uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), 1u, 1u))), _GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))), subgroup_size), _GLF_IDENTITY((clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), _GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))), subgroup_size)) ^ 0u, ((clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), _GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))), subgroup_size)) ^ 0u) >> (0u | 0u))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), _GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))), subgroup_size), (clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), _GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))), subgroup_size)) ^ (0u >> _GLF_IDENTITY(uint(4u), uint(4u))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / (1u & 1u)), clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(subgroup_size), (true ? uint(subgroup_size) : _GLF_FUZZED((workgroup_id % workgroup_size)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(subgroup_size), (true ? uint(subgroup_size) : _GLF_FUZZED((workgroup_id % workgroup_size)))), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(uint(subgroup_size), (true ? uint(subgroup_size) : _GLF_FUZZED((workgroup_id % workgroup_size)))), uint(uvec4(_GLF_IDENTITY(uint(subgroup_size), (true ? uint(subgroup_size) : _GLF_FUZZED((workgroup_id % workgroup_size)))), 1u, 1u, 1u)))))), 0u + (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(subgroup_size), (true ? uint(subgroup_size) : _GLF_FUZZED((workgroup_id % workgroup_size)))), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(uint(subgroup_size), (true ? uint(subgroup_size) : _GLF_FUZZED((workgroup_id % workgroup_size)))), uint(uvec4(_GLF_IDENTITY(uint(subgroup_size), (true ? uint(subgroup_size) : _GLF_FUZZED((workgroup_id % workgroup_size)))), 1u, 1u, 1u)))))))))))), subgroup_size))), (_GLF_IDENTITY(uint(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), _GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))), subgroup_size))), (uint(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), _GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))), subgroup_size)))) >> 0u)) - 0u)), _GLF_IDENTITY(0u, (0u) << 0u) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / (1u & 1u)), clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(subgroup_size), (true ? uint(subgroup_size) : _GLF_FUZZED((workgroup_id % workgroup_size)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(subgroup_size), (true ? uint(subgroup_size) : _GLF_FUZZED((workgroup_id % workgroup_size)))), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(uint(subgroup_size), (true ? uint(subgroup_size) : _GLF_FUZZED((workgroup_id % workgroup_size)))), uint(uvec4(_GLF_IDENTITY(uint(subgroup_size), (true ? uint(subgroup_size) : _GLF_FUZZED((workgroup_id % workgroup_size)))), 1u, 1u, 1u)))))), 0u + (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(subgroup_size), (true ? uint(subgroup_size) : _GLF_FUZZED((workgroup_id % workgroup_size)))), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(uint(subgroup_size), (true ? uint(subgroup_size) : _GLF_FUZZED((workgroup_id % workgroup_size)))), uint(uvec4(_GLF_IDENTITY(uint(subgroup_size), (true ? uint(subgroup_size) : _GLF_FUZZED((workgroup_id % workgroup_size)))), 1u, 1u, 1u)))))))))))), subgroup_size))), (_GLF_IDENTITY(uint(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), _GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))), subgroup_size))), (uint(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), _GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))), subgroup_size)))) >> 0u)) - 0u)), ~ (~ (uint(_GLF_IDENTITY(uint(subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / (1u & 1u)), clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(subgroup_size), (true ? uint(subgroup_size) : _GLF_FUZZED((workgroup_id % workgroup_size)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(subgroup_size), (true ? uint(subgroup_size) : _GLF_FUZZED((workgroup_id % workgroup_size)))), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(uint(subgroup_size), (true ? uint(subgroup_size) : _GLF_FUZZED((workgroup_id % workgroup_size)))), uint(uvec4(_GLF_IDENTITY(uint(subgroup_size), (true ? uint(subgroup_size) : _GLF_FUZZED((workgroup_id % workgroup_size)))), 1u, 1u, 1u)))))), 0u + (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(subgroup_size), (true ? uint(subgroup_size) : _GLF_FUZZED((workgroup_id % workgroup_size)))), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(uint(subgroup_size), (true ? uint(subgroup_size) : _GLF_FUZZED((workgroup_id % workgroup_size)))), uint(uvec4(_GLF_IDENTITY(uint(subgroup_size), (true ? uint(subgroup_size) : _GLF_FUZZED((workgroup_id % workgroup_size)))), 1u, 1u, 1u)))))))))))), subgroup_size))), (_GLF_IDENTITY(uint(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), _GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))), subgroup_size))), (uint(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), _GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))), subgroup_size)))) >> 0u)) - 0u)))))))) + ((_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) + 1) % subgroup_size)) | (workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)) | (subgroup_size))) / 1u)) | (_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))))), (_GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size))) * uint(_GLF_ONE(1.0, injectionSwitch.y))) + ((subgroup_local_id + 1) % subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / _GLF_IDENTITY(1u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(1u, ~ (~ (1u))) : _GLF_FUZZED(subgroup_local_id)))), uint(uint(subgroup_size))), subgroup_size)), clamp(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), uint(uint(subgroup_size))), subgroup_size)), _GLF_IDENTITY(clamp(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), uint(uint(subgroup_size))), subgroup_size)), subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), uint(uint(subgroup_size))), subgroup_size)), subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), uint(uint(subgroup_size))), subgroup_size))), clamp(clamp(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), uint(uint(subgroup_size))), subgroup_size)), subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), uint(uint(subgroup_size))), subgroup_size)), subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), uint(uint(subgroup_size))), subgroup_size))), clamp(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), uint(uint(subgroup_size))), subgroup_size)), subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), uint(uint(subgroup_size))), subgroup_size)), subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), uint(uint(subgroup_size))), subgroup_size))), clamp(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), uint(uint(subgroup_size))), subgroup_size)), subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), uint(uint(subgroup_size))), subgroup_size)), subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), uint(uint(subgroup_size))), subgroup_size)))))), _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), uint(uint(subgroup_size))), subgroup_size)), ~ (~ (subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), uint(uint(subgroup_size))), subgroup_size))))), subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), uint(uint(subgroup_size))), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) | (subgroup_size))) >> 0u))))) + _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) + _GLF_IDENTITY(1, (1) - 0)) % subgroup_size), (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), ! (! (bool(bvec2(true, true)))))), ! (! (true))) ? ((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u, min(0u, 0u)) ^ _GLF_IDENTITY((subgroup_local_id), max((subgroup_local_id), (subgroup_local_id)))) + 1) % subgroup_size) : _GLF_FUZZED(num_workgroup)))), (_GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / _GLF_IDENTITY(1u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(1u, ~ (~ (1u))) : _GLF_FUZZED(subgroup_local_id)))), uint(uint(subgroup_size))), subgroup_size)), clamp(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), uint(uint(subgroup_size))), subgroup_size)), _GLF_IDENTITY(clamp(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), uint(uint(subgroup_size))), subgroup_size)), subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), uint(uint(subgroup_size))), subgroup_size)), subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), uint(uint(subgroup_size))), subgroup_size))), clamp(clamp(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), uint(uint(subgroup_size))), subgroup_size)), subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), uint(uint(subgroup_size))), subgroup_size)), subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), uint(uint(subgroup_size))), subgroup_size))), clamp(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), uint(uint(subgroup_size))), subgroup_size)), subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), uint(uint(subgroup_size))), subgroup_size)), subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), uint(uint(subgroup_size))), subgroup_size))), clamp(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), uint(uint(subgroup_size))), subgroup_size)), subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), uint(uint(subgroup_size))), subgroup_size)), subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), uint(uint(subgroup_size))), subgroup_size)))))), _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), uint(uint(subgroup_size))), subgroup_size)), ~ (~ (subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), uint(uint(subgroup_size))), subgroup_size))))), subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), uint(uint(subgroup_size))), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) | (subgroup_size))) >> 0u))))) + _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) + _GLF_IDENTITY(1, (1) - 0)) % subgroup_size), (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), ! (! (bool(bvec2(true, true)))))), ! (! (true))) ? ((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u, min(0u, 0u)) ^ _GLF_IDENTITY((subgroup_local_id), max((subgroup_local_id), (subgroup_local_id)))) + 1) % subgroup_size) : _GLF_FUZZED(num_workgroup)))), (false ? _GLF_FUZZED(subgroup_local_id) : (workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / _GLF_IDENTITY(1u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(1u, ~ (~ (1u))) : _GLF_FUZZED(subgroup_local_id)))), uint(uint(subgroup_size))), subgroup_size)), clamp(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), uint(uint(subgroup_size))), subgroup_size)), _GLF_IDENTITY(clamp(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), uint(uint(subgroup_size))), subgroup_size)), subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), uint(uint(subgroup_size))), subgroup_size)), subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), uint(uint(subgroup_size))), subgroup_size))), clamp(clamp(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), uint(uint(subgroup_size))), subgroup_size)), subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), uint(uint(subgroup_size))), subgroup_size)), subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), uint(uint(subgroup_size))), subgroup_size))), clamp(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), uint(uint(subgroup_size))), subgroup_size)), subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), uint(uint(subgroup_size))), subgroup_size)), subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), uint(uint(subgroup_size))), subgroup_size))), clamp(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), uint(uint(subgroup_size))), subgroup_size)), subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), uint(uint(subgroup_size))), subgroup_size)), subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), uint(uint(subgroup_size))), subgroup_size)))))), _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), uint(uint(subgroup_size))), subgroup_size)), ~ (~ (subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), uint(uint(subgroup_size))), subgroup_size))))), subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), uint(uint(subgroup_size))), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) | (subgroup_size))) >> 0u))))) + _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) + _GLF_IDENTITY(1, (1) - 0)) % subgroup_size), (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), ! (! (bool(bvec2(true, true)))))), ! (! (true))) ? ((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u, min(0u, 0u)) ^ _GLF_IDENTITY((subgroup_local_id), max((subgroup_local_id), (subgroup_local_id)))) + 1) % subgroup_size) : _GLF_FUZZED(num_workgroup))))))) << (uint(true) & 0u)) | (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) * uint(_GLF_ONE(1.0, injectionSwitch.y))) + ((subgroup_local_id + 1) % subgroup_size)), ((_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uint(subgroup_size), clamp(uint(subgroup_size), uint(subgroup_size), _GLF_IDENTITY(uint(subgroup_size), (uint(subgroup_size)) | (uint(subgroup_size))))))), subgroup_size)) + ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u)))), ((_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u))))) | 0u)), max(_GLF_IDENTITY(subgroup_local_id, 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u)))), ((_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u))))) | 0u)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u)))), ((_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u))))) | 0u)), (_GLF_IDENTITY(subgroup_local_id, 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u)))), ((_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u))))) | 0u))) | 0u))) + 1) % subgroup_size), max(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uint(subgroup_size), clamp(uint(subgroup_size), uint(subgroup_size), _GLF_IDENTITY(uint(subgroup_size), (uint(subgroup_size)) | (uint(subgroup_size))))))), subgroup_size)) + ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u)))), ((_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u))))) | 0u)), max(_GLF_IDENTITY(subgroup_local_id, 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u)))), ((_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u))))) | 0u)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u)))), ((_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u))))) | 0u)), (_GLF_IDENTITY(subgroup_local_id, 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u)))), ((_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u))))) | 0u))) | 0u))) + 1) % subgroup_size), workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uint(subgroup_size), clamp(uint(subgroup_size), uint(subgroup_size), _GLF_IDENTITY(uint(subgroup_size), (uint(subgroup_size)) | (uint(subgroup_size))))))), subgroup_size)) + ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u)))), ((_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u))))) | 0u)), max(_GLF_IDENTITY(subgroup_local_id, 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u)))), ((_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u))))) | 0u)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u)))), ((_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u))))) | 0u)), (_GLF_IDENTITY(subgroup_local_id, 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u)))), ((_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u))))) | 0u))) | 0u))) + 1) % subgroup_size)))) | (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))) * subgroup_size) * uint(_GLF_ONE(_GLF_IDENTITY(1.0, (1.0) / 1.0), injectionSwitch.y))) + _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + 1) % subgroup_size), clamp(((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(min(subgroup_local_id, subgroup_local_id), 0u ^ (min(subgroup_local_id, subgroup_local_id)))) + 1) % subgroup_size), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + 1) % subgroup_size), clamp(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + 1) % subgroup_size), clamp(((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u)), (0u ^ 0u) ^ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u)))))), subgroup_local_id)) + 1, 0u | (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)))) + 1))) % subgroup_size), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, uint(uvec3(subgroup_local_id, 0u, 0u))), subgroup_local_id)) + 1) % subgroup_size), clamp(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, uint(uvec3(subgroup_local_id, 0u, 0u))), subgroup_local_id)) + 1) % subgroup_size), min((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, uint(uvec3(subgroup_local_id, 0u, 0u))), subgroup_local_id)) + 1), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, uint(uvec3(subgroup_local_id, 0u, 0u))), subgroup_local_id)) + 1), ~ (~ ((_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, uint(uvec3(subgroup_local_id, 0u, 0u))), subgroup_local_id)) + 1))))), (uint(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, uint(uvec3(subgroup_local_id, 0u, 0u))), subgroup_local_id)) + 1), ~ (~ ((_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, uint(uvec3(subgroup_local_id, 0u, 0u))), subgroup_local_id)) + 1)))))) | (uint(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, uint(uvec3(subgroup_local_id, 0u, 0u))), subgroup_local_id)) + 1), ~ (~ ((_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, uint(uvec3(subgroup_local_id, 0u, 0u))), subgroup_local_id)) + 1))))))))) % subgroup_size), ((_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, uint(uvec3(subgroup_local_id, 0u, 0u))), subgroup_local_id)) + 1) % subgroup_size))), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, uint(uvec3(subgroup_local_id, 0u, 0u))), subgroup_local_id)) + 1) % subgroup_size), max(((_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(uvec3(subgroup_local_id, 0u, 0u))), (_GLF_IDENTITY(subgroup_local_id, uint(uvec3(subgroup_local_id, 0u, 0u)))) ^ 0u), subgroup_local_id)) + 1) % subgroup_size), ((_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec3(subgroup_local_id, 0u, 0u)), (0u | 0u) + (uint(uvec3(subgroup_local_id, 0u, 0u))))), subgroup_local_id)) + 1) % subgroup_size))), ((_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, uint(uvec3(subgroup_local_id, 0u, 0u))), subgroup_local_id)) + 1) % subgroup_size))), ((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + 1) % subgroup_size))), ((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + _GLF_IDENTITY(1, int(ivec4(1, 0, 0, 1)))) % subgroup_size), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + 1, max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + 1, max(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + 1, _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + 1)), _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + 1))), min((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + 1, max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + 1, max(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(min(subgroup_local_id, subgroup_local_id), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (min(subgroup_local_id, subgroup_local_id)))) + 1, _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + 1)), _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + 1))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + 1, max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + 1, max(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + 1, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u), min(subgroup_local_id, subgroup_local_id)) + 1)), _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u))) + 1))))) % subgroup_size))), ((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + 1) % subgroup_size))))) | 0u)) << ((0u >> _GLF_IDENTITY(uint(3u), uint(3u))) << _GLF_IDENTITY(uint(3u), uint(3u)))));
 if(_GLF_DEAD(false))
  barrier();
 uint read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (false ? _GLF_IDENTITY(_GLF_FUZZED(14283), 0 | (_GLF_FUZZED(14283))) : _GLF_IDENTITY(4, (4) << 0))), _GLF_IDENTITY(64, 1 * (64)), 0);
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, ! (! (false)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false || (false), _GLF_IDENTITY((false || (false)), ((false || (false))) && true) && true), (_GLF_IDENTITY(_GLF_IDENTITY(false || (false), _GLF_IDENTITY((false || (false)), ((false || (false))) && true) && true), (_GLF_IDENTITY(false || (false), _GLF_IDENTITY((false || (false)), ((false || (false))) && true) && true)) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false || _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false) || (false)))), bool(bvec4((_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))), true, _GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true && (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true && (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec3(_GLF_IDENTITY(bvec3(true && (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec3(bvec3(true && (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))), (bool(_GLF_IDENTITY(bvec3(true && (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec3(_GLF_IDENTITY(bvec3(true && (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec3(bvec3(true && (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))))) || false)), false || (true && (_GLF_IDENTITY(false, bool(bvec3(false, true, true))))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), false || (bool(bvec3(false, true, true)))))), (true && (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, true, true)), false || (bool(bvec3(false, true, true)))), bool(bool(_GLF_IDENTITY(bool(bvec3(false, true, true)), false || (bool(bvec3(false, true, true)))))))))) || false)))))) || false), false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) | (0u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (uint(0u)) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uint(0u)) | (uint(0u))))))], uint(_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((1) << 0, 0 ^ ((1) << 0)), max(_GLF_IDENTITY((1) << 0, 0 ^ ((1) << 0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((1) << 0, 0 ^ (_GLF_IDENTITY((1) << 0, ~ (~ ((1) << 0))))), (_GLF_IDENTITY(_GLF_IDENTITY((1) << 0, 0 ^ ((1) << 0)), clamp(_GLF_IDENTITY((1) << _GLF_IDENTITY(0, int(ivec2(0, 1))), _GLF_IDENTITY(0 ^ ((1) << _GLF_IDENTITY(0, ~ (~ (0)))), clamp(_GLF_IDENTITY(0, (0) + 0) ^ ((1) << 0), 0 ^ (_GLF_IDENTITY((1) << 0, 0 ^ (_GLF_IDENTITY((1) << 0, ((1) << 0) ^ 0)))), 0 ^ ((1) << 0)))), _GLF_IDENTITY((1) << 0, 0 ^ (_GLF_IDENTITY((1) << 0, min((1) << 0, (1) << 0)))), _GLF_IDENTITY((1) << _GLF_IDENTITY(0, (_GLF_IDENTITY(0, 1 * (0))) - (0 | 0)), 0 ^ ((1) << 0))))) << 0), 1 * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((1) << 0, 0 ^ (_GLF_IDENTITY((1) << 0, ~ (~ ((1) << 0))))), (_GLF_IDENTITY(_GLF_IDENTITY((1) << 0, 0 ^ ((1) << 0)), _GLF_IDENTITY(clamp(_GLF_IDENTITY((1) << 0, _GLF_IDENTITY(0 ^ ((1) << 0), clamp(0 ^ ((1) << 0), 0 ^ ((1) << 0), 0 ^ ((1) << 0)))), _GLF_IDENTITY((1) << 0, 0 ^ (_GLF_IDENTITY((1) << 0, min((1) << 0, (1) << 0)))), _GLF_IDENTITY((1) << _GLF_IDENTITY(0, (_GLF_IDENTITY(0, 1 * (0))) - (0 | 0)), 0 ^ ((1) << 0))), (true ? clamp(_GLF_IDENTITY((1) << 0, _GLF_IDENTITY(0 ^ ((1) << 0), clamp(0 ^ ((1) << 0), 0 ^ ((1) << 0), 0 ^ (_GLF_IDENTITY((1) << 0, clamp((1) << 0, _GLF_IDENTITY((1) << 0, ~ (~ ((1) << 0))), (1) << 0)))))), _GLF_IDENTITY((1) << 0, 0 ^ (_GLF_IDENTITY((1) << 0, min((1) << 0, (1) << _GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, clamp(0, 0, 0)))))))), _GLF_IDENTITY((1) << _GLF_IDENTITY(0, (_GLF_IDENTITY(0, 1 * (0))) - (0 | 0)), 0 ^ ((1) << 0))) : _GLF_FUZZED(ivec2(29159, -19453).r))))) << 0), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((1) << 0, 0 ^ (_GLF_IDENTITY((1) << 0, ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(1, 0)), 1 * (int(ivec2(1, 0)))))), (false ? _GLF_FUZZED(min(74714, 21563)) : (1))) << 0))))), (_GLF_IDENTITY(_GLF_IDENTITY((1) << _GLF_IDENTITY(0, min(0, 0)), 0 ^ ((1) << 0)), clamp(_GLF_IDENTITY((_GLF_IDENTITY(1, (1) >> 0)) << 0, _GLF_IDENTITY(0 ^ (_GLF_IDENTITY((1), min((1), (1))) << 0), clamp(0 ^ (_GLF_IDENTITY((1), (_GLF_IDENTITY((1), 0 | (_GLF_IDENTITY((1), ((1)) << 0)))) | ((1))) << 0), 0 ^ ((1) << 0), 0 ^ _GLF_IDENTITY(((1) << 0), ~ (~ (((1) << 0))))))), _GLF_IDENTITY((1) << 0, 0 ^ (_GLF_IDENTITY((1) << 0, min(_GLF_IDENTITY((1), ((1)) >> 0) << 0, (1) << _GLF_IDENTITY(0, max(0, 0)))))), _GLF_IDENTITY((1) << _GLF_IDENTITY(0, (_GLF_IDENTITY(0, 1 * (0))) - (_GLF_IDENTITY(0, ~ (~ (0))) | 0)), 0 ^ ((1) << 0))))) << 0)))))))))), 4, 64, 4);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bvec2(false, true))), bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) || false, bool(bvec3(_GLF_IDENTITY((_GLF_DEAD(false)) || false, true && ((_GLF_DEAD(false)) || false)), true, true))))))), false || _GLF_IDENTITY((_GLF_DEAD(false)), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false))), false || (_GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))))), true && (! (false)))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false))), true && (! (false)))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((false), false || ((false))))), true && (! (false))))))))))))), ! (! ((_GLF_DEAD(false)))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) || false, bool(bvec3(_GLF_IDENTITY((_GLF_DEAD(false)) || false, true && ((_GLF_DEAD(false)) || false)), true, true))))))), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))), _GLF_IDENTITY(true, false || (true)) && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false))), false || (_GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))))), true && (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false), true, false, true)), ! (! (bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false), true, false, true)))))))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false))), true && (! (false)))))), ! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY((false), false || ((false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((false), false || ((false))), (_GLF_IDENTITY((false), false || ((false)))) && true)), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), false || ((false))), (_GLF_IDENTITY((false), false || ((false)))) && true))))))))), true && (_GLF_IDENTITY(! (false), (! (false)) && true))))))), ! (! ((_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY((false), false || ((false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((false), false || ((false))), (_GLF_IDENTITY((false), false || ((false)))) && true)), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), false || ((false))), (_GLF_IDENTITY((false), false || ((false)))) && true))))))))), true && (_GLF_IDENTITY(! (false), (! (false)) && true)))))))))))))))), ! (! ((_GLF_DEAD(false)))))))))))
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, bool(bvec3((_GLF_DEAD(false)) && true, false, false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1)), (_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))) ^ (0u | 0u)))), uint(uvec4(_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1)), 0u, 1u, 0u))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) << 0)) | int(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))) ^ (0u | 0u)))), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1)), (_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1)), (_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1))) / 1u))), 0u, 1u, 0u)), max(uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1)), (_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1)), (_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1))) / 1u))), 0u, 1u, 0u)), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1)), (_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1)), (_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1))) / 1u))), 0u, 1u, 0u))))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))) ^ (0u | 0u)))), uint(uvec4(_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1)), 0u, 1u, 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))) ^ (0u | 0u))), (0u ^ (_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))) ^ (0u | 0u)))) / 1u)), uint(uvec4(_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1)), 0u, 1u, 0u))))) < subgroup_size, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1)), (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(max(subgroup_local_id + 1, subgroup_local_id + 1), (max(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(subgroup_size) : subgroup_local_id))) | (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)))))) + 1)) - 0u))) ^ _GLF_IDENTITY((0u | 0u), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY((0u | 0u), 0u + (_GLF_IDENTITY((0u | 0u), uint(uvec4((0u | 0u), 1u, 0u, 1u)))))))))), uint(uvec4(_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1)), 0u, 1u, 0u))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) << 0)) | int(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))) ^ (0u | 0u)))), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1)), (_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1)), (_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1))) / 1u))), 0u, 1u, 0u)), max(uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1)), (_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1)), (_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1))) / 1u))), 0u, 1u, 0u)), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1)), (_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1)), (_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1))) / 1u))), 0u, 1u, 0u))))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))) ^ (0u | 0u)))), uint(uvec4(_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1)), 0u, 1u, 0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) << 0), (_GLF_IDENTITY(1, (1) << 0)) - 0)) | int(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (0u | 0u))))) ^ (0u | 0u)))), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1)), (_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1)), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1))), (true ? (_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1))) : _GLF_FUZZED(subgroup_id))), (_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1))), (_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1))))) / 1u))), 0u, 1u, 0u)), max(uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1)), (_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1)), (_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1))) / 1u))), 0u, 1u, 0u)), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1)), (_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1)), (_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1))) / 1u))), _GLF_IDENTITY(0u, 1u * (0u)), 1u, 0u))))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))) ^ (0u | 0u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))) ^ (0u | 0u)))))), uint(uvec4(_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1)), 0u, 1u, 0u)))))) - 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))) ^ (0u | 0u))), (0u ^ (_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, max(_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)) + 1, subgroup_local_id + 1))) ^ (0u | 0u)))) / 1u)), uint(uvec4(_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + _GLF_IDENTITY(1, (0 & 52484) | (1)))), 0u, 1u, 0u))))) < subgroup_size))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(bvec3(bvec3(_GLF_DEAD(false), true, false))))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   atomicStore(checker[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, min(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)), (_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))) ^ 0u), virtual_gid)), _GLF_IDENTITY(min(virtual_gid, _GLF_IDENTITY(virtual_gid, 0u + _GLF_IDENTITY((virtual_gid), (_GLF_IDENTITY((virtual_gid), _GLF_IDENTITY(uint(uint((virtual_gid))), (uint(uint((virtual_gid)))) | 0u))) << 0u))), (min(virtual_gid, _GLF_IDENTITY(virtual_gid, 0u + _GLF_IDENTITY((virtual_gid), (_GLF_IDENTITY((virtual_gid), _GLF_IDENTITY(uint(uint((virtual_gid))), (uint(uint((virtual_gid)))) | 0u))) << 0u)))) | 0u))], read, 4, _GLF_IDENTITY(64, (64) | 0), 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), true)))))))), (_GLF_IDENTITY(false, ! (! (false)))) && _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true)), bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-5.3)), float(injectionSwitch.x), bool(true))))) < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   subgroupAll(false);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED((+ -363.862)))) > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, cos(vec2(0.0, 0.0)) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-6.5)), float(injectionSwitch.y), bool(true)))) || false, bool(bool((_GLF_IDENTITY(injectionSwitch, cos(vec2(0.0, 0.0)) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-6.5)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(5863.7655)), bool(false)))), bool(true)))) || false))))))))
      barrier();
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   atomicStore(buf[virtual_gid], _GLF_IDENTITY(read, (read) ^ uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)))), 4, _GLF_IDENTITY(_GLF_IDENTITY(64, 0 | (_GLF_IDENTITY(64, 0 | (64)))), (64) / 1), 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)), 1.0, 1.0, 0.0, sqrt(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, sin(0.0), 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, sin(0.0), 0.0))), 0.0)))))))
    barrier();
   subgroupAll(true);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
