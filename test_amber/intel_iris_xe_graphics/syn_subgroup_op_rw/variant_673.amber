#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_5 {
 bvec2 _f0;
 vec4 _f1;
 uint subgroup_size;
 bvec4 _f2;
 uvec3 _f3;
 uint _f4;
} ;

struct _GLF_struct_4 {
 ivec2 _f0;
 mat4 _f1;
 uvec4 _f2;
 uint _f3;
 mat2x4 _f4;
} ;

struct _GLF_struct_3 {
 uvec4 _f0;
 mat3x4 _f1;
 bvec2 _f2;
} ;

struct _GLF_struct_6 {
 _GLF_struct_3 _f0;
 mat4x2 _f1;
 _GLF_struct_4 _f2;
 _GLF_struct_5 _f3;
 mat4x3 _f4;
} ;

struct _GLF_struct_2 {
 bool _f0;
 mat3x2 _f1;
 mat2x3 _f2;
 mat2x4 _f3;
 mat4 _f4;
} ;

struct _GLF_struct_0 {
 mat2 _f0;
 bvec4 _f1;
 mat4x3 _f2;
 ivec2 _f3;
} ;

struct _GLF_struct_1 {
 vec2 _f0;
 _GLF_struct_0 _f1;
} ;

struct _GLF_struct_7 {
 _GLF_struct_1 _f0;
 _GLF_struct_2 _f1;
 uvec3 _f2;
 mat2 _f3;
 bvec4 _f4;
 mat3x2 _f5;
 _GLF_struct_6 _f6;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false))))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_7 _GLF_struct_replacement_7 = _GLF_struct_7(_GLF_struct_1(vec2(1.0), _GLF_struct_0(mat2(1.0), bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY(bool(bool(true)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))))) || (bool(bool(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true)))))))))), mat4x3(1.0), ivec2(_GLF_IDENTITY(1, (1) + 0)))), _GLF_struct_2(true, mat3x2(1.0), mat2x3(1.0), mat2x4(1.0), mat4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY((- 3.1), _GLF_IDENTITY(clamp((- 3.1), (- 3.1), (- 3.1)), min(clamp((- 3.1), (- 3.1), (- 3.1)), clamp((- 3.1), (- 3.1), (- _GLF_IDENTITY(3.1, clamp(3.1, _GLF_IDENTITY(3.1, mix(float(_GLF_FUZZED(383.339)), float(3.1), bool(true))), 3.1))))))))), float(1.0), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) * 1.0, min((injectionSwitch.x) * 1.0, _GLF_IDENTITY((injectionSwitch.x) * 1.0, mix(float((injectionSwitch.x) * 1.0), float(_GLF_FUZZED(-9360.3153)), bool(false)))))) < injectionSwitch.y))))))), uvec3(1u), _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (_GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(matrixCompMult(mat2(4.1, 1841.4531, -475.578, -2301.8977), mat2(-4312.2091, -1.6, -72.51, -2.6))) : mat2(1.0)))) - mat2(0.0, 0.0, 0.0, 0.0)), transpose(_GLF_IDENTITY(transpose(mat2(1.0)), (transpose(mat2(1.0))) / mat2(1.0, 1.0, 1.0, 1.0)))), bvec4(true), mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec2(0.0, sqrt(0.0))), 0.0 + (float(vec2(0.0, sqrt(0.0))))))))), _GLF_IDENTITY((_GLF_IDENTITY(1.0, (1.0) - 0.0)), clamp(_GLF_IDENTITY((_GLF_IDENTITY(1.0, (1.0) - 0.0)), max((_GLF_IDENTITY(1.0, (1.0) - 0.0)), (_GLF_IDENTITY(1.0, (1.0) - 0.0)))), _GLF_IDENTITY((_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(float((_GLF_IDENTITY(1.0, (1.0) - 0.0))))), (_GLF_IDENTITY(1.0, (1.0) - 0.0)))) - 0.0)), _GLF_struct_6(_GLF_struct_3(uvec4(1u), mat3x4(1.0), bvec2(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, false || (true)), true, true, true))))), mat4x2(1.0), _GLF_struct_4(ivec2(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, ~ (~ (1))) : _GLF_FUZZED(-56684)))))), mat4(1.0), uvec4(1u), _GLF_IDENTITY(1u, uint(uvec2(1u, 0u))), mat2x4(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(true ? 1.0 : _GLF_FUZZED(-64.94), max(true ? 1.0 : _GLF_FUZZED(-64.94), true ? 1.0 : _GLF_FUZZED(-64.94))))), 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), (1.0) + 0.0), 1.0, 1.0)))), _GLF_struct_5(bvec2(true), vec4(1.0), gl_SubgroupSize, bvec4(true), uvec3(1u), 1u), mat4x3(1.0)));
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (false))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).y))), bool(bvec4(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).y))), false, false, false)))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).y)))))))
  return;
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, min(_GLF_IDENTITY(gl_NumWorkGroups.x, max(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x)))), _GLF_IDENTITY(gl_NumWorkGroups.x, min(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) - (0u & 182854u)))))), (true ? _GLF_IDENTITY(gl_NumWorkGroups.x, min(_GLF_IDENTITY(gl_NumWorkGroups.x, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups)).x, uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (gl_NumWorkGroups)).x, min(gl_NumWorkGroups.x, gl_NumWorkGroups.x))))), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups)).x, uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (gl_NumWorkGroups)).x, min(gl_NumWorkGroups.x, gl_NumWorkGroups.x))))), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups)).x, uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (gl_NumWorkGroups)).x, min(gl_NumWorkGroups.x, gl_NumWorkGroups.x))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups)).x, uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (gl_NumWorkGroups)).x, min(gl_NumWorkGroups.x, gl_NumWorkGroups.x))))))), 1u, 0u))), _GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (true ? _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)) : _GLF_FUZZED(uvec3(59501u, 142092u, 76732u)))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (true ? gl_NumWorkGroups : _GLF_FUZZED(uvec3(59501u, 142092u, 76732u)))), clamp(_GLF_IDENTITY(gl_NumWorkGroups, (true ? gl_NumWorkGroups : _GLF_FUZZED(uvec3(59501u, 142092u, 76732u)))), _GLF_IDENTITY(gl_NumWorkGroups, (true ? gl_NumWorkGroups : _GLF_FUZZED(uvec3(59501u, 142092u, 76732u)))), _GLF_IDENTITY(gl_NumWorkGroups, (true ? gl_NumWorkGroups : _GLF_FUZZED(uvec3(59501u, 142092u, 76732u))))))) | _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) | (uvec3(0u, 0u, 0u)))).x) | (gl_NumWorkGroups.x)))), _GLF_IDENTITY(gl_NumWorkGroups.x, min(gl_NumWorkGroups.x, gl_NumWorkGroups.x)))) : _GLF_FUZZED(subgroup_local_id)));
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, (0u ^ 0u) ^ (_GLF_IDENTITY(gl_WorkGroupSize.x, min(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) ^ 0u), gl_WorkGroupSize.x))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), false)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))) || false), _GLF_IDENTITY((false) && true, true && (_GLF_IDENTITY(_GLF_IDENTITY((false) && true, true && (_GLF_IDENTITY((false) && true, bool(bvec4((false) && true, true, true, true))))), false || (_GLF_IDENTITY((false) && true, true && _GLF_IDENTITY((_GLF_IDENTITY((false) && true, bool(bvec4((false) && true, true, true, true)))), ((_GLF_IDENTITY((false) && true, bool(bvec4((false) && true, true, true, true))))) && true))))))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))), injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-75.01) : injectionSwitch.x)), clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, (1) << (0 & -23529))]), vec2(_GLF_FUZZED(2.7), _GLF_IDENTITY(_GLF_FUZZED(5.3), clamp(_GLF_FUZZED(5.3), _GLF_FUZZED(5.3), _GLF_FUZZED(5.3)))), bvec2(false, false))), injectionSwitch)).y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, (1) << (0 & -23529))]), vec2(_GLF_FUZZED(2.7), _GLF_IDENTITY(_GLF_FUZZED(5.3), clamp(_GLF_FUZZED(5.3), _GLF_FUZZED(5.3), _GLF_FUZZED(5.3)))), bvec2(false, false))), injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, (1) << (0 & -23529))]), vec2(_GLF_FUZZED(2.7), _GLF_IDENTITY(_GLF_FUZZED(5.3), clamp(_GLF_FUZZED(5.3), _GLF_FUZZED(5.3), _GLF_FUZZED(5.3)))), bvec2(false, false))), injectionSwitch)).y) - 0.0), _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, (1) << (0 & -23529))]), vec2(_GLF_FUZZED(2.7), _GLF_IDENTITY(_GLF_FUZZED(5.3), clamp(_GLF_FUZZED(5.3), _GLF_FUZZED(5.3), _GLF_FUZZED(5.3)))), bvec2(false, false))), injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, (1) << (0 & -23529))]), vec2(_GLF_FUZZED(2.7), _GLF_IDENTITY(_GLF_FUZZED(5.3), clamp(_GLF_FUZZED(5.3), _GLF_FUZZED(5.3), _GLF_FUZZED(5.3)))), bvec2(false, false))), injectionSwitch)).y))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), _GLF_IDENTITY(! (! (bool(bvec2(false, true)))), ! (_GLF_IDENTITY(! (! (! (bool(bvec2(false, true))))), (! (! (! (bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), true)))))) && true))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(1.0, 1.0, 1.0), min(clamp(1.0, 1.0, 1.0), clamp(1.0, 1.0, 1.0)))), 1.0))) * (injectionSwitch)).y))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true))))), (_GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true)))))) && true)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), (false ? _GLF_FUZZED(-8408.2960) : _GLF_IDENTITY(1.0, min(1.0, 1.0)))), round(length(normalize(1.0))), 1.0, round(length(normalize(1.0))), 1.0, 0.0), mat2(1.0) * (mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), (false ? _GLF_FUZZED(-8408.2960) : _GLF_IDENTITY(1.0, min(1.0, 1.0)))), round(length(normalize(1.0))), 1.0, round(length(normalize(1.0))), 1.0, 0.0))))), min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0))) * (injectionSwitch)).y)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 0.0, 0.0, 0.0, log(1.0), 0.0, abs(1.0)))).x > injectionSwitch.y))))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) ^ (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(0u), uvec3(0u)))).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(0u, (0u) | 0u) ^ 0u) | (_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED((~ subgroup_id)) : subgroup_id)))) * _GLF_struct_replacement_7._f6._f3.subgroup_size + subgroup_local_id;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), false || (bool(_GLF_DEAD(false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_struct_replacement_7._f6._f3.subgroup_size, clamp(_GLF_struct_replacement_7._f6._f3.subgroup_size, _GLF_struct_replacement_7._f6._f3.subgroup_size, _GLF_IDENTITY(_GLF_struct_replacement_7._f6._f3.subgroup_size, (_GLF_struct_replacement_7._f6._f3.subgroup_size) >> (1u ^ 1u)))), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_7._f6._f3.subgroup_size, (subgroup_id * _GLF_struct_replacement_7._f6._f3.subgroup_size) | (_GLF_IDENTITY(159555u & 0u, (159555u & 0u) | (_GLF_IDENTITY(159555u, clamp(159555u, 159555u, 159555u)) & 0u)))) : _GLF_FUZZED(subgroup_local_id), max(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(14.22) : injectionSwitch.y)))) ? workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_7._f6._f3.subgroup_size, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) - 0u)))) / 1u) | (subgroup_id * _GLF_struct_replacement_7._f6._f3.subgroup_size)), (_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_7._f6._f3.subgroup_size, (subgroup_id * _GLF_struct_replacement_7._f6._f3.subgroup_size) ^ 0u)) | (_GLF_IDENTITY(159555u & 0u, (159555u & 0u) | (159555u & 0u)))) : _GLF_FUZZED(subgroup_local_id), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_7._f6._f3.subgroup_size, (subgroup_id * _GLF_struct_replacement_7._f6._f3.subgroup_size) | (_GLF_IDENTITY(159555u & 0u, (_GLF_IDENTITY(159555u & 0u, (159555u & 0u) ^ (1u ^ uint(_GLF_ONE(1.0, injectionSwitch.y))))) | (159555u & 0u)))) : _GLF_FUZZED(subgroup_local_id), max(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_7._f6._f3.subgroup_size, (subgroup_id * _GLF_struct_replacement_7._f6._f3.subgroup_size) | (_GLF_IDENTITY(159555u & 0u, (_GLF_IDENTITY(159555u & 0u, (159555u & 0u) ^ (1u ^ uint(_GLF_ONE(1.0, injectionSwitch.y))))) | (159555u & 0u)))) : _GLF_FUZZED(subgroup_local_id), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_7._f6._f3.subgroup_size, (subgroup_id * _GLF_struct_replacement_7._f6._f3.subgroup_size) | (_GLF_IDENTITY(159555u & 0u, (_GLF_IDENTITY(159555u & 0u, (159555u & 0u) ^ (1u ^ uint(_GLF_ONE(1.0, injectionSwitch.y))))) | (159555u & 0u)))) : _GLF_FUZZED(subgroup_local_id)))), clamp(_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_7._f6._f3.subgroup_size, (subgroup_id * _GLF_struct_replacement_7._f6._f3.subgroup_size) | (_GLF_IDENTITY(159555u & 0u, (159555u & 0u) | (159555u & 0u)))) : _GLF_FUZZED(subgroup_local_id)), 1u * ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(workgroup_base, uint(uvec3(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)), 0u, 1u))) + _GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_7._f6._f3.subgroup_size, (subgroup_id * _GLF_struct_replacement_7._f6._f3.subgroup_size) | (_GLF_IDENTITY(159555u & 0u, (159555u & 0u) | (159555u & 0u)))) : _GLF_FUZZED(subgroup_local_id)))), _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_7._f6._f3.subgroup_size, (subgroup_id * _GLF_struct_replacement_7._f6._f3.subgroup_size) | (_GLF_IDENTITY(159555u & 0u, (159555u & 0u) | (159555u & 0u)))) : _GLF_FUZZED(subgroup_local_id)), uint(uvec2((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_7._f6._f3.subgroup_size, (subgroup_id * _GLF_struct_replacement_7._f6._f3.subgroup_size) | (_GLF_IDENTITY(159555u & 0u, (159555u & 0u) | (159555u & _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) | (0u)))))))) : _GLF_FUZZED(subgroup_local_id)), 1u))), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(952.512) : injectionSwitch.y)))) ? _GLF_IDENTITY(workgroup_base, ~ (~ (_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u)))) + _GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_7._f6._f3.subgroup_size, (subgroup_id * _GLF_struct_replacement_7._f6._f3.subgroup_size) | (_GLF_IDENTITY(159555u & 0u, (159555u & 0u) | (159555u & 0u)))) : _GLF_FUZZED(subgroup_local_id)))) >> 0u), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4((injectionSwitch.x < injectionSwitch.y), false, false, true)))) ? workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_7._f6._f3.subgroup_size, (subgroup_id * _GLF_struct_replacement_7._f6._f3.subgroup_size) | (_GLF_IDENTITY(159555u & 0u, (159555u & 0u) | (159555u & 0u)))) : _GLF_FUZZED(subgroup_local_id))))) + ((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + 1, clamp(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uvec2(subgroup_local_id + 1, 1u)), (uint(uvec2(subgroup_local_id + 1, 1u))) | (uint(uvec2(subgroup_local_id + 1, 1u))))), subgroup_local_id + 1, subgroup_local_id + 1)), 1u), uvec2(uvec2(uvec2(subgroup_local_id + 1, 1u))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_local_id + 1, clamp(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uvec2(subgroup_local_id + 1, 1u)), (uint(uvec2(subgroup_local_id + 1, 1u))) | (uint(uvec2(subgroup_local_id + 1, 1u))))), subgroup_local_id + 1, subgroup_local_id + 1)), 1u), uvec2(uvec2(_GLF_IDENTITY(uvec2(subgroup_local_id + 1, 1u), (uvec2(subgroup_local_id + 1, 1u)) - uvec2(0u, 0u)))))), (uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_local_id + 1, clamp(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uvec2(subgroup_local_id + 1, 1u)), (uint(uvec2(subgroup_local_id + 1, 1u))) | (uint(uvec2(subgroup_local_id + 1, 1u))))), subgroup_local_id + 1, subgroup_local_id + 1)), 1u), uvec2(uvec2(_GLF_IDENTITY(uvec2(subgroup_local_id + 1, 1u), (uvec2(subgroup_local_id + 1, 1u)) - uvec2(0u, 0u))))))) ^ 0u)) >> (0u & (156479u >> 111199u))), uint(uvec3(uint(_GLF_IDENTITY(uvec2(subgroup_local_id + 1, 1u), _GLF_IDENTITY(uvec2(uvec2(uvec2(subgroup_local_id + 1, 1u))), (false ? _GLF_FUZZED(uvec2(172493u, 4304u)) : _GLF_IDENTITY(uvec2(uvec2(uvec2(subgroup_local_id + 1, 1u))), uvec2(0u, 0u) + (uvec2(uvec2(_GLF_IDENTITY(uvec2(subgroup_local_id + 1, 1u), uvec2(uvec4(uvec2(subgroup_local_id + 1, 1u), 1u, 1u))))))))))), 0u, _GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (1u)))) - 0u))))))))) % _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_7._f6._f3.subgroup_size, 0u | (_GLF_struct_replacement_7._f6._f3.subgroup_size)), (_GLF_IDENTITY(_GLF_struct_replacement_7._f6._f3.subgroup_size, 0u | (_GLF_struct_replacement_7._f6._f3.subgroup_size))) | 0u), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_7._f6._f3.subgroup_size, 0u | (_GLF_struct_replacement_7._f6._f3.subgroup_size)), (_GLF_IDENTITY(_GLF_struct_replacement_7._f6._f3.subgroup_size, 0u | (_GLF_struct_replacement_7._f6._f3.subgroup_size))) | 0u), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_7._f6._f3.subgroup_size, 0u | (_GLF_struct_replacement_7._f6._f3.subgroup_size)), (_GLF_IDENTITY(_GLF_struct_replacement_7._f6._f3.subgroup_size, 0u | (_GLF_struct_replacement_7._f6._f3.subgroup_size))) | 0u))))));
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), (_GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), min(max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x), max(injectionSwitch.x, injectionSwitch.x)))) + 0.0))) / round(length(normalize(1.0)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), (_GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), min(max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x), max(_GLF_IDENTITY(injectionSwitch.x, sin(0.0) + (injectionSwitch.x)), injectionSwitch.x)))) + 0.0))) / round(length(normalize(1.0)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), (_GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), min(max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-5.4)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (injectionSwitch.x) - 0.0), injectionSwitch.x), max(injectionSwitch.x, injectionSwitch.x)))) + 0.0))) / round(length(normalize(1.0))))) / 1.0)) - 0.0), (injectionSwitch.x) - 0.0) > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), (_GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), min(max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x), max(injectionSwitch.x, injectionSwitch.x)))) + 0.0), (_GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), (_GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), min(max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x), max(injectionSwitch.x, injectionSwitch.x)))) + 0.0)) / 1.0))) / round(length(normalize(1.0)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), (_GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), min(max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x), max(injectionSwitch.x, injectionSwitch.x)))) + 0.0))) / round(length(normalize(1.0)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), (_GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), min(max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x), max(injectionSwitch.x, injectionSwitch.x)))) + 0.0), (true ? _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), (_GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), min(max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x), max(injectionSwitch.x, injectionSwitch.x)))) + 0.0) : _GLF_FUZZED(-8.7))))) / round(length(normalize(1.0))))) / 1.0)) - 0.0), (injectionSwitch.x) - 0.0) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(length(vec2(-3.3, -64.26))) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y))))))), ! (! (bool(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), (_GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), min(max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x), max(injectionSwitch.x, injectionSwitch.x)))) + 0.0))) / round(length(normalize(1.0)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), (_GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), min(max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x), max(injectionSwitch.x, injectionSwitch.x)))) + 0.0))) / round(length(normalize(1.0)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), (_GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), min(max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x), max(injectionSwitch.x, injectionSwitch.x)))) + 0.0))) / round(length(normalize(1.0))))) / 1.0)) - 0.0), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), (_GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), min(max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x), max(injectionSwitch.x, injectionSwitch.x)))) + 0.0))) / round(length(normalize(1.0)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), (_GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), min(max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x), max(injectionSwitch.x, injectionSwitch.x)))) + 0.0))) / round(length(normalize(1.0)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)), (_GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), min(max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x), max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)))) + 0.0))) / round(length(normalize(1.0))))) / 1.0)) - 0.0)) * 1.0), (injectionSwitch.x) - 0.0) > injectionSwitch.y))))))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], ~ (~ (buf[virtual_gid]))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(buf[virtual_gid], ~ (~ (buf[virtual_gid])))), min(~ (_GLF_IDENTITY(buf[virtual_gid], ~ (~ (buf[virtual_gid])))), ~ (_GLF_IDENTITY(buf[virtual_gid], ~ (~ (buf[virtual_gid]))))))))) >> 0u, _GLF_IDENTITY(((_GLF_IDENTITY(buf[virtual_gid], ~ (~ (buf[virtual_gid])))) >> 0u), (_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(buf[virtual_gid], ~ (~ (buf[virtual_gid])))) >> 0u), (((_GLF_IDENTITY(buf[virtual_gid], ~ (~ (buf[virtual_gid])))) >> 0u)) | (((_GLF_IDENTITY(buf[virtual_gid], ~ (~ (buf[virtual_gid])))) >> 0u))), clamp(_GLF_IDENTITY(((_GLF_IDENTITY(buf[virtual_gid], ~ (~ (buf[virtual_gid])))) >> 0u), (((_GLF_IDENTITY(buf[virtual_gid], ~ (~ (buf[virtual_gid])))) >> 0u)) | (((_GLF_IDENTITY(buf[virtual_gid], ~ (~ (buf[virtual_gid])))) >> 0u))), _GLF_IDENTITY(((_GLF_IDENTITY(buf[virtual_gid], ~ (~ (buf[virtual_gid])))) >> 0u), (((_GLF_IDENTITY(buf[virtual_gid], ~ (~ (buf[virtual_gid])))) >> 0u)) | (((_GLF_IDENTITY(buf[virtual_gid], ~ (~ (buf[virtual_gid])))) >> 0u))), _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(buf[virtual_gid], ~ (~ (buf[virtual_gid])))) >> 0u), (((_GLF_IDENTITY(buf[virtual_gid], ~ (~ (buf[virtual_gid])))) >> 0u)) | (((_GLF_IDENTITY(buf[virtual_gid], ~ (~ (buf[virtual_gid])))) >> 0u))), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(((_GLF_IDENTITY(buf[virtual_gid], ~ (~ (buf[virtual_gid])))) >> 0u), (((_GLF_IDENTITY(buf[virtual_gid], ~ (~ (buf[virtual_gid])))) >> 0u)) | (((_GLF_IDENTITY(buf[virtual_gid], ~ (~ (buf[virtual_gid])))) >> 0u)))))))) - 0u) | 0u)), 4, _GLF_IDENTITY(64, (64) | (64)), 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) >> 0u, clamp(_GLF_IDENTITY((subgroup_local_id), ~ (~ (_GLF_IDENTITY((subgroup_local_id), 1u * ((subgroup_local_id)))))) >> 0u, _GLF_IDENTITY((subgroup_local_id) >> 0u, ((subgroup_local_id) >> 0u) * 1u), (subgroup_local_id) >> 0u))) + 1 < _GLF_struct_replacement_7._f6._f3.subgroup_size)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), (_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ((false)) && true)))) && true))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)))), ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)) && true), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), mix(vec2(_GLF_FUZZED((3.5)), _GLF_FUZZED(-0.7)), vec2(((injectionSwitch) / vec2(1.0, 1.0))[0], ((injectionSwitch) / vec2(1.0, 1.0))[1]), bvec2(true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y))))))))))).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0)), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(6.9)), bool(false))))).x > injectionSwitch.y)) && true))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)) && _GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, bool(bvec2(true, true))))), true && (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), mix(vec2(_GLF_FUZZED((3.5)), _GLF_FUZZED(-0.7)), vec2(((injectionSwitch) / vec2(1.0, 1.0))[0], ((injectionSwitch) / vec2(1.0, 1.0))[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0)), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(6.9)), bool(false))))).x > injectionSwitch.y)) && true), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), mix(_GLF_IDENTITY(vec2(_GLF_FUZZED((3.5)), _GLF_FUZZED(-0.7)), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(vec2(_GLF_FUZZED((3.5)), _GLF_FUZZED(-0.7)), mat2(1.0) * (vec2(_GLF_FUZZED((3.5)), _GLF_FUZZED(-0.7)))))), vec2(((injectionSwitch) / vec2(1.0, 1.0))[0], ((injectionSwitch) / vec2(1.0, 1.0))[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))).x > injectionSwitch.y), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0)), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(6.9)), bool(false))))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, sin(0.0), 1.0, 1.0, log(1.0), 0.0, 0.0, 0.0), (true ? mat3(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, sin(0.0), 1.0, 1.0, log(1.0), 0.0, 0.0, 0.0) : _GLF_FUZZED(mat3(1576.4870, 77.70, 9.4, -638.279, -4.9, -0.9, 797.633, -369.453, 138.854)))))), float(_GLF_IDENTITY(float(1.0), (float(1.0)) / determinant(mat2(1.0, 1.0, 0.0, 1.0))))), 1.0)), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(6.9)), bool(false)))), (true ? vec2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, sin(0.0), 1.0, 1.0, log(1.0), 0.0, 0.0, 0.0), (true ? mat3(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, sin(0.0), 1.0, 1.0, log(1.0), 0.0, 0.0, 0.0) : _GLF_FUZZED(mat3(1576.4870, 77.70, 9.4, -638.279, -4.9, -0.9, 797.633, -369.453, 138.854)))))), float(_GLF_IDENTITY(float(1.0), (float(1.0)) / determinant(mat2(1.0, 1.0, 0.0, 1.0))))), 1.0)), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(6.9)), bool(false)))) : _GLF_FUZZED(vec2(-166.164, -3.9)))))) + vec2(0.0, 0.0)).x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0)), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(6.9)), bool(false))))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, sin(0.0), 1.0, 1.0, log(1.0), 0.0, 0.0, 0.0), (true ? mat3(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, sin(0.0), 1.0, 1.0, log(1.0), 0.0, 0.0, 0.0) : _GLF_FUZZED(mat3(1576.4870, 77.70, 9.4, -638.279, -4.9, -0.9, 797.633, -369.453, 138.854)))))), float(_GLF_IDENTITY(float(1.0), (float(1.0)) / determinant(mat2(1.0, 1.0, 0.0, 1.0))))), 1.0)), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(6.9)), bool(false)))), (true ? vec2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, sin(0.0), 1.0, 1.0, log(1.0), 0.0, 0.0, 0.0), (true ? mat3(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, sin(0.0), 1.0, 1.0, log(1.0), 0.0, 0.0, 0.0) : _GLF_FUZZED(mat3(1576.4870, 77.70, 9.4, -638.279, -4.9, -0.9, 797.633, -369.453, 138.854)))))), float(_GLF_IDENTITY(float(1.0), (float(1.0)) / determinant(mat2(1.0, 1.0, 0.0, 1.0))))), 1.0)), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(6.9)), bool(false)))) : _GLF_FUZZED(vec2(-166.164, -3.9)))))) + vec2(0.0, 0.0)).x) + _GLF_ZERO(0.0, injectionSwitch.x)) > injectionSwitch.y)) && true))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)) && true), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), mix(vec2(_GLF_FUZZED((3.5)), _GLF_FUZZED(-0.7)), vec2(((injectionSwitch) / vec2(1.0, 1.0))[0], ((injectionSwitch) / vec2(1.0, 1.0))[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0)), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(6.9)), bool(false))))).x > injectionSwitch.y)) && true)))), (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(1327.8875) : injectionSwitch.y)))))) && true), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), mix(vec2(_GLF_FUZZED((3.5)), _GLF_FUZZED(_GLF_IDENTITY(-0.7, float(_GLF_IDENTITY(mat3x4(-0.7, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, 0.0), (mat3x4(-0.7, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, 0.0)) - mat3x4(0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) / 1.0)) - 0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0)))))), vec2(((injectionSwitch) / vec2(1.0, 1.0))[0], (_GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), _GLF_IDENTITY(((injectionSwitch) / vec2(1.0, 1.0)) * mat2(1.0), (((injectionSwitch) / vec2(1.0, 1.0)) * mat2(1.0)) / vec2(1.0, 1.0))))[1]), bvec2(true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(4946.3779) : injectionSwitch.x)) < injectionSwitch.y)))) && true)))))).x > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), clamp(_GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), (min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0)) + 0.0), _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), float(mat4(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, sqrt(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), 1.0 * (min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0)))))), clamp(_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), clamp(_GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), (min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0)) + 0.0), _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), float(mat4(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, sqrt(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), 1.0 * (min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), clamp(_GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), (min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0)) + 0.0), _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), float(mat4(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, sqrt(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), 1.0 * (min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0)))))), float(mat3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), clamp(_GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), (min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0)) + 0.0), _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), float(mat4(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, sqrt(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), 1.0 * (min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0)))))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), clamp(_GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), (min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0)) + 0.0), _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), float(mat4(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, sqrt(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), 1.0 * (min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0)))))))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(6.9)), bool(false))))).x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), clamp(_GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), (min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0)) + 0.0), _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), float(mat4(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, sqrt(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), 1.0 * (min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0)))))), clamp(_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), clamp(_GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), (min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0)) + 0.0), _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), float(mat4(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, sqrt(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), 1.0 * (min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), clamp(_GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), (min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0)) + 0.0), _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), float(mat4(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, sqrt(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), 1.0 * (min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0)))))), float(mat3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), clamp(_GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), (min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0)) + 0.0), _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), float(mat4(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, sqrt(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), 1.0 * (min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0)))))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), clamp(_GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), (min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0)) + 0.0), _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), float(mat4(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, sqrt(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), 1.0 * (min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0)))))))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(6.9)), bool(false))))).x > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), clamp(_GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), (min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0)) + 0.0), _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), float(mat4(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, sqrt(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), 1.0 * (min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0)))))), clamp(_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), clamp(_GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), (min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0)) + 0.0), _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), float(mat4(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, sqrt(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), 1.0 * (min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), clamp(_GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), (min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0)) + 0.0), _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), float(mat4(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, sqrt(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), 1.0 * (min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0)))))), float(mat3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), clamp(_GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), (min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0)) + 0.0), _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), float(mat4(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, sqrt(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), 1.0 * (min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0)))))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), clamp(_GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), (min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0)) + 0.0), _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), float(mat4(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, sqrt(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), 1.0 * (min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0)))))))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(6.9)), bool(false))))).x > injectionSwitch.y), bool(bvec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), clamp(_GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), (min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0)) + 0.0), _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), float(mat4(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, sqrt(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), 1.0 * (min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0)))))), clamp(_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), clamp(_GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), (min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0)) + 0.0), _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), float(mat4(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, sqrt(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), 1.0 * (min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), clamp(_GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), (min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0)) + 0.0), _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), float(mat4(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, sqrt(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), 1.0 * (min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0)))))), float(mat3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), clamp(_GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), (min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0)) + 0.0), _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), float(mat4(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, sqrt(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), 1.0 * (min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0)))))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), clamp(_GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), (min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0)) + 0.0), _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), float(mat4(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, sqrt(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), 1.0 * (min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0)))))))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(6.9)), bool(false))))).x > injectionSwitch.y), true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false, true)), (bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), clamp(_GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), (min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0)) + 0.0), _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), float(mat4(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, sqrt(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), 1.0 * (min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0)))))), clamp(_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), clamp(_GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), (min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0)) + 0.0), _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), float(mat4(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, sqrt(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), 1.0 * (min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), clamp(_GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), (min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0)) + 0.0), _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), float(mat4(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, sqrt(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), 1.0 * (min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0)))))), float(mat3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), clamp(_GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), (min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0)) + 0.0), _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), float(mat4(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, sqrt(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), 1.0 * (min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0)))))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), clamp(_GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), (min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0)) + 0.0), _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), float(mat4(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, sqrt(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), 1.0 * (min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0)))))))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(6.9)), bool(false))))).x > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), clamp(_GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), (min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0)) + 0.0), _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), float(mat4(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, sqrt(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), 1.0 * (min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0)))))), clamp(_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), clamp(_GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), (min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0)) + 0.0), _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), float(mat4(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, sqrt(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), 1.0 * (min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), clamp(_GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), (min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0)) + 0.0), _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), float(mat4(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, sqrt(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), 1.0 * (min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0)))))), float(mat3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), clamp(_GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), (min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0)) + 0.0), _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), float(mat4(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, sqrt(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), 1.0 * (min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0)))))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), clamp(_GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), (min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0)) + 0.0), _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), float(mat4(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, sqrt(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), 1.0 * (min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0)))))))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(6.9)), bool(false))))).x > injectionSwitch.y), bool(bvec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), clamp(_GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), (min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0)) + 0.0), _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), float(mat4(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, sqrt(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), 1.0 * (min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0)))))), clamp(_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), clamp(_GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), (min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0)) + 0.0), _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), float(mat4(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, sqrt(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), 1.0 * (min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), clamp(_GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), (min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0)) + 0.0), _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), float(mat4(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, sqrt(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), 1.0 * (min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0)))))), float(mat3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), clamp(_GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), (min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0)) + 0.0), _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), float(mat4(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, sqrt(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), 1.0 * (min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0)))))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), clamp(_GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), (min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0)) + 0.0), _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), float(mat4(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, sqrt(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0), 1.0 * (min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0)))))))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(6.9)), bool(false))))).x > injectionSwitch.y), true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false, true))) || false))) && true))))) && true)))) && true))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! _GLF_IDENTITY((! (false)), bool(bvec4(_GLF_IDENTITY((! (false)), false || ((! (false)))), true, true, false))), false || (! (! (false))))) || false))))) || (_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ((false)) || false))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bvec2(_GLF_IDENTITY((false), ((false)) || false), _GLF_IDENTITY(true, true && (true))))))))) || (_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) || false))) && _GLF_IDENTITY((false), false || ((false)))))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bvec2((false), true))))))) || (_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) || false))) && (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bvec2((false), true))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bvec2((false), true))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bvec2((false), true)))))))), bool(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bvec2((false), true)))))))), false)))))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bvec2((false), true))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bvec2((false), true)))))))), bool(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bvec2((false), true)))))))), false))))))))))) || (_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY((! (true)) || false, bool(_GLF_IDENTITY(bvec2((! (true)) || false, false), bvec2(bvec3(bvec2((! (true)) || false, false), false)))))))) && (false)))))))) || false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-55.28)))))))
          barrier();
         return;
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))))
          barrier();
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     barrier();
    }
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(false);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) && (! (injectionSwitch.x > injectionSwitch.y)))))))) || false)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (true ? mat2(1.0) * (injectionSwitch) : _GLF_FUZZED(vec2(24.57, -24.18))))).x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(false), true && _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)), float(mat2(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)), length(0.0), 1.0, 1.0))) < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + log(1.0)))))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), bool(bvec2((_GLF_IDENTITY(false, true && (false))), true))), ! _GLF_IDENTITY((! (! (false))), true && ((! (! (false))))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   atomicStore(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read, (1u ^ (1u & 1u)) ^ (read)), (true ? _GLF_IDENTITY(read, _GLF_IDENTITY((true ? read : _GLF_FUZZED(52727u)), min((true ? read : _GLF_FUZZED(52727u)), _GLF_IDENTITY((true ? read : _GLF_FUZZED(52727u)), ((true ? read : _GLF_FUZZED(52727u))) - 0u)))) : _GLF_FUZZED(168536u))), max(read, _GLF_IDENTITY(read, (read) / 1u))), 4, 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec3(_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))), true, false))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   subgroupAll(_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), ! (! ((true)))))));
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) || false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) || false))))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
