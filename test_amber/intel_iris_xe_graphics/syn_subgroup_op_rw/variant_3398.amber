#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), ! (! (bool(bvec3(false, false, true))))))), false || (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), ! (! (bool(bvec3(false, false, true))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x, mix(float(_GLF_FUZZED(-2.1)), float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x), bool(true))) > injectionSwitch.y), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x, mix(float(_GLF_FUZZED(-2.1)), float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x), bool(true))) > injectionSwitch.y)) && true))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) && true))))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), (injectionSwitch.x > injectionSwitch.y)))))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)), bool(bvec4(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)), true, false, true)))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), bool(bvec2(! (_GLF_IDENTITY(false, false || (false))), false)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, _GLF_IDENTITY(length(_GLF_IDENTITY(abs(vec3(0.0, 0.0, 0.0)), clamp(abs(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(abs(vec3(0.0, 0.0, 0.0)), min(_GLF_IDENTITY(abs(vec3(0.0, 0.0, 0.0)), vec3(mat4x3(abs(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0))), _GLF_IDENTITY(abs(vec3(0.0, 0.0, 0.0)), max(abs(vec3(0.0, 0.0, 0.0)), abs(vec3(0.0, 0.0, 0.0)))))), abs(vec3(0.0, 0.0, 0.0))))), float(vec2(length(_GLF_IDENTITY(abs(vec3(0.0, 0.0, 0.0)), clamp(abs(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(abs(vec3(0.0, 0.0, 0.0)), max(abs(vec3(0.0, 0.0, 0.0)), abs(vec3(0.0, 0.0, 0.0)))), min(_GLF_IDENTITY(abs(vec3(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-0.8)), bool(false))), 0.0)), vec3(mat4x3(_GLF_IDENTITY(abs(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(mat3(1.0) * (abs(vec3(0.0, 0.0, 0.0))), min(mat3(1.0) * (abs(vec3(0.0, 0.0, 0.0))), _GLF_IDENTITY(mat3(1.0) * (abs(vec3(0.0, 0.0, 0.0))), mix(vec3(_GLF_FUZZED(5.8), _GLF_FUZZED(-840.862), (mat3(1.0) * (abs(vec3(0.0, 0.0, 0.0))))[2]), vec3((mat3(1.0) * (abs(vec3(0.0, 0.0, 0.0))))[0], (mat3(1.0) * (abs(vec3(0.0, 0.0, 0.0))))[1], _GLF_FUZZED(33.45)), bvec3(true, true, false)))))), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0))), _GLF_IDENTITY(abs(vec3(0.0, 0.0, 0.0)), max(abs(vec3(0.0, 0.0, 0.0)), abs(vec3(0.0, 0.0, 0.0)))))), abs(vec3(0.0, 0.0, 0.0))))), 1.0))), abs(1.0), 1.0, _GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch)))[_GLF_IDENTITY(0, (0) - 0)], _GLF_IDENTITY((injectionSwitch)[1], max(_GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1])), (injectionSwitch)[1]))), vec2(_GLF_FUZZED(-0.7), _GLF_FUZZED(972.523)), bvec2(false, false))).y, mix(float(_GLF_FUZZED(26.60)), float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch)))[_GLF_IDENTITY(0, (0) - 0)], _GLF_IDENTITY((injectionSwitch)[1], max(_GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1])), (injectionSwitch)[1]))), vec2(_GLF_FUZZED(-0.7), _GLF_FUZZED(972.523)), bvec2(false, false))).y), bool(true))), (_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y) + 0.0)) - 0.0)), 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), (false ? _GLF_FUZZED(27.30) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0 * (_GLF_IDENTITY(0.0, max(0.0, 0.0)))))), 0.0))) - 0.0)), mat3(mat3(mat3(injectionSwitch, 1.0, length(abs(_GLF_IDENTITY(vec3(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0))), 0.0), _GLF_IDENTITY((vec3(0.0, 0.0, 0.0)) * mat3(1.0), vec3(mat4((vec3(0.0, 0.0, 0.0)) * mat3(1.0), 1.0, 0.0, sin(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)))))), abs(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_IDENTITY(_GLF_FUZZED(-7.9), clamp(_GLF_FUZZED(-7.9), _GLF_FUZZED(-7.9), _GLF_FUZZED(-7.9)))), bool(false)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), (_GLF_IDENTITY(1.0, min(1.0, 1.0))) / 1.0), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), (_GLF_IDENTITY(1.0, min(1.0, 1.0))) / 1.0), min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), (_GLF_IDENTITY(1.0, min(1.0, 1.0))) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), (_GLF_IDENTITY(1.0, min(1.0, 1.0))) / 1.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), (_GLF_IDENTITY(1.0, min(1.0, 1.0))) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), (_GLF_IDENTITY(1.0, min(1.0, 1.0))) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), (_GLF_IDENTITY(1.0, min(1.0, 1.0))) / 1.0))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), (_GLF_IDENTITY(1.0, min(1.0, 1.0))) / 1.0), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), (_GLF_IDENTITY(1.0, min(1.0, 1.0))) / 1.0), max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), (_GLF_IDENTITY(1.0, min(1.0, 1.0))) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), (_GLF_IDENTITY(1.0, min(1.0, 1.0))) / 1.0))) : _GLF_FUZZED(-359.892))))), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(1.0, float(mat2(_GLF_IDENTITY(1.0, float(mat4x2(1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))), sqrt(0.0), 0.0, 0.0))), 0.0))))), max(_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, length(abs(_GLF_IDENTITY(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0))), vec3(mat3(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0))), _GLF_IDENTITY(0.0, (0.0) + 0.0), 1.0, 1.0, tan(_GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0))))), 1.0, 1.0))))), abs(1.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0)), mat3(mat3(mat3(injectionSwitch, 1.0, _GLF_IDENTITY(length(abs(vec3(0.0, 0.0, 0.0))), min(length(abs(vec3(0.0, 0.0, 0.0))), _GLF_IDENTITY(length(abs(vec3(0.0, 0.0, 0.0))), clamp(_GLF_IDENTITY(length(abs(vec3(0.0, 0.0, 0.0))), (length(abs(vec3(0.0, 0.0, 0.0)))) * 1.0), length(abs(vec3(0.0, 0.0, 0.0))), length(abs(vec3(0.0, 0.0, 0.0))))))), abs(1.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(mat3x4(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(1.0, sqrt(0.0) + (1.0)))), _GLF_IDENTITY(max(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0), mix(float(_GLF_FUZZED(-418.658)), float(max(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), bool(true)))), 1.0, 1.0)), 0.0))))), (_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, length(abs(vec3(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0))), _GLF_IDENTITY(abs(1.0), max(_GLF_IDENTITY(abs(1.0), mix(float(_GLF_IDENTITY(abs(1.0), 1.0 * (abs(1.0)))), float(_GLF_IDENTITY(_GLF_FUZZED(48.65), min(_GLF_IDENTITY(_GLF_FUZZED(48.65), _GLF_IDENTITY(float(float(_GLF_FUZZED(48.65))), (float(float(_GLF_FUZZED(48.65)))) * 1.0)), _GLF_FUZZED(48.65)))), bool(false))), abs(1.0))), 1.0, _GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), injectionSwitch.y), 1.0, 0.0), (mat3(injectionSwitch, 1.0, length(abs(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), _GLF_IDENTITY((vec3(0.0, 0.0, 0.0)) * mat3(1.0), ((vec3(0.0, 0.0, 0.0)) * mat3(1.0)) / vec3(1.0, 1.0, 1.0))))), _GLF_IDENTITY(abs(1.0), max(_GLF_IDENTITY(abs(1.0), mix(float(_GLF_IDENTITY(abs(1.0), _GLF_IDENTITY(1.0 * (abs(1.0)), max(1.0 * (abs(1.0)), _GLF_IDENTITY(1.0 * (abs(1.0)), clamp(1.0 * (abs(1.0)), 1.0 * (abs(1.0)), 1.0 * (abs(1.0)))))))), float(_GLF_FUZZED(48.65)), bool(false))), abs(1.0))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0)) * mat3(1.0)), mat3(mat3(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, length(abs(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(float((injectionSwitch != injectionSwitch))))), 0.0, 0.0))), abs(1.0), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(dot(vec2(_GLF_IDENTITY(-25.55, clamp(_GLF_IDENTITY(-25.55, min(_GLF_IDENTITY(-25.55, clamp(-25.55, -25.55, -25.55)), -25.55)), -25.55, -25.55)), 7.1), step(vec2(753.951, -9.6), vec2(4589.5273, 4.7)))) : 1.0)), _GLF_ONE(_GLF_IDENTITY(1.0, (false ? _GLF_IDENTITY(_GLF_FUZZED(-30.32), (_GLF_FUZZED(-30.32)) / 1.0) : 1.0)), injectionSwitch.y), 1.0, 0.0), mat3(1.0) * (mat3(injectionSwitch, 1.0, length(abs(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(float((injectionSwitch != injectionSwitch))))), 0.0, 0.0))), abs(1.0), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(dot(vec2(_GLF_IDENTITY(-25.55, clamp(_GLF_IDENTITY(-25.55, min(_GLF_IDENTITY(-25.55, clamp(-25.55, -25.55, -25.55)), -25.55)), -25.55, -25.55)), 7.1), step(vec2(753.951, -9.6), vec2(4589.5273, 4.7)))) : 1.0)), _GLF_ONE(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-30.32) : 1.0)), injectionSwitch.y), 1.0, 0.0))))))), max(vec2(_GLF_IDENTITY(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, length(abs(vec3(0.0, 0.0, 0.0))), _GLF_IDENTITY(abs(1.0), max(_GLF_IDENTITY(abs(_GLF_IDENTITY(1.0, (1.0) - 0.0)), mix(float(_GLF_IDENTITY(abs(1.0), 1.0 * (abs(1.0)))), float(_GLF_FUZZED(48.65)), bool(false))), abs(1.0))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0), (mat3(injectionSwitch, 1.0, length(abs(vec3(0.0, 0.0, 0.0))), _GLF_IDENTITY(abs(1.0), max(_GLF_IDENTITY(abs(1.0), mix(float(_GLF_IDENTITY(abs(1.0), 1.0 * (abs(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)))))), float(_GLF_FUZZED(48.65)), _GLF_IDENTITY(bool(false), (bool(false)) || false))), _GLF_IDENTITY(abs(1.0), (false ? _GLF_FUZZED(-9725.9364) : _GLF_IDENTITY(abs(1.0), clamp(abs(1.0), abs(1.0), abs(1.0))))))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0)) * mat3(1.0)), mat3(mat3(mat3(injectionSwitch, 1.0, length(_GLF_IDENTITY(abs(vec3(_GLF_IDENTITY(0.0, _GLF_IDENTITY((true ? 0.0 : _GLF_FUZZED(float((injectionSwitch != injectionSwitch)))), mix(float(_GLF_FUZZED(4.1)), float((true ? 0.0 : _GLF_FUZZED(float((injectionSwitch != injectionSwitch))))), bool(true)))), 0.0, 0.0)), (false ? _GLF_FUZZED(vec3(-1.4, -9.6, 7527.4689)) : _GLF_IDENTITY(abs(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(float((injectionSwitch != injectionSwitch))))), 0.0, 0.0)), (_GLF_IDENTITY(abs(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(float((injectionSwitch != injectionSwitch))))), 0.0, 0.0)), mix(vec3(_GLF_FUZZED(762.351), (abs(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(float((injectionSwitch != injectionSwitch))))), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(float(0.0)), (true ? float(float(0.0)) : _GLF_FUZZED(inversesqrt(-0.7))))), 0.0)))[1], (abs(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(float((injectionSwitch != injectionSwitch))))), 0.0, 0.0)))[2]), vec3((abs(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(float((injectionSwitch != injectionSwitch))))), 0.0, 0.0)))[0], _GLF_FUZZED(6.4), _GLF_FUZZED(1.9)), bvec3(true, false, false)))) / vec3(1.0, 1.0, 1.0))))), abs(1.0), _GLF_IDENTITY(1.0, (false ? _GLF_IDENTITY(_GLF_FUZZED(dot(vec2(-25.55, 7.1), step(vec2(753.951, -9.6), vec2(4589.5273, 4.7)))), (_GLF_IDENTITY(_GLF_FUZZED(dot(vec2(-25.55, 7.1), step(vec2(753.951, -9.6), vec2(4589.5273, 4.7)))), float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(_GLF_FUZZED(dot(vec2(-25.55, 7.1), step(vec2(753.951, -9.6), vec2(4589.5273, 4.7)))), 0.0 + (_GLF_FUZZED(dot(vec2(-25.55, 7.1), step(vec2(753.951, -9.6), vec2(4589.5273, 4.7)))))), abs(0.0), 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0, 1.0, 0.0, 0.0, exp(0.0)), mat3x4(mat4(mat3x4(_GLF_IDENTITY(_GLF_FUZZED(dot(vec2(-25.55, 7.1), step(vec2(753.951, -9.6), vec2(4589.5273, 4.7)))), 0.0 + (_GLF_FUZZED(dot(vec2(-25.55, 7.1), step(vec2(753.951, -9.6), vec2(4589.5273, 4.7)))))), abs(0.0), 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0, 1.0, 0.0, 0.0, exp(0.0)))))))) + sin(0.0)) : 1.0)), _GLF_ONE(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(-30.32) : 1.0, clamp(false ? _GLF_FUZZED(-30.32) : 1.0, false ? _GLF_FUZZED(-30.32) : 1.0, false ? _GLF_FUZZED(-30.32) : 1.0)))), injectionSwitch.y), 1.0, 0.0))))), vec2(_GLF_IDENTITY(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, length(abs(vec3(0.0, 0.0, 0.0))), _GLF_IDENTITY(abs(1.0), max(_GLF_IDENTITY(abs(1.0), mix(float(_GLF_IDENTITY(abs(1.0), 1.0 * (_GLF_IDENTITY(abs(1.0), (abs(1.0)) + 0.0)))), float(_GLF_FUZZED(48.65)), bool(false))), abs(1.0))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0), (mat3(injectionSwitch, 1.0, length(abs(vec3(0.0, 0.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(abs(1.0), max(_GLF_IDENTITY(abs(1.0), mix(float(_GLF_IDENTITY(abs(1.0), 1.0 * (abs(1.0)))), float(_GLF_FUZZED(48.65)), bool(false))), abs(1.0))), float(mat2x3(_GLF_IDENTITY(abs(1.0), max(_GLF_IDENTITY(abs(1.0), mix(float(_GLF_IDENTITY(abs(1.0), 1.0 * (abs(1.0)))), float(_GLF_FUZZED(48.65)), bool(false))), abs(1.0))), 1.0, 1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(128.153) : 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0)))), sqrt(1.0), 0.0))), 1.0, _GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-2375.2360)), float(injectionSwitch.y), bool(true)))), (_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-2375.2360)), float(injectionSwitch.y), bool(true))))) - 0.0), 1.0, 0.0)) * mat3(1.0)), mat3(_GLF_IDENTITY(mat3(mat3(injectionSwitch, 1.0, length(abs(vec3(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(mat3(0.0, 1.0, 0.0, log(1.0), 0.0, 1.0, 0.0, 0.0, 0.0))), 0.0)) : _GLF_FUZZED(float(_GLF_IDENTITY((injectionSwitch != injectionSwitch), ((injectionSwitch != injectionSwitch)) || false))))), 0.0, 0.0))), abs(1.0), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(dot(vec2(-25.55, 7.1), step(vec2(753.951, -9.6), vec2(4589.5273, 4.7)))) : 1.0)), _GLF_ONE(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(_GLF_IDENTITY(-30.32, (true ? _GLF_IDENTITY(-30.32, (-30.32) / 1.0) : _GLF_FUZZED(atan(11.20, 14.38))))) : 1.0)), injectionSwitch.y), 1.0, 0.0)), (true ? _GLF_IDENTITY(mat3(mat3(injectionSwitch, 1.0, length(abs(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(float(_GLF_IDENTITY((injectionSwitch != injectionSwitch), ((injectionSwitch != injectionSwitch)) || false))))), 0.0, 0.0))), abs(1.0), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(dot(vec2(-25.55, 7.1), step(vec2(753.951, -9.6), vec2(4589.5273, 4.7)))) : 1.0)), _GLF_ONE(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(_GLF_IDENTITY(-30.32, _GLF_IDENTITY((true ? _GLF_IDENTITY(-30.32, (-30.32) / 1.0) : _GLF_FUZZED(atan(11.20, 14.38))), mix(float((true ? _GLF_IDENTITY(-30.32, (-30.32) / 1.0) : _GLF_FUZZED(atan(11.20, 14.38)))), float(_GLF_FUZZED((-2846.7731))), bool(false))))) : 1.0)), injectionSwitch.y), 1.0, 0.0)), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(mat3(injectionSwitch, 1.0, length(abs(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(float(_GLF_IDENTITY((injectionSwitch != injectionSwitch), ((injectionSwitch != injectionSwitch)) || _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) || false))))))))), 0.0, 0.0))), abs(1.0), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(dot(vec2(-25.55, 7.1), step(vec2(753.951, -9.6), vec2(4589.5273, 4.7)))) : 1.0)), _GLF_ONE(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(_GLF_IDENTITY(-30.32, (true ? _GLF_IDENTITY(-30.32, (-30.32) / 1.0) : _GLF_FUZZED(atan(11.20, 14.38))))) : 1.0)), injectionSwitch.y), 1.0, 0.0)))) : _GLF_FUZZED(mat3(mat4x2(-3446.9800, -632.524, -8.0, -2578.7461, 4198.8069, 941.764, -3.0, 546.240))))))))))) / vec2(1.0, 1.0)), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, length(_GLF_IDENTITY(abs(vec3(0.0, 0.0, 0.0)), mix(vec3(_GLF_FUZZED((float(30725))), _GLF_FUZZED(427.094), _GLF_FUZZED(-6.4)), vec3((abs(vec3(0.0, 0.0, 0.0)))[0], (abs(vec3(0.0, 0.0, 0.0)))[1], (abs(vec3(0.0, 0.0, 0.0)))[2]), bvec3(true, true, true)))), abs(1.0), 1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, exp(0.0), 0.0, sin(0.0), 0.0, 1.0))).y), 1.0, 0.0), mat3(mat3(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, _GLF_IDENTITY(length(_GLF_IDENTITY(abs(vec3(0.0, 0.0, 0.0)), mix(vec3(_GLF_FUZZED(-988.536), (abs(vec3(0.0, 0.0, 0.0)))[1], (abs(vec3(0.0, 0.0, 0.0)))[2]), vec3((abs(vec3(0.0, 0.0, 0.0)))[0], _GLF_FUZZED(-644.166), _GLF_FUZZED(-188.246)), bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))), (_GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), (false || (true)) || false)) ? length(abs(_GLF_IDENTITY(vec3(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0))), (0.0) * round(length(normalize(vec2(1.0, 1.0))))), 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(vec4(_GLF_IDENTITY(vec3(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0))), (0.0) * round(length(normalize(vec2(1.0, 1.0))))), 0.0), _GLF_IDENTITY(vec3(mat3(vec3(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0))), (0.0) * round(length(normalize(vec2(1.0, 1.0))))), 0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0)), (true ? vec3(mat3(vec3(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0))), (0.0) * round(length(normalize(vec2(1.0, 1.0))))), 0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0)) : _GLF_FUZZED(vec3(-63.79, -15.89, -2.9))))), 1.0), (false ? _GLF_FUZZED(vec4(-9.2, -340.405, -856.669, 8662.4346)) : vec4(_GLF_IDENTITY(vec3(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0))), (0.0) * round(length(normalize(vec2(1.0, 1.0))))), 0.0), _GLF_IDENTITY(vec3(mat3(vec3(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0))), (0.0) * round(length(normalize(vec2(1.0, 1.0))))), 0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0)), (true ? vec3(mat3(vec3(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0))), (0.0) * round(length(normalize(vec2(1.0, 1.0))))), 0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0)) : _GLF_FUZZED(vec3(-63.79, -15.89, -2.9))))), 1.0)))), mix(vec3(_GLF_FUZZED(-84.75), _GLF_FUZZED(2.2), (vec3(_GLF_IDENTITY(vec4(_GLF_IDENTITY(vec3(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0))), (0.0) * round(length(normalize(vec2(1.0, 1.0))))), 0.0), _GLF_IDENTITY(vec3(mat3(vec3(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0))), (0.0) * round(length(normalize(vec2(1.0, 1.0))))), 0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0)), (true ? vec3(mat3(vec3(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0))), (0.0) * round(length(normalize(vec2(1.0, 1.0))))), 0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0)) : _GLF_FUZZED(vec3(-63.79, -15.89, -2.9))))), 1.0), (false ? _GLF_FUZZED(vec4(-9.2, -340.405, -856.669, 8662.4346)) : vec4(_GLF_IDENTITY(vec3(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0))), (0.0) * round(length(normalize(vec2(1.0, 1.0))))), 0.0), _GLF_IDENTITY(vec3(mat3(vec3(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0))), (0.0) * round(length(normalize(vec2(1.0, 1.0))))), 0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0)), (true ? vec3(mat3(vec3(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0))), (0.0) * round(length(normalize(vec2(1.0, 1.0))))), 0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0)) : _GLF_FUZZED(vec3(-63.79, -15.89, -2.9))))), 1.0)))))[2]), vec3((vec3(_GLF_IDENTITY(vec4(_GLF_IDENTITY(vec3(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0))), (0.0) * round(length(normalize(vec2(1.0, 1.0))))), 0.0), _GLF_IDENTITY(vec3(mat3(vec3(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0))), (0.0) * round(length(normalize(vec2(1.0, 1.0))))), 0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0)), (true ? vec3(mat3(vec3(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0))), (0.0) * round(length(normalize(vec2(1.0, 1.0))))), 0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0)) : _GLF_FUZZED(vec3(-63.79, -15.89, -2.9))))), 1.0), (false ? _GLF_FUZZED(vec4(-9.2, -340.405, -856.669, 8662.4346)) : vec4(_GLF_IDENTITY(vec3(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0))), (0.0) * round(length(normalize(vec2(1.0, 1.0))))), 0.0), _GLF_IDENTITY(vec3(mat3(vec3(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0))), (0.0) * round(length(normalize(vec2(1.0, 1.0))))), 0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0)), (true ? vec3(mat3(vec3(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0))), (0.0) * round(length(normalize(vec2(1.0, 1.0))))), 0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0)) : _GLF_FUZZED(vec3(-63.79, -15.89, -2.9))))), 1.0)))))[0], (vec3(_GLF_IDENTITY(vec4(_GLF_IDENTITY(vec3(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0))), (0.0) * round(length(normalize(vec2(1.0, 1.0))))), 0.0), _GLF_IDENTITY(vec3(mat3(vec3(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0))), (0.0) * round(length(normalize(vec2(1.0, 1.0))))), 0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0)), (true ? vec3(mat3(vec3(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0))), (0.0) * round(length(normalize(vec2(1.0, 1.0))))), 0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0)) : _GLF_FUZZED(vec3(-63.79, -15.89, -2.9))))), 1.0), (false ? _GLF_FUZZED(vec4(-9.2, -340.405, -856.669, 8662.4346)) : vec4(_GLF_IDENTITY(vec3(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0))), (0.0) * round(length(normalize(vec2(1.0, 1.0))))), 0.0), _GLF_IDENTITY(vec3(mat3(vec3(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0))), (0.0) * round(length(normalize(vec2(1.0, 1.0))))), 0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0)), (true ? vec3(mat3(vec3(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0))), (0.0) * round(length(normalize(vec2(1.0, 1.0))))), 0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0)) : _GLF_FUZZED(vec3(-63.79, -15.89, -2.9))))), 1.0)))))[1], _GLF_FUZZED(-665.408)), bvec3(true, true, false)))))) : _GLF_FUZZED(-66.80))), abs(1.0), _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-9.4)), float(1.0), bool(true))), 1.0))), float(_GLF_FUZZED(2.9)), bool(false))), 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, abs(1.0), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat4(1.0, 100.544, 5.8, 92.21, 762.368, 6.2, -8.5, -21.75, -9.7, 9.6, 2.2, -4352.0404, 5.9, -448.761, -54.83, 1.6)) : mat4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, abs(1.0), 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 0.0, 0.0)))), float(mat4x3(_GLF_IDENTITY(float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) * 1.0), max(1.0, 1.0)), 0.0, 0.0, 1.0, determinant(_GLF_IDENTITY(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat2x4(0.0, 0.0, 1.0, 0.0, 0.0, tan(0.0), sqrt(determinant(mat2(1.0, 1.0, 0.0, 1.0))), 1.0))), 1.0, 0.0, 0.0, 0.0, 0.0), transpose(transpose(_GLF_IDENTITY(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat2x4(0.0, 0.0, 1.0, 0.0, 0.0, tan(0.0), sqrt(determinant(mat2(1.0, 1.0, 0.0, 1.0))), 1.0))), 1.0, 0.0, 0.0, 0.0, 0.0), (mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat2x4(0.0, 0.0, 1.0, 0.0, 0.0, tan(0.0), sqrt(determinant(mat2(1.0, 1.0, 0.0, 1.0))), 1.0))), 1.0, 0.0, 0.0, 0.0, 0.0)) * mat4(1.0)))))), 0.0, 0.0, abs(1.0), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat4(1.0, 100.544, 5.8, 92.21, 762.368, 6.2, -8.5, -21.75, -9.7, 9.6, 2.2, -4352.0404, 5.9, -448.761, -54.83, 1.6)) : _GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-682.269)), bool(false))), 1.0, _GLF_IDENTITY(determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), (determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))) - abs(tan(0.0))), 0.0, 0.0, abs(1.0), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-682.269)), bool(false))), 1.0, _GLF_IDENTITY(determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), (determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))) - abs(tan(0.0))), 0.0, 0.0, abs(1.0), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0)))))), clamp(float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, abs(1.0), 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 1.0, 1.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat4(1.0, _GLF_IDENTITY(100.544, (_GLF_IDENTITY(100.544, float(mat3x2(_GLF_IDENTITY(100.544, mix(float(100.544), float(_GLF_FUZZED(-39.50)), bool(false))), 0.0, 1.0, 0.0, 0.0, 1.0)))) / 1.0), 5.8, 92.21, 762.368, 6.2, -8.5, -21.75, -9.7, 9.6, 2.2, -4352.0404, 5.9, -448.761, -54.83, 1.6)) : mat4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(8842.8976)), float(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0))), bool(true))), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3(0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0)), float(mat4(float(mat3(0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0)), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0)))), 0.0)))), 0.0, 0.0, abs(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-4.3)), float(1.0), bool(true)))), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0)))), float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, abs(1.0), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat4(1.0, 100.544, 5.8, 92.21, 762.368, 6.2, -8.5, -21.75, -9.7, 9.6, 2.2, _GLF_IDENTITY(-4352.0404, mix(float(_GLF_FUZZED(-3.8)), float(-4352.0404), bool(true))), 5.9, _GLF_IDENTITY(-448.761, (true ? -448.761 : _GLF_FUZZED((980.964 / 5.0)))), -54.83, 1.6)) : mat4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, _GLF_IDENTITY(abs(1.0), (abs(1.0)) * 1.0), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0)))), float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, abs(1.0), _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(sin(-5018.7621)))), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat4(1.0, _GLF_IDENTITY(100.544, cos(0.0) * (100.544)), 5.8, 92.21, 762.368, 6.2, -8.5, -21.75, -9.7, 9.6, 2.2, -4352.0404, _GLF_IDENTITY(5.9, (5.9) + 0.0), -448.761, -54.83, 1.6)) : mat4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, abs(1.0), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0)))))), 0.0, 0.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, float(mat2x3(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0, 0.0, 0.0, 1.0, 1.0))) : _GLF_FUZZED(91.55))), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, sqrt(1.0), 0.0)))), _GLF_ONE(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, 1.0 * (1.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))))), injectionSwitch.y), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((-1.8 - vec2(2.5, 2.2).x))), bool(false))), _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)) + (0.0))), float(_GLF_FUZZED(7814.8597)), bool(false)))), (true ? mat3(injectionSwitch, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-71.52)), bool(false))), _GLF_IDENTITY(length(abs(vec3(0.0, 0.0, 0.0))), (_GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), (false || (true)) || false)) ? length(abs(vec3(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0))), (0.0) * round(length(normalize(vec2(1.0, 1.0))))), 0.0))) : _GLF_FUZZED(-66.80))), abs(1.0), _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, abs(1.0), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0)), 0.0), (false ? _GLF_FUZZED(mat4(1.0, 100.544, 5.8, 92.21, 762.368, 6.2, -8.5, -21.75, -9.7, 9.6, 2.2, -4352.0404, 5.9, -448.761, -54.83, 1.6)) : mat4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, 1.0, determinant(mat4(_GLF_IDENTITY(0.0, float(mat4x2(0.0, sin(0.0), 0.0, tan(0.0), determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)), 1.0, 0.0, 0.0))), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, abs(1.0), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0)))), float(mat4x3(_GLF_IDENTITY(float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), (true ? _GLF_IDENTITY(1.0, max(1.0, 1.0)) : _GLF_FUZZED(-1.6))), 0.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, abs(1.0), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0), (false ? _GLF_IDENTITY(_GLF_FUZZED(mat4(1.0, 100.544, 5.8, 92.21, 762.368, 6.2, -8.5, -21.75, -9.7, 9.6, 2.2, -4352.0404, 5.9, -448.761, -54.83, 1.6)), (_GLF_FUZZED(mat4(1.0, 100.544, 5.8, 92.21, 762.368, 6.2, -8.5, -21.75, -9.7, 9.6, 2.2, -4352.0404, 5.9, -448.761, -54.83, 1.6))) * mat4(1.0)) : mat4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, abs(1.0), 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((+ 0.6))), bool(false))), 1.0, 1.0, 0.0, 0.0)))), clamp(float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, abs(1.0), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat4(1.0, 100.544, 5.8, 92.21, 762.368, 6.2, -8.5, -21.75, -9.7, 9.6, 2.2, -4352.0404, 5.9, -448.761, -54.83, 1.6)) : mat4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, abs(1.0), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0)))), float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, abs(1.0), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat4(1.0, 100.544, 5.8, 92.21, 762.368, 6.2, -8.5, -21.75, -9.7, 9.6, 2.2, -4352.0404, 5.9, -448.761, -54.83, 1.6)) : mat4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (0.0) * 1.0)), float(_GLF_FUZZED(7.9)), bool(false))), abs(_GLF_IDENTITY(1.0, min(1.0, 1.0))), 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, 0.0 + (1.0)))) : _GLF_FUZZED(-5806.3317))), 0.0, 0.0)))), float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, abs(1.0), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat4(1.0, 100.544, 5.8, 92.21, 762.368, 6.2, -8.5, -21.75, -9.7, _GLF_IDENTITY(9.6, float(_GLF_IDENTITY(mat3x2(9.6, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0), mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x2(9.6, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0))))), 2.2, -4352.0404, 5.9, -448.761, -54.83, 1.6)) : mat4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, float(mat2x4(0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))), 0.0, abs(1.0), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0)))))), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, sqrt(1.0), 0.0)))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)) + (0.0))), float(_GLF_FUZZED(7814.8597)), bool(false)))) : _GLF_FUZZED(mat3(519.268, -2180.1867, -53.96, 9.8, -6.4, 4.8, 16.96, -162.321, 6.4)))))))), vec2(vec2(vec2(_GLF_IDENTITY(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, length(abs(vec3(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-0.2)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 0.0))), abs(1.0), 1.0, _GLF_ONE(_GLF_IDENTITY(1.0, float(mat4x2(_GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)), ((injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))) * vec2(1.0, 1.0))).y), 1.0, 0.0), (mat3(injectionSwitch, 1.0, length(abs(vec3(0.0, 0.0, 0.0))), abs(1.0), 1.0, _GLF_ONE(_GLF_IDENTITY(1.0, float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / 1.0), max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / 1.0), float(mat3x4(_GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 1.0, 1.0, 1.0, 1.0, sqrt(1.0), 0.0, 1.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / 1.0), float(mat4x3(_GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 1.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), sqrt(1.0), 0.0, 0.0, 0.0, 0.0, 1.0, tan(0.0)))))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, determinant(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, 1.0), (mat2(1.0, 0.0, 0.0, 1.0)) / mat2(1.0, 1.0, 1.0, 1.0))), determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).y), 1.0, 0.0)) * mat3(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))), mat3(mat3(mat3(injectionSwitch, 1.0, length(abs(vec3(0.0, 0.0, 0.0))), abs(_GLF_IDENTITY(1.0, min(1.0, 1.0))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))))))))))).x, injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bvec2(true, false))) && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))))))))))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             return;
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             return;
            }
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))) || false))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))))))) && true)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))) > injectionSwitch.y)) || false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), false, false)))))
    barrier();
   return;
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, clamp(_GLF_IDENTITY(gl_WorkGroupID.x, min(gl_WorkGroupID.x, gl_WorkGroupID.x)), gl_WorkGroupID.x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) << 0u), min(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) / 1u), _GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) * 1u)))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))) || false))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true)))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) || false)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))) || false), true, _GLF_IDENTITY(false, true && (false)))), true && (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, true, false)), false || (bool(bvec4(_GLF_DEAD(false), true, true, false))))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (injectionSwitch) : _GLF_FUZZED(vec2(9674.4989, -1879.0276)))) - vec2(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 0.0)).y), true && (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))) ? (injectionSwitch) : _GLF_FUZZED(vec2(_GLF_IDENTITY(9674.4989, (9674.4989) - 0.0), -1879.0276)))) - vec2(0.0, 0.0)).y), ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (injectionSwitch) : _GLF_FUZZED(vec2(9674.4989, -1879.0276)))) - vec2(0.0, 0.0)).y)) || false)))) && (_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))), true, false))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, false || (_GLF_IDENTITY((false) && true, bool(_GLF_IDENTITY(bool((false) && true), false || (bool((false) && true))))))))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))))))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (130264u & 0u) | (subgroup_size)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (subgroup_id * _GLF_IDENTITY(subgroup_size, (130264u & 0u) | (subgroup_size)))) + subgroup_local_id, _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size + subgroup_local_id) * uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)) ? _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_ONE(1.0, injectionSwitch.y)), float(_GLF_FUZZED(vec4(-1.1, -6.8, -460.346, 80.13).q)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) : _GLF_FUZZED(-78.46)))), ((workgroup_base + subgroup_id * subgroup_size + subgroup_local_id) * uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)) ? _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_ONE(1.0, injectionSwitch.y)), float(_GLF_FUZZED(vec4(-1.1, -6.8, -460.346, 80.13).q)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) : _GLF_FUZZED(-78.46))))) | 0u));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(injectionSwitch, cos(0.0), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0))))), _GLF_IDENTITY(abs(1.0), clamp(abs(1.0), abs(1.0), _GLF_IDENTITY(abs(1.0), (_GLF_IDENTITY(abs(1.0), max(abs(_GLF_IDENTITY(1.0, (1.0) / 1.0)), abs(1.0)))) - 0.0))), sqrt(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(2.5))), clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(2.5))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(2.5))), (_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(2.5)))) * 1.0), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(2.5))), 1.0 * (_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(2.5)))))))), 0.0, abs(sqrt(0.0)), 1.0, sqrt(1.0), 0.0, 1.0)), min(vec2(mat3x4(injectionSwitch, cos(0.0), 1.0, abs(_GLF_IDENTITY(1.0, 0.0 + (1.0))), sqrt(0.0), 0.0, abs(sqrt(0.0)), 1.0, sqrt(1.0), 0.0, 1.0)), vec2(mat3x4(injectionSwitch, cos(0.0), 1.0, abs(1.0), sqrt(0.0), 0.0, abs(sqrt(0.0)), 1.0, sqrt(1.0), 0.0, 1.0))))).x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), cos(0.0), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0))))), _GLF_IDENTITY(abs(1.0), clamp(_GLF_IDENTITY(abs(1.0), (abs(1.0)) - 0.0), abs(1.0), _GLF_IDENTITY(abs(1.0), _GLF_IDENTITY((_GLF_IDENTITY(abs(1.0), max(abs(1.0), abs(1.0)))), mix(float(_GLF_FUZZED(-0.2)), float((_GLF_IDENTITY(abs(1.0), max(abs(1.0), abs(1.0))))), bool(true))) - 0.0))), sqrt(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(2.5)))), 0.0, abs(sqrt(0.0)), 1.0, sqrt(1.0), 0.0, 1.0)), min(vec2(mat3x4(injectionSwitch, cos(0.0), 1.0, abs(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, abs(0.0), 0.0))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-5707.1285)), float(1.0), bool(true))), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(4.1) : 1.0))))), sqrt(0.0), 0.0, abs(sqrt(0.0)), 1.0, sqrt(1.0), 0.0, 1.0)), vec2(mat3x4(injectionSwitch, cos(0.0), 1.0, abs(1.0), sqrt(0.0), 0.0, abs(sqrt(0.0)), 1.0, sqrt(1.0), 0.0, 1.0))))).x > injectionSwitch.y))) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) && true))))
            return;
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         return;
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED((+ -2.0))))))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          return;
         return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     return;
    }
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, max(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u), uint(_GLF_IDENTITY(uint(workgroup_base), (uint(workgroup_base)) << 0u))))) + subgroup_id * subgroup_size + _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, min(1, 1))) % subgroup_size), (_GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, min(1, 1))) % subgroup_size), (true ? ((subgroup_local_id + _GLF_IDENTITY(1, min(1, 1))) % subgroup_size) : _GLF_FUZZED(workgroup_base)))) + (0u << _GLF_IDENTITY(uint(6u), uint(6u))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-246.272) : injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), bool(bvec3(_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), _GLF_IDENTITY(bool(bvec4(bool(bvec2(_GLF_DEAD(false), true)), false, true, false)), (_GLF_IDENTITY(bool(bvec4(bool(bvec2(_GLF_DEAD(false), true)), false, true, false)), ! (! (bool(bvec4(bool(bvec2(_GLF_DEAD(false), true)), false, true, false)))))) || false)), true, false)))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, 1.0, 0.0), (mat2(injectionSwitch, 1.0, 0.0)) / mat2(1.0, 1.0, 1.0, 1.0))))) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
              barrier();
             return;
            }
           barrier();
          }
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, (1) | 0)))), _GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), (~ _GLF_IDENTITY((4), min(_GLF_IDENTITY((4), min((4), (4))), _GLF_IDENTITY((4), ((4)) >> 0)))) ^ 0))), 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  return;
 if(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)))))
  {
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
   subgroupAll(false);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6.1), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-63.17)), bvec2(true, false))))).x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)), false || (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))) || false)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))))))
      return;
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
    return;
   atomicStore(buf[virtual_gid], read, _GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY((4) >> 0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((4) >> 0, ~ (_GLF_IDENTITY(~ ((4) >> 0), min(~ ((4) >> 0), ~ ((4) >> 0)))))), int(ivec3(~ (_GLF_IDENTITY((4) >> 0, ~ (_GLF_IDENTITY(~ ((4) >> 0), min(~ ((4) >> 0), ~ ((4) >> 0)))))), ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))), 0)))))), (4) | (4)), 64, 4);
   if(_GLF_DEAD(false))
    return;
   subgroupAll(true);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bool(false)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (_GLF_IDENTITY(false, bool(bool(false))))))) || false)))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true) && (false))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))) && true)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(11.27)), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + length(0.0))), bool(true))) > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
