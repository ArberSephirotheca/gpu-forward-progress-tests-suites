#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uvec4 GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_sizeread;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uvec2 GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uvec3 GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_size;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_sizeread.xyz = GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_size;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false)), ! (_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false))), false || (! (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false)))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), (false) || false)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uvec4 GLF_merged3_0_2_56_2_1_13_3_1_11GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_basenum_workgroupsubgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   barrier();
  }
 uvec2 GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(6886.9044), _GLF_FUZZED(-1825.0125)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))[1], 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, sqrt(1.0), _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) - determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))), mix(float(float(mat4x3(injectionSwitch[1], 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, sqrt(1.0), 1.0))), float(_GLF_FUZZED(-7.3)), bool(false)))))).x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, _GLF_IDENTITY(dot(vec4(abs(1.0), 1.0, 0.0, 1.0), vec4(abs(0.0), 0.0, 1.0, 0.0)), dot(vec4(abs(1.0), 1.0, 0.0, 1.0), vec4(abs(0.0), 0.0, 1.0, 0.0))), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, abs(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))), 0.0, 0.0, length(vec2(0.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 1.0)))[0], injectionSwitch[1])).y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uvec4 GLF_merged2_0_3_62_3_1_11GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_sizevirtual_gid;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), false || (bool(bvec3(false, false, false))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), false || (bool(bvec3(false, false, false))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), false || (bool(bvec3(false, false, false)))))) && true)))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uvec4 GLF_merged2_0_3_62_3_1_4GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_sizeread;
 uvec4 GLF_merged3_0_2_56_2_1_16_3_1_13GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_basenext_virtual_gidsubgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-5.9, -8.5)) : injectionSwitch)).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uvec2 GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_base;
 GLF_merged3_0_2_56_2_1_13_3_1_11GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_basenum_workgroupsubgroup_id.xy = GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_base;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 GLF_merged3_0_2_56_2_1_16_3_1_13GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_basenext_virtual_gidsubgroup_size.xy = _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_56_2_1_13_3_1_11GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_basenum_workgroupsubgroup_id, (false ? _GLF_FUZZED(GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_id.yyyx) : _GLF_IDENTITY(GLF_merged3_0_2_56_2_1_13_3_1_11GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_basenum_workgroupsubgroup_id, uvec4(_GLF_IDENTITY(1u, (1u) << 0u), 1u, 1u, 1u) * (_GLF_IDENTITY(GLF_merged3_0_2_56_2_1_13_3_1_11GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_basenum_workgroupsubgroup_id, clamp(GLF_merged3_0_2_56_2_1_13_3_1_11GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_basenum_workgroupsubgroup_id, GLF_merged3_0_2_56_2_1_13_3_1_11GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_basenum_workgroupsubgroup_id, GLF_merged3_0_2_56_2_1_13_3_1_11GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_basenum_workgroupsubgroup_id)))))).xy, max(_GLF_IDENTITY(GLF_merged3_0_2_56_2_1_13_3_1_11GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_basenum_workgroupsubgroup_id, (false ? _GLF_FUZZED(GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_id.yyyx) : _GLF_IDENTITY(GLF_merged3_0_2_56_2_1_13_3_1_11GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_basenum_workgroupsubgroup_id, uvec4(_GLF_IDENTITY(1u, (1u) << 0u), 1u, 1u, 1u) * (_GLF_IDENTITY(GLF_merged3_0_2_56_2_1_13_3_1_11GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_basenum_workgroupsubgroup_id, clamp(GLF_merged3_0_2_56_2_1_13_3_1_11GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_basenum_workgroupsubgroup_id, GLF_merged3_0_2_56_2_1_13_3_1_11GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_basenum_workgroupsubgroup_id, GLF_merged3_0_2_56_2_1_13_3_1_11GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_basenum_workgroupsubgroup_id)))))).xy, _GLF_IDENTITY(GLF_merged3_0_2_56_2_1_13_3_1_11GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_basenum_workgroupsubgroup_id, (false ? _GLF_FUZZED(GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_id.yyyx) : _GLF_IDENTITY(GLF_merged3_0_2_56_2_1_13_3_1_11GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_basenum_workgroupsubgroup_id, uvec4(_GLF_IDENTITY(1u, (1u) << 0u), 1u, 1u, 1u) * (_GLF_IDENTITY(GLF_merged3_0_2_56_2_1_13_3_1_11GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_basenum_workgroupsubgroup_id, clamp(GLF_merged3_0_2_56_2_1_13_3_1_11GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_basenum_workgroupsubgroup_id, GLF_merged3_0_2_56_2_1_13_3_1_11GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_basenum_workgroupsubgroup_id, GLF_merged3_0_2_56_2_1_13_3_1_11GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_basenum_workgroupsubgroup_id)))))).xy));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))) || false)), false || (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uvec3 GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) - 0.0))) > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y, true, true)))))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 GLF_merged2_0_3_62_3_1_11GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_sizevirtual_gid.xyz = GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 _GLF_IDENTITY(GLF_merged2_0_3_62_3_1_4GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_sizeread.xyz = GLF_merged2_0_3_62_3_1_11GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_sizevirtual_gid.xyz, (_GLF_IDENTITY(GLF_merged2_0_3_62_3_1_4GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_sizeread.xyz = GLF_merged2_0_3_62_3_1_11GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_sizevirtual_gid.xyz, uvec3(0u, 0u, 0u) | (GLF_merged2_0_3_62_3_1_4GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_sizeread.xyz = GLF_merged2_0_3_62_3_1_11GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_sizevirtual_gid.xyz))) << (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u)));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), false || (_GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), false || (false))) || _GLF_IDENTITY(false, bool(bvec2(false, true))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))) || false))), false || (! ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false))))))))), ! (! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), false || (! (! (false)))), _GLF_IDENTITY(bool(bvec2(! (! (false)), false)), bool(_GLF_IDENTITY(bvec2(bool(bvec2(! (! (false)), false)), false), bvec2(bvec3(bvec2(bool(bvec2(! (! (_GLF_IDENTITY(false, false || (false)))), false)), false), false)))))))))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), false || (_GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), false || (false))) || _GLF_IDENTITY(false, bool(bvec2(false, true))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false))), false || (! ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false))))))))), ! (! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), false || (! (_GLF_IDENTITY(! (false), ! (! (! (false))))))), _GLF_IDENTITY(bool(bvec2(! (! (false)), false)), bool(_GLF_IDENTITY(bvec2(bool(bvec2(! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))))), _GLF_IDENTITY(false, false || (false)))), false), bvec2(bvec3(bvec2(bool(bvec2(! (! (false)), false)), false), false))))))))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (false))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true)))))))) || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))), true, false))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))), true, false))))), _GLF_IDENTITY(false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))), true, false)))))), true && (_GLF_IDENTITY(false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))), true, false)))))), ! (! (false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))), true, false)))))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))), true, false))))), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))), true, false)))))))), ! (! (! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x4(injectionSwitch, determinant(mat3(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 1.0)), mix(vec2((vec2(mat2x4(injectionSwitch, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 1.0)))[0], _GLF_IDENTITY(_GLF_IDENTITY((vec2(mat2x4(injectionSwitch, determinant(mat3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(87.71)), bool(false))), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 1.0))), min((vec2(mat2x4(injectionSwitch, determinant(mat3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(87.71)), bool(false))), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 1.0))), (vec2(mat2x4(injectionSwitch, determinant(mat3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(87.71)), bool(false))), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 1.0)))))[1], clamp(_GLF_IDENTITY((vec2(mat2x4(injectionSwitch, determinant(mat3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(87.71)), bool(false))), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 1.0))), min((vec2(mat2x4(injectionSwitch, determinant(mat3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(87.71)), bool(false))), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 1.0))), (vec2(mat2x4(injectionSwitch, determinant(mat3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(87.71)), bool(false))), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 1.0)))))[1], _GLF_IDENTITY((vec2(mat2x4(injectionSwitch, determinant(mat3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(87.71)), bool(false))), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 1.0))), min((vec2(mat2x4(injectionSwitch, determinant(mat3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(87.71)), bool(false))), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 1.0))), (vec2(mat2x4(injectionSwitch, determinant(mat3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(87.71)), bool(false))), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 1.0)))))[1], _GLF_IDENTITY(_GLF_IDENTITY((vec2(mat2x4(injectionSwitch, determinant(mat3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(87.71)), bool(false))), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 1.0))), min((vec2(mat2x4(injectionSwitch, determinant(mat3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(87.71)), bool(false))), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 1.0))), (vec2(mat2x4(injectionSwitch, determinant(mat3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(87.71)), bool(false))), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 1.0)))))[1], 0.0 + (_GLF_IDENTITY((vec2(mat2x4(injectionSwitch, determinant(mat3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(87.71)), bool(false))), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 1.0))), min((vec2(mat2x4(injectionSwitch, determinant(mat3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(87.71)), bool(false))), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 1.0))), (vec2(mat2x4(injectionSwitch, determinant(mat3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(87.71)), bool(false))), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 1.0)))))[1]))))), vec2(_GLF_FUZZED(-7.0), _GLF_FUZZED(-1.3)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))).x > injectionSwitch.y))), true, false)))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x4(injectionSwitch, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 1.0)), mix(vec2((vec2(mat2x4(injectionSwitch, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 1.0)))[0], (vec2(mat2x4(injectionSwitch, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 1.0)))[1]), vec2(_GLF_FUZZED(-7.0), _GLF_FUZZED(-1.3)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))).x > injectionSwitch.y))), true, false))))) && true)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))), true, false))))))))))))), true, false)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 GLF_merged3_0_2_56_2_1_13_3_1_11GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_basenum_workgroupsubgroup_id.w = subgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 1.0, cos(0.0), 0.0, 0.0, 0.0)))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false || (false), (false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), (! (false)) || false))))))) || false)), (! (_GLF_IDENTITY(false || (false), (false || _GLF_IDENTITY((false), bool(bool((false))))) || false))) && true), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false || (false), (false || (false)) || false)), (! _GLF_IDENTITY((_GLF_IDENTITY(false || (false), (false || (false)) || false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(false || (false), (_GLF_IDENTITY(false || (false), (false || (false)) || _GLF_IDENTITY(false, false || (false)))) || false)), bool(bvec2((_GLF_IDENTITY(false || (false), (_GLF_IDENTITY(false || (false), (false || (false)) || _GLF_IDENTITY(false, false || (false)))) || false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (! _GLF_IDENTITY(((_GLF_IDENTITY(false || (false), (false || (false)) || false))), ! (_GLF_IDENTITY(! (((_GLF_IDENTITY(false || (false), (false || (false)) || false)))), (! (((_GLF_IDENTITY(false || (false), (false || (false)) || false))))) && true))))))))) && true)), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false || (false), (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true) || (false)) || false)), ! _GLF_IDENTITY((! (_GLF_IDENTITY(! (_GLF_IDENTITY(false || (false), (false || (false)) || false)), (! (_GLF_IDENTITY(false || (false), (false || (false)) || false))) && true))), ((! (_GLF_IDENTITY(! (_GLF_IDENTITY(false || (false), (false || (false)) || false)), (! (_GLF_IDENTITY(false || (false), (false || (false)) || false))) && true)))) || false)), (! (_GLF_IDENTITY(false || (false), (false || (false)) || false))) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false || (false), (false || (false)) || false)), ! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false || (false), (false || (false)) || false)), (! (_GLF_IDENTITY(false || (false), (false || (false)) || false))) && true)), false || ((_GLF_IDENTITY(! (_GLF_IDENTITY(false || (false), (false || (false)) || false)), (! (_GLF_IDENTITY(false || (false), (false || (false)) || false))) && true))))), ((! (_GLF_IDENTITY(! (_GLF_IDENTITY(false || _GLF_IDENTITY((false), true && ((false))), (false || (false)) || false)), (! (_GLF_IDENTITY(false || (false), _GLF_IDENTITY((false || (false)), ! (_GLF_IDENTITY(! ((false || (false))), (! ((false || (false)))) && true))) || false))) && true)))) || false)), (! (_GLF_IDENTITY(false || (false), (false || (false)) || false))) && true), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false || (false), (false || (false)) || false)), ! _GLF_IDENTITY((! (_GLF_IDENTITY(! (_GLF_IDENTITY(false || (false), _GLF_IDENTITY((false || (false)), ! (_GLF_IDENTITY(! ((false || (false))), bool(bvec2(! ((false || (false))), true))))) || false)), (! (_GLF_IDENTITY(false || (false), (false || (false)) || false))) && true))), ((! (_GLF_IDENTITY(! (_GLF_IDENTITY(false || (false), (false || (false)) || false)), (! (_GLF_IDENTITY(false || (false), (false || (false)) || false))) && true)))) || false)), (! (_GLF_IDENTITY(false || (false), (false || (false)) || false))) && true))), ! _GLF_IDENTITY((! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false || (false), (false || (false)) || false)), ! _GLF_IDENTITY((! (_GLF_IDENTITY(! (_GLF_IDENTITY(false || (false), (false || (false)) || false)), (! (_GLF_IDENTITY(false || (false), (false || (false)) || false))) && true))), ((! (_GLF_IDENTITY(! (_GLF_IDENTITY(false || (false), (false || (false)) || false)), (! (_GLF_IDENTITY(false || (false), _GLF_IDENTITY((false || (false)), ! (! (_GLF_IDENTITY((false || (false)), ! (! ((false || (false)))))))) || false))) && true)))) || false)), (! (_GLF_IDENTITY(false || (false), (false || (false)) || false))) && true))))), _GLF_IDENTITY(false, true && (false)) || ((! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false || (false), (false || (false)) || false)), ! _GLF_IDENTITY((! (_GLF_IDENTITY(! (_GLF_IDENTITY(false || (false), (false || (false)) || false)), (! (_GLF_IDENTITY(false || (false), (false || (false)) || false))) && true))), ((! (_GLF_IDENTITY(! (_GLF_IDENTITY(false || (false), (false || (false)) || false)), (! (_GLF_IDENTITY(false || (false), _GLF_IDENTITY((false || (false)), ! (! (_GLF_IDENTITY((false || (false)), ! (! ((false || (false)))))))) || false))) && true)))) || false)), (! (_GLF_IDENTITY(false || (false), (false || (false)) || false))) && true))))))))))))))))), ((_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false || (false), (false || (false)) || false)), (! _GLF_IDENTITY((_GLF_IDENTITY(false || (false), (false || (false)) || false)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((_GLF_IDENTITY(false || (false), (false || (false)) || false))), (! ((_GLF_IDENTITY(false || (false), (false || (false)) || false)))) || false), ! (! (! ((_GLF_IDENTITY(false || (false), _GLF_IDENTITY((false || (false)), bool(bvec4((false || (false)), _GLF_IDENTITY(true, bool(bool(true))), false, false))) || false))))))))) && true)), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false || (false), (false || (false)) || false)), ! _GLF_IDENTITY((! (_GLF_IDENTITY(! (_GLF_IDENTITY(false || (false), (false || (false)) || false)), (! (_GLF_IDENTITY(false || (false), (false || (false)) || false))) && true))), ((! (_GLF_IDENTITY(! (_GLF_IDENTITY(false || (false), (false || (false)) || false)), (! (_GLF_IDENTITY(false || (false), (false || (false)) || false))) && true)))) || false)), (! (_GLF_IDENTITY(false || (false), (false || (false)) || false))) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false || (false), (false || (false)) || false)), ! _GLF_IDENTITY((! (_GLF_IDENTITY(! (_GLF_IDENTITY(false || (false), (false || (false)) || false)), (! (_GLF_IDENTITY(false || (false), (false || (false)) || false))) && true))), ((! (_GLF_IDENTITY(! (_GLF_IDENTITY(false || (false), (false || (false)) || false)), (! (_GLF_IDENTITY(false || (false), (false || (false)) || false))) && true)))) || false)), (! (_GLF_IDENTITY(false || (false), (false || (false)) || false))) && true), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false || (false), (false || (false)) || false)), ! _GLF_IDENTITY((! (_GLF_IDENTITY(! (_GLF_IDENTITY(false || (false), (false || (false)) || false)), (! (_GLF_IDENTITY(false || (false), (false || (false)) || false))) && true))), ((! (_GLF_IDENTITY(! (_GLF_IDENTITY(false || (false), (false || (false)) || false)), (! (_GLF_IDENTITY(false || (false), (false || (false)) || false))) && true)))) || false)), (! (_GLF_IDENTITY(false || (false), (false || (false)) || false))) && true))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false || (false), (false || (false)) || false)), ! _GLF_IDENTITY((! (_GLF_IDENTITY(! (_GLF_IDENTITY(false || (false), (false || (false)) || false)), (! (_GLF_IDENTITY(false || (false), (false || (false)) || false))) && true))), ((! (_GLF_IDENTITY(! (_GLF_IDENTITY(false || (false), (false || (false)) || false)), (! (_GLF_IDENTITY(false || (false), (false || (false)) || false))) && true)))) || false)), (! (_GLF_IDENTITY(false || (false), (false || (false)) || false))) && true)))))))))))), ! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false || (false), (false || (false)) || false)), ! _GLF_IDENTITY((! (_GLF_IDENTITY(! (_GLF_IDENTITY(false || (false), (false || (false)) || false)), (! (_GLF_IDENTITY(false || (false), (false || (false)) || false))) && true))), ((! (_GLF_IDENTITY(! (_GLF_IDENTITY(false || (false), (false || (false)) || false)), (! (_GLF_IDENTITY(false || (false), (false || (false)) || false))) && true)))) || false)), (! (_GLF_IDENTITY(false || (false), (false || (false)) || false))) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false || (false), (false || (false)) || false)), ! _GLF_IDENTITY((! (_GLF_IDENTITY(! (_GLF_IDENTITY(false || (false), (false || (false)) || false)), (! (_GLF_IDENTITY(false || (false), (false || (false)) || false))) && true))), ((! (_GLF_IDENTITY(! (_GLF_IDENTITY(false || (false), (false || (false)) || false)), (! (_GLF_IDENTITY(false || (false), (false || (false)) || false))) && true)))) || false)), (! (_GLF_IDENTITY(false || (false), (false || (false)) || false))) && true), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false || (false), (false || (false)) || false)), ! _GLF_IDENTITY((! (_GLF_IDENTITY(! (_GLF_IDENTITY(false || (false), (false || (false)) || false)), (! (_GLF_IDENTITY(false || (false), (false || (false)) || false))) && true))), ((! (_GLF_IDENTITY(! (_GLF_IDENTITY(false || (false), (false || (false)) || false)), (! (_GLF_IDENTITY(false || (false), (false || (false)) || false))) && true)))) || false)), (! (_GLF_IDENTITY(false || (false), (false || (false)) || false))) && true))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false || (false), (false || (false)) || false)), ! _GLF_IDENTITY((! (_GLF_IDENTITY(! (_GLF_IDENTITY(false || (false), (false || (false)) || false)), (! (_GLF_IDENTITY(false || (false), (false || (false)) || false))) && true))), ((! (_GLF_IDENTITY(! (_GLF_IDENTITY(false || (false), (false || (false)) || false)), (! (_GLF_IDENTITY(false || (false), (false || (false)) || false))) && true)))) || false)), (! (_GLF_IDENTITY(false || (false), (false || (false)) || false))) && true)))))))))))), true && (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false || (false), (false || (false)) || false)), ! _GLF_IDENTITY((! (_GLF_IDENTITY(! (_GLF_IDENTITY(false || (false), (false || (false)) || false)), (! (_GLF_IDENTITY(false || (false), (false || (false)) || false))) && true))), ((! (_GLF_IDENTITY(! (_GLF_IDENTITY(false || (false), (false || (false)) || false)), (! (_GLF_IDENTITY(false || (false), (false || (false)) || false))) && true)))) || false)), (_GLF_IDENTITY(! (_GLF_IDENTITY(false || (false), (false || (false)) || false)), ! _GLF_IDENTITY((! (_GLF_IDENTITY(! (_GLF_IDENTITY(false || (false), (false || (false)) || false)), (! (_GLF_IDENTITY(false || (false), (false || (false)) || false))) && true))), ((! (_GLF_IDENTITY(! (_GLF_IDENTITY(false || (false), (false || (false)) || false)), (! (_GLF_IDENTITY(false || (false), (false || (false)) || false))) && true)))) || false))) || false), (! (_GLF_IDENTITY(false || (false), (_GLF_IDENTITY(false, ! (! (false))) || (false)) || false))) && _GLF_IDENTITY(true, ! (! (true)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false || (false), (false || (false)) || false)), ! _GLF_IDENTITY((! (_GLF_IDENTITY(! (_GLF_IDENTITY(false || (false), (false || (false)) || false)), (! (_GLF_IDENTITY(false || (false), (false || (false)) || false))) && true))), ((! (_GLF_IDENTITY(! (_GLF_IDENTITY(false || (false), (false || (false)) || false)), (! (_GLF_IDENTITY(false || (false), (false || (false)) || false))) && true)))) || false)), (! (_GLF_IDENTITY(false || (false), (false || (false)) || false))) && true), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false || (_GLF_IDENTITY(false, bool(bvec2(false, true)))), (false || (false)) || false)), ! _GLF_IDENTITY((! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false || (false), (false || (false)) || false), bool(bvec4(_GLF_IDENTITY(false || (false), (false || (false)) || false), true, true, false)))), (! (_GLF_IDENTITY(false || (false), (false || (false)) || false))) && true))), ((! (_GLF_IDENTITY(! (_GLF_IDENTITY(false || (false), (false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, false)), ! (! (_GLF_IDENTITY(bool(bvec4(false, false, false, false)), false || (bool(bvec4(false, false, false, false)))))))))) || false)), (! (_GLF_IDENTITY(false || (false), (false || (false)) || false))) && true)))) || false)), (! (_GLF_IDENTITY(false || (false), (false || (false)) || false))) && true))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false || (false), (false || (false)) || false)), ! _GLF_IDENTITY((! (_GLF_IDENTITY(! (_GLF_IDENTITY(false || (false), (false || (false)) || false)), (! (_GLF_IDENTITY(false || (false), (false || (false)) || false))) && true))), ((! (_GLF_IDENTITY(! (_GLF_IDENTITY(false || (false), (false || (false)) || false)), (! (_GLF_IDENTITY(false || _GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY((false), bool(bvec2((false), true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))), (false || (false)) || false))) && true)))) || false)), (! (_GLF_IDENTITY(false || (false), (false || (false)) || false))) && true))))))))))))))))))))) || false)))))), false || (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false || (false), (false || (false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (false || (false)) || false)), (! (_GLF_IDENTITY(_GLF_IDENTITY(false || (false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false || (false), (false || (false)) || false), false, false)), (bool(bvec3(_GLF_IDENTITY(false || (false), (false || (false)) || false), false, false))) && true)), (false || _GLF_IDENTITY((false), bool(bool((false))))) || false))) && true), _GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false || (false), (false || (false)) || false)), (! _GLF_IDENTITY((_GLF_IDENTITY(false || (false), (false || (false)) || false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(false || (false), (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))) || (false)) || false)), ((_GLF_IDENTITY(false || (false), (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))) || (false)) || false))) || false)), ! (! (! ((_GLF_IDENTITY(false || (false), _GLF_IDENTITY((false || (false)) || false, bool(bool((false || (false)) || false)))))))))))) && true)), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(! (_GLF_IDENTITY(false || (false), (false || (false)) || false)), (! _GLF_IDENTITY((_GLF_IDENTITY(false || (false), (false || (false)) || false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(false || (false), (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))) || (false)) || false)), ((_GLF_IDENTITY(false || (false), (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))) || (false)) || false))) || false)), ! (! (! ((_GLF_IDENTITY(false || (false), _GLF_IDENTITY((false || (false)) || false, bool(bool((false || (false)) || false)))))))))))) && true)), false, false)), true && (bool(bvec3((_GLF_IDENTITY(! (_GLF_IDENTITY(false || (false), (false || (false)) || false)), (! _GLF_IDENTITY((_GLF_IDENTITY(false || (false), (false || (false)) || false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(false || (false), (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))) || (false)) || false)), ((_GLF_IDENTITY(false || (false), (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))) || (false)) || false))) || false)), ! (! (! ((_GLF_IDENTITY(false || (false), _GLF_IDENTITY((false || (false)) || false, bool(bool((false || (false)) || false)))))))))))) && true)), false, false))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false || (false), (false || (false)) || false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false || (false), (false || (false)) || _GLF_IDENTITY(false, (false) && true))), (! (_GLF_IDENTITY(false || (false), (false || (false)) || false))) && true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false || (false), _GLF_IDENTITY((false || (false)) || _GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY((false || (false)) || _GLF_IDENTITY(false, (false) && true), ((false || (false)) || _GLF_IDENTITY(false, (false) && true)) && true)))))), (! (_GLF_IDENTITY(false || (false), (false || (false)) || false))) && true))), _GLF_IDENTITY(bool(bvec4(bool(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false || (false), _GLF_IDENTITY((false || (false)) || _GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY((false || (false)) || _GLF_IDENTITY(false, (false) && true), ((false || (false)) || _GLF_IDENTITY(false, (false) && true)) && true)))))), (! (_GLF_IDENTITY(false || (false), (false || (false)) || false))) && true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bool(bvec4(bool(bvec4(bool(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false || (false), _GLF_IDENTITY((false || (false)) || _GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY((false || (false)) || _GLF_IDENTITY(false, (false) && true), ((false || (false)) || _GLF_IDENTITY(false, (false) && true)) && true)))))), (! (_GLF_IDENTITY(false || (false), (false || (false)) || false))) && true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), true, true, true))))), (bool(bool(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false || (false), (false || (false)) || _GLF_IDENTITY(false, (false) && true))), (! (_GLF_IDENTITY(_GLF_IDENTITY(false || (false), (false || (false)) || false), (_GLF_IDENTITY(false || (false), (false || (false)) || false)) && true))) && true))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (false) && true)))), false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (false) && true)))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (false) && true)))), false, true), false)))))))) || (false), (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))) || (false)) || false))) && _GLF_IDENTITY(true, true && (true)))))))), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false || (false), (_GLF_IDENTITY(false, false || (false)) || (false)) || false)), (! (_GLF_IDENTITY(false || (_GLF_IDENTITY(false, true && (false))), (false || (false)) || false))) && true), (! _GLF_IDENTITY((_GLF_IDENTITY(false || (false), (false || (false)) || false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(false || (false), (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))) || (false)) || false)), ((_GLF_IDENTITY(false || (false), _GLF_IDENTITY((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))) || _GLF_IDENTITY((false), bool(bvec4((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false))), true)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))) || _GLF_IDENTITY((false), bool(bvec4((false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), false, true)))), ! (! ((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))) || _GLF_IDENTITY((false), bool(bvec4((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))) || false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))))))) || false))) || false)), ! (! (! ((_GLF_IDENTITY(false || (false), (false || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false))) || false))))))))) && true)), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false || (false), (false || (false)) || false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false || (false), true && (false || (false))), (false || (false)) || _GLF_IDENTITY(false, (false) && true))), (! (_GLF_IDENTITY(false || (false), (false || (false)) || false))) && true)), _GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false || (false), (false || (_GLF_IDENTITY(false, true && (false)))) || _GLF_IDENTITY(false, (false) && true))), (! (_GLF_IDENTITY(false || (false), (false || (false)) || false))) && true)))), _GLF_IDENTITY((bool(bool(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false || (false), (false || (false)) || _GLF_IDENTITY(false, (false) && true)), (_GLF_IDENTITY(false || (false), (false || (false)) || _GLF_IDENTITY(false, (false) && true))) || false)), (! (_GLF_IDENTITY(false || (false), (false || (false)) || false))) && true))))), ! (_GLF_IDENTITY(! ((bool(bool(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false || (false), (false || (false)) || _GLF_IDENTITY(false, (false) && true)), (_GLF_IDENTITY(false || (false), (false || (false)) || _GLF_IDENTITY(false, (false) && true))) || false)), (! (_GLF_IDENTITY(false || (false), (false || (false)) || false))) && true)))))), ! (! (_GLF_IDENTITY(! ((bool(bool(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false || (false), (false || (false)) || _GLF_IDENTITY(false, (false) && true)), (_GLF_IDENTITY(false || (false), (false || (false)) || _GLF_IDENTITY(false, (false) && true))) || false)), (! (_GLF_IDENTITY(false || (false), (false || (false)) || false))) && true)))))), ! (! (! ((bool(bool(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false || (false), (false || (false)) || _GLF_IDENTITY(false, (false) && true)), (_GLF_IDENTITY(false || (false), (false || (false)) || _GLF_IDENTITY(false, (false) && true))) || false)), (! (_GLF_IDENTITY(false || (false), (false || (false)) || false))) && true)))))))))))))) && _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)))))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true) || (false), (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))) || (false)) || false))) && _GLF_IDENTITY(true, true && (true))))))))) || false)))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), true && (_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])), 1.0, 1.0)), (vec2(vec4(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])), 1.0, 1.0))) / vec2(1.0, 1.0))).y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y = _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec4(subgroup_size, 0u, 0u, 0u), uvec4(_GLF_IDENTITY(0u, uint(uvec2(0u, 0u))), 0u, 0u, _GLF_IDENTITY(0u, (0u) | 0u)) ^ (uvec4(subgroup_size, 0u, 0u, 0u)))));
 GLF_merged3_0_2_56_2_1_16_3_1_13GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_basenext_virtual_gidsubgroup_size.w = GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 GLF_merged2_0_3_62_3_1_4GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_sizeread.xyz.y = GLF_merged3_0_2_56_2_1_16_3_1_13GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_basenext_virtual_gidsubgroup_size.w;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     return;
    }
   barrier();
  }
 GLF_merged3_0_2_56_2_1_16_3_1_13GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_basenext_virtual_gidsubgroup_size.xy.x = _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec4(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), true))))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      return;
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-3.3)), float(injectionSwitch.x), bool(_GLF_IDENTITY(true, false || (true))))) > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-3.3)), float(injectionSwitch.x), bool(_GLF_IDENTITY(true, false || (true))))) > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), true && (injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), true && (injectionSwitch.x > injectionSwitch.y))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 0.0)))), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), false || (! ((injectionSwitch.x > injectionSwitch.y))))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(vec4(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), 1.0, 0.0, 0.0))), injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  return;
 GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_id.x = num_workgroup;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 GLF_merged3_0_2_56_2_1_13_3_1_11GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_basenum_workgroupsubgroup_id.z = _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_id, (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_id, (true ? GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_id : _GLF_FUZZED(GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_id)))) | (GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_id)).x;
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.x = _GLF_IDENTITY(GLF_merged3_0_2_56_2_1_13_3_1_11GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_basenum_workgroupsubgroup_id, (GLF_merged3_0_2_56_2_1_13_3_1_11GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_basenum_workgroupsubgroup_id) - uvec4(0u, 0u, 0u, 0u)).z;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_sizeread.xyz.z = workgroup_size;
 _GLF_IDENTITY(GLF_merged2_0_3_62_3_1_4GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_sizeread.xyz.z = GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_sizeread.xyz.z, _GLF_IDENTITY((GLF_merged2_0_3_62_3_1_4GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_sizeread.xyz.z = GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_sizeread.xyz.z), ~ (~ (_GLF_IDENTITY((GLF_merged2_0_3_62_3_1_4GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_sizeread.xyz.z = GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_sizeread.xyz.z), ((GLF_merged2_0_3_62_3_1_4GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_sizeread.xyz.z = GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_sizeread.xyz.z)) | 0u)))) | uint(_GLF_ZERO(0.0, injectionSwitch.x)));
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, (false ? _GLF_FUZZED(GLF_merged2_0_3_62_3_1_4GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_sizeread.xyz) : gl_WorkGroupID)).x;
 GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_id.y = workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (_GLF_IDENTITY(false, (false) || false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x, injectionSwitch.x)), min(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 0.0))))).x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_sizeread.xyz.y = GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_id.y;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
     barrier();
    }
   barrier();
  }
 uint workgroup_base = _GLF_IDENTITY(GLF_merged2_0_3_62_3_1_4GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_sizeread.xyz.z * _GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_sizeread.xyz.y, (_GLF_IDENTITY(true ? GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_sizeread.xyz.y : _GLF_FUZZED(GLF_merged3_0_2_56_2_1_13_3_1_11GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_basenum_workgroupsubgroup_id.w), (true ? GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_sizeread.xyz.y : _GLF_FUZZED(GLF_merged3_0_2_56_2_1_13_3_1_11GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_basenum_workgroupsubgroup_id.w)) / 1u))), (_GLF_IDENTITY(GLF_merged2_0_3_62_3_1_4GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_sizeread.xyz.z * _GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_sizeread.xyz.y, (_GLF_IDENTITY(true ? GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_sizeread.xyz.y : _GLF_FUZZED(GLF_merged3_0_2_56_2_1_13_3_1_11GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_basenum_workgroupsubgroup_id.w), (true ? GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_sizeread.xyz.y : _GLF_FUZZED(_GLF_IDENTITY(GLF_merged3_0_2_56_2_1_13_3_1_11GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_basenum_workgroupsubgroup_id.w, (GLF_merged3_0_2_56_2_1_13_3_1_11GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_basenum_workgroupsubgroup_id.w) << 0u))) / 1u))), uint(uvec2(GLF_merged2_0_3_62_3_1_4GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_sizeread.xyz.z * _GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_sizeread.xyz.y, (_GLF_IDENTITY(true ? _GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_sizeread, (GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_sizeread) / uvec4(1u, 1u, 1u, 1u)).xyz.y : _GLF_FUZZED(GLF_merged3_0_2_56_2_1_13_3_1_11GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_basenum_workgroupsubgroup_id.w), (true ? GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_sizeread.xyz.y : _GLF_FUZZED(GLF_merged3_0_2_56_2_1_13_3_1_11GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_basenum_workgroupsubgroup_id.w)) / 1u))), ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))))))) >> 0u);
 if(_GLF_DEAD(false))
  return;
 _GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_sizeread.xyz.x = workgroup_base, (true ? GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_sizeread.xyz.x = workgroup_base : _GLF_FUZZED(123370u)));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), false))))) ? _GLF_FUZZED(-76.97) : injectionSwitch.y)), injectionSwitch.y)))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 GLF_merged3_0_2_56_2_1_16_3_1_13GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_basenext_virtual_gidsubgroup_size.xy.y = GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_sizeread.xyz.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (false), _GLF_IDENTITY(false, bool(bvec3(false, true, true))) || (! (false))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(! (false), true), false, false)), bvec2(bvec4(bvec2(bvec4(bvec2(! (false), true), false, false)), true, false))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))), _GLF_IDENTITY(! (! (bool(_GLF_IDENTITY(false, true && (false))))), (! (! (bool(_GLF_IDENTITY(false, true && (false)))))) && true)))))))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(GLF_merged3_0_2_56_2_1_16_3_1_13GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_basenext_virtual_gidsubgroup_size.xy, (GLF_merged3_0_2_56_2_1_16_3_1_13GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_basenext_virtual_gidsubgroup_size.xy) * uvec2(1u, 1u)).y + GLF_merged3_0_2_56_2_1_13_3_1_11GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_basenum_workgroupsubgroup_id.w * GLF_merged2_0_3_62_3_1_4GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_sizeread.xyz.y + GLF_merged3_0_2_56_2_1_16_3_1_13GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_basenext_virtual_gidsubgroup_size.xy.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 GLF_merged2_0_3_62_3_1_11GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_sizevirtual_gid.w = virtual_gid;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (true))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))) || false)))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(GLF_merged3_0_2_56_2_1_16_3_1_13GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_basenext_virtual_gidsubgroup_size.xy.y, (_GLF_IDENTITY(GLF_merged3_0_2_56_2_1_16_3_1_13GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_basenext_virtual_gidsubgroup_size.xy.y, min(GLF_merged3_0_2_56_2_1_16_3_1_13GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_basenext_virtual_gidsubgroup_size.xy.y, GLF_merged3_0_2_56_2_1_16_3_1_13GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_basenext_virtual_gidsubgroup_size.xy.y))) | 0u) + GLF_merged3_0_2_56_2_1_13_3_1_11GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_basenum_workgroupsubgroup_id.w * _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_62_3_1_4GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_sizeread.xyz, (true ? GLF_merged2_0_3_62_3_1_4GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_sizeread.xyz : _GLF_FUZZED(uvec3(42140u, 131550u, 84748u)))).y, (true ? _GLF_IDENTITY(GLF_merged2_0_3_62_3_1_4GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_sizeread.xyz, (true ? GLF_merged2_0_3_62_3_1_4GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_sizeread.xyz : _GLF_FUZZED(uvec3(42140u, 131550u, 84748u)))).y : _GLF_FUZZED(workgroup_base))) + ((_GLF_IDENTITY(GLF_merged3_0_2_56_2_1_16_3_1_13GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_basenext_virtual_gidsubgroup_size.xy.x + 1, 0u ^ (GLF_merged3_0_2_56_2_1_16_3_1_13GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_basenext_virtual_gidsubgroup_size.xy.x + 1))) % GLF_merged2_0_3_62_3_1_4GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_sizeread.xyz.y);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 GLF_merged3_0_2_56_2_1_16_3_1_13GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_basenext_virtual_gidsubgroup_size.z = next_virtual_gid;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(bvec2(false, true))) || _GLF_IDENTITY(false, ! (! (false)))))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
    }
   barrier();
  }
 uint read = atomicLoad(buf[_GLF_IDENTITY(GLF_merged2_0_3_62_3_1_11GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_sizevirtual_gid, uvec4(0u, 0u, 0u, 0u) + (_GLF_IDENTITY(GLF_merged2_0_3_62_3_1_11GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_sizevirtual_gid, (GLF_merged2_0_3_62_3_1_11GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_sizevirtual_gid) << uvec4(0u, 0u, 0u, 0u)))).w], _GLF_IDENTITY(4, 0 | (_GLF_IDENTITY(4, (false ? _GLF_FUZZED(85217) : 4)))), 64, 0);
 if(_GLF_DEAD(false))
  return;
 GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_sizeread.w = read;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), false || (_GLF_IDENTITY(false || (false), (false || (false)) || false)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), false, true)))))), bvec2(bvec2(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))), true))), true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(6422.9813)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))), bvec2(bvec2(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))))), true))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec2(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))), true))), true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec2(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))), true))), true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), bvec2(bvec2(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))), true))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec2(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), (max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-9.0)), vec2(_GLF_FUZZED(-9.5), (injectionSwitch)[1]), bvec2(false, true))).y)) / 1.0)))))))), _GLF_IDENTITY(true, true && (true))))), true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), true && (bool(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(840.078) : injectionSwitch.x)) > injectionSwitch.y))), true)))))))))
  barrier();
 GLF_merged2_0_3_62_3_1_4GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_sizeread.w = GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_sizeread.w;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 GLF_merged2_0_3_62_3_1_4GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_sizeread.xyz.x = _GLF_IDENTITY(GLF_merged2_0_3_62_3_1_4GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_sizeread.w, (GLF_merged2_0_3_62_3_1_4GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_sizeread.w) - uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[GLF_merged3_0_2_56_2_1_16_3_1_13GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_basenext_virtual_gidsubgroup_size.z], uint(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 1 * (1)), _GLF_IDENTITY(1, clamp(1, 1, 1))))), _GLF_IDENTITY(4, (4) + 0), 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(GLF_merged3_0_2_56_2_1_16_3_1_13GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_basenext_virtual_gidsubgroup_size.xy.x + 1 < GLF_merged2_0_3_62_3_1_4GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_sizeread.xyz.y)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      return;
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), ! (! (_GLF_IDENTITY((true), ! (! ((true)))))))))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(true, ! (! (true)))), bvec2(bvec3(bvec2(false, _GLF_IDENTITY(true, ! (! (true)))), false))), false, true)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, true, false)))))
      barrier();
    }
   atomicStore(checker[GLF_merged2_0_3_62_3_1_11GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_sizevirtual_gid.w], GLF_merged2_0_3_62_3_1_4GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_sizeread.xyz.x, 4, 64, 4);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))))) || false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 0.0, sqrt(_GLF_IDENTITY(dot(vec3(0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0)), vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), min(_GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), max(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), vec3(0.0, 1.0, 0.0)), max(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(clamp(-25.19, 64.87, -583.996)) : 0.0)), 1.0, 0.0)))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)))))), exp(0.0)))).x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), determinant(mat3(0.0, 0.0, 0.0, determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 1.0, 0.0)), 1.0, tan(0.0), 0.0)), mat2(1.0) * (vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), determinant(mat3(0.0, 0.0, 0.0, determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 1.0, 0.0)), 1.0, tan(0.0), 0.0))))).x > injectionSwitch.y))))
      return;
     barrier();
    }
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true && (false))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
       if(_GLF_DEAD(false))
        return;
      }
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   atomicStore(buf[GLF_merged2_0_3_62_3_1_11GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_sizevirtual_gid.w], _GLF_IDENTITY(GLF_merged2_0_3_62_3_1_4GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_sizeread.xyz, (GLF_merged2_0_3_62_3_1_4GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_sizeread.xyz) ^ uvec3(0u, 0u, 0u)).x, 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), false || (bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), false || (bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))))))) || false))
    return;
   subgroupAll(true);
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-258.639, -71.68)) : injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
