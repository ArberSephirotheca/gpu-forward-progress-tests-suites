#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460
struct _GLF_struct_2 {
 uint _f0;
 int _f1;
 float _f2;
 mat4x3 _f3;
 uint _f4;
} ;

struct _GLF_struct_1 {
 uvec2 _f0;
} ;

struct _GLF_struct_0 {
 ivec2 _f0;
 ivec3 _f1;
} ;

struct _GLF_struct_3 {
 _GLF_struct_0 _f0;
 uint next_virtual_gid;
 _GLF_struct_1 _f1;
 _GLF_struct_2 _f2;
 mat3 _f3;
} ;

struct _GLF_struct_4 {
 bool _f0;
 bvec3 _f1;
 _GLF_struct_3 _f2;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec3 GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_size;
 uvec2 GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id;
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x = subgroup_size;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_size.z = workgroup_size;
 uint workgroup_id = gl_WorkGroupID.x;
 GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.y = workgroup_id;
 uint workgroup_base = GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_size.z * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.y;
 GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_size.y = workgroup_base;
 uint virtual_gid = GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_size.y + subgroup_id * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x + subgroup_local_id;
 GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_size.x = virtual_gid;
 _GLF_struct_4 _GLF_struct_replacement_4 = _GLF_struct_4(true, bvec3(true), _GLF_struct_3(_GLF_struct_0(ivec2(1), ivec3(1)), GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_size.y + subgroup_id * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x + ((subgroup_local_id + 1) % GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x), _GLF_struct_1(uvec2(1u)), _GLF_struct_2(1u, 1, 1.0, mat4x3(1.0), 1u), mat3(1.0)));
 uint read = atomicLoad(buf[GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_size.x], 4, 64, 0);
 atomicStore(buf[_GLF_struct_replacement_4._f2.next_virtual_gid], uint(1), 4, 64, 4);
 if(subgroup_local_id + 1 < GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x)
  {
   atomicStore(checker[GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_size.x], read, 4, 64, 4);
   subgroupAll(false);
  }
 else
  {
   atomicStore(buf[GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_size.x], read, 4, 64, 4);
   subgroupAll(true);
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
