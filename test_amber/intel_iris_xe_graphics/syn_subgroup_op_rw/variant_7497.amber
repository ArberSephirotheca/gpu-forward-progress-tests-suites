#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (_GLF_IDENTITY(int(6), ~ (~ (_GLF_IDENTITY(int(6), int(ivec2(int(6), 1))))))) ^ 0)), (_GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) ^ 0), int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(int(6), (int(6)) ^ 0), 0, (0 << _GLF_IDENTITY(int(3), int(3))), 1), (true ? ivec4(_GLF_IDENTITY(int(6), (int(6)) ^ 0), 0, (0 << _GLF_IDENTITY(int(3), int(3))), 1) : _GLF_FUZZED((ivec4(-17730, 77710, 41946, -4692) * 70857))))))), (_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (int(6)) ^ 0))) - 0)) | (_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (int(6)) ^ 0))))) >> _GLF_IDENTITY(int(6), int(6)))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
      barrier();
     for(int _injected_loop_counter = (int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(4), int(4))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((true), ((true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false, (_GLF_IDENTITY((true), ((true)) && _GLF_TRUE(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec4(bvec3(true, false, false), false))))), (injectionSwitch.x < injectionSwitch.y))) || false) && true), (_GLF_IDENTITY((true), _GLF_IDENTITY(((true)) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1]))), vec2(_GLF_FUZZED((-15.07 / 4.0)), _GLF_FUZZED(-44.09)), bvec2(false, false))).x < injectionSwitch.y)), (_GLF_IDENTITY(((true)) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1]))), vec2(_GLF_FUZZED((-15.07 / 4.0)), _GLF_FUZZED(-44.09)), bvec2(false, false))).x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(((true)), bool(bool(_GLF_IDENTITY(((true)), (((true))) && true)))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1]), _GLF_IDENTITY(float(vec3(clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1]), 1.0, 0.0)), min(float(vec3(clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1]), 1.0, 0.0)), float(vec3(clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1]), 1.0, 0.0))))))), vec2(_GLF_FUZZED((_GLF_IDENTITY(-15.07 / 4.0, 1.0 * (_GLF_IDENTITY(-15.07 / 4.0, min(-15.07 / 4.0, -15.07 / 4.0)))))), _GLF_FUZZED(-44.09)), _GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(false, false), true), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec2(false, false), true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec2(false, false), true), false)), false))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec3(bvec2(false, false), true), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec2(false, false), true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec2(false, false), true), false)), false))))), false)))))).x < injectionSwitch.y)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false) || false))))
        {
         barrier();
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
      }
    }
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_WRAPPED_IF_TRUE(true))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(7.3))), injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))) - vec2(0.0, 0.0)).y))))
      barrier();
    }
   else
    {
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(9203.7730))) > injectionSwitch.y))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 0.0, tan(0.0), sqrt(0.0), 0.0, 0.0, tan(0.0)), (mat2x4(injectionSwitch, 0.0, tan(0.0), sqrt(0.0), 0.0, 0.0, tan(0.0))) - mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-4.9)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bool(true)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false), false || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (false))) || (false))))) || false)))))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
        barrier();
      }
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    barrier();
  }
 uvec2 GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id;
 uvec4 GLF_merged3_0_2_51_2_1_16_3_1_13GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizenext_virtual_gidnum_workgroup;
 uvec2 GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size;
 GLF_merged3_0_2_51_2_1_16_3_1_13GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizenext_virtual_gidnum_workgroup.xy = GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size;
 uvec4 GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false)))), (bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false))))) || false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(bvec2(true, true), true)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     do
      {
       GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.y = subgroup_id;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true, false)), ! (! (bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true, false)))))), false, false)), bool(bvec3(bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)), true, true)))))), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4(injectionSwitch.x, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(uintBitsToFloat((mat2x3(9531.0797, -231.592, -251.847, -27.94, 40.59, 8.2) , subgroup_id))))), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 1.0 * (float(mat4(injectionSwitch.x, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))))), 1.0, 1.0, 0.0, abs(0.0), sin(0.0), _GLF_IDENTITY(dot(vec2(0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), vec2(0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)))), dot(vec2(0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), vec2(0.0, 1.0))), sqrt(0.0), 1.0, 1.0, 0.0, 0.0))) > injectionSwitch.y) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), sin(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, abs(0.0), 1.0)), sqrt(1.0), 1.0, 1.0, 1.0, 1.0))).x, _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), sin(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, abs(0.0), 1.0)), sqrt(1.0), 1.0, 1.0, 1.0, 1.0))).x, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, abs(0.0), 1.0)), 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, abs(1.0))), (float(mat4(_GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), sin(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, abs(0.0), 1.0)), sqrt(1.0), 1.0, 1.0, 1.0, 1.0))).x, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, abs(0.0), 1.0)), 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, abs(1.0)))) / 1.0)) > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), sin(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, abs(0.0), 1.0)), sqrt(1.0), 1.0, 1.0, 1.0, 1.0))).x, _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), sin(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, abs(0.0), 1.0)), sqrt(1.0), 1.0, 1.0, 1.0, 1.0))).x, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, abs(0.0), 1.0)), 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, abs(1.0))), (float(mat4(_GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), sin(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, abs(0.0), 1.0)), sqrt(1.0), 1.0, 1.0, 1.0, 1.0))).x, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, abs(0.0), 1.0)), 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, abs(1.0)))) / 1.0)) > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), sin(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, abs(0.0), 1.0)), sqrt(1.0), 1.0, 1.0, 1.0, 1.0))).x, _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), sin(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, abs(0.0), 1.0)), sqrt(1.0), 1.0, 1.0, 1.0, 1.0))).x, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, abs(0.0), 1.0)), 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, abs(1.0))), (float(mat4(_GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), sin(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, abs(0.0), 1.0)), sqrt(1.0), 1.0, 1.0, 1.0, 1.0))).x, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, abs(0.0), 1.0)), 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, abs(1.0)))) / 1.0)) > injectionSwitch.y))))), false || (! (bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), sin(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, abs(0.0), 1.0)), sqrt(1.0), 1.0, 1.0, 1.0, 1.0))).x, _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), sin(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, abs(0.0), 1.0)), sqrt(1.0), 1.0, 1.0, 1.0, 1.0))).x, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, abs(0.0), 1.0)), 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, abs(1.0))), (float(mat4(_GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), sin(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, abs(0.0), 1.0)), sqrt(1.0), 1.0, 1.0, 1.0, 1.0))).x, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, abs(0.0), 1.0)), 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, abs(1.0)))) / 1.0)) > injectionSwitch.y)))))))))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), sin(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, abs(0.0), 1.0)), sqrt(1.0), 1.0, 1.0, 1.0, 1.0))).x, _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), sin(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, abs(0.0), 1.0)), sqrt(1.0), 1.0, 1.0, 1.0, 1.0))).x, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, abs(0.0), 1.0)), 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, abs(1.0))), (float(mat4(_GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), sin(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, abs(0.0), 1.0)), sqrt(1.0), 1.0, 1.0, 1.0, 1.0))).x, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, abs(0.0), 1.0)), 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, abs(1.0)))) / 1.0)) > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), sin(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, abs(0.0), 1.0)), sqrt(1.0), 1.0, 1.0, 1.0, 1.0))).x, _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), sin(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, abs(0.0), 1.0)), sqrt(1.0), 1.0, 1.0, 1.0, 1.0))).x, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, abs(0.0), 1.0)), 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, abs(1.0))), (float(mat4(_GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), sin(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, abs(0.0), 1.0)), sqrt(1.0), 1.0, 1.0, 1.0, 1.0))).x, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, abs(0.0), 1.0)), 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, abs(1.0)))) / 1.0)) > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), sin(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, abs(0.0), 1.0)), sqrt(1.0), 1.0, 1.0, 1.0, 1.0))).x, _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), sin(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, abs(0.0), 1.0)), sqrt(1.0), 1.0, 1.0, 1.0, 1.0))).x, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, abs(0.0), 1.0)), 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, abs(1.0))), (float(mat4(_GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), sin(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, abs(0.0), 1.0)), sqrt(1.0), 1.0, 1.0, 1.0, 1.0))).x, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, abs(0.0), 1.0)), 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, abs(1.0)))) / 1.0)) > injectionSwitch.y))))), false || (! (bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), sin(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, abs(0.0), 1.0)), sqrt(1.0), 1.0, 1.0, 1.0, 1.0))).x, _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), sin(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, abs(0.0), 1.0)), sqrt(1.0), 1.0, 1.0, 1.0, 1.0))).x, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, abs(0.0), 1.0)), 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, abs(1.0))), (float(mat4(_GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), sin(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, abs(0.0), 1.0)), sqrt(1.0), 1.0, 1.0, 1.0, 1.0))).x, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, abs(0.0), 1.0)), 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, abs(1.0)))) / 1.0)) > injectionSwitch.y)))))))))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false, true)), ! (! (bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), sin(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, abs(0.0), 1.0)), sqrt(1.0), 1.0, 1.0, 1.0, 1.0))).x, _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), sin(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, abs(0.0), 1.0)), sqrt(1.0), 1.0, 1.0, 1.0, 1.0))).x, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, abs(0.0), 1.0)), 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, abs(1.0))), (float(mat4(_GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), sin(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, abs(0.0), 1.0)), sqrt(1.0), 1.0, 1.0, 1.0, 1.0))).x, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, abs(0.0), 1.0)), 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, abs(1.0)))) / 1.0)) > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), sin(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, abs(0.0), 1.0)), sqrt(1.0), 1.0, 1.0, 1.0, 1.0))).x, _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), sin(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, abs(0.0), 1.0)), sqrt(1.0), 1.0, 1.0, 1.0, 1.0))).x, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, abs(0.0), 1.0)), 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, abs(1.0))), (float(mat4(_GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), sin(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, abs(0.0), 1.0)), sqrt(1.0), 1.0, 1.0, 1.0, 1.0))).x, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, abs(0.0), 1.0)), 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, abs(1.0)))) / 1.0)) > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), sin(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, abs(0.0), 1.0)), sqrt(1.0), 1.0, 1.0, 1.0, 1.0))).x, _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), sin(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, abs(0.0), 1.0)), sqrt(1.0), 1.0, 1.0, 1.0, 1.0))).x, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, abs(0.0), 1.0)), 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, abs(1.0))), (float(mat4(_GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), sin(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, abs(0.0), 1.0)), sqrt(1.0), 1.0, 1.0, 1.0, 1.0))).x, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, abs(0.0), 1.0)), 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, abs(1.0)))) / 1.0)) > injectionSwitch.y))))), false || (! (bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), sin(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, abs(0.0), 1.0)), sqrt(1.0), 1.0, 1.0, 1.0, 1.0))).x, _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), sin(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, abs(0.0), 1.0)), sqrt(1.0), 1.0, 1.0, 1.0, 1.0))).x, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, abs(0.0), 1.0)), 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, abs(1.0))), (float(mat4(_GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), sin(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, abs(0.0), 1.0)), sqrt(1.0), 1.0, 1.0, 1.0, 1.0))).x, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, abs(0.0), 1.0)), 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, abs(1.0)))) / 1.0)) > injectionSwitch.y)))))))))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false, true)))))))));
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         for(int _injected_loop_counter = int(_GLF_ONE(_GLF_IDENTITY(1.0, min(1.0, 1.0)), injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
      }
     else
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))))
        barrier();
      }
    }
   else
    {
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), false || (! (false)))))))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))) && true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))) && true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), (bool(bvec3((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))) && true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) || false), false || (_GLF_IDENTITY(bool(bvec3((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))) && true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))) && true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)), true), bvec3(bvec4(_GLF_IDENTITY(bvec3((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))) && true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)), true), bvec3(bvec4(_GLF_IDENTITY(bvec3((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))) && true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)), true), bvec3(bvec3(bvec3((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))) && true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)), true)))), true))), false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(_GLF_IDENTITY(bvec3((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))) && true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)), true), bvec3(bvec4(_GLF_IDENTITY(bvec3((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))) && true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)), true), bvec3(bvec4(_GLF_IDENTITY(bvec3((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))) && true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)), true), bvec3(bvec3(bvec3((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))) && true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)), true)))), true))), false))))))) || false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = _GLF_IDENTITY(0, (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) || false)))) ? _GLF_FUZZED(_GLF_IDENTITY(-90338, (true ? -90338 : _GLF_FUZZED(-549)))) : 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           barrier();
          }
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       do
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   for(int _injected_loop_counter = (((0 ^ 1) << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), max(int(5), int(5))))) >> _GLF_IDENTITY(int(5), int(5))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, max(0, 0))))], float(_GLF_IDENTITY(mat4x3((injectionSwitch)[0], 0.0, 0.0, _GLF_IDENTITY(tan(0.0), (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false) ? _GLF_FUZZED(5955.0622) : _GLF_IDENTITY(tan(0.0), max(_GLF_IDENTITY(tan(0.0), float(mat4x2(tan(0.0), 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)), 0.0, 1.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(tan(0.0), (tan(0.0)) * 1.0), min(tan(0.0), tan(0.0))))))), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0), mat4x3(mat4(mat4x3((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))[0], 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x4(0.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 1.0, 0.0)), (float(mat2x4(0.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 1.0, 0.0))) - log(1.0))), (_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x4(0.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)))), (float(mat2x4(0.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 1.0, 0.0))) - log(1.0)))) * 1.0))), tan(0.0), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)))))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-8967.2907), _GLF_FUZZED((vec2(2863.3526, 4499.6003) * vec2(-7075.6924, 39.35)).s)), bvec2(false, false))).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], float(_GLF_IDENTITY(mat4x3((injectionSwitch)[0], 0.0, 0.0, _GLF_IDENTITY(tan(0.0), (false ? _GLF_FUZZED(5955.0622) : _GLF_IDENTITY(tan(0.0), max(_GLF_IDENTITY(tan(0.0), float(mat4x2(tan(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, float(mat3(0.0, 1.0, tan(0.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, 0.0, 0.0, 0.0, 1.0))) : _GLF_FUZZED(8.2)))))), _GLF_IDENTITY(tan(0.0), min(tan(0.0), tan(0.0))))))), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0), mat4x3(mat4(mat4x3((injectionSwitch)[0], 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x4(0.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 1.0, 0.0)), (float(mat2x4(0.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 1.0, 0.0))) - log(1.0))))), tan(0.0), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)))))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-8967.2907), _GLF_FUZZED((vec2(2863.3526, 4499.6003) * vec2(-7075.6924, 39.35)).s)), bvec2(false, false))).y, float(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], float(_GLF_IDENTITY(mat4x3((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], 0.0 + (injectionSwitch[1]))))) + vec2(0.0, 0.0)))[0], 0.0, 0.0, _GLF_IDENTITY(tan(0.0), (false ? _GLF_FUZZED(5955.0622) : _GLF_IDENTITY(tan(0.0), max(_GLF_IDENTITY(tan(0.0), float(mat4x2(tan(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(sinh(8.5)) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 0.0))), _GLF_IDENTITY(tan(0.0), min(tan(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) - 0.0)) - 0.0)), tan(0.0))))))), 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(mat3x4(_GLF_IDENTITY(1.0, (1.0) + _GLF_ZERO(0.0, injectionSwitch.x)), 0.0, 1.0, 0.0, 1.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 1.0, 1.0, 1.0, 1.0, 0.0))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0), mat4x3(_GLF_IDENTITY(mat4(mat4x3(_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(vec2(919.585, -1.7)) : (injectionSwitch)))[0], 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x4(0.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 1.0, 0.0)), (float(mat2x4(0.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 1.0, 0.0))) - log(1.0))), (_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x4(0.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 1.0, 0.0)), (float(mat2x4(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0)), mix(float(float(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0))), float(_GLF_FUZZED(3.8)), bool(false)))), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(fract(5.0)) : 1.0)), log(1.0), 1.0, 1.0, 0.0, 1.0, 0.0))) - _GLF_IDENTITY(log(1.0), float(mat3(log(1.0), 0.0, abs(determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0)))))) - 0.0))), tan(0.0), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)), transpose(transpose(mat4(mat4x3(_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(vec2(919.585, -1.7)) : (injectionSwitch)))[0], 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x4(0.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 1.0, 0.0)), (float(mat2x4(0.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 1.0, 0.0))) - log(1.0))), (_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x4(0.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 1.0, 0.0)), (float(mat2x4(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0)), mix(float(float(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0))), float(_GLF_FUZZED(3.8)), bool(false)))), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(fract(5.0)) : 1.0)), log(1.0), 1.0, 1.0, 0.0, 1.0, 0.0))) - _GLF_IDENTITY(log(1.0), float(mat3(log(1.0), 0.0, abs(determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0)))))) - 0.0))), tan(0.0), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0))))))))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-8967.2907), _GLF_FUZZED((vec2(2863.3526, 4499.6003) * vec2(-7075.6924, 39.35)).s)), bvec2(false, false))).y, (false ? _GLF_FUZZED(2.5) : _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_IDENTITY(((injectionSwitch))[0], float(float(((injectionSwitch))[0]))), ((injectionSwitch))[1]), vec2(_GLF_FUZZED(9064.6730), _GLF_FUZZED(71.25)), bvec2(false, false)))[0], 0.0, 0.0, _GLF_IDENTITY(tan(_GLF_IDENTITY(0.0, (0.0) - _GLF_ZERO(0.0, injectionSwitch.x))), (false ? _GLF_FUZZED(5955.0622) : _GLF_IDENTITY(tan(0.0), max(_GLF_IDENTITY(tan(0.0), float(mat4x2(tan(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(tan(0.0), min(tan(0.0), tan(0.0))))))), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0), mat4x3(mat4(mat4x3((injectionSwitch)[0], 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x4(0.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 1.0, 0.0)), (float(mat2x4(0.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 1.0, 0.0))) - log(_GLF_IDENTITY(1.0, min(1.0, 1.0))))))), tan(0.0), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)))))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-8967.2907), _GLF_FUZZED((vec2(2863.3526, 4499.6003) * vec2(-7075.6924, 39.35)).s)), bvec2(false, _GLF_IDENTITY(false, (false) && true)))).y)), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))))))) + 0.0)))))
      {
       barrier();
      }
     else
      {
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(true, true && (true)), false), bvec3(bvec3(bvec3(_GLF_DEAD(false), true, false))))), bool(bvec4(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(bvec3(bvec3(_GLF_DEAD(false), true, false))))), true, true, false)))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))), (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter)), _injected_loop_counter))) + 0) != (0 >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (int(5)) / 1)))); _injected_loop_counter --)
    {
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w = _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u), subgroup_size, subgroup_size))) << 0u);
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y)))), true, false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     barrier();
    }
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 do
  {
   GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z = subgroup_local_id;
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || false)));
 uint num_workgroup = gl_NumWorkGroups.x;
 _GLF_IDENTITY(GLF_merged3_0_2_51_2_1_16_3_1_13GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizenext_virtual_gidnum_workgroup.w = num_workgroup, 0u ^ (GLF_merged3_0_2_51_2_1_16_3_1_13GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizenext_virtual_gidnum_workgroup.w = num_workgroup));
 GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.x = GLF_merged3_0_2_51_2_1_16_3_1_13GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizenext_virtual_gidnum_workgroup.w;
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), min(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), min(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), min(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), _GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), clamp(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), _GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), _GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize))) << uvec3(0u, 0u, 0u)), _GLF_IDENTITY((gl_WorkGroupSize) | (gl_WorkGroupSize), ((gl_WorkGroupSize) | (gl_WorkGroupSize)) * uvec3(1u, 1u, 1u))).x, gl_WorkGroupSize.x, gl_WorkGroupSize.x));
 GLF_merged3_0_2_51_2_1_16_3_1_13GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizenext_virtual_gidnum_workgroup.xy.y = workgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(667.283, (667.283) * 1.0)), _GLF_FUZZED(4990.8756)), _GLF_IDENTITY(vec2((injectionSwitch)[0], (injectionSwitch)[1]), (vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, (1) << (0 | 0))])) - vec2(0.0, 0.0)), bvec2(true, true))).x, min(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_FUZZED(667.283), mix(float(_GLF_IDENTITY(_GLF_FUZZED(667.283), (_GLF_FUZZED(667.283)) / 1.0)), float(_GLF_FUZZED(489.058)), bool(false))), _GLF_FUZZED(4990.8756)), max(vec2(_GLF_IDENTITY(_GLF_FUZZED(667.283), mix(float(_GLF_IDENTITY(_GLF_FUZZED(667.283), (_GLF_FUZZED(667.283)) / 1.0)), float(_GLF_FUZZED(489.058)), bool(false))), _GLF_FUZZED(4990.8756)), vec2(_GLF_IDENTITY(_GLF_FUZZED(667.283), mix(float(_GLF_IDENTITY(_GLF_FUZZED(667.283), (_GLF_FUZZED(667.283)) / 1.0)), float(_GLF_FUZZED(489.058)), bool(false))), _GLF_FUZZED(4990.8756)))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) - determinant(mat2(0.0, 0.0, 0.0, abs(0.0))))), bvec2(true, true))).x, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(667.283), 0.0 + (_GLF_IDENTITY(_GLF_FUZZED(667.283), float(vec4(_GLF_FUZZED(667.283), round(length(normalize(1.0))), 1.0, 0.0))))), _GLF_FUZZED(4990.8756)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x)) > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))))).y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - log(vec2(1.0, 1.0))).x > injectionSwitch.y), ! (! (_GLF_IDENTITY(! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) && true), true && (! _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])), clamp(injectionSwitch[_GLF_IDENTITY(1, (1) / 1)], injectionSwitch[1], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(8974.1683, 541.776))))[1])))).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])), clamp(injectionSwitch[_GLF_IDENTITY(1, (1) / 1)], injectionSwitch[1], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(8974.1683, 541.776))))[1])))).y))))))))))))))))), (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) && true))))), bool(bvec3(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) : _GLF_FUZZED(-57.31))) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) || false))) ? _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) : _GLF_FUZZED(_GLF_IDENTITY(-57.31, min(-57.31, -57.31))))) > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(259.539)), bool(false)))))))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), clamp(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))) : _GLF_IDENTITY(_GLF_FUZZED(-57.31), clamp(_GLF_IDENTITY(_GLF_FUZZED(-57.31), mix(float(_GLF_FUZZED(-6.7)), float(_GLF_FUZZED(-57.31)), bool(true))), _GLF_FUZZED(-57.31), _GLF_FUZZED(-57.31))))) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) || false))) ? _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) : _GLF_FUZZED(_GLF_IDENTITY(-57.31, min(-57.31, -57.31))))) > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(259.539)), bool(false)))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) || false))) ? _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) : _GLF_FUZZED(_GLF_IDENTITY(-57.31, min(-57.31, -57.31))))) > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(259.539)), bool(false)))))), false || (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) || false))) ? _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) : _GLF_FUZZED(_GLF_IDENTITY(-57.31, min(-57.31, -57.31))))) > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(259.539)), bool(false)))))))), true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) || false))) ? _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) : _GLF_FUZZED(_GLF_IDENTITY(-57.31, min(-57.31, -57.31))))) > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(259.539)), bool(false)))))), false || (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) || false))) ? _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) : _GLF_FUZZED(_GLF_IDENTITY(-57.31, min(-57.31, -57.31))))) > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(259.539)), bool(false)))))))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) || false))) ? _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) : _GLF_FUZZED(_GLF_IDENTITY(-57.31, min(-57.31, -57.31))))) > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(259.539)), bool(false)))))), false || (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) || false))) ? _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) : _GLF_FUZZED(_GLF_IDENTITY(-57.31, min(-57.31, -57.31))))) > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(259.539)), bool(false)))))))), true, true)))), true))))))))), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0)).y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0)).y)), true, true)), (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0)).y)), true, true))) || false)), bool(bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((true ? -37.94 : -2.6)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(5.6)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, bool(bvec4(true, true, false, false)))), bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, true), false)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((true ? -37.94 : -2.6)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(5.6)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, bool(bvec4(true, true, false, false)))), bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, true), false)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((true ? -37.94 : -2.6)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(5.6)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, bool(bvec4(true, true, false, false)))), bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, true), false)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((true ? -37.94 : -2.6)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(5.6)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, bool(bvec4(true, true, false, false)))), bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, true), false)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), bool(bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((true ? -37.94 : -2.6)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(5.6)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, bool(bvec4(true, true, false, false)))), bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, true), false)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((true ? -37.94 : -2.6)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(5.6)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, bool(bvec4(true, true, false, false)))), bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, true), false)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))))))))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(vec2(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), log(1.0), 1.0, 1.0, 0.0, 1.0, sin(0.0), 0.0)), (true ? vec2(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), log(1.0), 1.0, 1.0, 0.0, 1.0, sin(0.0), 0.0)) : _GLF_FUZZED(injectionSwitch))))) - vec2(0.0, 0.0)).y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((true ? -37.94 : -2.6)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(5.6, min(5.6, 5.6)))), bvec2(true, _GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))).y, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, bool(bvec4(true, true, false, false)))), bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, true), false))), bvec2(bvec2(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, bool(bvec4(true, true, false, false)))), bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, true), false))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))), false), bvec2(bvec3(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0)).y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED((true ? -37.94 : -2.6)), (injectionSwitch)[1]), vec2(mat2x3(vec2(_GLF_FUZZED((true ? -37.94 : -2.6)), (injectionSwitch)[1]), 0.0, 1.0, 0.0, 1.0))), vec2((injectionSwitch)[0], _GLF_FUZZED(5.6)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((-32.68 - radians(vec2(0.3, 486.179)))) : injectionSwitch)).y))))).y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, bool(bvec4(true, true, false, false)))), bvec2(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y, true), false)))))) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED((true ? -37.94 : -2.6)), (injectionSwitch)[1]), vec2(mat2x3(vec2(_GLF_FUZZED((true ? -37.94 : -2.6)), (injectionSwitch)[1]), 0.0, 1.0, 0.0, 1.0))), vec2((injectionSwitch)[0], _GLF_FUZZED(5.6)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((-32.68 - radians(vec2(0.3, 486.179)))) : injectionSwitch)).y))))).y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, bool(bvec4(true, true, false, false)))), bvec2(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y, true), false)))))) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))))))))))))))), false), false)))), bool(bool(bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0)).y, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0)).y) / 1.0))), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bool(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (bool(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((true ? -37.94 : -2.6)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(5.6)), bvec2(true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))))))).y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, bool(bvec4(true, true, false, false)))), bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, true), false)))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x < injectionSwitch.y, true, true), bvec3(bvec4(bvec3(injectionSwitch.x < injectionSwitch.y, true, true), true)))), (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x < injectionSwitch.y, true, true), bvec3(bvec4(bvec3(injectionSwitch.x < injectionSwitch.y, true, true), true))))) && true))))))))))))))))), false), bvec2(bvec3(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0)).y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0)).y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((true ? -37.94 : -2.6)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(5.6)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, bool(bvec4(true, true, false, false)))), bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, true), false)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))), false), false))))))))) && true))))), true, false))))))
  {
   do
    {
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(float(-7663))), vec2(_GLF_FUZZED(-39.46), (injectionSwitch)[1]), bvec2(false, true))).y))))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.y = workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 & 1)); _injected_loop_counter ++)
  {
   for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), true && (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     GLF_merged3_0_2_51_2_1_16_3_1_13GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizenext_virtual_gidnum_workgroup.xy.x = GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.y;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && true)))
      barrier();
    }
  }
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_51_2_1_16_3_1_13GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizenext_virtual_gidnum_workgroup.xy.y, min(_GLF_IDENTITY(GLF_merged3_0_2_51_2_1_16_3_1_13GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizenext_virtual_gidnum_workgroup.xy.y, max(GLF_merged3_0_2_51_2_1_16_3_1_13GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizenext_virtual_gidnum_workgroup.xy.y, GLF_merged3_0_2_51_2_1_16_3_1_13GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizenext_virtual_gidnum_workgroup.xy.y)), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_51_2_1_16_3_1_13GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizenext_virtual_gidnum_workgroup, (GLF_merged3_0_2_51_2_1_16_3_1_13GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizenext_virtual_gidnum_workgroup) | (GLF_merged3_0_2_51_2_1_16_3_1_13GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizenext_virtual_gidnum_workgroup)).xy.y, 0u | _GLF_IDENTITY((GLF_merged3_0_2_51_2_1_16_3_1_13GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizenext_virtual_gidnum_workgroup.xy.y), clamp((GLF_merged3_0_2_51_2_1_16_3_1_13GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizenext_virtual_gidnum_workgroup.xy.y), _GLF_IDENTITY((GLF_merged3_0_2_51_2_1_16_3_1_13GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizenext_virtual_gidnum_workgroup.xy.y), ((GLF_merged3_0_2_51_2_1_16_3_1_13GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizenext_virtual_gidnum_workgroup.xy.y)) << 0u), (GLF_merged3_0_2_51_2_1_16_3_1_13GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizenext_virtual_gidnum_workgroup.xy.y)))))) * _GLF_IDENTITY(GLF_merged3_0_2_51_2_1_16_3_1_13GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizenext_virtual_gidnum_workgroup.xy, (true ? GLF_merged3_0_2_51_2_1_16_3_1_13GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizenext_virtual_gidnum_workgroup.xy : _GLF_FUZZED(GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id))).x, (true ? _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_51_2_1_16_3_1_13GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizenext_virtual_gidnum_workgroup.xy.y, min(_GLF_IDENTITY(GLF_merged3_0_2_51_2_1_16_3_1_13GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizenext_virtual_gidnum_workgroup.xy.y, max(GLF_merged3_0_2_51_2_1_16_3_1_13GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizenext_virtual_gidnum_workgroup.xy.y, GLF_merged3_0_2_51_2_1_16_3_1_13GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizenext_virtual_gidnum_workgroup.xy.y)), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_51_2_1_16_3_1_13GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizenext_virtual_gidnum_workgroup, (GLF_merged3_0_2_51_2_1_16_3_1_13GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizenext_virtual_gidnum_workgroup) | (GLF_merged3_0_2_51_2_1_16_3_1_13GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizenext_virtual_gidnum_workgroup)).xy.y, 0u | (GLF_merged3_0_2_51_2_1_16_3_1_13GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizenext_virtual_gidnum_workgroup.xy.y)))), (_GLF_IDENTITY(GLF_merged3_0_2_51_2_1_16_3_1_13GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizenext_virtual_gidnum_workgroup.xy.y, min(_GLF_IDENTITY(GLF_merged3_0_2_51_2_1_16_3_1_13GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizenext_virtual_gidnum_workgroup.xy.y, max(GLF_merged3_0_2_51_2_1_16_3_1_13GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizenext_virtual_gidnum_workgroup.xy.y, GLF_merged3_0_2_51_2_1_16_3_1_13GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizenext_virtual_gidnum_workgroup.xy.y)), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_51_2_1_16_3_1_13GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizenext_virtual_gidnum_workgroup, (GLF_merged3_0_2_51_2_1_16_3_1_13GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizenext_virtual_gidnum_workgroup) | (GLF_merged3_0_2_51_2_1_16_3_1_13GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizenext_virtual_gidnum_workgroup)).xy.y, 0u | (GLF_merged3_0_2_51_2_1_16_3_1_13GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizenext_virtual_gidnum_workgroup.xy.y))))) | (_GLF_IDENTITY(GLF_merged3_0_2_51_2_1_16_3_1_13GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizenext_virtual_gidnum_workgroup.xy.y, min(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_51_2_1_16_3_1_13GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizenext_virtual_gidnum_workgroup, (GLF_merged3_0_2_51_2_1_16_3_1_13GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizenext_virtual_gidnum_workgroup) << uvec4(0u, 0u, 0u, 0u)).xy.y, max(GLF_merged3_0_2_51_2_1_16_3_1_13GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizenext_virtual_gidnum_workgroup.xy.y, GLF_merged3_0_2_51_2_1_16_3_1_13GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizenext_virtual_gidnum_workgroup.xy.y)), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_51_2_1_16_3_1_13GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizenext_virtual_gidnum_workgroup, (GLF_merged3_0_2_51_2_1_16_3_1_13GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizenext_virtual_gidnum_workgroup) | (GLF_merged3_0_2_51_2_1_16_3_1_13GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizenext_virtual_gidnum_workgroup)).xy.y, 0u | (GLF_merged3_0_2_51_2_1_16_3_1_13GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizenext_virtual_gidnum_workgroup.xy.y)))))) * _GLF_IDENTITY(GLF_merged3_0_2_51_2_1_16_3_1_13GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizenext_virtual_gidnum_workgroup.xy, (_GLF_IDENTITY(true, false || (true)) ? GLF_merged3_0_2_51_2_1_16_3_1_13GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizenext_virtual_gidnum_workgroup.xy : _GLF_FUZZED(GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id))).x : _GLF_FUZZED(subgroup_local_id)));
 if(_GLF_DEAD(false))
  barrier();
 do
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (false))))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sqrt(0.0)), _GLF_IDENTITY(injectionSwitch.x, float(mat4(_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), (_GLF_IDENTITY(0.0, min(0.0, 0.0))) - 0.0), 0.0, 1.0))), 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - sin(0.0)), 0.0, 0.0, 1.0, 0.0, 1.0), (true ? mat4(1.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-854.554) : 0.0)), 0.0)), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0) : _GLF_FUZZED(mat4(492.384, -7.5, -0.0, 1.6, -839.237, 1.3, -202.204, 3.8, 986.489, 366.989, 9.9, -6.5, 0.9, 51.15, 21.23, -0.5)))))))), 1.0), vec2(0.0, 0.0))), 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0))))) > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0)).y, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 1.0, 1.0, 1.0)))[1]))) - vec2(0.0, 0.0)).y) - 0.0)))))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       barrier();
      }
     else
      {
      }
    }
   else
    {
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.y * GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w, ~ (_GLF_IDENTITY(~ (GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.y * GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w), ~ (~ (~ (GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.y * GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w)))))) + GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z;
 GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x = virtual_gid;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.y * GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w, max(_GLF_IDENTITY(workgroup_base + GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.y * GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w, uint(uint(workgroup_base + GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.y * GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w))), workgroup_base + GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.y * GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w)) + ((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z, (GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z) | 0u) + 1) % GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w);
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))
  barrier();
 _GLF_IDENTITY(GLF_merged3_0_2_51_2_1_16_3_1_13GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizenext_virtual_gidnum_workgroup.z = _GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid)), ~ (~ (_GLF_IDENTITY(GLF_merged3_0_2_51_2_1_16_3_1_13GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizenext_virtual_gidnum_workgroup.z = _GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid)), ~ (~ (GLF_merged3_0_2_51_2_1_16_3_1_13GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizenext_virtual_gidnum_workgroup.z = _GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid)), (true ? _GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid)) : _GLF_FUZZED(workgroup_size)))))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     do
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, (false) && true)))))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       barrier();
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     barrier();
    }
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
    }
   else
    {
     do
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        barrier();
       for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (((1 ^ 0) << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))); _injected_loop_counter ++)
        {
         barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])))), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))).x > injectionSwitch.y, false, false)))))))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false)))
        {
         barrier();
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), true), bvec2(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), true)))))))))))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 uint read = atomicLoad(_GLF_IDENTITY(buf[GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x], (buf[GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x]) + (0u & 194272u)), 4, 64, 0);
 for(int _injected_loop_counter = _GLF_IDENTITY(1, (false ? _GLF_FUZZED(63824) : 1)); _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY((_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)), _GLF_ZERO(0.0, injectionSwitch.x)))), clamp(int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)), _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)), _GLF_ZERO(0.0, injectionSwitch.x)))), (int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)), _GLF_ZERO(0.0, injectionSwitch.x))))) | (int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)), _GLF_ZERO(0.0, injectionSwitch.x)))))), int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)), _GLF_ZERO(0.0, injectionSwitch.x)))))) >> _GLF_IDENTITY(int(4), int(4))), ((_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)), _GLF_ZERO(0.0, injectionSwitch.x)))), clamp(int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)), _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)), _GLF_ZERO(0.0, injectionSwitch.x)))), (int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)), _GLF_ZERO(0.0, injectionSwitch.x))))) | (int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)), _GLF_ZERO(0.0, injectionSwitch.x)))))), int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)), _GLF_ZERO(0.0, injectionSwitch.x)))))) >> _GLF_IDENTITY(int(4), int(4)))) / 1)); _injected_loop_counter --)
  {
   atomicStore(buf[GLF_merged3_0_2_51_2_1_16_3_1_13GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizenext_virtual_gidnum_workgroup.z], uint(1), 4, 64, 4);
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   do
    {
     if(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z + _GLF_IDENTITY(1, (1) >> 0) < _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w, uint(uint(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w, ~ (~ (GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w)))))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         atomicStore(checker[_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id, (_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), abs(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0), mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4x3(injectionSwitch, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), abs(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))))), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y) && true)), false || ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), abs(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0), mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4x3(injectionSwitch, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), abs(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))))), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y) && true))))) ? GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id : _GLF_FUZZED(uaddCarry(GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id, GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id, GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size)))).x], read, 4, _GLF_IDENTITY(64, min(64, 64)), 4);
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true))))))
        barrier();
       subgroupAll(false);
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       do
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
          {
           do
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
          }
         else
          {
           atomicStore(buf[GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x], read, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, (4) * 1), 4))) ^ _GLF_IDENTITY(0, min(0, 0))), 64, 4);
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             barrier();
            }
           else
            {
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
          barrier();
         barrier();
        }
       subgroupAll(true);
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 else
  {
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
