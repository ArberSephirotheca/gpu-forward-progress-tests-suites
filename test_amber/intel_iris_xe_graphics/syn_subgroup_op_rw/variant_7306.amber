#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec3 GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_base;
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize, min(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)), gl_WorkGroupSize))))).x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) / 1u);
 GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_base.z = workgroup_base;
 uint virtual_gid = GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_base.z + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bool(true)))))
  {
   GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_base.y = _GLF_IDENTITY(virtual_gid, ~ (_GLF_IDENTITY(~ (virtual_gid), max(~ (_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))), ~ (virtual_gid)))));
  }
 else
  {
  }
 uint next_virtual_gid = GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_base.z + subgroup_id * subgroup_size + (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) >> 0u)) << 0u), (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) >> 0u)) << 0u)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))));
 GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_base.x = next_virtual_gid;
 uint read = atomicLoad(buf[GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_base.y], 4, 64, 0);
 atomicStore(buf[GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_base.x], uint(1), 4, 64, 4);
 if(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, ! _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size)))), true && ((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size)))))), _GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size))), (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)) < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size)))) || false)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x < injectionSwitch.y, true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(bool(bvec4(injectionSwitch.x < injectionSwitch.y, true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, true, true)))), bool(bvec4(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(fma(degrees(vec2(6.7, 8431.9452)), injectionSwitch, injectionSwitch)) : injectionSwitch)).x < injectionSwitch.y))), true, false, false))))))), false)), bool(_GLF_IDENTITY(bvec3(bool(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size))), (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)) < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size)))) || false)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))), true, false, false))))))), false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec4(bvec3(bool(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, (subgroup_local_id + 1 < subgroup_size) || false)))), (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)) < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size)))) || false)), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / 1.0), injectionSwitch[1])).x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), true && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec3((injectionSwitch.x < injectionSwitch.y), true, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, false, false))))))), false)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y)), true), true))))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(workgroup_size))) + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size)))), true && ((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size)))))), bool(bvec3(! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, true && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), true && (bool(injectionSwitch.x < injectionSwitch.y))))))))), false)))), ((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size)))), true && ((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size)))))), bool(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(_GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id)) + 1 < subgroup_size))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size))), bool(bool(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, (subgroup_local_id + 1 < subgroup_size) || false))))))))), false, false)))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size))), bool(bool(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) + uint(_GLF_ZERO(0.0, injectionSwitch.x))) < subgroup_size, bool(bool(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 1u, 0u, 1u)))))), bool(bool(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size))))))) || false), false, false))))))))), _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y))), false || ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)))))), false))))) && true))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (! (_GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, uint(uvec3(subgroup_size, 1u, 1u)))) | (subgroup_size), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + ((_GLF_IDENTITY(subgroup_size, uint(uvec3(subgroup_size, 1u, 1u)))) | (subgroup_size)))))))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id))))) | 0u) + _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(1, 0, 1)), (int(ivec3(1, 0, 1))) * 1)))) < _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), bool(bool(subgroup_local_id + 1 < subgroup_size)))))), bool(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, false || (subgroup_local_id + 1 < subgroup_size)), bool(bool(subgroup_local_id + 1 < subgroup_size)))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(false, bool(bvec3(false, false, true))))))), (_GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size)))), true && ((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(bool(subgroup_local_id + 1 < subgroup_size)), bool(bvec3(bool(bool(subgroup_local_id + 1 < subgroup_size)), true, true))))))), bool(bvec3(! _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(62484) : 1)) < subgroup_size)))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(62484) : 1)) < subgroup_size)))), ((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(62484) : 1)) < subgroup_size))))) || false), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(62484) : 1)) < subgroup_size)))), ((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(62484) : 1)) < subgroup_size))))) || false), false, true), false))))), _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)), true, true, false)))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)), true, true, false)))))))), false)))), ! (! ((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size)))), true && ((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(bool(subgroup_local_id + 1 < subgroup_size)), bool(bvec3(bool(bool(subgroup_local_id + 1 < subgroup_size)), true, true))))))), bool(bvec3(! _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(62484) : 1)) < subgroup_size)))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (_GLF_IDENTITY(subgroup_local_id + 1, (0u << _GLF_IDENTITY(uint(4u), uint(4u))) | (_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1)))))) < subgroup_size, bool(bool(subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(62484) : 1)) < subgroup_size)))), ((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(62484) : 1)) < subgroup_size, true && (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(62484) : 1)) < subgroup_size, false || (subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(62484) : 1)) < subgroup_size))))))))) || false), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(_GLF_IDENTITY(62484, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(80652) : 62484))) : 1)) < subgroup_size)))), ((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(_GLF_IDENTITY(62484, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(80652) : 62484))) : 1)) < subgroup_size))))) || false), ((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(bool(subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(62484) : 1)) < subgroup_size)), ! (! (bool(bool(subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(62484) : 1)) < subgroup_size)))))))) || false), false, true), false))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)))), false)))))))) && true))), true && (! (! (_GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(bool(subgroup_local_id + _GLF_IDENTITY(1, (1) * ((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (true ? int(2) : _GLF_FUZZED(48141))))) >> _GLF_IDENTITY(int(2), int(2)))) < subgroup_size)), (bool(bool(subgroup_local_id + _GLF_IDENTITY(1, (1) * (_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (true ? int(2) : _GLF_FUZZED(48141)))), (_GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (true ? int(2) : _GLF_FUZZED(48141)))), ~ (~ (_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (true ? int(2) : _GLF_FUZZED(48141)))))))) | (_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (true ? int(2) : _GLF_FUZZED(48141))))))), 0 ^ ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (true ? int(2) : _GLF_FUZZED(48141)))), (_GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (true ? int(2) : _GLF_FUZZED(48141)))), ~ (~ (_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (true ? int(2) : _GLF_FUZZED(48141)))))))) | (_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (true ? int(2) : _GLF_FUZZED(48141))))))))) >> _GLF_IDENTITY(int(2), int(2)))) < subgroup_size))) || false))), true && ((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size)))))), bool(bvec3(! (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) << 0) < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size)))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-6.2)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 1.0, 1.0, 1.0, 1.0, log(1.0))))))))), float(_GLF_FUZZED(-79.76)), bool(false))), true && (injectionSwitch.x < injectionSwitch.y)))), false)))), ((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(_GLF_IDENTITY(bool(subgroup_local_id + 1 < subgroup_size), bool(bvec4(bool(subgroup_local_id + 1 < subgroup_size), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(subgroup_id) : subgroup_local_id + 1)) < subgroup_size, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, ! (! (_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) ^ 0u)) / uint(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, 1.0)), injectionSwitch.y))) < _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, max(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1))) * 1u), subgroup_local_id + 1)) < subgroup_size, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) ^ 0u)) / uint(_GLF_ONE(1.0, injectionSwitch.y))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) ^ 0u)) / uint(_GLF_ONE(1.0, injectionSwitch.y))), ~ (~ (_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) ^ 0u)) / uint(_GLF_ONE(1.0, injectionSwitch.y))))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) ^ 0u)) / uint(_GLF_ONE(1.0, injectionSwitch.y))), ~ (~ (_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) ^ 0u)) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))))) | (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) ^ 0u)) / uint(_GLF_ONE(1.0, injectionSwitch.y))), ~ (~ (_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) ^ 0u)) / uint(_GLF_ONE(1.0, injectionSwitch.y))))))))))) < _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), bool(bvec3(! (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) << 0))) < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size)))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, true && (_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))).x < injectionSwitch.y)))), false))))) && _GLF_IDENTITY(true, (true) && true))))))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true) || (bool(_GLF_IDENTITY(! (! (_GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, 1 * (1)))) < subgroup_size)))), true && ((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(bool(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))))))), ! (! (bool(bool(subgroup_local_id + 1 < subgroup_size))))))))), _GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size)))), _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)))), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))))) || false), false)), _GLF_IDENTITY(false, false || (false)) || (bool(bvec3(! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size)))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)))), false)))))), ((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)), ! (! (bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)))))), bool(bool(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u), 1u)), _GLF_IDENTITY((uint(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u), 1u))) / 1u, ~ (~ (_GLF_IDENTITY((uint(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u), 1u))) / 1u, (_GLF_IDENTITY((uint(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u), 1u))) / 1u, uint(uint((uint(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u), 1u))) / 1u)))) | 0u)))))))))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) << 0u) < _GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_id))), bool(bool(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, ! (! (subgroup_local_id + 1 < subgroup_size)))) && _GLF_IDENTITY(true, ! (! (true)))))))))), bool(bvec3(! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(_GLF_IDENTITY(subgroup_local_id, (true ? _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) : _GLF_FUZZED(subgroup_local_id))) + 1 < subgroup_size)))), _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y))) && true))), true))), false))))) && true))), _GLF_IDENTITY(true && (! (! (_GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : subgroup_size)), bool(_GLF_IDENTITY(bool(subgroup_local_id + 1 < subgroup_size), (bool(subgroup_local_id + 1 < subgroup_size)) && true)))), true && ((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size)))))), bool(bvec3(! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size)))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)))), false)))), ((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), bool(bool(subgroup_local_id + 1 < subgroup_size)))), true && ((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + _GLF_IDENTITY(1, (1) << 0) < subgroup_size)))))), bool(bvec3(! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_id))))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)))), false))))) && true)))), (_GLF_IDENTITY(true, bool(bvec3(true, false, false))) && (! (! (_GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size)))), ! (! ((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size))))))), true && _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size))))), ! (! (((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size))))))))), bool(bvec3(! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size)))), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(-29.64))), float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) / 1.0)))) / 1.0) < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)))), false)))), ((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size)))), true && ((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, true && (subgroup_local_id + 1 < subgroup_size)))))))), bool(bvec3(! (_GLF_IDENTITY(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), bool(bool(subgroup_local_id + 1 < subgroup_size)))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(true, false || (true)) && (injectionSwitch.x < injectionSwitch.y)))), false))))) && true))))) && true)))))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size)))), true && ((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size)))))), bool(bvec3(! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(_GLF_IDENTITY(subgroup_local_id + 1, (true ? subgroup_local_id + 1 : _GLF_FUZZED(subgroup_size))) < subgroup_size)))), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) < injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) < injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (injectionSwitch.x < injectionSwitch.y)))), false)))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size)))), true && ((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size)))))), (! _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size)))), _GLF_IDENTITY(true, (true) && true) && ((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size))))))) || false), bool(bvec3(! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(_GLF_IDENTITY(subgroup_local_id + 1, (true ? subgroup_local_id + 1 : _GLF_FUZZED(subgroup_size))) < subgroup_size)))), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) < injectionSwitch.y)), true && (injectionSwitch.x < injectionSwitch.y)))), false)))))), ((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size)))), true && ((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size)))))), bool(bvec3(! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size)))), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-34.35, -6.9)))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(9840.3167)), vec2(_GLF_FUZZED(-3.9), (injectionSwitch)[1]), bvec2(false, true))))).y, true && (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x)) < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y))))))), false))))) && true))), false || (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size)))), true && ((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size)))))), bool(bvec3(! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(_GLF_IDENTITY(subgroup_local_id + 1, (true ? subgroup_local_id + 1 : _GLF_FUZZED(subgroup_size))) < subgroup_size)))), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) < injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) < injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (injectionSwitch.x < injectionSwitch.y)))), false)))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size)))), true && ((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size)))))), (! _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size)))), _GLF_IDENTITY(true, (true) && true) && ((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size))))))) || false), bool(bvec3(! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(_GLF_IDENTITY(subgroup_local_id + 1, (true ? subgroup_local_id + 1 : _GLF_FUZZED(subgroup_size))) < subgroup_size)))), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) < injectionSwitch.y)), true && (injectionSwitch.x < injectionSwitch.y)))), false)))))), ((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size)))), true && ((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size)))))), bool(bvec3(! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size)))), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-34.35, -6.9)))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(9840.3167)), vec2(_GLF_FUZZED(-3.9), (injectionSwitch)[1]), bvec2(false, true))))).y, true && (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x)) < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y))))))), false))))) && true))), ((! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size)))), true && ((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size)))))), bool(bvec3(! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(_GLF_IDENTITY(subgroup_local_id + 1, (true ? subgroup_local_id + 1 : _GLF_FUZZED(subgroup_size))) < subgroup_size)))), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) < injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) < injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (injectionSwitch.x < injectionSwitch.y)))), false)))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size)))), true && ((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size)))))), (! _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size)))), _GLF_IDENTITY(true, (true) && true) && ((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size))))))) || false), bool(bvec3(! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(_GLF_IDENTITY(subgroup_local_id + 1, (true ? subgroup_local_id + 1 : _GLF_FUZZED(subgroup_size))) < subgroup_size)))), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) < injectionSwitch.y)), true && (injectionSwitch.x < injectionSwitch.y)))), false)))))), ((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size)))), true && ((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size)))))), bool(bvec3(! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size)))), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-34.35, -6.9)))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(9840.3167)), vec2(_GLF_FUZZED(-3.9), (injectionSwitch)[1]), bvec2(false, true))))).y, true && (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x)) < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y))))))), false))))) && true)))) || false))), true && _GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1 < subgroup_size)))), ((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1 < subgroup_size))))) && true), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))) < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size)))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))) < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size))))))))), bool(bvec3(! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size)))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)))), false)))), ((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size)))), true && ((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, ~ (~ (1))))) < subgroup_size)))))), bool(bvec3(! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size)))), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(3.3)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)))), false))))) && true))), (! (! (_GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, ! (! (subgroup_local_id + 1 < subgroup_size))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1, 0u | (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1)) < subgroup_size)))), ((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1 < subgroup_size), true && (bool(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1 < subgroup_size))))))) && true), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))) < subgroup_size, bool(bool(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) | (_GLF_IDENTITY(1, (1) - 0))) < subgroup_size)))), ! _GLF_IDENTITY((! ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))) < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size)))))), ! (! ((! ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))) < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size)))))))))))), bool(bvec3(! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size)))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(864.765)), float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), bool(true))))))), false)))), ((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size)))), true && ((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, ~ _GLF_IDENTITY((~ (1)), int(_GLF_ZERO(0.0, injectionSwitch.x)) + ((~ (1))))))) < subgroup_size)))))), bool(bvec3(! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size)))), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(3.3)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)))), false))))) && true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1 < subgroup_size)))), ((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1 < subgroup_size))))) && true), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))) < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size)))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))) < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size))))))))), bool(bvec3(! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size)))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)))), false)))), ((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size)))), true && ((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, ~ (~ (1))))) < subgroup_size)))))), bool(bvec3(! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size)))), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(3.3)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)))), false))))) && true))), (! (! (_GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, ! (! (subgroup_local_id + 1 < subgroup_size))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1, 0u | (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1)) < subgroup_size)))), ((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1 < subgroup_size), true && (bool(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1 < subgroup_size))))))) && true), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))) < subgroup_size, bool(bool(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) | (_GLF_IDENTITY(1, (1) - 0))) < subgroup_size)))), ! _GLF_IDENTITY((! ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))) < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size)))))), ! (! ((! ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))) < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size)))))))))))), bool(bvec3(! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size)))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(864.765)), float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), bool(true))))))), false)))), ((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size)))), true && ((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, ~ _GLF_IDENTITY((~ (1)), int(_GLF_ZERO(0.0, injectionSwitch.x)) + ((~ (1))))))) < subgroup_size)))))), bool(bvec3(! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size)))), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(3.3)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)))), false))))) && true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! ((_GLF_IDENTITY(! (! (_GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1 < subgroup_size)))), ((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1 < subgroup_size))))) && true), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))) < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size)))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))) < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size))))))))), bool(bvec3(! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size)))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)))), false)))), ((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size)))), true && ((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, ~ (~ (1))))) < subgroup_size)))))), bool(bvec3(! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size)))), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(3.3)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)))), false))))) && true))), (! (! (_GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, ! (! (subgroup_local_id + 1 < subgroup_size))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1, 0u | (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1)) < subgroup_size)))), ((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1 < subgroup_size), true && (bool(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1 < subgroup_size))))))) && true), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))) < subgroup_size, bool(bool(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) | (_GLF_IDENTITY(1, (1) - 0))) < subgroup_size)))), ! _GLF_IDENTITY((! ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))) < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size)))))), ! (! ((! ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))) < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size)))))))))))), bool(bvec3(! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size)))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(864.765)), float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), bool(true))))))), false)))), ((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size)))), true && ((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, ~ _GLF_IDENTITY((~ (1)), int(_GLF_ZERO(0.0, injectionSwitch.x)) + ((~ (1))))))) < subgroup_size)))))), bool(bvec3(! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size)))), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(3.3)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)))), false))))) && true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), false || (bool(_GLF_IDENTITY(! (! (_GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size)))), true && ((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(bool(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u))), false || (bool(bool(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u))))))))), bool(bvec3(! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1)) < subgroup_size)), ! (! (bool(bool(_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u) + 1)) < subgroup_size))))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, false)))))) && (injectionSwitch.x < injectionSwitch.y)))), false)))), ((_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u) + 1 < subgroup_size)))), true && ((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size)))))), bool(bvec3(! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size)))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)))), false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size)))), true && ((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-41891))) < subgroup_size)))))), bool(bvec3(! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size)))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)))), false)))), true && (! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, ! (! (subgroup_local_id + 1 < subgroup_size)))) && true), bool(bool(subgroup_local_id + 1 < subgroup_size)))), true && ((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-41891))) < subgroup_size)))))), bool(bvec3(! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size)))), _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y))))), (! (_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false), true && (injectionSwitch.x < injectionSwitch.y)))))) && true))), false)))))))))) && true))), true && (! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size)))), _GLF_IDENTITY(true && ((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size))))), bool(bool(_GLF_IDENTITY(true && ((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size))))), (true && ((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), bool(bvec3(! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size)))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)))), false))), true && (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size)))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, ! (! (subgroup_local_id + 1 < subgroup_size)))), bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, ! (! (subgroup_local_id + 1 < subgroup_size)))), true), bvec2(bvec3(bvec2(! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, ! (! (subgroup_local_id + 1 < subgroup_size)))), true), false))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, ! (! (subgroup_local_id + 1 < subgroup_size)))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, ! (! (subgroup_local_id + 1 < subgroup_size)))), true, false, true)), _GLF_IDENTITY(bool(bvec3(bool(bvec4(! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, ! (! (subgroup_local_id + 1 < subgroup_size)))), true, false, true)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec3(bool(bvec4(! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, ! (! (subgroup_local_id + 1 < subgroup_size)))), true, false, true)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, ! (! (subgroup_local_id + 1 < subgroup_size)))), true), bvec2(bvec3(bvec2(! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, ! (! (subgroup_local_id + 1 < subgroup_size)))), true), false)))))) && true))), bool(bool(subgroup_local_id + 1 < subgroup_size)))))), bool(bvec3(! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size)))), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(72.77)), bool(false)))), _GLF_IDENTITY(float(mat3((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(72.77)), bool(false)))), 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, sqrt(1.0)), vec2(0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))), dot(vec2(0.0, sqrt(1.0)), vec2(0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))))), 0.0, 1.0, 0.0, 0.0)), (float(mat3((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(72.77)), bool(false)))), 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, sqrt(1.0)), vec2(0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))), dot(vec2(0.0, sqrt(1.0)), vec2(0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))))), 0.0, 1.0, 0.0, 0.0))) / round(length(normalize(vec2(1.0, 1.0)))))) + 0.0)) - 0.0) < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))), float(_GLF_FUZZED((290.999 / -6725.4284))), bool(false))), true && (injectionSwitch.x < injectionSwitch.y)))), false)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (_GLF_IDENTITY(subgroup_local_id + 1, clamp(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))), subgroup_local_id + 1, subgroup_local_id + 1))))) < subgroup_size)))), true && _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, false || (subgroup_local_id + 1 < subgroup_size)))))), true && ((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, false || (subgroup_local_id + 1 < subgroup_size))))))))), ((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, false || (subgroup_local_id + 1 < subgroup_size)))))), true && ((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, false || (subgroup_local_id + 1 < subgroup_size)))))))))) && true)), _GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size)))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)))), false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size)))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)))), false)), (bool(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size)))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)))), false))) || false)), bool(bvec3(! (_GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size)))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)))), false)), (bool(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size)))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)))), false))) || false)), true, false)))))), bool(bool(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)))))), _GLF_IDENTITY(true, ! (! (true))) && ((_GLF_IDENTITY(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), bool(bool(subgroup_local_id + 1 < subgroup_size)))))), bool(bvec3(! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size)))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)))), false)))))))) && true)))))))))) && true)))))
  {
   atomicStore(checker[GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_base.y], _GLF_IDENTITY(read, (read) / 1u), 4, 64, 4);
   subgroupAll(false);
  }
 else
  {
   switch(_GLF_SWITCH((_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(1), int(1)), max(0 >> _GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY(0 >> _GLF_IDENTITY(int(1), int(1)), (0 >> _GLF_IDENTITY(int(1), int(1))) - 0)))) ^ 0, (_GLF_IDENTITY((_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(1), int(1)), max(0 >> _GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY(0 >> _GLF_IDENTITY(int(1), int(1)), (0 >> _GLF_IDENTITY(int(1), int(1))) - 0)))) ^ 0, ((_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(1), int(1)), max(0 >> _GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY(0 >> _GLF_IDENTITY(int(1), int(1)), (0 >> _GLF_IDENTITY(int(1), int(1))) - 0)))) ^ 0) | 0)) | (_GLF_IDENTITY((_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(1), int(1)), max(0 >> _GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY(0 >> _GLF_IDENTITY(int(1), int(1)), (0 >> _GLF_IDENTITY(int(1), int(1))) - 0)))) ^ 0, max((_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(1), int(1)), max(0 >> _GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY(0 >> _GLF_IDENTITY(int(1), int(1)), (0 >> _GLF_IDENTITY(int(1), int(1))) - 0)))) ^ 0, (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(1), int(1)), max(0 >> _GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY(0 >> _GLF_IDENTITY(int(1), int(1)), (0 >> _GLF_IDENTITY(int(1), int(1))) - 0)))) ^ 0)))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(1), int(1)), max(_GLF_IDENTITY(0, min(0, 0)) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), ~ (~ (_GLF_IDENTITY(int(1), int(1))))), _GLF_IDENTITY(0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) + 0)), int(1)), (0 >> _GLF_IDENTITY(int(1), int(1))) - 0)))) ^ 0), 0 + (_GLF_IDENTITY(~ ((_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(1), int(1)), max(0 >> _GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY(0 >> _GLF_IDENTITY(int(1), int(1)), (0 >> _GLF_IDENTITY(int(1), int(1))) - 0)))) ^ 0), (~ ((_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(1), int(1)), max(0 >> _GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY(0 >> _GLF_IDENTITY(int(1), int(1)), (0 >> _GLF_IDENTITY(int(1), int(1))) - 0)))) ^ 0)) / 1)))))))))
    {
     case 84:
     if(any(bvec2(false, true)))
      {
       do
        {
         mat3x4(-2.9, -296.804, -3.9, -59.68, 1632.7690, 1097.8058, -9.3, 495.141, 5.8, -0.1, -129.605, -41.01);
        }
       while(_GLF_WRAPPED_LOOP(false));
       if((_GLF_IDENTITY(218.257 >= 7.8, (218.257 >= 7.8) && true)))
        {
         int _GLF_SWITCH_0_0v, _GLF_SWITCH_0_1v, _GLF_SWITCH_0_2v;
         for(int _injected_loop_counter = _GLF_IDENTITY(0, min(0, 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           uvec2(111609u, _GLF_IDENTITY(58713u, (58713u) | 0u));
          }
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           do
            {
             if(((min(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(-65226, ~ (~ (-65226))), 17045), (_GLF_IDENTITY(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(-65226, ~ (~ (-65226))), 17045), min(ivec2(_GLF_IDENTITY(-65226, ~ (~ (-65226))), 17045), ivec2(_GLF_IDENTITY(-65226, ~ (~ (-65226))), _GLF_IDENTITY(17045, (17045) | (17045))))), ivec2(ivec4(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(-65226, ~ (~ (-65226))), 17045), min(ivec2(_GLF_IDENTITY(-65226, ~ (~ (_GLF_IDENTITY(-65226, (_GLF_IDENTITY(-65226, (-65226) / 1)) ^ 0)))), 17045), ivec2(_GLF_IDENTITY(-65226, ~ _GLF_IDENTITY((~ (-65226)), ((~ (-65226))) | (_GLF_IDENTITY((~ (-65226)), ~ (~ ((~ (-65226)))))))), 17045))), 0, 1)))) / ivec2(1, 1)), _GLF_IDENTITY(_GLF_SWITCH_0_0v, (_GLF_SWITCH_0_0v) / int(_GLF_ONE(1.0, injectionSwitch.y)))) , bvec4(_GLF_IDENTITY(false, (false) && true), false, true, true)) == equal(uvec4(111012u, 190651u, 123793u, 143605u), uvec4(59577u, 30962u, _GLF_IDENTITY(89750u, (0u << _GLF_IDENTITY(uint(3u), uint(3u))) ^ (89750u)), 108283u))))
              {
               mat2x3 _GLF_SWITCH_0_3v;
               (bvec3(false, false, true) , uvec2(79232u, 44710u));
               uint _GLF_SWITCH_0_4v;
               uvec3(_GLF_IDENTITY(174766u, _GLF_IDENTITY(max(174766u, _GLF_IDENTITY(174766u, (174766u) | 0u)), min(_GLF_IDENTITY(max(174766u, _GLF_IDENTITY(174766u, _GLF_IDENTITY((174766u) | 0u, (false ? _GLF_FUZZED(atomicXor(next_virtual_gid, bitfieldExtract(subgroup_id, _GLF_SWITCH_0_1v, _GLF_SWITCH_0_2v))) : (174766u) | 0u)))), ~ (~ (_GLF_IDENTITY(max(174766u, _GLF_IDENTITY(174766u, (174766u) | 0u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(max(174766u, _GLF_IDENTITY(174766u, (174766u) | 0u)), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))) * (max(174766u, _GLF_IDENTITY(174766u, (174766u) | 0u))))), 0u + (_GLF_IDENTITY(uint(_GLF_IDENTITY(max(174766u, _GLF_IDENTITY(174766u, (174766u) | 0u)), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))) * (max(174766u, _GLF_IDENTITY(174766u, (174766u) | 0u))))), ~ (~ (uint(_GLF_IDENTITY(max(174766u, _GLF_IDENTITY(174766u, (174766u) | 0u)), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))) * (max(174766u, _GLF_IDENTITY(174766u, (174766u) | 0u))))))))))), max(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(max(174766u, _GLF_IDENTITY(174766u, (174766u) | 0u)), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))) * (max(174766u, _GLF_IDENTITY(174766u, (174766u) | 0u))))), 0u + (_GLF_IDENTITY(uint(_GLF_IDENTITY(max(174766u, _GLF_IDENTITY(174766u, (174766u) | 0u)), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))) * (max(174766u, _GLF_IDENTITY(174766u, (174766u) | 0u))))), ~ (~ (uint(_GLF_IDENTITY(max(174766u, _GLF_IDENTITY(174766u, (174766u) | 0u)), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))) * (max(174766u, _GLF_IDENTITY(174766u, (174766u) | 0u))))))))))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(max(174766u, _GLF_IDENTITY(174766u, (174766u) | 0u)), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))) * (max(174766u, _GLF_IDENTITY(174766u, (174766u) | 0u))))), 0u + (_GLF_IDENTITY(uint(_GLF_IDENTITY(max(174766u, _GLF_IDENTITY(174766u, (174766u) | 0u)), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))) * (max(174766u, _GLF_IDENTITY(174766u, (174766u) | 0u))))), ~ (~ (uint(_GLF_IDENTITY(max(174766u, _GLF_IDENTITY(174766u, (174766u) | 0u)), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))) * (max(174766u, _GLF_IDENTITY(174766u, (174766u) | 0u))))))))))))))))), max(174766u, _GLF_IDENTITY(174766u, (174766u) | 0u))))));
               for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                {
                 do
                  {
                   for(int _injected_loop_counter = int(_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 1.0, 1.0, 0.0, 1.0)), cos(vec2(0.0, 0.0)) * (vec2(mat3x2(injectionSwitch, 1.0, 1.0, 0.0, 1.0)))), (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), vec2(vec2(_GLF_FUZZED(injectionSwitch)))) : vec2(mat3x2(injectionSwitch, 1.0, 1.0, 0.0, 1.0))))).y), (_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 1.0, 1.0, 0.0, 1.0)), cos(vec2(0.0, 0.0)) * (vec2(mat3x2(injectionSwitch, 1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 1.0)))), (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), bool(bvec4((_GLF_IDENTITY(false, false || (false))), false, false, false))))), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false), false, true)))))))))) ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), vec2(vec2(_GLF_FUZZED(injectionSwitch)))) : vec2(mat3x2(injectionSwitch, 1.0, 1.0, 0.0, 1.0))))).y)) / sqrt(1.0))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                    {
                     _GLF_SWITCH_0_2v;
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                }
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))); _injected_loop_counter ++)
                {
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < injectionSwitch.y)))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool((_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(67.10))) < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(bool((_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(67.10))) < injectionSwitch.y)), ! (! (bool((_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(67.10))) < injectionSwitch.y))))))), false || (bool((injectionSwitch.x < injectionSwitch.y)))))))))
                  {
                   ;
                  }
                 else
                  {
                  }
                }
               for(int _injected_loop_counter = (1 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                {
                 mat3(-5419.3738, -6988.2262, 386.578, 811.388, _GLF_IDENTITY(-9.7, 1.0 * (-9.7)), -952.972, 2.7, _GLF_IDENTITY(2.1, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2.1, 0.0 + (2.1)), min(2.1, _GLF_IDENTITY(2.1, float(mat2(2.1, 1.0, 0.0, 0.0))))), max(_GLF_IDENTITY(2.1, min(2.1, 2.1)), _GLF_IDENTITY(_GLF_IDENTITY(2.1, min(2.1, 2.1)), clamp(_GLF_IDENTITY(2.1, min(2.1, 2.1)), _GLF_IDENTITY(2.1, min(2.1, 2.1)), _GLF_IDENTITY(2.1, min(2.1, 2.1)))))), 2.1)), 71.41);
                }
               mat3(246.438, -9831.4810, 8213.7007, _GLF_IDENTITY(_GLF_IDENTITY(3.9, clamp(3.9, 3.9, 3.9)), max(_GLF_IDENTITY(3.9, clamp(3.9, 3.9, 3.9)), _GLF_IDENTITY(3.9, clamp(3.9, 3.9, 3.9)))), 2.5, 9.5, 7.9, 5.7, _GLF_IDENTITY(83.04, (false ? _GLF_FUZZED(_GLF_IDENTITY(-17.68, (-17.68) - 0.0)) : 83.04)));
              }
             else
              {
               do
                {
                 _GLF_IDENTITY(uvec2(25651u, 127610u), (true ? uvec2(_GLF_IDENTITY(25651u, _GLF_IDENTITY((25651u), (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))) ? _GLF_FUZZED(subgroup_size) : (25651u))) | (25651u)), _GLF_IDENTITY(127610u, (127610u) / 1u)) : _GLF_FUZZED(uvec2(_GLF_IDENTITY(52449u, (52449u) | (52449u)), 135205u))));
                }
               while(_GLF_WRAPPED_LOOP(false));
               ivec3 _GLF_SWITCH_0_5v, _GLF_SWITCH_0_6v, _GLF_SWITCH_0_7v;
               mat3x2(_GLF_IDENTITY(-571.885, (-571.885) / 1.0), -347.989, 66.59, 53.98, 511.063, 9.4);
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (false))))
        {
        }
       else
        {
         ;
         ;
        }
      }
     case 0:
     do
      {
       do
        {
         atomicStore(buf[GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_base.y], read, 4, 64, _GLF_IDENTITY(4, min(4, 4)));
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     while(_GLF_WRAPPED_LOOP(false));
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (0 & 65997) ^ (_injected_loop_counter)) > (0 | 0)); _injected_loop_counter --)
      {
       subgroupAll(true);
      }
     break;
     case 15:
     do
      {
       bvec2(false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), (bool(bvec4(false, true, false, false))) && true))))));
      }
     while(_GLF_WRAPPED_LOOP(false));
     case 32:
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(-84679), (_GLF_FUZZED(-84679)) | (0 << _GLF_IDENTITY(int(3), int(3)))) : _GLF_IDENTITY(int(2), min(int(2), int(2)))))))); _injected_loop_counter ++)
            {
             ;
            }
          }
         else
          {
          }
        }
      }
     else
      {
      }
     default:
     for(int _injected_loop_counter = _GLF_IDENTITY(0, (0 << _GLF_IDENTITY(int(2), int(2))) + (0)); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), ! (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) ^ 0) != 1)))); _injected_loop_counter ++)
      {
       1;
      }
    }
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
