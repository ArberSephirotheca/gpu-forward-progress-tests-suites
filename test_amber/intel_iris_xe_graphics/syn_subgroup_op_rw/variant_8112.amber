#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_4 {
 uint next_virtual_gid;
 ivec3 _f0;
 mat2x4 _f1;
 bvec2 _f2;
 float _f3;
} ;

struct _GLF_struct_3 {
 mat3 _f0;
 uvec3 _f1;
} ;

struct _GLF_struct_2 {
 ivec2 _f0;
 float _f1;
 mat3 _f2;
 mat4x2 _f3;
 bool _f4;
} ;

struct _GLF_struct_1 {
 uvec3 _f0;
 mat4 _f1;
 ivec4 _f2;
 bvec3 _f3;
 float _f4;
 bvec3 _f5;
} ;

struct _GLF_struct_0 {
 bvec3 _f0;
 uvec4 _f1;
} ;

struct _GLF_struct_5 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 mat2 _f2;
 _GLF_struct_2 _f3;
 uvec4 _f4;
 _GLF_struct_3 _f5;
 _GLF_struct_4 _f6;
} ;

struct _GLF_struct_6 {
 mat3 _f0;
 vec4 _f1;
 uvec3 _f2;
 _GLF_struct_5 _f3;
 int _f4;
 mat4x3 _f5;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) && true) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) || false))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), ((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))) && true)) || false)))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, false, true)), bool(_GLF_IDENTITY(bvec2(bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, false, true)), true), bvec2(bvec3(bvec2(bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, false, true)), true), false)))))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))), true && (_GLF_DEAD(false)))), false, true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) || false))))))), ! (_GLF_IDENTITY(! (true && (_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))), bool(bvec4(_GLF_IDENTITY(! (true && (_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))), (! (true && (_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))))))) && true), true, false, true))))))), false, true), true)))), false || (bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))) && true))), bool(bvec3(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))) && true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && (_GLF_DEAD(false)))), false, true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((true && (_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))), ! (! ((true && (_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))))))))), bool(bvec4(_GLF_IDENTITY(! (true && (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true && (_GLF_IDENTITY(false, ! (! (false)))), ! (! (true && (_GLF_IDENTITY(false, ! (! (false))))))))), (bool(bool(_GLF_IDENTITY(true && (_GLF_IDENTITY(false, ! (! (false)))), ! (! (true && (_GLF_IDENTITY(false, ! (! (false)))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (! (true && (_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))))))) && true), true, false, true))))))), false, true), true))))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, 0u ^ (gl_NumWorkGroups.x));
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), true && (! (_GLF_IDENTITY(false, bool(bool(false)))))))), (! (_GLF_IDENTITY(false, bool(bool(false))))) && true)))))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, ((1u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), clamp(_GLF_IDENTITY(uint(0u), (uint(0u)) ^ 0u), uint(0u), uint(0u))))) >> _GLF_IDENTITY(uint(0u), uint(0u))), 0u))) * subgroup_size + subgroup_local_id, (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, ((1u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), clamp(_GLF_IDENTITY(uint(0u), (uint(0u)) ^ 0u), uint(0u), uint(0u))))) >> _GLF_IDENTITY(uint(0u), uint(0u))), 0u))) * subgroup_size + subgroup_local_id, min(workgroup_base + _GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), clamp(_GLF_IDENTITY(uint(0u), (uint(0u)) ^ 0u), uint(0u), uint(0u))))), ((1u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), clamp(_GLF_IDENTITY(uint(0u), (uint(0u)) ^ 0u), uint(0u), uint(0u)))))) - 0u) >> _GLF_IDENTITY(uint(0u), uint(0u))), 0u))) * subgroup_size + subgroup_local_id, _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, ((1u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), clamp(_GLF_IDENTITY(uint(0u), (uint(0u)) ^ 0u), uint(0u), uint(0u))))) >> _GLF_IDENTITY(uint(0u), uint(0u))), 0u))) * subgroup_size, ~ (~ (workgroup_base + _GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uvec3(subgroup_id, ((1u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (uint(0u)) ^ 0u), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (uint(0u)) ^ 0u), max(_GLF_IDENTITY(uint(0u), (uint(0u)) ^ 0u), _GLF_IDENTITY(uint(0u), (uint(0u)) ^ 0u))))), uint(0u), uint(0u))))) >> _GLF_IDENTITY(uint(0u), uint(0u))), 0u), (uvec3(subgroup_id, ((1u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (uint(0u)) ^ 0u), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (uint(0u)) ^ 0u), max(_GLF_IDENTITY(uint(0u), (uint(0u)) ^ 0u), _GLF_IDENTITY(uint(0u), (uint(0u)) ^ 0u))))), uint(0u), uint(0u))))) >> _GLF_IDENTITY(uint(0u), uint(0u))), 0u)) | (uvec3(subgroup_id, ((1u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (uint(0u)) ^ 0u), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (uint(0u)) ^ 0u), max(_GLF_IDENTITY(uint(0u), (uint(0u)) ^ 0u), _GLF_IDENTITY(uint(0u), (uint(0u)) ^ 0u))))), uint(0u), uint(0u))))) >> _GLF_IDENTITY(uint(0u), uint(0u))), 0u))))) * subgroup_size))) + subgroup_local_id))) ^ 0u);
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-1627.1199)), float(injectionSwitch.x), bool(true))), 1.0, 1.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), _GLF_IDENTITY(cos(0.0), float(_GLF_IDENTITY(mat2(cos(0.0), 0.0, 1.0, 1.0), (mat2(cos(_GLF_IDENTITY(0.0, min(0.0, 0.0))), 0.0, 1.0, 1.0)) - mat2(0.0, 0.0, 0.0, 0.0))))))) > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, ((injectionSwitch.x > injectionSwitch.y) || false) || false))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), clamp(_GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), max(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), float(_GLF_IDENTITY(mat4x2(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, log(1.0)), (mat4x2(clamp(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x), 0.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-2117.5016) : 1.0)))), 1.0, 0.0, 1.0, 1.0, log(1.0))) * mat4(1.0)))), min(_GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), float(_GLF_IDENTITY(mat4x2(clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(8.2, -32.47)) : injectionSwitch)).x, injectionSwitch.x, injectionSwitch.x), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, log(1.0)), (mat4x2(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 0.0, 1.0, 1.0, log(1.0))) * mat4(1.0)))), _GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), float(_GLF_IDENTITY(mat4x2(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, log(1.0)), (mat4x2(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 0.0, 1.0, 1.0, log(1.0))) * mat4(1.0))))))) > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(min(6.2, 4.4)) : injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 1.0, sqrt(1.0), 0.0, 1.0)), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 1.0, sqrt(1.0), 0.0, 1.0)), (vec2(mat2x3(injectionSwitch, 1.0, sqrt(1.0), 0.0, 1.0))) * mat2(1.0))))).y) || false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true) || ((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0)).x > injectionSwitch.y) || false)), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y) || _GLF_IDENTITY(false, true && (false))), true && (((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).x > injectionSwitch.y) || false))) || false))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0), mat4x3(mat4x3(mat4x3(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))))), _GLF_IDENTITY(mat2(1.0) * (vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0), mat4x3(mat4x3(mat4x3(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)))))), mix(vec2(_GLF_FUZZED(5.9), _GLF_FUZZED(8.3)), vec2((mat2(1.0) * (vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(52.65)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), mat4x3(mat4x3(mat4x3(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 0.0)))))))[0], (mat2(1.0) * (vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0), mat4x3(mat4x3(mat4x3(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)))))))[1]), bvec2(true, true))))).y) || false, (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))) ? _GLF_FUZZED((-5.9 * -655.985)) : injectionSwitch.y))) || false, bool(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || false)))) || false))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0), mat4x3(mat4x3(mat4x3(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))))), _GLF_IDENTITY(mat2(1.0) * (vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0), mat4x3(mat4x3(mat4x3(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)))))), mix(vec2(_GLF_FUZZED(5.9), _GLF_FUZZED(8.3)), vec2((mat2(1.0) * (vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(52.65)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), mat4x3(mat4x3(mat4x3(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 0.0)))))))[0], (mat2(1.0) * (vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0), mat4x3(mat4x3(mat4x3(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)))))))[1]), bvec2(true, true))))).y) || false, (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))) ? _GLF_FUZZED((-5.9 * -655.985)) : injectionSwitch.y))) || false, bool(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || false)))) || false))), ! (! (bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0), mat4x3(mat4x3(mat4x3(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))))), _GLF_IDENTITY(mat2(1.0) * (vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0), mat4x3(mat4x3(mat4x3(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)))))), mix(vec2(_GLF_FUZZED(5.9), _GLF_FUZZED(8.3)), vec2((mat2(1.0) * (vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(52.65)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), mat4x3(mat4x3(mat4x3(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 0.0)))))))[0], (mat2(1.0) * (vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0), mat4x3(mat4x3(mat4x3(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)))))))[1]), bvec2(true, true))))).y) || false, (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))) ? _GLF_FUZZED((-5.9 * -655.985)) : injectionSwitch.y))) || false, bool(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || false)))) || false)))))))))), true && (bool(bool(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), vec2(_GLF_IDENTITY(mat4x3(clamp(injectionSwitch, injectionSwitch, injectionSwitch), 1.0, 0.0, 0.0, sqrt(1.0), 0.0, 0.0, 0.0, 0.0, sin(0.0), 0.0), mat4x3(_GLF_IDENTITY(mat4x3(mat4x3(clamp(injectionSwitch, injectionSwitch, injectionSwitch), 1.0, 0.0, 0.0, sqrt(1.0), 0.0, 0.0, 0.0, 0.0, sin(0.0), 0.0)), mat4x3(mat4(mat4x3(mat4x3(clamp(injectionSwitch, injectionSwitch, injectionSwitch), 1.0, 0.0, 0.0, sqrt(1.0), 0.0, 0.0, 0.0, 0.0, sin(0.0), 0.0)))))))))).y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED((-5.9 * -655.985)) : injectionSwitch.y))) || false, bool(bool((injectionSwitch.x > injectionSwitch.y) || false)))) || false))))))), true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y) || false, (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED((_GLF_IDENTITY(-5.9 * -655.985, max(-5.9 * -655.985, _GLF_IDENTITY(-5.9 * -655.985, (-5.9 * -655.985) - 0.0))))) : injectionSwitch.y))) || false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(_GLF_IDENTITY((-5.9 * -655.985), min(_GLF_IDENTITY((-5.9 * -655.985), min((-5.9 * -655.985), (-5.9 * -655.985))), _GLF_IDENTITY((-5.9 * -655.985), ((-5.9 * -655.985)) / 1.0)))) : injectionSwitch.y))) || false, true), bvec2(bvec2(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED((-5.9 * -655.985)) : injectionSwitch.y))) || false, true))))), bool(bvec4(bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED((-5.9 * -655.985)) : injectionSwitch.y))) || false, true), _GLF_IDENTITY(bvec2(bvec2(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED((-5.9 * -655.985)) : injectionSwitch.y))) || false, true))), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED((-5.9 * -655.985)) : injectionSwitch.y))) || false, true))), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec2(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED((-5.9 * -655.985)) : injectionSwitch.y))) || false, true))), false)), bvec2(bvec2(bvec2(bvec3(bvec2(bvec2(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED((-5.9 * -655.985)) : injectionSwitch.y))) || false, true))), false)))))))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED((-5.9 * -655.985)) : injectionSwitch.y))) || false, true))), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec2(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED((-5.9 * -655.985)) : injectionSwitch.y))) || false, true))), false)), bvec2(bvec2(bvec2(bvec3(bvec2(bvec2(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED((-5.9 * -655.985)) : injectionSwitch.y))) || false, true))), false)))))))), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED((-5.9 * -655.985)) : injectionSwitch.y))) || false, true))), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec2(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED((-5.9 * -655.985)) : injectionSwitch.y))) || false, true))), false)), bvec2(bvec2(bvec2(bvec3(bvec2(bvec2(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED((-5.9 * -655.985)) : injectionSwitch.y))) || false, true))), false)))))))), false))), false, true)))))), false, true, true)))), bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(((_GLF_IDENTITY(7.7 / 1838.3003, min(7.7 / 1838.3003, _GLF_IDENTITY(7.7 / 1838.3003, clamp(7.7 / 1838.3003, 7.7 / 1838.3003, 7.7 / 1838.3003))))) * -90.08))), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false)))) || false)))), true && (bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)))) || false, (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(_GLF_IDENTITY((-5.9 * -655.985), (true ? (-5.9 * -655.985) : _GLF_FUZZED(-6.1)))) : injectionSwitch.y))) || _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) || false), false))), bool(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-392.287)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)) : _GLF_FUZZED((-5792.4531 + injectionSwitch)))).y))), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-392.287)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)) : _GLF_FUZZED((-5792.4531 + injectionSwitch)))).y)))) || false)))) || _GLF_IDENTITY(false, ! (! (false))))))) || false)))))))))))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, false)))), true && (bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) || false), true), bvec2(bvec2(bvec2(false, true))))))), true, _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), bool(_GLF_IDENTITY(bvec2(bool(bvec2(false, false)), true), bvec2(bvec2(bvec2(bool(bvec2(false, false)), true)))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y) && true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(210.611, 1005.8444)))).y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)))), false || (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)))))))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, bool(bvec3(true, false, true))), true))))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 _GLF_struct_6 _GLF_struct_replacement_6 = _GLF_struct_6(mat3(1.0), vec4(1.0), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), _GLF_IDENTITY((1u) >> ((157340u & 0u) << _GLF_IDENTITY(uint(3u), uint(3u))), min((1u) >> ((157340u & 0u) << _GLF_IDENTITY(uint(3u), uint(3u))), _GLF_IDENTITY((1u) >> ((157340u & 0u) << _GLF_IDENTITY(uint(3u), uint(3u))), (_GLF_IDENTITY((1u), _GLF_IDENTITY(min(_GLF_IDENTITY((1u), ((1u)) | ((1u))), (1u)), (min(_GLF_IDENTITY((1u), ((1u)) | ((1u))), (1u))) | (_GLF_IDENTITY(min(_GLF_IDENTITY((1u), ((1u)) | ((1u))), (1u)), (min(_GLF_IDENTITY((1u), ((1u)) | ((1u))), (1u))) | 0u)))) >> ((157340u & 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (_GLF_IDENTITY(uint(3u), _GLF_IDENTITY(0u, (0u) | (0u)) | (uint(3u)))) | (uint(3u))), uint(3u)))) << 0u))))), _GLF_struct_5(_GLF_struct_0(bvec3(true), uvec4(1u)), _GLF_struct_1(uvec3(1u), _GLF_IDENTITY(mat4(1.0), transpose(transpose(mat4(_GLF_IDENTITY(1.0, 0.0 + (1.0)))))), ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec4(1, 0, 0, 0)), min(int(ivec4(1, 0, 0, 0)), int(ivec4(1, 0, 0, 0)))))) - 0)), bvec3(true), 1.0, bvec3(_GLF_IDENTITY(true, true && (true)))), mat2(1.0), _GLF_struct_2(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1), _GLF_IDENTITY(_GLF_IDENTITY(min(ivec2(_GLF_IDENTITY(1, 1 * (1))), ivec2(1)), (min(ivec2(_GLF_IDENTITY(1, 1 * (1))), ivec2(1))) + ivec2(0, 0)), min(min(ivec2(1), ivec2(1)), _GLF_IDENTITY(min(ivec2(1), ivec2(1)), (min(ivec2(1), ivec2(1))) ^ ivec2(0, 0))))), (_GLF_IDENTITY(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, int(ivec2(_GLF_IDENTITY(1, (1) | (1)), 1)))), _GLF_IDENTITY(min(ivec2(1), ivec2(1)), min(min(ivec2(1), ivec2(1)), _GLF_IDENTITY(_GLF_IDENTITY(min(ivec2(1), ivec2(1)), (min(ivec2(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(7917) : _GLF_IDENTITY(1, min(1, 1))))), ivec2(1))) ^ ivec2(0, 0)), (min(ivec2(1), ivec2(1))) ^ ivec2(0, 0))))), min(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1), (ivec2(1)) / (ivec2(1, 1) ^ ivec2(0, 0))), _GLF_IDENTITY(min(ivec2(1), ivec2(1)), min(_GLF_IDENTITY(min(ivec2(1), ivec2(1)), (min(ivec2(1), ivec2(1))) - ivec2(0, 0)), _GLF_IDENTITY(_GLF_IDENTITY(min(ivec2(1), ivec2(1)), min(min(ivec2(1), ivec2(1)), _GLF_IDENTITY(min(ivec2(1), ivec2(1)), min(_GLF_IDENTITY(min(ivec2(1), ivec2(1)), min(min(ivec2(1), ivec2(1)), min(ivec2(1), ivec2(1)))), min(ivec2(1), ivec2(1)))))), _GLF_IDENTITY((min(ivec2(1), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, clamp(1, 1, 1)))), min(_GLF_IDENTITY(1, (1) ^ 0), _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), int(int(1)))))), (ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, clamp(1, 1, 1)))), min(_GLF_IDENTITY(1, (1) ^ 0), _GLF_IDENTITY(1, int(int(1))))))) | ivec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), ((min(ivec2(1), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, clamp(1, 1, 1)))), min(_GLF_IDENTITY(1, (1) ^ 0), _GLF_IDENTITY(1, int(int(1)))))), (ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(0, ~ (~ (0))) | (_GLF_IDENTITY(1, clamp(1, 1, 1)))), min(_GLF_IDENTITY(1, (1) ^ 0), _GLF_IDENTITY(1, int(int(1))))))) | ivec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))) * ivec2(1, 1)) ^ ivec2(0, 0))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1), _GLF_IDENTITY(min(ivec2(1), ivec2(1)), min(min(ivec2(1), ivec2(1)), _GLF_IDENTITY(min(ivec2(1), ivec2(1)), (min(ivec2(1), ivec2(1))) ^ ivec2(0, 0))))), _GLF_IDENTITY((_GLF_IDENTITY(ivec2(1), _GLF_IDENTITY(min(ivec2(1), ivec2(1)), min(min(ivec2(1), ivec2(1)), _GLF_IDENTITY(_GLF_IDENTITY(min(ivec2(1), ivec2(1)), (min(ivec2(1), ivec2(1))) ^ ivec2(0, 0)), (_GLF_IDENTITY(min(ivec2(1), ivec2(1)), (min(ivec2(1), ivec2(1))) ^ ivec2(0, 0))) << ivec2(0, 0)))))) ^ ivec2(_GLF_IDENTITY(0, int(_GLF_IDENTITY(int(0), max(int(0), int(0))))), 0), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(ivec2((_GLF_IDENTITY(ivec2(1), _GLF_IDENTITY(min(ivec2(1), ivec2(1)), min(min(ivec2(1), ivec2(1)), _GLF_IDENTITY(_GLF_IDENTITY(min(ivec2(1), ivec2(1)), (min(ivec2(1), ivec2(1))) ^ ivec2(0, 0)), (_GLF_IDENTITY(min(ivec2(1), ivec2(1)), (min(ivec2(1), ivec2(1))) ^ ivec2(0, 0))) << ivec2(0, 0)))))) ^ ivec2(_GLF_IDENTITY(0, int(_GLF_IDENTITY(int(0), max(int(0), int(0))))), 0)), ivec2(ivec2(ivec2((_GLF_IDENTITY(ivec2(1), _GLF_IDENTITY(min(ivec2(1), ivec2(1)), min(min(ivec2(1), ivec2(1)), _GLF_IDENTITY(_GLF_IDENTITY(min(ivec2(1), ivec2(1)), (min(ivec2(1), ivec2(1))) ^ ivec2(0, 0)), (_GLF_IDENTITY(min(ivec2(1), ivec2(1)), (min(ivec2(1), ivec2(1))) ^ ivec2(0, 0))) << ivec2(0, 0)))))) ^ ivec2(_GLF_IDENTITY(0, int(_GLF_IDENTITY(int(0), max(int(0), int(0))))), 0)))))), (_GLF_IDENTITY(ivec2(_GLF_IDENTITY(ivec2((_GLF_IDENTITY(ivec2(1), _GLF_IDENTITY(min(ivec2(1), ivec2(1)), min(min(ivec2(1), ivec2(1)), _GLF_IDENTITY(_GLF_IDENTITY(min(ivec2(1), ivec2(1)), (min(ivec2(1), ivec2(1))) ^ ivec2(0, 0)), (_GLF_IDENTITY(min(ivec2(1), ivec2(1)), (min(ivec2(1), ivec2(1))) ^ ivec2(0, 0))) << ivec2(0, 0)))))) ^ ivec2(_GLF_IDENTITY(0, int(_GLF_IDENTITY(int(0), max(int(0), int(0))))), 0)), ivec2(ivec2(ivec2((_GLF_IDENTITY(ivec2(1), _GLF_IDENTITY(min(ivec2(1), ivec2(1)), min(min(ivec2(1), ivec2(1)), _GLF_IDENTITY(_GLF_IDENTITY(min(ivec2(1), ivec2(1)), (min(ivec2(1), ivec2(1))) ^ ivec2(0, 0)), (_GLF_IDENTITY(min(ivec2(1), ivec2(1)), (min(ivec2(1), ivec2(1))) ^ ivec2(0, 0))) << ivec2(0, 0)))))) ^ ivec2(_GLF_IDENTITY(0, int(_GLF_IDENTITY(int(0), max(int(0), int(0))))), 0)))))), (true ? ivec2(_GLF_IDENTITY(ivec2((_GLF_IDENTITY(ivec2(1), _GLF_IDENTITY(min(ivec2(1), ivec2(1)), min(min(ivec2(1), ivec2(1)), _GLF_IDENTITY(_GLF_IDENTITY(min(ivec2(1), ivec2(1)), (min(ivec2(1), ivec2(1))) ^ ivec2(0, 0)), (_GLF_IDENTITY(min(ivec2(1), ivec2(1)), (min(ivec2(1), ivec2(1))) ^ ivec2(0, 0))) << ivec2(0, 0)))))) ^ ivec2(_GLF_IDENTITY(0, int(_GLF_IDENTITY(int(0), max(int(0), int(0))))), 0)), ivec2(ivec2(ivec2((_GLF_IDENTITY(ivec2(1), _GLF_IDENTITY(min(ivec2(1), ivec2(1)), min(min(ivec2(1), ivec2(1)), _GLF_IDENTITY(_GLF_IDENTITY(min(ivec2(1), ivec2(1)), (min(ivec2(1), ivec2(1))) ^ ivec2(0, 0)), (_GLF_IDENTITY(min(ivec2(1), ivec2(1)), (min(ivec2(1), ivec2(1))) ^ ivec2(0, 0))) << ivec2(0, 0)))))) ^ ivec2(_GLF_IDENTITY(0, int(_GLF_IDENTITY(int(0), max(int(0), int(0))))), 0)))))) : _GLF_FUZZED(ivec2(-68460, -44129))))) - ivec2(0, 0)))), ivec2(0, 0) ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1), _GLF_IDENTITY(min(ivec2(1), ivec2(1)), min(min(ivec2(1), ivec2(1)), _GLF_IDENTITY(min(ivec2(1), ivec2(1)), (min(ivec2(1), ivec2(_GLF_IDENTITY(1, clamp(1, 1, 1))))) ^ ivec2(0, 0))))), (_GLF_IDENTITY(ivec2(1), _GLF_IDENTITY(min(ivec2(1), ivec2(1)), min(min(ivec2(1), ivec2(1)), _GLF_IDENTITY(_GLF_IDENTITY(min(ivec2(1), ivec2(1)), (min(ivec2(1), ivec2(1))) ^ ivec2(0, 0)), (_GLF_IDENTITY(min(ivec2(1), ivec2(1)), (min(ivec2(1), ivec2(1))) ^ ivec2(0, 0))) << ivec2(0, 0)))))) ^ ivec2(_GLF_IDENTITY(0, int(_GLF_IDENTITY(int(0), max(int(0), int(0))))), 0)), ivec2(0, 0) ^ (_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1), _GLF_IDENTITY(min(ivec2(1), ivec2(1)), min(min(ivec2(1), ivec2(1)), _GLF_IDENTITY(min(ivec2(1), ivec2(1)), (min(ivec2(_GLF_IDENTITY(1, 0 | (1))), ivec2(1))) ^ ivec2(0, 0))))), (_GLF_IDENTITY(ivec2(1), _GLF_IDENTITY(min(ivec2(1), ivec2(1)), min(min(ivec2(1), ivec2(1)), _GLF_IDENTITY(_GLF_IDENTITY(min(ivec2(1), ivec2(1)), (min(ivec2(1), ivec2(1))) ^ ivec2(0, 0)), _GLF_IDENTITY((_GLF_IDENTITY(min(ivec2(1), ivec2(1)), (min(ivec2(1), ivec2(1))) ^ ivec2(0, 0))) << ivec2(0, 0), ((_GLF_IDENTITY(min(ivec2(1), _GLF_IDENTITY(ivec2(1), max(ivec2(1), ivec2(1)))), (min(ivec2(1), ivec2(1))) ^ ivec2(0, 0))) << ivec2(0, 0)) * ivec2(1, 1))))))) ^ ivec2(_GLF_IDENTITY(0, int(_GLF_IDENTITY(int(0), max(int(0), int(0))))), 0))))))))) | ivec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), 1.0, _GLF_IDENTITY(mat3(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), float(_GLF_FUZZED(-6524.4986)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), mat3(mat3(mat3(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), float(_GLF_FUZZED(-6524.4986)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), mat4x2(1.0), _GLF_IDENTITY(true, ! (! (true)))), uvec4(1u), _GLF_struct_3(mat3(1.0), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, 1u)), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(1u, (_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (injectionSwitch.x < injectionSwitch.y)) ? 1u : _GLF_FUZZED(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base))), (_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (injectionSwitch.x < injectionSwitch.y)) ? 1u : _GLF_FUZZED(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base))), clamp(_GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), _GLF_IDENTITY((true), ((true)) && true) && true), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(1.7), _GLF_FUZZED(7.7)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))) / vec2(1.0, 1.0)), mat2(1.0) * (injectionSwitch)))).y)) ? 1u : _GLF_FUZZED(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base))), _GLF_TRUE(_GLF_IDENTITY(true, (true) && true), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y)))) ? 1u : _GLF_FUZZED(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base))), _GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (injectionSwitch.x < injectionSwitch.y)), true, false, false))) ? 1u : _GLF_FUZZED(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)))))) / 1u))))))), _GLF_struct_4(_GLF_IDENTITY(workgroup_base, 1u * (workgroup_base)) + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, sin(0.0)), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, sin(0.0)), vec4(0.0, 0.0, 1.0, 0.0))), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0))).x < injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, sin(0.0)), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, sin(0.0)), vec4(0.0, 0.0, 1.0, 0.0))), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0))).x < injectionSwitch.y)))) ? subgroup_id * subgroup_size : _GLF_FUZZED(workgroup_size))) + ((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(ivec3(1), max(_GLF_IDENTITY(ivec3(1), min(ivec3(1), ivec3(1))), _GLF_IDENTITY(ivec3(1), (true ? ivec3(1) : _GLF_FUZZED(ivec3(-51095, -75887, -27428)))))), mat2x4(1.0), bvec2(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), true && (_GLF_IDENTITY(false || (false), bool(bvec2(false || (false), false))))))), ! (! (true)))), (bool(_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), bool(bvec2((true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) || _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec2(_GLF_IDENTITY(false, true && (false)), false))))))), 1.0)), _GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), min(1, 1))) >> 0)) << 0)), int(int(_GLF_IDENTITY((_GLF_IDENTITY(1, _GLF_IDENTITY((1) << 0, ((1) << 0) | ((1) << 0)))), ((_GLF_IDENTITY(1, (1) << 0))) ^ 0)))) | 0, (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) >> 0)) << 0)), int(int(_GLF_IDENTITY((_GLF_IDENTITY(1, (1) << 0)), ((_GLF_IDENTITY(1, (1) << 0))) ^ 0)))) | 0, clamp(_GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) >> _GLF_IDENTITY(0, min(0, 0)))) << 0)), int(int(_GLF_IDENTITY((_GLF_IDENTITY(1, (1) << 0)), ((_GLF_IDENTITY(1, (1) << 0))) ^ 0)))) | 0, _GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) >> _GLF_IDENTITY(0, (0) | 0))) << 0)), int(int(_GLF_IDENTITY((_GLF_IDENTITY(1, (1) << 0)), ((_GLF_IDENTITY(1, (1) << 0))) ^ 0)))) | 0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) >> 0)) << 0)), int(int(_GLF_IDENTITY((_GLF_IDENTITY(1, (1) << 0)), ((_GLF_IDENTITY(1, (1) << 0))) ^ 0)))) | 0, (_GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) >> 0)) << 0)), int(int(_GLF_IDENTITY((_GLF_IDENTITY(1, (1) << 0)), ((_GLF_IDENTITY(1, (1) << 0))) ^ 0)))) | 0) ^ 0), (_GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) >> 0)) << 0)), int(int(_GLF_IDENTITY((_GLF_IDENTITY(1, (1) << 0)), ((_GLF_IDENTITY(1, (1) << 0))) ^ 0)))) | 0) - 0)))) | (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) >> 0)) << 0)), int(int(_GLF_IDENTITY((_GLF_IDENTITY(1, (1) << 0)), ((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) << 0), (1) << 0))) ^ 0)))) | 0, (true ? _GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), min(1, 1))) >> 0)) << 0)), int(int(_GLF_IDENTITY((_GLF_IDENTITY(1, (1) << 0)), ((_GLF_IDENTITY(1, (1) << 0))) ^ 0)))) | 0 : _GLF_FUZZED(-76639)))))), mat4x3(1.0));
 uint read = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, 1u * (virtual_gid))], 4, 64, 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[_GLF_struct_replacement_6._f3._f6.next_virtual_gid], _GLF_IDENTITY(uint(1), _GLF_IDENTITY((_GLF_IDENTITY(uint(1), (uint(1)) - 0u)) | 0u, max((_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (true ? uint(1) : _GLF_FUZZED(virtual_gid))), (_GLF_IDENTITY(uint(1), min(_GLF_IDENTITY(uint(1), min(uint(1), uint(1))), uint(1)))) | (uint(1)))) - _GLF_IDENTITY(0u, (0u) * 1u))) | 0u, _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_IDENTITY(1, (1) * 1)), (uint(1)) - 0u)) | _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(((_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), min(uint(1), uint(1)))) - 0u)) | 0u) ^ 0u, (((_GLF_IDENTITY(uint(1), _GLF_IDENTITY((_GLF_IDENTITY(uint(1), min(uint(1), uint(1)))) - 0u, ~ (~ ((_GLF_IDENTITY(uint(1), min(uint(1), uint(1)))) - _GLF_IDENTITY(0u, (0u) / 1u)))))) | 0u) ^ 0u) / 1u))))), _GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(4, 0, 0, 0), (ivec4(4, 0, 0, 0)) ^ (ivec4(0, 0, 0, 0) >> _GLF_IDENTITY(ivec4(_GLF_IDENTITY(6, (6) << 0)), _GLF_IDENTITY(ivec4(6), (ivec4(6)) | (ivec4(6))))))), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(int(ivec4(4, 0, 0, 0)), 0 | (int(ivec4(4, 0, 0, 0)))), max(_GLF_IDENTITY(int(ivec4(4, 0, 0, 0)), (int(ivec4(4, 0, 0, 0))) + 0), int(ivec4(4, 0, 0, 0)))), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) >> 0)) ^ 0)), ivec2(0, 0) ^ (ivec2(_GLF_IDENTITY(_GLF_IDENTITY(int(ivec4(4, 0, 0, 0)), 0 | (int(ivec4(4, 0, 0, 0)))), max(_GLF_IDENTITY(int(ivec4(4, 0, 0, 0)), (int(ivec4(4, 0, 0, 0))) + 0), int(ivec4(4, 0, 0, 0)))), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) >> 0)) ^ 0))))))), 0 ^ (_GLF_IDENTITY(4, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(4, 0, 0, 0), (ivec4(4, 0, 0, 0)) ^ (ivec4(0, 0, 0, 0) >> _GLF_IDENTITY(ivec4(_GLF_IDENTITY(6, (6) << 0)), _GLF_IDENTITY(ivec4(6), (ivec4(6)) | (ivec4(6))))))), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(int(ivec4(4, 0, 0, 0)), 0 | (int(ivec4(4, 0, 0, 0)))), max(_GLF_IDENTITY(int(ivec4(4, 0, 0, 0)), (int(ivec4(4, 0, 0, 0))) + 0), int(ivec4(4, 0, 0, 0)))), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) >> 0)) ^ 0)), ivec2(0, 0) ^ (ivec2(_GLF_IDENTITY(_GLF_IDENTITY(int(ivec4(4, 0, 0, 0)), 0 | (int(ivec4(4, 0, 0, 0)))), max(_GLF_IDENTITY(int(ivec4(4, 0, 0, 0)), (int(ivec4(4, 0, 0, 0))) + 0), int(ivec4(4, 0, 0, 0)))), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) >> 0)) ^ 0))))))))), _GLF_IDENTITY(_GLF_IDENTITY(64, min(64, 64)), int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(64, min(64, 64)), (_GLF_IDENTITY(64, min(64, 64))) | (_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, ~ (~ (_GLF_IDENTITY(64, 0 | (64))))), 64)))), 1))), 4);
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))))
  return;
 if(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(min(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1, _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 ^ (1))) ^ 0)), (min(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1, _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 ^ (1))) ^ 0))) ^ (1u ^ 1u))) < _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)))
  {
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
   if(_GLF_DEAD(false))
    return;
   subgroupAll(false);
  }
 else
  {
   atomicStore(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) * (_GLF_IDENTITY((_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY((_GLF_IDENTITY(1u, ~ (~ _GLF_IDENTITY((1u), max(_GLF_IDENTITY((1u), uint(uvec3((1u), 1u, 0u))), (1u)))))) | 0u, ((_GLF_IDENTITY(1u, ~ (~ _GLF_IDENTITY((1u), max(_GLF_IDENTITY((1u), uint(uvec3((1u), 1u, 0u))), (1u)))))) | 0u) ^ 0u))) | (1u)) << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, min(_GLF_IDENTITY(6u, min(6u, 6u)), 6u))), uint(6u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), clamp(uint(6u), uint(6u), uint(6u))))))) | (_GLF_IDENTITY(uint(6u), uint(6u))))) >> _GLF_IDENTITY(uint(6u), uint(_GLF_IDENTITY(6u, uint(uint(_GLF_IDENTITY(6u, clamp(_GLF_IDENTITY(6u, (6u) - 0u), 6u, 6u))))))), max((_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ _GLF_IDENTITY((1u), max(_GLF_IDENTITY((1u), uint(uvec3((1u), 1u, 0u))), (1u)))))) | 0u)) | (1u)) << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, min(_GLF_IDENTITY(6u, min(6u, 6u)), 6u))), uint(6u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), clamp(uint(6u), uint(6u), uint(6u))), max(_GLF_IDENTITY(uint(6u), clamp(uint(6u), uint(6u), uint(6u))), _GLF_IDENTITY(uint(6u), clamp(uint(6u), uint(6u), uint(6u))))))))) | (_GLF_IDENTITY(uint(6u), uint(6u))))) >> _GLF_IDENTITY(uint(6u), uint(_GLF_IDENTITY(6u, uint(uint(_GLF_IDENTITY(6u, clamp(_GLF_IDENTITY(6u, (6u) - 0u), 6u, 6u))))))), (_GLF_IDENTITY(1u, (_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u + (1u)), (_GLF_IDENTITY(1u, ~ (~ _GLF_IDENTITY((1u), max(_GLF_IDENTITY((1u), uint(uvec3((1u), 1u, 0u))), (1u)))))) | 0u)) | (1u)) << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, min(_GLF_IDENTITY(6u, min(6u, 6u)), 6u))), uint(_GLF_IDENTITY(6u, min(_GLF_IDENTITY(6u, uint(_GLF_IDENTITY(uvec4(6u, 1u, 0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u)))), (uvec4(6u, 1u, 0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))))) | (uvec4(6u, 1u, 0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u)))))))), _GLF_IDENTITY(6u, (6u) << 0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), clamp(uint(6u), _GLF_IDENTITY(uint(6u), 0u | (_GLF_IDENTITY(uint(6u), (false ? _GLF_FUZZED(virtual_gid) : uint(6u))))), uint(_GLF_IDENTITY(6u, ~ (~ (6u)))))))))) | (_GLF_IDENTITY(uint(6u), uint(6u))))) >> _GLF_IDENTITY(uint(6u), uint(_GLF_IDENTITY(6u, uint(uint(_GLF_IDENTITY(6u, clamp(_GLF_IDENTITY(_GLF_IDENTITY(6u, (6u) - 0u), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(6u, (6u) - 0u), ~ (~ (_GLF_IDENTITY(6u, (6u) - 0u)))))), 6u, 6u)))))))))))], read, 4, 64, 4);
   subgroupAll(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), bool(bvec4(_GLF_IDENTITY(true, (true) && true), false, false, false))));
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(mix(-98.39, _GLF_IDENTITY(-543.828, clamp(-543.828, -543.828, -543.828)), 0.7)))) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(2.7)), vec2(_GLF_FUZZED(0.8), (injectionSwitch)[1]), bvec2(false, true))), vec2(mat3(injectionSwitch, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(sqrt(1.0), mix(float(sqrt(1.0)), float(_GLF_FUZZED((8.6 + (+ 953.805)))), bool(false))), 1.0, 0.0))).y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(9.0) : _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sqrt(0.0)))), float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, 1.0, 1.0, 1.0, 1.0, 1.0), mat3(1.0) * (mat2x3(injectionSwitch.x, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0, 1.0))))) > injectionSwitch.y))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))), (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))) || false))))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false)))))))), bvec3(bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) && true)), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false)))))))), bvec3(bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) && true))) || false), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, bool(bvec2(true, false)))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, bool(bvec2(true, false)))))), _GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, 0.0)), vec2(mat3x2(vec2(vec3(injectionSwitch, 0.0)), 1.0, 1.0, 1.0, 1.0)))).y, (injectionSwitch.x > injectionSwitch.y) || false)))))))))))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) && true))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false)))))))), bvec3(bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) && true)), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false)))))))), bvec3(bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) && true))) || false), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, bool(bvec2(true, false)))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, bool(bvec2(true, false)))))), _GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, 0.0)), vec2(mat3x2(vec2(vec3(injectionSwitch, 0.0)), 1.0, 1.0, 1.0, 1.0)))).y, (injectionSwitch.x > injectionSwitch.y) || false)))))))))))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) && true))))), bool(bvec3(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false)))))))), bvec3(bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) && true)), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false)))))))), bvec3(bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) && true))) || false), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, bool(bvec2(true, false)))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, bool(bvec2(true, false)))))), _GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, 0.0)), vec2(mat3x2(vec2(vec3(injectionSwitch, 0.0)), 1.0, 1.0, 1.0, 1.0)))).y, (injectionSwitch.x > injectionSwitch.y) || false)))))))))))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) && true))))), false, true)))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false)))))))), bvec3(bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) && true)), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false)))))))), bvec3(bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) && true))) || false), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, bool(bvec2(true, false)))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, bool(bvec2(true, false)))))), _GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, 0.0)), vec2(mat3x2(vec2(vec3(injectionSwitch, 0.0)), 1.0, 1.0, 1.0, 1.0)))).y, (injectionSwitch.x > injectionSwitch.y) || false)))))))))))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) && true))))), bool(bvec3(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false)))))))), bvec3(bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) && true)), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false)))))))), bvec3(bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) && true))) || false), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, bool(bvec2(true, false)))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, bool(bvec2(true, false)))))), _GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, 0.0)), vec2(mat3x2(vec2(vec3(injectionSwitch, 0.0)), 1.0, 1.0, 1.0, 1.0)))).y, (injectionSwitch.x > injectionSwitch.y) || false)))))))))))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) && true))))), false, true)))))))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (_GLF_IDENTITY(false, true && (false))))) || false), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))) > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
