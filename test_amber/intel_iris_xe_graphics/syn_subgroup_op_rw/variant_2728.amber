#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(_GLF_IDENTITY(-0.2, min(_GLF_IDENTITY(-0.2, min(-0.2, -0.2)), -0.2))) : injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, min(gl_NumWorkGroups.x, gl_NumWorkGroups.x)), (gl_NumWorkGroups.x) + 0u);
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), clamp(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (true ? subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))) : _GLF_FUZZED(bitfieldReverse(workgroup_size)))), subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))), (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u) * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (true ? subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))) : _GLF_FUZZED(bitfieldReverse(workgroup_size)))), subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), ~ (~ (subgroup_size)))))) * ((1u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), ~ (~ (uint(0u)))))) >> _GLF_IDENTITY(uint(0u), uint(0u))))), max(~ (subgroup_id * subgroup_size), ~ (subgroup_id * subgroup_size))))), subgroup_id * subgroup_size)), ~ (~ _GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) ^ (0u >> _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), uint(uvec4(uint(8u), 1u, 1u, 1u)))))))), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(subgroup_size, 0u, (0u | 1u)), (uvec3(subgroup_size, 0u, (0u | 1u))) | (uvec3(subgroup_size, 0u, (0u | 1u))))), uint(uvec2(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(subgroup_size, 0u, (0u | 1u)), (uvec3(subgroup_size, 0u, (0u | 1u))) | (uvec3(subgroup_size, 0u, (0u | 1u))))), max(uint(_GLF_IDENTITY(uvec3(subgroup_size, 0u, (0u | 1u)), (uvec3(subgroup_size, 0u, (0u | 1u))) | (uvec3(subgroup_size, 0u, (0u | 1u))))), uint(_GLF_IDENTITY(uvec3(subgroup_size, 0u, (_GLF_IDENTITY(0u | 1u, clamp(0u | 1u, _GLF_IDENTITY(0u | 1u, min(0u | 1u, 0u | 1u)), 0u | 1u)))), (uvec3(subgroup_size, 0u, (0u | 1u))) | (uvec3(subgroup_size, 0u, (0u | 1u))))))), 0u)))), subgroup_id * subgroup_size))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size))), min(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), 0u | (_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size))))), _GLF_IDENTITY(uint(uvec4((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), 0u | (_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size))))), 0u, (1u & 1u), 1u)), (uint(uvec4((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), 0u | (_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size))))), 0u, (1u & 1u), 1u))) | (uint(uvec4((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), 0u | (_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size))))), 0u, (1u & 1u), 1u))))), (_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)))))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) - 0u)) ^ 0u)), (true ? _GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ _GLF_IDENTITY((subgroup_id * subgroup_size), ~ (~ (_GLF_IDENTITY((subgroup_id * subgroup_size), 1u * ((subgroup_id * subgroup_size)))))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, uint(uvec2(subgroup_id, 0u)))) / 1u) * subgroup_size)), max(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, uint(uvec2(subgroup_id, 0u)))) / 1u) * subgroup_size)), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, uint(uvec2(subgroup_id, 0u)))) / 1u) * subgroup_size)))), subgroup_id * subgroup_size), _GLF_IDENTITY(uint(uint(clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), subgroup_id * subgroup_size))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(uint(clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (subgroup_id * subgroup_size)), (true ? _GLF_IDENTITY(~ (~ (subgroup_id * subgroup_size)), (true ? ~ (~ (subgroup_id * subgroup_size)) : _GLF_FUZZED(workgroup_id))) : _GLF_FUZZED(workgroup_size))), uint(uvec3(_GLF_IDENTITY(~ (~ (subgroup_id * subgroup_size)), (false ? _GLF_FUZZED(subgroup_local_id) : ~ (~ (subgroup_id * subgroup_size)))), 0u, 0u)))), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), subgroup_id * subgroup_size))), (uint(uint(clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id))))) * subgroup_size) | (subgroup_id * subgroup_size)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size))), (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)))) | (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size))))))), subgroup_id * subgroup_size)))) | 0u), 1u, 1u), uvec3(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), ((0u)) ^ 0u) << 0u), 0u, 0u) | (uvec3(_GLF_IDENTITY(uint(uint(clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), max(~ (subgroup_id * subgroup_size), _GLF_IDENTITY(~ (subgroup_id * subgroup_size), ~ (~ (~ (subgroup_id * subgroup_size)))))))), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), subgroup_id * subgroup_size))), (uint(uint(clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u) * subgroup_size)), subgroup_id * subgroup_size)))) | 0u), 1u, 1u)))))) : _GLF_FUZZED(subgroup_local_id)))), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), max(~ (subgroup_id * subgroup_size), ~ (subgroup_id * subgroup_size))))), subgroup_id * subgroup_size)), ~ (~ (subgroup_id * subgroup_size))), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))))), subgroup_id * subgroup_size), (true ? _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)) * subgroup_size, ~ (~ (subgroup_id * subgroup_size))), _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * subgroup_size), uint(uvec4(_GLF_IDENTITY((subgroup_id * subgroup_size), uint(uvec3((subgroup_id * subgroup_size), 1u, 0u))), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u))) | (subgroup_id * subgroup_size)), subgroup_id * subgroup_size), _GLF_IDENTITY(uint(uint(clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_id * subgroup_size)), ~ (~ (~ (~ (subgroup_id * subgroup_size)))))), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), subgroup_id * subgroup_size))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(uint(clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_id * subgroup_size)), uint(uvec3(_GLF_IDENTITY(~ (~ (subgroup_id * subgroup_size)), (false ? _GLF_FUZZED(subgroup_local_id) : ~ (~ (subgroup_id * subgroup_size)))), 0u, 0u)))), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), subgroup_id * subgroup_size))), (uint(uint(clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) + 0u))))) | 0u), 1u, 1u), uvec3(0u, 0u, 0u) | (uvec3(_GLF_IDENTITY(uint(uint(clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), subgroup_id * subgroup_size))), (uint(uint(clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u) * subgroup_size)), _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u), subgroup_id)) * subgroup_size)))) | 0u), _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(workgroup_size) : 1u)), 1u)))))) : _GLF_FUZZED(subgroup_local_id)))), uint(uvec2(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), max(~ (subgroup_id * subgroup_size), ~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec4(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / 1u), (16014u & 0u), 0u, 0u)))) << 0u)), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY(((subgroup_id * subgroup_size)), (((subgroup_id * subgroup_size))) ^ 0u), max(~ ((subgroup_id * subgroup_size)), _GLF_IDENTITY(~ ((subgroup_id * subgroup_size)), ~ (_GLF_IDENTITY(~ (~ ((subgroup_id * subgroup_size))), 1u * (_GLF_IDENTITY(~ (~ ((subgroup_id * subgroup_size))), ~ (~ (~ (~ ((subgroup_id * subgroup_size)))))))))))))))))), subgroup_id * subgroup_size)), ~ (~ (subgroup_id * subgroup_size))), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), subgroup_id * subgroup_size), (true ? _GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), subgroup_id * subgroup_size), _GLF_IDENTITY(uint(uint(clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), subgroup_id * subgroup_size))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(uint(clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_id * subgroup_size)), uint(uvec3(_GLF_IDENTITY(~ (~ (subgroup_id * subgroup_size)), (false ? _GLF_FUZZED(subgroup_local_id) : ~ (~ (subgroup_id * subgroup_size)))), 0u, 0u)))), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), subgroup_id * subgroup_size))), (uint(uint(clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), subgroup_id * subgroup_size)))) | 0u), 1u, 1u), uvec3(0u, 0u, 0u) | (uvec3(_GLF_IDENTITY(uint(uint(clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), subgroup_id * subgroup_size))), (uint(uint(clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u) * subgroup_size, (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u) * subgroup_size) * 1u))), ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u) * subgroup_size, (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, 1u * (subgroup_id))) / 1u) * subgroup_size) * 1u)))))), subgroup_id * subgroup_size)))) | 0u), 1u, 1u)))))) : _GLF_FUZZED(subgroup_local_id)))), 1u))), _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), max(~ (subgroup_id * subgroup_size), ~ (subgroup_id * subgroup_size))))), subgroup_id * subgroup_size)), ~ (~ (subgroup_id * subgroup_size))), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), subgroup_id * subgroup_size), (true ? _GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u)))), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), subgroup_id * subgroup_size), _GLF_IDENTITY(uint(uint(clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), subgroup_id * subgroup_size))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(uint(clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) * 1u), 1u))))), uint(uvec3(_GLF_IDENTITY(~ (~ (subgroup_id * subgroup_size)), (false ? _GLF_FUZZED(subgroup_local_id) : ~ (~ (subgroup_id * subgroup_size)))), 0u, 0u)))), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), subgroup_id * subgroup_size))), (uint(uint(clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))), 0u ^ (_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))))), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u))))) | 0u), 1u, 1u), uvec3(0u, 0u, 0u) | (uvec3(_GLF_IDENTITY(uint(uint(clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size)), subgroup_id * subgroup_size))), (uint(uint(clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u) * subgroup_size)), subgroup_id * subgroup_size)))) | 0u), _GLF_IDENTITY(1u, min(1u, 1u)), 1u)))))) : _GLF_FUZZED(subgroup_local_id))), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), max(~ (subgroup_id * subgroup_size), ~ (subgroup_id * subgroup_size))))), subgroup_id * subgroup_size)), ~ (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u) * subgroup_size))), _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * subgroup_size) | (subgroup_id * subgroup_size), clamp((subgroup_id * subgroup_size) | (subgroup_id * subgroup_size), (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size), (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)))), subgroup_id * subgroup_size), (true ? _GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_id * subgroup_size)), (_GLF_IDENTITY(~ (~ (subgroup_id * subgroup_size)), (true ? ~ (~ (subgroup_id * subgroup_size)) : _GLF_FUZZED(workgroup_size)))) >> 0u)), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), subgroup_id * subgroup_size), _GLF_IDENTITY(uint(uint(clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))), _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / 1u)) | (subgroup_id * subgroup_size)), subgroup_id * subgroup_size))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(uint(clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_id * subgroup_size)), uint(uvec3(_GLF_IDENTITY(~ (~ (subgroup_id * subgroup_size)), (false ? _GLF_FUZZED(subgroup_local_id) : ~ (~ (subgroup_id * subgroup_size)))), 0u, 0u)))), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)))))))), (uint(uint(clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))), _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * subgroup_size) | (subgroup_id * subgroup_size), _GLF_IDENTITY(min((subgroup_id * subgroup_size) | (subgroup_id * subgroup_size), _GLF_IDENTITY((subgroup_id * subgroup_size) | (subgroup_id * subgroup_size), (_GLF_IDENTITY((subgroup_id * subgroup_size) | (subgroup_id * subgroup_size), max((subgroup_id * subgroup_size) | (subgroup_id * subgroup_size), (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)))) + 0u)), max(_GLF_IDENTITY(min((subgroup_id * subgroup_size) | (subgroup_id * subgroup_size), _GLF_IDENTITY((subgroup_id * subgroup_size) | (subgroup_id * subgroup_size), (_GLF_IDENTITY((subgroup_id * subgroup_size) | (subgroup_id * subgroup_size), max((subgroup_id * subgroup_size) | (subgroup_id * subgroup_size), (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)))) + 0u)), clamp(min((subgroup_id * subgroup_size) | (subgroup_id * subgroup_size), _GLF_IDENTITY((subgroup_id * subgroup_size) | (subgroup_id * subgroup_size), (_GLF_IDENTITY((subgroup_id * subgroup_size) | (subgroup_id * subgroup_size), max((subgroup_id * subgroup_size) | (subgroup_id * subgroup_size), (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)))) + 0u)), min((subgroup_id * subgroup_size) | (subgroup_id * subgroup_size), _GLF_IDENTITY((subgroup_id * subgroup_size) | (subgroup_id * subgroup_size), (_GLF_IDENTITY((subgroup_id * subgroup_size) | (subgroup_id * subgroup_size), max((subgroup_id * subgroup_size) | (subgroup_id * subgroup_size), (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)))) + 0u)), min((subgroup_id * subgroup_size) | (subgroup_id * subgroup_size), _GLF_IDENTITY((subgroup_id * subgroup_size) | (subgroup_id * subgroup_size), (_GLF_IDENTITY((subgroup_id * subgroup_size) | (subgroup_id * subgroup_size), max((subgroup_id * subgroup_size) | (subgroup_id * subgroup_size), (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)))) + 0u)))), _GLF_IDENTITY(min((subgroup_id * subgroup_size) | (subgroup_id * subgroup_size), _GLF_IDENTITY((subgroup_id * subgroup_size) | (subgroup_id * subgroup_size), (_GLF_IDENTITY((subgroup_id * subgroup_size) | (subgroup_id * subgroup_size), max((subgroup_id * subgroup_size) | (subgroup_id * subgroup_size), (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)))) + 0u)), (_GLF_IDENTITY(min((subgroup_id * subgroup_size) | (subgroup_id * subgroup_size), _GLF_IDENTITY((subgroup_id * subgroup_size) | (subgroup_id * subgroup_size), (_GLF_IDENTITY((subgroup_id * subgroup_size) | (subgroup_id * subgroup_size), max((subgroup_id * subgroup_size) | (subgroup_id * subgroup_size), (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)))) + 0u)), (min((subgroup_id * subgroup_size) | (subgroup_id * subgroup_size), _GLF_IDENTITY((subgroup_id * subgroup_size) | (subgroup_id * subgroup_size), (_GLF_IDENTITY((subgroup_id * subgroup_size) | (subgroup_id * subgroup_size), max((subgroup_id * subgroup_size) | (subgroup_id * subgroup_size), (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)))) + 0u))) << 0u)) | (min((subgroup_id * subgroup_size) | (subgroup_id * subgroup_size), _GLF_IDENTITY((subgroup_id * subgroup_size) | (subgroup_id * subgroup_size), (_GLF_IDENTITY((subgroup_id * subgroup_size) | (subgroup_id * subgroup_size), max((subgroup_id * subgroup_size) | (subgroup_id * subgroup_size), (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)))) + 0u)))))))), subgroup_id * subgroup_size)))) | 0u), 1u, 1u), uvec3(0u, 0u, 0u) | (uvec3(_GLF_IDENTITY(uint(uint(clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), subgroup_id * subgroup_size))), _GLF_IDENTITY((uint(uint(clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) - 0u)) ^ 0u), ~ (~ (subgroup_id * subgroup_size))), _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uint(subgroup_id * subgroup_size)))) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u) * subgroup_size)), subgroup_id * subgroup_size)))), clamp((uint(uint(clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) - 0u)) ^ 0u), ~ (~ (subgroup_id * subgroup_size))), _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uint(subgroup_id * subgroup_size)))) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u) * subgroup_size)), subgroup_id * subgroup_size)))), _GLF_IDENTITY((uint(uint(clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) - 0u)) ^ 0u), ~ (~ (subgroup_id * subgroup_size))), _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uint(subgroup_id * subgroup_size)))) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u) * subgroup_size)), subgroup_id * subgroup_size)))), ((uint(uint(clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) - 0u)) ^ 0u), ~ (~ (subgroup_id * subgroup_size))), _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uint(subgroup_id * subgroup_size)))) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u) * subgroup_size)), subgroup_id * subgroup_size))))) << 0u), (uint(uint(clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) - 0u)) ^ 0u), ~ (~ (subgroup_id * subgroup_size))), _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uint(subgroup_id * subgroup_size)))) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u) * subgroup_size)), subgroup_id * subgroup_size)))))) | 0u), 1u, 1u)))))) : _GLF_FUZZED(subgroup_local_id)))) | (_GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), max(~ (subgroup_id * subgroup_size), ~ (subgroup_id * subgroup_size))))), subgroup_id * subgroup_size)), ~ (~ (subgroup_id * subgroup_size))), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), subgroup_id * subgroup_size), (true ? _GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))), _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 1u, 0u))) * subgroup_size) | _GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) | 0u)), subgroup_id * subgroup_size), _GLF_IDENTITY(uint(uint(clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), subgroup_id * subgroup_size))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_id * subgroup_size)), uint(uvec3(_GLF_IDENTITY(~ (~ (subgroup_id * subgroup_size)), (false ? _GLF_FUZZED(subgroup_local_id) : ~ (~ (subgroup_id * subgroup_size)))), 0u, 0u)))), _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : subgroup_size)), (subgroup_id * _GLF_IDENTITY(subgroup_size, (1u ^ 1u) ^ (subgroup_size))) | (subgroup_id * subgroup_size)), subgroup_id * subgroup_size), 0u | (clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_id * subgroup_size)), uint(uvec3(_GLF_IDENTITY(~ (~ (subgroup_id * subgroup_size)), (false ? _GLF_FUZZED(subgroup_local_id) : ~ (~ (subgroup_id * subgroup_size)))), 0u, 0u)))), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * _GLF_IDENTITY(subgroup_size, (1u ^ 1u) ^ (subgroup_size))) | (subgroup_id * subgroup_size)), subgroup_id * subgroup_size))))), (uint(uint(clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), subgroup_id * subgroup_size)))) | 0u), _GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_local_id))))), _GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, (1u) * 1u) : _GLF_FUZZED(subgroup_local_id)))), uvec3(0u, 0u, 0u) | (uvec3(_GLF_IDENTITY(uint(uint(clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))), _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * subgroup_size), clamp((subgroup_id * subgroup_size), (subgroup_id * subgroup_size), _GLF_IDENTITY((subgroup_id * subgroup_size), min((subgroup_id * subgroup_size), (subgroup_id * subgroup_size))))) | (subgroup_id * subgroup_size)), subgroup_id * subgroup_size))), (uint(uint(clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) * 1u)))), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u) * subgroup_size)), subgroup_id * subgroup_size)))) | 0u), 1u, 1u)))))) : _GLF_FUZZED(subgroup_local_id))), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), max(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), max(~ (subgroup_id * subgroup_size), ~ (subgroup_id * subgroup_size))))), subgroup_id * subgroup_size)), ~ (~ (subgroup_id * subgroup_size))), _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), (subgroup_id * subgroup_size) | (subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u))), subgroup_id * subgroup_size), (true ? _GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), subgroup_id * subgroup_size), _GLF_IDENTITY(uint(uint(clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), subgroup_id * subgroup_size))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(uint(clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_id * subgroup_size)), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (subgroup_id * subgroup_size)), (false ? _GLF_FUZZED(subgroup_local_id) : ~ (~ (subgroup_id * subgroup_size)))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (subgroup_id * subgroup_size)), (false ? _GLF_FUZZED(subgroup_id) : ~ (~ (subgroup_id * subgroup_size)))), (false ? _GLF_FUZZED(subgroup_local_id) : ~ (~ (subgroup_id * subgroup_size))))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u, 0u)))), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) << 0u, uint(uvec4(_GLF_IDENTITY((subgroup_size) << 0u, ((subgroup_size) << 0u) + 0u), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, 0u))))))), (uint(uint(clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), subgroup_id * subgroup_size)))) | 0u), 1u, 1u), uvec3(0u, 0u, 0u) | (uvec3(_GLF_IDENTITY(uint(uint(clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), subgroup_id * subgroup_size))), (uint(uint(clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ _GLF_IDENTITY((~ (subgroup_id * subgroup_size)), (_GLF_IDENTITY((~ (subgroup_id * subgroup_size)), ~ (~ ((~ (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u), subgroup_id)) * subgroup_size)))))) << 0u)), _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u) * subgroup_size, 0u + (subgroup_id * subgroup_size))) >> 0u)) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u) * subgroup_size)), subgroup_id * subgroup_size)))) | 0u), 1u, 1u)))), clamp(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(uint(clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_id * subgroup_size)), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (subgroup_id * subgroup_size)), (false ? _GLF_FUZZED(subgroup_local_id) : ~ (~ (subgroup_id * subgroup_size)))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (subgroup_id * subgroup_size)), (false ? _GLF_FUZZED(subgroup_id) : ~ (~ (subgroup_id * subgroup_size)))), (false ? _GLF_FUZZED(subgroup_local_id) : ~ (~ (subgroup_id * subgroup_size))))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u, 0u)))), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) << 0u, uint(uvec4(_GLF_IDENTITY((subgroup_size) << 0u, ((subgroup_size) << 0u) + 0u), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, 0u))))))), (uint(uint(clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), subgroup_id * subgroup_size)))) | 0u), 1u, 1u), uvec3(0u, 0u, 0u) | (uvec3(_GLF_IDENTITY(uint(uint(clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), subgroup_id * subgroup_size))), (uint(uint(clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ _GLF_IDENTITY((~ (subgroup_id * subgroup_size)), (_GLF_IDENTITY((~ (subgroup_id * subgroup_size)), ~ (~ ((~ (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u), subgroup_id)) * subgroup_size)))))) << 0u)), _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u) * subgroup_size, 0u + (subgroup_id * subgroup_size))) >> 0u)) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u) * subgroup_size)), subgroup_id * subgroup_size)))) | 0u), 1u, 1u)))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(uint(clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_id * subgroup_size)), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (subgroup_id * subgroup_size)), (false ? _GLF_FUZZED(subgroup_local_id) : ~ (~ (subgroup_id * subgroup_size)))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (subgroup_id * subgroup_size)), (false ? _GLF_FUZZED(subgroup_id) : ~ (~ (subgroup_id * subgroup_size)))), (false ? _GLF_FUZZED(subgroup_local_id) : ~ (~ (subgroup_id * subgroup_size))))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u, 0u)))), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) << 0u, uint(uvec4(_GLF_IDENTITY((subgroup_size) << 0u, ((subgroup_size) << 0u) + 0u), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, 0u))))))), (uint(uint(clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), subgroup_id * subgroup_size)))) | 0u), 1u, 1u), uvec3(0u, 0u, 0u) | (uvec3(_GLF_IDENTITY(uint(uint(clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), subgroup_id * subgroup_size))), (uint(uint(clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ _GLF_IDENTITY((~ (subgroup_id * subgroup_size)), (_GLF_IDENTITY((~ (subgroup_id * subgroup_size)), ~ (~ ((~ (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u), subgroup_id)) * subgroup_size)))))) << 0u)), _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u) * subgroup_size, 0u + (subgroup_id * subgroup_size))) >> 0u)) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u) * subgroup_size)), subgroup_id * subgroup_size)))) | 0u), 1u, 1u)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(uint(clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_id * subgroup_size)), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (subgroup_id * subgroup_size)), (false ? _GLF_FUZZED(subgroup_local_id) : ~ (~ (subgroup_id * subgroup_size)))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (subgroup_id * subgroup_size)), (false ? _GLF_FUZZED(subgroup_id) : ~ (~ (subgroup_id * subgroup_size)))), (false ? _GLF_FUZZED(subgroup_local_id) : ~ (~ (subgroup_id * subgroup_size))))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u, 0u)))), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) << 0u, uint(uvec4(_GLF_IDENTITY((subgroup_size) << 0u, ((subgroup_size) << 0u) + 0u), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, 0u))))))), (uint(uint(clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), subgroup_id * subgroup_size)))) | 0u), 1u, 1u), uvec3(0u, 0u, 0u) | (uvec3(_GLF_IDENTITY(uint(uint(clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), subgroup_id * subgroup_size))), (uint(uint(clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ _GLF_IDENTITY((~ (subgroup_id * subgroup_size)), (_GLF_IDENTITY((~ (subgroup_id * subgroup_size)), ~ (~ ((~ (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u), subgroup_id)) * subgroup_size)))))) << 0u)), _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u) * subgroup_size, 0u + (subgroup_id * subgroup_size))) >> 0u)) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u) * subgroup_size)), subgroup_id * subgroup_size)))) | 0u), 1u, 1u)))), (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(uint(clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_id * subgroup_size)), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (subgroup_id * subgroup_size)), (false ? _GLF_FUZZED(subgroup_local_id) : ~ (~ (subgroup_id * subgroup_size)))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (subgroup_id * subgroup_size)), (false ? _GLF_FUZZED(subgroup_id) : ~ (~ (subgroup_id * subgroup_size)))), (false ? _GLF_FUZZED(subgroup_local_id) : ~ (~ (subgroup_id * subgroup_size))))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u, 0u)))), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) << 0u, uint(uvec4(_GLF_IDENTITY((subgroup_size) << 0u, ((subgroup_size) << 0u) + 0u), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, 0u))))))), (uint(uint(clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), subgroup_id * subgroup_size)))) | 0u), 1u, 1u), uvec3(0u, 0u, 0u) | (uvec3(_GLF_IDENTITY(uint(uint(clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), subgroup_id * subgroup_size))), (uint(uint(clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ _GLF_IDENTITY((~ (subgroup_id * subgroup_size)), (_GLF_IDENTITY((~ (subgroup_id * subgroup_size)), ~ (~ ((~ (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u), subgroup_id)) * subgroup_size)))))) << 0u)), _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u) * subgroup_size, 0u + (subgroup_id * subgroup_size))) >> 0u)) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u) * subgroup_size)), subgroup_id * subgroup_size)))) | 0u), 1u, 1u))))) / 1u))))) : _GLF_FUZZED(subgroup_local_id)))) * 1u)))))) + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
  return;
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false)), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), bool(bool(bool(bvec3(false, true, false)))))))), bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)))), (_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-81.66)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(3.0)), float(injectionSwitch.y), bool(true))))), injectionSwitch.y)))))), ! (! (bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-81.66)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(3.0)), float(injectionSwitch.y), bool(true))))), injectionSwitch.y)))))))))))) || false)), bool(bvec4(bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(722.046, 8.6)))).y)))), (_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7.6)), bool(false))) > injectionSwitch.y)))), true && (bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false)), true, true, false)))))), true, true, false)))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(0.5)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y)))), true && (bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false)), (bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true && (bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) || false))) && true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))) || (bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))))) || false)), (bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false))) && true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), false || (bool(injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), false || (bool(injectionSwitch.x > injectionSwitch.y)))) || false)), bool(bvec4(bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), false || (bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, (false) && true) || (injectionSwitch.x > injectionSwitch.y)))))), true, false, true))))) || false))), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), false || (bool(injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), false || (bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))), true, false, true))))) || false)))))))))) || false)), bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(670.194)), vec2(_GLF_FUZZED(0.5), (injectionSwitch)[_GLF_IDENTITY(1, int(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, (1) + 0), 1, 1, 1), min(ivec4(_GLF_IDENTITY(1, (1) + 0), 1, 1, 1), ivec4(_GLF_IDENTITY(1, (1) + 0), 1, 1, 1))), (_GLF_IDENTITY(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, (1) + 0), 1, 1, 1), min(ivec4(_GLF_IDENTITY(1, (1) + 0), 1, 1, 1), ivec4(_GLF_IDENTITY(1, (1) + 0), 1, 1, 1))), (_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, (1) + 0), 1, 1, 1), min(ivec4(_GLF_IDENTITY(1, (1) + 0), 1, 1, 1), ivec4(_GLF_IDENTITY(1, (1) + 0), 1, 1, 1)))) | ivec4(0, 0, 0, 0))) / ivec4(1, 1, 1, 1))))]), bvec2(false, true))), injectionSwitch)))).y)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, true))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, true)))), true && (! (_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))), bool(bvec3(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, true)))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, true)))), true && (! (_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))), bool(bvec3(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, true)))))))))))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, true))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, true)))), true && (! (_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))), bool(bvec3(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, true)))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, true)))), true && (! (_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))), bool(bvec3(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, true))))))))))))))))) || false)), bool(bvec4(bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false)), true, true, false)))))), true, true, false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
  }
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), max(_GLF_IDENTITY(1, (1) - 0), _GLF_IDENTITY(1, (1) - 0))), _GLF_IDENTITY(1, (1) - 0), _GLF_IDENTITY(1, (1) - 0))), (0 >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) * 1))) | (_GLF_IDENTITY(1, (1) - 0))), (subgroup_local_id + 1) | (subgroup_local_id + 1)) < subgroup_size)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(mat3(injectionSwitch.y, _GLF_IDENTITY(0.0, float(mat4x3(0.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 1.0))), 1.0, 1.0, _GLF_IDENTITY(0.0, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-4.7)), (float(_GLF_FUZZED(-4.7))) - abs(0.0)), float(0.0), bool(true))), 1.0, determinant(mat4(0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-32.84))), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0), (_GLF_IDENTITY(mat3(injectionSwitch.y, 0.0, 1.0, 1.0, 0.0, 1.0, determinant(mat4(0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), 1.0, 0.0), _GLF_IDENTITY(transpose(transpose(mat3(injectionSwitch.y, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - log(1.0)), 0.0, 1.0, determinant(mat4(0.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) - 0.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) - 0.0), max(_GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(0.0, (0.0) - 0.0))), _GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(0.0, (0.0) - 0.0))), 0.0, 0.0)), _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)), 1.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(6.8))), abs(1.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0))), (_GLF_IDENTITY(transpose(transpose(mat3(injectionSwitch.y, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - log(1.0)), 0.0, 1.0, determinant(mat4(0.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) - 0.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) - 0.0), max(_GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(0.0, (0.0) - 0.0))), _GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(0.0, (0.0) - 0.0))), 0.0, 0.0)), _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)), 1.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(6.8))), abs(1.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0))), (false ? _GLF_FUZZED(mat3(mat2x3(69.56, 8488.2101, -9550.8832, -7494.8651, 1.0, -76.47))) : transpose(transpose(mat3(injectionSwitch.y, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - log(1.0)), 0.0, 1.0, determinant(mat4(0.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) - 0.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) - 0.0), max(_GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(0.0, (0.0) - 0.0))), _GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(0.0, (0.0) - 0.0))), 0.0, 0.0)), _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)), 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(6.8))), mix(float(_GLF_FUZZED(788.365)), float(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(6.8)))), bool(true))), abs(1.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0)))))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))) / mat3(1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(true, bool(bvec4(true, false, false, true))) ? _GLF_IDENTITY(1.0, float(mat2x4(1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0))) : _GLF_FUZZED(roundEven(-46.06)))), 1.0, 1.0, 1.0, 1.0))), mix(float(float(_GLF_IDENTITY(mat3(injectionSwitch.y, _GLF_IDENTITY(0.0, float(mat4x3(0.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 1.0))), 1.0, 1.0, _GLF_IDENTITY(0.0, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-4.7)), (float(_GLF_FUZZED(-4.7))) - abs(0.0)), float(0.0), bool(true))), 1.0, determinant(mat4(0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-32.84))), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0), (_GLF_IDENTITY(mat3(injectionSwitch.y, 0.0, 1.0, 1.0, 0.0, 1.0, determinant(mat4(0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), 1.0, 0.0), _GLF_IDENTITY(transpose(transpose(mat3(injectionSwitch.y, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - log(1.0)), 0.0, 1.0, determinant(mat4(0.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) - 0.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) - 0.0), max(_GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(0.0, (0.0) - 0.0))), _GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(0.0, (0.0) - 0.0))), 0.0, 0.0)), _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)), 1.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(6.8))), abs(1.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0))), (_GLF_IDENTITY(transpose(transpose(mat3(injectionSwitch.y, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - log(1.0)), 0.0, 1.0, determinant(mat4(0.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) - 0.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) - 0.0), max(_GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(0.0, (0.0) - 0.0))), _GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(0.0, (0.0) - 0.0))), 0.0, 0.0)), _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)), 1.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(6.8))), abs(1.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0))), (false ? _GLF_FUZZED(mat3(mat2x3(69.56, 8488.2101, -9550.8832, -7494.8651, 1.0, -76.47))) : transpose(transpose(mat3(injectionSwitch.y, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - log(1.0)), 0.0, 1.0, determinant(mat4(0.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) - 0.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) - 0.0), max(_GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(0.0, (0.0) - 0.0))), _GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(0.0, (0.0) - 0.0))), 0.0, 0.0)), _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)), 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(6.8))), mix(float(_GLF_FUZZED(788.365)), float(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(6.8)))), bool(true))), abs(1.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0)))))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))) / mat3(1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(true, bool(bvec4(true, false, false, true))) ? _GLF_IDENTITY(1.0, float(mat2x4(1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0))) : _GLF_FUZZED(roundEven(-46.06)))), 1.0, 1.0, 1.0, 1.0)))), float(_GLF_FUZZED(-431.960)), bool(false))), mix(float(_GLF_FUZZED(_GLF_IDENTITY(-5.5, mix(float(-5.5), float(_GLF_FUZZED(-9721.9497)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), float(float(_GLF_IDENTITY(mat3(injectionSwitch.y, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(3.5)), float(1.0), bool(true))), determinant(mat4(0.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(46.58)), float(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))))), bool(true))), 1.0, 0.0, 0.0, abs(1.0), 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(round(-281.357)))), max(0.0, 0.0)), 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), 1.0, 0.0), (_GLF_IDENTITY(mat3(injectionSwitch.y, 0.0, 1.0, 1.0, 0.0, 1.0, determinant(mat4(0.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(0.0, 0.0 + (0.0)), 1.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0, 0.0)), 1.0, 0.0), transpose(transpose(mat3(injectionSwitch.y, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, float(vec3(0.0, _GLF_IDENTITY(0.0, mix(_GLF_IDENTITY(float(0.0), max(float(0.0), float(0.0))), float(_GLF_FUZZED(_GLF_IDENTITY((-77.15 / 2569.0923), min(_GLF_IDENTITY((-77.15 / 2569.0923), float(vec3(_GLF_IDENTITY((-77.15 / 2569.0923), 0.0 + ((-77.15 / 2569.0923))), 1.0, 0.0))), (-77.15 / 2569.0923))))), bool(false))), 1.0)))), float(_GLF_FUZZED((- 8027.8870))), bool(false))), 1.0, determinant(mat4(0.0, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), 0.0 + (_GLF_ZERO(0.0, injectionSwitch.x))), 0.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0)))), 0.0, 0.0, abs(1.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))))) / mat3(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x4(1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0)), clamp(_GLF_IDENTITY(float(mat2x4(1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0)), (float(mat2x4(1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0))) - 0.0), _GLF_IDENTITY(float(mat2x4(1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0)), (true ? float(mat2x4(1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0)) : _GLF_FUZZED(-89.72))), float(mat2x4(1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0))))), 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 1.0, 1.0)))), bool(true))))))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   subgroupAll(_GLF_IDENTITY(false, true && (false)));
  }
 else
  {
   atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid))) | (_GLF_IDENTITY(virtual_gid, 0u + (virtual_gid)))), (_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid))) | (_GLF_IDENTITY(virtual_gid, 0u + (virtual_gid))))) * 1u)], read, 4, 64, _GLF_IDENTITY(4, (4) / (1 & 1)));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   subgroupAll(true);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[1]), vec2(_GLF_FUZZED(-6.5), _GLF_FUZZED(-1.9)), bvec2(false, false)))).y))) || false))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
