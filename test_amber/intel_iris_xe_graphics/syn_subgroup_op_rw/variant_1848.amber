#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true)))) || false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), ! (! (_GLF_IDENTITY(! (! (false)), true && (! (! (false)))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))), vec2(mat4((injectionSwitch), 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3(0.0, 1.0, 0.0, log(1.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), tan(0.0), sin(0.0), 0.0), (mat3(0.0, 1.0, 0.0, log(1.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), tan(0.0), sin(0.0), 0.0)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), cos(0.0), _GLF_ONE(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(float(75935u)))), injectionSwitch.y), 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x2(1.0, 0.0, 1.0, cos(0.0), 1.0, 0.0), (_GLF_IDENTITY(mat3x2(1.0, 0.0, 1.0, cos(0.0), 1.0, 0.0), transpose(transpose(mat3x2(1.0, 0.0, 1.0, cos(0.0), 1.0, 0.0))))) - mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), determinant(mat4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), tan(0.0), exp(_GLF_IDENTITY(0.0, max(0.0, 0.0))), 1.0, determinant(mat4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat3x2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, tan(0.0), _GLF_ONE(1.0, injectionSwitch.y), abs(0.0)))), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(985.818))), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) ? _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(3039.1892)), bool(false)))) / 1.0) : _GLF_FUZZED(-26.40))), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), 0.0, 1.0, 1.0), transpose(transpose(mat3(1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, _GLF_ONE(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), injectionSwitch.y), 0.0, 1.0, 1.0))))), min(float(_GLF_IDENTITY(mat3(1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(vec3(0.0, 0.0, sqrt(_GLF_IDENTITY(0.0, min(0.0, 0.0)))), _GLF_IDENTITY(vec3(mat2x3(vec3(0.0, _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(-5.2))), sqrt(_GLF_IDENTITY(0.0, min(0.0, 0.0)))), 1.0, 1.0, 1.0)), vec3(mat4(_GLF_IDENTITY(vec3(mat2x3(vec3(0.0, _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(-5.2))), sqrt(_GLF_IDENTITY(0.0, min(0.0, 0.0)))), 1.0, 1.0, 1.0)), clamp(vec3(mat2x3(vec3(0.0, _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(-5.2))), sqrt(_GLF_IDENTITY(0.0, min(0.0, 0.0)))), 1.0, 1.0, 1.0)), vec3(mat2x3(vec3(0.0, _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(-5.2))), sqrt(_GLF_IDENTITY(0.0, min(0.0, 0.0)))), 1.0, 1.0, 1.0)), vec3(mat2x3(vec3(0.0, _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(-5.2))), sqrt(_GLF_IDENTITY(0.0, min(0.0, 0.0)))), 1.0, 1.0, 1.0)))), 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, length(vec3(0.0, 0.0, 0.0)), exp(0.0), 1.0, 1.0, 0.0, log(1.0), 0.0, 0.0, cos(0.0))), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(length(vec2(0.0, 0.0)), 1.0, tan(0.0))), dot(vec3(0.0, 1.0, 0.0), vec3(length(vec2(0.0, 0.0)), 1.0, tan(0.0)))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), sqrt(0.0), 1.0, 1.0)))), (vec3(0.0, 0.0, sqrt(0.0))) / vec3(1.0, 1.0, 1.0))), min(_GLF_IDENTITY(float(_GLF_IDENTITY(vec3(0.0, 0.0, sqrt(0.0)), _GLF_IDENTITY((vec3(0.0, 0.0, sqrt(0.0))), (false ? _GLF_FUZZED(vec3(-36.98, 3405.9136, 39.20)) : (vec3(0.0, 0.0, sqrt(0.0))))) / vec3(1.0, 1.0, 1.0))), (true ? float(_GLF_IDENTITY(vec3(0.0, 0.0, sqrt(0.0)), (vec3(0.0, 0.0, sqrt(0.0))) / vec3(1.0, 1.0, 1.0))) : _GLF_FUZZED(-14.23))), float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-66.97)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0, sqrt(0.0)), (vec3(0.0, 0.0, sqrt(0.0))) / vec3(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)))), 1.0)))))), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), 0.0, 1.0, 1.0), transpose(_GLF_IDENTITY(transpose(mat3(1.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0)), _GLF_IDENTITY(mat3(1.0), (mat3(1.0)) / mat3(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(2.2))), 1.0)), 1.0)))) * (transpose(mat3(1.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(8.4))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-20.65)), float(_GLF_IDENTITY(1.0, 1.0 * (1.0))), bool(true)), mix(float(_GLF_FUZZED(4991.8538)), float(mix(float(_GLF_FUZZED(-20.65)), float(_GLF_IDENTITY(1.0, 1.0 * (1.0))), bool(true))), bool(true))))))))))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3(1.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0), transpose(transpose(mat3(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0))))), (_GLF_IDENTITY(true ? float(_GLF_IDENTITY(mat3(1.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0), transpose(transpose(mat3(1.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0))))) : _GLF_FUZZED(3.3), (true ? float(_GLF_IDENTITY(mat3(1.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0), transpose(transpose(mat3(1.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0))))) : _GLF_FUZZED(3.3)) * 1.0)))))), 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) / 1.0)) + 0.0), 0.0, 1.0, 1.0, 0.0)), 0.0))))) + vec2(0.0, 0.0)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((9.2 / injectionSwitch)) : injectionSwitch)).y)))))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false))))))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED((0.5 - 0.2)))) > injectionSwitch.y))), ! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-56.39, 42.00)) : injectionSwitch)).x > injectionSwitch.y)))), false || ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), (false ? _GLF_FUZZED(vec2(-56.39, 42.00)) : injectionSwitch)).x > injectionSwitch.y)))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) || false)))), (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-457.667) : injectionSwitch.x)) > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), true))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, round(_GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), clamp(_GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), mix(float(_GLF_FUZZED(3.5)), float(length(normalize(vec2(1.0, 1.0)))), bool(true))), length(normalize(vec2(1.0, 1.0))), _GLF_IDENTITY(length(normalize(vec2(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0))), clamp(length(normalize(vec2(1.0, 1.0))), length(normalize(vec2(1.0, 1.0))), length(normalize(vec2(1.0, 1.0)))))))), 1.0, 0.0, 1.0))).x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, 1.0))).x, mix(float(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, 1.0))).x), float(_GLF_FUZZED(-6.9)), bool(false))) > _GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))))), determinant(mat2(1.0, 1.0, 0.0, 1.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0))).y, false, false, false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), bool(bvec4(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), true, true, false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u, 0u)).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, clamp(_GLF_IDENTITY(gl_WorkGroupSize.x, 0u ^ (gl_WorkGroupSize.x)), gl_WorkGroupSize.x, gl_WorkGroupSize.x))))));
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) && _GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(false || ((injectionSwitch.x < injectionSwitch.y)), (false || ((injectionSwitch.x < injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(true, false || (true)))))), bool(bvec4(_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(23.78)), bool(false))) < injectionSwitch.y), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-9008.5076) : injectionSwitch.x)) < injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-9008.5076) : injectionSwitch.x)) < injectionSwitch.y)))), false || ((injectionSwitch.x < injectionSwitch.y))), true)))), false || (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y))) && true)) || false)), false || ((injectionSwitch.x < injectionSwitch.y))), true)))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) && _GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(false || ((injectionSwitch.x < injectionSwitch.y)), (false || ((injectionSwitch.x < injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(true, false || (true)))))), bool(bvec4(_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(23.78)), bool(false))) < injectionSwitch.y), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-9008.5076) : injectionSwitch.x)) < injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-9008.5076) : injectionSwitch.x)) < injectionSwitch.y)))), false || ((injectionSwitch.x < injectionSwitch.y))), true)))), false || (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y))) && true)) || false)), false || ((injectionSwitch.x < injectionSwitch.y))), true)))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) && _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(false || ((injectionSwitch.x < injectionSwitch.y)), (false || ((injectionSwitch.x < injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(true, false || (true)))))), bool(bvec4(_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(23.78)), bool(false))) < injectionSwitch.y), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-9008.5076) : injectionSwitch.x)) < injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-9008.5076) : injectionSwitch.x)) < injectionSwitch.y)))), false || ((injectionSwitch.x < injectionSwitch.y))), true)))), false || (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y))) && true)) || false)), false || ((injectionSwitch.x < injectionSwitch.y))), true)))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(false || ((injectionSwitch.x < injectionSwitch.y)), (false || ((injectionSwitch.x < injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(true, false || (true)))))), bool(bvec4(_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(23.78)), bool(false))) < injectionSwitch.y), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-9008.5076) : injectionSwitch.x)) < injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-9008.5076) : injectionSwitch.x)) < injectionSwitch.y)))), false || ((injectionSwitch.x < injectionSwitch.y))), true)))), false || (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y))) && true)) || false)), false || ((injectionSwitch.x < injectionSwitch.y))), true)))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), (_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(false || (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec2((injectionSwitch.x < injectionSwitch.y), true))))))), (false || ((injectionSwitch.x < injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(true, false || (true)))), ! (! (bool(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(false || (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec2((injectionSwitch.x < injectionSwitch.y), true))))))), (false || ((injectionSwitch.x < injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(true, false || (true))))))))), bool(bvec4(_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(23.78)), bool(false))) < injectionSwitch.y), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-9008.5076) : injectionSwitch.x)) < injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-9008.5076) : injectionSwitch.x)) < injectionSwitch.y)))), false || ((injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-9008.5076) : injectionSwitch.x)) < injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-9008.5076) : injectionSwitch.x)) < injectionSwitch.y)))), false || ((injectionSwitch.x < injectionSwitch.y)))) && true), true)))), false || (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y))) && true)) || false)), false || (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y))))), true)))))), false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).y)), true)))) || false)))))))))))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(40079))), max(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(40079))), _GLF_IDENTITY(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(40079))), clamp(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(40079))), _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(40079))), _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(40079)))))))], injectionSwitch[1])).y, true && (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), ((injectionSwitch.x)) - _GLF_ZERO(0.0, injectionSwitch.x)) / 1.0) > injectionSwitch.y)))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x) / 1.0) > injectionSwitch.y))))), (_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x) / 1.0) > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x) / 1.0) > injectionSwitch.y), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x) / 1.0) > injectionSwitch.y), true, true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(_GLF_IDENTITY(bvec2(! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x) / 1.0) > injectionSwitch.y))))), true), bvec2(bvec4(bvec2(! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x) / 1.0) > injectionSwitch.y))))), true), false, true)))))) || false)), ! (! (_GLF_IDENTITY(! _GLF_IDENTITY((! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x), min((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x))) / 1.0) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x), min((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x), clamp((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x))))) / 1.0) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).y, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0))) + (injectionSwitch.y))))))))))), bool(bvec2((! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))))), injectionSwitch)), max(injectionSwitch, injectionSwitch)).x), min((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x))) / 1.0) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x), min((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x))) / 1.0) > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))))))))), false))), true && _GLF_IDENTITY((! (! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) >> 0), 1))]), min(vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) >> 0), 1))]), vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) >> 0), 1))])))), injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) >> 0), 1))])), injectionSwitch)).x) / 1.0)) / 1.0) > injectionSwitch.y))))))), bool(bvec2(_GLF_IDENTITY((! (! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), clamp(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1])))), injectionSwitch)).x) / 1.0) > injectionSwitch.y))))))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(! (! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).x) / 1.0) > injectionSwitch.y)))))), bool(bvec3(! (! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).x) / 1.0) > injectionSwitch.y)))))), true, true)))), false, true, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))))), false || (bool(bvec4((! (! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / sqrt(1.0)))))[1])), injectionSwitch)).x) / 1.0) > injectionSwitch.y))))))), false, true, true))))), true))))))))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) || false) && ((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y), (bool(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)) && true))))), false || (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y), (bool(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)) && true)))))))))))))), _GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x) / 1.0) > injectionSwitch.y))))), (_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) / vec2(1.0, 1.0)))).x) / 1.0) > injectionSwitch.y))))), bool(bvec2(! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x) / 1.0) > injectionSwitch.y))))), true)))) || false)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x) / 1.0) > injectionSwitch.y))))), (_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x) / 1.0) > injectionSwitch.y))))), bool(bvec2(! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(2.4, -4.1)))).x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, sqrt(1.0), 1.0, 1.0, determinant(mat3(0.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))), (false ? _GLF_FUZZED(mat4(294.885, 3.8, 85.95, -145.032, 976.593, 1.0, 3.9, -9.1, -8.3, -1.7, 810.267, 1899.2383, 65.93, 0.9, -7718.0459, 0.2)) : mat4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, sqrt(1.0), 1.0, 1.0, determinant(mat3(0.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), (vec2(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, sqrt(1.0), 1.0, 1.0, determinant(mat3(0.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))), (false ? _GLF_FUZZED(mat4(294.885, 3.8, 85.95, -145.032, 976.593, 1.0, 3.9, -9.1, -8.3, -1.7, 810.267, 1899.2383, 65.93, 0.9, -7718.0459, 0.2)) : mat4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, sqrt(1.0), 1.0, 1.0, determinant(mat3(0.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))) + vec2(0.0, 0.0))).x) / 1.0) > injectionSwitch.y))))), true)))) || false)), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x) / 1.0) > injectionSwitch.y))))), (_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((-366.073))), float(injectionSwitch.x), bool(true)))) - 0.0), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, (false ? _GLF_FUZZED(-26.12) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x) + length(0.0))))) / 1.0) > injectionSwitch.y))))), bool(_GLF_IDENTITY(bvec2(! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x) / 1.0) > injectionSwitch.y))))), true), bvec2(bvec2(bvec2(! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x) / 1.0) > injectionSwitch.y))))), true))))))) || false)))), bool(bvec2(bool(bool((_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x) / 1.0) > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x) / 1.0) > injectionSwitch.y)))))))), (_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x) / 1.0) > injectionSwitch.y))))), bool(bvec2(! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x) / 1.0) > injectionSwitch.y))))), true)))) || false)))), true))))))), ! (! (_GLF_IDENTITY(! _GLF_IDENTITY((! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-526.701, -1657.1079)) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x), _GLF_IDENTITY(min((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)), mix(float(_GLF_FUZZED(8.8)), float(_GLF_IDENTITY(min((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)), max(min((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)), _GLF_IDENTITY(min((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)), min(min((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)), min((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x))))))), bool(true)))) / 1.0) > _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x), min((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x), (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.9), _GLF_FUZZED(-7.2)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch)).x))) / 1.0) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-60.11, -1529.3955)) : injectionSwitch)))))).y, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-60.11, -1529.3955)) : injectionSwitch)))))).y) / _GLF_ONE(1.0, injectionSwitch.y))))))))), true && ((_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-526.701, -1657.1079)) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x), _GLF_IDENTITY(min((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)), mix(float(_GLF_FUZZED(8.8)), float(_GLF_IDENTITY(min((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)), max(min((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)), _GLF_IDENTITY(min((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)), min(min((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)), min((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x))))))), bool(true)))) / 1.0) > _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x), min((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x), (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.9), _GLF_FUZZED(-7.2)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch)).x))) / 1.0) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-60.11, -1529.3955)) : injectionSwitch)))))).y, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-60.11, -1529.3955)) : injectionSwitch)))))).y) / _GLF_ONE(1.0, injectionSwitch.y))))))))))))), bool(bvec2((! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, abs(1.0))), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, abs(1.0))))), mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat2x3(injectionSwitch, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, abs(1.0))), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, abs(1.0)))))))), min(vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, abs(1.0))), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, abs(1.0))))), mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat2x3(injectionSwitch, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, abs(1.0))), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, abs(1.0)))))))), vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, abs(1.0))), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, abs(1.0))))), mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat2x3(injectionSwitch, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, abs(1.0))), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, abs(1.0))))))))))))).x), min((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x))) / 1.0) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x), min((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).x), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x))) / 1.0) > injectionSwitch.y))))))))), false))), true && _GLF_IDENTITY((! (! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch), (max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, 0 | (1)), 1, 1), (true ? _GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, 0 | (1)), 1, 1), ~ (~ (ivec3(_GLF_IDENTITY(1, 0 | (1)), 1, 1)))) : _GLF_FUZZED(ivec3(-24754, -74927, -86947))))))])), injectionSwitch)) - vec2(0.0, 0.0))), (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch))) * mat2(1.0)).x) / 1.0) > injectionSwitch.y))))))), bool(bvec2(_GLF_IDENTITY((! (! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))), injectionSwitch)))).x) / 1.0, clamp((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))), injectionSwitch)))).x) / 1.0, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))), injectionSwitch)))).x) / 1.0, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))), injectionSwitch)))).x) / 1.0))) > injectionSwitch.y))))))), _GLF_IDENTITY(bool(bvec4((! (! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).x) / _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-22.72)), float(1.0), bool(true)))) > injectionSwitch.y))))))), _GLF_IDENTITY(false, (false) && true), true, true)), false || (bool(bvec4((! (! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).x), (false ? _GLF_FUZZED(-84.48) : (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).x))) / 1.0) > injectionSwitch.y))))))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))) && true), true, true))))), true)))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, clamp(_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec4(gl_WorkGroupID, (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(6u), uint(6u)), 0u | (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(6u), uint(6u)), clamp(_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(6u), uint(6u)), clamp(0u >> _GLF_IDENTITY(uint(6u), uint(6u)), 0u >> _GLF_IDENTITY(uint(6u), uint(6u)), 0u >> _GLF_IDENTITY(uint(6u), uint(6u)))), 0u >> _GLF_IDENTITY(uint(6u), uint(6u)), 0u >> _GLF_IDENTITY(uint(6u), uint(6u)))))))))), gl_WorkGroupID, gl_WorkGroupID)).x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, true && (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) || false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))))), _GLF_IDENTITY(false, true && (false)), false)))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec4(false, false, false, false)))))))
    barrier();
   barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), min(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))))) >> 0u), subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), subgroup_size, subgroup_size))) | uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)))))) + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | (_GLF_IDENTITY(0u | _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, 0u | (0u)), 0u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(0u | _GLF_IDENTITY(0u, min(0u, 0u)), max(0u | _GLF_IDENTITY(0u, min(0u, 0u)), 0u | _GLF_IDENTITY(0u, min(0u, 0u)))), _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(uvec4(_GLF_IDENTITY(0u | _GLF_IDENTITY(0u, min(0u, 0u)), max(0u | _GLF_IDENTITY(0u, min(0u, 0u)), 0u | _GLF_IDENTITY(0u, min(0u, 0u)))), 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec4(_GLF_IDENTITY(0u | _GLF_IDENTITY(0u, min(0u, 0u)), max(0u | _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (~ (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))) ^ (0u ^ 0u)))))), 0u | _GLF_IDENTITY(0u, min(0u, 0u)))), 1u, 1u, uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(3605.7824)))))))), min(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(0u | _GLF_IDENTITY(0u, min(0u, 0u)), max(0u | _GLF_IDENTITY(0u, min(0u, 0u)), 0u | _GLF_IDENTITY(0u, min(0u, 0u)))), 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(uvec4(_GLF_IDENTITY(0u | _GLF_IDENTITY(0u, min(0u, 0u)), max(0u | _GLF_IDENTITY(0u, min(0u, 0u)), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ 0u)) + 0u) | _GLF_IDENTITY(0u, min(0u, 0u)))), _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_local_id) : 1u)), _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec4(1u, 0u, 0u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) | 0u)) | (_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec4(1u, 0u, 1u, 1u), (uvec4(1u, 0u, 1u, 1u)) | (uvec4(1u, 0u, 1u, 1u)))))))), uvec4(_GLF_IDENTITY(1u, (1u) / 1u), 1u, 1u, 1u) * (uvec4(1u, 0u, 0u, 1u))))), uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec4(_GLF_IDENTITY(0u | _GLF_IDENTITY(0u, min(0u, 0u)), max(0u | _GLF_IDENTITY(0u, min(0u, 0u)), _GLF_IDENTITY(0u | _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) - 0u))), (_GLF_IDENTITY(0u | _GLF_IDENTITY(0u, min(0u, 0u)), ~ (~ (0u | _GLF_IDENTITY(0u, min(0u, 0u)))))) | (0u | _GLF_IDENTITY(0u, min(0u, 0u)))))), 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(0u | _GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) ^ 0u))), min(0u, 0u)), max(0u | _GLF_IDENTITY(0u, min(0u, 0u)), 0u | _GLF_IDENTITY(0u, min(0u, 0u)))), 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(uvec4(_GLF_IDENTITY(0u | _GLF_IDENTITY(0u, min(0u, 0u)), max(0u | _GLF_IDENTITY(0u, min(0u, 0u)), 0u | _GLF_IDENTITY(0u, min(0u, 0u)))), 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec4(_GLF_IDENTITY(_GLF_IDENTITY(0u | _GLF_IDENTITY(0u, min(0u, 0u)), max(0u | _GLF_IDENTITY(0u, min(0u, 0u)), 0u | _GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, 0u), uint(uvec4(min(0u, 0u), (0u ^ 1u), 0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))))))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(0u | _GLF_IDENTITY(0u, min(0u, 0u)), max(0u | _GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, 0u), (min(0u, 0u)) ^ 0u)), 0u | _GLF_IDENTITY(0u, min(0u, 0u)))), (_GLF_IDENTITY(0u | _GLF_IDENTITY(0u, min(0u, 0u)), max(0u | _GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, 0u), (min(0u, 0u)) ^ 0u)), 0u | _GLF_IDENTITY(0u, min(0u, 0u))))) | (_GLF_IDENTITY(0u | _GLF_IDENTITY(0u, min(0u, 0u)), max(0u | _GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, 0u), (min(0u, 0u)) ^ 0u)), 0u | _GLF_IDENTITY(0u, min(0u, 0u)))))) : _GLF_FUZZED(virtual_gid))), 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))))), false || (_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))))), ! (! (bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 atomicStore(buf[next_virtual_gid], uint(1), 4, _GLF_IDENTITY(64, _GLF_IDENTITY((64) * 1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((64) * _GLF_IDENTITY(1, 1 * _GLF_IDENTITY((1), _GLF_IDENTITY(int(int((_GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), (_GLF_IDENTITY((1), ~ (_GLF_IDENTITY(~ ((1)), 0 ^ (~ ((1)))))) | (_GLF_IDENTITY(1, _GLF_IDENTITY(min(_GLF_IDENTITY(1, (1) / 1), 1), (true ? min(_GLF_IDENTITY(1, (1) / 1), 1) : _GLF_FUZZED(-83595)))))) | _GLF_IDENTITY(((1) | (1)), (false ? _GLF_FUZZED(-23253) : ((1) | (1))))))))), ~ (~ (_GLF_IDENTITY(int(int((1))), (int(_GLF_IDENTITY(int((1)), (false ? _GLF_FUZZED(19059) : int((1)))))) | 0)))))), _GLF_IDENTITY((_GLF_IDENTITY((64), int(_GLF_IDENTITY(_GLF_IDENTITY(ivec4((64), (0 ^ 0), int(_GLF_ZERO(0.0, injectionSwitch.x)), 0), ivec4(0, 0, _GLF_IDENTITY(0, (0) | (0)), 0) | _GLF_IDENTITY((ivec4((64), (0 ^ 0), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(-37355))), 0)), clamp(_GLF_IDENTITY((ivec4((64), (0 ^ 0), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(-37355))), 0)), (false ? _GLF_FUZZED(ivec4(94443, 27211, 97815, -226)) : (ivec4((64), (_GLF_IDENTITY(0 ^ 0, max(_GLF_IDENTITY(0 ^ 0, (0 ^ 0) << 0), 0 ^ 0))), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(8.2) : injectionSwitch.y)))) ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(-37355))), 0)))), (ivec4((64), (0 ^ 0), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(-37355))), 0)), (ivec4((_GLF_IDENTITY(64, clamp(64, 64, 64))), (0 ^ 0), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(-37355))), 0))))), (_GLF_IDENTITY(ivec4((64), (0 ^ 0), int(_GLF_ZERO(0.0, injectionSwitch.x)), 0), ivec4(0, 0, _GLF_IDENTITY(0, (0) | (0)), 0) | _GLF_IDENTITY((ivec4((64), (0 ^ 0), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(-37355))), 0)), clamp(_GLF_IDENTITY((ivec4((64), (0 ^ 0), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(-37355))), 0)), (false ? _GLF_FUZZED(ivec4(94443, 27211, 97815, -226)) : (ivec4((64), (_GLF_IDENTITY(0 ^ 0, max(_GLF_IDENTITY(0 ^ 0, (0 ^ 0) << 0), 0 ^ 0))), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(8.2) : injectionSwitch.y)))) ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(-37355))), 0)))), (ivec4((64), (0 ^ 0), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(-37355))), 0)), (ivec4((_GLF_IDENTITY(64, clamp(64, 64, 64))), (0 ^ 0), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(-37355))), 0)))))) | (_GLF_IDENTITY(ivec4((64), (0 ^ 0), int(_GLF_ZERO(0.0, injectionSwitch.x)), 0), ivec4(0, 0, _GLF_IDENTITY(0, (0) | (0)), 0) | _GLF_IDENTITY((ivec4((64), (0 ^ 0), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(-37355))), 0)), clamp(_GLF_IDENTITY((ivec4((64), (0 ^ 0), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(-37355))), 0)), (false ? _GLF_FUZZED(ivec4(94443, 27211, 97815, -226)) : (ivec4((64), (_GLF_IDENTITY(0 ^ 0, max(_GLF_IDENTITY(0 ^ 0, (0 ^ 0) << 0), 0 ^ 0))), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(8.2) : injectionSwitch.y)))) ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(-37355))), 0)))), (ivec4((64), (0 ^ 0), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(-37355))), 0)), (ivec4((_GLF_IDENTITY(64, clamp(64, 64, 64))), (0 ^ 0), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(-37355))), 0))))))))) * _GLF_IDENTITY(1, min(1, 1))), _GLF_IDENTITY((((_GLF_IDENTITY(64, (_GLF_IDENTITY(64, max(64, 64))) / int(_GLF_ONE(1.0, injectionSwitch.y)))) * 1)), 0 | _GLF_IDENTITY((_GLF_IDENTITY((((_GLF_IDENTITY(64, (_GLF_IDENTITY(64, _GLF_IDENTITY(max(64, 64), (max(64, 64)) << 0))) / int(_GLF_ONE(1.0, injectionSwitch.y)))) * 1)), 0 ^ ((((_GLF_IDENTITY(64, (_GLF_IDENTITY(64, max(64, 64))) / int(_GLF_ONE(1.0, injectionSwitch.y)))) * 1))))), (_GLF_IDENTITY((_GLF_IDENTITY((((_GLF_IDENTITY(64, (_GLF_IDENTITY(64, _GLF_IDENTITY(max(64, 64), (max(64, 64)) << 0))) / int(_GLF_ONE(1.0, injectionSwitch.y)))) * 1)), 0 ^ ((((_GLF_IDENTITY(64, (_GLF_IDENTITY(64, max(64, 64))) / int(_GLF_ONE(1.0, injectionSwitch.y)))) * 1))))), (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(((_GLF_IDENTITY(64, (_GLF_IDENTITY(64, _GLF_IDENTITY(max(64, 64), (max(64, 64)) << 0))) / int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(7.1)), float(injectionSwitch.y), bool(true))))))) * 1), (((_GLF_IDENTITY(64, (_GLF_IDENTITY(64, _GLF_IDENTITY(max(64, 64), (max(64, 64)) << 0))) / int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(7.1)), float(injectionSwitch.y), bool(true))))))) * 1)) | (((_GLF_IDENTITY(64, (_GLF_IDENTITY(64, _GLF_IDENTITY(max(64, 64), (max(64, 64)) << 0))) / int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(7.1)), float(injectionSwitch.y), bool(true))))))) * 1)))), 0 ^ ((((_GLF_IDENTITY(64, (_GLF_IDENTITY(64, max(64, 64))) / int(_GLF_ONE(1.0, injectionSwitch.y)))) * 1))))), max((_GLF_IDENTITY((((_GLF_IDENTITY(64, (_GLF_IDENTITY(64, _GLF_IDENTITY(max(64, 64), (max(64, 64)) << 0))) / int(_GLF_ONE(1.0, injectionSwitch.y)))) * 1)), 0 ^ ((((_GLF_IDENTITY(64, _GLF_IDENTITY((_GLF_IDENTITY(64, max(64, 64))) / int(_GLF_ONE(1.0, injectionSwitch.y)), ((_GLF_IDENTITY(64, max(64, 64))) / int(_GLF_ONE(1.0, injectionSwitch.y))) ^ 0))) * 1))))), (_GLF_IDENTITY((((_GLF_IDENTITY(64, (_GLF_IDENTITY(64, _GLF_IDENTITY(max(64, 64), (max(64, 64)) << _GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, (0) + 0)))))) / int(_GLF_ONE(1.0, injectionSwitch.y)))) * 1)), 0 ^ (((_GLF_IDENTITY((_GLF_IDENTITY(64, (_GLF_IDENTITY(64, max(64, 64))) / int(_GLF_ONE(1.0, injectionSwitch.y)))) * 1, clamp((_GLF_IDENTITY(64, (_GLF_IDENTITY(64, max(64, 64))) / int(_GLF_ONE(1.0, injectionSwitch.y)))) * 1, (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, max(64, 64))) / int(_GLF_ONE(1.0, injectionSwitch.y)))) * 1, (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, max(64, 64))) / int(_GLF_ONE(1.0, injectionSwitch.y)))) * 1)))))))))) - 0)) | ((_GLF_IDENTITY((((_GLF_IDENTITY(64, (_GLF_IDENTITY(64, _GLF_IDENTITY(max(64, 64), (max(64, 64)) << 0))) / int(_GLF_ONE(1.0, injectionSwitch.y)))) * 1)), 0 ^ _GLF_IDENTITY(((((_GLF_IDENTITY(64, _GLF_IDENTITY((_GLF_IDENTITY(64, max(64, 64))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (_GLF_IDENTITY(64, max(64, 64))) : _GLF_FUZZED(max(75701, -64654)))) / int(_GLF_ONE(1.0, injectionSwitch.y)))) * 1))), (((((_GLF_IDENTITY(64, _GLF_IDENTITY((_GLF_IDENTITY(64, max(64, 64))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (_GLF_IDENTITY(64, max(64, 64))) : _GLF_FUZZED(max(75701, -64654)))) / int(_GLF_ONE(1.0, injectionSwitch.y)))) * 1)))) - 0)))))) / 1) + 0)), (~ (_GLF_IDENTITY((64) * 1, ((64) * 1) + 0))) | (~ (_GLF_IDENTITY((64) * 1, (_GLF_IDENTITY((64), ((64)) | ((64))) * 1) + 0))))))), 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), false)))))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, 0 ^ (1)), 1, 1)), _GLF_IDENTITY((subgroup_local_id + 1) + 0u, ((subgroup_local_id + 1) + 0u) | ((subgroup_local_id + 1) + 0u)))) / 1u)) ^ 0u) < subgroup_size)
  {
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) - 0.0) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), ! (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) && true)), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) && true)), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) && true))))) && true))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))))))))), false)))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))))), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))))), true, true)), ! (! (bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))))), true, true)))))))), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), true, true)), false || (_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), true, true)), false || (bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), true, true))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       barrier();
      }
     barrier();
    }
   subgroupAll(false);
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(8.2))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), false || (_GLF_IDENTITY(bool(false), true && (bool(false)))))))), true && (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), false || (_GLF_IDENTITY(bool(false), true && (bool(false))))), (_GLF_IDENTITY(bool(false), false || (_GLF_IDENTITY(bool(false), true && (bool(false)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, false)))) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, false)))) || false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, false)))) || false)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y)))) || false, ! (! ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y)))) || false)))))))
    barrier();
   atomicStore(buf[_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))], _GLF_IDENTITY(read, (0u >> _GLF_IDENTITY(uint(6u), uint(6u))) ^ (read)), 4, _GLF_IDENTITY(64, (64) >> 0), 4);
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   subgroupAll(true);
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
