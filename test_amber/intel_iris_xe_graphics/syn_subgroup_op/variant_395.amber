#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_4 {
 int _f0;
 mat2x4 _f1;
 uvec4 _f2;
 bvec2 _f3;
} ;

struct _GLF_struct_3 {
 bvec2 _f0;
} ;

struct _GLF_struct_5 {
 float _f0;
 _GLF_struct_3 _f1;
 mat4x2 _f2;
 _GLF_struct_4 _f3;
 vec3 _f4;
 mat2x3 _f5;
 bvec3 _f6;
} ;

struct _GLF_struct_1 {
 bool _f0;
} ;

struct _GLF_struct_0 {
 int _f0;
 vec2 _f1;
 mat3 _f2;
 mat2x4 _f3;
} ;

struct _GLF_struct_2 {
 _GLF_struct_0 _f0;
 mat2x3 _f1;
 _GLF_struct_1 _f2;
 ivec2 _f3;
} ;

struct _GLF_struct_6 {
 _GLF_struct_2 _f0;
 _GLF_struct_5 _f1;
 uint subgroup_local_id;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, _GLF_IDENTITY(false, (false) || false), true)))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
uint subgroup_size = 16;
 _GLF_struct_6 _GLF_struct_replacement_6 = _GLF_struct_6(_GLF_struct_2(_GLF_struct_0(1, _GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, (1.0) * _GLF_IDENTITY(1.0, (1.0) - 0.0))), (false ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_IDENTITY(1.0, (1.0) * 1.0)))), _GLF_IDENTITY(mat3(1.0), mat3(_GLF_ONE(1.0, injectionSwitch.y)) * (mat3(1.0))), mat2x4(1.0)), mat2x3(1.0), _GLF_struct_1(true), ivec2(1)), _GLF_struct_5(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-9.1))))), _GLF_struct_3(bvec2(true)), mat4x2(1.0), _GLF_struct_4(1, mat2x4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY((true ? _GLF_IDENTITY(1.0, (1.0) - 0.0) : _GLF_FUZZED(696.181)), _GLF_IDENTITY(((true ? _GLF_IDENTITY(1.0, (1.0) - 0.0) : _GLF_FUZZED(696.181))) - 0.0, mix(float(((true ? _GLF_IDENTITY(1.0, (1.0) - 0.0) : _GLF_FUZZED(696.181))) - 0.0), float(_GLF_FUZZED(float((196552u / 182941u)))), bool(false)))), float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY((true ? _GLF_IDENTITY(1.0, (1.0) - 0.0) : _GLF_FUZZED(696.181)), _GLF_IDENTITY(((true ? _GLF_IDENTITY(1.0, (1.0) - 0.0) : _GLF_FUZZED(696.181))) - 0.0, mix(float(((true ? _GLF_IDENTITY(1.0, (1.0) - 0.0) : _GLF_FUZZED(696.181))) - 0.0), float(_GLF_FUZZED(float((196552u / 182941u)))), bool(false)))), 1.0, 0.0, log(1.0), 0.0, 0.0, sqrt(1.0), 1.0, 0.0, 1.0, 0.0, 0.0), transpose(transpose(mat4x3(_GLF_IDENTITY((true ? _GLF_IDENTITY(1.0, (1.0) - 0.0) : _GLF_FUZZED(696.181)), _GLF_IDENTITY(((true ? _GLF_IDENTITY(1.0, (1.0) - 0.0) : _GLF_FUZZED(696.181))) - 0.0, mix(float(((true ? _GLF_IDENTITY(1.0, (1.0) - 0.0) : _GLF_FUZZED(696.181))) - 0.0), float(_GLF_FUZZED(float((196552u / 182941u)))), bool(false)))), 1.0, 0.0, log(1.0), 0.0, 0.0, sqrt(1.0), 1.0, 0.0, 1.0, 0.0, 0.0)))))))), uvec4(1u), bvec2(true)), vec3(1.0), mat2x3(1.0), _GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true))))), gl_SubgroupInvocationID);
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) || false))), _GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bvec2(_GLF_IDENTITY((false), false || ((false))), true)))))), false, false)), false || (bool(bvec3(! (_GLF_IDENTITY(false, ! (! (false)))), false, false)))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, min(_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec3(gl_WorkGroupID))), _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) << uvec3(0u, 0u, 0u)))).x, clamp(_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID.x, (false ? _GLF_FUZZED(subgroup_size) : gl_WorkGroupID.x))) + (154139u & 0u)), _GLF_IDENTITY(gl_WorkGroupID.x, (true ? gl_WorkGroupID.x : _GLF_FUZZED(_GLF_IDENTITY(bitfieldExtract(subgroup_id, -6633, -11195), ~ (~ _GLF_IDENTITY(_GLF_IDENTITY((bitfieldExtract(_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(num_workgroup))), -6633, -11195)), uint(_GLF_IDENTITY(uvec2((bitfieldExtract(_GLF_IDENTITY(subgroup_id, (true ? _GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))) << 0u), subgroup_id)) : _GLF_FUZZED(num_workgroup))), -6633, -11195)), 0u), ~ (~ (uvec2((bitfieldExtract(_GLF_IDENTITY(subgroup_id, (true ? _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec2(subgroup_id, 1u)), 0u ^ (uint(uvec2(subgroup_id, 1u))))) : _GLF_FUZZED(num_workgroup))), -6633, -11195)), 0u)))))), (_GLF_IDENTITY((bitfieldExtract(_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(num_workgroup))), -6633, -11195)), max((bitfieldExtract(_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(num_workgroup))), -6633, -11195)), (bitfieldExtract(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(num_workgroup))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(num_workgroup))) : _GLF_FUZZED(((-- workgroup_size) ^ subgroup_size)))), -6633, -11195))))) | ((bitfieldExtract(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(true ? subgroup_id : _GLF_FUZZED(num_workgroup), (_GLF_IDENTITY(true ? subgroup_id : _GLF_FUZZED(num_workgroup), (_GLF_IDENTITY(true ? subgroup_id : _GLF_FUZZED(num_workgroup), (true ? subgroup_id : _GLF_FUZZED(num_workgroup)) * 1u)) | (true ? subgroup_id : _GLF_FUZZED(num_workgroup)))) - 0u))), -6633, -11195))))))))), gl_WorkGroupID.x));
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)), min(_GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)), uint(uvec3(_GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)), 0u, 1u)))));
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))), 0u | (workgroup_base + subgroup_id * subgroup_size)) + _GLF_struct_replacement_6.subgroup_local_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(workgroup_base, 1u, (_GLF_IDENTITY((uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(6.6, -364.231)))).y)) << _GLF_IDENTITY(uint(6u), uint(_GLF_IDENTITY(6u, clamp(6u, 6u, _GLF_IDENTITY(6u, clamp(6u, _GLF_IDENTITY(6u, uint(uint(6u))), 6u))))))) >> _GLF_IDENTITY(uint(6u), uint(6u)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(6u), uint(6u)), (uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(6u), uint(6u))) | (uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(6u), uint(6u))))), _GLF_IDENTITY(uint(uvec3((uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(6u), uint(6u))), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))), (false ? _GLF_FUZZED(num_workgroup) : uint(uvec3((uint(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-7.2)), bool(false)))) / 1.0), (false ? _GLF_FUZZED(-96.44) : _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-7.3)), float(injectionSwitch.y), bool(true)))), float(_GLF_FUZZED(-7.2)), bool(false)))) / 1.0))))) << _GLF_IDENTITY(uint(6u), uint(6u))), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))))))) >> _GLF_IDENTITY(uint(6u), uint(6u)), ((uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), clamp(uint(6u), _GLF_IDENTITY(uint(6u), (_GLF_IDENTITY(uint(6u), (false ? _GLF_FUZZED(workgroup_size) : uint(6u)))) / 1u), _GLF_IDENTITY(uint(6u), (uint(6u)) >> 0u))))) << _GLF_IDENTITY(0u, (0u) ^ 0u))), max((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(6u), uint(6u)), uint(uvec2(uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(6u), uint(6u)), 0u)))), _GLF_IDENTITY(uint(uvec3((uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(6u), uint(6u))), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))), (false ? _GLF_FUZZED(num_workgroup) : uint(uvec3((uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), min(_GLF_IDENTITY(uint(6u), uint(6u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), 0u ^ (_GLF_IDENTITY(uint(6u), (uint(6u)) << 0u)))), (0u << _GLF_IDENTITY(uint(8u), uint(8u))) ^ (_GLF_IDENTITY(uint(6u), uint(6u))))))), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))))))) >> _GLF_IDENTITY(uint(6u), uint(6u)), ((uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (0u << _GLF_IDENTITY(uint(7u), uint(7u))) + (_GLF_IDENTITY(6u, (true ? 6u : _GLF_FUZZED(workgroup_id)))))), uint(6u))) << 0u)), (_GLF_IDENTITY(_GLF_IDENTITY((uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(6u), uint(6u))), _GLF_IDENTITY(uint(uvec3((uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(6u), uint(6u))), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))), (false ? _GLF_FUZZED(num_workgroup) : uint(uvec3((uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(uint(6u), 1u, 1u, (0u << _GLF_IDENTITY(uint(4u), uint(4u)))), (uvec4(uint(6u), 1u, 1u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))))) | (_GLF_IDENTITY(uvec4(uint(6u), 1u, 1u, (0u << _GLF_IDENTITY(uint(4u), uint(4u)))), uvec4(0u, 0u, 0u, 0u) | (uvec4(uint(6u), 1u, 1u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))))))))), (uint(_GLF_IDENTITY(uvec4(uint(6u), 1u, 1u, (0u << _GLF_IDENTITY(uint(4u), uint(4u)))), (uvec4(uint(6u), 1u, 1u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))))) | (_GLF_IDENTITY(uvec4(uint(6u), 1u, 1u, (0u << _GLF_IDENTITY(uint(4u), uint(4u)))), uvec4(0u, 0u, 0u, 0u) | (uvec4(uint(6u), 1u, 1u, (0u << _GLF_IDENTITY(uint(4u), uint(4u)))))))))) | (uint(_GLF_IDENTITY(uvec4(uint(6u), 1u, 1u, (0u << _GLF_IDENTITY(uint(4u), uint(4u)))), (uvec4(uint(6u), 1u, 1u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))))) | (_GLF_IDENTITY(uvec4(uint(6u), 1u, 1u, (0u << _GLF_IDENTITY(uint(4u), uint(4u)))), uvec4(0u, 0u, 0u, 0u) | (uvec4(uint(6u), 1u, 1u, (0u << _GLF_IDENTITY(uint(4u), uint(4u)))))))))))), uint(6u))), 1u, uint(_GLF_ONE(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(7.8) : 1.0)), _GLF_IDENTITY(1.0, (1.0) - 0.0))), injectionSwitch.y))))))) >> _GLF_IDENTITY(uint(6u), uint(6u)), ((uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))) << _GLF_IDENTITY(0u, min(0u, 0u)))))) - 0u))), _GLF_IDENTITY((uvec3(workgroup_base, _GLF_IDENTITY(1u, uint(uvec3(1u, 0u, 0u))), ((uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))))) >> uvec3(0u, 0u, 0u), uvec3(uvec3((uvec3(workgroup_base, 1u, ((uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))))) >> uvec3(0u, 0u, 0u))))), (_GLF_IDENTITY(uvec3(workgroup_base, 1u, (_GLF_IDENTITY((uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-37.92)), _GLF_IDENTITY(float(injectionSwitch.y), float(_GLF_IDENTITY(mat2(float(injectionSwitch.y), 1.0, 1.0, 0.0), transpose(transpose(mat2(float(injectionSwitch.y), 1.0, 1.0, 0.0)))))), bool(true))))) << _GLF_IDENTITY(uint(6u), uint(6u))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-37.92)), float(injectionSwitch.y), bool(true))))) << _GLF_IDENTITY(uint(6u), uint(6u))), (0u | 0u) + ((uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-37.92)), float(injectionSwitch.y), bool(_GLF_IDENTITY(true, false || (true))))))) << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u)))), uint(6u)))))), (true ? ~ (_GLF_IDENTITY((uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-37.92)), float(injectionSwitch.y), bool(true))))) << _GLF_IDENTITY(uint(6u), uint(6u))), (_GLF_IDENTITY(0u | 0u, max(0u | 0u, _GLF_IDENTITY(0u | 0u, uint(uvec2(0u | 0u, 0u)))))) + ((uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-37.92)), float(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y), bool(true))))) << _GLF_IDENTITY(uint(6u), uint(6u)))))) : _GLF_FUZZED(subgroup_id))))) >> _GLF_IDENTITY(uint(6u), uint(6u)))), _GLF_IDENTITY((uvec3(workgroup_base, _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec2(1u, 0u)), _GLF_IDENTITY(~ (~ (uint(uvec2(1u, 0u)))), 0u ^ (~ (~ (uint(uvec2(1u, 0u)))))))), ((uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-2718.3420)), vec2(_GLF_FUZZED(3949.2802), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch)).y)) << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))))) / uvec3(1u, 1u, 1u), _GLF_IDENTITY((_GLF_IDENTITY((uvec3(workgroup_base, 1u, ((uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0))))).y)) ? _GLF_IDENTITY(uint(6u), uint(6u)) : _GLF_FUZZED(workgroup_size)))))) / uvec3(1u, 1u, 1u), ((uvec3(workgroup_base, _GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (1u)), ((uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(6u), uint(_GLF_IDENTITY(6u, (_GLF_IDENTITY(6u, (6u) >> 0u)) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), min(_GLF_IDENTITY(uint(6u), clamp(_GLF_IDENTITY(uint(6u), (uint(6u)) ^ 0u), uint(6u), uint(6u))), uint(6u))))))) / uvec3(1u, 1u, 1u)) << uvec3(0u, 0u, 0u))) ^ _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) ^ uvec3(0u, 0u, 0u)), max((_GLF_IDENTITY((uvec3(workgroup_base, 1u, ((uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(uint(6u), uint(6u)) : _GLF_FUZZED(workgroup_size)))))) / uvec3(_GLF_IDENTITY(1u, 1u * (_GLF_IDENTITY(1u, 0u + (1u)))), 1u, 1u), ((uvec3(workgroup_base, _GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (1u)), ((uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))))) / _GLF_IDENTITY(uvec3(1u, 1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) - 0u)) | (1u))), (uvec3(1u, 1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) - 0u)) | (1u)))) / uvec3(1u, 1u, 1u))) << uvec3(_GLF_IDENTITY(0u, (0u) * uint(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), uint(uint(~ (0u)))))), 0u)), _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))))) ^ uvec3(0u, 0u, _GLF_IDENTITY(0u, max(0u, 0u))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((uvec3(workgroup_base, 1u, ((uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(uint(6u), uint(6u)) : _GLF_FUZZED(workgroup_size)))))) / uvec3(1u, 1u, 1u), ((uvec3(workgroup_base, _GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (1u)), ((uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))))) / uvec3(1u, 1u, 1u)) << _GLF_IDENTITY(uvec3(0u, 0u, 0u), (_GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(_GLF_IDENTITY(uvec4(uvec3(0u, 0u, 0u), 0u), ~ (~ (uvec4(uvec3(0u, 0u, 0u), 0u))))))) | (uvec3(0u, 0u, 0u))))) ^ uvec3(0u, 0u, 0u), max((_GLF_IDENTITY((_GLF_IDENTITY(uvec3(workgroup_base, 1u, ((uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x < injectionSwitch.y)) ? _GLF_IDENTITY(uint(6u), uint(6u)) : _GLF_FUZZED(workgroup_size))))), (uvec3(workgroup_base, 1u, ((uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x < injectionSwitch.y)) ? _GLF_IDENTITY(uint(6u), uint(6u)) : _GLF_FUZZED(workgroup_size)))))) | uvec3(0u, 0u, 0u))) / uvec3(1u, 1u, 1u), (_GLF_IDENTITY((uvec3(workgroup_base, _GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (1u)), ((uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), 0u + (uint(6u))), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))))) / uvec3(1u, 1u, 1u), max((uvec3(workgroup_base, _GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (1u)), ((uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(_GLF_IDENTITY(6u, uint(uint(6u)))))))) / uvec3(_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, max(1u, 1u)))))), 1u, 1u), (_GLF_IDENTITY(uvec3(workgroup_base, _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (1u), ~ (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (1u))))), ((uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)))), uvec3(0u, 0u, 0u) ^ (uvec3(workgroup_base, _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (1u), ~ (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (1u))))), ((uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))))))) / uvec3(1u, 1u, 1u)))) << uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) >> 0u), 0u))) ^ uvec3(0u, 0u, 0u), (_GLF_IDENTITY((uvec3(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) >> 0u), 1u, ((uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(uint(6u), uint(6u)) : _GLF_FUZZED(workgroup_size)))))) / uvec3(1u, 1u, 1u), ((uvec3(workgroup_base, _GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 0.0, 1.0, log(1.0), abs(1.0), 0.0, 0.0), mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat2x4(injectionSwitch, 0.0, 1.0, log(1.0), abs(1.0), 0.0, 0.0))))), 1.0, 1.0, 0.0, sin(0.0), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, tan(0.0), 0.0, sin(0.0))), 0.0, 0.0), (mat3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 0.0, 1.0, log(1.0), abs(1.0), 0.0, 0.0), mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat2x4(injectionSwitch, 0.0, 1.0, log(1.0), abs(1.0), 0.0, 0.0))))), 1.0, 1.0, 0.0, sin(0.0), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, tan(0.0), 0.0, sin(0.0))), 0.0, 0.0)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))).x)) | (1u)), (_GLF_IDENTITY((uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(6u), uint(_GLF_IDENTITY(6u, max(_GLF_IDENTITY(6u, min(6u, 6u)), 6u))))), (_GLF_IDENTITY((uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(6u), uint(_GLF_IDENTITY(6u, max(_GLF_IDENTITY(6u, min(6u, 6u)), 6u))))), ~ (~ ((uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(6u), uint(_GLF_IDENTITY(6u, max(_GLF_IDENTITY(6u, min(6u, 6u)), 6u))))))))) - (52916u & 0u)) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), (false ? _GLF_FUZZED(workgroup_id) : uint(6u))), uint(6u))))) / uvec3(1u, 1u, 1u)) << uvec3(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, (0u) | (0u)))))), (true ? uint(_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, (0u) | (0u)))))) : _GLF_FUZZED(num_workgroup))), 0u | (uint(_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, (0u) | (0u))))))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(0u, (0u) | (0u)))), uint(uvec2((~ (_GLF_IDENTITY(0u, (0u) | (0u)))), 1u))))), 0u | (uint(_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, (0u) | (0u))))))))), clamp(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) + 0u)) | (0u)))))), 0u | (uint(_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, (0u) | (0u))))))))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))), ~ (~ (_GLF_IDENTITY(0u, (0u) | (0u)))))), 0u | (uint(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, (0u) | (0u))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, (0u) | (0u))), (~ (_GLF_IDENTITY(0u, (0u) | (0u)))) / 1u)) << 0u))))))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, (0u) | (0u)))))), 0u | (uint(_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, (0u) | (0u)))))))))))) | (uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, (0u) | (0u)))))), 0u | (uint(_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, (0u) | (0u)))))))))))), 0u, 0u))) ^ uvec3(0u, 0u, 0u))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY((uvec3(workgroup_base, 1u, ((_GLF_IDENTITY(uint(_GLF_ONE(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), injectionSwitch.y)) << _GLF_IDENTITY(uint(6u), uint(6u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(uint(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((true ? 951.022 : -7.2))), bool(false))))))) << _GLF_IDENTITY(uint(6u), uint(6u)), 1u), min(uvec2(uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(6u), uint(6u)), 1u), _GLF_IDENTITY(uvec2(uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(6u), uint(6u)), 1u), uvec2(uvec3(uvec2(uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (_GLF_IDENTITY(uint(6u), min(uint(6u), _GLF_IDENTITY(uint(6u), uint(uvec2(uint(6u), 0u)))))) - 0u)), 1u), 1u)))))), (uint(_GLF_IDENTITY(uvec2(uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(6u), uint(6u)), 1u), min(uvec2(uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(6u), uint(6u)), 1u), _GLF_IDENTITY(uvec2(uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(6u), uint(6u)), 1u), uvec2(_GLF_IDENTITY(uvec3(uvec2(uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(6u), uint(6u)), 1u), 1u), (_GLF_IDENTITY(uvec3(uvec2(uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(6u), uint(6u)), 1u), 1u), (uvec3(uvec2(uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(6u), uint(6u)), 1u), 1u)) - uvec3(0u, 0u, 0u))) - uvec3(0u, 0u, 0u)))))))) ^ 0u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, max(_GLF_IDENTITY(6u, _GLF_IDENTITY((6u) / 1u, ((6u) / 1u) / 1u)), 6u))), uint(6u)), (_GLF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)) ? _GLF_IDENTITY(uint(6u), uint(6u)) : _GLF_FUZZED(workgroup_size)))))) / uvec3(1u, _GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (1u)), 1u), ((uvec3(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | _GLF_IDENTITY((1u), (_GLF_IDENTITY((1u), ((1u)) * 1u)) >> 0u)), min(_GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (1u)), _GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (1u)))), ((uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), float(mat2x4(float(vec3(injectionSwitch.y, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)))))) << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(_GLF_IDENTITY(6u, (6u) + 0u)))))) / uvec3(1u, 1u, 1u)) << uvec3(0u, 0u, 0u))), uvec3(uvec4(_GLF_IDENTITY((_GLF_IDENTITY((uvec3(workgroup_base, 1u, ((_GLF_IDENTITY(uint(_GLF_ONE(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), injectionSwitch.y)) << _GLF_IDENTITY(uint(6u), uint(6u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(uint(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((true ? 951.022 : -7.2))), bool(false))))))) << _GLF_IDENTITY(uint(6u), uint(6u)), 1u), min(uvec2(uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(6u), uint(6u)), 1u), _GLF_IDENTITY(uvec2(uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(6u), uint(6u)), 1u), uvec2(uvec3(uvec2(uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (_GLF_IDENTITY(uint(6u), min(uint(6u), _GLF_IDENTITY(uint(6u), uint(uvec2(uint(6u), 0u)))))) - 0u)), 1u), 1u)))))), (uint(_GLF_IDENTITY(uvec2(uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(6u), uint(6u)), 1u), min(uvec2(uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(6u), uint(6u)), 1u), _GLF_IDENTITY(uvec2(uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(6u), uint(6u)), 1u), uvec2(_GLF_IDENTITY(uvec3(uvec2(uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(6u), uint(6u)), 1u), 1u), (_GLF_IDENTITY(uvec3(uvec2(uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(6u), uint(6u)), 1u), 1u), (uvec3(uvec2(uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(6u), uint(6u)), 1u), 1u)) - uvec3(0u, 0u, 0u))) - uvec3(0u, 0u, 0u)))))))) ^ 0u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, max(_GLF_IDENTITY(6u, _GLF_IDENTITY((6u) / 1u, ((6u) / 1u) / 1u)), 6u))), uint(6u)), (_GLF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)) ? _GLF_IDENTITY(uint(6u), uint(6u)) : _GLF_FUZZED(workgroup_size)))))) / uvec3(1u, _GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (1u)), 1u), ((uvec3(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | _GLF_IDENTITY((1u), (_GLF_IDENTITY((1u), ((1u)) * 1u)) >> 0u)), min(_GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (1u)), _GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (1u)))), ((uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), float(mat2x4(float(vec3(injectionSwitch.y, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)))))) << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(_GLF_IDENTITY(6u, (6u) + 0u)))))) / uvec3(1u, 1u, 1u)) << uvec3(0u, 0u, 0u))), min(_GLF_IDENTITY((_GLF_IDENTITY((uvec3(workgroup_base, 1u, ((_GLF_IDENTITY(uint(_GLF_ONE(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), injectionSwitch.y)) << _GLF_IDENTITY(uint(6u), uint(6u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(uint(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((true ? 951.022 : -7.2))), bool(false))))))) << _GLF_IDENTITY(uint(6u), uint(6u)), 1u), min(uvec2(uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(6u), uint(6u)), 1u), _GLF_IDENTITY(uvec2(uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(6u), uint(6u)), 1u), uvec2(uvec3(uvec2(uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (_GLF_IDENTITY(uint(6u), min(uint(6u), _GLF_IDENTITY(uint(6u), uint(uvec2(uint(6u), 0u)))))) - 0u)), 1u), 1u)))))), (uint(_GLF_IDENTITY(uvec2(uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(6u), uint(6u)), 1u), min(uvec2(uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(6u), uint(6u)), 1u), _GLF_IDENTITY(uvec2(uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(6u), uint(6u)), 1u), uvec2(_GLF_IDENTITY(uvec3(uvec2(uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(6u), uint(6u)), 1u), 1u), (_GLF_IDENTITY(uvec3(uvec2(uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(6u), uint(6u)), 1u), 1u), (uvec3(uvec2(uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(6u), uint(6u)), 1u), 1u)) - uvec3(0u, 0u, 0u))) - uvec3(0u, 0u, 0u)))))))) ^ 0u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, max(_GLF_IDENTITY(6u, _GLF_IDENTITY((6u) / 1u, ((6u) / 1u) / 1u)), 6u))), uint(6u)), (_GLF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)) ? _GLF_IDENTITY(uint(6u), uint(6u)) : _GLF_FUZZED(workgroup_size)))))) / uvec3(1u, _GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (1u)), 1u), ((uvec3(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | _GLF_IDENTITY((1u), (_GLF_IDENTITY((1u), ((1u)) * 1u)) >> 0u)), min(_GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (1u)), _GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (1u)))), ((uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), float(mat2x4(float(vec3(injectionSwitch.y, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)))))) << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(_GLF_IDENTITY(6u, (6u) + 0u)))))) / uvec3(1u, 1u, 1u)) << uvec3(0u, 0u, 0u))), ((_GLF_IDENTITY((uvec3(workgroup_base, 1u, ((_GLF_IDENTITY(uint(_GLF_ONE(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), injectionSwitch.y)) << _GLF_IDENTITY(uint(6u), uint(6u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(uint(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((true ? 951.022 : -7.2))), bool(false))))))) << _GLF_IDENTITY(uint(6u), uint(6u)), 1u), min(uvec2(uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(6u), uint(6u)), 1u), _GLF_IDENTITY(uvec2(uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(6u), uint(6u)), 1u), uvec2(uvec3(uvec2(uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (_GLF_IDENTITY(uint(6u), min(uint(6u), _GLF_IDENTITY(uint(6u), uint(uvec2(uint(6u), 0u)))))) - 0u)), 1u), 1u)))))), (uint(_GLF_IDENTITY(uvec2(uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(6u), uint(6u)), 1u), min(uvec2(uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(6u), uint(6u)), 1u), _GLF_IDENTITY(uvec2(uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(6u), uint(6u)), 1u), uvec2(_GLF_IDENTITY(uvec3(uvec2(uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(6u), uint(6u)), 1u), 1u), (_GLF_IDENTITY(uvec3(uvec2(uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(6u), uint(6u)), 1u), 1u), (uvec3(uvec2(uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(6u), uint(6u)), 1u), 1u)) - uvec3(0u, 0u, 0u))) - uvec3(0u, 0u, 0u)))))))) ^ 0u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, max(_GLF_IDENTITY(6u, _GLF_IDENTITY((6u) / 1u, ((6u) / 1u) / 1u)), 6u))), uint(6u)), (_GLF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)) ? _GLF_IDENTITY(uint(6u), uint(6u)) : _GLF_FUZZED(workgroup_size)))))) / uvec3(1u, _GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (1u)), 1u), ((uvec3(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | _GLF_IDENTITY((1u), (_GLF_IDENTITY((1u), ((1u)) * 1u)) >> 0u)), min(_GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (1u)), _GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (1u)))), ((uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), float(mat2x4(float(vec3(injectionSwitch.y, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)))))) << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(_GLF_IDENTITY(6u, (6u) + 0u)))))) / uvec3(1u, 1u, 1u)) << uvec3(0u, 0u, 0u)))) << uvec3(0u, 0u, 0u)), _GLF_IDENTITY((_GLF_IDENTITY((uvec3(workgroup_base, 1u, ((_GLF_IDENTITY(uint(_GLF_ONE(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), injectionSwitch.y)) << _GLF_IDENTITY(uint(6u), uint(6u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(uint(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((true ? 951.022 : -7.2))), bool(false))))))) << _GLF_IDENTITY(uint(6u), uint(6u)), 1u), min(uvec2(uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(6u), uint(6u)), 1u), _GLF_IDENTITY(uvec2(uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(6u), uint(6u)), 1u), uvec2(uvec3(uvec2(uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (_GLF_IDENTITY(uint(6u), min(uint(6u), _GLF_IDENTITY(uint(6u), uint(uvec2(uint(6u), 0u)))))) - 0u)), 1u), 1u)))))), (uint(_GLF_IDENTITY(uvec2(uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(6u), uint(6u)), 1u), min(uvec2(uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(6u), uint(6u)), 1u), _GLF_IDENTITY(uvec2(uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(6u), uint(6u)), 1u), uvec2(_GLF_IDENTITY(uvec3(uvec2(uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(6u), uint(6u)), 1u), 1u), (_GLF_IDENTITY(uvec3(uvec2(uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(6u), uint(6u)), 1u), 1u), (uvec3(uvec2(uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(6u), uint(6u)), 1u), 1u)) - uvec3(0u, 0u, 0u))) - uvec3(0u, 0u, 0u)))))))) ^ 0u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, max(_GLF_IDENTITY(6u, _GLF_IDENTITY((6u) / 1u, ((6u) / 1u) / 1u)), 6u))), uint(6u)), (_GLF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)) ? _GLF_IDENTITY(uint(6u), uint(6u)) : _GLF_FUZZED(workgroup_size)))))) / uvec3(1u, _GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (1u)), 1u), ((uvec3(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | _GLF_IDENTITY((1u), (_GLF_IDENTITY((1u), ((1u)) * 1u)) >> 0u)), min(_GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (1u)), _GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (1u)))), ((uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), float(mat2x4(float(vec3(injectionSwitch.y, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)))))) << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(_GLF_IDENTITY(6u, (6u) + 0u)))))) / uvec3(1u, 1u, 1u)) << uvec3(0u, 0u, 0u))), ((_GLF_IDENTITY((uvec3(workgroup_base, 1u, ((_GLF_IDENTITY(uint(_GLF_ONE(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), injectionSwitch.y)) << _GLF_IDENTITY(uint(6u), uint(6u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(uint(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((true ? 951.022 : -7.2))), bool(false))))))) << _GLF_IDENTITY(uint(6u), uint(6u)), 1u), min(uvec2(uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(6u), uint(6u)), 1u), _GLF_IDENTITY(uvec2(uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(6u), uint(6u)), 1u), uvec2(uvec3(uvec2(uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (_GLF_IDENTITY(uint(6u), min(uint(6u), _GLF_IDENTITY(uint(6u), uint(uvec2(uint(6u), 0u)))))) - 0u)), 1u), 1u)))))), (uint(_GLF_IDENTITY(uvec2(uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(6u), uint(6u)), 1u), min(uvec2(uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(6u), uint(6u)), 1u), _GLF_IDENTITY(uvec2(uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(6u), uint(6u)), 1u), uvec2(_GLF_IDENTITY(uvec3(uvec2(uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(6u), uint(6u)), 1u), 1u), (_GLF_IDENTITY(uvec3(uvec2(uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(6u), uint(6u)), 1u), 1u), (uvec3(uvec2(uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(6u), uint(6u)), 1u), 1u)) - uvec3(0u, 0u, 0u))) - uvec3(0u, 0u, 0u)))))))) ^ 0u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, max(_GLF_IDENTITY(6u, _GLF_IDENTITY((6u) / 1u, ((6u) / 1u) / 1u)), 6u))), uint(6u)), (_GLF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)) ? _GLF_IDENTITY(uint(6u), uint(6u)) : _GLF_FUZZED(workgroup_size)))))) / uvec3(1u, _GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (1u)), 1u), ((uvec3(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | _GLF_IDENTITY((1u), (_GLF_IDENTITY((1u), ((1u)) * 1u)) >> 0u)), min(_GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (1u)), _GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (1u)))), ((uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), float(mat2x4(float(vec3(injectionSwitch.y, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)))))) << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(_GLF_IDENTITY(6u, (6u) + 0u)))))) / uvec3(1u, 1u, 1u)) << uvec3(0u, 0u, 0u)))) | ((_GLF_IDENTITY((uvec3(workgroup_base, 1u, ((_GLF_IDENTITY(uint(_GLF_ONE(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), injectionSwitch.y)) << _GLF_IDENTITY(uint(6u), uint(6u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(uint(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((true ? 951.022 : -7.2))), bool(false))))))) << _GLF_IDENTITY(uint(6u), uint(6u)), 1u), min(uvec2(uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(6u), uint(6u)), 1u), _GLF_IDENTITY(uvec2(uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(6u), uint(6u)), 1u), uvec2(uvec3(uvec2(uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (_GLF_IDENTITY(uint(6u), min(uint(6u), _GLF_IDENTITY(uint(6u), uint(uvec2(uint(6u), 0u)))))) - 0u)), 1u), 1u)))))), (uint(_GLF_IDENTITY(uvec2(uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(6u), uint(6u)), 1u), min(uvec2(uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(6u), uint(6u)), 1u), _GLF_IDENTITY(uvec2(uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(6u), uint(6u)), 1u), uvec2(_GLF_IDENTITY(uvec3(uvec2(uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(6u), uint(6u)), 1u), 1u), (_GLF_IDENTITY(uvec3(uvec2(uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(6u), uint(6u)), 1u), 1u), (uvec3(uvec2(uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(6u), uint(6u)), 1u), 1u)) - uvec3(0u, 0u, 0u))) - uvec3(0u, 0u, 0u)))))))) ^ 0u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, max(_GLF_IDENTITY(6u, _GLF_IDENTITY((6u) / 1u, ((6u) / 1u) / 1u)), 6u))), uint(6u)), (_GLF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)) ? _GLF_IDENTITY(uint(6u), uint(6u)) : _GLF_FUZZED(workgroup_size)))))) / uvec3(1u, _GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (1u)), 1u), ((uvec3(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | _GLF_IDENTITY((1u), (_GLF_IDENTITY((1u), ((1u)) * 1u)) >> 0u)), min(_GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (1u)), _GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (1u)))), ((uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), float(mat2x4(float(vec3(injectionSwitch.y, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)))))) << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(_GLF_IDENTITY(6u, (6u) + 0u)))))) / uvec3(1u, 1u, 1u)) << uvec3(0u, 0u, 0u))))))), 1u))) ^ uvec3(0u, 0u, 0u))))))))) * uvec3(_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec3(1u, 0u, _GLF_IDENTITY(1u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : 1u))), clamp(uvec3(1u, 0u, _GLF_IDENTITY(1u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : 1u))), uvec3(1u, 0u, _GLF_IDENTITY(1u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : 1u))), uvec3(1u, 0u, _GLF_IDENTITY(1u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : 1u))))))), 1u)), _GLF_IDENTITY(1u, (1u) * 1u), _GLF_IDENTITY(1u, uint(uvec4(1u, _GLF_IDENTITY(0u, (0u) | 0u), (((1u & 1u) << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) << 0u))), 0u))))))) + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(true ? subgroup_id * subgroup_size : _GLF_FUZZED(num_workgroup), (_GLF_IDENTITY(true ? subgroup_id * subgroup_size : _GLF_FUZZED(num_workgroup), clamp(true ? subgroup_id * subgroup_size : _GLF_FUZZED(num_workgroup), _GLF_IDENTITY(true ? subgroup_id * subgroup_size : _GLF_FUZZED(num_workgroup), uint(uvec2(true ? subgroup_id * subgroup_size : _GLF_FUZZED(num_workgroup), 1u))), true ? subgroup_id * subgroup_size : _GLF_FUZZED(num_workgroup)))) | 0u)), ~ (~ ((_GLF_IDENTITY(true ? subgroup_id * subgroup_size : _GLF_FUZZED(num_workgroup), (_GLF_IDENTITY(true ? subgroup_id * subgroup_size : _GLF_FUZZED(num_workgroup), clamp(true ? subgroup_id * subgroup_size : _GLF_FUZZED(num_workgroup), _GLF_IDENTITY(true ? subgroup_id * subgroup_size : _GLF_FUZZED(num_workgroup), uint(uvec2(true ? subgroup_id * subgroup_size : _GLF_FUZZED(num_workgroup), 1u))), true ? subgroup_id * subgroup_size : _GLF_FUZZED(num_workgroup)))) | 0u))))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(true ? subgroup_id * subgroup_size : _GLF_FUZZED(num_workgroup), (_GLF_IDENTITY(true ? subgroup_id * subgroup_size : _GLF_FUZZED(num_workgroup), clamp(true ? subgroup_id * subgroup_size : _GLF_FUZZED(num_workgroup), _GLF_IDENTITY(true ? subgroup_id * subgroup_size : _GLF_FUZZED(num_workgroup), uint(uvec2(true ? subgroup_id * subgroup_size : _GLF_FUZZED(num_workgroup), 1u))), true ? subgroup_id * subgroup_size : _GLF_FUZZED(num_workgroup)))) | 0u)), ~ (~ ((_GLF_IDENTITY(true ? subgroup_id * subgroup_size : _GLF_FUZZED(num_workgroup), (_GLF_IDENTITY(true ? subgroup_id * subgroup_size : _GLF_FUZZED(num_workgroup), clamp(true ? subgroup_id * subgroup_size : _GLF_FUZZED(num_workgroup), _GLF_IDENTITY(true ? subgroup_id * subgroup_size : _GLF_FUZZED(num_workgroup), uint(uvec2(true ? subgroup_id * subgroup_size : _GLF_FUZZED(num_workgroup), 1u))), true ? subgroup_id * subgroup_size : _GLF_FUZZED(num_workgroup)))) | 0u))))), 0u | (_GLF_IDENTITY((_GLF_IDENTITY(true ? subgroup_id * subgroup_size : _GLF_FUZZED(num_workgroup), (_GLF_IDENTITY(true ? subgroup_id * subgroup_size : _GLF_FUZZED(num_workgroup), clamp(true ? subgroup_id * subgroup_size : _GLF_FUZZED(num_workgroup), _GLF_IDENTITY(true ? subgroup_id * subgroup_size : _GLF_FUZZED(num_workgroup), uint(uvec2(true ? subgroup_id * subgroup_size : _GLF_FUZZED(num_workgroup), 1u))), true ? subgroup_id * subgroup_size : _GLF_FUZZED(num_workgroup)))) | 0u)), ~ (~ ((_GLF_IDENTITY(true ? subgroup_id * subgroup_size : _GLF_FUZZED(num_workgroup), (_GLF_IDENTITY(true ? subgroup_id * subgroup_size : _GLF_FUZZED(num_workgroup), clamp(true ? subgroup_id * subgroup_size : _GLF_FUZZED(num_workgroup), _GLF_IDENTITY(true ? subgroup_id * subgroup_size : _GLF_FUZZED(num_workgroup), uint(uvec2(true ? subgroup_id * subgroup_size : _GLF_FUZZED(num_workgroup), 1u))), true ? subgroup_id * subgroup_size : _GLF_FUZZED(num_workgroup)))) | 0u)))))))) + 0u)) + _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_struct_replacement_6.subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(num_workgroup)))) | _GLF_IDENTITY((subgroup_size), ((subgroup_size)) * _GLF_IDENTITY((0u ^ _GLF_IDENTITY(1u, max(1u, 1u))), ((0u ^ _GLF_IDENTITY(1u, max(1u, 1u)))) | (_GLF_IDENTITY((0u ^ _GLF_IDENTITY(1u, max(1u, 1u))), ((0u ^ _GLF_IDENTITY(1u, max(1u, 1u)))) - 0u)))))))), 0u ^ (((_GLF_struct_replacement_6.subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(num_workgroup)))) | _GLF_IDENTITY((subgroup_size), ((subgroup_size)) * _GLF_IDENTITY((0u ^ _GLF_IDENTITY(1u, max(1u, 1u))), ((0u ^ _GLF_IDENTITY(1u, max(1u, 1u)))) | (_GLF_IDENTITY((0u ^ _GLF_IDENTITY(1u, max(1u, 1u))), ((0u ^ _GLF_IDENTITY(1u, max(1u, 1u)))) - 0u)))))))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(((_GLF_IDENTITY(_GLF_struct_replacement_6.subgroup_local_id + 1, max(_GLF_struct_replacement_6.subgroup_local_id + 1, _GLF_struct_replacement_6.subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(0, ~ (~ (0))) | (1))))) % subgroup_size), (_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED((subgroup_id % subgroup_size)) : 0u))), (true ? ~ (0u) : _GLF_FUZZED(70986u))))), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (true ? ~ (0u) : _GLF_FUZZED(70986u))))), (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (true ? ~ (0u) : _GLF_FUZZED(70986u))))))), 0u, 1u, 1u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), max(_GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, (2u) * 1u)), (uint(2u)) | (_GLF_IDENTITY(uint(2u), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((uint(2u)), ((uint(2u))) - 0u), ~ (~ (_GLF_IDENTITY(~ (uint(2u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(~ (uint(2u)), 1u, 1u, 0u), max(uvec4(~ (uint(2u)), 1u, 1u, 0u), uvec4(~ (uint(2u)), 1u, 1u, 0u)))), uint(_GLF_IDENTITY(uvec4(uint(_GLF_IDENTITY(uvec4(~ (uint(2u)), 1u, 1u, 0u), max(uvec4(~ (uint(2u)), 1u, 1u, 0u), uvec4(~ (uint(2u)), 1u, 1u, 0u)))), 1u, 1u, 1u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(uint(_GLF_IDENTITY(uvec4(~ (uint(2u)), 1u, 1u, 0u), max(uvec4(~ (uint(2u)), 1u, 1u, 0u), uvec4(~ (uint(2u)), 1u, 1u, 0u)))), 1u, 1u, 1u)))))))))))))), _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), uint(uint(uint(2u)))))))) - 0u)), 0u, 1u)), max(uint(uvec4(((_GLF_struct_replacement_6.subgroup_local_id + _GLF_IDENTITY(1, (1) ^ 0)) % subgroup_size), (0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, (false ? _GLF_FUZZED(workgroup_id) : 2u))), min(uint(_GLF_IDENTITY(2u, 0u | (2u))), uint(_GLF_IDENTITY(2u, min(2u, _GLF_IDENTITY(2u, max(_GLF_IDENTITY(2u, 0u | (2u)), _GLF_IDENTITY(2u, _GLF_IDENTITY((2u), min((2u), _GLF_IDENTITY((2u), ((2u)) << 0u))) ^ 0u)))))))))), 0u, 1u)), uint(uvec4(((_GLF_struct_replacement_6.subgroup_local_id + 1) % subgroup_size), (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(0u, uint(uvec3(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_id) : 0u)), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), ((0u >> _GLF_IDENTITY(uint(2u), uint(2u))) >> 0u) | (_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(2u), uint(2u))) >> 0u, ((0u >> _GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, (2u) | (2u))))) >> 0u) | (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))))))), 0u, 1u)))), min(_GLF_IDENTITY(uint(uvec4(((_GLF_IDENTITY(_GLF_struct_replacement_6.subgroup_local_id + 1, max(_GLF_IDENTITY(_GLF_struct_replacement_6.subgroup_local_id + 1, min(_GLF_struct_replacement_6.subgroup_local_id + 1, _GLF_struct_replacement_6.subgroup_local_id + 1)), _GLF_struct_replacement_6.subgroup_local_id + _GLF_IDENTITY(1, 0 | (1))))) % _GLF_IDENTITY(subgroup_size, (subgroup_size) - (0u >> _GLF_IDENTITY(uint(0u), uint(0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (true ? ~ (0u) : _GLF_FUZZED(70986u))))), max(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), _GLF_IDENTITY((true ? ~ (0u) : _GLF_FUZZED(70986u)), max((true ? ~ (0u) : _GLF_FUZZED(70986u)), _GLF_IDENTITY((true ? ~ (0u) : _GLF_FUZZED(70986u)), min((true ? ~ (0u) : _GLF_FUZZED(70986u)), (true ? ~ (0u) : _GLF_FUZZED(70986u))))))))), _GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (true ? ~ (0u) : _GLF_FUZZED(70986u))))), uint(uvec3(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (true ? ~ (0u) : _GLF_FUZZED(70986u))))), 1u, 0u))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), clamp(_GLF_IDENTITY(uint(2u), (uint(2u)) / 1u), uint(2u), uint(2u)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), max(_GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY(uint(2u), uint(2u))))) - 0u, ((_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(2u, 0u ^ (2u))), uint(2u)), _GLF_IDENTITY(uint(2u), uint(2u))))) - 0u) | ((_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, (2u) << 0u))), max(_GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY(uint(2u), uint(2u))))) - 0u)))), 0u, 1u)), max(uint(uvec4(((_GLF_struct_replacement_6.subgroup_local_id + _GLF_IDENTITY(1, (1) ^ 0)) % subgroup_size), (0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), min(uint(2u), uint(2u))), (_GLF_IDENTITY(uint(2u), min(uint(2u), uint(2u)))) ^ 0u))), 0u, 1u)), uint(uvec4(((_GLF_struct_replacement_6.subgroup_local_id + 1) % subgroup_size), (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(0u, 0u ^ (0u)), ((0u >> _GLF_IDENTITY(uint(2u), uint(2u))) >> 0u) | (_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(2u), uint(2u))) >> 0u, (_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(2u), uint(2u))) >> 0u, (true ? (0u >> _GLF_IDENTITY(uint(2u), uint(2u))) >> 0u : _GLF_FUZZED(clamp(112052u, 15941u, num_workgroup))))) | (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))))))), 0u, 1u)))), _GLF_IDENTITY(uint(uvec4(((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_6.subgroup_local_id + 1, min(_GLF_struct_replacement_6.subgroup_local_id + 1, _GLF_struct_replacement_6.subgroup_local_id + 1)), max(_GLF_struct_replacement_6.subgroup_local_id + _GLF_IDENTITY(1, clamp(1, 1, 1)), _GLF_struct_replacement_6.subgroup_local_id + _GLF_IDENTITY(1, 0 | (1))))) % subgroup_size), (_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, (0u) - (0u | 0u))), (_GLF_IDENTITY(true ? ~ (0u) : _GLF_FUZZED(70986u), clamp(true ? ~ (0u) : _GLF_FUZZED(70986u), true ? ~ (0u) : _GLF_FUZZED(70986u), _GLF_IDENTITY(true ? ~ (0u) : _GLF_FUZZED(70986u), min(true ? _GLF_IDENTITY(~ (0u), max(~ (0u), _GLF_IDENTITY(~ (0u), 1u * (~ (0u))))) : _GLF_FUZZED(70986u), true ? ~ (0u) : _GLF_FUZZED(70986u))))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), max(_GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY(uint(2u), uint(2u))))) - 0u)), 0u, 1u)), max(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(((_GLF_struct_replacement_6.subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((1), max(_GLF_IDENTITY((1), ((1)) / (1 | 1)), (1))), max((1), (1))) ^ 0)) % subgroup_size), 0u + (_GLF_IDENTITY(((_GLF_struct_replacement_6.subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1), max((1), (1))) ^ 0)) % subgroup_size), min(((_GLF_struct_replacement_6.subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1), max((1), (1))) ^ 0)) % _GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))))))), ((_GLF_struct_replacement_6.subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1), max((1), (1))) ^ 0)) % subgroup_size))))), (0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), min(uint(2u), uint(2u))))), 0u, _GLF_IDENTITY(1u, min(1u, 1u))), (false ? _GLF_FUZZED(uvec4(155602u, 185504u, 199924u, 57333u)) : uvec4(_GLF_IDENTITY(((_GLF_struct_replacement_6.subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((1), max(_GLF_IDENTITY((1), ((1)) / (1 | 1)), (1))), max((1), (1))) ^ 0)) % subgroup_size), 0u + (_GLF_IDENTITY(((_GLF_struct_replacement_6.subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1), max((1), (1))) ^ 0)) % subgroup_size), min(((_GLF_struct_replacement_6.subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1), max((1), (1))) ^ 0)) % _GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))))))), ((_GLF_struct_replacement_6.subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1), max((1), (1))) ^ 0)) % subgroup_size))))), (0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), min(uint(2u), uint(2u))))), 0u, _GLF_IDENTITY(1u, min(1u, 1u)))))), uint(uvec4(((_GLF_struct_replacement_6.subgroup_local_id + 1) % subgroup_size), (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(0u, uint(uint(0u))), ((_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_size))) >> _GLF_IDENTITY(uint(2u), uint(2u))) >> 0u) | (_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(2u), uint(2u))) >> 0u, ((0u >> _GLF_IDENTITY(uint(2u), uint(2u))) >> 0u) | (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))))))), 0u, 1u)))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), min(max(injectionSwitch.x, injectionSwitch.x), _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), mix(float(_GLF_IDENTITY(max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x), (max(injectionSwitch.x, injectionSwitch.x)) * 1.0)), float(_GLF_FUZZED(-5062.1637)), bool(false)))))) > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, _GLF_IDENTITY(round(length(normalize(vec2(1.0, 1.0)))), (true ? round(length(normalize(vec2(1.0, 1.0)))) : _GLF_FUZZED(cosh(-82.86)))), cos(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)))), _GLF_ONE(1.0, injectionSwitch.y), 0.0))).y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-8785.4256) : _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-6.0)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) + (injectionSwitch.x)))))) > injectionSwitch.y))), ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-8785.4256) : _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-6.0)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) + (injectionSwitch.x)))))) > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(536.784, 3277.3251)) : injectionSwitch)).y)))) && true)))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 buf[virtual_gid] = 1;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_struct_replacement_6.subgroup_local_id + 1 < subgroup_size)
  {
   buf[next_virtual_gid] = _GLF_IDENTITY(2, _GLF_IDENTITY(0 ^ (2), 0 | (0 ^ (2))));
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! (! (false))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! (! (false))))), false || ((_GLF_IDENTITY(! (false), ! (! (! (false)))))))), ! (! (((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! _GLF_IDENTITY((! (false)), ((! (false))) || false)))))))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), ! (! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))), bool(bvec3(_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), ! (! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))), true, false))))))))
    return;
   subgroupAll(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false)))))));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      return;
     return;
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   _GLF_IDENTITY(buf[next_virtual_gid] = 2, (buf[next_virtual_gid] = 2) / uint(_GLF_ONE(1.0, injectionSwitch.y)));
   subgroupAll(_GLF_IDENTITY(true, true && _GLF_IDENTITY((true), _GLF_IDENTITY(false || ((true)), _GLF_IDENTITY(bool(bvec4(false || ((true)), true, true, true)), true && (bool(bvec4(false || ((true)), true, true, true))))))));
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false)))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && true)))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), false, true, false))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, abs(0.0) + (injectionSwitch.y)))), true))), false, true)))))) || false)) || false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false, true)))))) || false)) || false)), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-7.6))) > injectionSwitch.y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y)))))))), true))), false, true)))))) || false)) || false))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)), true))), false, true)))))) || false)) || false)), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false, true)))))) || false)) || false))))), false), false)))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false, true)))))) || false)) || false)), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false, true)))))) || false)) || false))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))))), true)))))) || false)) || false)), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false, true)))))) || false)) || false)))))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false, true)))))) || false)) || false)), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false, true)))))), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false, true)))))), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).y)), true))), false, true)))))))))) && true) || false)) || false))))), false), false)))), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((- (- -14.65))), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-3.3)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x > injectionSwitch.y)), true))), false, true)))))) || false)) || false)), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), true, false))), (injectionSwitch.x > injectionSwitch.y)), true))), false, true)))))) || false)) || false))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bool(bvec3(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), false, true)))))) || false)) || false)), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false, true)))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false, true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false, true))), true)))))) || false)), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false, true)))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false, true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false, true))), true)))))) || false))) || false) || false))))), false), false))))) && true)))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
