#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)), float(_GLF_FUZZED(2247.4104)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) && true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), false, true), bvec3(bvec3(bvec3(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), false, true))))), true && (bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), false, true), bvec3(bvec3(bvec3(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), (bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true))) && true))))), false, true))))))))))))), bool(bvec3(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y))), false, true)))))))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)) / 1.0) < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0))).x < _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x2(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0))), (mat3x2(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-69.37)), float(_GLF_IDENTITY(1.0, 0.0 + (1.0))), bool(true))))))) * mat3(1.0))))) || false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(mat2x4(mat2(1.0) * (injectionSwitch), 1.0, sqrt(1.0), 0.0, 0.0, 0.0, 0.0)))).y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, (1u ^ 1u) ^ (gl_WorkGroupSize.x));
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) / uvec3(_GLF_IDENTITY(1u, (1u) >> (0u << _GLF_IDENTITY(uint(3u), uint(3u)))), 1u, 1u)), max(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | uvec3(0u, 0u, 0u))), max(_GLF_IDENTITY((gl_WorkGroupID), ((gl_WorkGroupID)) - uvec3(0u, 0u, 0u)), (gl_WorkGroupID))) | (_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false)))) ? gl_WorkGroupID : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(uvec3(168528u, 24796u, 4594u), (false ? _GLF_FUZZED(uvec3(196365u, 150418u, 100325u)) : _GLF_IDENTITY(uvec3(168528u, 24796u, 4594u), (uvec3(168528u, 24796u, 4594u)) << uvec3(0u, 0u, 0u))))), _GLF_IDENTITY(min(_GLF_FUZZED(uvec3(168528u, 24796u, 4594u)), _GLF_FUZZED(uvec3(168528u, 24796u, 4594u))), clamp(_GLF_IDENTITY(min(_GLF_FUZZED(uvec3(168528u, 24796u, 4594u)), _GLF_FUZZED(uvec3(168528u, 24796u, 4594u))), min(_GLF_IDENTITY(min(_GLF_FUZZED(uvec3(168528u, 24796u, 4594u)), _GLF_FUZZED(uvec3(168528u, 24796u, 4594u))), (min(_GLF_FUZZED(_GLF_IDENTITY(uvec3(168528u, 24796u, 4594u), (_GLF_IDENTITY(uvec3(168528u, 24796u, 4594u), clamp(uvec3(168528u, 24796u, 4594u), uvec3(168528u, 24796u, 4594u), _GLF_IDENTITY(uvec3(168528u, 24796u, 4594u), uvec3(0u, 0u, 0u) ^ (uvec3(168528u, 24796u, 4594u)))))) | (_GLF_IDENTITY(uvec3(168528u, 24796u, 4594u), clamp(uvec3(168528u, 24796u, 4594u), uvec3(168528u, 24796u, 4594u), _GLF_IDENTITY(uvec3(168528u, 24796u, 4594u), (false ? _GLF_FUZZED(uvec3(28591u, 62748u, 64019u)) : uvec3(168528u, 24796u, 4594u)))))))), _GLF_FUZZED(uvec3(168528u, 24796u, 4594u)))) ^ uvec3(0u, 0u, 0u)), min(_GLF_IDENTITY(_GLF_FUZZED(uvec3(168528u, 24796u, 4594u)), (_GLF_FUZZED(uvec3(168528u, 24796u, 4594u))) << (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(7u), uvec3(_GLF_IDENTITY(7u, max(_GLF_IDENTITY(7u, 1u * (7u)), 7u)))))), _GLF_FUZZED(uvec3(168528u, 24796u, 4594u))))), min(_GLF_FUZZED(uvec3(168528u, _GLF_IDENTITY(24796u, (_GLF_IDENTITY(24796u, min(24796u, 24796u))) - 0u), 4594u)), _GLF_FUZZED(uvec3(168528u, 24796u, 4594u))), _GLF_IDENTITY(min(_GLF_FUZZED(_GLF_IDENTITY(uvec3(168528u, 24796u, 4594u), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(168528u, 24796u, 4594u), ~ (~ (uvec3(168528u, 24796u, 4594u))))), max(uvec3(_GLF_IDENTITY(uvec3(168528u, 24796u, 4594u), ~ (~ (uvec3(168528u, 24796u, 4594u))))), uvec3(_GLF_IDENTITY(uvec3(168528u, 24796u, 4594u), ~ (~ (uvec3(168528u, 24796u, 4594u)))))))))), _GLF_FUZZED(uvec3(168528u, _GLF_IDENTITY(24796u, (24796u) >> 0u), 4594u))), (min(_GLF_FUZZED(uvec3(168528u, 24796u, 4594u)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(uvec3(168528u, 24796u, 4594u)), ~ (~ (_GLF_FUZZED(uvec3(168528u, 24796u, 4594u))))), uvec3(uvec3(_GLF_FUZZED(uvec3(168528u, 24796u, 4594u))))))) | uvec3(0u, 0u, 0u)))))))) | (gl_WorkGroupID)))), gl_WorkGroupID)).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, sin(0.0), 0.0, sqrt(1.0), sqrt(1.0), _GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2(0.0, length(log(vec4(1.0, 1.0, 1.0, 1.0))), 1.0, 1.0)), (_GLF_IDENTITY(float(mat2(0.0, length(log(vec4(1.0, 1.0, 1.0, 1.0))), 1.0, 1.0)), mix(float(_GLF_FUZZED(9.6)), _GLF_IDENTITY(float(float(mat2(0.0, length(_GLF_IDENTITY(log(vec4(1.0, 1.0, 1.0, 1.0)), (log(vec4(1.0, 1.0, 1.0, 1.0))) * vec4(1.0, 1.0, 1.0, 1.0))), 1.0, 1.0))), max(_GLF_IDENTITY(_GLF_IDENTITY(float(float(mat2(0.0, length(log(vec4(1.0, 1.0, 1.0, 1.0))), 1.0, 1.0))), clamp(float(float(mat2(0.0, length(log(vec4(1.0, 1.0, 1.0, 1.0))), 1.0, 1.0))), float(float(mat2(0.0, length(log(vec4(1.0, 1.0, 1.0, 1.0))), 1.0, 1.0))), float(float(mat2(0.0, length(log(vec4(1.0, 1.0, 1.0, 1.0))), 1.0, 1.0))))), max(_GLF_IDENTITY(float(float(mat2(0.0, length(log(vec4(1.0, 1.0, 1.0, 1.0))), 1.0, 1.0))), clamp(float(float(mat2(0.0, length(log(vec4(1.0, 1.0, 1.0, 1.0))), 1.0, 1.0))), float(float(mat2(0.0, length(log(vec4(1.0, 1.0, 1.0, 1.0))), 1.0, 1.0))), float(float(mat2(0.0, length(log(vec4(1.0, 1.0, 1.0, 1.0))), 1.0, 1.0))))), _GLF_IDENTITY(float(float(mat2(0.0, length(log(vec4(1.0, 1.0, 1.0, 1.0))), 1.0, 1.0))), clamp(float(float(mat2(0.0, length(log(vec4(1.0, 1.0, 1.0, 1.0))), 1.0, 1.0))), float(float(mat2(0.0, length(log(vec4(1.0, 1.0, 1.0, 1.0))), 1.0, 1.0))), float(float(mat2(0.0, length(log(vec4(1.0, 1.0, 1.0, 1.0))), 1.0, 1.0))))))), float(float(mat2(0.0, length(log(vec4(1.0, 1.0, 1.0, 1.0))), 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0))))))), bool(true)))) * 1.0)), mix(float(_GLF_FUZZED(-4.0)), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2(0.0, length(_GLF_IDENTITY(log(vec4(1.0, 1.0, 1.0, 1.0)), _GLF_IDENTITY((log(vec4(1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x3(1.0, 1.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, determinant(mat2(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), 1.0, 0.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)))), cos(0.0)), (_GLF_IDENTITY(mat4x3(1.0, 1.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, determinant(mat2(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), 1.0, 0.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)))), cos(0.0)), (mat4x3(1.0, 1.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, determinant(mat2(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), 1.0, 0.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)))), cos(0.0))) * mat4(1.0))) - mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 1.0, 1.0))), vec4(1.0, 1.0, 1.0, 1.0) * (_GLF_IDENTITY((log(vec4(1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x3(1.0, 1.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, determinant(mat2(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), 1.0, 0.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)))), cos(0.0)), (_GLF_IDENTITY(mat4x3(1.0, 1.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, determinant(mat2(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), 1.0, 0.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)))), cos(0.0)), (mat4x3(1.0, 1.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, determinant(mat2(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), 1.0, 0.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)))), cos(0.0))) * mat4(1.0))) - mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 1.0, 1.0))), min((log(vec4(1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x3(1.0, 1.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, determinant(mat2(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), 1.0, 0.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)))), cos(0.0)), (_GLF_IDENTITY(mat4x3(1.0, 1.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, determinant(mat2(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), 1.0, 0.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)))), cos(0.0)), (mat4x3(1.0, 1.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, determinant(mat2(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), 1.0, 0.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)))), cos(0.0))) * mat4(1.0))) - mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 1.0, 1.0))), (log(vec4(1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x3(1.0, 1.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, determinant(mat2(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), 1.0, 0.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)))), cos(0.0)), (_GLF_IDENTITY(mat4x3(1.0, 1.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, determinant(mat2(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), 1.0, 0.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)))), cos(0.0)), (mat4x3(1.0, 1.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, determinant(mat2(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), 1.0, 0.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)))), cos(0.0))) * mat4(1.0))) - mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 1.0, 1.0))))))) / vec4(1.0, 1.0, 1.0, 1.0))), 1.0, 1.0)), (_GLF_IDENTITY(float(mat2(0.0, length(log(vec4(1.0, 1.0, 1.0, 1.0))), 1.0, 1.0)), mix(float(_GLF_FUZZED(9.6)), float(float(mat2(0.0, length(log(vec4(1.0, 1.0, 1.0, 1.0))), 1.0, 1.0))), bool(true)))) * 1.0)), _GLF_IDENTITY(0.0 + (_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2(0.0, length(log(vec4(1.0, 1.0, 1.0, 1.0))), 1.0, 1.0)), (_GLF_IDENTITY(float(mat2(0.0, length(log(vec4(1.0, 1.0, 1.0, 1.0))), 1.0, 1.0)), mix(float(_GLF_FUZZED(9.6)), float(float(mat2(0.0, length(log(vec4(1.0, 1.0, 1.0, 1.0))), 1.0, 1.0))), bool(true)))) * 1.0))), max(0.0 + _GLF_IDENTITY((_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2(0.0, _GLF_IDENTITY(length(log(vec4(1.0, 1.0, 1.0, 1.0))), _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(length(log(vec4(1.0, 1.0, 1.0, 1.0))), 1.0, 0.0), mix(vec3(_GLF_FUZZED(-4.6), _GLF_FUZZED(3.2), (vec3(length(log(vec4(1.0, 1.0, 1.0, 1.0))), 1.0, 0.0))[2]), vec3((vec3(length(log(vec4(1.0, 1.0, 1.0, 1.0))), 1.0, 0.0))[0], (vec3(length(log(vec4(1.0, 1.0, 1.0, 1.0))), 1.0, 0.0))[1], _GLF_FUZZED(853.870)), bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), clamp(float(_GLF_IDENTITY(vec3(length(log(vec4(1.0, 1.0, 1.0, 1.0))), 1.0, 0.0), mix(vec3(_GLF_FUZZED(-4.6), _GLF_FUZZED(3.2), (vec3(length(log(vec4(1.0, 1.0, 1.0, 1.0))), 1.0, 0.0))[2]), vec3((vec3(length(log(vec4(1.0, 1.0, 1.0, 1.0))), 1.0, 0.0))[0], (vec3(length(log(vec4(1.0, 1.0, 1.0, 1.0))), 1.0, 0.0))[1], _GLF_FUZZED(853.870)), bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), float(_GLF_IDENTITY(vec3(length(log(vec4(1.0, 1.0, 1.0, 1.0))), 1.0, 0.0), mix(vec3(_GLF_FUZZED(-4.6), _GLF_FUZZED(3.2), (vec3(length(log(vec4(1.0, 1.0, 1.0, 1.0))), 1.0, 0.0))[2]), vec3((vec3(length(log(vec4(1.0, 1.0, 1.0, 1.0))), 1.0, 0.0))[0], (vec3(length(log(vec4(1.0, 1.0, 1.0, 1.0))), 1.0, 0.0))[1], _GLF_FUZZED(853.870)), bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), float(_GLF_IDENTITY(vec3(length(log(vec4(1.0, 1.0, 1.0, 1.0))), 1.0, 0.0), mix(vec3(_GLF_FUZZED(-4.6), _GLF_FUZZED(3.2), (vec3(length(log(vec4(1.0, 1.0, 1.0, 1.0))), 1.0, 0.0))[2]), vec3((vec3(length(log(vec4(1.0, 1.0, 1.0, 1.0))), 1.0, 0.0))[0], (vec3(length(log(vec4(1.0, 1.0, 1.0, 1.0))), 1.0, 0.0))[1], _GLF_FUZZED(853.870)), bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), 1.0, 1.0)), (_GLF_IDENTITY(float(mat2(0.0, _GLF_IDENTITY(length(log(vec4(1.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec3(1.0, tan(0.0), 1.0)), (float(vec3(1.0, tan(0.0), 1.0))) / 1.0))) - 0.0), 1.0))), max(length(log(vec4(1.0, 1.0, 1.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(length(log(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), clamp(vec4(1.0, 1.0, 1.0, 1.0), vec4(1.0, 1.0, 1.0, 1.0), _GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), max(vec4(1.0, 1.0, 1.0, 1.0), vec4(1.0, 1.0, 1.0, 1.0))))))), (length(log(vec4(1.0, 1.0, 1.0, 1.0)))) + 0.0), (_GLF_IDENTITY(length(log(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), clamp(vec4(1.0, 1.0, 1.0, 1.0), vec4(1.0, 1.0, 1.0, 1.0), _GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), max(vec4(1.0, _GLF_IDENTITY(1.0, float(mat3x2(1.0, 0.0, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0))), 1.0, 1.0), vec4(1.0, 1.0, 1.0, 1.0))))))), (length(log(vec4(1.0, 1.0, 1.0, 1.0)))) + 0.0)) * 1.0))), 1.0, 1.0)), mix(float(_GLF_FUZZED(9.6)), float(_GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(mat2(0.0, length(log(vec4(1.0, 1.0, 1.0, 1.0))), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(-5.2) : 1.0)), 1.0), mat2(mat4x2(mat2(0.0, length(log(vec4(1.0, 1.0, 1.0, 1.0))), 1.0, 1.0))))), (float(_GLF_IDENTITY(mat2(0.0, length(log(vec4(1.0, 1.0, 1.0, 1.0))), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(-5.2) : 1.0)), 1.0), mat2(mat4x2(mat2(0.0, length(log(vec4(1.0, 1.0, 1.0, 1.0))), 1.0, 1.0)))))) * round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), min(float(_GLF_IDENTITY(mat2(0.0, length(log(vec4(1.0, 1.0, 1.0, 1.0))), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(_GLF_IDENTITY(-5.2, (false ? _GLF_FUZZED(882.932) : -5.2))) : 1.0)), 1.0), mat2(mat4x2(mat2(0.0, length(log(vec4(1.0, 1.0, 1.0, 1.0))), 1.0, 1.0))))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(0.0, length(log(vec4(1.0, 1.0, 1.0, 1.0))), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(-5.2) : 1.0)), 1.0), _GLF_IDENTITY(mat2(mat4x2(mat2(0.0, length(log(vec4(1.0, 1.0, 1.0, 1.0))), 1.0, 1.0))), mat2(mat2x3(_GLF_IDENTITY(mat2(mat4x2(mat2(0.0, length(log(vec4(1.0, 1.0, 1.0, 1.0))), 1.0, 1.0))), transpose(transpose(_GLF_IDENTITY(mat2(mat4x2(mat2(0.0, length(log(vec4(1.0, 1.0, 1.0, 1.0))), 1.0, 1.0))), transpose(transpose(mat2(mat4x2(mat2(0.0, length(log(vec4(1.0, 1.0, 1.0, 1.0))), 1.0, 1.0)))))))))))))), 1.0 * (float(_GLF_IDENTITY(mat2(0.0, length(log(vec4(1.0, 1.0, 1.0, 1.0))), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false))))) ? _GLF_FUZZED(-5.2) : 1.0)), 1.0), mat2(mat4x2(mat2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), length(log(vec4(1.0, 1.0, 1.0, 1.0))), 1.0, 1.0)))))))))), bool(true)))) * 1.0))), (false ? _GLF_FUZZED(-159.698) : (_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2(0.0, length(log(vec4(1.0, 1.0, 1.0, 1.0))), 1.0, 1.0)), (_GLF_IDENTITY(float(mat2(0.0, _GLF_IDENTITY(length(log(vec4(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(vec3(-31.28, 4.5, 8.3).r)), float(1.0), bool(true))), 1.0, 1.0))), max(length(log(vec4(1.0, 1.0, 1.0, 1.0))), _GLF_IDENTITY(length(log(vec4(1.0, 1.0, 1.0, 1.0))), (length(log(vec4(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)))) + 0.0))), 1.0, 1.0)), mix(float(_GLF_FUZZED(9.6)), float(float(_GLF_IDENTITY(mat2(0.0, length(log(vec4(1.0, 1.0, 1.0, 1.0))), 1.0, 1.0), mat2(mat4x2(mat2(0.0, length(log(vec4(1.0, 1.0, 1.0, 1.0))), 1.0, 1.0)))))), bool(true)))) * 1.0))))), 0.0 + (_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2(0.0, length(log(vec4(1.0, 1.0, 1.0, 1.0))), 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) + 0.0)) / 1.0), 1.0, 1.0)))), (_GLF_IDENTITY(float(mat2(0.0, length(log(vec4(1.0, 1.0, 1.0, 1.0))), 1.0, 1.0)), mix(float(_GLF_FUZZED(9.6)), float(float(mat2(0.0, length(log(vec4(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0))), 1.0, 1.0))), bool(true)))) * 1.0))))))), (true ? float(_GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2(0.0, length(log(vec4(1.0, 1.0, 1.0, 1.0))), 1.0, 1.0)), (_GLF_IDENTITY(float(mat2(0.0, length(log(vec4(1.0, 1.0, 1.0, 1.0))), 1.0, 1.0)), mix(float(_GLF_FUZZED(9.6)), float(float(mat2(0.0, length(log(vec4(1.0, 1.0, 1.0, 1.0))), 1.0, 1.0))), bool(true)))) * 1.0)), _GLF_IDENTITY(0.0 + (_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2(0.0, length(log(vec4(1.0, 1.0, 1.0, 1.0))), 1.0, 1.0)), (_GLF_IDENTITY(float(mat2(0.0, length(log(vec4(1.0, 1.0, 1.0, 1.0))), 1.0, 1.0)), mix(float(_GLF_FUZZED(9.6)), float(float(_GLF_IDENTITY(mat2(0.0, length(log(vec4(1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x2(1.0, 0.0, 0.0, 0.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat3x2(49.57, 8.6, -1.6, 40.06, 1047.3897, -28.92)) : mat3x2(1.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), 1.0, 1.0))), 1.0, 1.0), _GLF_IDENTITY(mat2(mat4(mat2(0.0, length(log(vec4(1.0, 1.0, 1.0, 1.0))), 1.0, 1.0))), mat2(mat2x4(mat2(mat4(mat2(0.0, length(log(vec4(1.0, 1.0, 1.0, 1.0))), 1.0, 1.0))))))))), bool(true)))) * 1.0))), max(0.0 + _GLF_IDENTITY((_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(0.0, (0.0) / 1.0), length(log(vec4(1.0, 1.0, 1.0, 1.0))), 1.0, 1.0)), (_GLF_IDENTITY(float(mat2(0.0, _GLF_IDENTITY(length(log(vec4(1.0, 1.0, 1.0, 1.0))), max(length(log(vec4(1.0, 1.0, 1.0, 1.0))), _GLF_IDENTITY(length(log(vec4(1.0, 1.0, 1.0, 1.0))), (length(log(vec4(1.0, 1.0, 1.0, 1.0)))) + 0.0))), 1.0, 1.0)), mix(float(_GLF_FUZZED(9.6)), float(float(_GLF_IDENTITY(mat2(0.0, length(log(vec4(1.0, 1.0, 1.0, 1.0))), 1.0, 1.0), _GLF_IDENTITY(mat2(mat4x2(mat2(0.0, length(log(vec4(1.0, 1.0, 1.0, 1.0))), 1.0, 1.0))), (_GLF_IDENTITY(mat2(mat4x2(mat2(0.0, length(log(vec4(1.0, 1.0, 1.0, 1.0))), 1.0, 1.0))), (mat2(mat4x2(mat2(0.0, length(log(vec4(1.0, 1.0, 1.0, 1.0))), 1.0, 1.0)))) / mat2(1.0, 1.0, 1.0, 1.0))) - mat2(0.0, 0.0, 0.0, 0.0))))), bool(true)))) * 1.0))), (false ? _GLF_FUZZED(-159.698) : (_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2(0.0, length(log(vec4(1.0, 1.0, 1.0, 1.0))), 1.0, 1.0)), (_GLF_IDENTITY(float(mat2(0.0, _GLF_IDENTITY(length(log(vec4(1.0, 1.0, 1.0, 1.0))), max(length(log(vec4(1.0, 1.0, 1.0, 1.0))), _GLF_IDENTITY(length(log(vec4(1.0, 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0)), 1.0))), (length(log(vec4(1.0, 1.0, 1.0, 1.0)))) + 0.0))), 1.0, 1.0)), mix(float(_GLF_FUZZED(9.6)), float(float(_GLF_IDENTITY(mat2(0.0, length(log(vec4(1.0, 1.0, 1.0, 1.0))), _GLF_IDENTITY(1.0, (1.0) / _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, abs(0.0))), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, abs(0.0))))), 1.0), mat2(mat4x2(mat2(0.0, length(log(vec4(1.0, 1.0, 1.0, 1.0))), 1.0, 1.0)))))), bool(true)))) * _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, float(vec4(1.0, 1.0, 1.0, 1.0)))))))))), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2(0.0, length(log(vec4(1.0, 1.0, _GLF_IDENTITY(1.0, float(mat3(1.0, 1.0, 0.0, 0.0, abs(abs(0.0)), 1.0, sqrt(0.0), 0.0, 0.0))), 1.0))), 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) + 0.0)) / 1.0), 1.0, 1.0)))), (_GLF_IDENTITY(float(mat2(0.0, length(log(vec4(1.0, 1.0, 1.0, 1.0))), 1.0, 1.0)), mix(float(_GLF_FUZZED(9.6)), float(float(mat2(0.0, length(log(vec4(1.0, 1.0, 1.0, 1.0))), 1.0, 1.0))), bool(true)))) * 1.0)), min(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2(0.0, length(log(vec4(1.0, 1.0, _GLF_IDENTITY(1.0, float(mat3(1.0, 1.0, 0.0, 0.0, abs(abs(0.0)), 1.0, sqrt(0.0), 0.0, 0.0))), 1.0))), 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) + 0.0)) / 1.0), 1.0, 1.0)))), (_GLF_IDENTITY(float(mat2(0.0, length(log(vec4(1.0, 1.0, 1.0, 1.0))), 1.0, 1.0)), mix(float(_GLF_FUZZED(9.6)), float(float(mat2(0.0, length(log(vec4(1.0, 1.0, 1.0, 1.0))), 1.0, 1.0))), bool(true)))) * 1.0)), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2(0.0, length(log(vec4(1.0, 1.0, _GLF_IDENTITY(1.0, float(mat3(1.0, 1.0, 0.0, 0.0, abs(abs(0.0)), 1.0, sqrt(0.0), 0.0, 0.0))), 1.0))), 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) + 0.0)) / 1.0), 1.0, 1.0)))), (_GLF_IDENTITY(float(mat2(0.0, length(log(vec4(1.0, 1.0, 1.0, 1.0))), 1.0, 1.0)), mix(float(_GLF_FUZZED(9.6)), float(float(mat2(0.0, length(log(vec4(1.0, 1.0, 1.0, 1.0))), 1.0, 1.0))), bool(true)))) * 1.0))))))))) : _GLF_FUZZED(refract(-9293.7951, 8170.0759, 2.6)))), bool(true))), 0.0, 1.0)), float(mat4x2(float(mat2x4(injectionSwitch.y, sin(0.0), 0.0, sqrt(1.0), sqrt(_GLF_IDENTITY(1.0, (1.0) / 1.0)), 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(float(0.0))), 1.0, 1.0))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), (bool((injectionSwitch.x > injectionSwitch.y))) && true)), _GLF_IDENTITY((bool(bool((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), ! (! ((bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))))) && true))), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-4912.9922) : 1.0)), 0.0, 1.0, _GLF_ONE(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_FUZZED(83.54)), (float(_GLF_FUZZED(83.54))) * 1.0), float(1.0), bool(true)))) - 0.0), injectionSwitch.y), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat2(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, 1.0, 0.0, 1.0, 1.0, 1.0), (true ? _GLF_IDENTITY(mat2x3(injectionSwitch.x, 1.0, 0.0, 1.0, 1.0, 1.0), transpose(transpose(mat2x3(injectionSwitch.x, 1.0, 0.0, 1.0, 1.0, 1.0)))) : _GLF_FUZZED(mat2x3(291.254, -202.242, _GLF_IDENTITY(-3.5, min(-3.5, -3.5)), -9753.0465, 85.87, 77.55))))))), 0.0, sin(0.0), 0.0))), _GLF_ZERO(0.0, injectionSwitch.x))), 0.0)))))) && true, ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-9.9))), float(mat3(injectionSwitch.y, 1.0, 1.0, 1.0, 0.0, 1.0, _GLF_ONE(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(83.54)), _GLF_IDENTITY(float(1.0), max(float(1.0), _GLF_IDENTITY(float(1.0), clamp(float(1.0), _GLF_IDENTITY(float(1.0), (float(1.0)) / 1.0), float(1.0))))), bool(true)))) - 0.0), injectionSwitch.y), _GLF_ZERO(0.0, injectionSwitch.x), 0.0)))))) && true) || false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))))), _GLF_IDENTITY(true && (false), bool(bool(true && (false)))))), false || (_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), false || (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(-146.768, -6185.4688), vec2(mat3x2(vec2(-146.768, -6185.4688), 1.0, determinant(mat2(0.0, 0.0, 0.0, length(0.0))), abs(0.0), 0.0)))) : injectionSwitch)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(1.0, 1.0) * (mat2(1.0) * (injectionSwitch)))), (false ? _GLF_FUZZED(vec2(_GLF_IDENTITY(-146.768, max(-146.768, -146.768)), -6185.4688)) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-146.768, -6185.4688)) : injectionSwitch)))).x > injectionSwitch.y))))))
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))), true), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))), true)), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))), true))))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
    barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u, uint(uint(0u))) ^ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u))))) * subgroup_size, (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), min(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), _GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)))) : _GLF_FUZZED((num_workgroup + subgroup_id))))) - 0u), subgroup_id * subgroup_size, subgroup_id * subgroup_size))) | (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(true, ! (! (true))) ? subgroup_id * subgroup_size : _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size))))), _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u ^ (subgroup_id), min(0u ^ (subgroup_id), _GLF_IDENTITY(0u ^ (subgroup_id), (0u ^ (subgroup_id)) | (0u ^ (subgroup_id))))))) * ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))) * subgroup_size, (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u ^ (subgroup_id), min(0u ^ (subgroup_id), _GLF_IDENTITY(0u ^ (subgroup_id), (0u ^ (subgroup_id)) | (0u ^ (subgroup_id))))))) * ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))) * subgroup_size) - 0u)) >> 0u, clamp((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(~ _GLF_IDENTITY((~ (_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)))), 0u ^ (_GLF_IDENTITY((~ (workgroup_base)), (_GLF_IDENTITY((~ (workgroup_base)), ~ (~ ((~ (workgroup_base)))))) | (_GLF_IDENTITY((~ (workgroup_base)), ((~ (workgroup_base))) | ((~ (workgroup_base)))))))), max(_GLF_IDENTITY(~ _GLF_IDENTITY((~ (_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)))), 0u ^ (_GLF_IDENTITY((~ (workgroup_base)), (_GLF_IDENTITY((~ (workgroup_base)), ~ (~ ((~ (workgroup_base)))))) | (_GLF_IDENTITY((~ (workgroup_base)), ((~ (workgroup_base))) | ((~ (workgroup_base)))))))), clamp(~ _GLF_IDENTITY((~ (_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)))), 0u ^ (_GLF_IDENTITY((~ (workgroup_base)), (_GLF_IDENTITY((~ (workgroup_base)), ~ (~ ((~ (workgroup_base)))))) | (_GLF_IDENTITY((_GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) / 1u)), ((~ (workgroup_base))) | ((~ (workgroup_base)))))))), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)))), 0u ^ (_GLF_IDENTITY((~ (workgroup_base)), (_GLF_IDENTITY((~ (workgroup_base)), ~ (~ ((~ (workgroup_base)))))) | (_GLF_IDENTITY((~ (workgroup_base)), ((~ (workgroup_base))) | ((~ (workgroup_base)))))))), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)))), 0u ^ (_GLF_IDENTITY((~ (workgroup_base)), (_GLF_IDENTITY((~ (workgroup_base)), ~ (~ ((~ (workgroup_base)))))) | (_GLF_IDENTITY((~ (_GLF_IDENTITY(workgroup_base, ~ (~ (_GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(workgroup_id)))))))), ((~ (workgroup_base))) | ((~ (workgroup_base)))))))))), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)))), 0u ^ (_GLF_IDENTITY((~ (workgroup_base)), (_GLF_IDENTITY((~ (workgroup_base)), ~ (~ ((~ (workgroup_base)))))) | (_GLF_IDENTITY((~ (workgroup_base)), ((~ (workgroup_base))) | ((~ (workgroup_base))))))))))) + subgroup_id * subgroup_size) >> 0u, (workgroup_base + subgroup_id * subgroup_size) >> 0u, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), 0u ^ (_GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), ((workgroup_base + subgroup_id * subgroup_size)) | 0u))) >> 0u, ~ (~ ((workgroup_base + subgroup_id * subgroup_size) >> 0u))))), (_GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size) >> 0u, clamp((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)))), 0u ^ ((~ (workgroup_base))))) + subgroup_id * subgroup_size) >> 0u, (workgroup_base + subgroup_id * subgroup_size) >> 0u, _GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), (~ (subgroup_id * subgroup_size)) - 0u)))) >> 0u, ~ (~ ((workgroup_base + subgroup_id * subgroup_size) >> 0u)))))) - 0u)))) + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << (1u ^ ((_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(7u), uint(7u)), _GLF_IDENTITY((_GLF_IDENTITY(uint(7u), uint(7u))), _GLF_IDENTITY(((_GLF_IDENTITY(uint(7u), uint(7u)))) | (_GLF_IDENTITY((_GLF_IDENTITY(uint(7u), uint(7u))), ((_GLF_IDENTITY(uint(7u), uint(7u)))) << (0u << _GLF_IDENTITY(uint(5u), uint(5u))))), (_GLF_IDENTITY(((_GLF_IDENTITY(uint(7u), uint(7u)))) | (_GLF_IDENTITY((_GLF_IDENTITY(uint(7u), uint(7u))), ((_GLF_IDENTITY(uint(7u), uint(7u)))) << (0u << _GLF_IDENTITY(uint(5u), uint(5u))))), (((_GLF_IDENTITY(uint(7u), uint(7u)))) | (_GLF_IDENTITY((_GLF_IDENTITY(uint(7u), uint(7u))), ((_GLF_IDENTITY(uint(7u), uint(7u)))) << (0u << _GLF_IDENTITY(uint(5u), uint(5u)))))) >> 0u)) | 0u)) + 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(7u), uint(7u)), _GLF_IDENTITY((_GLF_IDENTITY(uint(7u), uint(7u))), ((_GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (_GLF_IDENTITY(uint(7u), (uint(7u)) ^ 0u)) ^ 0u)))) | (_GLF_IDENTITY((_GLF_IDENTITY(uint(7u), uint(7u))), ((_GLF_IDENTITY(uint(7u), uint(7u)))) << (0u << _GLF_IDENTITY(uint(5u), uint(5u)))))) + 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(7u), uint(7u)), _GLF_IDENTITY((_GLF_IDENTITY(uint(7u), uint(7u))), ((_GLF_IDENTITY(uint(7u), uint(7u)))) | (_GLF_IDENTITY((_GLF_IDENTITY(uint(7u), uint(7u))), ((_GLF_IDENTITY(uint(7u), uint(7u)))) << (0u << _GLF_IDENTITY(uint(5u), uint(5u)))))) + 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(7u), uint(7u)), _GLF_IDENTITY((_GLF_IDENTITY(uint(7u), uint(7u))), ((_GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(uint(7u), 0u, (1u ^ 1u)), uvec3(uvec4(uvec3(uint(7u), 0u, (1u ^ 1u)), 1u)))), clamp(uint(_GLF_IDENTITY(uvec3(uint(7u), 0u, (1u ^ 1u)), uvec3(uvec4(uvec3(uint(7u), 0u, (1u ^ 1u)), 1u)))), uint(_GLF_IDENTITY(uvec3(uint(7u), 0u, (1u ^ 1u)), uvec3(uvec4(uvec3(uint(7u), 0u, (1u ^ 1u)), 1u)))), uint(_GLF_IDENTITY(uvec3(uint(7u), 0u, (1u ^ 1u)), uvec3(uvec4(uvec3(uint(7u), 0u, (1u ^ 1u)), 1u)))))))))) | (_GLF_IDENTITY((_GLF_IDENTITY(uint(7u), uint(7u))), ((_GLF_IDENTITY(uint(7u), uint(7u)))) << (0u << _GLF_IDENTITY(uint(5u), uint(5u)))))) + 0u), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(uint(7u), uint(7u)), _GLF_IDENTITY((_GLF_IDENTITY(uint(7u), uint(7u))), ((_GLF_IDENTITY(uint(7u), uint(7u)))) | (_GLF_IDENTITY((_GLF_IDENTITY(uint(7u), uint(7u))), (_GLF_IDENTITY((_GLF_IDENTITY(uint(7u), uint(7u))), (_GLF_IDENTITY((_GLF_IDENTITY(uint(7u), uint(7u))), ((_GLF_IDENTITY(uint(7u), uint(7u)))) | ((_GLF_IDENTITY(uint(7u), uint(7u)))))) << 0u)) << (0u << _GLF_IDENTITY(uint(5u), uint(5u)))))) + 0u), 0u)))) << 0u))), _GLF_IDENTITY(max(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), uint(7u)), _GLF_IDENTITY((_GLF_IDENTITY(uint(7u), uint(7u))), ((_GLF_IDENTITY(uint(7u), uint(7u)))) | (_GLF_IDENTITY((_GLF_IDENTITY(uint(7u), uint(7u))), ((_GLF_IDENTITY(uint(7u), uint(7u)))) << (0u << _GLF_IDENTITY(uint(5u), uint(5u)))))) + 0u), 1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), uint(7u)), _GLF_IDENTITY((_GLF_IDENTITY(uint(7u), uint(7u))), ((_GLF_IDENTITY(uint(7u), uint(7u)))) | (_GLF_IDENTITY((_GLF_IDENTITY(uint(7u), uint(7u))), ((_GLF_IDENTITY(uint(7u), uint(7u)))) << (0u << _GLF_IDENTITY(uint(5u), uint(5u)))))) + 0u)), max(max(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), uint(7u)), _GLF_IDENTITY((_GLF_IDENTITY(uint(7u), uint(7u))), ((_GLF_IDENTITY(uint(7u), uint(7u)))) | (_GLF_IDENTITY((_GLF_IDENTITY(uint(7u), uint(7u))), ((_GLF_IDENTITY(uint(7u), uint(7u)))) << (0u << _GLF_IDENTITY(uint(5u), uint(5u)))))) + 0u), 1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), uint(7u)), _GLF_IDENTITY((_GLF_IDENTITY(uint(7u), uint(7u))), ((_GLF_IDENTITY(uint(7u), uint(7u)))) | (_GLF_IDENTITY((_GLF_IDENTITY(uint(7u), uint(7u))), ((_GLF_IDENTITY(uint(7u), uint(7u)))) << (0u << _GLF_IDENTITY(uint(5u), uint(5u)))))) + 0u)), _GLF_IDENTITY(max(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), uint(7u)), _GLF_IDENTITY((_GLF_IDENTITY(uint(7u), uint(7u))), ((_GLF_IDENTITY(_GLF_IDENTITY(uint(7u), (false ? _GLF_FUZZED(uint(7.9)) : _GLF_IDENTITY(uint(7u), (uint(7u)) << (0u ^ 0u)))), uint(7u)))) | (_GLF_IDENTITY((_GLF_IDENTITY(uint(7u), uint(7u))), ((_GLF_IDENTITY(uint(7u), uint(7u)))) << (0u << _GLF_IDENTITY(uint(5u), uint(5u)))))) + 0u), 1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), uint(7u)), _GLF_IDENTITY((_GLF_IDENTITY(uint(7u), uint(7u))), ((_GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), max(uint(7u), uint(7u)))))) | (_GLF_IDENTITY((_GLF_IDENTITY(uint(7u), uint(7u))), ((_GLF_IDENTITY(uint(7u), uint(7u)))) << (0u << _GLF_IDENTITY(uint(5u), uint(5u)))))) + 0u)), (max(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), uint(7u)), _GLF_IDENTITY((_GLF_IDENTITY(uint(7u), uint(7u))), ((_GLF_IDENTITY(uint(7u), uint(7u)))) | (_GLF_IDENTITY((_GLF_IDENTITY(uint(7u), uint(7u))), ((_GLF_IDENTITY(uint(7u), uint(7u)))) << (0u << _GLF_IDENTITY(uint(5u), uint(5u)))))) + 0u), 1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), uint(7u)), _GLF_IDENTITY((_GLF_IDENTITY(uint(7u), uint(7u))), ((_GLF_IDENTITY(uint(7u), uint(7u)))) | (_GLF_IDENTITY((_GLF_IDENTITY(uint(7u), uint(7u))), ((_GLF_IDENTITY(uint(7u), uint(7u)))) << (0u << _GLF_IDENTITY(uint(5u), uint(5u)))))) + 0u))) / 1u))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), uint(7u)), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uint(7u), uint(7u)), (_GLF_IDENTITY(uint(7u), uint(7u))) >> 0u), uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)), (uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uint(7u), uint(7u)), (_GLF_IDENTITY(uint(7u), uint(7u))) >> 0u), uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u))) >> 0u)))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  barrier();
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), ~ (~ (uint(5u)))), uint(5u)))), (subgroup_id) - 0u) * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), (bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y)))), ! (! ((! (injectionSwitch.x > injectionSwitch.y)))))))) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(8.3)), bool(false))) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, true))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, sqrt(0.0), 0.0)))), float(_GLF_FUZZED(vec4(-1606.7858, 13.19, -9671.2906, -65.89).b)), bool(false))) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    barrier();
   barrier();
  }
 buf[virtual_gid] = 1;
 if(_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u), subgroup_local_id + 1)) < subgroup_size)
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), ! (! (_GLF_DEAD(false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, log(1.0))), dot(vec3(0.0, 1.0, 0.0), vec3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-384.899)), bool(false))), 1.0, log(1.0)))), 0.0, 1.0), transpose(transpose(mat3x4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(9.7) : 1.0)))), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, log(1.0))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, log(1.0)))), 0.0, 1.0))))), min(_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, log(1.0))), dot(vec3(0.0, 1.0, 0.0), vec3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-384.899)), bool(false))), 1.0, log(1.0)))), 0.0, 1.0), transpose(transpose(mat3x4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(9.7) : 1.0)))), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, log(1.0))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, log(1.0)))), 0.0, 1.0))))), max(vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, log(1.0))), dot(vec3(0.0, 1.0, 0.0), vec3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-384.899)), bool(false))), 1.0, log(1.0)))), 0.0, 1.0), transpose(transpose(mat3x4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(9.7) : 1.0)))), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, log(1.0))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, log(1.0)))), 0.0, 1.0))))), vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, log(1.0))), dot(vec3(0.0, 1.0, 0.0), vec3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-384.899)), bool(false))), 1.0, log(1.0)))), 0.0, 1.0), transpose(transpose(mat3x4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(9.7) : 1.0)))), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, log(1.0))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, log(1.0)))), 0.0, 1.0))))))), vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, log(1.0))), dot(vec3(0.0, 1.0, 0.0), vec3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-384.899)), bool(false))), 1.0, log(1.0)))), 0.0, 1.0), transpose(transpose(mat3x4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(9.7) : 1.0)))), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, log(1.0))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, log(1.0)))), 0.0, 1.0)))))))).y, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, log(1.0))), dot(vec3(0.0, 1.0, 0.0), vec3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-384.899)), bool(false))), 1.0, log(1.0)))), 0.0, 1.0), transpose(transpose(mat3x4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(9.7) : 1.0)))), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, log(1.0))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, log(1.0)))), 0.0, 1.0))))), min(_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, log(1.0))), dot(vec3(0.0, 1.0, 0.0), vec3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-384.899)), bool(false))), 1.0, log(1.0)))), 0.0, 1.0), transpose(transpose(mat3x4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(9.7) : 1.0)))), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, log(1.0))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, log(1.0)))), 0.0, 1.0))))), max(vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, log(1.0))), dot(vec3(0.0, 1.0, 0.0), vec3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-384.899)), bool(false))), 1.0, log(1.0)))), 0.0, 1.0), transpose(transpose(mat3x4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(9.7) : 1.0)))), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, log(1.0))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, log(1.0)))), 0.0, 1.0))))), vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, log(1.0))), dot(vec3(0.0, 1.0, 0.0), vec3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-384.899)), bool(false))), 1.0, log(1.0)))), 0.0, 1.0), transpose(transpose(mat3x4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(9.7) : 1.0)))), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, log(1.0))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, log(1.0)))), 0.0, 1.0))))))), vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, log(1.0))), dot(vec3(0.0, 1.0, 0.0), vec3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-384.899)), bool(false))), 1.0, log(1.0)))), 0.0, 1.0), transpose(transpose(mat3x4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(9.7) : 1.0)))), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, log(1.0))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, log(1.0)))), 0.0, 1.0)))))))).y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, log(1.0))), dot(vec3(0.0, 1.0, 0.0), vec3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-384.899)), bool(false))), 1.0, log(1.0)))), 0.0, 1.0), transpose(transpose(mat3x4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(9.7) : 1.0)))), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, log(1.0))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, log(1.0)))), 0.0, 1.0))))), min(_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, log(1.0))), dot(vec3(0.0, 1.0, 0.0), vec3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-384.899)), bool(false))), 1.0, log(1.0)))), 0.0, 1.0), transpose(transpose(mat3x4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(9.7) : 1.0)))), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, log(1.0))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, log(1.0)))), 0.0, 1.0))))), max(vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, log(1.0))), dot(vec3(0.0, 1.0, 0.0), vec3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-384.899)), bool(false))), 1.0, log(1.0)))), 0.0, 1.0), transpose(transpose(mat3x4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(9.7) : 1.0)))), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, log(1.0))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, log(1.0)))), 0.0, 1.0))))), vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, log(1.0))), dot(vec3(0.0, 1.0, 0.0), vec3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-384.899)), bool(false))), 1.0, log(1.0)))), 0.0, 1.0), transpose(transpose(mat3x4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(9.7) : 1.0)))), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, log(1.0))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, log(1.0)))), 0.0, 1.0))))))), vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, log(1.0))), dot(vec3(0.0, 1.0, 0.0), vec3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-384.899)), bool(false))), 1.0, log(1.0)))), 0.0, 1.0), transpose(transpose(mat3x4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(9.7) : 1.0)))), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, log(1.0))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, log(1.0)))), 0.0, 1.0)))))))).y))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
    barrier();
   _GLF_IDENTITY(buf[next_virtual_gid] = 2, (buf[next_virtual_gid] = 2) | 0u);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))) || false)))))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (_GLF_IDENTITY(true && (false), _GLF_IDENTITY((_GLF_IDENTITY(true && (false), (true && (false)) && true)), true && ((_GLF_IDENTITY(true && (false), (true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec4(! (false), false, true, false)), false || (bool(bvec4(! (false), false, true, false))))))))) && true)))) || false)) || false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (true ? mat2(1.0) * (injectionSwitch) : _GLF_FUZZED(injectionSwitch)))).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   buf[next_virtual_gid] = _GLF_IDENTITY(2, clamp(2, 2, _GLF_IDENTITY(2, (_GLF_IDENTITY(2, (false ? _GLF_IDENTITY(_GLF_FUZZED(-46111), max(_GLF_FUZZED(-46111), _GLF_IDENTITY(_GLF_FUZZED(-46111), ~ (~ (_GLF_FUZZED(-46111)))))) : 2))) + 0)));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-654.821)), vec2(_GLF_FUZZED(-857.768), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), true, true), bvec3(bvec4(bvec3((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - log(1.0)) > injectionSwitch.y), true, true), true))))))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x), float(float(min(injectionSwitch.x, injectionSwitch.x))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), sqrt(0.0), 0.0)), _GLF_IDENTITY(mat2(1.0) * (vec2(vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), sqrt(0.0), 0.0))), vec2(mat4(mat2(1.0) * (vec2(vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), sqrt(0.0), 0.0))), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0))))).x, injectionSwitch.x)), clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 1.0, 0.0, 0.0, tan(0.0), _GLF_ONE(1.0, injectionSwitch.y)))).x)), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), float(vec3(min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, injectionSwitch.x), 0.0, 1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))))).x) - 0.0), min(injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(0.8)), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))), cos(abs(_GLF_IDENTITY(0.0, float(vec3(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, float(mat3x2(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-0.8) : 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0))), _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0, 0.0)), 1.0, 1.0))))), 1.0)), clamp(float(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(mat2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), 1.0, 1.0))), injectionSwitch)).x, min(injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), cos(abs(0.0)), 1.0)), float(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(_GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), clamp(min(injectionSwitch.x, injectionSwitch.x), min(injectionSwitch.x, injectionSwitch.x), _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), clamp(min(injectionSwitch.x, injectionSwitch.x), min(injectionSwitch.x, injectionSwitch.x), min(injectionSwitch.x, injectionSwitch.x))))), (true ? min(injectionSwitch.x, injectionSwitch.x) : _GLF_FUZZED(38.22)))), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-261.890)), float(1.0), bool(true)), (_GLF_IDENTITY(mix(float(_GLF_FUZZED(-261.890)), float(1.0), bool(true)), (mix(float(_GLF_FUZZED(-261.890)), float(1.0), bool(true))) / 1.0)) - 0.0)), 1.0)), 0.0, _GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, cos(0.0)))), 0.0, 0.0, cos(abs(0.0)), 1.0)), float(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), (true ? injectionSwitch : _GLF_FUZZED(vec2(274.494, 18.79)))).x, injectionSwitch.x)), 1.0, 0.0, 0.0, 0.0, 0.0, cos(abs(0.0)), 1.0))))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(4673.2384)), bool(false))), min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x)), (false ? _GLF_FUZZED(1700.9854) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), min(injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), float(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), max(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), 1.0, 1.0, 0.0, 1.0, 1.0))))))) > injectionSwitch.y), true && ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(272.980), (injectionSwitch)[1]), (vec2(_GLF_FUZZED(272.980), (injectionSwitch)[1])) + vec2(0.0, 0.0)), vec2((injectionSwitch)[0], _GLF_FUZZED((-7.4 - _GLF_IDENTITY(-9161.1209, min(-9161.1209, -9161.1209))))), bvec2(true, false)))))).x), float(float(min(injectionSwitch.x, injectionSwitch.x))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-116.479) : _GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))))))))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), float(vec3(min(injectionSwitch.x, injectionSwitch.x), 0.0, 1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 1.0)), (vec2(vec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 1.0))) * mat2(1.0))))).x, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x, injectionSwitch.x)), _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), clamp(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch)))).x, min(injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, 0.0, 0.0, 0.0, cos(abs(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 1.0), _GLF_IDENTITY(mat3(1.0) * (vec3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 1.0)), min(mat3(1.0) * (vec3(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), min(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), float(mat3x2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0))))), 1.0, 1.0)), _GLF_IDENTITY(mat3(1.0) * (vec3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 1.0)), (mat3(1.0) * (vec3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-6819.4242))), 1.0))) * vec3(1.0, 1.0, 1.0))))))))), 1.0)), clamp(float(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, min(injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, 0.0, 0.0, 0.0, cos(abs(0.0)), 1.0)), float(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), (true ? min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, injectionSwitch.x) : _GLF_FUZZED(38.22)))), 1.0, 0.0, 0.0, 0.0, 0.0, cos(abs(0.0)), 1.0)), float(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), vec2(1.0, 1.0) * (max(injectionSwitch, injectionSwitch)))).x, min(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(274.494, 18.79)))).x, injectionSwitch.x)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), vec2(1.0, 1.0) * (max(injectionSwitch, injectionSwitch)))).x, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(vec2(274.494, 18.79))), (true ? _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(vec2(274.494, 18.79))), min((_GLF_IDENTITY(true, bool(bvec4(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) ? injectionSwitch : _GLF_FUZZED(vec2(274.494, 18.79))), (_GLF_IDENTITY(true, false || (true)) ? injectionSwitch : _GLF_FUZZED(vec2(274.494, 18.79))))) : _GLF_FUZZED(injectionSwitch)))).x, injectionSwitch.x)) : _GLF_FUZZED(161.383))), 1.0, 0.0, 0.0, 0.0, 0.0, cos(abs(0.0)), 1.0))))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x)), (false ? _GLF_FUZZED(1700.9854) : _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(_GLF_IDENTITY(8932.5476, clamp(_GLF_IDENTITY(8932.5476, log(1.0) + (8932.5476)), 8932.5476, 8932.5476))) : 1.0)), 1.0, 0.0, 1.0, 1.0))))))) > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(false, bool(bvec2(false, true))), true, true))), false)), (bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))) / 1.0))))))), false)), (bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), false)), (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))), bool(bvec4(false, false, true, true))), false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false)), (bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), false)), (bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, true, false))), true, true))), false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_IDENTITY(true, _GLF_IDENTITY((true) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! ((true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), false)), (bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_IDENTITY(true, _GLF_IDENTITY((true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! ((true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), false))) && true), (bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true)))), true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), false)), (bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_IDENTITY(true, (true) || false))))))), (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))))) && true)) || false), false, false))), (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_IDENTITY(true, (true) || false))))))), (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))))) && true)) || false), false, false))), (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_IDENTITY(true, (true) || false))))))), (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))))) && true)) || false), false, false))), (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || false)) || false))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) || false), false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), clamp(vec3(injectionSwitch, 1.0), vec3(injectionSwitch, 1.0), vec3(injectionSwitch, 1.0)))), _GLF_IDENTITY((false ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), clamp(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), mix(vec3((vec3(injectionSwitch, 1.0))[0], _GLF_FUZZED(8.8), _GLF_FUZZED(vec2(-975.883, -4.0).r)), vec3(_GLF_FUZZED(1740.2356), (vec3(injectionSwitch, 1.0))[1], (vec3(injectionSwitch, 1.0))[2]), bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))), vec3(injectionSwitch, 1.0), vec3(injectionSwitch, 1.0))))), ((false ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), clamp(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), mix(vec3((vec3(injectionSwitch, 1.0))[0], _GLF_FUZZED(8.8), _GLF_FUZZED(vec2(-975.883, -4.0).r)), vec3(_GLF_FUZZED(1740.2356), (vec3(injectionSwitch, 1.0))[1], (vec3(injectionSwitch, 1.0))[2]), bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))), vec3(injectionSwitch, 1.0), vec3(injectionSwitch, 1.0)))))) * mat2(1.0)))).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(true);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), ! (_GLF_IDENTITY(! (false), false || (! _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), bool(bvec4((false), false, false, false)))))))))))), false || (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))))), true, false)))))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, sqrt(1.0), 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))), mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x2(injectionSwitch, 1.0, sqrt(1.0), _GLF_IDENTITY(1.0, _GLF_IDENTITY(max(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(42.91))), 1.0)), 1.0), max(max(_GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(42.91))), 1.0), mix(float(_GLF_FUZZED(float(true))), float(_GLF_IDENTITY(clamp(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(42.91))), 1.0), mix(float(_GLF_FUZZED(-1462.2600)), float(clamp(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(42.91))), 1.0)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), 1.0), max(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(1.0, _GLF_IDENTITY((true ? 1.0 : _GLF_FUZZED(42.91)), max((true ? 1.0 : _GLF_FUZZED(42.91)), (true ? 1.0 : _GLF_FUZZED(42.91))))), 1.0)), _GLF_IDENTITY(1.0, (1.0) - 0.0))))), 0.0))))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
