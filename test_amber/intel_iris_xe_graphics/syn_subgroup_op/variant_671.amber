#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 0) uniform buf0 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(-9.5)), bool(false))), min((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_FUZZED(8.5)), vec2(_GLF_FUZZED(_GLF_IDENTITY(46.78, max(46.78, 46.78))), _GLF_IDENTITY(((injectionSwitch)), (((injectionSwitch))) / vec2(1.0, 1.0))[1]), bvec2(false, true)))[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(3090.5671), _GLF_FUZZED(-908.777)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, ! (! (false))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(bool(bool(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (false))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bool(bool(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (false))))))), false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, abs(vec2(1.0, 1.0)) * (injectionSwitch)).y)))), bvec3(bvec4(bvec3(bvec3(bool(bool(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (false))))))), false, _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)), ! (! (! ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)))))))))), false)))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(bvec3(bool(bool(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! (! (false))))), true && ((! (false))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(bool(bool(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (false))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(bool(bool(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && (_GLF_IDENTITY((! (false)), bool(_GLF_IDENTITY(bool((! (false))), ! (! (bool((! (false))))))))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(bool(bool(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (false))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(bvec3(bool(bool(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && (_GLF_IDENTITY((! (false)), bool(_GLF_IDENTITY(bool((! (false))), ! (! (bool((! (false))))))))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(bool(bool(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (false))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), ! (! (bool(bvec4(bool(_GLF_IDENTITY(bvec3(bool(bool(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && (_GLF_IDENTITY((! (false)), bool(_GLF_IDENTITY(bool((! (false))), ! (! (bool((! (false))))))))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(bool(bool(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (false))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))), true, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) || false))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bool(_GLF_IDENTITY(bvec3(bool(bool(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (false))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(bool(bool(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (false))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true, true)), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bool(_GLF_IDENTITY(bvec3(bool(bool(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (false))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(bool(bool(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (false))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true, true)), true))))))))), _GLF_IDENTITY(false || (bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(bvec3(bool(bool(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (false))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(bool(bool(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (false))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true, true), bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bool(_GLF_IDENTITY(bvec3(bool(bool(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (false))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(bool(bool(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (false))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true, true)), bvec3(bvec4(bvec3(bvec3(bool(_GLF_IDENTITY(bvec3(bool(bool(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (false))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(bool(bool(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (false))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true, true)), true))), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bool(_GLF_IDENTITY(bvec3(bool(bool(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (false))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(bool(bool(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (false))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true, true)), bvec3(bvec4(bvec3(bvec3(bool(_GLF_IDENTITY(bvec3(bool(bool(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (false))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(bool(bool(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (false))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true, true)), true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bool(_GLF_IDENTITY(bvec3(bool(bool(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (false))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(bool(bool(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (false))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true, true)), bvec3(bvec4(bvec3(bvec3(bool(_GLF_IDENTITY(bvec3(bool(bool(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (false))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(bool(bool(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (false))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true, true)), true))))))))))))), _GLF_IDENTITY(bool(bvec2(false || (bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(bvec3(bool(bool(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (false))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(bool(bool(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (false))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true, true), bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bool(_GLF_IDENTITY(bvec3(bool(bool(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (false))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(bool(bool(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (false))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true, true)), bvec3(bvec4(bvec3(bvec3(bool(_GLF_IDENTITY(bvec3(bool(bool(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (false))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(bool(bool(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (false))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true, true)), true))), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bool(_GLF_IDENTITY(bvec3(bool(bool(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (false))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(bool(bool(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (false))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true, true)), bvec3(bvec4(bvec3(bvec3(bool(_GLF_IDENTITY(bvec3(bool(bool(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (false))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(bool(bool(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (false))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true, true)), true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bool(_GLF_IDENTITY(bvec3(bool(bool(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (false))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(bool(bool(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (false))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true, true)), bvec3(bvec4(bvec3(bvec3(bool(_GLF_IDENTITY(bvec3(bool(bool(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (false))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(bool(bool(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (false))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true, true)), true))))))))))))), false)), (bool(bvec2(false || (bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(bvec3(bool(bool(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (false))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(bool(bool(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (false))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true, true), bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bool(_GLF_IDENTITY(bvec3(bool(bool(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (false))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(bool(bool(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (false))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true, true)), bvec3(bvec4(bvec3(bvec3(bool(_GLF_IDENTITY(bvec3(bool(bool(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (false))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(bool(bool(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (false))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true, true)), true))), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bool(_GLF_IDENTITY(bvec3(bool(bool(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (false))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(bool(bool(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (false))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true, true)), bvec3(bvec4(bvec3(bvec3(bool(_GLF_IDENTITY(bvec3(bool(bool(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (false))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(bool(bool(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (false))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true, true)), true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bool(_GLF_IDENTITY(bvec3(bool(bool(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (false))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(bool(bool(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (false))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true, true)), bvec3(bvec4(bvec3(bvec3(bool(_GLF_IDENTITY(bvec3(bool(bool(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (false))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(bool(bool(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (false))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true, true)), true))))))))))))), false))) || false)))))), (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false), true)), (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false), true))) && true))))
    barrier();
   return;
  }
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec3(gl_WorkGroupSize.x, 1u, 0u))))), max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, 1u * (gl_WorkGroupSize.x))) ^ 0u)));
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, false || (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec2(_GLF_IDENTITY(false, false || (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (_GLF_IDENTITY(! (false), (! (false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) | (workgroup_base + subgroup_id * subgroup_size)) + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)) + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec4(subgroup_local_id + 1, 0u, 1u, 1u), min(uvec4(subgroup_local_id + 1, 0u, 1u, 1u), _GLF_IDENTITY(uvec4(subgroup_local_id + 1, 0u, 1u, 1u), max(uvec4(subgroup_local_id + 1, 0u, 1u, 1u), uvec4(subgroup_local_id + 1, 0u, 1u, 1u)))))))) % subgroup_size), (workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size)) | 0u);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 buf[virtual_gid] = _GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))) ? _GLF_FUZZED(-81466) : 1, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))) ? _GLF_FUZZED(-81466) : 1) | (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && true)))) ? _GLF_FUZZED(-81466) : 1))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED((uvec2(63443u, 138436u) , -15446)) : 1)) < subgroup_size)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   buf[next_virtual_gid] = 2;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
   subgroupAll(false);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   buf[next_virtual_gid] = 2;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(-10358)), min(_GLF_FUZZED(intBitsToFloat(-10358)), _GLF_IDENTITY(_GLF_FUZZED(intBitsToFloat(-10358)), (true ? _GLF_FUZZED(intBitsToFloat(-10358)) : _GLF_FUZZED(52.38))))))))) ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0)), clamp(vec2(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0)), vec2(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0)), vec2(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0))))) : _GLF_FUZZED(min(injectionSwitch, vec2(-9.5, -6.3))))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0)))), (true ? clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0)))) : _GLF_FUZZED(vec2(-7096.3920, 60.67))))), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))) ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0)), clamp(vec2(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0)), vec2(mat2x3(injectionSwitch, 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(3.0) : 0.0)), 0.0, 1.0)), vec2(mat2x3(injectionSwitch, _GLF_IDENTITY(1.0, (1.0) + sin(0.0)), 0.0, 0.0, 1.0))))) : _GLF_FUZZED(min(injectionSwitch, vec2(-9.5, -6.3))))), (_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-3.3)), clamp(float(_GLF_FUZZED(-3.3)), float(_GLF_FUZZED(-3.3)), float(_GLF_FUZZED(-3.3)))), float(injectionSwitch.x), bool(true))), 0.0, 1.0, 0.0, sin(0.0), 1.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0), (mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), mix(float(_GLF_FUZZED(-3.3)), float(injectionSwitch.x), bool(true))), 0.0, 1.0, 0.0, sin(0.0), 1.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0)) - mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0)), vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0)), max(vec2(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0)), vec2(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0)))), 1.0), (true ? vec3(_GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0)), max(vec2(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0)), vec2(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0)))), 1.0) : _GLF_FUZZED(vec3(-304.324, -3.0, -97.79)))))), clamp(vec2(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0)), vec2(mat2x3(injectionSwitch, 1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) - 0.0), clamp(0.0, 0.0, 0.0)))), 0.0, 1.0)), vec2(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0))))) : _GLF_FUZZED(_GLF_IDENTITY(min(injectionSwitch, vec2(-9.5, -6.3)), mat2(1.0) * (min(injectionSwitch, vec2(-9.5, -6.3)))))))) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0)), clamp(vec2(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0)), vec2(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(3.4) : 0.0)), 1.0)), _GLF_IDENTITY(vec2(mat3x2(vec2(mat2x3(injectionSwitch, 1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) ? _GLF_FUZZED(3.4) : _GLF_IDENTITY(0.0, (0.0) + sin(0.0)))), 1.0)), 1.0, length(sqrt(vec3(0.0, 0.0, 0.0))), 1.0, 1.0)), (vec2(mat3x2(vec2(mat2x3(injectionSwitch, 1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)) ? _GLF_FUZZED(3.4) : 0.0)), 1.0)), 1.0, length(sqrt(vec3(0.0, 0.0, 0.0))), 1.0, 1.0))) * mat2(1.0)))))) : _GLF_FUZZED(min(injectionSwitch, vec2(-9.5, -6.3))))))).y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(2081.7187), _GLF_FUZZED(1.3)), bvec2(false, false))))), abs(0.0), abs(0.0), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0))).x < _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(intBitsToFloat(-10358)))))) ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0)), clamp(vec2(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0)), vec2(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0)), vec2(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0))))) : _GLF_FUZZED(_GLF_IDENTITY(min(injectionSwitch, vec2(-9.5, -6.3)), min(min(injectionSwitch, vec2(-9.5, -6.3)), min(injectionSwitch, vec2(-9.5, -6.3))))))), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0))))), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))) ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0)), clamp(vec2(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0)), vec2(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0)), vec2(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0))))) : _GLF_FUZZED(min(injectionSwitch, vec2(-9.5, -6.3))))), (_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-3.3)), float(injectionSwitch.x), bool(true))), 0.0, 1.0, 0.0, sin(0.0), 1.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0), (mat3x4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-3.3)), float(injectionSwitch.x), bool(true))), 0.0, 1.0, 0.0, sin(0.0), 1.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0)) - mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0)), clamp(vec2(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0)), vec2(mat2x3(injectionSwitch, 1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) - 0.0), clamp(0.0, 0.0, 0.0)))), 0.0, 1.0)), vec2(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0))))) : _GLF_FUZZED(_GLF_IDENTITY(min(injectionSwitch, vec2(-9.5, -6.3)), mat2(1.0) * (min(injectionSwitch, vec2(-9.5, -6.3)))))))) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0)), clamp(vec2(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0)), vec2(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(3.4) : 0.0)), 1.0)), _GLF_IDENTITY(vec2(mat3x2(vec2(mat2x3(injectionSwitch, 1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(3.4) : 0.0)), 1.0)), 1.0, length(sqrt(vec3(0.0, 0.0, 0.0))), 1.0, 1.0)), (vec2(mat3x2(vec2(mat2x3(injectionSwitch, 1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(3.4) : 0.0)), 1.0)), 1.0, length(sqrt(vec3(0.0, 0.0, 0.0))), 1.0, 1.0))) * mat2(1.0)))))) : _GLF_FUZZED(min(injectionSwitch, vec2(-9.5, -6.3)))))), vec2(mat4x2(_GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0))))), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))) ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0)), clamp(vec2(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0)), vec2(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0)), vec2(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0))))) : _GLF_FUZZED(min(injectionSwitch, vec2(-9.5, -6.3))))), (_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-3.3)), float(injectionSwitch.x), bool(true))), 0.0, 1.0, 0.0, sin(0.0), 1.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0), (mat3x4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-3.3)), float(injectionSwitch.x), bool(true))), 0.0, 1.0, 0.0, sin(0.0), 1.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0)) - mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0)), clamp(vec2(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0)), vec2(mat2x3(injectionSwitch, 1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) - 0.0), clamp(0.0, 0.0, 0.0)))), 0.0, 1.0)), vec2(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0))))) : _GLF_FUZZED(_GLF_IDENTITY(min(injectionSwitch, vec2(-9.5, -6.3)), mat2(1.0) * (min(injectionSwitch, vec2(-9.5, -6.3)))))))) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0)), clamp(vec2(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0)), vec2(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(3.4) : 0.0)), 1.0)), _GLF_IDENTITY(vec2(mat3x2(vec2(mat2x3(injectionSwitch, 1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(3.4) : 0.0)), 1.0)), 1.0, length(sqrt(vec3(0.0, 0.0, 0.0))), 1.0, 1.0)), (vec2(mat3x2(vec2(mat2x3(injectionSwitch, 1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(3.4) : 0.0)), 1.0)), 1.0, length(sqrt(vec3(0.0, 0.0, 0.0))), 1.0, 1.0))) * mat2(1.0)))))) : _GLF_FUZZED(min(injectionSwitch, vec2(-9.5, -6.3)))))), (false ? _GLF_FUZZED(injectionSwitch) : max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0))))), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))) ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0)), clamp(vec2(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0)), vec2(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0)), vec2(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0))))) : _GLF_FUZZED(min(injectionSwitch, vec2(-9.5, -6.3))))), (_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-3.3)), float(injectionSwitch.x), bool(true))), 0.0, 1.0, 0.0, sin(0.0), 1.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0), (mat3x4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-3.3)), float(injectionSwitch.x), bool(true))), 0.0, 1.0, 0.0, sin(0.0), 1.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0)) - mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0)), clamp(vec2(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0)), vec2(mat2x3(injectionSwitch, 1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) - 0.0), clamp(0.0, 0.0, 0.0)))), 0.0, 1.0)), vec2(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0))))) : _GLF_FUZZED(_GLF_IDENTITY(min(injectionSwitch, vec2(-9.5, -6.3)), mat2(1.0) * (min(injectionSwitch, vec2(-9.5, -6.3)))))))) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0)), clamp(vec2(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0)), vec2(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(3.4) : 0.0)), 1.0)), _GLF_IDENTITY(vec2(mat3x2(vec2(mat2x3(injectionSwitch, 1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(3.4) : 0.0)), 1.0)), 1.0, length(sqrt(vec3(0.0, 0.0, 0.0))), 1.0, 1.0)), (vec2(mat3x2(vec2(mat2x3(injectionSwitch, 1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(3.4) : 0.0)), 1.0)), 1.0, length(sqrt(vec3(0.0, 0.0, 0.0))), 1.0, 1.0))) * mat2(1.0)))))) : _GLF_FUZZED(min(injectionSwitch, vec2(-9.5, -6.3)))))))), 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), round(length(normalize(1.0))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 0.0)))).y, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(intBitsToFloat(-10358)))))) ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0)), clamp(vec2(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0)), vec2(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(mat2(1.0) * (vec2(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0))), clamp(mat2(1.0) * (vec2(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0))), mat2(1.0) * (vec2(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0))), mat2(1.0) * (vec2(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0))))))))) : _GLF_FUZZED(min(injectionSwitch, vec2(-9.5, -6.3))), mix(vec2((_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(intBitsToFloat(-10358)))))) ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0)), clamp(vec2(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0)), vec2(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(mat2(1.0) * (vec2(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0))), clamp(mat2(1.0) * (vec2(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0))), mat2(1.0) * (vec2(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0))), mat2(1.0) * (vec2(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0))))))))) : _GLF_FUZZED(min(injectionSwitch, vec2(-9.5, -6.3))))[0], (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(intBitsToFloat(-10358)))))) ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0)), clamp(vec2(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0)), vec2(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(mat2(1.0) * (vec2(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0))), clamp(mat2(1.0) * (vec2(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0))), mat2(1.0) * (vec2(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0))), mat2(1.0) * (vec2(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0))))))))) : _GLF_FUZZED(min(injectionSwitch, vec2(-9.5, -6.3))))[1]), vec2(_GLF_FUZZED(-5.2), _GLF_FUZZED((55.90 + 570.898))), bvec2(false, false))))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0))))), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true), true && (injectionSwitch.x < injectionSwitch.y))))))) ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0)), clamp(vec2(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0)), vec2(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0)), vec2(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0))))) : _GLF_FUZZED(min(injectionSwitch, vec2(-9.5, -6.3))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-3.3)), float(injectionSwitch.x), bool(true))), 0.0, 1.0, 0.0, sin(0.0), 1.0, 1.0, 1.0, 0.0, _GLF_ONE(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(977.074)), float(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-9.0)), float(1.0), bool(true)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), injectionSwitch.y), 1.0, 1.0), (mat3x4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-3.3)), float(injectionSwitch.x), bool(true))), 0.0, 1.0, 0.0, sin(0.0), 1.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0)) - mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), tan(0.0), 0.0))))), 1.0, 0.0, 0.0, 1.0)), clamp(vec2(mat2x3(injectionSwitch, 1.0, 0.0, _GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, 0.0))), 1.0)), vec2(mat2x3(injectionSwitch, 1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) - 0.0), clamp(0.0, 0.0, 0.0)))), 0.0, 1.0)), vec2(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0))))) : _GLF_FUZZED(_GLF_IDENTITY(min(injectionSwitch, vec2(-9.5, -6.3)), mat2(1.0) * (min(injectionSwitch, vec2(-9.5, -6.3)))))))) / vec2(1.0, 1.0), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-3.3)), float(injectionSwitch.x), bool(true))), 0.0, 1.0, 0.0, sin(0.0), 1.0, 1.0, 1.0, 0.0, _GLF_ONE(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(977.074)), float(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-9.0)), float(1.0), bool(true)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), injectionSwitch.y), 1.0, 1.0), (mat3x4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-3.3)), float(injectionSwitch.x), bool(true))), 0.0, 1.0, 0.0, sin(0.0), 1.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0)) - mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), tan(0.0), 0.0))))), 1.0, 0.0, 0.0, 1.0)), clamp(vec2(mat2x3(injectionSwitch, 1.0, 0.0, _GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, 0.0))), 1.0)), vec2(mat2x3(injectionSwitch, 1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) - 0.0), clamp(0.0, 0.0, 0.0)))), 0.0, 1.0)), vec2(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0))))) : _GLF_FUZZED(_GLF_IDENTITY(min(injectionSwitch, vec2(-9.5, -6.3)), mat2(1.0) * (min(injectionSwitch, vec2(-9.5, -6.3))))))), (_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-3.3, (-3.3) - 0.0))), float(injectionSwitch.x), bool(true))), 0.0, 1.0, 0.0, sin(0.0), 1.0, 1.0, 1.0, 0.0, _GLF_ONE(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(977.074)), float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-9.0)), float(1.0), bool(true))), _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-9.0)), float(1.0), bool(true))), 0.0, 1.0)), (false ? _GLF_FUZZED(852.945) : float(vec3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-9.0)), float(1.0), bool(true))), 0.0, 1.0)))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), injectionSwitch.y), 1.0, 1.0), (mat3x4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-3.3)), float(injectionSwitch.x), bool(true))), 0.0, 1.0, 0.0, sin(0.0), 1.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0)) - mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), float(mat3x4(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, length(abs(vec2(0.0, 0.0))), sin(_GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0)))))))), tan(0.0), 0.0))))), 1.0, 0.0, 0.0, 1.0)), clamp(vec2(mat2x3(injectionSwitch, 1.0, 0.0, _GLF_IDENTITY(0.0, float(vec3(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0))), 1.0)), vec2(mat2x3(injectionSwitch, 1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0), float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY((0.0), max((0.0), (0.0))), 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), (mat3x2(_GLF_IDENTITY((0.0), max((0.0), (0.0))), 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))) * mat3(1.0)))) - 0.0), clamp(0.0, 0.0, 0.0)))), 0.0, 1.0)), vec2(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0))))) : _GLF_FUZZED(_GLF_IDENTITY(min(injectionSwitch, vec2(-9.5, -6.3)), _GLF_IDENTITY(mat2(1.0) * (min(injectionSwitch, vec2(-9.5, -6.3))), max(mat2(1.0) * (min(injectionSwitch, vec2(-9.5, -6.3))), mat2(1.0) * (min(injectionSwitch, vec2(-9.5, -6.3)))))))))) - sin(vec2(0.0, 0.0)))) / vec2(1.0, 1.0)) - vec2(0.0, 0.0))), _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(2416.4558)), bool(false))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, 1.0, 1.0, 1.0))))))) ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(3.2)), bool(false))), 0.0)), 0.0, 1.0)), clamp(vec2(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0)), vec2(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x2(1.0, _GLF_ONE(1.0, injectionSwitch.y), sin(0.0), 1.0, 1.0, 1.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), mat2(1.0) * (mat4x2(1.0, _GLF_ONE(1.0, injectionSwitch.y), sin(0.0), 1.0, 1.0, 1.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))))))))), _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(3.4), min(_GLF_FUZZED(3.4), _GLF_IDENTITY(_GLF_FUZZED(3.4), float(mat4(_GLF_FUZZED(3.4), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), tan(0.0), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0))))), max(_GLF_FUZZED(3.4), _GLF_IDENTITY(_GLF_FUZZED(3.4), 0.0 + (_GLF_IDENTITY(_GLF_FUZZED(3.4), (_GLF_FUZZED(3.4)) / 1.0))))) : 0.0), mix(float(_GLF_FUZZED(40.96)), float((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(3.4), min(_GLF_FUZZED(3.4), _GLF_IDENTITY(_GLF_FUZZED(3.4), float(mat4(_GLF_FUZZED(3.4), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), tan(0.0), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0))))), max(_GLF_FUZZED(3.4), _GLF_IDENTITY(_GLF_FUZZED(3.4), 0.0 + (_GLF_IDENTITY(_GLF_FUZZED(3.4), (_GLF_FUZZED(3.4)) / 1.0))))) : 0.0)), bool(true)))), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(1.0, (1.0) / 1.0), determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 0.0, 0.0, 1.0)), abs(1.0), 1.0, sqrt(1.0), 1.0, 1.0, 0.0, 1.0), _GLF_IDENTITY(mat3(mat4x3(mat3(_GLF_IDENTITY(1.0, (1.0) / 1.0), determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 0.0, 0.0, 1.0)), abs(1.0), 1.0, sqrt(1.0), 1.0, 1.0, 0.0, 1.0))), transpose(transpose(_GLF_IDENTITY(mat3(mat4x3(mat3(_GLF_IDENTITY(1.0, (1.0) / 1.0), determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 0.0, 0.0, 1.0)), abs(1.0), 1.0, sqrt(1.0), 1.0, 1.0, 0.0, 1.0))), mat3(mat3(mat3(mat4x3(mat3(_GLF_IDENTITY(1.0, (1.0) / 1.0), determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 0.0, 0.0, 1.0)), abs(1.0), 1.0, sqrt(1.0), 1.0, 1.0, 0.0, 1.0)))))))))))))), _GLF_IDENTITY(vec2(mat3x2(vec2(mat2x3(injectionSwitch, 1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(3.4, (3.4) - 0.0)) : 0.0)), 1.0)), 1.0, length(sqrt(vec3(0.0, 0.0, 0.0))), 1.0, 1.0)), (vec2(mat3x2(vec2(mat2x3(injectionSwitch, 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec4(0.0, 0.0, 0.0, 1.0)), max(float(vec4(0.0, 0.0, 0.0, 1.0)), float(vec4(0.0, 0.0, 0.0, 1.0))))), _GLF_IDENTITY(0.0, (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(3.4) : 0.0)), 1.0)), 1.0, length(sqrt(vec3(0.0, 0.0, 0.0))), 1.0, 1.0))) * mat2(1.0)))))) : _GLF_FUZZED(min(injectionSwitch, vec2(-9.5, -6.3))))))).y) && true)))) && true)))
    return;
   subgroupAll(true);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
