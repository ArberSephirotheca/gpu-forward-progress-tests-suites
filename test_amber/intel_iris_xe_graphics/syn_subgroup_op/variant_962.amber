#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(1382.2628)), bool(false)))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (false)))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(9.1)), bool(false))), injectionSwitch[1])).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))) || false), false))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, uint(uint(_GLF_IDENTITY(workgroup_size, 0u | (workgroup_size)))))) - (0u | 0u)), (false ? _GLF_FUZZED(packUnorm2x16(injectionSwitch)) : _GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, uint(uint(_GLF_IDENTITY(workgroup_size, 0u | (_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)))))))) - (0u | 0u)))) * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, ! (! (false)))), (true && (false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || _GLF_IDENTITY(false, (false) || false))))))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6.0), _GLF_FUZZED(8771.4922)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / 1u), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)))) + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (true ? mat2(1.0) : _GLF_FUZZED(mat2(-83.98, -2781.4221, 6.4, -3.7))))).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) + (0u & 116540u)) * subgroup_size, 0u + _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) + (_GLF_IDENTITY(0u & 116540u, (true ? 0u & 116540u : _GLF_FUZZED(subgroup_id))))) * subgroup_size), ((_GLF_IDENTITY(subgroup_id, (subgroup_id) + (_GLF_IDENTITY(0u & 116540u, (true ? _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(virtual_gid))) & 116540u : _GLF_FUZZED(subgroup_id))))) * subgroup_size)) | ((_GLF_IDENTITY(subgroup_id, (subgroup_id) + (_GLF_IDENTITY(0u & 116540u, (true ? 0u & 116540u : _GLF_FUZZED(subgroup_id))))) * subgroup_size)))), ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), max(_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)), (_GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)), ((subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u))) | 0u)) * 1u), _GLF_IDENTITY((~ (subgroup_id * subgroup_size)), 0u ^ ((~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) * 1u))))) | 0u), ~ (subgroup_id * subgroup_size)))))))) + ((_GLF_IDENTITY(subgroup_local_id + 1, uint(uint(subgroup_local_id + 1)))) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false))))), false || (bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false)))))))))), true && (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))), bool(bool(_GLF_IDENTITY(bool(false), bool(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true))))))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false))))), true && (bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false))))))))), false || (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false))))), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), bool(bool(bool(false))))))))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), clamp(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3x2(injectionSwitch.x, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, cos(determinant(mat2(0.0, 1.0, 0.0, 0.0))), abs(0.0)), transpose(transpose(_GLF_IDENTITY(mat3x2(injectionSwitch.x, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, cos(determinant(mat2(0.0, 1.0, 0.0, 0.0))), abs(0.0)), (mat3x2(injectionSwitch.x, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, cos(determinant(mat2(0.0, 1.0, 0.0, 0.0))), abs(0.0))) + mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))), injectionSwitch.x)), injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), (injectionSwitch.x) * 1.0)))) - 0.0) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).y)), false, false)), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false))))), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) && true), bool(bool(bool(false))))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false))))), true && (bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false)))))))))))), false || (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false))))), true && (bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), bool(bool(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false))))), true && (bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false))))))))), false || (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false))))), true && (bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true))) && true)), false)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 buf[virtual_gid] = 1;
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) : _GLF_FUZZED(-3.8)), (_GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, abs(0.0), exp(0.0), 1.0, 0.0, 0.0, 0.0, 1.0)))) - 0.0) : _GLF_FUZZED(-3.8)), clamp((true ? _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) : _GLF_FUZZED(-3.8)), (true ? _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) : _GLF_FUZZED(-3.8)), _GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) : _GLF_FUZZED(-3.8)), ((true ? _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) : _GLF_FUZZED(-3.8))) - 0.0)))) - 0.0)) < injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(0.7)), bool(false))), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), clamp(float(mat3(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(1455.7102)), float(0.0), bool(true))), 0.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), float(mat3(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), float(mat3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)))))))) > injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-518.847))))), true && (bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(-4.2), min(_GLF_FUZZED(-4.2), _GLF_FUZZED(-4.2))), _GLF_FUZZED(2.1)), bvec2(false, false))).y), ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(8.4)), bool(false)))))), float(_GLF_FUZZED(vec3(-7.8, -9.6, -3813.4419).t)), bool(false))) > injectionSwitch.y)) || false)))), ! (! ((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) - 0.0)), vec2(_GLF_FUZZED(-4.2), _GLF_FUZZED(2.1)), bvec2(false, false))).y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) || false, bool(bool(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), false || (((injectionSwitch.x > injectionSwitch.y)))) || false)))), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) - _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)))), vec2(_GLF_FUZZED(-4.2), _GLF_FUZZED(2.1)), bvec2(false, false))).y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) || false, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), false || (((injectionSwitch.x > injectionSwitch.y)))) || false, (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), false || (((injectionSwitch.x > injectionSwitch.y)))) || false) || false)))))))))))))))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (true))))))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(6.9)), float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), bool(true))))) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), false, false, _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, ! (! (false))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bool(false))), false, false, false)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bool(false))), false, false, false)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bool(false))), false, false, false))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-0.7), _GLF_FUZZED(-9.3)), bvec2(false, false))), injectionSwitch)).y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(! _GLF_IDENTITY((! (bool(false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((! (bool(false))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (bool(false))), ! (! (! (! (bool(false))))))), (! (_GLF_IDENTITY(! _GLF_IDENTITY((! (bool(false))), bool(_GLF_IDENTITY(bvec3((! (bool(false))), false, true), bvec3(bvec4(bvec3((! (bool(false))), false, true), false))))), _GLF_IDENTITY(! (! (! (! (bool(false))))), false || (! (! (! (! (bool(false)))))))))) && true), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (bool(false))), ! (! (! (! (bool(false))))))), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), bool(bvec4(bool(bvec4(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, false, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))))), bool(_GLF_IDENTITY(bool(! (bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), bool(bvec4(bool(bvec4(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, false, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))))))), bool(_GLF_IDENTITY(bool(bool(! (bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), bool(bvec4(bool(bvec4(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, false, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))))))), (bool(bool(! (bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), bool(bvec4(bool(bvec4(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, false, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))))))))) && true)))))), ! (! (! _GLF_IDENTITY(_GLF_IDENTITY((! (bool(false))), ((! (bool(false)))) || false), true && (_GLF_IDENTITY((! (bool(false))), (_GLF_IDENTITY((! (bool(false))), ((! (bool(false)))) || false)) || false)))))))) && true))))))), (_GLF_IDENTITY(bool(false), ! (! (bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))))))))))) || false))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-7565.1002) : injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-7565.1002) : injectionSwitch.x)) > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-7565.1002) : injectionSwitch.x)) > injectionSwitch.y, false, false, false)))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-7565.1002) : injectionSwitch.x)) > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-7565.1002) : injectionSwitch.x)) > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-7565.1002) : injectionSwitch.x)) > injectionSwitch.y, false, false, false)))))), _GLF_IDENTITY(true, (true) && true) && (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(false ? _GLF_FUZZED(-7565.1002) : injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? false ? _GLF_FUZZED(-7565.1002) : injectionSwitch.x : _GLF_FUZZED(-26.45))))) > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-7565.1002) : injectionSwitch.x)) > injectionSwitch.y, false, false, false))))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   buf[next_virtual_gid] = 2;
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(determinant(mat3(0.0, 0.0, tan(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(7589.2843)))))), (true ? _GLF_IDENTITY(determinant(mat3(0.0, 0.0, tan(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(7589.2843)))))), (determinant(mat3(0.0, 0.0, tan(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(7589.2843))))))) * 1.0) : _GLF_FUZZED(distance(vec3(-8020.0744, 2.9, 0.9), vec3(-6.1, -218.407, -670.002)))))) > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, determinant(mat3(0.0, 0.0, tan(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)) + (injectionSwitch.x)), (true ? _GLF_IDENTITY(injectionSwitch.x, determinant(mat3(0.0, 0.0, tan(0.0), 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0)) + (injectionSwitch.x)) : _GLF_FUZZED(-3470.4134))) > injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(6907.9248)), float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - tan(0.0))), bool(true)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   buf[next_virtual_gid] = 2;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) || false)))), ! (! (false)))) || false), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), mix(float(injectionSwitch.x), float(_GLF_FUZZED(float(-20575))), bool(false))) > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-1638.2268)), vec2(_GLF_FUZZED(15.69), (injectionSwitch)[1]), bvec2(false, true))).y), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(float(-20575), max(_GLF_IDENTITY(float(-20575), max(float(-20575), _GLF_IDENTITY(float(-20575), float(mat2x3(float(-20575), 1.0, 1.0, 1.0, 1.0, 0.0))))), float(-20575))))), bool(false))) > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(-1638.2268), float(float(_GLF_FUZZED(-1638.2268))))), vec2(_GLF_FUZZED(15.69), (injectionSwitch)[1]), bvec2(false, true))).y), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(float(-20575))), bool(false))) > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-1638.2268)), _GLF_IDENTITY(vec2(_GLF_FUZZED(15.69), (injectionSwitch)[1]), mix(vec2(_GLF_FUZZED(-591.483), _GLF_FUZZED(-3389.4746)), vec2(_GLF_IDENTITY((vec2(_GLF_FUZZED(15.69), (injectionSwitch)[1]))[0], min((vec2(_GLF_FUZZED(15.69), (injectionSwitch)[1]))[0], (vec2(_GLF_FUZZED(15.69), (injectionSwitch)[1]))[0])), (vec2(_GLF_FUZZED(15.69), (injectionSwitch)[1]))[1]), bvec2(true, true))), bvec2(false, true))).y), true, false, false)), false || (bool(bvec4((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(float(-20575))), bool(false))) > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-1638.2268)), vec2(_GLF_FUZZED(15.69), (injectionSwitch)[1]), bvec2(false, true))).y), true, false, false)))))))), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, ! (! ((true) || false)))), true, false))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, true)), ! (! (bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, true)))))))))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))) > injectionSwitch.y)) || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true))))))))
              barrier();
             barrier();
            }
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, false)), (bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, false))) && true)), ((injectionSwitch.x > injectionSwitch.y)) && true)) || false), true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), ((injectionSwitch.x < injectionSwitch.y)) && true)), false))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(68.46)), bool(false)))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, true))), true, false)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec2(bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true)), _GLF_IDENTITY(true, _GLF_IDENTITY((true), ! (_GLF_IDENTITY(! ((true)), (_GLF_IDENTITY(! ((true)), (! ((true))) || false)) || false))) || false) && (bool(bvec2(bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true))))))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), ! (! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! _GLF_IDENTITY((_GLF_IDENTITY(! ((false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(! ((false)), false, true), bvec3(bvec3(bvec3(! (_GLF_IDENTITY((false), ! (! ((false))))), false, true))))), ! (! (bool(bvec3(! _GLF_IDENTITY(((false)), (((false))) || false), false, true))))))), ((_GLF_IDENTITY(! ((false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(! ((false)), false, true), bvec3(bvec3(bvec3(! (_GLF_IDENTITY((false), ! (! ((false))))), false, true))))), ! (! (bool(bvec3(! _GLF_IDENTITY(((false)), (((false))) || false), false, true)))))))) && true)), ! (! (_GLF_IDENTITY(! (false), (! (false)) || false))))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! ((false)))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! ((false)))))), ! (! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! ((false))))))))), true, true, false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, false, true, true))), _GLF_IDENTITY((true) && true, ! (! ((_GLF_IDENTITY(true, (true) || false)) && true)))))), false))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bool(_GLF_IDENTITY(false, bool(bool(false))))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, true)), bool(bool(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, true, true))))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(_GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false || (true), (false || (true)) && true), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false) || (true), false), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, (false) || false) || (true), false), true)), bvec2(bvec4(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, (false) || false) || (true), false), true)), true, true)))))))))));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(bool(false))) || (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && (_GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false)))))))), bool(bvec3((! (false)), true, false)))))))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), mix(float(injectionSwitch.y), float(_GLF_FUZZED(-3.9)), bool(false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, false), bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, false), _GLF_IDENTITY(false, ! (! (false))), false)))), _GLF_IDENTITY(bool(bool(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false))), (injectionSwitch.x > injectionSwitch.y) || false), false)))), true && _GLF_IDENTITY((bool(bool(bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((bool(bool(bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) - vec2(0.0, 0.0), ((injectionSwitch) - vec2(0.0, 0.0)) * mat2(1.0))), injectionSwitch)))).y)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4(injectionSwitch, 0.0, 1.0, log(exp(0.0)), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, round(length(normalize(1.0))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0), (true ? mat4(injectionSwitch, 0.0, 1.0, log(exp(0.0)), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, round(length(normalize(1.0))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0) : _GLF_FUZZED(mat4(-253.916, -557.041, -7.9, 0.9, 5.8, 8.3, 5.8, -4.9, 3.4, -4507.2633, 764.353, -0.0, 6.6, -896.162, -17.20, 4.4))))), vec2(0.0, 0.0) + (vec2(_GLF_IDENTITY(mat4(injectionSwitch, 0.0, 1.0, log(exp(0.0)), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, round(length(normalize(1.0))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0), (true ? mat4(injectionSwitch, 0.0, 1.0, log(exp(0.0)), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, round(length(normalize(1.0))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0) : _GLF_FUZZED(mat4(-253.916, -557.041, -7.9, 0.9, 5.8, 8.3, 5.8, -4.9, 3.4, -4507.2633, 764.353, -0.0, 6.6, -896.162, -17.20, 4.4)))))))), max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 1.0, 1.0))))))).y)), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4(injectionSwitch, 0.0, 1.0, log(exp(0.0)), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, round(length(normalize(1.0))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0), (true ? mat4(injectionSwitch, 0.0, 1.0, log(exp(0.0)), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, round(length(normalize(1.0))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0) : _GLF_FUZZED(mat4(-253.916, -557.041, -7.9, 0.9, 5.8, 8.3, 5.8, -4.9, 3.4, -4507.2633, 764.353, -0.0, 6.6, -896.162, -17.20, 4.4))))), vec2(0.0, 0.0) + (vec2(_GLF_IDENTITY(mat4(injectionSwitch, 0.0, 1.0, log(exp(0.0)), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, round(length(normalize(1.0))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0), _GLF_IDENTITY((true ? mat4(injectionSwitch, 0.0, 1.0, log(exp(0.0)), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, round(length(normalize(1.0))), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(_GLF_IDENTITY(mat2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0), (mat2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0)) - mat2(0.0, 0.0, 0.0, 0.0)))), 0.0, 1.0, 1.0) : _GLF_FUZZED(mat4(-253.916, -557.041, -7.9, 0.9, 5.8, 8.3, 5.8, -4.9, 3.4, -4507.2633, 764.353, -0.0, 6.6, -896.162, -17.20, 4.4))), ((true ? mat4(injectionSwitch, 0.0, 1.0, log(exp(0.0)), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, round(length(normalize(1.0))), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(_GLF_IDENTITY(mat2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0), (mat2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0)) - mat2(0.0, 0.0, 0.0, 0.0)))), 0.0, 1.0, 1.0) : _GLF_FUZZED(mat4(-253.916, -557.041, -7.9, 0.9, 5.8, 8.3, 5.8, -4.9, 3.4, -4507.2633, 764.353, -0.0, 6.6, -896.162, -17.20, 4.4)))) * mat4(1.0))))))), max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 1.0, 1.0))))))).y)))), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(atan(3142.5512, 80.30)) : 1.0)))), clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4(injectionSwitch, 0.0, 1.0, log(exp(0.0)), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, round(length(normalize(1.0))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0), (true ? mat4(injectionSwitch, 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(9.9) : 1.0)), log(exp(0.0)), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, round(length(normalize(1.0))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0) : _GLF_FUZZED(mat4(-253.916, -557.041, -7.9, 0.9, 5.8, 8.3, 5.8, -4.9, 3.4, -4507.2633, 764.353, -0.0, 6.6, -896.162, -17.20, 4.4))))), vec2(0.0, 0.0) + (vec2(_GLF_IDENTITY(mat4(injectionSwitch, 0.0, 1.0, log(exp(0.0)), 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((-4.0 - -679.314))), float(1.0), bool(true))), 1.0, 1.0, 1.0, round(length(normalize(1.0))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0), (true ? mat4(injectionSwitch, 0.0, 1.0, log(exp(0.0)), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(8919.1359)))) / 1.0), 1.0, 1.0, 1.0, 1.0, 1.0, round(length(normalize(1.0))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0) : _GLF_FUZZED(mat4(-253.916, -557.041, -7.9, 0.9, 5.8, 8.3, 5.8, -4.9, 3.4, -4507.2633, 764.353, -0.0, 6.6, -896.162, -17.20, 4.4)))))))), max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 1.0, 1.0))), clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 1.0, 1.0))), _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 1.0, 1.0))), _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 1.0, 1.0))))))))).y)))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)))).y, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)))).y, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)))).y) / 1.0))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)) : _GLF_FUZZED(_GLF_IDENTITY(4958.3289, min(_GLF_IDENTITY(4958.3289, mix(float(_GLF_IDENTITY(4958.3289, min(4958.3289, 4958.3289))), float(_GLF_FUZZED(5055.1607)), bool(false))), 4958.3289))))))), injectionSwitch)))).y))))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
