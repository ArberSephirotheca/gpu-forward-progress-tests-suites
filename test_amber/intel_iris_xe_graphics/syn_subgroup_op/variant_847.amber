#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(false))
          return;
        }
       else
        {
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), false || (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) && true))))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(mat3(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(905.750), _GLF_FUZZED(1.1)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0, 1.0, cos(0.0), 0.0)), (vec2(mat3(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(905.750), _GLF_FUZZED(1.1)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), 1.0, 1.0, 0.0, 0.0, 1.0, cos(0.0), 0.0))) * mat2(1.0)), (_GLF_IDENTITY(vec2(mat3(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(905.750), _GLF_FUZZED(1.1)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), 1.0, 1.0, 0.0, 0.0, 1.0, cos(0.0), 0.0)), (vec2(mat3(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(905.750), _GLF_FUZZED(1.1)), _GLF_IDENTITY(vec2((injectionSwitch)[0], (injectionSwitch)[1]), mix(vec2(_GLF_FUZZED(4737.6943), _GLF_FUZZED(98.47)), vec2((vec2((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2474.0016), _GLF_FUZZED(-7.0)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))[0], (injectionSwitch)[1]))[0], (vec2((injectionSwitch)[0], (injectionSwitch)[1]))[1]), bvec2(true, true))), bvec2(true, true))), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(smoothstep(-20.50, -634.888, 0.2)) : _GLF_IDENTITY(1.0, 1.0 * _GLF_IDENTITY((1.0), 1.0 * ((1.0))))))) + 0.0), 1.0, 0.0, 0.0, 1.0, cos(0.0), 0.0))) * mat2(1.0))) * vec2(1.0, 1.0))).y) * 1.0)))))
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   do
                    {
                     do
                      {
                       barrier();
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                 else
                  {
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                       if(_GLF_DEAD(false))
                        return;
                      }
                     else
                      {
                       return;
                       if(_GLF_DEAD(false))
                        return;
                      }
                    }
                  }
                }
               else
                {
                }
              }
            }
          }
         else
          {
          }
        }
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(4), int(4)))); _injected_loop_counter --)
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           return;
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
      }
    }
  }
 uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (false ? _GLF_FUZZED(uvec3(20842u, 175432u, 51753u)) : _GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)))).x, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (false ? _GLF_FUZZED(uvec3(20842u, 175432u, 51753u)) : gl_NumWorkGroups)).x, ~ (~ (_GLF_IDENTITY(gl_NumWorkGroups, (false ? _GLF_FUZZED(uvec3(20842u, 175432u, _GLF_IDENTITY(51753u, (51753u) | 0u))) : gl_NumWorkGroups)).x)))) >> (0u ^ 0u), clamp((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (false ? _GLF_FUZZED(uvec3(20842u, 175432u, 51753u)) : gl_NumWorkGroups)).x, ~ (~ (_GLF_IDENTITY(gl_NumWorkGroups, (false ? _GLF_FUZZED(uvec3(20842u, 175432u, _GLF_IDENTITY(51753u, (51753u) | 0u))) : gl_NumWorkGroups)).x)))) >> (0u ^ 0u), (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (false ? _GLF_FUZZED(uvec3(20842u, 175432u, 51753u)) : gl_NumWorkGroups)).x, ~ (~ (_GLF_IDENTITY(gl_NumWorkGroups, (false ? _GLF_FUZZED(uvec3(20842u, 175432u, _GLF_IDENTITY(51753u, (51753u) | 0u))) : gl_NumWorkGroups)).x)))) >> (0u ^ 0u), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (false ? _GLF_FUZZED(uvec3(20842u, 175432u, 51753u)) : gl_NumWorkGroups)).x, ~ (~ (_GLF_IDENTITY(gl_NumWorkGroups, (false ? _GLF_FUZZED(uvec3(20842u, 175432u, _GLF_IDENTITY(51753u, (51753u) | 0u))) : gl_NumWorkGroups)).x)))) >> (0u ^ 0u), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (false ? _GLF_FUZZED(uvec3(20842u, 175432u, 51753u)) : gl_NumWorkGroups)).x, ~ (~ (_GLF_IDENTITY(gl_NumWorkGroups, (false ? _GLF_FUZZED(uvec3(20842u, 175432u, _GLF_IDENTITY(51753u, (51753u) | 0u))) : gl_NumWorkGroups)).x)))) >> (0u ^ 0u))))))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (false ? _GLF_IDENTITY(_GLF_FUZZED(uvec3(20842u, 175432u, 51753u)), _GLF_IDENTITY(uvec3(uvec3(_GLF_IDENTITY(_GLF_FUZZED(uvec3(20842u, 175432u, 51753u)), clamp(_GLF_FUZZED(uvec3(20842u, 175432u, 51753u)), _GLF_FUZZED(uvec3(20842u, 175432u, 51753u)), _GLF_FUZZED(uvec3(20842u, 175432u, 51753u)))))), (uvec3(uvec3(_GLF_IDENTITY(_GLF_FUZZED(uvec3(20842u, 175432u, 51753u)), clamp(_GLF_FUZZED(uvec3(20842u, 175432u, 51753u)), _GLF_FUZZED(uvec3(20842u, 175432u, 51753u)), _GLF_FUZZED(uvec3(20842u, 175432u, 51753u))))))) * uvec3(1u, 1u, 1u))) : _GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)))).x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (false ? _GLF_FUZZED(uvec3(20842u, 175432u, 51753u)) : gl_NumWorkGroups)).x, ~ (~ (_GLF_IDENTITY(gl_NumWorkGroups, (false ? _GLF_FUZZED(uvec3(20842u, 175432u, _GLF_IDENTITY(_GLF_IDENTITY(51753u, (_GLF_IDENTITY(51753u, min(51753u, 51753u))) << (0u ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (51753u) | 0u))) : gl_NumWorkGroups)).x)))) >> (0u ^ 0u))) | 0u);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) / _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))))))
  return;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) * 1u);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), true && (_GLF_WRAPPED_IF_FALSE(false))), true, false)), (bool(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), true && (_GLF_WRAPPED_IF_FALSE(false))), true, false))) && true)))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
     for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        return;
      }
    }
  }
 else
  {
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-657.257)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) + log(vec2(1.0, 1.0))).y), bool(true)), (mix(float(_GLF_FUZZED(-657.257)), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) + log(vec2(1.0, 1.0))).y), (float(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) * 1.0)), vec2(_GLF_FUZZED((-37.56 / vec3(899.933, -22.97, -9520.4032)).s), _GLF_FUZZED(35.05)), bvec2(false, false)))[0], injectionSwitch[1]))) + log(vec2(1.0, 1.0))).y)) - 0.0), bool(true))) / 1.0)), _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-657.257, min(-657.257, -657.257)))), float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_IDENTITY((injectionSwitch)[0], mix(float((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))[0]), float(_GLF_FUZZED(89.23)), bool(false)))), float(_GLF_FUZZED(-758.303)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(5079.1836), _GLF_FUZZED(4.3)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).y), bool(true))), true, false)), true && (_GLF_IDENTITY(bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-230.170)), bool(false))), mix(float(_GLF_FUZZED(-657.257)), float(injectionSwitch.y), bool(true))), true, _GLF_IDENTITY(false, ! (! (false))))), _GLF_IDENTITY(false || (bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-657.257)), float(injectionSwitch.y), bool(true))), true, false))), ! (! (_GLF_IDENTITY(false || (bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-657.257)), float(injectionSwitch.y), bool(true))), true, false))), false || (false || (bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-657.257)), float(injectionSwitch.y), bool(true))), true, false))))))))))))))))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)), ! _GLF_IDENTITY((! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec4((! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))), true && (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
    {
     for(int _injected_loop_counter = ((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
            {
             return;
            }
          }
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(4.5)), bool(false)))))))))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
    }
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     return;
    }
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u) : _GLF_FUZZED(subgroup_size))), ~ (~ (subgroup_id * subgroup_size))) + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  return;
 do
  {
   if(_GLF_DEAD(false))
    continue;
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)) && true, _GLF_IDENTITY(bool(bvec2((_GLF_WRAPPED_IF_FALSE(false)) && true, false)), (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2((_GLF_WRAPPED_IF_FALSE(false)) && true, false), bvec2(bvec4(bvec2((_GLF_WRAPPED_IF_FALSE(false)) && true, false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2((_GLF_WRAPPED_IF_FALSE(false)) && true, false), bvec2(bvec4(bvec2((_GLF_WRAPPED_IF_FALSE(false)) && true, false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec2(bvec3(_GLF_IDENTITY(bvec2((_GLF_WRAPPED_IF_FALSE(false)) && true, false), bvec2(bvec4(bvec2((_GLF_WRAPPED_IF_FALSE(false)) && true, false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false))), false, false)), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2((_GLF_WRAPPED_IF_FALSE(false)) && true, false), bvec2(bvec4(bvec2((_GLF_WRAPPED_IF_FALSE(false)) && true, false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec2(bvec3(_GLF_IDENTITY(bvec2((_GLF_WRAPPED_IF_FALSE(false)) && true, false), bvec2(bvec4(bvec2((_GLF_WRAPPED_IF_FALSE(false)) && true, false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false))), false, false)), true), bvec3(bvec4(bvec3(bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2((_GLF_WRAPPED_IF_FALSE(false)) && true, false), bvec2(bvec4(bvec2((_GLF_WRAPPED_IF_FALSE(false)) && true, false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec2(bvec3(_GLF_IDENTITY(bvec2((_GLF_WRAPPED_IF_FALSE(false)) && true, false), bvec2(bvec4(bvec2((_GLF_WRAPPED_IF_FALSE(false)) && true, false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false))), false, false)), true), true)))))))) || false))))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         do
          {
           buf[virtual_gid] = 1;
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
       else
        {
        }
      }
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      continue;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    continue;
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(subgroup_local_id + 1 < subgroup_size)
  {
   do
    {
     do
      {
       if(_GLF_DEAD(false))
        break;
       do
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           _GLF_IDENTITY(buf[next_virtual_gid] = 2, (_GLF_IDENTITY(buf[next_virtual_gid] = 2, (buf[next_virtual_gid] = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(0, _GLF_IDENTITY((0) - 0, ~ (_GLF_IDENTITY(~ ((0) - 0), min(~ ((0) - 0), ~ ((0) - 0))))))))))))), int(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(0, _GLF_IDENTITY((0) - 0, ~ (_GLF_IDENTITY(~ ((0) - 0), min(~ ((0) - 0), ~ ((0) - 0))))))))), (_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(0, _GLF_IDENTITY((0) - 0, ~ (_GLF_IDENTITY(~ ((0) - 0), min(~ ((0) - 0), ~ ((0) - 0)))))))))) >> 0))))), (_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(0, _GLF_IDENTITY((0) - 0, ~ (_GLF_IDENTITY(~ ((0) - 0), min(~ ((0) - 0), ~ ((0) - 0)))))))))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, _GLF_IDENTITY(int(ivec3(2, 1, _GLF_IDENTITY(0, _GLF_IDENTITY((0) - 0, ~ (_GLF_IDENTITY(~ ((0) - 0), min(~ ((0) - 0), ~ ((0) - 0)))))))), (_GLF_IDENTITY(int(ivec3(2, 1, _GLF_IDENTITY(0, _GLF_IDENTITY((0) - 0, ~ (_GLF_IDENTITY(~ ((0) - 0), min(~ ((0) - 0), ~ ((0) - 0)))))))), (true ? _GLF_IDENTITY(int(ivec3(2, 1, _GLF_IDENTITY(0, _GLF_IDENTITY((0) - 0, ~ (_GLF_IDENTITY(~ ((0) - 0), min(~ ((0) - 0), ~ ((0) - 0)))))))), 1 * (int(ivec3(2, 1, _GLF_IDENTITY(0, _GLF_IDENTITY((0) - 0, ~ (_GLF_IDENTITY(~ ((0) - 0), min(~ ((0) - 0), ~ ((0) - 0)))))))))) : _GLF_FUZZED(90881)))) / 1)))))), 0 ^ (_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(2, max(2, 2)), int(ivec3(2, 1, _GLF_IDENTITY(0, _GLF_IDENTITY((0) - 0, ~ (_GLF_IDENTITY(~ ((0) - 0), min(~ (_GLF_IDENTITY((0) - 0, ((0) - 0) | ((0) - 0))), ~ ((0) - 0)))))))))))))))))), 0 ^ (int(_GLF_IDENTITY(_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(0, _GLF_IDENTITY((0) - 0, ~ (_GLF_IDENTITY(~ ((0) - 0), min(~ ((0) - 0), ~ ((0) - 0))))))))))))), (_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, int(_GLF_IDENTITY(ivec3(2, 1, _GLF_IDENTITY(0, _GLF_IDENTITY((0) - 0, ~ (_GLF_IDENTITY(~ ((0) - 0), min(~ ((0) - 0), ~ (_GLF_IDENTITY((0), ((0)) - 0) - 0))))))), (ivec3(2, 1, _GLF_IDENTITY(0, _GLF_IDENTITY((0) - 0, ~ (_GLF_IDENTITY(~ ((0) - 0), min(~ ((0) - 0), ~ (_GLF_IDENTITY((0), ((0)) - 0) - 0)))))))) | ivec3(0, 0, 0))))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(0, _GLF_IDENTITY((0) - 0, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY(((0) - 0), (((0) - 0)) + 0), min(~ ((0) - 0), ~ ((0) - 0))))))))))))), 0 ^ (_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(0, _GLF_IDENTITY((0) - 0, ~ (_GLF_IDENTITY(~ ((0) - _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(22777)))) | 0)), min(~ ((0) - 0), ~ ((_GLF_IDENTITY(0, ~ (~ (0)))) - 0)))))))))))))))))))))), 1 * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(0, _GLF_IDENTITY((0) - 0, ~ (_GLF_IDENTITY(~ ((0) - 0), min(~ ((0) - 0), ~ ((0) - 0))))))))))))), int(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(0, _GLF_IDENTITY((0) - 0, ~ (_GLF_IDENTITY(~ ((0) - 0), min(~ ((0) - 0), ~ ((0) - 0))))))))))))), (_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(0, _GLF_IDENTITY((0) - 0, ~ (_GLF_IDENTITY(~ ((0) - 0), min(~ ((0) - 0), ~ ((0) - 0)))))))))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(0, _GLF_IDENTITY((0) - 0, ~ (_GLF_IDENTITY(~ ((0) - 0), min(~ ((0) - 0), ~ ((0) - 0))))))))))))), 0 ^ (_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(0, _GLF_IDENTITY((0) - 0, ~ (_GLF_IDENTITY(~ ((0) - 0), min(~ ((0) - 0), ~ ((0) - 0)))))))))))))))))), 0 ^ (int(_GLF_IDENTITY(_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(0, _GLF_IDENTITY((0) - 0, ~ (_GLF_IDENTITY(~ ((0) - 0), min(~ ((0) - 0), ~ ((0) - 0))))))))))))), (_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(0, _GLF_IDENTITY((0) - 0, ~ (_GLF_IDENTITY(~ ((0) - 0), min(~ ((0) - 0), ~ ((0) - 0)))))))))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(0, _GLF_IDENTITY((0) - 0, ~ (_GLF_IDENTITY(~ ((0) - 0), min(~ ((0) - 0), ~ ((0) - 0))))))))))))), 0 ^ (_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(0, _GLF_IDENTITY((0) - 0, ~ (_GLF_IDENTITY(~ ((0) - 0), min(~ ((0) - 0), ~ ((0) - 0)))))))))))))))))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(0, _GLF_IDENTITY((0) - 0, ~ (_GLF_IDENTITY(~ ((0) - 0), min(~ ((0) - 0), ~ ((0) - 0))))))))))))), int(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(0, _GLF_IDENTITY((0) - 0, ~ (_GLF_IDENTITY(~ ((0) - 0), min(~ ((0) - 0), ~ ((0) - 0))))))))))))), (_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(0, _GLF_IDENTITY((0) - 0, ~ (_GLF_IDENTITY(~ ((0) - 0), min(~ ((0) - 0), ~ ((0) - 0)))))))))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(0, _GLF_IDENTITY((0) - 0, ~ (_GLF_IDENTITY(~ ((0) - 0), min(~ ((0) - 0), ~ ((0) - 0))))))))))))), 0 ^ (_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(0, _GLF_IDENTITY((0) - 0, ~ (_GLF_IDENTITY(~ ((0) - 0), min(~ ((0) - 0), ~ ((0) - 0)))))))))))))))))), 0 ^ (int(_GLF_IDENTITY(_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(0, _GLF_IDENTITY((0) - 0, ~ (_GLF_IDENTITY(~ ((0) - 0), min(~ ((0) - 0), ~ ((0) - 0))))))))))))), (_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(0, _GLF_IDENTITY((0) - 0, ~ (_GLF_IDENTITY(~ ((0) - 0), min(~ ((0) - 0), ~ ((0) - 0)))))))))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(0, _GLF_IDENTITY((0) - 0, ~ (_GLF_IDENTITY(~ ((0) - 0), min(~ ((0) - 0), ~ ((0) - 0))))))))))))), 0 ^ (_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(0, _GLF_IDENTITY((0) - 0, ~ (_GLF_IDENTITY(~ ((0) - 0), min(~ ((0) - 0), ~ ((0) - 0)))))))))))))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(0, _GLF_IDENTITY((0) - 0, ~ (_GLF_IDENTITY(~ ((0) - 0), min(~ ((0) - 0), ~ ((0) - 0))))))))))))), int(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(0, _GLF_IDENTITY((0) - 0, ~ (_GLF_IDENTITY(~ ((0) - 0), min(~ ((0) - 0), ~ ((0) - 0))))))))))))), (_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(0, _GLF_IDENTITY((0) - 0, ~ (_GLF_IDENTITY(~ ((0) - 0), min(~ ((0) - 0), ~ ((0) - 0)))))))))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(0, _GLF_IDENTITY((0) - 0, ~ (_GLF_IDENTITY(~ ((0) - 0), min(~ ((0) - 0), ~ ((0) - 0))))))))))))), 0 ^ (_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(0, _GLF_IDENTITY((0) - 0, ~ (_GLF_IDENTITY(~ ((0) - 0), min(~ ((0) - 0), ~ ((0) - 0)))))))))))))))))), 0 ^ (int(_GLF_IDENTITY(_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(0, _GLF_IDENTITY((0) - 0, ~ (_GLF_IDENTITY(~ ((0) - 0), min(~ ((0) - 0), ~ ((0) - 0))))))))))))), (_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(0, _GLF_IDENTITY((0) - 0, ~ (_GLF_IDENTITY(~ ((0) - 0), min(~ ((0) - 0), ~ ((0) - 0)))))))))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(0, _GLF_IDENTITY((0) - 0, ~ (_GLF_IDENTITY(~ ((0) - 0), min(~ ((0) - 0), ~ ((0) - 0))))))))))))), 0 ^ (_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(0, _GLF_IDENTITY((0) - 0, ~ (_GLF_IDENTITY(~ ((0) - 0), min(~ ((0) - 0), ~ ((0) - 0)))))))))))))))))))))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, (false ? _GLF_FUZZED(13332) : 0))) - 0, ~ (_GLF_IDENTITY(~ ((0) - 0), min(~ ((0) - 0), ~ ((0) - 0))))))))))))), int(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(0, _GLF_IDENTITY((0) - 0, ~ (_GLF_IDENTITY(~ ((0) - 0), min(~ ((0) - 0), ~ ((0) - 0))))))))))))), (_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(0, _GLF_IDENTITY((0) - 0, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ ((0) - 0), (0 << _GLF_IDENTITY(int(5), int(5))) | (~ ((0) - 0))), min(~ ((0) - 0), ~ ((0) - 0)))))))))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(0, _GLF_IDENTITY((0) - 0, ~ (_GLF_IDENTITY(~ ((0) - 0), min(~ ((0) - 0), ~ ((0) - 0))))))))))), clamp(_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(0, _GLF_IDENTITY((0) - 0, ~ (_GLF_IDENTITY(~ ((0) - 0), min(~ ((0) - 0), ~ ((0) - 0))))))))))), _GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(0, _GLF_IDENTITY((0) - 0, ~ (_GLF_IDENTITY(~ ((0) - 0), min(~ ((0) - 0), ~ ((0) - 0))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(0, _GLF_IDENTITY((0) - 0, ~ (_GLF_IDENTITY(~ ((0) - 0), min(~ ((0) - 0), ~ ((0) - 0))))))))))), min(_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(0, _GLF_IDENTITY((0) - 0, ~ (_GLF_IDENTITY(~ ((0) - 0), min(~ ((0) - 0), ~ ((0) - 0))))))))))), _GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(0, _GLF_IDENTITY((0) - 0, ~ (_GLF_IDENTITY(~ ((0) - 0), min(~ ((0) - 0), ~ ((0) - 0))))))))))))))))), 0 ^ (_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(0, _GLF_IDENTITY((0) - 0, ~ (_GLF_IDENTITY(~ ((0) - 0), min(~ ((0) - 0), ~ ((0) - 0)))))))))))))))))), 0 ^ (int(_GLF_IDENTITY(_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(0, _GLF_IDENTITY((0) - _GLF_IDENTITY(0, min(0, 0)), ~ (_GLF_IDENTITY(~ ((0) - 0), min(~ ((0) - 0), ~ ((0) - 0))))))))))))), _GLF_IDENTITY((_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(0, _GLF_IDENTITY((0) - 0, ~ (_GLF_IDENTITY(~ ((0) - 0), min(~ ((0) - 0), ~ ((0) - 0))))))))))), (_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(0, _GLF_IDENTITY((0) - 0, ~ (_GLF_IDENTITY(~ ((0) - 0), min(~ ((0) - 0), ~ ((0) - 0)))))))))))) << 0)))), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(0, _GLF_IDENTITY((0) - 0, ~ (_GLF_IDENTITY(~ ((0) - 0), min(~ ((0) - 0), ~ ((0) - 0))))))))))), (_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(0, _GLF_IDENTITY((0) - 0, ~ (_GLF_IDENTITY(~ ((0) - 0), min(~ ((0) - 0), ~ ((0) - 0)))))))))))) << 0)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(0, _GLF_IDENTITY((0) - 0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((0), ((0)) | 0) - 0), min(~ ((0) - 0), ~ ((0) - 0))))))))))))), 0 ^ (_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(0, _GLF_IDENTITY((0) - 0, ~ (_GLF_IDENTITY(~ ((0) - 0), min(~ ((0) - 0), ~ ((0) - 0)))))))))))))))))))))), (_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(0, _GLF_IDENTITY((0) - 0, ~ (_GLF_IDENTITY(~ ((0) - 0), min(~ (_GLF_IDENTITY((0) - 0, min((0) - 0, (0) - 0))), ~ ((0) - 0))))))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(0, _GLF_IDENTITY((0) - 0, ~ (_GLF_IDENTITY(~ ((0) - 0), min(~ (_GLF_IDENTITY((0) - 0, min((0) - 0, (0) - 0))), ~ ((0) - 0))))))))))), int(ivec2(_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(0, _GLF_IDENTITY((0) - 0, ~ (_GLF_IDENTITY(~ ((0) - 0), min(~ (_GLF_IDENTITY((0) - 0, min((0) - 0, (0) - 0))), ~ ((0) - 0))))))))))), 1))), _GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(0, _GLF_IDENTITY((0) - 0, ~ (_GLF_IDENTITY(~ ((0) - 0), min(~ (_GLF_IDENTITY((0) - 0, min((0) - 0, (0) - 0))), ~ ((0) - 0))))))))))))))), int(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, min(2, _GLF_IDENTITY(2, (2) ^ 0))), 0 ^ (_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, int(_GLF_IDENTITY(ivec3(2, 1, _GLF_IDENTITY(0, _GLF_IDENTITY((0) - 0, ~ (_GLF_IDENTITY(~ ((0) - 0), min(~ ((0) - 0), ~ ((0) - 0))))))), (_GLF_IDENTITY(ivec3(2, 1, _GLF_IDENTITY(0, _GLF_IDENTITY((0) - 0, ~ (_GLF_IDENTITY(~ ((0) - 0), min(~ ((0) - 0), ~ ((0) - 0))))))), ivec3(0, 0, 0) ^ (ivec3(2, 1, _GLF_IDENTITY(0, _GLF_IDENTITY((0) - 0, ~ (_GLF_IDENTITY(~ ((0) - 0), min(~ ((0) - 0), ~ ((0) - 0)))))))))) | (ivec3(2, 1, _GLF_IDENTITY(0, _GLF_IDENTITY((0) - 0, ~ (_GLF_IDENTITY(~ ((0) - 0), min(~ ((0) - 0), ~ ((0) - 0))))))))))))))), (_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(0, _GLF_IDENTITY((0) - 0, ~ (_GLF_IDENTITY(~ ((0) - 0), min(~ ((0) - 0), ~ ((0) - 0)))))))))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(0, _GLF_IDENTITY((0) - 0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((0) - 0, clamp((0) - 0, (0) - 0, (0) - 0))), min(~ (_GLF_IDENTITY((0), _GLF_IDENTITY(int(int((0))), (int(int((0)))) | (int(int((0)))))) - 0), ~ ((0) - 0))))))))))))), 0 ^ (_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(0, _GLF_IDENTITY(_GLF_IDENTITY((0) - 0, ~ (_GLF_IDENTITY(~ ((0) - 0), min(~ ((0) - 0), ~ ((0) - 0))))), ((0 | 0) >> _GLF_IDENTITY(int(5), int(5))) ^ (_GLF_IDENTITY(_GLF_IDENTITY((0) - 0, ~ (_GLF_IDENTITY(~ ((0) - 0), min(~ ((0) - 0), ~ ((0) - 0))))), (_GLF_IDENTITY(_GLF_IDENTITY((0) - 0, ~ (_GLF_IDENTITY(~ ((0) - 0), min(~ ((0) - 0), ~ ((0) - 0))))), 0 | (_GLF_IDENTITY((0) - 0, ~ (_GLF_IDENTITY(~ ((0) - 0), min(~ ((0) - 0), ~ ((0) - 0)))))))) - 0)))))))))))))))), 0 ^ (int(_GLF_IDENTITY(_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, _GLF_IDENTITY(0 ^ (_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(0, _GLF_IDENTITY((0) - 0, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY((0), (false ? _GLF_FUZZED(14284) : _GLF_IDENTITY((0), _GLF_IDENTITY(int(ivec2((0), 1)), 0 ^ (int(ivec2((0), 1))))))) - 0), min(~ ((0) - 0), ~ ((0) - 0)))), ((_GLF_IDENTITY(~ (_GLF_IDENTITY((0), (false ? _GLF_FUZZED(14284) : _GLF_IDENTITY((0), _GLF_IDENTITY(int(ivec2((0), 1)), 0 ^ (int(ivec2((0), 1))))))) - 0), min(~ ((0) - 0), ~ ((0) - 0))))) << 0))))))), max(_GLF_IDENTITY(0 ^ (_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(0, _GLF_IDENTITY((0) - 0, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY((0), (false ? _GLF_FUZZED(14284) : _GLF_IDENTITY((0), _GLF_IDENTITY(int(ivec2((0), 1)), 0 ^ (int(ivec2((0), 1))))))) - 0), min(~ ((0) - 0), ~ ((0) - 0)))), ((_GLF_IDENTITY(~ (_GLF_IDENTITY((0), (false ? _GLF_FUZZED(14284) : _GLF_IDENTITY((0), _GLF_IDENTITY(int(ivec2((0), 1)), 0 ^ (int(ivec2((0), 1))))))) - 0), min(~ ((0) - 0), ~ ((0) - 0))))) << 0))))))), 1 * (0 ^ (_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(0, _GLF_IDENTITY((0) - 0, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY((0), (false ? _GLF_FUZZED(14284) : _GLF_IDENTITY((0), _GLF_IDENTITY(int(ivec2((0), 1)), 0 ^ (int(ivec2((0), 1))))))) - 0), min(~ ((0) - 0), ~ ((0) - 0)))), ((_GLF_IDENTITY(~ (_GLF_IDENTITY((0), (false ? _GLF_FUZZED(14284) : _GLF_IDENTITY((0), _GLF_IDENTITY(int(ivec2((0), 1)), 0 ^ (int(ivec2((0), 1))))))) - 0), min(~ ((0) - 0), ~ ((0) - 0))))) << 0))))))))), 0 ^ (_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(0, _GLF_IDENTITY((0) - 0, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY((0), (false ? _GLF_FUZZED(14284) : _GLF_IDENTITY((0), _GLF_IDENTITY(int(ivec2((0), 1)), 0 ^ (int(ivec2((0), 1))))))) - 0), min(~ ((0) - 0), ~ ((0) - 0)))), ((_GLF_IDENTITY(~ (_GLF_IDENTITY((0), (false ? _GLF_FUZZED(14284) : _GLF_IDENTITY((0), _GLF_IDENTITY(int(ivec2((0), 1)), 0 ^ (int(ivec2((0), 1))))))) - 0), min(~ ((0) - 0), ~ ((0) - 0))))) << 0)))))))))))), (_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, int(ivec4(0, 1, 0, 0)))) / 1) ^ (_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(0, _GLF_IDENTITY((0) - 0, ~ (_GLF_IDENTITY(~ ((0) - 0), min(~ ((0) - 0), ~ ((0) - 0)))))))))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, _GLF_IDENTITY(0 ^ (_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(0, _GLF_IDENTITY((0) - 0, ~ (_GLF_IDENTITY(~ ((0) - 0), min(~ ((0) - 0), ~ ((0) - 0)))))))))), (_GLF_IDENTITY(0 ^ (_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(0, _GLF_IDENTITY((0) - 0, ~ (_GLF_IDENTITY(~ ((0) - 0), min(~ ((0) - 0), ~ ((0) - 0)))))))))), (0 ^ (_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(0, _GLF_IDENTITY((0) - 0, ~ (_GLF_IDENTITY(~ ((0) - 0), min(~ ((0) - 0), ~ ((0) - 0))))))))))) | (0 ^ (_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(0, _GLF_IDENTITY((0) - 0, ~ (_GLF_IDENTITY(~ ((0) - 0), min(~ ((0) - 0), ~ ((0) - 0))))))))))))) - 0)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(0, _GLF_IDENTITY((0) - 0, ~ (_GLF_IDENTITY(~ ((0) - 0), min(~ ((0) - 0), ~ ((0) - 0))))))))))))), (_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(0, _GLF_IDENTITY((0) - _GLF_IDENTITY(0, (0) ^ 0), ~ (_GLF_IDENTITY(~ ((0) - 0), min(~ ((0) - 0), ~ ((0) - 0)))))))))))))) | (_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(0, _GLF_IDENTITY((0) - 0, ~ (_GLF_IDENTITY(~ ((0) - 0), min(~ ((0) - 0), ~ ((0) - 0)))))))))))))))))), 0 ^ (_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(0, _GLF_IDENTITY((0) - 0, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ ((0) - 0), min(~ ((0) - 0), ~ ((0) - 0))), min(_GLF_IDENTITY(~ ((0) - 0), min(~ ((0) - 0), ~ ((0) - 0))), _GLF_IDENTITY(~ ((0) - 0), min(~ ((0) - 0), ~ ((0) - 0)))))))))))))))))))))))) : _GLF_FUZZED(19401), (true ? _GLF_IDENTITY(_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(0, _GLF_IDENTITY((0) - 0, ~ (_GLF_IDENTITY(~ ((0) - 0), min(~ (_GLF_IDENTITY((0) - 0, min((0) - 0, (0) - 0))), ~ ((0) - 0))))))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(0, _GLF_IDENTITY((0) - 0, ~ (_GLF_IDENTITY(~ ((0) - 0), min(~ (_GLF_IDENTITY((0) - 0, min((0) - 0, (0) - 0))), ~ ((0) - 0))))))))))), int(ivec2(_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(0, _GLF_IDENTITY((0) - 0, ~ (_GLF_IDENTITY(~ ((0) - 0), min(~ (_GLF_IDENTITY((0) - 0, min((0) - 0, (0) - 0))), ~ ((0) - 0))))))))))), 1))), _GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(0, _GLF_IDENTITY((0) - 0, ~ (_GLF_IDENTITY(~ ((0) - 0), min(~ (_GLF_IDENTITY((0) - 0, min((0) - 0, (0) - 0))), ~ ((0) - 0))))))))))))))), int(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, min(2, _GLF_IDENTITY(2, (2) ^ 0))), 0 ^ (_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, int(_GLF_IDENTITY(ivec3(2, 1, _GLF_IDENTITY(0, _GLF_IDENTITY((0) - 0, ~ (_GLF_IDENTITY(~ ((0) - 0), min(~ ((0) - 0), ~ ((0) - 0))))))), (_GLF_IDENTITY(ivec3(2, 1, _GLF_IDENTITY(0, _GLF_IDENTITY((0) - 0, ~ (_GLF_IDENTITY(~ ((0) - 0), min(~ ((0) - 0), ~ ((0) - 0))))))), ivec3(0, 0, 0) ^ (ivec3(2, 1, _GLF_IDENTITY(0, _GLF_IDENTITY((0) - 0, ~ (_GLF_IDENTITY(~ ((0) - 0), min(~ ((0) - 0), ~ ((0) - 0)))))))))) | (ivec3(2, 1, _GLF_IDENTITY(0, _GLF_IDENTITY((0) - 0, ~ (_GLF_IDENTITY(~ ((0) - 0), min(~ ((0) - 0), ~ ((0) - 0))))))))))))))), (_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(0, _GLF_IDENTITY((0) - 0, ~ (_GLF_IDENTITY(~ ((0) - 0), min(~ ((0) - 0), ~ ((0) - 0)))))))))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(0, _GLF_IDENTITY((0) - 0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((0) - 0, clamp((0) - 0, (0) - 0, (0) - 0))), min(~ (_GLF_IDENTITY((0), _GLF_IDENTITY(int(int((0))), (int(int((0)))) | (int(int((0)))))) - 0), ~ ((0) - 0))))))))))))), 0 ^ (_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(0, _GLF_IDENTITY(_GLF_IDENTITY((0) - 0, ~ (_GLF_IDENTITY(~ ((0) - 0), min(~ ((0) - 0), ~ ((0) - 0))))), ((0 | 0) >> _GLF_IDENTITY(int(5), int(5))) ^ (_GLF_IDENTITY(_GLF_IDENTITY((0) - 0, ~ (_GLF_IDENTITY(~ ((0) - 0), min(~ ((0) - 0), ~ ((0) - 0))))), (_GLF_IDENTITY(_GLF_IDENTITY((0) - 0, ~ (_GLF_IDENTITY(~ ((0) - 0), min(~ ((0) - 0), ~ ((0) - 0))))), 0 | (_GLF_IDENTITY((0) - 0, ~ (_GLF_IDENTITY(~ ((0) - 0), min(~ ((0) - 0), ~ ((0) - 0)))))))) - 0)))))))))))))))), 0 ^ (int(_GLF_IDENTITY(_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, _GLF_IDENTITY(0 ^ (_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(0, _GLF_IDENTITY((0) - 0, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY((0), (false ? _GLF_FUZZED(14284) : _GLF_IDENTITY((0), _GLF_IDENTITY(int(ivec2((0), 1)), 0 ^ (int(ivec2((0), 1))))))) - 0), min(~ ((0) - 0), ~ ((0) - 0)))), ((_GLF_IDENTITY(~ (_GLF_IDENTITY((0), (false ? _GLF_FUZZED(14284) : _GLF_IDENTITY((0), _GLF_IDENTITY(int(ivec2((0), 1)), 0 ^ (int(ivec2((0), 1))))))) - 0), min(~ ((0) - 0), ~ ((0) - 0))))) << 0))))))), max(_GLF_IDENTITY(0 ^ (_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(0, _GLF_IDENTITY((0) - 0, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY((0), (false ? _GLF_FUZZED(14284) : _GLF_IDENTITY((0), _GLF_IDENTITY(int(ivec2((0), 1)), 0 ^ (int(ivec2((0), 1))))))) - 0), min(~ ((0) - 0), ~ ((0) - 0)))), ((_GLF_IDENTITY(~ (_GLF_IDENTITY((0), (false ? _GLF_FUZZED(14284) : _GLF_IDENTITY((0), _GLF_IDENTITY(int(ivec2((0), 1)), 0 ^ (int(ivec2((0), 1))))))) - 0), min(~ ((0) - 0), ~ ((0) - 0))))) << 0))))))), 1 * (0 ^ (_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(0, _GLF_IDENTITY((0) - 0, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY((0), (false ? _GLF_FUZZED(14284) : _GLF_IDENTITY((0), _GLF_IDENTITY(int(ivec2((0), 1)), 0 ^ (int(ivec2((0), 1))))))) - 0), min(~ ((0) - 0), ~ ((0) - 0)))), ((_GLF_IDENTITY(~ (_GLF_IDENTITY((0), (false ? _GLF_FUZZED(14284) : _GLF_IDENTITY((0), _GLF_IDENTITY(int(ivec2((0), 1)), 0 ^ (int(ivec2((0), 1))))))) - 0), min(~ ((0) - 0), ~ ((0) - 0))))) << 0))))))))), 0 ^ (_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(0, _GLF_IDENTITY((0) - 0, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY((0), (false ? _GLF_FUZZED(14284) : _GLF_IDENTITY((0), _GLF_IDENTITY(int(ivec2((0), 1)), 0 ^ (int(ivec2((0), 1))))))) - 0), min(~ ((0) - 0), ~ ((0) - 0)))), ((_GLF_IDENTITY(~ (_GLF_IDENTITY((0), (false ? _GLF_FUZZED(14284) : _GLF_IDENTITY((0), _GLF_IDENTITY(int(ivec2((0), 1)), 0 ^ (int(ivec2((0), 1))))))) - 0), min(~ ((0) - 0), ~ ((0) - 0))))) << 0)))))))))))), (_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, int(ivec4(0, 1, 0, 0)))) / 1) ^ (_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(0, _GLF_IDENTITY((0) - 0, ~ (_GLF_IDENTITY(~ ((0) - 0), min(~ ((0) - 0), ~ ((0) - 0)))))))))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, _GLF_IDENTITY(0 ^ (_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(0, _GLF_IDENTITY((0) - 0, ~ (_GLF_IDENTITY(~ ((0) - 0), min(~ ((0) - 0), ~ ((0) - 0)))))))))), (_GLF_IDENTITY(0 ^ (_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(0, _GLF_IDENTITY((0) - 0, ~ (_GLF_IDENTITY(~ ((0) - 0), min(~ ((0) - 0), ~ ((0) - 0)))))))))), (0 ^ (_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(0, _GLF_IDENTITY((0) - 0, ~ (_GLF_IDENTITY(~ ((0) - 0), min(~ ((0) - 0), ~ ((0) - 0))))))))))) | (0 ^ (_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(0, _GLF_IDENTITY((0) - 0, ~ (_GLF_IDENTITY(~ ((0) - 0), min(~ ((0) - 0), ~ ((0) - 0))))))))))))) - 0)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(0, _GLF_IDENTITY((0) - 0, ~ (_GLF_IDENTITY(~ ((0) - 0), min(~ ((0) - 0), ~ ((0) - 0))))))))))))), (_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(0, _GLF_IDENTITY((0) - _GLF_IDENTITY(0, (0) ^ 0), ~ (_GLF_IDENTITY(~ ((0) - 0), min(~ ((0) - 0), ~ ((0) - 0)))))))))))))) | (_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(0, _GLF_IDENTITY((0) - 0, ~ (_GLF_IDENTITY(~ ((0) - 0), min(~ ((0) - 0), ~ ((0) - 0)))))))))))))))))), 0 ^ (_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(0, _GLF_IDENTITY((0) - 0, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ ((0) - 0), min(~ ((0) - 0), ~ ((0) - 0))), min(_GLF_IDENTITY(~ ((0) - 0), min(~ ((0) - 0), ~ ((0) - 0))), _GLF_IDENTITY(~ ((0) - 0), min(~ ((0) - 0), ~ ((0) - 0)))))))))))))))))))))))) : _GLF_FUZZED(19401)) | 0))))))))) | uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), clamp(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1]))), vec2(0.0, 0.0) + (_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), mix(vec2(_GLF_FUZZED(-9387.8664), (vec2(injectionSwitch[0], injectionSwitch[1]))[1]), vec2((vec2(injectionSwitch[0], injectionSwitch[1]))[0], _GLF_FUZZED(848.772)), bvec2(true, false)))))).x)))) << 0u);
          }
         else
          {
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) * vec2(1.0, 1.0))).y))))))))));
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) << 0))) >> _GLF_IDENTITY(int(7), int(7))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(3), int(3)))); _injected_loop_counter --)
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1510.7814), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) + _GLF_ZERO(0.0, injectionSwitch.x)), _GLF_FUZZED(float(126424u))), bvec2(true, false))).x < injectionSwitch.y))))
            {
             do
              {
               if(_GLF_DEAD(false))
                continue;
               return;
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
            }
           else
            {
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bool((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)), ! (! (bool((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec2(bool((injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec2(bvec2(bool((injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x > injectionSwitch.y)))))))), (! (bool(_GLF_IDENTITY(bvec2(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec2(bvec2(bool((injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) && true)))))))))
          return;
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
            }
          }
        }
       else
        {
         do
          {
           if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(false)), ! (! (! (_GLF_WRAPPED_IF_FALSE(false))))))))
            {
            }
           else
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), min(injectionSwitch, injectionSwitch)).y)), true, false, true)))))
                return;
              }
             else
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                  {
                   return;
                  }
                 else
                  {
                  }
                }
              }
             subgroupAll(false);
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) && true) || (false))));
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       else
        {
        }
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, bool(bvec4(true, false, true, true))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) && true)), bool(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, (true) && true), _GLF_IDENTITY(true, ! (! (true))))), true && (bool(bvec2(_GLF_IDENTITY(true, (true) && true), _GLF_IDENTITY(true, ! (! (true))))))))), false))))), false, true, true))), true, false)))))), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, bool(bvec4(true, false, true, true))), true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), bool(bvec4(true, false, true, true))), true, false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), bool(bvec4(true, false, true, true))), true, false))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), bool(bvec4(true, false, true, true))), true, false)))))), true)))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, bool(bvec4(true, false, true, true))), true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), bool(bvec4(true, false, true, true))), true, false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), bool(bvec4(true, false, true, true))), true, false))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), bool(bvec4(true, false, true, true))), true, false)))))), true))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, bool(bvec4(true, false, true, true))), true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), bool(bvec4(true, false, true, true))), true, false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), bool(bvec4(true, false, true, true))), true, false))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), bool(bvec4(true, false, true, true))), true, false)))))), true))))), false))))))), (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, bool(bvec4(true, false, true, true))), true, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, bool(bvec4(true, false, true, true))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(true, bool(bvec4(true, false, true, true))), true, false)))))))))) && true)), ! (! (true && (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, bool(bvec4(true, false, true, true))), true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), bool(bvec4(true, false, true, true))), true, false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), bool(bvec4(true, false, true, true))), true, false))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), bool(bvec4(true, false, true, true))), true, false)))))), true)))))), (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))) && (_GLF_IDENTITY(true, ! (! (true))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, bool(bvec4(true, false, true, true))), true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(true, bool(bvec4(true, false, true, true))), _GLF_IDENTITY(true, bool(bvec3(true, false, false))), false))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(true, bool(bvec4(true, false, true, true))), _GLF_IDENTITY(true, bool(bvec3(true, false, false))), false))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(true, bool(bvec4(true, false, true, true))), _GLF_IDENTITY(true, bool(bvec3(true, false, false))), false))), true))), true)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(true, bool(bvec4(true, false, true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) || false)), false || (bool(_GLF_IDENTITY(true, (true) || false))))), bool(bvec2(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) || false)), false || (bool(_GLF_IDENTITY(true, (true) || false))))), true))))))), _GLF_IDENTITY(true, bool(bvec3(true, false, false))), false))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, false, true, true))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, bool(bvec4(true, false, true, true))), false)), true && (bool(bvec2(_GLF_IDENTITY(true, bool(bvec4(true, false, true, true))), false))))), _GLF_IDENTITY(true, bool(bvec3(true, false, false))), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, false, true, true))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, bool(bvec4(true, false, true, true))), false)), true && (bool(bvec2(_GLF_IDENTITY(true, bool(bvec4(true, false, true, true))), false))))), _GLF_IDENTITY(true, bool(bvec3(true, false, false))), false), false))))), true))), true)))))))))) && true)))))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (true), ! (! (_GLF_IDENTITY(! (true), true && (! (true))))))), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(! (true), ! (! (_GLF_IDENTITY(! (true), true && (! (true))))))), bool(bvec3((_GLF_IDENTITY(! (true), ! (! (_GLF_IDENTITY(! (true), true && (! (true))))))), false, true))), true, false))))))))
    {
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), false || (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false)))))))
      {
      }
     else
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < 1, false || (_injected_loop_counter < 1))); _injected_loop_counter ++)
        {
         return;
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! ((false)))))))
      return;
    }
  }
 else
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     do
      {
       do
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ! (! ((false))))))) || false)))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            continue;
           continue;
          }
         buf[next_virtual_gid] = 2;
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             continue;
            }
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           continue;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, false))))), false || (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, false))))), ! (! (! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, false))))))))))) || (_GLF_IDENTITY(false, (false) && true)))))
          {
           do
            {
             return;
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))));
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          return;
         for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter)) != 1), _GLF_IDENTITY(false || (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)), (false || (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            {
             for(int _injected_loop_counter = int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-8.0) : _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
              {
               if(_GLF_DEAD(false))
                continue;
               return;
              }
            }
          }
        }
       else
        {
        }
      }
    }
   else
    {
    }
   subgroupAll(_GLF_IDENTITY(_GLF_IDENTITY(true, true && _GLF_IDENTITY((true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((true), (_GLF_IDENTITY((true), _GLF_IDENTITY(bool(bool((true))), bool(bvec3(bool(bool((true))), true, false))))) && true), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((true), (_GLF_IDENTITY((true), _GLF_IDENTITY(bool(bool((true))), bool(bvec3(bool(bool(_GLF_IDENTITY((true), ! (! ((true)))))), true, false))))) && true), false)), false || (bool(bvec2(_GLF_IDENTITY((true), (_GLF_IDENTITY((true), _GLF_IDENTITY(bool(bool((true))), bool(bvec3(bool(bool((true))), true, false))))) && true), false)))))), _GLF_IDENTITY(true, (true) || _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))), (injectionSwitch.x > injectionSwitch.y))) && (! ((true))))))), bool(bool(_GLF_IDENTITY(true, true && _GLF_IDENTITY((true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((true), (_GLF_IDENTITY(_GLF_IDENTITY((true), _GLF_IDENTITY(bool(bool((true))), bool(bvec3(bool(bool((true))), true, false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((true), _GLF_IDENTITY(bool(bool((true))), bool(bvec3(bool(bool((true))), true, false))))), (! (_GLF_IDENTITY((true), _GLF_IDENTITY(bool(bool((true))), bool(bvec3(bool(bool((true))), true, false)))))) || false)))) && true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((true), (_GLF_IDENTITY((true), _GLF_IDENTITY(bool(bool((true))), bool(bvec3(bool(bool(_GLF_IDENTITY((true), ! (_GLF_IDENTITY(! ((true)), true && (! ((true)))))))), true, false))))) && true), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((true), (_GLF_IDENTITY((true), _GLF_IDENTITY(bool(bool((true))), bool(bvec3(bool(bool(_GLF_IDENTITY((true), ! (_GLF_IDENTITY(! ((true)), true && (! ((true)))))))), true, false))))) && true), false), bvec2(bvec3(bvec2(_GLF_IDENTITY((true), (_GLF_IDENTITY((true), _GLF_IDENTITY(bool(bool((true))), bool(bvec3(bool(bool(_GLF_IDENTITY((true), ! (_GLF_IDENTITY(! ((true)), true && (! ((true)))))))), true, false))))) && true), false), true))), true, true)))), false || (bool(bvec2(_GLF_IDENTITY((true), (_GLF_IDENTITY((true), _GLF_IDENTITY(bool(bool((true))), bool(bvec3(bool(bool((true))), true, false))))) && true), false)))))), _GLF_IDENTITY(true, (true) || _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), (injectionSwitch.x > injectionSwitch.y))) && (! ((true)))))))))));
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
