#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))) || false, ((injectionSwitch.x > injectionSwitch.y) || false) && true))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))), (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec2(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))), (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))))) - length(vec2(0.0, 0.0))) > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))))), ! (! (bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, 0.0, 1.0, tan(0.0), cos(0.0), 0.0, cos(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0))) > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), true && (bool(bool(_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y) && true))))))))))))))), false, false)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, sin(0.0)), (false ? _GLF_FUZZED(mat3x4(-333.603, 41.97, -7.4, -6.6, _GLF_IDENTITY(-5.2, clamp(-5.2, -5.2, -5.2)), 5.3, -13.05, 6401.4903, 909.197, -62.25, 9.1, -3.1)) : mat3x4(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, sin(0.0))))), mix(vec2(_GLF_FUZZED((-5167.6124 + -630.437)), _GLF_FUZZED(-25.50)), vec2((vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 1.0, _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(4907.3142) : 1.0)))), 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, sin(0.0)), (_GLF_IDENTITY(false, bool(bvec2(false, true))) ? _GLF_FUZZED(mat3x4(-333.603, 41.97, -7.4, -6.6, -5.2, 5.3, -13.05, 6401.4903, 909.197, -62.25, 9.1, -3.1)) : mat3x4(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, sin(0.0))))))[_GLF_IDENTITY(0, (0) | (0))], _GLF_IDENTITY((vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, sin(0.0)), (false ? _GLF_FUZZED(mat3x4(-333.603, 41.97, -7.4, -6.6, -5.2, 5.3, -13.05, 6401.4903, 909.197, -62.25, 9.1, -3.1)) : mat3x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y, injectionSwitch.y))), 1.0, sin(0.0))))))[1], ((vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, sin(0.0)), (false ? _GLF_FUZZED(mat3x4(-333.603, 41.97, -7.4, -6.6, -5.2, 5.3, -13.05, 6401.4903, 909.197, -62.25, 9.1, -3.1)) : mat3x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y, injectionSwitch.y))), 1.0, sin(0.0))))))[1]) + 0.0)), bvec2(true, true)))).x < injectionSwitch.y)))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true))), true && (! (! (_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)))))), false, false)), true && (bool(bvec3(_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(6.8)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), min(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(6.8)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(6.8)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y, injectionSwitch.y))))), _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y), bool(bvec4((injectionSwitch.x < injectionSwitch.y), true, true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))))))))))), false, false))))), true && (bool(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, sin(0.0)), (false ? _GLF_FUZZED(mat3x4(-333.603, 41.97, -7.4, -6.6, _GLF_IDENTITY(-5.2, clamp(-5.2, -5.2, -5.2)), 5.3, -13.05, 6401.4903, 909.197, -62.25, 9.1, -3.1)) : mat3x4(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, sin(0.0))))), mix(vec2(_GLF_FUZZED((-5167.6124 + -630.437)), _GLF_FUZZED(-25.50)), vec2((vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 1.0, _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(4907.3142) : 1.0)))), 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, sin(0.0)), (_GLF_IDENTITY(false, bool(bvec2(false, true))) ? _GLF_FUZZED(mat3x4(-333.603, 41.97, -7.4, -6.6, -5.2, 5.3, -13.05, 6401.4903, 909.197, -62.25, 9.1, -3.1)) : mat3x4(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, sin(0.0))))))[_GLF_IDENTITY(0, (0) | (0))], _GLF_IDENTITY((vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, sin(0.0)), (false ? _GLF_FUZZED(mat3x4(-333.603, 41.97, -7.4, -6.6, -5.2, 5.3, -13.05, 6401.4903, 909.197, -62.25, 9.1, -3.1)) : mat3x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y, injectionSwitch.y))), 1.0, sin(0.0))))))[1], ((vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, sin(0.0)), (false ? _GLF_FUZZED(mat3x4(-333.603, 41.97, -7.4, -6.6, -5.2, 5.3, -13.05, 6401.4903, 909.197, -62.25, 9.1, -3.1)) : mat3x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y, injectionSwitch.y))), 1.0, sin(0.0))))))[1]) + 0.0)), bvec2(true, true)))).x < injectionSwitch.y)))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true))), true && (! (! (_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)))))), false, false)), true && (bool(bvec3(_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(6.8)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), min(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(6.8)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(6.8)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y, injectionSwitch.y))))), _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y), bool(bvec4((injectionSwitch.x < injectionSwitch.y), true, true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))))))))))), false, false))))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y))))
    return;
   return;
  }
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) : _GLF_FUZZED(-9.9)))) - sin(0.0)) > injectionSwitch.y, false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) : _GLF_FUZZED(-9.9)))) - sin(0.0), (true ? (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) : _GLF_FUZZED(-9.9)))) - sin(0.0) : _GLF_FUZZED(-4755.2563)))) > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), ((injectionSwitch.x)) / _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))) - 0.0) : _GLF_FUZZED(-9.9)))), _GLF_IDENTITY(float(vec3((_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), ((injectionSwitch.x)) / _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))) - 0.0) : _GLF_FUZZED(-9.9)))), 1.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))))), max(float(vec3((_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), ((injectionSwitch.x)) / _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))) - 0.0) : _GLF_FUZZED(-9.9)))), 1.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))))), float(vec3((_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), ((injectionSwitch.x)) / _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))) - 0.0) : _GLF_FUZZED(-9.9)))), 1.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0)))))))) - sin(0.0), (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false)))) ? (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) : _GLF_FUZZED(-9.9)))) - sin(0.0) : _GLF_FUZZED(-4755.2563)))) > injectionSwitch.y))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) : _GLF_FUZZED(-9.9)))) - sin(0.0), (true ? (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) : _GLF_FUZZED(-9.9)))) - sin(0.0) : _GLF_FUZZED(-4755.2563)))) > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) : _GLF_FUZZED(-9.9)))) - sin(0.0), (true ? (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) : _GLF_FUZZED(-9.9)))) - sin(0.0) : _GLF_FUZZED(-4755.2563)))) > injectionSwitch.y)), (! ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) : _GLF_FUZZED(-9.9)))) - sin(0.0), (true ? (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) : _GLF_FUZZED(-9.9)))) - sin(0.0) : _GLF_FUZZED(-4755.2563)))) > injectionSwitch.y))) || false), true, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) : _GLF_FUZZED(-9.9)))) - sin(0.0), (true ? (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) : _GLF_FUZZED(-9.9)))) - sin(0.0) : _GLF_FUZZED(-4755.2563)))) > injectionSwitch.y)), (! ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) : _GLF_FUZZED(-9.9)))) - sin(0.0), (true ? (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) : _GLF_FUZZED(-9.9)))) - sin(0.0) : _GLF_FUZZED(-4755.2563)))) > injectionSwitch.y))) || false), true, false), true)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) : _GLF_FUZZED(-9.9)))) - sin(0.0), (true ? (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) : _GLF_FUZZED(-9.9)))) - sin(0.0) : _GLF_FUZZED(-4755.2563)))) > injectionSwitch.y)), (! ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) : _GLF_FUZZED(-9.9)))) - sin(0.0), (true ? (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) : _GLF_FUZZED(-9.9)))) - sin(0.0) : _GLF_FUZZED(-4755.2563)))) > injectionSwitch.y))) || false), true, false), true)))))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, _GLF_IDENTITY(0u, (0u) / 1u), 0u)).x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size)), 0u, _GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) | (1u)), 1u, 1u)))))), (false ? _GLF_FUZZED(subgroup_id) : uint(uvec3(_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size)), 0u, _GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) | (1u)), 1u, 1u))))))))) * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) | 0u), ~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (workgroup_id), (_GLF_IDENTITY(~ (workgroup_id), (~ (workgroup_id)) >> 0u)) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(~ (workgroup_id), (_GLF_IDENTITY(~ (workgroup_id), (~ (workgroup_id)) >> 0u)) | 0u), (_GLF_IDENTITY(~ (workgroup_id), (_GLF_IDENTITY(~ (workgroup_id), (~ (workgroup_id)) >> 0u)) | 0u)) | (_GLF_IDENTITY(~ (workgroup_id), (_GLF_IDENTITY(~ (workgroup_id), (~ _GLF_IDENTITY((workgroup_id), uint(uvec2((workgroup_id), 1u)))) >> 0u)) | 0u)))) >> (1u ^ 1u)), _GLF_IDENTITY(clamp(~ (workgroup_id), ~ _GLF_IDENTITY((workgroup_id), _GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY((workgroup_id), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY((workgroup_id), max((workgroup_id), (workgroup_id))))), (workgroup_id)), (min(_GLF_IDENTITY((workgroup_id), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY((workgroup_id), max((workgroup_id), (workgroup_id))))), (workgroup_id))) / 1u), max(min(_GLF_IDENTITY((workgroup_id), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY((workgroup_id), 1u * ((workgroup_id))), max((workgroup_id), (workgroup_id))))), (workgroup_id)), min(_GLF_IDENTITY((workgroup_id), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY((workgroup_id), max((workgroup_id), (_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id)))))))), (workgroup_id))))), ~ (workgroup_id)), 0u | (clamp(~ (workgroup_id), ~ _GLF_IDENTITY((workgroup_id), _GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY((workgroup_id), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY((workgroup_id), max((workgroup_id), (workgroup_id))))), (workgroup_id)), (min(_GLF_IDENTITY((workgroup_id), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY((workgroup_id), max((workgroup_id), (workgroup_id))))), (workgroup_id))) / 1u), max(min(_GLF_IDENTITY((workgroup_id), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY((workgroup_id), 1u * ((workgroup_id))), max((workgroup_id), (workgroup_id))))), (workgroup_id)), min(_GLF_IDENTITY((workgroup_id), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY((workgroup_id), max((workgroup_id), (_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id)))))))), (workgroup_id))))), ~ (workgroup_id)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (workgroup_id), (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_id, (0u >> _GLF_IDENTITY(uint(3u), uint(3u))) ^ (workgroup_id))), (~ (workgroup_id)) >> 0u)) | 0u), clamp(~ (workgroup_id), ~ _GLF_IDENTITY((workgroup_id), _GLF_IDENTITY(min(_GLF_IDENTITY((workgroup_id), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY((workgroup_id), max((workgroup_id), (workgroup_id))))), (workgroup_id)), max(min(_GLF_IDENTITY((workgroup_id), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY((workgroup_id), max((workgroup_id), (workgroup_id))))), (workgroup_id)), min(_GLF_IDENTITY((workgroup_id), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY((workgroup_id), max((workgroup_id), (workgroup_id))))), (workgroup_id))))), ~ (workgroup_id))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(~ (workgroup_id), (_GLF_IDENTITY(~ (workgroup_id), _GLF_IDENTITY((~ (workgroup_id)), min((~ (workgroup_id)), (~ (workgroup_id)))) >> _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u & 168295u) | (0u)), 0u)))) | 0u), clamp(~ (workgroup_id), ~ _GLF_IDENTITY((workgroup_id), _GLF_IDENTITY(min(_GLF_IDENTITY((workgroup_id), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, (workgroup_id) >> 0u)), max((workgroup_id), _GLF_IDENTITY((workgroup_id), ~ (~ (_GLF_IDENTITY((workgroup_id), ((workgroup_id)) / 1u)))))))), (workgroup_id)), max(min(_GLF_IDENTITY((workgroup_id), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY((workgroup_id), max((workgroup_id), (workgroup_id))))), (workgroup_id)), min(_GLF_IDENTITY((workgroup_id), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY((workgroup_id), max((workgroup_id), (workgroup_id))))), (workgroup_id))))), ~ (workgroup_id))), _GLF_IDENTITY(_GLF_IDENTITY(~ (workgroup_id), (_GLF_IDENTITY(~ (workgroup_id), (~ (workgroup_id)) >> 0u)) | 0u), clamp(~ (workgroup_id), ~ _GLF_IDENTITY((workgroup_id), _GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY((workgroup_id), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY((workgroup_id), max((workgroup_id), (workgroup_id))))), (workgroup_id)), (min(_GLF_IDENTITY((workgroup_id), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY((workgroup_id), max((workgroup_id), (workgroup_id))))), (workgroup_id))) >> 0u), max(min(_GLF_IDENTITY((workgroup_id), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec4(bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, false, false)))) ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY((workgroup_id), max((workgroup_id), (workgroup_id))))), (_GLF_IDENTITY(workgroup_id, (workgroup_id) - 0u))), min(_GLF_IDENTITY((workgroup_id), (_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY((workgroup_id), ((workgroup_id)) ^ 0u), max((workgroup_id), (workgroup_id))), (_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY((workgroup_id), ((workgroup_id)) ^ 0u), max((workgroup_id), (workgroup_id))), 0u ^ (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY((workgroup_id), ((workgroup_id)) ^ 0u), max((workgroup_id), (workgroup_id)))))) | (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY((workgroup_id), ((workgroup_id)) ^ 0u), max((workgroup_id), (workgroup_id))))))), (workgroup_id))))), ~ (workgroup_id))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_id, 0u ^ (_GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id))))), (_GLF_IDENTITY(~ (workgroup_id), (~ (workgroup_id)) >> 0u)) | 0u), clamp(~ (workgroup_id), ~ _GLF_IDENTITY((workgroup_id), _GLF_IDENTITY(min(_GLF_IDENTITY((workgroup_id), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY((workgroup_id), max((workgroup_id), (workgroup_id))))), (workgroup_id)), _GLF_IDENTITY(max(min(_GLF_IDENTITY((workgroup_id), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY((workgroup_id), max((workgroup_id), (workgroup_id))))), (workgroup_id)), min(_GLF_IDENTITY((workgroup_id), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY((workgroup_id), max((workgroup_id), (workgroup_id))))), (workgroup_id))), ~ (~ (max(min(_GLF_IDENTITY((workgroup_id), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY((workgroup_id), max((workgroup_id), (workgroup_id))))), (_GLF_IDENTITY(workgroup_id, (workgroup_id) | (_GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id)))))), min(_GLF_IDENTITY((workgroup_id), (false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))) : _GLF_IDENTITY((workgroup_id), max((workgroup_id), (workgroup_id))))), (workgroup_id)))))))), _GLF_IDENTITY(~ (workgroup_id), (_GLF_IDENTITY(~ (workgroup_id), (~ (workgroup_id)) / 1u)) / 1u))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(~ (workgroup_id), (_GLF_IDENTITY(~ (workgroup_id), (~ (workgroup_id)) >> 0u)) | 0u), clamp(~ (workgroup_id), ~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, (workgroup_id) | 0u)), _GLF_IDENTITY(min(_GLF_IDENTITY((workgroup_id), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY((workgroup_id), max((workgroup_id), (workgroup_id))))), (workgroup_id)), max(min(_GLF_IDENTITY((workgroup_id), _GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, (workgroup_id) - 0u)), max((workgroup_id), (workgroup_id)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | ((false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, (workgroup_id) - 0u)), max((workgroup_id), (workgroup_id))))))), (workgroup_id)), min(_GLF_IDENTITY((workgroup_id), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY((workgroup_id), max((_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id))), (workgroup_id))))), (workgroup_id))))), ~ (workgroup_id))), _GLF_IDENTITY(_GLF_IDENTITY(~ (workgroup_id), (_GLF_IDENTITY(~ (workgroup_id), (~ (workgroup_id)) >> 0u)) | 0u), clamp(~ (workgroup_id), ~ _GLF_IDENTITY((workgroup_id), _GLF_IDENTITY(min(_GLF_IDENTITY((workgroup_id), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY((workgroup_id), max((workgroup_id), (workgroup_id))))), (workgroup_id)), max(min(_GLF_IDENTITY((workgroup_id), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY((workgroup_id), max((workgroup_id), (workgroup_id))))), _GLF_IDENTITY((workgroup_id), 0u | ((workgroup_id)))), min(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, max(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), _GLF_IDENTITY(workgroup_id, (workgroup_id) / 1u)))), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY((workgroup_id), max((workgroup_id), (workgroup_id))))), (_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (workgroup_id) >> 0u)) + 0u)))))), ~ (workgroup_id))), _GLF_IDENTITY(_GLF_IDENTITY(~ (workgroup_id), (_GLF_IDENTITY(~ (workgroup_id), (~ (workgroup_id)) >> 0u)) | 0u), clamp(~ (workgroup_id), ~ _GLF_IDENTITY((workgroup_id), _GLF_IDENTITY(min(_GLF_IDENTITY((workgroup_id), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY((workgroup_id), max((workgroup_id), (workgroup_id))))), (workgroup_id)), max(min(_GLF_IDENTITY((workgroup_id), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY((workgroup_id), max((workgroup_id), (workgroup_id))))), (workgroup_id)), min(_GLF_IDENTITY((workgroup_id), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY((workgroup_id), max((_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (workgroup_id) / 1u)) + 0u)), (workgroup_id))))), (workgroup_id))))), ~ (workgroup_id))))))))) + 0u));
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, _GLF_IDENTITY(true, (true) && true))), (bool(bvec3(false, true, true))) || false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true)))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true)))))))), true && (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true))))))))))) && true)), (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, true, true)), bool(bvec2(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, true, true)), false || (bool(bvec4(_GLF_DEAD(false), false, true, true)))), true)))))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (false ? _GLF_IDENTITY(_GLF_FUZZED((57509u + workgroup_id)), (_GLF_FUZZED((57509u + workgroup_id))) / 1u) : _GLF_IDENTITY(workgroup_base, 0u ^ (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))))))) + subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) - (0u | 0u)))) + _GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) / 1u, clamp((_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) / 1u, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) / 1u, max((_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) / 1u, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) / 1u)), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) / 1u, ((_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) / _GLF_IDENTITY(1u, (1u) | (1u))) | ((_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) / 1u))))), min(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) | (subgroup_size), 0u ^ (_GLF_IDENTITY((subgroup_size) | (subgroup_size), ((subgroup_size) | (subgroup_size)) - 0u))))) / 1u), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) | (subgroup_size), ((subgroup_size) | (_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))), ~ (~ (~ (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)))))))))) | (0u << _GLF_IDENTITY(uint(8u), uint(8u)))))) / 1u)))) | _GLF_IDENTITY((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (true ? _GLF_IDENTITY(uint(1u), uint(1u)) : _GLF_FUZZED(workgroup_id)))), (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(0u), uint(0u))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((1u << _GLF_IDENTITY(uint(0u), uint(0u))), ((1u << _GLF_IDENTITY(uint(0u), uint(0u)))) >> 0u) : _GLF_FUZZED(packUnorm2x16(vec2(2844.4135, 8.3))))) >> _GLF_IDENTITY(uint(0u), uint(0u))) * (_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(1u), uint(_GLF_IDENTITY(1u, max(1u, 1u))))), ((0u << _GLF_IDENTITY(uint(1u), uint(1u)))) >> 0u))))), (((_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)) + 1) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) / 1u, uint(uvec4(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) / 1u, 0u ^ ((_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) / 1u)), 1u, 0u, 1u))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) / 1u, (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) / 1u, ((_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) / 1u) << 0u)) | 0u), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) / 1u, max((_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) / 1u, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) / 1u)), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) / 1u, ((_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) / 1u) | ((_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) / 1u))))), min(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))) * 1u), (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) | (subgroup_size), ((subgroup_size) | (subgroup_size)) | (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(8u), uint(8u)), (0u << _GLF_IDENTITY(uint(8u), uint(8u))) ^ (147671u & 0u)))))) / 1u)))) | _GLF_IDENTITY((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), clamp(uint(1u), _GLF_IDENTITY(uint(1u), min(_GLF_IDENTITY(uint(1u), min(uint(1u), uint(1u))), uint(1u))), uint(1u))), uint(1u))), (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(0u), uint(0u))), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))) + sin(tan(vec2(0.0, 0.0)))).x < injectionSwitch.y)) ? (1u << _GLF_IDENTITY(uint(0u), uint(0u))) : _GLF_FUZZED(packUnorm2x16(vec2(2844.4135, _GLF_IDENTITY(8.3, (true ? _GLF_IDENTITY(8.3, float(mat4(8.3, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))) : _GLF_FUZZED(9.3)))))))) >> _GLF_IDENTITY(uint(0u), uint(0u))) * (_GLF_IDENTITY(_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(1u), uint(1u))), ((0u << _GLF_IDENTITY(uint(1u), uint(1u)))) >> 0u), (_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(1u), uint(1u))), ((0u << _GLF_IDENTITY(uint(1u), uint(1u)))) >> 0u)) | 0u)))))) | (((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) / 1u, clamp((_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) / 1u, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) / 1u, max((_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), subgroup_size))) | (subgroup_size))) / 1u, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) / 1u)), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) / 1u, ((_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) / 1u) | ((_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) / 1u))))), min(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) / 1u), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) | (subgroup_size), ((subgroup_size) | (subgroup_size)) | (0u << _GLF_IDENTITY(uint(8u), uint(8u)))))) / 1u)))) | _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(1u), uint(1u))), (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(0u), uint(0u))), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)) ? (1u << _GLF_IDENTITY(uint(0u), uint(0u))) : _GLF_FUZZED(packUnorm2x16(vec2(2844.4135, 8.3))))) >> _GLF_IDENTITY(uint(0u), uint(0u))) * (_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(1u), uint(1u))), ((0u << _GLF_IDENTITY(uint(1u), uint(1u)))) >> 0u))))))), (workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u)) >> 0u) * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))) ? subgroup_local_id : _GLF_FUZZED(_GLF_IDENTITY(workgroup_base, (workgroup_base) + 0u)))) + 1) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) / 1u)) | (0u << _GLF_IDENTITY(uint(1u), uint(1u)))))) >> 0u);
 if(_GLF_DEAD(false))
  return;
 buf[virtual_gid] = 1;
 for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) << (int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(5), int(5)))), max(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter)))))), (~ (_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter))))))) | 0))) < _GLF_IDENTITY(1, _GLF_IDENTITY((1), ~ (~ ((1)))) << 0)), ! _GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(_GLF_IDENTITY(1, (1) << 0), min(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1), (true ? (1) : _GLF_FUZZED((- -52155)))) << 0), min(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) - 0)) << 0), _GLF_IDENTITY(1, (1) << 0))), _GLF_IDENTITY(1, (1) << 0)))))), _GLF_IDENTITY(bool(bool((! (_GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1) << 0, ((1) << 0) << 0)), min(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) << 0), _GLF_IDENTITY(min(_GLF_IDENTITY(1, (1) << 0), _GLF_IDENTITY(1, (1) << 0)), 0 + (_GLF_IDENTITY(min(_GLF_IDENTITY(1, (1) << 0), _GLF_IDENTITY(1, (1) << 0)), min(min(_GLF_IDENTITY(1, (1) << 0), _GLF_IDENTITY(1, (1) << 0)), min(_GLF_IDENTITY(1, (1) << 0), _GLF_IDENTITY(1, (1) << 0))))))), _GLF_IDENTITY(1, (1) << 0)))))))), ! (! (bool(bool((! (_GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(_GLF_IDENTITY(1, (1) << 0), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), (1) << 0), min(_GLF_IDENTITY(1, (1) << 0), _GLF_IDENTITY(1, (1) << 0))), _GLF_IDENTITY(1, _GLF_IDENTITY((1) << 0, (false ? _GLF_FUZZED(_injected_loop_counter) : (1) << 0)))))))))))))), true && ((! (_GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(_GLF_IDENTITY(1, (1) << 0), min(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1) << 0, ((1) << 0) >> 0)), min(_GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) / 1) << 0), _GLF_IDENTITY(1, (1) << 0))), _GLF_IDENTITY(1, (1) << 0))))))))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    break;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (false))))
    break;
   if(subgroup_local_id + 1 < subgroup_size)
    {
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec4(! (_GLF_DEAD(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))))))
      {
       if(_GLF_DEAD(false))
        break;
       break;
      }
     int i = 0;
     atomicStore(buf[next_virtual_gid], uint(2), 4, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) | (64))) | 0), 4);
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      break;
     if(_GLF_DEAD(false))
      continue;
     atomicStore(buf[next_virtual_gid], uint(2), 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(4, (4) ^ 0), (_GLF_IDENTITY(4, (4) ^ 0)) | (_GLF_IDENTITY(4, (4) ^ 0))));
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(false))
      break;
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec2(bvec2(_GLF_DEAD(false), false)))))))
      continue;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       break;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (bool(false)))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (bool(false)))))), (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (bool(false))))))) || false)))))), ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(true && (bool(false)), (true && _GLF_IDENTITY((bool(false)), _GLF_IDENTITY(bool(bvec3((bool(false)), true, true)), ! (! (bool(bvec3((bool(false)), true, true))))))) || false))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), true, false, true))), true && (bool(false)))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (bool(false))))), ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && _GLF_IDENTITY((bool(false)), ((bool(false))) || false))))))))) || false)))))))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     continue;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))
      return;
     if(_GLF_DEAD(false))
      continue;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
