#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 0) uniform buf0 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uvec4 GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, abs(abs(0.0)) + (injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(16, (true ? 16 : _GLF_FUZZED((86798 >> 93097)))), min(_GLF_IDENTITY(16, (true ? 16 : _GLF_FUZZED((86798 >> 93097)))), _GLF_IDENTITY(_GLF_IDENTITY(16, (true ? 16 : _GLF_FUZZED((86798 >> 93097)))), 1 * (_GLF_IDENTITY(16, (true ? 16 : _GLF_FUZZED((86798 >> 93097))))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 0.0, tan(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, sqrt(0.0), 0.0, 0.0, 0.0))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, max(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(gl_NumWorkGroups.x, 1u, (0u ^ 1u))), 1u * (uint(uvec3(gl_NumWorkGroups.x, 1u, (0u ^ 1u))))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(gl_NumWorkGroups.x, 1u, _GLF_IDENTITY((0u ^ 1u), (false ? _GLF_FUZZED(subgroup_size) : (0u ^ 1u))))), 1u * (uint(uvec3(gl_NumWorkGroups.x, 1u, (0u ^ 1u))))), (_GLF_IDENTITY(uint(uvec3(gl_NumWorkGroups.x, 1u, (0u ^ 1u))), 1u * (uint(uvec3(gl_NumWorkGroups.x, 1u, (0u ^ 1u)))))) | 0u)))), (_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(gl_NumWorkGroups.x, 1u, (0u ^ 1u))), 1u * (uint(uvec3(gl_NumWorkGroups.x, 1u, (_GLF_IDENTITY(0u ^ 1u, (_GLF_IDENTITY(0u ^ 1u, (0u ^ 1u) | 0u)) | (0u ^ 1u))))))), _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec2(0u, 0u)), max(uint(uvec2(0u, 0u)), uint(uvec2(0u, 0u))))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(gl_NumWorkGroups.x, 1u, (0u ^ 1u))), 1u * (uint(uvec3(gl_NumWorkGroups.x, 1u, (0u ^ 1u))))), (_GLF_IDENTITY(uint(uvec3(gl_NumWorkGroups.x, 1u, (_GLF_IDENTITY(0u ^ 1u, min(0u ^ 1u, _GLF_IDENTITY(0u ^ 1u, (0u ^ 1u) / 1u)))))), 1u * (uint(uvec3(gl_NumWorkGroups.x, 1u, (0u ^ 1u)))))) | 0u))))) - 0u), gl_NumWorkGroups.x));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, ! (! ((_GLF_DEAD(false)) && true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0)), (true ? vec2(mat3x4(injectionSwitch, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0)) : _GLF_FUZZED(vec2(-5.3, 2992.9128))))))))[0], _GLF_FUZZED(_GLF_IDENTITY(-591.305, clamp(_GLF_IDENTITY(-591.305, clamp(_GLF_IDENTITY(-591.305, min(_GLF_IDENTITY(-591.305, (false ? _GLF_FUZZED(-9.4) : _GLF_IDENTITY(-591.305, (true ? -591.305 : _GLF_FUZZED(194.122))))), -591.305)), -591.305, -591.305)), -591.305, _GLF_IDENTITY(-591.305, (-591.305) / determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat4(0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 1.0, abs(1.0)))), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))))))), _GLF_IDENTITY(vec2(_GLF_FUZZED(148.896), (injectionSwitch)[_GLF_IDENTITY(1, (1) >> 0)]), min(vec2(_GLF_FUZZED(148.896), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[1]), vec2(_GLF_FUZZED(148.896), (injectionSwitch)[1]))), bvec2(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true)))), injectionSwitch)), (false ? _GLF_FUZZED(vec2(6676.4598, 7570.9899)) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))))).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), vec2(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))))))), (_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(6676.4598, _GLF_IDENTITY(7570.9899, (true ? _GLF_IDENTITY(7570.9899, max(7570.9899, 7570.9899)) : _GLF_IDENTITY(_GLF_FUZZED(2.6), min(_GLF_FUZZED(2.6), _GLF_FUZZED(2.6))))))) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (false ? _GLF_FUZZED(log2(vec2(_GLF_IDENTITY(77.15, (true ? 77.15 : _GLF_FUZZED(7014.0524))), 599.249))) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), vec2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(6676.4598, _GLF_IDENTITY(7570.9899, _GLF_IDENTITY((true ? _GLF_IDENTITY(7570.9899, max(7570.9899, 7570.9899)) : _GLF_IDENTITY(_GLF_FUZZED(2.6), min(_GLF_FUZZED(2.6), _GLF_FUZZED(2.6)))), clamp(_GLF_IDENTITY((true ? _GLF_IDENTITY(7570.9899, max(7570.9899, 7570.9899)) : _GLF_IDENTITY(_GLF_FUZZED(2.6), min(_GLF_FUZZED(2.6), _GLF_FUZZED(2.6)))), clamp((true ? _GLF_IDENTITY(7570.9899, max(7570.9899, 7570.9899)) : _GLF_IDENTITY(_GLF_FUZZED(2.6), min(_GLF_FUZZED(2.6), _GLF_FUZZED(2.6)))), (true ? _GLF_IDENTITY(7570.9899, max(7570.9899, 7570.9899)) : _GLF_IDENTITY(_GLF_FUZZED(2.6), min(_GLF_FUZZED(2.6), _GLF_FUZZED(2.6)))), (true ? _GLF_IDENTITY(7570.9899, max(7570.9899, 7570.9899)) : _GLF_IDENTITY(_GLF_FUZZED(2.6), min(_GLF_FUZZED(2.6), _GLF_FUZZED(2.6)))))), (true ? _GLF_IDENTITY(7570.9899, max(7570.9899, 7570.9899)) : _GLF_IDENTITY(_GLF_FUZZED(2.6), min(_GLF_FUZZED(2.6), _GLF_FUZZED(2.6)))), (true ? _GLF_IDENTITY(7570.9899, max(7570.9899, 7570.9899)) : _GLF_IDENTITY(_GLF_FUZZED(2.6), min(_GLF_FUZZED(2.6), _GLF_FUZZED(2.6))))))))) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (false ? _GLF_FUZZED(log2(vec2(77.15, 599.249))) : _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))), injectionSwitch)))), min(false ? _GLF_FUZZED(vec2(6676.4598, _GLF_IDENTITY(7570.9899, (true ? _GLF_IDENTITY(7570.9899, max(7570.9899, 7570.9899)) : _GLF_IDENTITY(_GLF_FUZZED(2.6), min(_GLF_FUZZED(2.6), _GLF_FUZZED(2.6))))))) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (false ? _GLF_FUZZED(log2(vec2(77.15, 599.249))) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), false ? _GLF_FUZZED(vec2(6676.4598, _GLF_IDENTITY(7570.9899, (true ? _GLF_IDENTITY(7570.9899, max(7570.9899, 7570.9899)) : _GLF_IDENTITY(_GLF_FUZZED(2.6), min(_GLF_FUZZED(2.6), _GLF_FUZZED(2.6))))))) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (false ? _GLF_FUZZED(log2(vec2(77.15, 599.249))) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))))), 1.0, 1.0, 0.0, 1.0), (mat3x2(_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(6676.4598, _GLF_IDENTITY(7570.9899, (true ? _GLF_IDENTITY(7570.9899, max(7570.9899, 7570.9899)) : _GLF_IDENTITY(_GLF_FUZZED(2.6), min(_GLF_FUZZED(2.6), _GLF_FUZZED(2.6))))))) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (false ? _GLF_FUZZED(log2(vec2(77.15, 599.249))) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), min(false ? _GLF_FUZZED(vec2(6676.4598, _GLF_IDENTITY(7570.9899, (true ? _GLF_IDENTITY(7570.9899, max(7570.9899, 7570.9899)) : _GLF_IDENTITY(_GLF_FUZZED(2.6), min(_GLF_FUZZED(2.6), _GLF_FUZZED(2.6))))))) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (false ? _GLF_FUZZED(log2(vec2(77.15, 599.249))) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), false ? _GLF_FUZZED(vec2(6676.4598, _GLF_IDENTITY(7570.9899, (true ? _GLF_IDENTITY(7570.9899, max(7570.9899, 7570.9899)) : _GLF_IDENTITY(_GLF_FUZZED(2.6), min(_GLF_FUZZED(2.6), _GLF_FUZZED(2.6))))))) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (false ? _GLF_FUZZED(log2(vec2(77.15, 599.249))) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))))), 1.0, 1.0, 0.0, 1.0)) * mat3(1.0)))))))).x > injectionSwitch.y)) && true))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-4.8)), bool(false)))))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), true && (_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bvec3(bool(_GLF_DEAD(false)), false, true)))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), true && (_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bvec3(bool(_GLF_DEAD(false)), false, true))))))), bool(bool(! (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), true && (_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bvec3(bool(_GLF_DEAD(false)), false, true))))))))))))))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(max(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)), gl_WorkGroupSize), (max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupSize, 0u), (uvec4(gl_WorkGroupSize, 0u)) | uvec4(0u, 0u, 0u, 0u)))), (gl_WorkGroupSize) | (gl_WorkGroupSize)), gl_WorkGroupSize)) << uvec3(0u, 0u, 0u)))[_GLF_IDENTITY(1, int(int(1)))], gl_WorkGroupSize[2])))).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.w = workgroup_size;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, true, false)), ! (_GLF_IDENTITY(! (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, true, false))), bool(bvec2(! (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, true, false))), false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, _GLF_IDENTITY(dot(vec2(0.0, log(1.0)), vec2(1.0, 1.0)), dot(vec2(0.0, log(1.0)), vec2(1.0, 1.0))), exp(0.0), 1.0, abs(1.0), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0), (mat4x3(injectionSwitch.x, _GLF_IDENTITY(dot(vec2(0.0, log(1.0)), vec2(1.0, 1.0)), dot(vec2(0.0, log(1.0)), vec2(1.0, 1.0))), exp(0.0), 1.0, abs(1.0), 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4(1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 1.0, 0.0, 0.0, 1.0, determinant(mat3(0.0, cos(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, exp(0.0), 1.0, 0.0, 1.0, determinant(mat4(1.0, 0.0, sqrt(0.0), log(1.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0)), 1.0, round(length(normalize(1.0))), _GLF_ONE(1.0, injectionSwitch.y)), transpose(transpose(mat4(1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 1.0, 0.0, 0.0, 1.0, determinant(mat3(0.0, cos(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, exp(0.0), 1.0, 0.0, 1.0, determinant(mat4(1.0, 0.0, sqrt(0.0), log(1.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0)), 1.0, round(length(normalize(1.0))), _GLF_ONE(1.0, injectionSwitch.y))))))), 1.0, 0.0, 1.0)) * mat4(1.0))), 0.0 + (float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, _GLF_IDENTITY(dot(vec2(0.0, log(1.0)), vec2(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)), max(float(mat2x4(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)), float(mat2x4(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0))))))), min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)))), dot(vec2(0.0, log(1.0)), vec2(1.0, 1.0))), exp(0.0), 1.0, abs(1.0), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0), (mat4x3(injectionSwitch.x, _GLF_IDENTITY(dot(vec2(0.0, log(1.0)), vec2(1.0, 1.0)), dot(vec2(0.0, log(1.0)), vec2(1.0, 1.0))), exp(0.0), 1.0, abs(1.0), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0)) * mat4(1.0)))))) > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, true))), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, true)))) || false))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, true))), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, true)))) || false)))) || false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), vec4(mat4x3(vec4(injectionSwitch, 1.0, 1.0), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0))))).x > injectionSwitch.y))))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, min(gl_WorkGroupID.x, gl_WorkGroupID.x));
 GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.z = workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))), false)))), bvec2(bvec4(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec4(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-723.190) : _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), true), false, true))), false, false)))), _GLF_IDENTITY((bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))), false || ((bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))) && true))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 uint workgroup_base = _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.w * _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size, uvec4(GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size[0], GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size[1], GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size[2], _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size[3], uint(_GLF_IDENTITY(uint(GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size[_GLF_IDENTITY(3, (false ? _GLF_FUZZED(-95291) : 3))]), (uint(GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size[3])) | 0u))))).z, (true ? _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.w, max(GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.w, GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.w)) * _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.z, min(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.z, clamp(GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.z, GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.z, GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.z)), GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.z)), (GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.w * GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.z) | 0u) : _GLF_FUZZED(subgroup_local_id)));
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.y = workgroup_base;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
    barrier();
   barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.y, (GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.y) / 1u) + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! _GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY((false), false || ((false))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, false, true)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x < injectionSwitch.y))))) && (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))))), (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))) || false), false, false, true)), bool(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), false || (! ((false))))))), false, false, true)), false || (bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, false, true)))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), false)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(float(mat2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), 1.0, 1.0, 0.0)), max(float(mat2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), 1.0, 1.0, 0.0)), float(mat2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), 1.0, 1.0, 0.0)))), mix(float(_GLF_IDENTITY(float(mat2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), 1.0, 1.0, 0.0)), max(float(mat2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), 1.0, 1.0, 0.0)), float(mat2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), 1.0, 1.0, 0.0))))), float(_GLF_FUZZED(3.6)), bool(false)))) < injectionSwitch.y))))), false)), bool(bvec3(bool(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false)), true, false)))) && (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))))), false, false, true)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, false, true)), false, false))))) && true))), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, false, true)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x < injectionSwitch.y))))) && (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))))), (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))) || false), false, false, true)), bool(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), false || (! ((false))))))), false, false, true)), false || (bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, false, true)))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), false)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(float(mat2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), 1.0, 1.0, 0.0)), max(float(mat2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), 1.0, 1.0, 0.0)), float(mat2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), 1.0, 1.0, 0.0)))), mix(float(_GLF_IDENTITY(float(mat2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), 1.0, 1.0, 0.0)), max(float(mat2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), 1.0, 1.0, 0.0)), float(mat2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), 1.0, 1.0, 0.0))))), float(_GLF_FUZZED(3.6)), bool(false)))) < injectionSwitch.y))))), false)), bool(bvec3(bool(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false)), true, false)))) && (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))))), false, false, true)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, false, true)), false, false))))) && true))), true), false)), bvec2(bvec3(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, false, true)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x < injectionSwitch.y))))) && (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))))), (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))) || false), false, false, true)), bool(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), false || (! ((false))))))), false, false, true)), false || (bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, false, true)))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), false)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(float(mat2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), 1.0, 1.0, 0.0)), max(float(mat2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), 1.0, 1.0, 0.0)), float(mat2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), 1.0, 1.0, 0.0)))), mix(float(_GLF_IDENTITY(float(mat2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), 1.0, 1.0, 0.0)), max(float(mat2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), 1.0, 1.0, 0.0)), float(mat2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), 1.0, 1.0, 0.0))))), float(_GLF_FUZZED(3.6)), bool(false)))) < injectionSwitch.y))))), false)), bool(bvec3(bool(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false)), true, false)))) && (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))))), false, false, true)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, false, true)), false, false))))) && true))), true), false)), false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), _GLF_IDENTITY(bool(bvec2(false || (false), false)), false || (bool(bvec2(_GLF_IDENTITY(false, false || (false)) || (false), false)))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(bool((false))))) && true)), false, false, true)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), sqrt(0.0), 0.0, 0.0, 1.0), mat2x3(_GLF_IDENTITY(mat2x4(mat2x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), sqrt(0.0), 0.0, 0.0, 1.0)), mat4(1.0) * (mat2x4(mat2x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), sqrt(0.0), 0.0, 0.0, 1.0))))))), (vec2(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), sqrt(0.0), 0.0, 0.0, 1.0), mat2x3(_GLF_IDENTITY(mat2x4(mat2x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), sqrt(0.0), 0.0, 0.0, 1.0)), mat4(1.0) * (mat2x4(mat2x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), sqrt(0.0), 0.0, 0.0, 1.0)))))))) / vec2(1.0, 1.0))).y)))), bool(bvec4(! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))) && (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))))), false, false, true)), bool(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, false, true)), false || (bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, false, true)))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (! (! (false)))))), false)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-3384.6877), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(float(false))), bvec2(true, false))).x, _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), 1.0, 1.0, 0.0)), max(float(mat2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), 1.0, 1.0, 0.0)), float(mat2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), 1.0, 1.0, 0.0))))) < injectionSwitch.y))))), false)), bool(bvec3(bool(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false)), true, false)))) && (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false)))))), true, true))))), false, false, true)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, false, true)), false, false))))) && true))), true)))) || false)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   barrier();
  }
 uint next_virtual_gid = GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.y + subgroup_id * subgroup_size + _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2((subgroup_local_id + 1), 0u), _GLF_IDENTITY((uvec2((subgroup_local_id + 1), 0u)) << uvec2(0u, 0u), ((uvec2((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1)))), 0u)) << uvec2(0u, 0u)) >> uvec2(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)) / 1.0), 1.0, 1.0, 0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), sqrt(0.0), 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), determinant(mat2(1.0, 0.0, 0.0, 1.0)))), float(mat4x3(float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)) / 1.0), 1.0, 1.0, 0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-4.7)), float(0.0), bool(true))), min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0))) - 0.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), sqrt(0.0), 1.0, 0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))), 1.0, 0.0, 0.0, 1.0, abs(1.0), 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(351.375)), bool(false))), 1.0, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, 0.0))))), _GLF_ZERO(0.0, injectionSwitch.x))))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2((subgroup_local_id + 1), 0u), (uvec2(_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1))), 0u)) << uvec2(0u, 0u)), max(_GLF_IDENTITY(uvec2((subgroup_local_id + 1), 0u), (uvec2(_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1))), 0u)) << uvec2(0u, 0u)), _GLF_IDENTITY(uvec2((subgroup_local_id + 1), 0u), (uvec2(_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1))), 0u)) << uvec2(0u, 0u)))))) - (1u ^ 1u))) % _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))), (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)) + 1), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2((subgroup_local_id + 1), 0u), _GLF_IDENTITY(_GLF_IDENTITY((uvec2((subgroup_local_id + 1), 0u)) << uvec2(0u, 0u), ((uvec2((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1)))), 0u)) << uvec2(0u, 0u)) >> uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY((uvec2((subgroup_local_id + 1), 0u)) << uvec2(0u, 0u), ((uvec2((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1)))), 0u)) << uvec2(0u, 0u)) >> uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))) | (_GLF_IDENTITY((uvec2((subgroup_local_id + 1), 0u)) << uvec2(0u, 0u), ((uvec2((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1)))), 0u)) << uvec2(0u, 0u)) >> uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))), (_GLF_IDENTITY(uvec2((subgroup_local_id + 1), 0u), _GLF_IDENTITY(_GLF_IDENTITY((uvec2((subgroup_local_id + 1), 0u)) << uvec2(0u, 0u), ((uvec2((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1)))), 0u)) << uvec2(0u, 0u)) >> uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY((uvec2((subgroup_local_id + 1), 0u)) << uvec2(0u, 0u), ((uvec2((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1)))), 0u)) << uvec2(0u, 0u)) >> uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))) | (_GLF_IDENTITY((uvec2((subgroup_local_id + 1), 0u)) << uvec2(0u, 0u), ((uvec2((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1)))), 0u)) << uvec2(0u, 0u)) >> uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))) | uvec2(0u, 0u))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2((subgroup_local_id + 1), 0u), (_GLF_IDENTITY(uvec2(_GLF_IDENTITY((subgroup_local_id + 1), max((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1), _GLF_IDENTITY((subgroup_local_id + 1), 0u | ((subgroup_local_id + 1))))), 0u), (uvec2(_GLF_IDENTITY((subgroup_local_id + 1), max((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1), _GLF_IDENTITY((subgroup_local_id + 1), 0u | ((subgroup_local_id + 1))))), 0u)) >> uvec2(0u, 0u))) << uvec2(0u, 0u))), (uint(_GLF_IDENTITY(uvec2((subgroup_local_id + 1), 0u), (_GLF_IDENTITY(uvec2(_GLF_IDENTITY((subgroup_local_id + 1), max((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1), _GLF_IDENTITY((subgroup_local_id + 1), 0u | ((subgroup_local_id + 1))))), 0u), (uvec2(_GLF_IDENTITY((subgroup_local_id + 1), max((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1), _GLF_IDENTITY((subgroup_local_id + 1), 0u | ((subgroup_local_id + 1))))), 0u)) >> uvec2(0u, 0u))) << uvec2(0u, 0u)))) | (uint(_GLF_IDENTITY(uvec2((subgroup_local_id + 1), 0u), (_GLF_IDENTITY(uvec2(_GLF_IDENTITY((subgroup_local_id + 1), max((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1), 0u | ((subgroup_local_id + 1))))), 0u), (uvec2(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1))), max((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1), _GLF_IDENTITY((subgroup_local_id + 1), 0u | ((subgroup_local_id + 1))))), 0u)) >> uvec2(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))) << uvec2(0u, 0u)))))) - (1u ^ 1u))) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), (subgroup_size) | (subgroup_size))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2((subgroup_local_id + 1), 0u), _GLF_IDENTITY((uvec2(_GLF_IDENTITY((subgroup_local_id + 1), 0u + ((subgroup_local_id + 1))), 0u)) << uvec2(0u, 0u), ((uvec2((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1)))), 0u)) << uvec2(0u, 0u)) >> uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), (uint(_GLF_IDENTITY(uvec2((subgroup_local_id + 1), 0u), (uvec2(_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)), _GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) ^ 0u)) - 0u))), 0u)) << uvec2(0u, 0u)))) - (1u ^ 1u))) % _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))), ((_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2((subgroup_local_id + 1), 0u), _GLF_IDENTITY((uvec2(_GLF_IDENTITY((subgroup_local_id + 1), 0u + ((subgroup_local_id + 1))), 0u)) << uvec2(0u, 0u), ((uvec2((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), 0 + (_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), min(_GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(1, ~ (~ (1)))))))), 0u)) << uvec2(0u, 0u)) >> uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), (uint(_GLF_IDENTITY(uvec2((subgroup_local_id + 1), 0u), (uvec2(_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)), _GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) ^ 0u)) - 0u))), 0u)) << uvec2(0u, 0u)))) - (1u ^ 1u))) % _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))) * 1u))))) << 0u);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, (true) && true) && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(mat4x3(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-7.9)), bool(false))), 1.0, 0.0, 0.0, 0.0, 0.0, sqrt(0.0), 0.0, 0.0, sin(0.0), 0.0))), 1.0))) * (injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED((+ -155.935)), _GLF_FUZZED(vec2(-59.34, -49.83).r)), bvec2(false, false))), _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))), injectionSwitch))))[1])).y)))), true && (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))))), ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) >> 0)])).y))))) && true))) || false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.x = next_virtual_gid;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((injectionSwitch + vec2(-27.95, -55.26))) : injectionSwitch)).y, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((injectionSwitch + vec2(-27.95, -55.26))) : injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((injectionSwitch + vec2(-27.95, -55.26))) : injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((injectionSwitch + vec2(-27.95, -55.26))) : injectionSwitch)).y)))) || _GLF_IDENTITY((false), ! (! ((false)))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true))))) || false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(distance(injectionSwitch, vec2(4.6, 7.4)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), bool(bool((false))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 buf[virtual_gid] = 1;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
  barrier();
 if(subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)) < _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, true))), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec2(bvec2(false, true))), true, true)), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec4(bvec2(bvec2(bvec2(false, true))), true, true))), bvec2(bvec2(bvec2(bvec2(bvec4(bvec2(bvec2(bvec2(false, true))), true, true))))))))))), (bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) || false))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec3(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-5434.2963)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   int i = 0;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec4(! (_GLF_DEAD(false)), true, false, false))))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   atomicStore(buf[_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.x, _GLF_IDENTITY((GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.x) / 1u, uint(uint(_GLF_IDENTITY((GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.x) / 1u, ((GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.x) / 1u) << 0u)))))], uint(2), 4, _GLF_IDENTITY(64, 0 + (64)), _GLF_IDENTITY(_GLF_IDENTITY(4, (4) ^ 0), min(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) ^ 0), int(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) ^ 0), (true ? _GLF_IDENTITY(4, (4) ^ 0) : _GLF_FUZZED(-46425)))), (int(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) ^ 0), (true ? _GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ (4))), (4) ^ 0) : _GLF_FUZZED(-46425))))) >> 0))), _GLF_IDENTITY(4, (4) ^ 0))));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) && _GLF_IDENTITY(true, false || (true)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, injectionSwitch.y))))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), true && _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))), ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))) || false)))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false))))))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), true, false)))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0, 0.0, 0.0))).y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) - vec2(0.0, 0.0)).y))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))))), (_GLF_IDENTITY(false, false || (false))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-30.36)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), _GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))))) ? _GLF_FUZZED(findMSB((_injected_loop_counter / _injected_loop_counter))) : _GLF_IDENTITY(0, (0) ^ 0))) | (~ (1)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-9527.9756))))))) ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(0 | (~ (1)), (0 | (~ (1))) | (_GLF_IDENTITY(0 | (_GLF_IDENTITY(~ (1), int(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(~ (1), (_GLF_IDENTITY(0 & 91726, (0 & 91726) >> 0)) ^ (~ (1)))))), (0 | (~ (1))) | _GLF_IDENTITY((0 << _GLF_IDENTITY(int(8), int(8))), clamp((0 << _GLF_IDENTITY(int(8), int(8))), (0 << _GLF_IDENTITY(int(8), int(8))), _GLF_IDENTITY(_GLF_IDENTITY((0 << _GLF_IDENTITY(int(8), int(8))), ~ (~ ((0 << _GLF_IDENTITY(int(8), int(8)))))), _GLF_IDENTITY(int(int(_GLF_IDENTITY((0 << _GLF_IDENTITY(int(8), int(8))), ~ (~ ((0 << _GLF_IDENTITY(int(8), int(8)))))))), (_GLF_IDENTITY(int(int(_GLF_IDENTITY((0 << _GLF_IDENTITY(int(8), int(8))), ~ (~ ((0 << _GLF_IDENTITY(int(8), int(8)))))))), max(int(int(_GLF_IDENTITY((0 << _GLF_IDENTITY(int(8), int(8))), ~ (~ ((0 << _GLF_IDENTITY(int(8), int(8)))))))), int(int(_GLF_IDENTITY((0 << _GLF_IDENTITY(int(8), int(8))), ~ (~ ((0 << _GLF_IDENTITY(int(8), int(8))))))))))) << (0 >> _GLF_IDENTITY(int(7), int(7)))))))))), max(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-9527.9756))))))) ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(0 | (~ (1)), (0 | (~ (1))) | (_GLF_IDENTITY(0 | (_GLF_IDENTITY(~ (1), int(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(~ (1), (_GLF_IDENTITY(0 & 91726, (0 & 91726) >> 0)) ^ (~ (1)))))), (0 | (~ (1))) | _GLF_IDENTITY((0 << _GLF_IDENTITY(int(8), int(8))), clamp((0 << _GLF_IDENTITY(int(8), int(8))), (0 << _GLF_IDENTITY(int(8), int(8))), _GLF_IDENTITY(_GLF_IDENTITY((0 << _GLF_IDENTITY(int(8), int(8))), ~ (~ ((0 << _GLF_IDENTITY(int(8), int(8)))))), _GLF_IDENTITY(int(int(_GLF_IDENTITY((0 << _GLF_IDENTITY(int(8), int(8))), ~ (~ ((0 << _GLF_IDENTITY(int(8), int(8)))))))), (_GLF_IDENTITY(int(int(_GLF_IDENTITY((0 << _GLF_IDENTITY(int(8), int(8))), ~ (~ ((0 << _GLF_IDENTITY(int(8), int(8)))))))), max(int(int(_GLF_IDENTITY((0 << _GLF_IDENTITY(int(8), int(8))), ~ (~ ((0 << _GLF_IDENTITY(int(8), int(8)))))))), int(int(_GLF_IDENTITY((0 << _GLF_IDENTITY(int(8), int(8))), ~ (~ ((0 << _GLF_IDENTITY(int(8), int(8))))))))))) << (0 >> _GLF_IDENTITY(int(7), int(7)))))))))), _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-9527.9756))))))) ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(0 | (~ (1)), (0 | (~ (1))) | (_GLF_IDENTITY(0 | (_GLF_IDENTITY(~ (1), int(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(~ (1), (_GLF_IDENTITY(0 & 91726, (0 & 91726) >> 0)) ^ (~ (1)))))), (0 | (~ (1))) | _GLF_IDENTITY((0 << _GLF_IDENTITY(int(8), int(8))), clamp((0 << _GLF_IDENTITY(int(8), int(8))), (0 << _GLF_IDENTITY(int(8), int(8))), _GLF_IDENTITY(_GLF_IDENTITY((0 << _GLF_IDENTITY(int(8), int(8))), ~ (~ ((0 << _GLF_IDENTITY(int(8), int(8)))))), _GLF_IDENTITY(int(int(_GLF_IDENTITY((0 << _GLF_IDENTITY(int(8), int(8))), ~ (~ ((0 << _GLF_IDENTITY(int(8), int(8)))))))), (_GLF_IDENTITY(int(int(_GLF_IDENTITY((0 << _GLF_IDENTITY(int(8), int(8))), ~ (~ ((0 << _GLF_IDENTITY(int(8), int(8)))))))), max(int(int(_GLF_IDENTITY((0 << _GLF_IDENTITY(int(8), int(8))), ~ (~ ((0 << _GLF_IDENTITY(int(8), int(8)))))))), int(int(_GLF_IDENTITY((0 << _GLF_IDENTITY(int(8), int(8))), ~ (~ ((0 << _GLF_IDENTITY(int(8), int(8))))))))))) << (0 >> _GLF_IDENTITY(int(7), int(7)))))))))), min(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-9527.9756))))))) ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(0 | (~ (1)), (0 | (~ (1))) | (_GLF_IDENTITY(0 | (_GLF_IDENTITY(~ (1), int(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(~ (1), (_GLF_IDENTITY(0 & 91726, (0 & 91726) >> 0)) ^ (~ (1)))))), (0 | (~ (1))) | _GLF_IDENTITY((0 << _GLF_IDENTITY(int(8), int(8))), clamp((0 << _GLF_IDENTITY(int(8), int(8))), (0 << _GLF_IDENTITY(int(8), int(8))), _GLF_IDENTITY(_GLF_IDENTITY((0 << _GLF_IDENTITY(int(8), int(8))), ~ (~ ((0 << _GLF_IDENTITY(int(8), int(8)))))), _GLF_IDENTITY(int(int(_GLF_IDENTITY((0 << _GLF_IDENTITY(int(8), int(8))), ~ (~ ((0 << _GLF_IDENTITY(int(8), int(8)))))))), (_GLF_IDENTITY(int(int(_GLF_IDENTITY((0 << _GLF_IDENTITY(int(8), int(8))), ~ (~ ((0 << _GLF_IDENTITY(int(8), int(8)))))))), max(int(int(_GLF_IDENTITY((0 << _GLF_IDENTITY(int(8), int(8))), ~ (~ ((0 << _GLF_IDENTITY(int(8), int(8)))))))), int(int(_GLF_IDENTITY((0 << _GLF_IDENTITY(int(8), int(8))), ~ (~ ((0 << _GLF_IDENTITY(int(8), int(8))))))))))) << (0 >> _GLF_IDENTITY(int(7), int(7)))))))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-9527.9756))))))) ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(0 | (~ (1)), (0 | (~ (1))) | (_GLF_IDENTITY(0 | (_GLF_IDENTITY(~ (1), int(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(~ (1), (_GLF_IDENTITY(0 & 91726, (0 & 91726) >> 0)) ^ (~ (1)))))), (0 | (~ (1))) | _GLF_IDENTITY((0 << _GLF_IDENTITY(int(8), int(8))), clamp((0 << _GLF_IDENTITY(int(8), int(8))), (0 << _GLF_IDENTITY(int(8), int(8))), _GLF_IDENTITY(_GLF_IDENTITY((0 << _GLF_IDENTITY(int(8), int(8))), ~ (~ ((0 << _GLF_IDENTITY(int(8), int(8)))))), _GLF_IDENTITY(int(int(_GLF_IDENTITY((0 << _GLF_IDENTITY(int(8), int(8))), ~ (~ ((0 << _GLF_IDENTITY(int(8), int(8)))))))), (_GLF_IDENTITY(int(int(_GLF_IDENTITY((0 << _GLF_IDENTITY(int(8), int(8))), ~ (~ ((0 << _GLF_IDENTITY(int(8), int(8)))))))), max(int(int(_GLF_IDENTITY((0 << _GLF_IDENTITY(int(8), int(8))), ~ (~ ((0 << _GLF_IDENTITY(int(8), int(8)))))))), int(int(_GLF_IDENTITY((0 << _GLF_IDENTITY(int(8), int(8))), ~ (~ ((0 << _GLF_IDENTITY(int(8), int(8))))))))))) << (0 >> _GLF_IDENTITY(int(7), int(7))))))))))))))), ~ (~ _GLF_IDENTITY(((_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))))) / 1.0) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-9527.9756))))))) ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(0 | (~ (1)), (0 | _GLF_IDENTITY((~ (1)), int(ivec4((~ (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ 0)) / 1))), (1 ^ 0), 1, 0)))) | (_GLF_IDENTITY(0 | (_GLF_IDENTITY(~ (1), int(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(~ (1), _GLF_IDENTITY((0 & 91726) ^ (~ (1)), min(_GLF_IDENTITY((_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) << 0)) ^ 0) & 91726) ^ (~ (1)), ((0 & 91726) ^ (~ (1))) | 0), (0 & 91726) ^ (~ (1)))))))), (0 | (~ (1))) | _GLF_IDENTITY((0 << _GLF_IDENTITY(int(8), int(8))), clamp((0 << _GLF_IDENTITY(int(8), int(8))), (0 << _GLF_IDENTITY(int(8), int(8))), _GLF_IDENTITY((0 << _GLF_IDENTITY(int(_GLF_IDENTITY(8, (8) >> 0)), int(8))), ~ (~ ((0 << _GLF_IDENTITY(int(8), int(8))))))))))))), (true ? _GLF_IDENTITY(((_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))))) / 1.0) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-9527.9756))))))) ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(0 | (~ (1)), (0 | _GLF_IDENTITY((~ (1)), int(ivec4((~ (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ 0)) / 1))), (1 ^ 0), 1, 0)))) | (_GLF_IDENTITY(0 | (_GLF_IDENTITY(~ (1), int(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(~ (1), _GLF_IDENTITY((0 & 91726) ^ (~ (1)), min(_GLF_IDENTITY((_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) << 0)) ^ 0) & 91726) ^ (~ (1)), ((0 & 91726) ^ (~ (1))) | 0), (0 & 91726) ^ (~ (1)))))))), (0 | (~ (1))) | _GLF_IDENTITY((0 << _GLF_IDENTITY(int(8), int(8))), clamp((0 << _GLF_IDENTITY(int(8), int(8))), (0 << _GLF_IDENTITY(int(8), int(8))), _GLF_IDENTITY((0 << _GLF_IDENTITY(int(_GLF_IDENTITY(8, (8) >> 0)), int(8))), ~ (~ ((0 << _GLF_IDENTITY(int(8), int(8))))))))))))), (((_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))))) / 1.0) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-9527.9756))))))) ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(0 | (~ (1)), (0 | _GLF_IDENTITY((~ (1)), int(ivec4((~ (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ 0)) / 1))), (1 ^ 0), 1, 0)))) | (_GLF_IDENTITY(0 | (_GLF_IDENTITY(~ (1), int(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(~ (1), _GLF_IDENTITY((0 & 91726) ^ (~ (1)), min(_GLF_IDENTITY((_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) << 0)) ^ 0) & 91726) ^ (~ (1)), ((0 & 91726) ^ (~ (1))) | 0), (0 & 91726) ^ (~ (1)))))))), (0 | (~ (1))) | _GLF_IDENTITY((0 << _GLF_IDENTITY(int(8), int(8))), clamp((0 << _GLF_IDENTITY(int(8), int(8))), (0 << _GLF_IDENTITY(int(8), int(8))), _GLF_IDENTITY((0 << _GLF_IDENTITY(int(_GLF_IDENTITY(8, (8) >> 0)), int(8))), ~ (~ ((0 << _GLF_IDENTITY(int(8), int(8)))))))))))))) | 0) : _GLF_FUZZED(_injected_loop_counter))))))))), 1)), (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (1), 0 | (~ (1)))), ((_GLF_IDENTITY(~ (1), 0 | (~ (1))))) | _GLF_IDENTITY(0, 0 ^ (0)))), 1))) >> 0), _GLF_IDENTITY((_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, max(1, 1)), 1, 1))), (_GLF_IDENTITY((_GLF_IDENTITY(1, clamp(1, 1, 1))), ((_GLF_IDENTITY(1, clamp(1, 1, 1)))) | _GLF_IDENTITY(((_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), ~ (_GLF_IDENTITY(~ (clamp(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, 0 ^ (1)), 1, _GLF_IDENTITY(1, (1) ^ 0))), 1, 1)), (~ (clamp(1, 1, 1))) << 0)))))), min(((_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), ~ (_GLF_IDENTITY(~ (clamp(1, 1, 1)), (~ (clamp(1, 1, 1))) << 0)))))), _GLF_IDENTITY(((_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), ~ (_GLF_IDENTITY(~ (clamp(1, 1, 1)), (~ (clamp(1, 1, 1))) << 0)))))), (((_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), ~ (_GLF_IDENTITY(~ (clamp(1, 1, 1)), (~ (clamp(1, 1, 1))) << 0))))))) >> int(_GLF_ZERO(0.0, injectionSwitch.x))))))) | ((_GLF_IDENTITY(1, clamp(1, 1, 1))))) ^ 0)); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     atomicStore(buf[GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.x], uint(2), 4, 64, 4);
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec2(false, true)))))
    barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
