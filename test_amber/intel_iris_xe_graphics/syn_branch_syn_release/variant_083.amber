#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, true))), true)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false))), true, false)), true && (bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false))), true, false)))))))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, 1u * (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, max(workgroup_id, _GLF_IDENTITY(workgroup_id, (workgroup_id) ^ _GLF_IDENTITY(0u, (0u) / 1u)))), min(workgroup_id, workgroup_id)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, 1u * (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)))), (_GLF_IDENTITY(workgroup_id, 1u * (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))))) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, 1u * _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(min(workgroup_id, workgroup_id), (min(workgroup_id, workgroup_id)) | 0u))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), max((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), ~ (~ ((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))))))))) << 0u, max(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), max((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), ~ (~ ((_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(min(workgroup_id, workgroup_id), min(min(workgroup_id, workgroup_id), _GLF_IDENTITY(min(workgroup_id, workgroup_id), clamp(min(workgroup_id, workgroup_id), min(workgroup_id, workgroup_id), min(workgroup_id, workgroup_id))))))))))))) << 0u, 0u + ((_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), max((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), ~ (~ ((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))))))))) << 0u)), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), max((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), ~ (~ ((_GLF_IDENTITY(workgroup_id, min(_GLF_IDENTITY(workgroup_id, (true ? workgroup_id : _GLF_FUZZED(subgroup_size))), workgroup_id))))))))) << 0u)), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), max((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), ~ (~ ((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))))))))) << 0u, max(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), max((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(min(workgroup_id, workgroup_id), min(min(workgroup_id, workgroup_id), min(workgroup_id, workgroup_id))))), ~ (~ ((_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(min(workgroup_id, workgroup_id), ~ (~ (_GLF_IDENTITY(min(workgroup_id, workgroup_id), uint(_GLF_IDENTITY(uvec2(min(workgroup_id, workgroup_id), uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(uvec2(min(workgroup_id, workgroup_id), uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(min(workgroup_id, workgroup_id), uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(min(workgroup_id, workgroup_id), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))))))))))))) << 0u, 0u + ((_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), max((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), ~ (~ ((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))))))))) << 0u)), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), max((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), ~ (~ ((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))))))))) << 0u)), clamp(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), _GLF_IDENTITY(max((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), ~ (~ ((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))))))), (max((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), ~ (~ ((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)))))))) ^ 0u))) << 0u, max(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), max((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), ~ (~ ((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))))))))) << 0u, 0u + ((_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), max((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), ~ (~ ((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))))))))) << 0u)), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), max((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), ~ (~ ((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))))))))) << 0u)), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), max((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), ~ (~ ((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))))))))) << 0u, max(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), max((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), ~ (~ ((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))))))))) << 0u, 0u + ((_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), max((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), ~ (~ ((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))))))))) << 0u)), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), max((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), ~ (~ ((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))))))))) << 0u)), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), max((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), ~ (~ ((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))))))))) << 0u, max(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), max((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), ~ (~ ((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))))))))) << 0u, 0u + ((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (workgroup_id) | (_GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id))))) | (_GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED(workgroup_size) : workgroup_id)))), min(workgroup_id, workgroup_id))), max((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), ~ (~ ((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))))))))) << 0u)), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), max((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), ~ (~ ((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))))))))) << 0u)))), 1u))))), _GLF_IDENTITY(min(_GLF_IDENTITY(workgroup_id, 1u * (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)))), _GLF_IDENTITY(workgroup_id, 1u * (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))) << (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(0u | (_GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, (5u) ^ 0u)) << 0u)), uint(uvec3(uint(_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, (5u) ^ 0u)) << 0u)), 1u, 1u)))), 0u | (0u | (uint(5u))))))))))), 0u ^ _GLF_IDENTITY((min(_GLF_IDENTITY(workgroup_id, 1u * (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, ~ (~ (_GLF_IDENTITY(workgroup_id, (workgroup_id) | (_GLF_IDENTITY(workgroup_id, 0u | (workgroup_id))))))), min(workgroup_id, workgroup_id)))), _GLF_IDENTITY(workgroup_id, 1u * (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))) << (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(0u | (uint(5u)), 0u | (0u | (uint(5u)))))))))))), (true ? (min(_GLF_IDENTITY(workgroup_id, 1u * (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, ~ (~ (_GLF_IDENTITY(workgroup_id, (workgroup_id) | (_GLF_IDENTITY(workgroup_id, 0u | (workgroup_id))))))), min(workgroup_id, workgroup_id)))), _GLF_IDENTITY(workgroup_id, 1u * (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))) << (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(0u | (uint(5u)), 0u | (0u | (uint(5u))))))), (true ? _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), ((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)))) | (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), ((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)))) / 1u)) | ((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))))))) << (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(0u | (uint(5u)), 0u | (0u | (uint(5u))))))) : _GLF_FUZZED(77183u)))))))) : _GLF_FUZZED(131146u)))))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, 1u * _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), max((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), ~ (~ ((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))))))))) << 0u)), min(_GLF_IDENTITY(workgroup_id, 1u * _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), max(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), min(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), uint(uvec2((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), 1u))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), ((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)))) | ((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), (true ? (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))) : _GLF_FUZZED(bitfieldExtract(num_workgroup, 93802, -3949))))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), (true ? (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))) : _GLF_FUZZED(bitfieldExtract(num_workgroup, 93802, -3949))))), (true ? ~ (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), (true ? (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))) : _GLF_FUZZED(bitfieldExtract(num_workgroup, 93802, -3949))))) : _GLF_FUZZED(subgroup_local_id))), ~ (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), (true ? (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))) : _GLF_FUZZED(bitfieldExtract(num_workgroup, 93802, -3949))))), ~ (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), (true ? (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))) : _GLF_FUZZED(bitfieldExtract(num_workgroup, 93802, -3949))))))))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), ~ (~ ((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))))))))) << 0u)), _GLF_IDENTITY(workgroup_id, 1u * _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), max((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), ~ (~ ((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))))))))) << 0u)))), min(_GLF_IDENTITY(workgroup_id, 1u * (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)))), _GLF_IDENTITY(workgroup_id, 1u * (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))) << (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(0u | (uint(5u)), 0u | (0u | (uint(5u))))))))))))), min((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), 1u * _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) - 0u), min(workgroup_id, workgroup_id))), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), max((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), min(workgroup_id, workgroup_id))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)))), (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)))), (~ (~ (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))))) | (~ (~ (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))))))) << (0u | 0u)))))))))))) << 0u)), min(_GLF_IDENTITY(workgroup_id, 1u * (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) | 0u), min(workgroup_id, workgroup_id)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, 1u * (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))) << (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(0u | (uint(5u)), 0u | (0u | (uint(5u)))))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, 1u * (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))) << (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(0u | (uint(5u)), 0u | (0u | (uint(5u)))))))))), max(_GLF_IDENTITY(workgroup_id, 1u * (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))) << (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(0u | (uint(5u)), 0u | (0u | (uint(5u)))))), clamp(0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(0u | (uint(5u)), 0u | (0u | (uint(5u)))))), 0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(0u | (uint(5u)), 0u | (0u | (uint(5u)))))), _GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(0u | (uint(5u)), 0u | (0u | (uint(5u)))))), (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(0u | (uint(5u)), 0u | (0u | (uint(5u))))))) >> 0u))))))), _GLF_IDENTITY(workgroup_id, 1u * (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))) << (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(0u | (uint(5u)), 0u | (0u | (uint(5u)))))))))))), _GLF_IDENTITY(workgroup_id, 1u * (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))) << (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(0u | (uint(5u)), 0u | (0u | (uint(5u)))))))))))), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, 1u * (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))) << (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(0u | (uint(5u)), 0u | (0u | (uint(5u)))))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, 1u * (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))) << (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(0u | (uint(5u)), 0u | (0u | (uint(5u)))))))))), max(_GLF_IDENTITY(workgroup_id, 1u * (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))) << (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(0u | (uint(5u)), 0u | (0u | (uint(5u)))))), clamp(0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(0u | (uint(5u)), 0u | (0u | (uint(5u)))))), 0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(0u | (uint(5u)), 0u | (0u | (uint(5u)))))), _GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(0u | (uint(5u)), 0u | (0u | (uint(5u)))))), (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(0u | (uint(5u)), 0u | (0u | (uint(5u))))))) >> 0u))))))), _GLF_IDENTITY(workgroup_id, 1u * (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))) << (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(0u | (uint(5u)), 0u | (0u | (uint(5u)))))))))))), _GLF_IDENTITY(workgroup_id, 1u * (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))) << (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(0u | (uint(5u)), 0u | (0u | (uint(5u)))))))))))), 1u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, 1u * _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), max((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) >> 0u), min(workgroup_id, workgroup_id))), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), min(workgroup_id, workgroup_id))))))))) << 0u)), min(_GLF_IDENTITY(workgroup_id, 1u * (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)))), _GLF_IDENTITY(workgroup_id, 1u * (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))) << (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(0u | (uint(5u)), 0u | (0u | (uint(5u)))))))))))))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, 1u * _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), max((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), ~ (~ ((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))))))))) << 0u)), min(_GLF_IDENTITY(workgroup_id, 1u * _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), max(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), min(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), uint(uvec2((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), 1u))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), ((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)))) | ((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), (true ? (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))) : _GLF_FUZZED(bitfieldExtract(num_workgroup, 93802, -3949))))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), (true ? (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))) : _GLF_FUZZED(bitfieldExtract(num_workgroup, 93802, -3949))))), (true ? ~ (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), (true ? (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))) : _GLF_FUZZED(bitfieldExtract(num_workgroup, 93802, -3949))))) : _GLF_FUZZED(subgroup_local_id))), ~ (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), (true ? (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))) : _GLF_FUZZED(bitfieldExtract(num_workgroup, 93802, -3949))))), ~ (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), (true ? (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))) : _GLF_FUZZED(bitfieldExtract(num_workgroup, 93802, -3949))))))))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), ~ (~ ((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))))))))) << 0u)), _GLF_IDENTITY(workgroup_id, 1u * _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), max((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), ~ (~ ((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))))))))) << 0u)))), min(_GLF_IDENTITY(workgroup_id, 1u * (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)))), _GLF_IDENTITY(workgroup_id, 1u * (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))) << (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(0u | (uint(5u)), 0u | (0u | (uint(5u))))))))))))), min((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), 1u * _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) - 0u), min(workgroup_id, workgroup_id))), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), max((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), min(workgroup_id, workgroup_id))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)))), (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)))), (~ (~ (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))))) | (~ (~ (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))))))) << (0u | 0u)))))))))))) << 0u)), min(_GLF_IDENTITY(workgroup_id, 1u * (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) | 0u), min(workgroup_id, workgroup_id)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, 1u * (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))) << (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(0u | (uint(5u)), 0u | (0u | (uint(5u)))))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, 1u * (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))) << (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(0u | (uint(5u)), 0u | (0u | (uint(5u)))))))))), max(_GLF_IDENTITY(workgroup_id, 1u * (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))) << (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(0u | (uint(5u)), 0u | (0u | (uint(5u)))))), clamp(0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(0u | (uint(5u)), 0u | (0u | (uint(5u)))))), 0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(0u | (uint(5u)), 0u | (0u | (uint(5u)))))), _GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(0u | (uint(5u)), 0u | (0u | (uint(5u)))))), (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(0u | (uint(5u)), 0u | (0u | (uint(5u))))))) >> 0u))))))), _GLF_IDENTITY(workgroup_id, 1u * (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))) << (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(0u | (uint(5u)), 0u | (0u | (uint(5u)))))))))))), _GLF_IDENTITY(workgroup_id, 1u * (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))) << (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(0u | (uint(5u)), 0u | (0u | (uint(5u)))))))))))), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, 1u * (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))) << (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(0u | (uint(5u)), 0u | (0u | (uint(5u)))))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, 1u * (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))) << (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(0u | (uint(5u)), 0u | (0u | (uint(5u)))))))))), max(_GLF_IDENTITY(workgroup_id, 1u * (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))) << (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(0u | (uint(5u)), 0u | (0u | (uint(5u)))))), clamp(0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(0u | (uint(5u)), 0u | (0u | (uint(5u)))))), 0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(0u | (uint(5u)), 0u | (0u | (uint(5u)))))), _GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(0u | (uint(5u)), 0u | (0u | (uint(5u)))))), (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(0u | (uint(5u)), 0u | (0u | (uint(5u))))))) >> 0u))))))), _GLF_IDENTITY(workgroup_id, 1u * (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))) << (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(0u | (uint(5u)), 0u | (0u | (uint(5u)))))))))))), _GLF_IDENTITY(workgroup_id, 1u * (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))) << (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(0u | (uint(5u)), 0u | (0u | (uint(5u)))))))))))), 1u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, 1u * _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), max((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) >> 0u), min(workgroup_id, workgroup_id))), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), min(workgroup_id, workgroup_id))))))))) << 0u)), min(_GLF_IDENTITY(workgroup_id, 1u * (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)))), _GLF_IDENTITY(workgroup_id, 1u * (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))) << (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(0u | (uint(5u)), 0u | (0u | (uint(5u)))))))))))))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, 1u * _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), max((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), ~ (~ ((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))))))))) << 0u)), min(_GLF_IDENTITY(workgroup_id, 1u * _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), max(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), min(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), uint(uvec2((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), 1u))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), ((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)))) | ((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), (true ? (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))) : _GLF_FUZZED(bitfieldExtract(num_workgroup, 93802, -3949))))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), (true ? (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))) : _GLF_FUZZED(bitfieldExtract(num_workgroup, 93802, -3949))))), (true ? ~ (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), (true ? (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))) : _GLF_FUZZED(bitfieldExtract(num_workgroup, 93802, -3949))))) : _GLF_FUZZED(subgroup_local_id))), ~ (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), (true ? (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))) : _GLF_FUZZED(bitfieldExtract(num_workgroup, 93802, -3949))))), ~ (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), (true ? (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))) : _GLF_FUZZED(bitfieldExtract(num_workgroup, 93802, -3949))))))))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), ~ (~ ((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))))))))) << 0u)), _GLF_IDENTITY(workgroup_id, 1u * _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), max((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), ~ (~ ((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))))))))) << 0u)))), min(_GLF_IDENTITY(workgroup_id, 1u * (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)))), _GLF_IDENTITY(workgroup_id, 1u * (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))) << (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(0u | (uint(5u)), 0u | (0u | (uint(5u))))))))))))), min((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), 1u * _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) - 0u), min(workgroup_id, workgroup_id))), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), max((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), min(workgroup_id, workgroup_id))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)))), (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)))), (~ (~ (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))))) | (~ (~ (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))))))) << (0u | 0u)))))))))))) << 0u)), min(_GLF_IDENTITY(workgroup_id, 1u * (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) | 0u), min(workgroup_id, workgroup_id)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, 1u * (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))) << (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(0u | (uint(5u)), 0u | (0u | (uint(5u)))))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, 1u * (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))) << (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(0u | (uint(5u)), 0u | (0u | (uint(5u)))))))))), max(_GLF_IDENTITY(workgroup_id, 1u * (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))) << (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(0u | (uint(5u)), 0u | (0u | (uint(5u)))))), clamp(0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(0u | (uint(5u)), 0u | (0u | (uint(5u)))))), 0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(0u | (uint(5u)), 0u | (0u | (uint(5u)))))), _GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(0u | (uint(5u)), 0u | (0u | (uint(5u)))))), (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(0u | (uint(5u)), 0u | (0u | (uint(5u))))))) >> 0u))))))), _GLF_IDENTITY(workgroup_id, 1u * (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))) << (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(0u | (uint(5u)), 0u | (0u | (uint(5u)))))))))))), _GLF_IDENTITY(workgroup_id, 1u * (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))) << (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(0u | (uint(5u)), 0u | (0u | (uint(5u)))))))))))), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, 1u * (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))) << (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(0u | (uint(5u)), 0u | (0u | (uint(5u)))))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, 1u * (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))) << (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(0u | (uint(5u)), 0u | (0u | (uint(5u)))))))))), max(_GLF_IDENTITY(workgroup_id, 1u * (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))) << (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(0u | (uint(5u)), 0u | (0u | (uint(5u)))))), clamp(0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(0u | (uint(5u)), 0u | (0u | (uint(5u)))))), 0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(0u | (uint(5u)), 0u | (0u | (uint(5u)))))), _GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(0u | (uint(5u)), 0u | (0u | (uint(5u)))))), (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(0u | (uint(5u)), 0u | (0u | (uint(5u))))))) >> 0u))))))), _GLF_IDENTITY(workgroup_id, 1u * (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))) << (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(0u | (uint(5u)), 0u | (0u | (uint(5u)))))))))))), _GLF_IDENTITY(workgroup_id, 1u * (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))) << (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(0u | (uint(5u)), 0u | (0u | (uint(5u)))))))))))), 1u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, 1u * _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), max((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) >> 0u), min(workgroup_id, workgroup_id))), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), min(workgroup_id, workgroup_id))))))))) << 0u)), min(_GLF_IDENTITY(workgroup_id, 1u * (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)))), _GLF_IDENTITY(workgroup_id, 1u * (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))) << (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(0u | (uint(5u)), 0u | (0u | (uint(5u)))))))))))))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u ^ ((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, 1u * _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), max((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), ~ (~ ((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))))))))) << 0u)), min(_GLF_IDENTITY(workgroup_id, 1u * _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), max(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), min(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), uint(uvec2((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), 1u))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), ((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)))) | ((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), (true ? (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))) : _GLF_FUZZED(bitfieldExtract(num_workgroup, 93802, -3949))))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), (true ? (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))) : _GLF_FUZZED(bitfieldExtract(num_workgroup, 93802, -3949))))), (true ? ~ (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), (true ? (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))) : _GLF_FUZZED(bitfieldExtract(num_workgroup, 93802, -3949))))) : _GLF_FUZZED(subgroup_local_id))), ~ (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), (true ? (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))) : _GLF_FUZZED(bitfieldExtract(num_workgroup, 93802, -3949))))), ~ (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), (true ? (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))) : _GLF_FUZZED(bitfieldExtract(num_workgroup, 93802, -3949))))))))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), ~ (~ ((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))))))))) << 0u)), _GLF_IDENTITY(workgroup_id, 1u * _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), max((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), ~ (~ ((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))))))))) << 0u)))), min(_GLF_IDENTITY(workgroup_id, 1u * (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)))), _GLF_IDENTITY(workgroup_id, 1u * (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))) << (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(0u | (uint(5u)), 0u | (0u | (uint(5u))))))))))))), min((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), 1u * _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) - 0u), min(workgroup_id, workgroup_id))), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), max((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), min(workgroup_id, workgroup_id))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)))), (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)))), (~ (~ (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))))) | (~ (~ (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))))))) << (0u | 0u)))))))))))) << 0u)), min(_GLF_IDENTITY(workgroup_id, 1u * (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) | 0u), min(workgroup_id, workgroup_id)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, 1u * (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))) << (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(0u | (uint(5u)), 0u | (0u | (uint(5u)))))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, 1u * (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))) << (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(0u | (uint(5u)), 0u | (0u | (uint(5u)))))))))), max(_GLF_IDENTITY(workgroup_id, 1u * (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))) << (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(0u | (uint(5u)), 0u | (0u | (uint(5u)))))), clamp(0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(0u | (uint(5u)), 0u | (0u | (uint(5u)))))), 0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(0u | (uint(5u)), 0u | (0u | (uint(5u)))))), _GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(0u | (uint(5u)), 0u | (0u | (uint(5u)))))), (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(0u | (uint(5u)), 0u | (0u | (uint(5u))))))) >> 0u))))))), _GLF_IDENTITY(workgroup_id, 1u * (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))) << (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(0u | (uint(5u)), 0u | (0u | (uint(5u)))))))))))), _GLF_IDENTITY(workgroup_id, 1u * (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))) << (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(0u | (uint(5u)), 0u | (0u | (uint(5u)))))))))))), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, 1u * (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))) << (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(0u | (uint(5u)), 0u | (0u | (uint(5u)))))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, 1u * (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))) << (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(0u | (uint(5u)), 0u | (0u | (uint(5u)))))))))), max(_GLF_IDENTITY(workgroup_id, 1u * (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))) << (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(0u | (uint(5u)), 0u | (0u | (uint(5u)))))), clamp(0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(0u | (uint(5u)), 0u | (0u | (uint(5u)))))), 0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(0u | (uint(5u)), 0u | (0u | (uint(5u)))))), _GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(0u | (uint(5u)), 0u | (0u | (uint(5u)))))), (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(0u | (uint(5u)), 0u | (0u | (uint(5u))))))) >> 0u))))))), _GLF_IDENTITY(workgroup_id, 1u * (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))) << (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(0u | (uint(5u)), 0u | (0u | (uint(5u)))))))))))), _GLF_IDENTITY(workgroup_id, 1u * (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))) << (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(0u | (uint(5u)), 0u | (0u | (uint(5u)))))))))))), 1u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, 1u * _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), max((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) >> 0u), min(workgroup_id, workgroup_id))), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), min(workgroup_id, workgroup_id))))))))) << 0u)), min(_GLF_IDENTITY(workgroup_id, 1u * (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)))), _GLF_IDENTITY(workgroup_id, 1u * (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))) << (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(0u | (uint(5u)), 0u | (0u | (uint(5u)))))))))))))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))) * 1u)) ^ 0u))), _GLF_IDENTITY(workgroup_id, 1u * (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)))), _GLF_IDENTITY(workgroup_id, 1u * (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec2(! (false), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(! (false), false), true, false)), bvec2(bvec4(bvec2(bvec4(bvec2(! (false), false), true, false)), false, false))))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / round(length(normalize(vec2(1.0, 1.0)))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, false || (false)))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x < injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(_GLF_IDENTITY(bvec3(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch)).y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec3(bvec3(bvec3(injectionSwitch.x < injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), false || (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x < injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(_GLF_IDENTITY(bvec3(injectionSwitch.x < injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), bvec3(bvec3(bvec3(injectionSwitch.x < injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true))))))))))))))) && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec3(bool(false), true, false)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, false, true)))) || false) || (false))) && true)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(_GLF_IDENTITY(bool(bool(bool(false))), ! (! (bool(bool(bool(false)))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(abs(sqrt(-2322.0895))) : _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(4.8)), bool(false))))) > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u) * subgroup_size, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (1u ^ 0u) * (0u))) ^ (0u << _GLF_IDENTITY(uint(2u), uint(2u)))) ^ (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)))) + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)).y) || false))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 1.0, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0))), injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), true)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_IDENTITY(true, (true) || false))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(1.7), _GLF_FUZZED(-2.3)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(mat2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 1.0, 1.0))))).y))))).y), bool(bvec2(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bool(! (injectionSwitch.x > injectionSwitch.y))))) || false), true))))))), true)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), (bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) || false))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
            barrier();
           barrier();
          }
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, false)))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) - 0u) + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u)))) % subgroup_size);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))), max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)) / vec2(1.0, 1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))))), mix(vec2(_GLF_FUZZED(2.6), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 0.0))), (injectionSwitch) / vec2(1.0, 1.0)))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))))))[1]), vec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))))))[0], _GLF_FUZZED(-3.5)), bvec2(true, false))))), injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bool(bvec2(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, true)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), 1.0, 1.0, 1.0, 1.0))).x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), 1.0, 1.0, 1.0, 1.0))).x > injectionSwitch.y)), true, true), bvec3(bvec3(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), 1.0, 1.0, 1.0, 1.0))).x > injectionSwitch.y)), true, true))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) - 0.0), injectionSwitch[1])).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 buf[virtual_gid] = 1;
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec4(injectionSwitch.x, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 0.0, 0.0) + (vec4(injectionSwitch.x, 1.0, 0.0, 0.0))))) > injectionSwitch.y)))) || false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   int i = 0;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, false || (false)), false, false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2((mat2(1.0) * (injectionSwitch))[0], (mat2(1.0) * (injectionSwitch))[1]), vec2(_GLF_FUZZED(8.1), _GLF_FUZZED(0.2)), bvec2(false, false)))), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, min(injectionSwitch.x, injectionSwitch.x))), 0.0, 1.0)), vec2(1.0, 1.0) * (vec2(mat4x3(injectionSwitch, 1.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(1.0, 0.0, 1.0, 1.0, 0.0, 1.0)), min(float(mat2x3(1.0, 0.0, 1.0, 1.0, 0.0, 1.0)), _GLF_IDENTITY(float(mat2x3(1.0, 0.0, 1.0, 1.0, 0.0, 1.0)), mix(float(float(mat2x3(1.0, 0.0, 1.0, 1.0, 0.0, 1.0))), float(_GLF_FUZZED(-863.157)), bool(false)))))), 1.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0))))).x, (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-1.4), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-6.2)), bvec2(true, false)), clamp(_GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-1.4), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-6.2)), bvec2(true, false)), max(mix(vec2(_GLF_FUZZED(-1.4), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-6.2)), bvec2(true, false)), mix(vec2(_GLF_FUZZED(-1.4), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-6.2)), bvec2(true, false)))), _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-1.4), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-6.2)), bvec2(true, false)), (mix(vec2(_GLF_FUZZED(-1.4), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-6.2)), bvec2(true, false))) * mat2(1.0)), mix(vec2(_GLF_FUZZED(-1.4), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-6.2)), bvec2(true, false))))).y)) ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(3.6), (injectionSwitch)[1]), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED((- -56.21)), (_GLF_IDENTITY(_GLF_FUZZED((- -56.21)), _GLF_IDENTITY(max(_GLF_FUZZED((- -56.21)), _GLF_FUZZED((- -56.21))), (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bool(true))))) ? max(_GLF_FUZZED((- -56.21)), _GLF_FUZZED((- -56.21))) : _GLF_FUZZED(8641.1254))))) / exp(0.0))), min(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED((- -56.21))), max(vec2((injectionSwitch)[0], _GLF_FUZZED((- -56.21))), vec2((injectionSwitch)[0], _GLF_FUZZED((- -56.21))))), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY((- -56.21), mix(float((- -56.21)), float(_GLF_FUZZED(-2.7)), bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))), clamp(vec2((injectionSwitch)[0], _GLF_FUZZED((- -56.21))), vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED((- -56.21)), min(_GLF_FUZZED((- -56.21)), _GLF_FUZZED((- -56.21))))), vec2((injectionSwitch)[0], _GLF_FUZZED((- -56.21))))))), bvec2(true, false)), min(mix(vec2(_GLF_FUZZED(3.6), _GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch), max(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch), max(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch))))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch), mix(vec2(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch))[0], float(mat3((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch))[0], 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))), _GLF_FUZZED(4813.6240)), vec2(_GLF_FUZZED(vec3(135.218, 404.629, 771.228).x), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch))[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))[1]), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED((- -56.21)), (_GLF_IDENTITY(_GLF_FUZZED((- -56.21)), max(_GLF_FUZZED((- -56.21)), _GLF_FUZZED((- -56.21))))) / exp(0.0))), min(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED((- -56.21)), mix(float(_GLF_FUZZED(9.1)), float(_GLF_FUZZED((- -56.21))), bool(true)))), max(vec2((injectionSwitch)[0], _GLF_FUZZED((- -56.21))), vec2((injectionSwitch)[0], _GLF_FUZZED((- -56.21))))), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY((- -56.21), mix(float((- -56.21)), float(_GLF_FUZZED(-2.7)), bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))) || false), (injectionSwitch.x > injectionSwitch.y)))))))))), clamp(vec2((injectionSwitch)[0], _GLF_FUZZED((- -56.21))), vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED((- -56.21)), min(_GLF_FUZZED((- -56.21)), _GLF_FUZZED((- -56.21))))), vec2((injectionSwitch)[_GLF_IDENTITY(0, (false ? _GLF_FUZZED((~ i)) : 0))], _GLF_FUZZED((- -56.21))))))), bvec2(true, false)), _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(3.6), (injectionSwitch)[1]), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED((- -56.21)), (_GLF_IDENTITY(_GLF_FUZZED((- -56.21)), max(_GLF_FUZZED((- -56.21)), _GLF_FUZZED((- -56.21))))) / exp(0.0))), min(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED((- -56.21))), max(vec2((injectionSwitch)[0], _GLF_FUZZED((- -56.21))), vec2((injectionSwitch)[0], _GLF_FUZZED((- -56.21))))), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY((- -56.21), mix(float((- -56.21)), float(_GLF_FUZZED(-2.7)), bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), clamp(vec2((injectionSwitch)[0], _GLF_FUZZED((- -56.21))), vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED((- -56.21)), min(_GLF_FUZZED((- -56.21)), _GLF_FUZZED((- -56.21))))), vec2((injectionSwitch)[0], _GLF_FUZZED((- -56.21))))))), bvec2(true, false)), min(mix(vec2(_GLF_FUZZED(3.6), (injectionSwitch)[1]), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED((- -56.21)), (_GLF_IDENTITY(_GLF_FUZZED((- -56.21)), max(_GLF_FUZZED((- -56.21)), _GLF_FUZZED((- -56.21))))) / exp(0.0))), min(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED((- -56.21))), max(vec2((injectionSwitch)[0], _GLF_FUZZED((- -56.21))), vec2((injectionSwitch)[0], _GLF_FUZZED((- -56.21))))), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY((- -56.21), mix(float((- -56.21)), float(_GLF_FUZZED(-2.7)), bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), clamp(vec2((injectionSwitch)[0], _GLF_FUZZED((- -56.21))), vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED((- -56.21)), min(_GLF_FUZZED((- -56.21)), _GLF_FUZZED((- -56.21))))), vec2((injectionSwitch)[0], _GLF_FUZZED((- -56.21))))))), bvec2(true, false)), mix(vec2(_GLF_FUZZED(3.6), (injectionSwitch)[1]), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED((- -56.21)), (_GLF_IDENTITY(_GLF_FUZZED((- -56.21)), max(_GLF_FUZZED((- -56.21)), _GLF_FUZZED((- -56.21))))) / exp(0.0))), min(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED((- -56.21))), max(vec2((injectionSwitch)[0], _GLF_FUZZED((- -56.21))), vec2((injectionSwitch)[0], _GLF_FUZZED((- -56.21))))), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY((- -56.21), mix(float((- -56.21)), float(_GLF_FUZZED(-2.7)), bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), clamp(vec2((injectionSwitch)[0], _GLF_FUZZED((- -56.21))), vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED((- -56.21)), min(_GLF_FUZZED((- -56.21)), _GLF_FUZZED((- _GLF_IDENTITY(-56.21, (-56.21) - _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))))))))), vec2((injectionSwitch)[0], _GLF_FUZZED((- -56.21))))))), bvec2(true, false))))))), _GLF_IDENTITY(_GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(7.0)), float(0.0), bool(true))), (false ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-59.30, mix(float(_GLF_FUZZED(float(-2925))), float(-59.30), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), mix(float(_GLF_FUZZED(83.94)), float(_GLF_IDENTITY(_GLF_IDENTITY(-59.30, mix(float(_GLF_FUZZED(float(-2925))), float(-59.30), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(-59.30, mix(float(_GLF_FUZZED(float(-2925))), float(-59.30), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(-59.30, mix(float(_GLF_FUZZED(float(-2925))), float(-59.30), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) / 1.0), _GLF_IDENTITY(-59.30, mix(float(_GLF_FUZZED(float(-2925))), float(-59.30), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(-59.30, mix(float(_GLF_FUZZED(float(-2925))), float(-59.30), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bool(true)))), mix(float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-59.30, mix(float(_GLF_FUZZED(float(-2925))), float(-59.30), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), mix(float(_GLF_FUZZED(83.94)), float(_GLF_IDENTITY(_GLF_IDENTITY(-59.30, mix(float(_GLF_FUZZED(float(-2925))), float(-59.30), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(-59.30, mix(float(_GLF_FUZZED(float(-2925))), float(-59.30), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(-59.30, mix(float(_GLF_FUZZED(float(-2925))), float(-59.30), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) / 1.0), _GLF_IDENTITY(-59.30, mix(float(_GLF_FUZZED(float(-2925))), float(-59.30), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(-59.30, mix(float(_GLF_FUZZED(float(-2925))), float(-59.30), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bool(true))))), float(_GLF_FUZZED(3576.7135)), bool(false))) : 0.0)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0)), mix(vec2(_GLF_FUZZED(-4.7), _GLF_IDENTITY((vec2(mat4x3(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(_GLF_IDENTITY(-59.30, mix(float(_GLF_FUZZED(float(-2925))), _GLF_IDENTITY(float(-59.30), (true ? float(-59.30) : _GLF_FUZZED(reflect(length(-84.15), (- 9308.3617))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) : 0.0)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0)))[1], ((vec2(mat4x3(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(_GLF_IDENTITY(-59.30, mix(float(_GLF_FUZZED(float(-2925))), float(-59.30), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) : 0.0)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0)))[1]) - 0.0)), vec2((vec2(mat4x3(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(_GLF_IDENTITY(-59.30, mix(float(_GLF_FUZZED(float(-2925))), float(-59.30), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) : 0.0)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0)))[0], _GLF_FUZZED(-68.09)), bvec2(true, false))), vec2(1.0, 1.0) * (vec2(mat4x3(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, 0.0 + (0.0)), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((-4.5))), float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), bool(true))))), 1.0))))).x : _GLF_FUZZED(determinant(mat4(-133.275, -5.2, 757.894, 7.2, -2.1, -5.5, 6.3, -580.646, -3853.8513, 872.387, 6.3, 4014.4143, 632.357, _GLF_IDENTITY(63.04, _GLF_IDENTITY(0.0 + (63.04), mix(float(_GLF_IDENTITY(0.0 + (63.04), _GLF_IDENTITY((0.0 + (63.04)) - 0.0, ((0.0 + (63.04)) - 0.0) - 0.0))), float(_GLF_FUZZED(638.011)), bool(false)))), -0.2, _GLF_IDENTITY(-5.3, mix(float(_GLF_FUZZED(5781.0991)), float(-5.3), bool(true)))))))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))) && true), ! (! (false)))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))))))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), bool(bvec4(false, true, false, true)))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) && true))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + _GLF_IDENTITY(vec2(0.0, 0.0), max(vec2(0.0, 0.0), vec2(0.0, 0.0)))).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) && true, _GLF_IDENTITY(bool(bvec4(((injectionSwitch.x > injectionSwitch.y)) && true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(((injectionSwitch.x > injectionSwitch.y)) && true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), false || (bool(false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), false || (bool(false)))), (bool(_GLF_IDENTITY(bool(false), false || (bool(false))))) || false)), true && (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), false || (bool(false)))), (bool(_GLF_IDENTITY(bool(false), false || (bool(false))))) || false))))))), (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, ! (! (false)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))) && true)), (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), false || (bool(false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), false || (bool(false)))), (bool(_GLF_IDENTITY(bool(false), false || (bool(false))))) || false)), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), false || (bool(false)))), (bool(_GLF_IDENTITY(bool(false), false || (bool(false))))) || false), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), false || (bool(false)))), (bool(_GLF_IDENTITY(bool(false), false || (bool(false))))) || false)) && true))))))), (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, ! (! (false)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), false || (bool(false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), false || (bool(false)))), (bool(_GLF_IDENTITY(bool(false), false || (_GLF_IDENTITY(bool(false), (bool(false)) || _GLF_IDENTITY(false, ! (! (false)))))))) || false)), true && (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), false || (bool(false)))), (bool(_GLF_IDENTITY(bool(false), false || (bool(false))))) || false))))))), (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), false || (bool(false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), false || (bool(false)))), (bool(_GLF_IDENTITY(bool(false), false || (bool(false))))) || false)), true && (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), false || (bool(false)))), (bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(false || (bool(false)), _GLF_IDENTITY(bool(bool(false || (bool(false)))), true && (bool(bool(false || (bool(false)))))))))) || false))))))), (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(3.3))), injectionSwitch.x)) > injectionSwitch.y))) || _GLF_IDENTITY(false, ! (! (false)))))))) && true)) && true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, false))))) || false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
