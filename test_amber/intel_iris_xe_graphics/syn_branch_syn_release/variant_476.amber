#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true, true && (true)) ? injectionSwitch.x : _GLF_FUZZED(-8.7))) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))), ! (_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false))))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(81.63)), bool(false))) > injectionSwitch.y)))), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))) - 0.0))), false), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bvec2(bvec4(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), false, true)))))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_IDENTITY(true, ! (! (true)))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec4(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, true, true))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec4(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true, true, true)))) || false)))))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), false, false))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))) && true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((false), ! (! ((false)))) && true), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY((false), ! (! ((false)))) && true), false || (bool(_GLF_IDENTITY((false), ! (! ((false)))) && true))))))))), true && (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, bool(bool(_GLF_IDENTITY((false), _GLF_IDENTITY(! (! ((false))), ! (! (_GLF_IDENTITY(! (! ((false))), ! _GLF_IDENTITY((! (! (! ((false))))), ! (! ((! (! (! ((false))))))))))))) && true))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((false), ! (! ((false)))) && true), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY((false), ! (! ((false)))) && true), false || (bool(_GLF_IDENTITY((false), ! (! ((false)))) && true))))))))), true && (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))), ! (! ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! (! ((false))))) && true))), ! (! (_GLF_IDENTITY(! (! ((false))), ! (! (! _GLF_IDENTITY((! ((false))), bool(bvec3((! ((false))), true, false)))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), _GLF_IDENTITY(! (! ((false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! ((false))), ! (! (! (! ((false))))))), (! (_GLF_IDENTITY(! (! ((false))), ! (! (! (! ((false)))))))) || false))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), _GLF_IDENTITY(! (! ((false))), ! (! (_GLF_IDENTITY(! (! ((false))), ! (! (! (! ((false))))))))))), bool(bvec3(! (_GLF_IDENTITY((false), _GLF_IDENTITY(! (! ((false))), ! (! (_GLF_IDENTITY(! (! ((false))), _GLF_IDENTITY(! (! (! (! ((false))))), bool(_GLF_IDENTITY(bvec3(! (! (! (! ((false))))), false, true), bvec3(bvec4(bvec3(! (! (! (! ((false))))), false, true), true))))))))))), true, false)))))))) && true)))))))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, abs(1.0) * (injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x < injectionSwitch.y))), (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))) && true)))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, min(_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id) ^ 0u, ((workgroup_id) ^ 0u) ^ 0u)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u), 0u, (0u ^ 1u))), max(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u), max(_GLF_IDENTITY(workgroup_id, (workgroup_id) ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ (0u >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), min(uint(6u), uint(6u))))))), _GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u))), 0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) << 0u, 0u ^ ((0u) << 0u))) ^ 1u))), uint(uvec3(_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))) ^ 0u), 0u, (0u ^ 1u)))))))), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) & uvec2(61711u, 100749u).g) ^ (_GLF_IDENTITY(workgroup_id, min(workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(true ? workgroup_id : _GLF_FUZZED(subgroup_size), (true ? workgroup_id : _GLF_FUZZED(subgroup_size)) + uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) << 0u)) ^ 0u), _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(uint(true)))), _GLF_IDENTITY((0u ^ 1u), max((0u ^ 1u), (0u ^ 1u)))), (uvec3(_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (true ? workgroup_id : _GLF_FUZZED(subgroup_size)))) << 0u)) ^ 0u), 0u, _GLF_IDENTITY((0u ^ 1u), max((0u ^ 1u), (0u ^ 1u))))) ^ (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u)))), max(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u), (true ? _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), (workgroup_id) ^ 0u) : _GLF_FUZZED(151742u))), 0u, (_GLF_IDENTITY(0u, (0u) << 0u) ^ 1u))), uint(uvec3(_GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u), 0u, (0u ^ 1u))))))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(592.531, -6.7)))).y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(true, (true) || false), true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_DEAD(false), true, true), false)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) && true)), ! (! (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) && true)))))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), bool(bool((true))))))) || false), true), false)))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8.9), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(8130.0332)), bvec2(true, false))))).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
    }
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id), min(clamp(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id), clamp(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id)))) + 1) % subgroup_size);
 buf[virtual_gid] = 1;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(log(vec2(-407.083, -4.0))))).x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false, true && (false)) || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))) && true)))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), false || (bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, false)))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))))))))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, false))))))))), (_GLF_DEAD(false)) || false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) && true), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true))))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) && true)))) && true))), false))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / (1u | 1u)), uint(uvec4(subgroup_size, 0u, 1u, _GLF_IDENTITY(0u, 0u | (0u))))), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 0u, 1u, _GLF_IDENTITY(0u, 0u | (0u))))), (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 0u, 1u, _GLF_IDENTITY(0u, 0u | (0u))))))))), subgroup_size)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   int i = 0;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(2, 1 * (2))), _GLF_IDENTITY(4, _GLF_IDENTITY((4), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(4, (4) / 1))), (~ ((4))) ^ 0))) / 1), 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false)))))), (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) && true)) && true), (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && ((false))) && true), (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)) && true)) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (false) && true)) && true)) && true, true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, true)))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), (false) && true)) && true)) && true))))))) && true), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (false) && true)))), _GLF_IDENTITY(false, true && (false)) || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ! (! ((_GLF_IDENTITY(false, (false) && true)))))), (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (false) && true))))))) || false)))), (_GLF_IDENTITY(false, (false) && true)) && true)) && true), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && ((false))) && true), (_GLF_IDENTITY(false, (false) && true)) && true)) && true), ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! ((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))) || _GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, sqrt(1.0)))).y)))))), (false) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (true)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec2(false, true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! ((_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, false || (true)), false, true, false))))))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y)))), bool(bvec3(! _GLF_IDENTITY((! ((_GLF_IDENTITY(false, bool(bvec2(false, true)))) || _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y))) || false))), ! (! ((! ((_GLF_IDENTITY(false, bool(bvec2(false, true)))) || _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y))) || false)))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (_GLF_IDENTITY(false, ! (! (false)))) && true))) || false) && true)) && true))))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))) && true)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, (false) && true))), false || (! ((_GLF_IDENTITY(false, (false) && true))))))) && true)) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! ((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)))) || _GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y)), true && (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) || false) || (false)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), (false ? _GLF_FUZZED(882.699) : _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))) > injectionSwitch.y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (false) && true)), ((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! ((_GLF_IDENTITY(false, bool(bvec2(false, true)))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))), bool(bvec3(! (! ((_GLF_IDENTITY(false, bool(bvec2(false, true)))) || _GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false)) && true), (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(18.36)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)), injectionSwitch.x))) * 1.0) > injectionSwitch.y)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (false) && true))) || false) && true)) && true))))))) && true))) || (false))), ! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))), ! (_GLF_IDENTITY(! ((_GLF_DEAD(false))), ! (! (! ((_GLF_DEAD(false)))))))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          return;
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, true)), true && (_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, true)), true && (bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, true))))))))))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (false))))
          return;
         return;
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! _GLF_IDENTITY(_GLF_IDENTITY((bool(bool(false))), bool(bvec3(_GLF_IDENTITY((bool(bool(false))), ! (! (_GLF_IDENTITY((bool(bool(false))), bool(bvec2((bool(bool(false))), true)))))), true, false))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((bool(bool(false))), bool(bvec3(_GLF_IDENTITY((bool(bool(false))), ! (! (_GLF_IDENTITY((bool(bool(false))), bool(bvec2((bool(bool(false))), true)))))), true, false))), false, false)), ! (! (bool(bvec3(_GLF_IDENTITY((bool(bool(false))), bool(bvec3(_GLF_IDENTITY((bool(bool(false))), ! (! (_GLF_IDENTITY((bool(bool(false))), bool(bvec2((bool(bool(false))), true)))))), true, false))), false, false)))))))))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
            return;
           return;
          }
         return;
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) * mat2(1.0), mat2(1.0) * ((injectionSwitch) * mat2(1.0)))), mix(vec2(_GLF_FUZZED(363.105), _GLF_FUZZED((902.435 / -8.4))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(33.40)), float((injectionSwitch)[1]), bool(true)))), bvec2(true, true))).y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, false))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   do
    {
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(false))
      continue;
     atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(2, (2) >> 0)), 4, _GLF_IDENTITY(64, (64) * 1), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) - 0), (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) * 1)) / 1)))) - 0)) ^ _GLF_IDENTITY(0, _GLF_IDENTITY((0), clamp((0), (_GLF_IDENTITY(0, _GLF_IDENTITY((0), min((0), (0))) | 0)), _GLF_IDENTITY((0), ((0)) - 0))) * _GLF_IDENTITY(1, (1) / _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, int(int(_GLF_IDENTITY(1, (1) | (1))))), 1))))), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) - 0), (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) - 0), 0 ^ (_GLF_IDENTITY(4, (4) - 0)))) / 1), _GLF_IDENTITY((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(_GLF_IDENTITY(4, (4) / 1), 1 * (_GLF_IDENTITY(4, (4) / 1)))))) - 0)), ((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) / 1)))) - 0))) / 1) ^ _GLF_IDENTITY(0, _GLF_IDENTITY((0), clamp((_GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec2(0, 0), (ivec2(0, 0)) >> ivec2(0, 0))))), _GLF_IDENTITY((0), 0 ^ (_GLF_IDENTITY((0), clamp((_GLF_IDENTITY(0, (0) | (0 | 0))), (0), (0))))), _GLF_IDENTITY(_GLF_IDENTITY((0), ~ (~ ((0)))), _GLF_IDENTITY(((0)), min(((0)), ((0)))) - 0))) * _GLF_IDENTITY(1, (1) + 0))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(4, (4) - 0), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (4)), max(4, _GLF_IDENTITY(4, (4) / 1)))) - 0)), ((_GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) / 1)))), ((_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) / 1))))) >> 0) - 0))) / 1) ^ _GLF_IDENTITY(0, _GLF_IDENTITY((0), clamp((0), _GLF_IDENTITY((0), 0 ^ (_GLF_IDENTITY((0), clamp((0), (0), (0))))), _GLF_IDENTITY(_GLF_IDENTITY((0), ~ (~ ((0)))), ((0)) - 0))) * _GLF_IDENTITY(1, (1) + _GLF_IDENTITY(0, 0 | (0)))), (true ? _GLF_IDENTITY((_GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (4)), max(4, _GLF_IDENTITY(4, (4) / 1)))) - 0)), (_GLF_IDENTITY((_GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) / 1)))), ((_GLF_IDENTITY(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(-12200) : 4)), max(4, _GLF_IDENTITY(4, (4) / 1))))) >> 0) - 0)), (_GLF_IDENTITY((_GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) / 1)))), ((_GLF_IDENTITY(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(-12200) : 4)), max(4, _GLF_IDENTITY(4, (4) / 1))))) >> 0) - 0)), _GLF_IDENTITY(int(ivec3((_GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) / 1)))), ((_GLF_IDENTITY(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(-12200) : 4)), max(4, _GLF_IDENTITY(4, (4) / 1))))) >> 0) - 0)), 1, (0 ^ 0))), 0 ^ (int(ivec3((_GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) / 1)))), ((_GLF_IDENTITY(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(-12200) : 4)), max(4, _GLF_IDENTITY(4, (4) / 1))))) >> 0) - 0)), 1, (0 ^ 0))))))) - 0)) / 1) ^ _GLF_IDENTITY(0, _GLF_IDENTITY((0), clamp((0), _GLF_IDENTITY((0), 0 ^ (_GLF_IDENTITY((0), clamp((0), (0), (0))))), _GLF_IDENTITY(_GLF_IDENTITY((0), ~ (~ ((0)))), ((0)) - 0))) * _GLF_IDENTITY(1, (1) + _GLF_IDENTITY(0, 0 | (0)))) : _GLF_FUZZED(-19113))))) ^ 0, ((_GLF_IDENTITY(_GLF_IDENTITY(4, (4) - 0), _GLF_IDENTITY((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) / 1)))) - 0)), ((_GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(4, (4) + 0), max(4, _GLF_IDENTITY(4, (4) / 1)))) - 0, min((_GLF_IDENTITY(_GLF_IDENTITY(4, (4) + 0), max(4, _GLF_IDENTITY(4, (4) / 1)))) - 0, (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) + 0), max(4, _GLF_IDENTITY(4, (4) / 1)))) - 0))))) / 1) ^ _GLF_IDENTITY(0, _GLF_IDENTITY((0), clamp((0), _GLF_IDENTITY((0), 0 ^ (_GLF_IDENTITY((0), clamp((0), (0), (0))))), _GLF_IDENTITY(_GLF_IDENTITY((0), ~ (~ ((0)))), ((0)) - 0))) * _GLF_IDENTITY(1, (1) + 0)))) ^ 0) >> _GLF_IDENTITY(0, min(0, 0)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY((4), _GLF_IDENTITY(int(ivec3((4), int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), clamp(int(ivec3((4), int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), _GLF_IDENTITY(int(ivec3((4), int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), min(int(ivec3((4), int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), int(ivec3((4), int(_GLF_ONE(1.0, injectionSwitch.y)), 0)))), int(_GLF_IDENTITY(ivec3((4), int(_GLF_ONE(1.0, injectionSwitch.y)), 0), (ivec3((4), int(_GLF_ONE(1.0, injectionSwitch.y)), 0)) >> ivec3(0, 0, 0)))))) - 0), (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) / 1)))) - 0)) ^ _GLF_IDENTITY(0, _GLF_IDENTITY((0), clamp((0), (0), _GLF_IDENTITY((0), _GLF_IDENTITY(((_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) >> (0 << _GLF_IDENTITY(int(4), int(4))))) | (0)))) - 0, min(((0)) - 0, _GLF_IDENTITY(((0)), ~ (~ (((0))))) - 0))))) * 1))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) - 0), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, _GLF_IDENTITY((4), ~ (_GLF_IDENTITY(~ ((4)), (true ? ~ ((4)) : _GLF_FUZZED(-84408))))) / 1)))) - 0), _GLF_IDENTITY((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) / 1)))) - 0)) - _GLF_IDENTITY(0, 1 * (0)), ((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (4) << 0), _GLF_IDENTITY(4, (4) / 1)))) - 0)) - 0) ^ 0))), min((_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) / 1))), clamp(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) / 1))), _GLF_IDENTITY(4, _GLF_IDENTITY(max(4, _GLF_IDENTITY(4, (4) / 1)), ~ (~ (max(4, _GLF_IDENTITY(4, (4) / 1)))))), _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) / 1)))))) - _GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) / 1)))) - 0)) - 0, ((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, _GLF_IDENTITY((4) / 1, min((4) / 1, (4) / 1)))))) - 0)) - 0) ^ 0))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) / 1)))) - 0), _GLF_IDENTITY((_GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) / 1)))), int(ivec2((_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) / 1)))), 1))) - 0)) - 0, ((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) / 1)))) - 0)) - 0) ^ 0))), int(ivec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) / 1)))) - 0), _GLF_IDENTITY((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(_GLF_IDENTITY(4, (4) / 1), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(4, (4) / 1) : _GLF_FUZZED(94554)))))) - 0)) - 0, ((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) / 1)))) - 0)) - 0) ^ 0))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) / 1)))) - 0), _GLF_IDENTITY((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(_GLF_IDENTITY(4, (4) / 1), 0 ^ (_GLF_IDENTITY(4, (4) / 1)))))) - 0)) - 0, ((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) / 1)))) - 0)) - 0) ^ 0))), ((_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) / 1)))), (false ? _GLF_FUZZED((true ? int(workgroup_id) : -32138)) : (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) / 1)))))) - 0), _GLF_IDENTITY((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(_GLF_IDENTITY(4, (4) / 1), (_GLF_IDENTITY(4, (4) / 1)) << (0 << _GLF_IDENTITY(int(7), int(7))))))) - 0)) - 0, ((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) / 1), (_GLF_IDENTITY(4, (4) / 1)) | 0), (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) / 1), (_GLF_IDENTITY(4, (4) / 1)) | 0)) | (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) / 1), (_GLF_IDENTITY(4, (4) / 1)) | 0)))))) - 0)) - 0) ^ 0)))) >> 0)) >> 0), (9544 & 0)))), (true ? (_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) / 1))), int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) / 1))), 0, (0 | 0), 0), min(ivec4(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) / 1))), 0, (0 | 0), 0), ivec4(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) / 1))), 0, (0 | 0), 0)))))) - 0), _GLF_IDENTITY((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, ~ (~ (4))), _GLF_IDENTITY(4, (4) / 1)))) - 0)) - 0, ((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) / 1)))) - 0)) - 0) ^ 0))) : _GLF_FUZZED(84811))))) ^ _GLF_IDENTITY(0, _GLF_IDENTITY(_GLF_IDENTITY((0), max((0), (0))), clamp((0), (0), _GLF_IDENTITY((0), ((0)) - 0))) * 1)), (false ? _GLF_FUZZED(_GLF_IDENTITY(44918, int(ivec4(44918, 0, 1, 1)))) : _GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (false ? _GLF_FUZZED(59680) : _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), max(int(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(ivec4(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x)), 0, 0))))))) | (4))) - 0), (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-60965)))) * 1), _GLF_IDENTITY(4, (4) / 1)))) - 0)) ^ _GLF_IDENTITY(0, _GLF_IDENTITY((0), clamp((0), (0), _GLF_IDENTITY((0), ((0)) - 0))) * 1))))), _GLF_IDENTITY(max(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(4, (4) - 0), (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) ^ 0), (_GLF_IDENTITY(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) / 1))), (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) / 1)))) << 0)) - 0)) ^ _GLF_IDENTITY(0, _GLF_IDENTITY((0), clamp(_GLF_IDENTITY((0), 0 | ((0))), (0), _GLF_IDENTITY((0), ((0)) - _GLF_IDENTITY(0, 0 ^ (0))))) * 1))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(4, (4) - 0), (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) ^ 0), (_GLF_IDENTITY(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) / 1))), (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) / 1)))) << 0)) - 0)) ^ _GLF_IDENTITY(0, _GLF_IDENTITY((0), clamp(_GLF_IDENTITY((_GLF_IDENTITY(0, ~ (~ (0)))), 0 | ((0))), (0), _GLF_IDENTITY((0), ((0)) - _GLF_IDENTITY(0, 0 ^ (0))))) * 1))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(4, (4) - 0), (_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, 0 | (4))) ^ 0), (_GLF_IDENTITY(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, max(4, 4))), (~ (_GLF_IDENTITY(4, max(4, 4)))) | 0))), _GLF_IDENTITY(4, (4) / 1))), (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) / 1)))) << 0)) - 0)) ^ _GLF_IDENTITY(0, _GLF_IDENTITY((0), clamp(_GLF_IDENTITY((0), 0 | ((0))), (0), _GLF_IDENTITY((0), ((0)) - _GLF_IDENTITY(0, 0 ^ (0))))) * 1))), max((_GLF_IDENTITY(_GLF_IDENTITY(4, (4) - 0), (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) ^ 0), (_GLF_IDENTITY(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) / 1))), (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) / 1)))) << 0)) - 0)) ^ _GLF_IDENTITY(0, _GLF_IDENTITY((0), clamp(_GLF_IDENTITY((0), 0 | ((0))), (0), _GLF_IDENTITY((0), ((0)) - _GLF_IDENTITY(0, 0 ^ (0))))) * 1))), (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) - 0), (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) ^ 0), (_GLF_IDENTITY(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) / 1))), (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) / 1)))) << 0)) - 0)) ^ _GLF_IDENTITY(0, _GLF_IDENTITY(_GLF_IDENTITY((0), clamp(_GLF_IDENTITY((0), 0 | ((0))), (0), _GLF_IDENTITY((0), ((0)) - _GLF_IDENTITY(0, 0 ^ (0))))), (_GLF_IDENTITY((0), clamp(_GLF_IDENTITY((0), 0 | ((0))), (0), _GLF_IDENTITY((0), ((0)) - _GLF_IDENTITY(0, 0 ^ (0)))))) | (_GLF_IDENTITY((0), clamp(_GLF_IDENTITY((0), 0 | ((0))), (0), _GLF_IDENTITY((0), ((0)) - _GLF_IDENTITY(0, 0 ^ (0))))))) * 1))))), (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) - 0), (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) ^ 0), (_GLF_IDENTITY(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) / 1))), (_GLF_IDENTITY(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) / 1))), int(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) / 1)))))) << 0)) - 0)) ^ _GLF_IDENTITY(0, _GLF_IDENTITY((0), clamp(_GLF_IDENTITY((0), 0 | ((0))), (0), _GLF_IDENTITY((0), ((0)) - _GLF_IDENTITY(0, 0 ^ (0))))) * 1))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, clamp(4, 4, 4))) ^ 0), (4) - 0), (_GLF_IDENTITY(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (4) | int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(4, (4) | (4)))), (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, _GLF_IDENTITY((4), clamp((4), (4), _GLF_IDENTITY((4), _GLF_IDENTITY(0 | (_GLF_IDENTITY((4), (_GLF_IDENTITY((4), clamp((4), (4), _GLF_IDENTITY((4), max((4), (4)))))) - 0)), (0 | _GLF_IDENTITY(((4)), min(((4)), _GLF_IDENTITY(((4)), (((4))) + 0)))) + 0)))) / 1)))) - 0)) ^ _GLF_IDENTITY(0, _GLF_IDENTITY((0), clamp((0), (0), _GLF_IDENTITY((_GLF_IDENTITY(0, (0) | (0))), ((0)) - 0))) * 1))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(4, (4) - 0), (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) / 1)))) - 0)) ^ _GLF_IDENTITY(0, _GLF_IDENTITY((0), clamp((0), (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0 >> _GLF_IDENTITY(int(5), int(5)))), (false ? _GLF_FUZZED(11351) : 0))), _GLF_IDENTITY((0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(((0)), int(_GLF_IDENTITY(int(((0))), clamp(int(((0))), int(((0))), int(((0))))))), (_GLF_IDENTITY(((0)), int(_GLF_IDENTITY(int(((0))), clamp(int(((0))), _GLF_IDENTITY(int(((0))), ~ (_GLF_IDENTITY(~ (int(((0)))), (~ (int(((0))))) - 0))), int(((0)))))))) - 0) - 0, min(((0)) - 0, (_GLF_IDENTITY((0), (_GLF_IDENTITY(_GLF_IDENTITY((0), ~ (~ ((0)))), clamp(_GLF_IDENTITY((0), ~ (~ ((0)))), _GLF_IDENTITY(_GLF_IDENTITY((0), ~ (_GLF_IDENTITY(~ ((0)), min(~ ((0)), ~ ((0)))))), 0 + (_GLF_IDENTITY((0), ~ (~ ((0)))))), _GLF_IDENTITY((0), ~ (~ ((0))))))) << 0)) - 0))))) * 1))) | (_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY((4) - 0, ((4) - 0) | ((4) - 0))), (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(4, (4) - 0))), (4) / 1)))) - 0)) ^ _GLF_IDENTITY(0, _GLF_IDENTITY((0), clamp((0), (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) | (0)), 0))) << 0)), _GLF_IDENTITY((0), _GLF_IDENTITY(((0)) - 0, int(ivec2(((0)) - 0, 1)))))) * 1))), min((_GLF_IDENTITY(_GLF_IDENTITY(4, (4) - 0), (_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, _GLF_IDENTITY((4), min(_GLF_IDENTITY((4), ((4)) << 0), _GLF_IDENTITY((4), ((4)) ^ 0))) / 1))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) << 0), 4, 4))) / 1))), _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) / 1))), _GLF_IDENTITY(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) / 1))), 0 + (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) / 1)))))), (clamp(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) << _GLF_IDENTITY(0, max(0, 0))), 4, 4))) / 1))), _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) / 1))), _GLF_IDENTITY(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) / 1))), 0 + (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) / 1))))))) | (_GLF_IDENTITY(clamp(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, _GLF_IDENTITY(clamp(_GLF_IDENTITY(4, (4) << 0), 4, 4), (clamp(_GLF_IDENTITY(4, (4) << 0), 4, 4)) - 0))) / 1))), _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) / 1))), _GLF_IDENTITY(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) / 1))), 0 + (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) / 1)))))), int(int(clamp(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) << 0), 4, 4))) / 1))), _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) / 1))), _GLF_IDENTITY(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) / 1))), 0 + (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) / 1))))))))))))) - _GLF_IDENTITY(0, 0 + _GLF_IDENTITY((0), ((0)) - (1 ^ 1)))), max(_GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) / 1))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) << 0), 4, 4))) / 1))), _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) / 1))), _GLF_IDENTITY(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) / 1))), 0 + (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) / 1)))))), (clamp(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, _GLF_IDENTITY((4), int(int((4)))) << 0), 4, 4))) / 1))), _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) / 1))), _GLF_IDENTITY(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) / _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY(1, (1) ^ 0)))))), 0 + (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) / 1))))))) | (_GLF_IDENTITY(clamp(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) << 0), 4, 4))) / 1))), _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) / 1))), _GLF_IDENTITY(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) / 1))), 0 + (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) / 1)))))), int(int(clamp(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) << 0), 4, 4))) / 1))), _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) / 1))), _GLF_IDENTITY(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) / 1))), 0 + (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) / 1))))))))))))) - _GLF_IDENTITY(0, 0 + (0))), _GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) / 1))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) << 0), 4, 4))) / 1))), _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) / 1))), _GLF_IDENTITY(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) / 1))), 0 + (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) / 1)))))), (clamp(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) << 0), 4, 4))) / 1))), _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) / 1))), _GLF_IDENTITY(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) / 1))), 0 + (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) / 1))))))) | (_GLF_IDENTITY(clamp(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) << 0), 4, 4))) / 1))), _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) / 1))), _GLF_IDENTITY(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) / 1))), 0 + (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) / 1)))))), int(int(clamp(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) << 0), 4, 4))) / 1))), _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) / 1))), _GLF_IDENTITY(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) / 1))), 0 + (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) / 1)))))))))))), int(int(_GLF_IDENTITY(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) / 1))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) << 0), 4, 4))) / 1))), _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) / 1))), _GLF_IDENTITY(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) / 1))), 0 + (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) / 1)))))), (clamp(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) << 0), 4, 4))) / 1))), _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) / 1))), _GLF_IDENTITY(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) / 1))), 0 + (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) / 1))))))) | (_GLF_IDENTITY(clamp(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) << 0), 4, 4))) / 1))), _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) / 1))), _GLF_IDENTITY(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) / 1))), 0 + (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) / 1)))))), int(int(clamp(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) << 0), 4, 4))) / 1))), _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) / 1))), _GLF_IDENTITY(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) / 1))), 0 + (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) / 1)))))))))))))))) - _GLF_IDENTITY(0, 0 + (0)))))) ^ _GLF_IDENTITY(0, _GLF_IDENTITY((0), clamp((0), (_GLF_IDENTITY(0, (0) * (0 ^ int(_GLF_ONE(1.0, injectionSwitch.y))))), _GLF_IDENTITY((0), ((0)) - 0))) * 1))) | (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) - 0), (_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, 0 | (_GLF_IDENTITY(4, 0 + (4))))) - 0), (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) / 1)))) - 0)) ^ _GLF_IDENTITY(0, _GLF_IDENTITY((0), clamp((_GLF_IDENTITY(0, (0) ^ (0 << _GLF_IDENTITY(int(6), int(6))))), (0), _GLF_IDENTITY((0), ((0)) - 0))) * 1))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) / 1), (4) - 0), (_GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-47980))), max(4, _GLF_IDENTITY(4, (4) / 1)))) - 0)) ^ _GLF_IDENTITY(0, _GLF_IDENTITY((0), clamp((0), (0), _GLF_IDENTITY((0), ((0)) - 0))) * 1))) | (_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, ~ (~ (4)))) - 0), (_GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, ~ (~ (4))), _GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (4) << 0), _GLF_IDENTITY(4, 0 | (4)))), 0 + (_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (4) << 0), _GLF_IDENTITY(4, 0 | (4))))))) / 1))), max(_GLF_IDENTITY(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (4) << 0), _GLF_IDENTITY(4, 0 | (4))))) / 1))), 0 | (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, _GLF_IDENTITY((4) << 0, 1 * (_GLF_IDENTITY((4) << _GLF_IDENTITY(0, (0) | 0), _GLF_IDENTITY((false ? _GLF_FUZZED((71932 + 12437)) : (4) << 0), clamp((false ? _GLF_FUZZED((71932 + 12437)) : (4) << 0), _GLF_IDENTITY((false ? _GLF_FUZZED((_GLF_IDENTITY(71932 + 12437, (71932 + 12437) >> (0 ^ (0 << _GLF_IDENTITY(int(3), int(3))))))) : (4) << 0), (true ? (false ? _GLF_FUZZED((71932 + 12437)) : (4) << 0) : _GLF_FUZZED(-8792))), (false ? _GLF_FUZZED((71932 + 12437)) : (4) << 0))))))), _GLF_IDENTITY(4, 0 | (4))))) / 1))))), _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (4) << _GLF_IDENTITY(0, (0) + 0)), _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, (4) >> 0), _GLF_IDENTITY(4, (4) | (4)))), 0 | (4))))) / 1), ~ (~ (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (4) << _GLF_IDENTITY(_GLF_IDENTITY(0, (0) << 0), (0) + 0)), _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, (4) >> 0), _GLF_IDENTITY(4, (4) | _GLF_IDENTITY((4), (_GLF_IDENTITY((4), ((4)) >> 0)) | ((4)))))), 0 | (4))))) / 1))))))))) - 0)) ^ _GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY((0), ~ (~ ((0)))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY((0), clamp(_GLF_IDENTITY((0), ((0)) | ((0))), (0), _GLF_IDENTITY((0), ((0)) - 0))) * 1)))))), 0 ^ (_GLF_IDENTITY(max((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(4, 0, 0, 1), (ivec4(4, 0, 0, 1)) | (ivec4(4, 0, 0, 1)))), _GLF_IDENTITY(int(int(int(_GLF_IDENTITY(ivec4(4, 0, 0, 1), (ivec4(4, 0, 0, 1)) | (ivec4(4, 0, 0, 1)))))), (int(int(int(_GLF_IDENTITY(ivec4(4, 0, 0, 1), (ivec4(4, 0, 0, 1)) | (ivec4(4, 0, 0, 1))))))) - 0))))), 4)), (4) - 0), (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (0 << _GLF_IDENTITY(int(0), int(0))) + (4))) / 1)))) - 0)) ^ _GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(-26875) : 0, (false ? _GLF_FUZZED(-26875) : 0) | (_GLF_IDENTITY(false ? _GLF_FUZZED(-26875) : 0, (false ? _GLF_FUZZED(-26875) : 0) | (false ? _GLF_FUZZED(-26875) : 0))))), clamp((_GLF_IDENTITY(false ? _GLF_FUZZED(-26875) : 0, (false ? _GLF_FUZZED(-26875) : 0) | (_GLF_IDENTITY(false ? _GLF_FUZZED(-26875) : 0, (false ? _GLF_FUZZED(-26875) : 0) | (false ? _GLF_FUZZED(-26875) : 0))))), (_GLF_IDENTITY(false ? _GLF_FUZZED(-26875) : 0, (false ? _GLF_FUZZED(-26875) : 0) | (_GLF_IDENTITY(false ? _GLF_FUZZED(-26875) : 0, (false ? _GLF_FUZZED(-26875) : 0) | (false ? _GLF_FUZZED(-26875) : 0))))), (_GLF_IDENTITY(false ? _GLF_FUZZED(-26875) : 0, (false ? _GLF_FUZZED(-26875) : 0) | (_GLF_IDENTITY(false ? _GLF_FUZZED(-26875) : 0, (false ? _GLF_FUZZED(-26875) : 0) | (false ? _GLF_FUZZED(-26875) : 0)))))))), _GLF_IDENTITY((0) / 1, clamp((0) / 1, (0) / 1, (0) / 1)))), clamp((0), (0), _GLF_IDENTITY((0), ((0)) - _GLF_IDENTITY(0, 0 ^ (0))))) * _GLF_IDENTITY(1, clamp(1, 1, 1))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(4, 0 + (4)))), 4))) ^ 0), (4) - _GLF_IDENTITY(0, (0) - 0)), (_GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) / 1)))), ((_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) / 1))))) | (_GLF_IDENTITY((_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) / 1)))), (_GLF_IDENTITY((_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) / 1)))), (_GLF_IDENTITY((_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) / 1)))), (false ? _GLF_FUZZED(74428) : _GLF_IDENTITY((_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) / 1)))), ((_GLF_IDENTITY(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) / 1))), (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) / 1)))) | (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) / 1))))))) - 0)))) ^ 0)) << 0))) - 0)) ^ _GLF_IDENTITY(0, _GLF_IDENTITY(_GLF_IDENTITY((0), clamp((0), (0), _GLF_IDENTITY((0), ((0)) - 0))) * 1, min(_GLF_IDENTITY((0), clamp((0), (0), _GLF_IDENTITY((0), ((0)) - 0))) * _GLF_IDENTITY(1, (1) ^ 0), _GLF_IDENTITY((0), clamp((0), (0), _GLF_IDENTITY((0), ((0)) - 0))) * 1))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY((4) - 0, max(_GLF_IDENTITY((4) - _GLF_IDENTITY(0, (0) >> 0), ((4) - 0) ^ 0), (4) - 0))), (_GLF_IDENTITY(4, _GLF_IDENTITY((4) - 0, max(_GLF_IDENTITY((4) - _GLF_IDENTITY(0, (0) >> 0), ((4) - 0) ^ 0), (4) - 0)))) << 0), (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) / 1)))) - 0)) ^ _GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, clamp(0, 0, 0)))))), _GLF_IDENTITY((0), clamp((0), (0), _GLF_IDENTITY((0), _GLF_IDENTITY(((0)) - 0, min((_GLF_IDENTITY((0), 0 | ((0)))) - 0, ((0)) - 0))))) * 1))) | (_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((4) - 0, ((4) - 0) | ((4) - 0)), (true ? _GLF_IDENTITY((4) - 0, ((4) - 0) | ((4) - 0)) : _GLF_FUZZED(-86182))), (_GLF_IDENTITY(_GLF_IDENTITY((4) - 0, ((4) - 0) | ((4) - 0)), (true ? _GLF_IDENTITY((4) - 0, ((4) - 0) | ((4) - 0)) : _GLF_FUZZED(-86182)))) | 0)), (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) / 1)))) - 0)) ^ _GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)), _GLF_IDENTITY((0), clamp((0), (0), _GLF_IDENTITY((0), ((0)) - 0))) * 1))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY((4) - 0, max(_GLF_IDENTITY((4) - _GLF_IDENTITY(0, (0) >> 0), ((4) - 0) ^ 0), (4) - 0))), (_GLF_IDENTITY(4, _GLF_IDENTITY((4) - 0, max(_GLF_IDENTITY((4) - _GLF_IDENTITY(0, (0) >> 0), ((4) - 0) ^ 0), (4) - 0)))) << 0), (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) / 1)))) - 0)) ^ _GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, clamp(0, 0, 0)))))), _GLF_IDENTITY((0), clamp((0), (0), _GLF_IDENTITY((0), _GLF_IDENTITY(((0)) - 0, min((_GLF_IDENTITY((0), 0 | ((0)))) - 0, ((0)) - 0))))) * 1))) | (_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((4) - 0, ((4) - 0) | ((4) - 0)), (true ? _GLF_IDENTITY((4) - 0, ((4) - 0) | ((4) - 0)) : _GLF_FUZZED(-86182))), (_GLF_IDENTITY(_GLF_IDENTITY((4) - 0, ((4) - 0) | ((4) - 0)), (true ? _GLF_IDENTITY((4) - 0, ((4) - 0) | ((4) - 0)) : _GLF_FUZZED(-86182)))) | 0)), (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) / 1)))) - 0)) ^ _GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)), _GLF_IDENTITY((0), clamp((0), (0), _GLF_IDENTITY((0), ((0)) - 0))) * 1))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY((4) - 0, max(_GLF_IDENTITY((4) - _GLF_IDENTITY(0, (0) >> 0), ((4) - 0) ^ 0), (4) - 0))), (_GLF_IDENTITY(4, _GLF_IDENTITY((4) - 0, max(_GLF_IDENTITY((4) - _GLF_IDENTITY(0, (0) >> 0), ((4) - 0) ^ 0), (4) - 0)))) << 0), (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) / 1)))) - 0)) ^ _GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, clamp(0, 0, 0)))))), _GLF_IDENTITY((0), clamp((0), (0), _GLF_IDENTITY((0), _GLF_IDENTITY(((0)) - 0, min((_GLF_IDENTITY((0), 0 | ((0)))) - 0, ((0)) - 0))))) * 1))) | (_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((4) - 0, ((4) - 0) | ((4) - 0)), (true ? _GLF_IDENTITY((4) - 0, ((4) - 0) | ((4) - 0)) : _GLF_FUZZED(-86182))), (_GLF_IDENTITY(_GLF_IDENTITY((4) - 0, ((4) - 0) | ((4) - 0)), (true ? _GLF_IDENTITY((4) - 0, ((4) - 0) | ((4) - 0)) : _GLF_FUZZED(-86182)))) | 0)), (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) / 1)))) - 0)) ^ _GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)), _GLF_IDENTITY((0), clamp((0), (0), _GLF_IDENTITY((0), ((0)) - 0))) * 1)))) | ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY((4) - 0, max(_GLF_IDENTITY((4) - _GLF_IDENTITY(0, (0) >> 0), ((4) - 0) ^ 0), (4) - 0))), (_GLF_IDENTITY(4, _GLF_IDENTITY((4) - 0, max(_GLF_IDENTITY((4) - _GLF_IDENTITY(0, (0) >> 0), ((4) - 0) ^ 0), (4) - 0)))) << 0), (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) / 1)))) - 0)) ^ _GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, clamp(0, 0, 0)))))), _GLF_IDENTITY((0), clamp((0), (0), _GLF_IDENTITY((0), _GLF_IDENTITY(((0)) - 0, min((_GLF_IDENTITY((0), 0 | ((0)))) - 0, ((0)) - 0))))) * 1))) | (_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((4) - 0, ((4) - 0) | ((4) - 0)), (true ? _GLF_IDENTITY((4) - 0, ((4) - 0) | ((4) - 0)) : _GLF_FUZZED(-86182))), (_GLF_IDENTITY(_GLF_IDENTITY((4) - 0, ((4) - 0) | ((4) - 0)), (true ? _GLF_IDENTITY((4) - 0, ((4) - 0) | ((4) - 0)) : _GLF_FUZZED(-86182)))) | 0)), (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) / 1)))) - 0)) ^ _GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)), _GLF_IDENTITY((0), clamp((0), (0), _GLF_IDENTITY((0), ((0)) - 0))) * 1)))))) | 0), min(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, 4))) - 0), (_GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, _GLF_IDENTITY((4) / 1, min((4) / 1, _GLF_IDENTITY((4) / 1, (_GLF_IDENTITY((4) / 1, 0 | ((4) / 1))) | ((4) / 1))))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4) / 1, min((4) / 1, (4) / 1)), min(_GLF_IDENTITY((4) / 1, min((4) / 1, (4) / 1)), _GLF_IDENTITY((4) / 1, min((4) / 1, (4) / 1))))))), (true ? _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec4(4, 0, 0, 0), (ivec4(4, 0, 0, 0)) / ivec4(1, 1, 1, 1))))) / 1)) / _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, max(1, 1)))), min((4) / 1, (4) / 1))))) : _GLF_FUZZED(bitfieldExtract(5989, _GLF_IDENTITY(86821, (86821) * 1), -2212))))))), clamp(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) / 1))), _GLF_IDENTITY(_GLF_IDENTITY(4, (4) * 1), max(4, _GLF_IDENTITY(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (4) << (0 | 0)), 4)), (4) / 1))), _GLF_IDENTITY(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(_GLF_IDENTITY(4, (4) / 1), (true ? _GLF_IDENTITY(_GLF_IDENTITY(4, (4) / 1), (_GLF_IDENTITY(4, (4) / 1)) << 0) : _GLF_FUZZED(-88558))))), 0 + (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) / 1)))))))) - _GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY(0, (0) - 0) + (0)), (false ? _GLF_FUZZED(int(-7279.6221)) : _GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY(0, (0) | (0)) + _GLF_IDENTITY((_GLF_IDENTITY(0, min(0, 0))), _GLF_IDENTITY(((_GLF_IDENTITY(0, min(0, 0)))) >> 0, (((_GLF_IDENTITY(0, min(0, 0)))) >> 0) ^ 0))), max(_GLF_IDENTITY(_GLF_IDENTITY(0, 0 + (0)), int(ivec4(_GLF_IDENTITY(0, 0 + (0)), 1, 1, 0))), _GLF_IDENTITY(0, 0 + (0)))))))) ^ _GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, 0 | (0))), clamp((0), (0), _GLF_IDENTITY(_GLF_IDENTITY((0), ((0)) - 0), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((0), ((0)) - 0), (_GLF_IDENTITY((0), ((0)) - 0)) >> 0)))))) * 1))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, 4))) - 0), (_GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, _GLF_IDENTITY((4) / 1, min((4) / 1, _GLF_IDENTITY((4) / 1, (_GLF_IDENTITY((4) / 1, 0 | ((4) / 1))) | ((4) / 1))))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, _GLF_IDENTITY((4) / 1, min((4) / 1, (4) / 1))))), (true ? _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, _GLF_IDENTITY((4) / _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, max(1, 1)))), min((4) / 1, (4) / 1))))) : _GLF_IDENTITY(_GLF_FUZZED(bitfieldExtract(5989, 86821, -2212)), clamp(_GLF_IDENTITY(_GLF_FUZZED(bitfieldExtract(5989, 86821, -2212)), max(_GLF_FUZZED(bitfieldExtract(5989, 86821, -2212)), _GLF_FUZZED(bitfieldExtract(5989, 86821, -2212)))), _GLF_FUZZED(bitfieldExtract(5989, 86821, -2212)), _GLF_FUZZED(bitfieldExtract(5989, 86821, -2212))))))))), clamp(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, _GLF_IDENTITY((4), min(_GLF_IDENTITY((4), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((4))), (4))) / 1))), _GLF_IDENTITY(_GLF_IDENTITY(4, (4) * 1), max(4, _GLF_IDENTITY(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (4) << (0 | 0)), 4)), (4) / 1))), _GLF_IDENTITY(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(_GLF_IDENTITY(4, (4) / 1), (true ? _GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | (4))) / 1), (_GLF_IDENTITY(4, (4) / 1)) << 0) : _GLF_FUZZED(-88558))))), 0 + (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) / 1)))))))) - _GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY(_GLF_IDENTITY(0, (0) - 0) + (0), max(_GLF_IDENTITY(0, (0) - 0) + (0), _GLF_IDENTITY(_GLF_IDENTITY(0, (0) - 0) + (0), max(_GLF_IDENTITY(0, (0) - 0) + (0), _GLF_IDENTITY(_GLF_IDENTITY(0, (0) - 0) + (0), ~ (~ (_GLF_IDENTITY(0, (0) - 0) + (0))))))))), (false ? _GLF_FUZZED(int(-7279.6221)) : _GLF_IDENTITY(_GLF_IDENTITY(0, 0 + _GLF_IDENTITY((_GLF_IDENTITY(0, _GLF_IDENTITY(min(0, 0), max(min(0, 0), min(0, 0))))), _GLF_IDENTITY(((_GLF_IDENTITY(0, min(0, 0)))) >> 0, (((_GLF_IDENTITY(0, min(0, 0)))) >> _GLF_IDENTITY(0, min(0, 0))) ^ 0))), max(_GLF_IDENTITY(_GLF_IDENTITY(0, 0 + (0)), int(ivec4(_GLF_IDENTITY(0, 0 + (0)), 1, 1, 0))), _GLF_IDENTITY(0, 0 + (0)))))))) ^ _GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, 0 | (0))), clamp((0), (0), _GLF_IDENTITY(_GLF_IDENTITY((0), ((0)) - 0), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((0), ((0)) - 0), (_GLF_IDENTITY((0), ((0)) - 0)) >> 0)))))) * 1))), _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, 4))) - 0), (_GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, _GLF_IDENTITY((4) / 1, min((4) / 1, _GLF_IDENTITY((4) / 1, (_GLF_IDENTITY((4) / 1, 0 | ((4) / 1))) | ((4) / 1))))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, _GLF_IDENTITY((4) / 1, min((4) / 1, (4) / 1))))), (true ? _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, _GLF_IDENTITY((4) / _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, max(1, 1)))), min((4) / 1, (4) / 1))))) : _GLF_FUZZED(bitfieldExtract(5989, 86821, -2212))))))), clamp(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) / 1))), _GLF_IDENTITY(_GLF_IDENTITY(4, (4) * 1), max(4, _GLF_IDENTITY(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (4) << (0 | 0)), 4)), (4) / 1))), _GLF_IDENTITY(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(_GLF_IDENTITY(4, (4) / 1), (true ? _GLF_IDENTITY(_GLF_IDENTITY(4, (4) / 1), (_GLF_IDENTITY(4, (4) / 1)) << 0) : _GLF_FUZZED(-88558))))), 0 + (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) / 1)))))))) - _GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY(0, (0) - 0) + (0)), (false ? _GLF_FUZZED(int(-7279.6221)) : _GLF_IDENTITY(_GLF_IDENTITY(0, 0 + _GLF_IDENTITY((_GLF_IDENTITY(0, min(0, 0))), _GLF_IDENTITY(((_GLF_IDENTITY(0, min(0, 0)))) >> 0, (((_GLF_IDENTITY(0, min(0, 0)))) >> 0) ^ 0))), max(_GLF_IDENTITY(_GLF_IDENTITY(0, 0 + (0)), int(ivec4(_GLF_IDENTITY(0, 0 + (0)), 1, 1, 0))), _GLF_IDENTITY(0, 0 + (0)))))))) ^ _GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, 0 | (0))), clamp((0), (0), _GLF_IDENTITY(_GLF_IDENTITY((0), ((0)) - 0), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((0), ((0)) - 0), (_GLF_IDENTITY((0), ((0)) - 0)) >> 0)))))) * 1)))) >> 0, ~ (~ (((_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, 4))) - 0), (_GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(_GLF_IDENTITY(4, (4) + (0 ^ 0)), _GLF_IDENTITY((4) / 1, min((4) / 1, _GLF_IDENTITY((4) / 1, (_GLF_IDENTITY((4) / 1, 0 | ((4) / 1))) | ((4) / 1))))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, _GLF_IDENTITY((4) / 1, min((4) / 1, (4) / 1))))), (true ? _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, _GLF_IDENTITY((4) / _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, max(1, 1)))), min((4) / 1, (4) / 1))))) : _GLF_FUZZED(bitfieldExtract(5989, 86821, -2212))))))), clamp(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) / 1))), _GLF_IDENTITY(_GLF_IDENTITY(4, (4) * 1), max(4, _GLF_IDENTITY(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (4) << (0 | 0)), 4)), (4) / 1))), _GLF_IDENTITY(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(_GLF_IDENTITY(4, (4) / 1), (true ? _GLF_IDENTITY(_GLF_IDENTITY(4, (4) / 1), (_GLF_IDENTITY(4, (4) / 1)) << 0) : _GLF_FUZZED(-88558))))), 0 + (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) / 1)))))))) - _GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY(0, (0) - 0) + (0)), (false ? _GLF_FUZZED(int(-7279.6221)) : _GLF_IDENTITY(_GLF_IDENTITY(0, 0 + _GLF_IDENTITY((_GLF_IDENTITY(0, min(0, 0))), _GLF_IDENTITY(((_GLF_IDENTITY(0, min(0, 0)))) >> 0, (((_GLF_IDENTITY(0, min(0, 0)))) >> 0) ^ 0))), max(_GLF_IDENTITY(_GLF_IDENTITY(0, 0 + (0)), int(ivec4(_GLF_IDENTITY(0, 0 + (0)), 1, 1, 0))), _GLF_IDENTITY(0, 0 + (0)))))))) ^ _GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, 0 | (0))), clamp((0), (0), _GLF_IDENTITY(_GLF_IDENTITY((0), ((0)) - 0), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((0), ((0)) - 0), (_GLF_IDENTITY((0), ((0)) - 0)) >> 0)))))) * 1)))) >> 0))))) >> 0) | (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) - 0), _GLF_IDENTITY((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) / 1)))) - 0)) ^ _GLF_IDENTITY(0, _GLF_IDENTITY((0), clamp((_GLF_IDENTITY(0, (0) ^ (0 << _GLF_IDENTITY(int(6), int(6))))), (0), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, 0 | (0))))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, 0 | (0))))), (_GLF_IDENTITY((_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, 0 | (0))))), int(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, 0 | (0))))), int(_GLF_IDENTITY(ivec4((_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, 0 | (0))))), 0, 1, 1), (ivec4((_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, 0 | (0))))), 0, 1, 1)) | (_GLF_IDENTITY(ivec4((_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, 0 | (0))))), 0, 1, 1), (ivec4((_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, 0 | (0))))), 0, 1, 1)) | (ivec4((_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, 0 | (0))))), 0, 1, 1))))))), 0, 0, 1)))) ^ 0), _GLF_IDENTITY((_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, _GLF_IDENTITY(0, max(0, 0)) | (0))))), ((_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, 0 | (0)))))) | ((_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, 0 | (0))))))), _GLF_IDENTITY((_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, 0 | (0))))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, 0 | (0)))))), (~ ((_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, 0 | (0))))))) << 0))))), ((_GLF_IDENTITY(0, int(ivec3(_GLF_IDENTITY(0, (0) << 0), 1, 0))))) - 0))) * 1), (_GLF_IDENTITY((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, _GLF_IDENTITY(max(4, _GLF_IDENTITY(4, _GLF_IDENTITY((4), clamp((4), (4), _GLF_IDENTITY((4), min((4), (4))))) / 1)), (max(4, _GLF_IDENTITY(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, ~ (~ (4))), 4)), (4) / 1))) * (1 ^ 0)))) - 0)) ^ _GLF_IDENTITY(0, _GLF_IDENTITY((0), clamp((_GLF_IDENTITY(0, (0) ^ (0 << _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, _GLF_IDENTITY(int(int(6)), (int(int(6))) << 0))))))), (0), _GLF_IDENTITY((0), ((0)) - 0))) * 1), (_GLF_IDENTITY((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) / 1)))) - 0)), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(_GLF_IDENTITY(4, (4) / 1), (_GLF_IDENTITY(4, (4) / 1)) ^ 0)))) - 0)), ((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) / 1)))) - 0))) >> 0)))) ^ _GLF_IDENTITY(0, _GLF_IDENTITY((0), clamp((_GLF_IDENTITY(0, (0) ^ (0 << _GLF_IDENTITY(int(6), int(6))))), (0), _GLF_IDENTITY((0), ((_GLF_IDENTITY(0, max(0, 0)))) - 0))) * 1)) >> int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x)))) << 0))), (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) - 0), (_GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), max(~ (4), _GLF_IDENTITY(~ (4), 0 ^ (~ (4))))))), max(4, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, ~ (~ (4))), _GLF_IDENTITY(4, min(4, 4))))) / 1)))) - 0)) ^ _GLF_IDENTITY(0, _GLF_IDENTITY((0), clamp((0), (0), _GLF_IDENTITY((0), ((0)) - 0))) * 1))) | (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) - 0), _GLF_IDENTITY((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (4) << 0), _GLF_IDENTITY(4, 0 | (4))))) / 1)))) - 0)), ((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (4) << 0), _GLF_IDENTITY(4, 0 | (4))))) / 1)))) - 0))) / 1) ^ _GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY((0), clamp(_GLF_IDENTITY(_GLF_IDENTITY((0), 0 | ((0))), ((0)) | ((0))), (0), _GLF_IDENTITY((0), _GLF_IDENTITY(((0)), 0 | (((0)))) - 0))) * 1)))))), (max((_GLF_IDENTITY(_GLF_IDENTITY(4, (4) - _GLF_IDENTITY(0, max(0, 0))), (_GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, _GLF_IDENTITY((4), ((4)) + 0) / 1))), 0 + (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) / 1)))))) - 0)) ^ _GLF_IDENTITY(0, _GLF_IDENTITY((0), clamp((0), (0), _GLF_IDENTITY((0), ((0)) - _GLF_IDENTITY(0, 0 ^ (0))))) * 1))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, clamp(4, 4, 4))) ^ 0), (4) - 0), _GLF_IDENTITY((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) / 1)))) - 0)) ^ _GLF_IDENTITY(0, _GLF_IDENTITY(_GLF_IDENTITY((0), 0 + ((0))), clamp((0), (0), _GLF_IDENTITY((0), _GLF_IDENTITY(((0)) - 0, (((0)) - 0) << (0 << _GLF_IDENTITY(int(8), int(8))))))) * 1), max(_GLF_IDENTITY((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) / 1)))) - 0)) ^ _GLF_IDENTITY(0, _GLF_IDENTITY(_GLF_IDENTITY((0), 0 + ((0))), clamp((0), (0), _GLF_IDENTITY((0), _GLF_IDENTITY(((0)) - 0, (((0)) - 0) << (0 << _GLF_IDENTITY(int(8), int(8))))))) * 1), ((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) / 1)))) - 0)) ^ _GLF_IDENTITY(0, _GLF_IDENTITY(_GLF_IDENTITY((0), 0 + ((0))), clamp((0), (0), _GLF_IDENTITY((0), _GLF_IDENTITY(((0)) - 0, (((0)) - 0) << (0 << _GLF_IDENTITY(int(8), int(8))))))) * 1)) + 0), (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) / 1)))) - 0)) ^ _GLF_IDENTITY(0, _GLF_IDENTITY(_GLF_IDENTITY((0), 0 + ((0))), clamp((0), (0), _GLF_IDENTITY((0), _GLF_IDENTITY(((0)) - 0, (((0)) - 0) << (0 << _GLF_IDENTITY(int(8), int(8))))))) * 1))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) - 0), (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) / 1)))) - 0)) ^ _GLF_IDENTITY(0, _GLF_IDENTITY((0), clamp((0), (0), _GLF_IDENTITY((0), _GLF_IDENTITY(((0)) - _GLF_IDENTITY(0, max(0, 0)), min(((0)) - 0, ((0)) - 0))))) * 1)), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) / 1), (4) - 0), (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, _GLF_IDENTITY((4) / 1, ((4) / 1) ^ 0))))) - 0)) ^ _GLF_IDENTITY(0, _GLF_IDENTITY((0), clamp((0), (0), _GLF_IDENTITY((0), _GLF_IDENTITY((_GLF_IDENTITY((0), ~ (~ ((0))))) - 0, min(((0)) - 0, ((0)) - 0))))) * 1))))) | (_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY((4) - _GLF_IDENTITY(0, (0) / 1), ((4) - 0) | ((4) - 0))), (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) / 1)))) - 0)) ^ _GLF_IDENTITY(0, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, clamp(0, 0, 0)) : _GLF_FUZZED(39366)))), clamp((0), (0), _GLF_IDENTITY((0), ((0)) - 0))) * 1, max(_GLF_IDENTITY((0), clamp((0), (0), _GLF_IDENTITY((0), (_GLF_IDENTITY((0), (_GLF_IDENTITY((0), ((0)) << 0)) | 0)) - 0))) * 1, _GLF_IDENTITY((0), clamp((0), (0), _GLF_IDENTITY((0), ((0)) - 0))) * 1))))), min((_GLF_IDENTITY(_GLF_IDENTITY(4, (4) - 0), (_GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) / 1))), max(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) / 1))), _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) / 1))))), clamp(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) / _GLF_IDENTITY(1, (1) / 1)))), _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, clamp(4, 4, 4))) / 1))), _GLF_IDENTITY(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) / 1))), 0 + (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(13892)))))) / 1)))))))) - _GLF_IDENTITY(0, 0 + (0)))) ^ _GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, (0) * ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))))), clamp((0), (0), _GLF_IDENTITY((0), ((0)) - 0))) * 1))) | (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) - 0), (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, 0 ^ (4))) / 1)))) - 0)) ^ _GLF_IDENTITY(0, _GLF_IDENTITY((0), clamp(_GLF_IDENTITY((_GLF_IDENTITY(0, (0) ^ (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), (_GLF_IDENTITY(int(6), int(6))) * (1 & 1))))), ((_GLF_IDENTITY(0, (0) ^ (0 << _GLF_IDENTITY(int(6), int(6)))))) ^ 0), (0), _GLF_IDENTITY((0), ((0)) - 0))) * 1))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) - 0), _GLF_IDENTITY((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, _GLF_IDENTITY((4), _GLF_IDENTITY(int(ivec2((4), int(_GLF_ZERO(0.0, injectionSwitch.x)))), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(int(ivec2((4), int(_GLF_ZERO(0.0, injectionSwitch.x)))), ~ (~ (int(ivec2((4), int(_GLF_ZERO(0.0, injectionSwitch.x)))))))))) / 1)))) - 0)), int(int(_GLF_IDENTITY((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, _GLF_IDENTITY((4), _GLF_IDENTITY(int(ivec2((4), int(_GLF_ZERO(0.0, injectionSwitch.x)))), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(int(ivec2((4), int(_GLF_ZERO(0.0, injectionSwitch.x)))), ~ (~ (int(ivec2((4), int(_GLF_ZERO(0.0, injectionSwitch.x)))))))))) / 1)))) - 0)), min((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, _GLF_IDENTITY((4), _GLF_IDENTITY(int(ivec2((4), int(_GLF_ZERO(0.0, injectionSwitch.x)))), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(int(ivec2((4), int(_GLF_ZERO(0.0, injectionSwitch.x)))), ~ (~ (int(ivec2((4), int(_GLF_ZERO(0.0, injectionSwitch.x)))))))))) / 1)))) - 0)), (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, _GLF_IDENTITY((4), _GLF_IDENTITY(int(ivec2((4), int(_GLF_ZERO(0.0, injectionSwitch.x)))), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(int(ivec2((4), int(_GLF_ZERO(0.0, injectionSwitch.x)))), ~ (~ (int(ivec2((4), int(_GLF_ZERO(0.0, injectionSwitch.x)))))))))) / 1)))) - 0))))))) ^ _GLF_IDENTITY(0, _GLF_IDENTITY((0), clamp((0), (0), _GLF_IDENTITY((0), ((0)) - 0))) * 1)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY((4), max((4), (4))) - 0), _GLF_IDENTITY((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) / 1)))) - 0)) ^ _GLF_IDENTITY(0, _GLF_IDENTITY((0), clamp((0), (0), _GLF_IDENTITY((0), ((0)) - 0))) * 1), 0 | ((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) / 1)))) - 0)) ^ _GLF_IDENTITY(0, _GLF_IDENTITY((0), clamp((0), (0), _GLF_IDENTITY((0), ((0)) - 0))) * 1)))) : _GLF_FUZZED(-36944)))) | (_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY((4) - 0, min((4) - 0, (4) - 0))), (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, ~ (~ (4))), 4)), max(_GLF_IDENTITY(4, (4) << 0), _GLF_IDENTITY(_GLF_IDENTITY(4, 0 | (4)), _GLF_IDENTITY(1, clamp(1, 1, 1)) * (_GLF_IDENTITY(4, 0 | (4))))))) / 1)))) - 0)) ^ _GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY((0), clamp(_GLF_IDENTITY((0), ((_GLF_IDENTITY(0, (_GLF_IDENTITY(0, ~ (~ (0)))) ^ 0))) | ((0))), _GLF_IDENTITY((0), max((0), (0))), _GLF_IDENTITY((0), ((0)) - 0))) * 1))))))) | (0 | _GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, (0) | (0)))))))))))));
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false))))
        {
         if(_GLF_DEAD(false))
          continue;
         continue;
         if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))
          return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
       break;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
