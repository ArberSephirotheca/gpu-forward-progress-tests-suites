#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460
struct _GLF_struct_1 {
 uint _f0;
 mat2x4 _f1;
 bool _f2;
 uvec4 _f3;
} ;

struct _GLF_struct_0 {
 vec2 _f0;
 mat3x4 _f1;
 mat3 _f2;
 uvec3 _f3;
 mat4x3 _f4;
} ;

struct _GLF_struct_2 {
 _GLF_struct_0 _f0;
 mat4 _f1;
 _GLF_struct_1 _f2;
 int _f3;
} ;

struct _GLF_struct_3 {
 _GLF_struct_2 _f0;
 uint next_virtual_gid;
 bvec2 _f1;
 uvec4 _f2;
 mat3x4 _f3;
 uvec3 _f4;
 float _f5;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec2 GLF_merged2_0_1_4_1_1_13readsubgroup_size;
 uvec4 GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id;
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 GLF_merged2_0_1_4_1_1_13readsubgroup_size.y = subgroup_size;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id.x = subgroup_local_id;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id.w = workgroup_id;
 uint workgroup_base = workgroup_size * GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id.w;
 GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id.z = workgroup_base;
 uint virtual_gid = GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id.z + subgroup_id * GLF_merged2_0_1_4_1_1_13readsubgroup_size.y + GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id.x;
 GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id.y = virtual_gid;
 _GLF_struct_3 _GLF_struct_replacement_3 = _GLF_struct_3(_GLF_struct_2(_GLF_struct_0(vec2(1.0), mat3x4(1.0), mat3(1.0), uvec3(1u), mat4x3(1.0)), mat4(1.0), _GLF_struct_1(1u, mat2x4(1.0), true, uvec4(1u)), 1), GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id.z + subgroup_id * GLF_merged2_0_1_4_1_1_13readsubgroup_size.y + ((GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id.x + 1) % GLF_merged2_0_1_4_1_1_13readsubgroup_size.y), bvec2(true), uvec4(1u), mat3x4(1.0), uvec3(1u), 1.0);
 uint read = atomicLoad(buf[GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id.y], 4, 64, 0);
 GLF_merged2_0_1_4_1_1_13readsubgroup_size.x = read;
 atomicStore(buf[_GLF_struct_replacement_3.next_virtual_gid], uint(1), 4, 64, 4);
 atomicStore(checker[GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id.y], GLF_merged2_0_1_4_1_1_13readsubgroup_size.x, 4, 64, 4);
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
