#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_52 {
 uint workgroup_size;
 vec2 _f0;
 uint _f1;
} ;

struct _GLF_struct_53 {
 mat3x2 _f0;
 _GLF_struct_52 _f1;
} ;

struct _GLF_struct_49 {
 uint _f0;
 mat4x2 _f1;
} ;

struct _GLF_struct_48 {
 mat4 _f0;
} ;

struct _GLF_struct_50 {
 ivec3 _f0;
 _GLF_struct_48 _f1;
 _GLF_struct_49 _f2;
} ;

struct _GLF_struct_46 {
 mat4x2 _f0;
 mat4 _f1;
 mat4 _f2;
 bvec4 _f3;
 bvec2 _f4;
 mat3x4 _f5;
} ;

struct _GLF_struct_45 {
 mat3x4 _f0;
} ;

struct _GLF_struct_44 {
 mat3x2 _f0;
} ;

struct _GLF_struct_47 {
 _GLF_struct_44 _f0;
 bool _f1;
 _GLF_struct_45 _f2;
 _GLF_struct_46 _f3;
} ;

struct _GLF_struct_42 {
 vec4 _f0;
 mat3x4 _f1;
 ivec2 _f2;
 mat3x4 _f3;
 mat3x2 _f4;
 ivec2 _f5;
 mat2 _f6;
} ;

struct _GLF_struct_41 {
 mat3x4 _f0;
 mat4 _f1;
 uvec2 _f2;
 vec3 _f3;
 vec3 _f4;
 bvec3 _f5;
 mat2x3 _f6;
} ;

struct _GLF_struct_43 {
 vec4 _f0;
 ivec3 _f1;
 uvec3 _f2;
 _GLF_struct_41 _f3;
 _GLF_struct_42 _f4;
} ;

struct _GLF_struct_51 {
 mat2 _f0;
 uint next_virtual_gid;
 bvec4 _f1;
 _GLF_struct_43 _f2;
 _GLF_struct_47 _f3;
 bvec4 _f4;
 mat2x3 _f5;
 _GLF_struct_50 _f6;
} ;

struct _GLF_struct_38 {
 mat4 _f0;
 mat3x2 _f1;
 uint _f2;
 uint _f3;
 ivec3 _f4;
} ;

struct _GLF_struct_37 {
 uvec3 _f0;
 mat3x2 _f1;
 ivec3 _f2;
 vec3 _f3;
 uvec4 _f4;
} ;

struct _GLF_struct_39 {
 _GLF_struct_37 _f0;
 _GLF_struct_38 _f1;
 uvec4 _f2;
 bool _f3;
} ;

struct _GLF_struct_35 {
 vec4 _f0;
 uvec3 _f1;
 ivec4 _f2;
} ;

struct _GLF_struct_34 {
 bool _f0;
 vec3 _f1;
 vec4 _f2;
 uvec3 _f3;
 bool _f4;
} ;

struct _GLF_struct_33 {
 ivec3 _f0;
 mat4x2 _f1;
 uint _f2;
 mat4x3 _f3;
 vec2 _f4;
 ivec3 _f5;
} ;

struct _GLF_struct_32 {
 mat4 _f0;
 mat3x4 _f1;
 uvec4 _f2;
 ivec3 _f3;
} ;

struct _GLF_struct_31 {
 mat4 _f0;
 uvec2 _f1;
 mat2x3 _f2;
} ;

struct _GLF_struct_36 {
 _GLF_struct_31 _f0;
 int _f1;
 _GLF_struct_32 _f2;
 _GLF_struct_33 _f3;
 _GLF_struct_34 _f4;
 _GLF_struct_35 _f5;
 mat2 _f6;
} ;

struct _GLF_struct_29 {
 int _f0;
 mat3x2 _f1;
 ivec3 _f2;
 mat3x4 _f3;
} ;

struct _GLF_struct_28 {
 uvec3 _f0;
} ;

struct _GLF_struct_27 {
 float _f0;
 mat4x3 _f1;
 mat3 _f2;
 mat4 _f3;
} ;

struct _GLF_struct_30 {
 _GLF_struct_27 _f0;
 uvec4 _f1;
 mat3x2 _f2;
 _GLF_struct_28 _f3;
 _GLF_struct_29 _f4;
} ;

struct _GLF_struct_40 {
 _GLF_struct_30 _f0;
 _GLF_struct_36 _f1;
 uint virtual_gid;
 _GLF_struct_39 _f2;
 uvec3 _f3;
 uvec3 _f4;
} ;

struct _GLF_struct_24 {
 vec4 _f0;
 uvec2 _f1;
 mat2x4 _f2;
 uvec4 _f3;
 mat4x2 _f4;
} ;

struct _GLF_struct_25 {
 uint _f0;
 uvec3 _f1;
 _GLF_struct_24 _f2;
 mat2x4 _f3;
} ;

struct _GLF_struct_26 {
 ivec4 _f0;
 uint workgroup_id;
 _GLF_struct_25 _f1;
} ;

struct _GLF_struct_21 {
 mat2x3 _f0;
 int _f1;
} ;

struct _GLF_struct_20 {
 mat2 _f0;
 bool _f1;
} ;

struct _GLF_struct_19 {
 int _f0;
 mat3x4 _f1;
} ;

struct _GLF_struct_22 {
 int _f0;
 bool _f1;
 _GLF_struct_19 _f2;
 ivec2 _f3;
 _GLF_struct_20 _f4;
 _GLF_struct_21 _f5;
 bvec4 _f6;
} ;

struct _GLF_struct_18 {
 uint _f0;
} ;

struct _GLF_struct_16 {
 mat2x3 _f0;
 mat3 _f1;
 mat4 _f2;
 vec2 _f3;
 mat4x3 _f4;
} ;

struct _GLF_struct_15 {
 uvec2 _f0;
 uvec2 _f1;
 float _f2;
 vec4 _f3;
} ;

struct _GLF_struct_17 {
 mat3x4 _f0;
 _GLF_struct_15 _f1;
 _GLF_struct_16 _f2;
 int _f3;
} ;

struct _GLF_struct_13 {
 vec2 _f0;
 mat3 _f1;
 vec3 _f2;
 bool _f3;
 uvec4 _f4;
 mat2x4 _f5;
 mat4x2 _f6;
} ;

struct _GLF_struct_12 {
 vec3 _f0;
} ;

struct _GLF_struct_11 {
 bool _f0;
 mat3 _f1;
 mat3 _f2;
} ;

struct _GLF_struct_14 {
 int _f0;
 _GLF_struct_11 _f1;
 mat3 _f2;
 vec4 _f3;
 _GLF_struct_12 _f4;
 _GLF_struct_13 _f5;
} ;

struct _GLF_struct_9 {
 uvec4 _f0;
} ;

struct _GLF_struct_8 {
 uint subgroup_id;
 ivec2 _f0;
 mat2x4 _f1;
 mat4x3 _f2;
} ;

struct _GLF_struct_7 {
 vec4 _f0;
 bvec2 _f1;
 bvec2 _f2;
} ;

struct _GLF_struct_6 {
 bvec3 _f0;
 vec3 _f1;
 uint _f2;
} ;

struct _GLF_struct_10 {
 _GLF_struct_6 _f0;
 _GLF_struct_7 _f1;
 _GLF_struct_8 _f2;
 bvec4 _f3;
 _GLF_struct_9 _f4;
 mat4 _f5;
} ;

struct _GLF_struct_4 {
 mat4x2 _f0;
 uint _f1;
 bvec2 _f2;
 mat3x2 _f3;
 int _f4;
} ;

struct _GLF_struct_3 {
 mat2x4 _f0;
 bvec3 _f1;
 mat4 _f2;
 bvec3 _f3;
 uvec2 _f4;
 ivec2 _f5;
} ;

struct _GLF_struct_2 {
 int _f0;
 mat2 _f1;
 bvec3 _f2;
 mat2 _f3;
} ;

struct _GLF_struct_1 {
 uint _f0;
 ivec4 _f1;
 uvec4 _f2;
 vec2 _f3;
 mat4x3 _f4;
 uvec2 _f5;
} ;

struct _GLF_struct_0 {
 vec3 _f0;
 bool _f1;
 mat4 _f2;
 mat3 _f3;
} ;

struct _GLF_struct_5 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 mat4 _f2;
 _GLF_struct_2 _f3;
 _GLF_struct_3 _f4;
 _GLF_struct_4 _f5;
 mat2 _f6;
} ;

struct _GLF_struct_23 {
 _GLF_struct_5 _f0;
 _GLF_struct_10 _f1;
 _GLF_struct_14 _f2;
 _GLF_struct_17 _f3;
 _GLF_struct_18 _f4;
 _GLF_struct_22 _f5;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec4 GLF_merged2_0_3_73_3_1_4GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_baseread;
 uvec4 GLF_merged3_0_2_56_2_1_13_3_1_17GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenum_workgroupsubgroup_local_id;
 uvec4 GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_basenum_workgroup;
 uvec4 GLF_merged3_0_2_56_2_1_4_3_1_13GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizereadsubgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true)), true && ((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) || false), _GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y))))))), (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)))))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uvec4 GLF_merged4_0_1_4_1_1_11_2_1_14_3_1_14readvirtual_gidworkgroup_baseworkgroup_size;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(asin(-0.6)) : injectionSwitch.y))))))
      {
       barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uvec2 GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec2(false, false)))))
  {
  }
 else
  {
   GLF_merged3_0_2_56_2_1_13_3_1_17GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenum_workgroupsubgroup_local_id.xy = GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   GLF_merged3_0_2_56_2_1_4_3_1_13GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizereadsubgroup_size.xy = GLF_merged3_0_2_56_2_1_13_3_1_17GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenum_workgroupsubgroup_local_id.xy;
  }
 uvec3 GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_base;
 _GLF_IDENTITY(GLF_merged2_0_3_73_3_1_4GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_baseread.xyz = GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_base, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, false || (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(bvec2(_GLF_IDENTITY(false, false || (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, true)))) ? _GLF_FUZZED(uvec3(185177u, 181112u, 132274u)) : GLF_merged2_0_3_73_3_1_4GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_baseread.xyz = GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_base));
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_basenum_workgroup.xyz = GLF_merged2_0_3_73_3_1_4GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_baseread.xyz;
  }
 else
  {
  }
 do
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) && true) || (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false)))))), true)), bvec2(bvec4(bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false)))))), true)), false, true)))))))))))));
 _GLF_struct_23 _GLF_struct_replacement_23 = _GLF_struct_23(_GLF_struct_5(_GLF_struct_0(vec3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(1.0, (1.0) * 1.0)), float(_GLF_FUZZED(_GLF_IDENTITY((1.5 * -8.0), max((1.5 * -8.0), _GLF_IDENTITY((1.5 * -8.0), clamp((1.5 * -8.0), (1.5 * -8.0), (1.5 * -8.0))))))), bool(false)), clamp(mix(float(_GLF_IDENTITY(1.0, (1.0) * 1.0)), float(_GLF_FUZZED((1.5 * -8.0))), bool(false)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) * 1.0), float(mat3x2(_GLF_IDENTITY(1.0, (1.0) * 1.0), 0.0, 0.0, determinant(mat2(0.0, 0.0, abs(0.0), 0.0)), 0.0, 0.0)))), float(_GLF_FUZZED((1.5 * -8.0))), bool(false)), _GLF_IDENTITY(mix(float(_GLF_IDENTITY(1.0, (1.0) * _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(acosh(30.90)) : _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0)))))), float(_GLF_FUZZED((1.5 * -8.0))), bool(false)), clamp(mix(float(_GLF_IDENTITY(1.0, (1.0) * 1.0)), float(_GLF_FUZZED((1.5 * -8.0))), bool(false)), _GLF_IDENTITY(mix(float(_GLF_IDENTITY(1.0, (1.0) * 1.0)), float(_GLF_FUZZED((1.5 * -8.0))), bool(false)), (mix(float(_GLF_IDENTITY(1.0, (1.0) * 1.0)), float(_GLF_FUZZED((1.5 * -8.0))), _GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), false)))))))) - 0.0), mix(float(_GLF_IDENTITY(1.0, (1.0) * 1.0)), float(_GLF_FUZZED((1.5 * -8.0))), bool(false)))))))), true, mat4(1.0), _GLF_IDENTITY(mat3(1.0), mat3(1.0) * (_GLF_IDENTITY(mat3(1.0), mat3(1.0) * (_GLF_IDENTITY(mat3(1.0), transpose(transpose(mat3(1.0))))))))), _GLF_struct_1(1u, ivec4(_GLF_IDENTITY(1, _GLF_IDENTITY((1), (_GLF_IDENTITY((1), ((1)) - 0)) >> 0) - 0)), uvec4(_GLF_IDENTITY(1u, (1u) << 0u)), vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0))), mat4x3(1.0), uvec2(1u)), mat4(1.0), _GLF_struct_2(1, mat2(1.0), bvec3(true), mat2(1.0)), _GLF_struct_3(mat2x4(1.0), _GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(_GLF_IDENTITY(true, ! (! (true))))))), mat4(1.0), bvec3(true), uvec2(1u), ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), (_GLF_IDENTITY(1, (1) - 0)) << 0))), _GLF_struct_4(mat4x2(1.0), 1u, bvec2(true), mat3x2(1.0), 1), mat2(1.0)), _GLF_struct_10(_GLF_struct_6(bvec3(_GLF_IDENTITY(true, ! (! (true)))), vec3(1.0), _GLF_IDENTITY(1u, uint(uint(_GLF_IDENTITY(1u, (1u) / 1u))))), _GLF_struct_7(_GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, max(1.0, 1.0))), (vec4(_GLF_IDENTITY(1.0, max(1.0, 1.0)))) + vec4(0.0, 0.0, 0.0, 0.0)), bvec2(true), bvec2(true)), _GLF_struct_8(gl_SubgroupID, ivec2(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false) ? 1 : _GLF_FUZZED(62497)))))), mat2x4(_GLF_IDENTITY(1.0, max(1.0, 1.0))), mat4x3(1.0)), bvec4(true), _GLF_struct_9(uvec4(1u)), mat4(1.0)), _GLF_struct_14(_GLF_IDENTITY(1, 0 + (1)), _GLF_struct_11(true, mat3(1.0), mat3(1.0)), mat3(1.0), vec4(1.0), _GLF_struct_12(_GLF_IDENTITY(vec3(1.0), min(vec3(1.0), _GLF_IDENTITY(vec3(1.0), (vec3(1.0)) * mat3(1.0))))), _GLF_struct_13(vec2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), mat3(1.0), vec3(_GLF_IDENTITY(1.0, max(1.0, 1.0))), true, uvec4(1u), mat2x4(1.0), mat4x2(1.0))), _GLF_struct_17(mat3x4(1.0), _GLF_struct_15(uvec2(1u), uvec2(1u), 1.0, vec4(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, float(vec2(1.0, 0.0)))), float(_GLF_FUZZED(_GLF_IDENTITY(-8.1, (false ? _GLF_FUZZED(-80.81) : -8.1)))), bool(false))))), _GLF_struct_16(mat2x3(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), ((_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(1.0, 1.0, 1.0, abs(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), 0.0, 1.0), mat2(1.0) * (mat3x2(1.0, 1.0, 1.0, abs(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), 0.0, 1.0)))), clamp(float(_GLF_IDENTITY(mat3x2(1.0, 1.0, 1.0, abs(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), 0.0, 1.0), mat2(1.0) * (mat3x2(1.0, 1.0, 1.0, abs(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), 0.0, 1.0)))), float(_GLF_IDENTITY(mat3x2(1.0, 1.0, 1.0, abs(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), 0.0, 1.0), mat2(1.0) * (mat3x2(1.0, 1.0, 1.0, abs(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), 0.0, 1.0)))), float(_GLF_IDENTITY(mat3x2(1.0, 1.0, 1.0, abs(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), 0.0, 1.0), mat2(1.0) * (mat3x2(1.0, 1.0, 1.0, abs(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), 0.0, 1.0))))))))) / _GLF_IDENTITY(exp(0.0), min(exp(0.0), exp(0.0)))) - 0.0)), mat3(1.0), _GLF_IDENTITY(mat4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3x2(1.0, cos(0.0), 1.0, 0.0, 0.0, 1.0)), (true ? float(mat3x2(1.0, cos(0.0), 1.0, 0.0, 0.0, 1.0)) : _GLF_FUZZED(-5378.4855)))), max(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0)))), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(9434.8747), max(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(9434.8747), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(9434.8747)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))) ? 1.0 : _GLF_FUZZED(9434.8747)))))), (false ? _GLF_FUZZED(mat4(5152.1253, 5.6, 9.7, -76.82, 45.43, 537.880, -65.27, 58.63, _GLF_IDENTITY(6.9, (_GLF_IDENTITY(6.9, max(6.9, 6.9))) + 0.0), 714.895, -9.1, -882.309, -9.6, 0.4, -6056.2738, 3.2)) : mat4(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(9434.8747)))))))), (_GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))) ? _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, float(mat3x2(1.0, 0.0, 1.0, 1.0, 1.0, 0.0))), 1.0)) : _GLF_FUZZED(9434.8747)))))), (false ? _GLF_FUZZED(mat4(5152.1253, 5.6, 9.7, -76.82, 45.43, 537.880, -65.27, 58.63, _GLF_IDENTITY(6.9, (_GLF_IDENTITY(6.9, max(_GLF_IDENTITY(6.9, min(6.9, _GLF_IDENTITY(6.9, (6.9) * 1.0))), 6.9))) + 0.0), 714.895, -9.1, -882.309, -9.6, 0.4, -6056.2738, 3.2)) : _GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(9434.8747)), mix(float(_GLF_FUZZED(-176.797)), float((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(9434.8747))), bool(true))))))), (mat4(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(9434.8747)), mix(float(_GLF_FUZZED(-176.797)), float((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(9434.8747))), bool(true)))))))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) / mat4(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) - 0.0), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)), vec2(1.0), mat4x3(1.0)), 1), _GLF_struct_18(1u), _GLF_struct_22(1, true, _GLF_struct_19(_GLF_IDENTITY(1, (1) << 0), mat3x4(1.0)), ivec2(1), _GLF_struct_20(mat2(1.0), true), _GLF_struct_21(mat2x3(1.0), 1), bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), false, true))) || (_GLF_IDENTITY(true, (true) || false))))));
 uint subgroup_size = gl_SubgroupSize;
 GLF_merged3_0_2_56_2_1_4_3_1_13GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizereadsubgroup_size.w = subgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 GLF_merged3_0_2_56_2_1_13_3_1_17GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenum_workgroupsubgroup_local_id.w = subgroup_local_id;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     barrier();
    }
   for(int _injected_loop_counter = int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     GLF_merged3_0_2_56_2_1_4_3_1_13GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizereadsubgroup_size.xy.x = GLF_merged3_0_2_56_2_1_13_3_1_17GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenum_workgroupsubgroup_local_id.w;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, true)), bool(bvec4(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, true)), true, true, false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), false, true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), false, true)))))))))
      barrier();
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) << 0) != 1); _injected_loop_counter ++)
      {
       barrier();
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))).x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0), vec2(_GLF_IDENTITY(vec4(vec2(1.0, 1.0), 0.0, 1.0), mix(vec4(_GLF_FUZZED(1.3), (vec4(vec2(1.0, 1.0), 0.0, 1.0))[1], (vec4(vec2(1.0, 1.0), 0.0, 1.0))[2], (vec4(vec2(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0), 0.0, 1.0))[3]), _GLF_IDENTITY(vec4((vec4(vec2(1.0, 1.0), 0.0, 1.0))[0], _GLF_FUZZED(-204.014), _GLF_FUZZED(-1.6), _GLF_FUZZED(-841.222)), mat4(1.0) * (vec4((vec4(vec2(1.0, 1.0), 0.0, 1.0))[0], _GLF_FUZZED(-204.014), _GLF_FUZZED(-1.6), _GLF_FUZZED(-841.222)))), bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) * (injectionSwitch)))).x > injectionSwitch.y), bool(bool((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))).x > injectionSwitch.y))))))))));
 uint num_workgroup = gl_NumWorkGroups.x;
 GLF_merged3_0_2_56_2_1_13_3_1_17GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenum_workgroupsubgroup_local_id.z = num_workgroup;
 GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_basenum_workgroup.w = GLF_merged3_0_2_56_2_1_13_3_1_17GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenum_workgroupsubgroup_local_id.z;
 _GLF_struct_53 _GLF_struct_replacement_53 = _GLF_struct_53(mat3x2(1.0), _GLF_struct_52(gl_WorkGroupSize.x, vec2(1.0), 1u));
 GLF_merged4_0_1_4_1_1_11_2_1_14_3_1_14readvirtual_gidworkgroup_baseworkgroup_size.w = _GLF_struct_replacement_53._f1.workgroup_size;
 for(int _injected_loop_counter = (int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, max(0, 0))); _injected_loop_counter --)
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     GLF_merged3_0_2_56_2_1_4_3_1_13GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizereadsubgroup_size.xy.y = _GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_14_3_1_14readvirtual_gidworkgroup_baseworkgroup_size, uvec4(1u, 1u, 1u, 1u) * (GLF_merged4_0_1_4_1_1_11_2_1_14_3_1_14readvirtual_gidworkgroup_baseworkgroup_size)).w;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
      barrier();
     for(int _injected_loop_counter = (1 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     for(int _injected_loop_counter = (int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(_GLF_IDENTITY(0 | 0, (_GLF_IDENTITY(0 | 0, min(0 | 0, 0 | 0))) >> int(_GLF_ZERO(0.0, injectionSwitch.x))), 1 * (_GLF_IDENTITY(_GLF_IDENTITY(0 | 0, (_GLF_IDENTITY(0 | 0, min(0 | 0, 0 | 0))) >> int(_GLF_ZERO(0.0, injectionSwitch.x))), (false ? _GLF_FUZZED(-38681) : _GLF_IDENTITY(0 | 0, (_GLF_IDENTITY(0 | 0, min(0 | 0, 0 | 0))) >> int(_GLF_ZERO(0.0, injectionSwitch.x))))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < (_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)), ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))) ^ 0), ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(3, clamp(3, 3, 3)), (_GLF_IDENTITY(3, _GLF_IDENTITY((3) * ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))), max((3) * ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))), (3) * ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))))))) * 1)), int(3))) >> _GLF_IDENTITY(int(3), int(3))) + 0))); _injected_loop_counter ++)
      {
       for(int _injected_loop_counter = ((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), int(1))), max((1 << _GLF_IDENTITY(int(1), int(1))), (1 << _GLF_IDENTITY(int(1), int(1))))) >> _GLF_IDENTITY(int(1), int(1))) | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 & 29868)); _injected_loop_counter --)
        {
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true))
          {
          }
         else
          {
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 & 1)); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
             if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
          }
        }
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 _GLF_struct_26 _GLF_struct_replacement_26 = _GLF_struct_26(ivec4(1), gl_WorkGroupID.x, _GLF_struct_25(1u, uvec3(1u), _GLF_struct_24(vec4(1.0), uvec2(_GLF_IDENTITY(1u, (1u) ^ 0u)), mat2x4(1.0), _GLF_IDENTITY(uvec4(1u), (true ? uvec4(1u) : _GLF_FUZZED(GLF_merged4_0_1_4_1_1_11_2_1_14_3_1_14readvirtual_gidworkgroup_baseworkgroup_size))), mat4x2(1.0)), mat2x4(1.0)));
 uint workgroup_base = _GLF_IDENTITY(GLF_merged3_0_2_56_2_1_4_3_1_13GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizereadsubgroup_size.xy.y * _GLF_struct_replacement_26.workgroup_id, (GLF_merged3_0_2_56_2_1_4_3_1_13GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizereadsubgroup_size.xy.y * _GLF_IDENTITY(_GLF_struct_replacement_26.workgroup_id, clamp(_GLF_IDENTITY(_GLF_struct_replacement_26.workgroup_id, (_GLF_struct_replacement_26.workgroup_id) | (_GLF_struct_replacement_26.workgroup_id)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_26.workgroup_id, (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_struct_replacement_26.workgroup_id)), (_GLF_IDENTITY(_GLF_struct_replacement_26.workgroup_id, clamp(_GLF_struct_replacement_26.workgroup_id, _GLF_IDENTITY(_GLF_struct_replacement_26.workgroup_id, 0u ^ (_GLF_struct_replacement_26.workgroup_id)), _GLF_struct_replacement_26.workgroup_id))) | (_GLF_IDENTITY(_GLF_struct_replacement_26.workgroup_id, 1u * (_GLF_struct_replacement_26.workgroup_id)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_26.workgroup_id, (false ? _GLF_FUZZED(147718u) : _GLF_struct_replacement_26.workgroup_id)), (_GLF_struct_replacement_26.workgroup_id) - 0u)))) << 0u);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(mat3x4(mat2(1.0) * (injectionSwitch), 1.0, 1.0, 0.0, 0.0, 0.0, sqrt(0.0), 1.0, 1.0, 1.0, 0.0)))).x > injectionSwitch.y))));
  }
 do
  {
   GLF_merged4_0_1_4_1_1_11_2_1_14_3_1_14readvirtual_gidworkgroup_baseworkgroup_size.z = workgroup_base;
  }
 while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), ! (! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), injectionSwitch.y)))))))))));
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x)), max(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), clamp(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x, float(mat4x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x, 1.0, 1.0, 0.0, length(vec2(0.0, 0.0)), 0.0, 1.0, 1.0))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x, mix(float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x), float(_GLF_FUZZED(1900.2058)), bool(false))))), 0.0 + (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(0.0, max(0.0, 0.0)) + (injectionSwitch.x)))))) : _GLF_FUZZED(distance(cos(vec4(-96.55, 33.02, -3972.0375, 6.3)), vec4(-73.45, 8.4, 9.7, 853.129))))) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - tan(vec2(0.0, 0.0))).y)), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) : _GLF_FUZZED(distance(cos(vec4(-96.55, 33.02, -3972.0375, 6.3)), vec4(-73.45, 8.4, 9.7, 853.129))))), (false ? _GLF_FUZZED(-896.573) : _GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(2.7)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(0.0 + (injectionSwitch.x), mix(float(0.0 + (injectionSwitch.x)), float(_GLF_FUZZED(float(41610u))), bool(false)))) : _GLF_FUZZED(distance(cos(vec4(-96.55, 33.02, -3972.0375, 6.3)), vec4(-73.45, 8.4, 9.7, 853.129))))))), (false ? _GLF_FUZZED(-951.162) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) : _GLF_FUZZED(distance(_GLF_IDENTITY(cos(vec4(-96.55, 33.02, -3972.0375, 6.3)), mix(vec4(_GLF_FUZZED(-208.353), _GLF_FUZZED(561.524), (cos(vec4(-96.55, 33.02, -3972.0375, 6.3)))[2], _GLF_FUZZED((715.218 + -442.318))), vec4((cos(vec4(-96.55, 33.02, -3972.0375, 6.3)))[0], (cos(vec4(-96.55, 33.02, -3972.0375, 6.3)))[1], _GLF_FUZZED(-8.9), (cos(vec4(-96.55, 33.02, -3972.0375, 6.3)))[3]), bvec4(true, true, false, true))), vec4(-73.45, 8.4, 9.7, 853.129))))), min(_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) : _GLF_FUZZED(distance(cos(vec4(-96.55, 33.02, -3972.0375, 6.3)), vec4(_GLF_IDENTITY(-73.45, 1.0 * (-73.45)), 8.4, 9.7, 853.129))))), _GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(0.0, (0.0) * 1.0) + (injectionSwitch.x)) : _GLF_FUZZED(distance(cos(vec4(-96.55, 33.02, -3972.0375, 6.3)), vec4(-73.45, 8.4, 9.7, 853.129))))))))) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - tan(vec2(0.0, 0.0))).y))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), ! (! ((_GLF_IDENTITY(false, bool(bool(false)))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(float(83909))), bool(false)))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, true)), bool(bvec2(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, true)), false)))))), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false, true && ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               barrier();
              }
            }
           barrier();
           do
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(3.0)), bool(false)))) + tan(0.0))))))
      barrier();
     barrier();
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   else
    {
    }
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y))))
    {
    }
   else
    {
     for(int _injected_loop_counter = ((1 ^ 0) | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != (int(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(9.5) : 0.0)))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x)) << _GLF_IDENTITY(int(_GLF_IDENTITY(4, max(4, 4))), int(4)))); _injected_loop_counter --)
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
        {
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_basenum_workgroup.xyz.z = GLF_merged4_0_1_4_1_1_11_2_1_14_3_1_14readvirtual_gidworkgroup_baseworkgroup_size.z;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 _GLF_struct_40 _GLF_struct_replacement_40 = _GLF_struct_40(_GLF_struct_30(_GLF_struct_27(1.0, mat4x3(1.0), mat3(1.0), _GLF_IDENTITY(mat4(1.0), mat4(1.0) * (mat4(1.0)))), uvec4(1u), mat3x2(1.0), _GLF_struct_28(uvec3(1u)), _GLF_struct_29(_GLF_IDENTITY(1, (1) | (1)), mat3x2(1.0), ivec3(1), mat3x4(1.0))), _GLF_struct_36(_GLF_struct_31(mat4(1.0), _GLF_IDENTITY(uvec2(1u), uvec2(1u, 1u) * (uvec2(1u))), mat2x3(1.0)), _GLF_IDENTITY(1, 1 * (1)), _GLF_struct_32(mat4(1.0), mat3x4(1.0), uvec4(_GLF_IDENTITY(1u, (1u) | (1u))), ivec3(1)), _GLF_struct_33(ivec3(1), mat4x2(1.0), 1u, mat4x3(1.0), vec2(1.0), ivec3(1)), _GLF_struct_34(true, vec3(1.0), vec4(_GLF_IDENTITY(1.0, 1.0 * (1.0))), uvec3(1u), true), _GLF_struct_35(vec4(1.0), uvec3(1u), ivec4(1)), _GLF_IDENTITY(mat2(1.0), (true ? mat2(1.0) : _GLF_FUZZED(mat2(7.9, -24.03, 3.4, -95.77))))), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_basenum_workgroup.xyz, (GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_basenum_workgroup.xyz) * uvec3(1u, 1u, 1u)), min(GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_basenum_workgroup.xyz, GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_basenum_workgroup.xyz)).z + _GLF_struct_replacement_23._f1._f2.subgroup_id * GLF_merged3_0_2_56_2_1_4_3_1_13GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizereadsubgroup_size.w + GLF_merged3_0_2_56_2_1_4_3_1_13GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizereadsubgroup_size.xy.x, _GLF_struct_39(_GLF_struct_37(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ _GLF_IDENTITY((1u), clamp((1u), (1u), _GLF_IDENTITY((1u), max((1u), (1u))))))), min(_GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY(1u, ~ (~ _GLF_IDENTITY((1u), max(_GLF_IDENTITY((1u), ((1u)) + 0u), (1u)))))))) | 0u)), mat3x2(1.0), ivec3(1), vec3(1.0), _GLF_IDENTITY(uvec4(_GLF_IDENTITY(1u, (1u) - 0u)), uvec4(1u, 1u, 1u, _GLF_IDENTITY(1u, max(1u, 1u))) * (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(1u, (1u) - 0u)), clamp(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) - 0u), 0u | (_GLF_IDENTITY(1u, (1u) - 0u)))), uvec4(_GLF_IDENTITY(1u, (1u) - 0u)), uvec4(_GLF_IDENTITY(1u, (1u) - 0u))))))), _GLF_struct_38(mat4(1.0), mat3x2(1.0), 1u, 1u, ivec3(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, int(int(1))), 1)), _GLF_IDENTITY(1, 0 ^ (1)))))), uvec4(1u), true), uvec3(1u), uvec3(1u));
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged4_0_1_4_1_1_11_2_1_14_3_1_14readvirtual_gidworkgroup_baseworkgroup_size.y = _GLF_struct_replacement_40.virtual_gid;
 GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_basenum_workgroup.xyz.y = GLF_merged4_0_1_4_1_1_11_2_1_14_3_1_14readvirtual_gidworkgroup_baseworkgroup_size.y;
 _GLF_struct_51 _GLF_struct_replacement_51 = _GLF_struct_51(mat2(1.0), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_basenum_workgroup.xyz.z + _GLF_struct_replacement_23._f1._f2.subgroup_id * GLF_merged3_0_2_56_2_1_4_3_1_13GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizereadsubgroup_size.w, (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_basenum_workgroup.xyz.z + _GLF_struct_replacement_23._f1._f2.subgroup_id * GLF_merged3_0_2_56_2_1_4_3_1_13GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizereadsubgroup_size.w, max(GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_basenum_workgroup.xyz.z + _GLF_struct_replacement_23._f1._f2.subgroup_id * GLF_merged3_0_2_56_2_1_4_3_1_13GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizereadsubgroup_size.w, GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_basenum_workgroup.xyz.z + _GLF_struct_replacement_23._f1._f2.subgroup_id * GLF_merged3_0_2_56_2_1_4_3_1_13GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizereadsubgroup_size.w)), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_basenum_workgroup.xyz.z, (GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_basenum_workgroup.xyz.z) | (_GLF_IDENTITY(GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_basenum_workgroup.xyz.z, clamp(GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_basenum_workgroup.xyz.z, GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_basenum_workgroup.xyz.z, GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_basenum_workgroup.xyz.z)))), _GLF_IDENTITY((true ? GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_basenum_workgroup.xyz.z : _GLF_FUZZED(subgroup_local_id)), ((true ? GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_basenum_workgroup.xyz.z : _GLF_FUZZED(subgroup_local_id))) | ((true ? GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_basenum_workgroup.xyz.z : _GLF_FUZZED(subgroup_local_id))))) + _GLF_struct_replacement_23._f1._f2.subgroup_id * GLF_merged3_0_2_56_2_1_4_3_1_13GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizereadsubgroup_size.w) / 1u) : _GLF_FUZZED(GLF_merged3_0_2_56_2_1_13_3_1_17GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenum_workgroupsubgroup_local_id.w))) + ((GLF_merged3_0_2_56_2_1_4_3_1_13GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizereadsubgroup_size.xy.x + 1) % _GLF_IDENTITY(GLF_merged3_0_2_56_2_1_4_3_1_13GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizereadsubgroup_size, (uvec4(0u, 0u, 0u, 0u) | uvec4(0u, 0u, 0u, 0u)) ^ (GLF_merged3_0_2_56_2_1_4_3_1_13GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizereadsubgroup_size)).w), (GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_basenum_workgroup.xyz.z + _GLF_struct_replacement_23._f1._f2.subgroup_id * GLF_merged3_0_2_56_2_1_4_3_1_13GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizereadsubgroup_size.w + ((GLF_merged3_0_2_56_2_1_4_3_1_13GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizereadsubgroup_size.xy.x + 1) % _GLF_IDENTITY(GLF_merged3_0_2_56_2_1_4_3_1_13GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizereadsubgroup_size.w, (GLF_merged3_0_2_56_2_1_4_3_1_13GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizereadsubgroup_size.w) - (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(uint(2u), uint(2u))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), 0u | (_GLF_IDENTITY(uint(2u), uint(2u)))))))))) | (0u << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), (uint(7u)) / (1u | 1u)), max(_GLF_IDENTITY(uint(7u), (_GLF_IDENTITY(uint(7u), (uint(7u)) | (uint(7u)))) / (1u | 1u)), _GLF_IDENTITY(uint(7u), (uint(7u)) / (1u | 1u))))))), bvec4(true), _GLF_struct_43(_GLF_IDENTITY(vec4(1.0), (true ? _GLF_IDENTITY(vec4(1.0), (vec4(1.0)) * mat4(1.0)) : _GLF_FUZZED(vec4(-5979.6551, 7.8, -74.14, -45.50)))), ivec3(1), uvec3(1u), _GLF_struct_41(mat3x4(1.0), _GLF_IDENTITY(mat4(1.0), (mat4(1.0)) / mat4(1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)), uvec2(1u), vec3(1.0), vec3(1.0), bvec3(true), mat2x3(1.0)), _GLF_struct_42(vec4(1.0), mat3x4(1.0), ivec2(1), mat3x4(1.0), mat3x2(1.0), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) | (1))), max(_GLF_IDENTITY(ivec2(1), ~ (_GLF_IDENTITY(~ (ivec2(1)), ivec2(ivec4(~ (ivec2(1)), 1, 1))))), ivec2(1))), mat2(1.0))), _GLF_struct_47(_GLF_struct_44(mat3x2(1.0)), true, _GLF_struct_45(mat3x4(1.0)), _GLF_struct_46(mat4x2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(1.0), float(_GLF_IDENTITY(_GLF_FUZZED(-5850.3257), max(_GLF_IDENTITY(_GLF_FUZZED(-5850.3257), 0.0 + (_GLF_FUZZED(-5850.3257))), _GLF_FUZZED(-5850.3257)))), bool(false)), (mix(float(1.0), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-5850.3257), max(_GLF_IDENTITY(_GLF_FUZZED(-5850.3257), 0.0 + (_GLF_FUZZED(-5850.3257))), _GLF_FUZZED(-5850.3257))), float(mat2(_GLF_IDENTITY(_GLF_FUZZED(-5850.3257), max(_GLF_IDENTITY(_GLF_FUZZED(-5850.3257), 0.0 + (_GLF_FUZZED(-5850.3257))), _GLF_FUZZED(-5850.3257))), 0.0, 1.0, length(vec3(0.0, 0.0, 0.0)))))), bool(false))) - 0.0))), mat4(1.0), mat4(1.0), bvec4(true), bvec2(true), mat3x4(1.0))), bvec4(_GLF_IDENTITY(true, true && (true))), mat2x3(1.0), _GLF_struct_50(ivec3(1), _GLF_struct_48(mat4(1.0)), _GLF_struct_49(1u, mat4x2(1.0))));
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   do
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (true && (false)) || false))))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) && true)))
      {
       if(_GLF_DEAD(false))
        barrier();
       _GLF_IDENTITY(GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_basenum_workgroup.xyz.x = _GLF_struct_replacement_51.next_virtual_gid, (_GLF_IDENTITY(GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_basenum_workgroup.xyz.x = _GLF_struct_replacement_51.next_virtual_gid, (true ? GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_basenum_workgroup.xyz.x = _GLF_struct_replacement_51.next_virtual_gid : _GLF_FUZZED(_GLF_IDENTITY(GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_basenum_workgroup, _GLF_IDENTITY(~ (~ (GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_basenum_workgroup)), max(~ (~ (GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_basenum_workgroup)), _GLF_IDENTITY(~ (~ (GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_basenum_workgroup)), (true ? ~ (~ (GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_basenum_workgroup)) : _GLF_FUZZED(GLF_merged3_0_2_56_2_1_13_3_1_17GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenum_workgroupsubgroup_local_id)))))).w)))) | 0u);
      }
     else
      {
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 do
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7878.2448)), float(injectionSwitch.x), bool(true))), clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) >> 0) > (0 | 0)); _injected_loop_counter --)
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true))))))))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true), (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint read = atomicLoad(buf[_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_basenum_workgroup.xyz, uvec3(_GLF_IDENTITY(0u, 0u | (0u)), 0u, 0u) ^ (GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_basenum_workgroup.xyz)).y, max(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_basenum_workgroup.xyz, uvec3(_GLF_IDENTITY(0u, 0u | (0u)), 0u, 0u) ^ (GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_basenum_workgroup.xyz)).y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_basenum_workgroup.xyz, uvec3(_GLF_IDENTITY(0u, 0u | (0u)), 0u, 0u) ^ (GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_basenum_workgroup.xyz)).y, (_GLF_IDENTITY(GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_basenum_workgroup.xyz, uvec3(_GLF_IDENTITY(0u, 0u | (0u)), 0u, 0u) ^ (GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_basenum_workgroup.xyz)).y) | (_GLF_IDENTITY(GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_basenum_workgroup.xyz, uvec3(_GLF_IDENTITY(0u, 0u | (0u)), 0u, 0u) ^ (GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_basenum_workgroup.xyz)).y)), _GLF_IDENTITY(GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_basenum_workgroup.xyz, uvec3(_GLF_IDENTITY(0u, 0u | (0u)), 0u, 0u) ^ (GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_basenum_workgroup.xyz)).y, _GLF_IDENTITY(GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_basenum_workgroup.xyz, uvec3(_GLF_IDENTITY(0u, 0u | (0u)), 0u, 0u) ^ (GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_basenum_workgroup.xyz)).y)), _GLF_IDENTITY(GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_basenum_workgroup.xyz, uvec3(_GLF_IDENTITY(0u, 0u | (0u)), 0u, 0u) ^ (GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_basenum_workgroup.xyz)).y))], 4, 64, 0);
 _GLF_IDENTITY(GLF_merged2_0_3_73_3_1_4GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_baseread.w = read, (0u >> _GLF_IDENTITY(uint(7u), uint(7u))) | (_GLF_IDENTITY(GLF_merged2_0_3_73_3_1_4GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_baseread.w = read, (_GLF_IDENTITY(GLF_merged2_0_3_73_3_1_4GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_baseread.w = read, (GLF_merged2_0_3_73_3_1_4GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_baseread.w = read) | 0u)) << 0u)));
 GLF_merged3_0_2_56_2_1_4_3_1_13GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizereadsubgroup_size.z = GLF_merged2_0_3_73_3_1_4GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_baseread.w;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 GLF_merged4_0_1_4_1_1_11_2_1_14_3_1_14readvirtual_gidworkgroup_baseworkgroup_size.x = GLF_merged3_0_2_56_2_1_4_3_1_13GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizereadsubgroup_size.z;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, (1) | (1))); _injected_loop_counter ++)
    {
     atomicStore(buf[_GLF_IDENTITY(GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_basenum_workgroup.xyz, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_base) : GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_basenum_workgroup.xyz)).x], uint(1), _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) | (4)))))))), 64, 4);
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
  {
   for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < ((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) | (int(4))))), bool(bvec2(_injected_loop_counter < ((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) | (int(4))))), false)))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_injected_loop_counter < ((_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))), (true ? int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) : _GLF_FUZZED(_injected_loop_counter))) << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(_GLF_IDENTITY(int(4), ~ (~ (_GLF_IDENTITY(int(4), int(ivec2(int(4), 1)))))), _GLF_IDENTITY((int(4)), ~ (~ ((int(4))))) | (int(4))))))), bool(bvec4(! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter)) < ((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(_GLF_IDENTITY(-26847, (_GLF_IDENTITY(-26847, (true ? -26847 : _GLF_FUZZED(13392)))) | (-26847))) : 4)), 4))), int(4))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) | _GLF_IDENTITY((_GLF_IDENTITY(int(_GLF_IDENTITY(4, (0 << _GLF_IDENTITY(int(1), int(1))) + (4))), (int(_GLF_IDENTITY(4, (0 << _GLF_IDENTITY(int(1), int(1))) + (4)))) | (int(_GLF_IDENTITY(4, (0 << _GLF_IDENTITY(int(1), int(1))) + (4)))))), ((_GLF_IDENTITY(int(_GLF_IDENTITY(4, (0 << _GLF_IDENTITY(int(1), int(1))) + (4))), (int(_GLF_IDENTITY(4, (0 << _GLF_IDENTITY(int(1), int(1))) + (4)))) | (int(_GLF_IDENTITY(4, (0 << _GLF_IDENTITY(int(1), int(1))) + (4))))))) + 0)))))), false, true, true))))); _GLF_IDENTITY(_injected_loop_counter ++, ~ (~ (_injected_loop_counter ++))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(float(injectionSwitch.x)), clamp(float(float(injectionSwitch.x)), float(float(injectionSwitch.x)), float(float(injectionSwitch.x))))))) < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)) : _GLF_FUZZED(vec2(-155.335, -362.968)))).x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bool(bvec4(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true, true, false))))))))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, sqrt(1.0), sin(0.0), 1.0, 0.0, 1.0, 0.0, 0.0)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
  }
 else
  {
   atomicStore(checker[GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_basenum_workgroup.xyz.y], _GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_14_3_1_14readvirtual_gidworkgroup_baseworkgroup_size.x, (_GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_14_3_1_14readvirtual_gidworkgroup_baseworkgroup_size.x, (_GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_14_3_1_14readvirtual_gidworkgroup_baseworkgroup_size.x, clamp(GLF_merged4_0_1_4_1_1_11_2_1_14_3_1_14readvirtual_gidworkgroup_baseworkgroup_size.x, GLF_merged4_0_1_4_1_1_11_2_1_14_3_1_14readvirtual_gidworkgroup_baseworkgroup_size.x, GLF_merged4_0_1_4_1_1_11_2_1_14_3_1_14readvirtual_gidworkgroup_baseworkgroup_size.x))) ^ 0u)) / ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)))), 4, 64, 4);
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   else
    {
    }
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
