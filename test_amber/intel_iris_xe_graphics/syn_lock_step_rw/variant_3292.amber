#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), float(_GLF_FUZZED(241.065)), bool(false)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), mix(float(_GLF_FUZZED(-24.02)), float(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), vec4(1.0, 1.0, abs(0.0), 0.0)), dot(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((9.7))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(0.0), float(_GLF_FUZZED(-8.2)), bool(false)), (mix(float(0.0), float(_GLF_FUZZED(-8.2)), bool(false))) / 1.0))), vec3(1.0, 0.0, 0.0)))), vec4(1.0, 1.0, abs(0.0), 0.0))), 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / cos(0.0))) / 1.0), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, exp(0.0), log(1.0), 0.0, determinant(mat2(abs(1.0), 0.0, 0.0, 1.0))))).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)).x), max(clamp(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) - 0u), gl_NumWorkGroups.x, gl_NumWorkGroups.x), clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, gl_NumWorkGroups.x))))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), (uvec3(gl_NumWorkGroups)) | (uvec3(gl_NumWorkGroups)))))), (true ? _GLF_IDENTITY(~ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), (uvec3(gl_NumWorkGroups)) | (uvec3(gl_NumWorkGroups)))))), uvec3(0u, 0u, 0u) | (~ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), (uvec3(gl_NumWorkGroups)) | (uvec3(gl_NumWorkGroups)))))))) : _GLF_FUZZED(uvec3(65759u, 30875u, 127731u)))))).x, gl_NumWorkGroups.x)))), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), (uvec3(gl_NumWorkGroups)) | (uvec3(gl_NumWorkGroups)))))), (true ? _GLF_IDENTITY(~ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), (uvec3(gl_NumWorkGroups)) | (uvec3(gl_NumWorkGroups)))))), uvec3(0u, 0u, 0u) | (~ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), (uvec3(gl_NumWorkGroups)) | (uvec3(gl_NumWorkGroups)))))))) : _GLF_FUZZED(uvec3(65759u, 30875u, 127731u)))))).x, gl_NumWorkGroups.x))))) | 0u)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED((-8.5 + 1.9))), bool(false))))).y)))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, log(1.0), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)))), (vec2(_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, log(1.0), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))))) + tan(vec2(0.0, 0.0))))) > injectionSwitch.y)))), (_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), true && _GLF_IDENTITY((! ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ((! ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false))))) && true))), ! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x) / exp(0.0)) > injectionSwitch.y)), ! _GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true))))))), false || ((! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / exp(0.0)) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))) || false))))))))))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, log(1.0), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)))), (vec2(_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, log(1.0), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))))) + tan(vec2(0.0, 0.0))))) > injectionSwitch.y)))), (_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), true && _GLF_IDENTITY((! ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ((! ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false))))) && true))), ! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x) / exp(0.0)) > injectionSwitch.y)), ! _GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true))))))), false || ((! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / exp(0.0)) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))) || false))))))))))))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, log(1.0), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)))), (vec2(_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, log(1.0), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))))) + tan(vec2(0.0, 0.0))))) > injectionSwitch.y)))), (_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), true && _GLF_IDENTITY((! ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ((! ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false))))) && true))), ! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x) / exp(0.0)) > injectionSwitch.y)), ! _GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true))))))), false || ((! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / exp(0.0)) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))) || false))))))))))))), false, false))))), ! (! _GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(bvec2(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))), true))))))), _GLF_IDENTITY(((bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) || false, ! (! (_GLF_IDENTITY(((bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) || false, bool(bvec4(((bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) || false, false, false, false)))))))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, log(1.0), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)))), (vec2(_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, log(1.0), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))))) + tan(vec2(0.0, 0.0))))) > injectionSwitch.y)))), (_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), true && _GLF_IDENTITY((! ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ((! ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false))))) && true))), ! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x) / exp(0.0)) > injectionSwitch.y)), ! _GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true))))))), false || ((! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / exp(0.0)) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))) || false))))))))))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, log(1.0), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)))), (vec2(_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, log(1.0), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))))) + tan(vec2(0.0, 0.0))))) > injectionSwitch.y)))), (_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), true && _GLF_IDENTITY((! ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ((! ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false))))) && true))), ! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x) / exp(0.0)) > injectionSwitch.y)), ! _GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true))))))), false || ((! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / exp(0.0)) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))) || false))))))))))))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, log(1.0), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)))), (vec2(_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, log(1.0), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))))) + tan(vec2(0.0, 0.0))))) > injectionSwitch.y)))), (_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), true && _GLF_IDENTITY((! ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ((! ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false))))) && true))), ! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x) / exp(0.0)) > injectionSwitch.y)), ! _GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true))))))), false || ((! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / exp(0.0)) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))) || false))))))))))))), false, false))))), ! (! _GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(bvec2(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))), true))))))), _GLF_IDENTITY(((bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) || false, ! (! (_GLF_IDENTITY(((bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) || false, bool(bvec4(((bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) || false, false, false, false))))))))))) && true), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))), min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))))) * vec2(1.0, 1.0)))).x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).x > injectionSwitch.y)))))))))))), ! (! (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))), ! _GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)), ((! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))) || false)))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), ((! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(6156.9371), _GLF_FUZZED(31.51)), bvec2(false, false)))) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))) && true), bool(bvec3(_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)))))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), _GLF_IDENTITY(bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), false, false, false)), true && (_GLF_IDENTITY(bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), false, false, false)), (bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), false, false, false))) || false))))))), ((! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))) && true), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))), (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), ! (! (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 0.0))), injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)))))))))))))))) || false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) && true)))) || false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size), ((workgroup_size)) << 0u) | (workgroup_size)) * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(1u, (_GLF_IDENTITY(true, ! (! (true))) ? 1u : _GLF_FUZZED(num_workgroup))) * (subgroup_id * subgroup_size)) + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) << _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(5u), uint(5u)), (0u >> _GLF_IDENTITY(uint(6u), uint(6u))) | (0u << _GLF_IDENTITY(uint(5u), uint(5u)))), (_GLF_IDENTITY(_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(5u), uint(5u)), (0u >> _GLF_IDENTITY(uint(6u), uint(6u))) | (0u << _GLF_IDENTITY(uint(5u), uint(5u)))), ~ (~ (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(5u), uint(5u)), (0u >> _GLF_IDENTITY(uint(6u), uint(6u))) | (0u << _GLF_IDENTITY(uint(5u), uint(5u)))))))) * uint(_GLF_ONE(1.0, injectionSwitch.y)))) | (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(6u), uint(6u))) | (0u << _GLF_IDENTITY(uint(5u), uint(5u))), ~ (~ ((0u >> _GLF_IDENTITY(uint(6u), uint(6u))) | (0u << _GLF_IDENTITY(uint(5u), uint(5u))))))), 0u | (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(6u), uint(6u))) | (0u << _GLF_IDENTITY(uint(5u), uint(5u))), ~ (~ ((0u >> _GLF_IDENTITY(uint(6u), uint(6u))) | (0u << _GLF_IDENTITY(uint(5u), uint(5u)))))))))) | (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ (uint(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(76.00))), 0.0, 0.0)), injectionSwitch.x))))))) * 1u))) + 1, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(false, (false) || false))) && true))) ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) * 1u))))))) % subgroup_size), (_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u)))) << _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(5u), uint(5u)), (0u >> _GLF_IDENTITY(uint(6u), uint(6u))) | (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (5u) ^ 0u)), uint(5u))))), (_GLF_IDENTITY((_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(5u), uint(5u)), (0u >> _GLF_IDENTITY(uint(6u), uint(6u))) | (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (5u) ^ 0u)), uint(5u))))), ~ (~ ((_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(5u), uint(5u)), (0u >> _GLF_IDENTITY(uint(6u), uint(6u))) | (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (5u) ^ 0u)), uint(5u))))))))) | (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))) | (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), ((_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(6u), uint(6u))) | (0u << _GLF_IDENTITY(uint(5u), uint(5u))), ~ (~ ((0u >> _GLF_IDENTITY(uint(6u), uint(6u))) | (0u << _GLF_IDENTITY(uint(5u), uint(5u)))))))) | (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) * 1u))) + 1, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(false, (false) || false))) && true))) ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))))) % subgroup_size), _GLF_IDENTITY((((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) << _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(5u), uint(5u)), (0u >> _GLF_IDENTITY(uint(6u), uint(6u))) | (0u << _GLF_IDENTITY(uint(5u), uint(5u))))) | (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), ((_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(6u), uint(6u))) | (0u << _GLF_IDENTITY(uint(5u), uint(5u))), ~ (~ ((0u >> _GLF_IDENTITY(uint(6u), uint(6u))) | (0u << _GLF_IDENTITY(uint(5u), uint(5u)))))))) | (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) * 1u), (_GLF_IDENTITY((_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(5u), uint(5u)), (0u >> _GLF_IDENTITY(uint(6u), uint(6u))) | (_GLF_IDENTITY(0u, (0u) | (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), 0u | (uint(8u)))))) << _GLF_IDENTITY(uint(5u), uint(5u))))) | (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), ((_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), 0u | (uint(5u)))), _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(6u), uint(6u))) | (0u << _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, ~ (~ (5u)))))), ~ (~ ((0u >> _GLF_IDENTITY(uint(6u), uint(6u))) | (0u << _GLF_IDENTITY(uint(5u), uint(5u)))))))) | (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) * 1u)) / 1u))) + 1, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(false, (false) || false))) && true))) ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))))) % subgroup_size)), 0u | (_GLF_IDENTITY((((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) << _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(5u), uint(5u)), (0u >> _GLF_IDENTITY(uint(6u), uint(6u))) | (0u << _GLF_IDENTITY(uint(5u), uint(5u))))) | (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), ((_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(6u), uint(6u))) | (0u << _GLF_IDENTITY(uint(5u), uint(5u))), ~ (~ ((0u >> _GLF_IDENTITY(uint(6u), uint(6u))) | (0u << _GLF_IDENTITY(uint(5u), uint(5u)))))))) | (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) * 1u), (_GLF_IDENTITY((_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(5u), uint(5u)), (0u >> _GLF_IDENTITY(uint(6u), uint(6u))) | (_GLF_IDENTITY(0u, (0u) | (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), 0u | (uint(8u)))))) << _GLF_IDENTITY(uint(5u), uint(5u))))) | (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), ((_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), 0u | (uint(5u)))), _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(6u), uint(6u))) | (0u << _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, ~ (~ (5u)))))), ~ (~ ((0u >> _GLF_IDENTITY(uint(6u), uint(6u))) | (0u << _GLF_IDENTITY(uint(5u), uint(5u)))))))) | (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) * 1u)) / 1u))) + 1, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(false, (false) || false))) && true))) ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))))) % subgroup_size)), (_GLF_IDENTITY((((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) << _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(5u), uint(5u)), (0u >> _GLF_IDENTITY(uint(6u), uint(6u))) | (0u << _GLF_IDENTITY(uint(5u), uint(5u))))) | (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), ((_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(6u), uint(6u))) | (0u << _GLF_IDENTITY(uint(5u), uint(5u))), ~ (~ ((0u >> _GLF_IDENTITY(uint(6u), uint(6u))) | (0u << _GLF_IDENTITY(uint(5u), uint(5u)))))))) | (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) * 1u), (_GLF_IDENTITY((_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(5u), uint(5u)), (0u >> _GLF_IDENTITY(uint(6u), uint(6u))) | (_GLF_IDENTITY(0u, (0u) | (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), 0u | (uint(8u)))))) << _GLF_IDENTITY(uint(5u), uint(5u))))) | (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), ((_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), 0u | (uint(5u)))), _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(6u), uint(6u))) | (0u << _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, ~ (~ (5u)))))), ~ (~ ((0u >> _GLF_IDENTITY(uint(6u), uint(6u))) | (0u << _GLF_IDENTITY(uint(5u), uint(5u)))))))) | (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) * 1u)) / 1u))) + 1, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(false, (false) || false))) && true))) ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))))) % subgroup_size)), ((((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) << _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(5u), uint(5u)), (0u >> _GLF_IDENTITY(uint(6u), uint(6u))) | (0u << _GLF_IDENTITY(uint(5u), uint(5u))))) | (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), ((_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(6u), uint(6u))) | (0u << _GLF_IDENTITY(uint(5u), uint(5u))), ~ (~ ((0u >> _GLF_IDENTITY(uint(6u), uint(6u))) | (0u << _GLF_IDENTITY(uint(5u), uint(5u)))))))) | (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) * 1u), (_GLF_IDENTITY((_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(5u), uint(5u)), (0u >> _GLF_IDENTITY(uint(6u), uint(6u))) | (_GLF_IDENTITY(0u, (0u) | (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), 0u | (uint(8u)))))) << _GLF_IDENTITY(uint(5u), uint(5u))))) | (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), ((_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), 0u | (uint(5u)))), _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(6u), uint(6u))) | (0u << _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, ~ (~ (5u)))))), ~ (~ ((0u >> _GLF_IDENTITY(uint(6u), uint(6u))) | (0u << _GLF_IDENTITY(uint(5u), uint(5u)))))))) | (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) * 1u)) / 1u))) + 1, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(false, (false) || false))) && true))) ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))))) % subgroup_size))) | ((((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) << _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(5u), uint(5u)), (0u >> _GLF_IDENTITY(uint(6u), uint(6u))) | (0u << _GLF_IDENTITY(uint(5u), uint(5u))))) | (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), ((_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(6u), uint(6u))) | (0u << _GLF_IDENTITY(uint(5u), uint(5u))), ~ (~ ((0u >> _GLF_IDENTITY(uint(6u), uint(6u))) | (0u << _GLF_IDENTITY(uint(5u), uint(5u)))))))) | (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) * 1u), (_GLF_IDENTITY((_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(5u), uint(5u)), (0u >> _GLF_IDENTITY(uint(6u), uint(6u))) | (_GLF_IDENTITY(0u, (0u) | (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), 0u | (uint(8u)))))) << _GLF_IDENTITY(uint(5u), uint(5u))))) | (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), ((_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), 0u | (uint(5u)))), _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(6u), uint(6u))) | (0u << _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, ~ (~ (5u)))))), ~ (~ ((0u >> _GLF_IDENTITY(uint(6u), uint(6u))) | (0u << _GLF_IDENTITY(uint(5u), uint(5u)))))))) | (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) * 1u)) / 1u))) + 1, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(false, (false) || false))) && true))) ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))))) % subgroup_size))))) + 0u))) | 0u)) >> 0u), max(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, (5u) | (5u))))), ~ (_GLF_IDENTITY(~ ((0u << _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, (5u) | (5u)))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (~ ((0u << _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, (5u) | (5u)))))))))) | _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), clamp((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ (uint(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), injectionSwitch.x)))))), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(~ (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (false ? _GLF_FUZZED(subgroup_local_id) : ~ (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))), 0u | (_GLF_IDENTITY(uint(_GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), clamp((_GLF_IDENTITY(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-5447.8823)), bool(false))), 0.0)), injectionSwitch.x)), ~ (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))), (uint(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), clamp((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))), ~ (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))), (true ? _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) | (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))), clamp((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))) : _GLF_FUZZED((subgroup_id ++)))))) | 0u))))))) + 1, (false ? _GLF_FUZZED(workgroup_size) : subgroup_local_id + 1))) % subgroup_size), (workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), max((subgroup_local_id), (subgroup_local_id))) << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), clamp(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), _GLF_IDENTITY(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), (uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)) | (uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))), uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)))), 0u ^ (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), clamp(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), _GLF_IDENTITY(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), (uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)) | (uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))), uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)))), clamp(uint(_GLF_IDENTITY(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), clamp(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), _GLF_IDENTITY(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), (uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)) | (uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))), uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)))), uint(_GLF_IDENTITY(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), clamp(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), _GLF_IDENTITY(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), (uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)) | (uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))), uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)))), uint(_GLF_IDENTITY(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), clamp(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), _GLF_IDENTITY(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), (uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)) | (uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))), uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))))))))), _GLF_IDENTITY(0u, uint(uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) ^ 0u), (0u >> _GLF_IDENTITY(uint(6u), uint(6u))), 1u))) + (uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (0u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, clamp(5u, 5u, 5u))) | 0u)), 0u | (uint(5u))))) | (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 0.0, sqrt(0.0), 1.0, round(length(_GLF_IDENTITY(normalize(1.0), (false ? _GLF_FUZZED(-642.879) : normalize(1.0))))), 1.0))))), ~ (~ (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))), (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))) ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), clamp(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), _GLF_IDENTITY(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), (uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)) | (uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))), uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)))), 0u ^ (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-8365.6907)))) / 1.0))), injectionSwitch.x)), 0u), clamp(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), _GLF_IDENTITY(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), (uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)) | (uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))), uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)))), clamp(uint(_GLF_IDENTITY(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), clamp(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), _GLF_IDENTITY(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), (uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)) | (uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))), uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)))), uint(_GLF_IDENTITY(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), clamp(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), _GLF_IDENTITY(uvec2(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-225.266))))), injectionSwitch.x)), 0u), (uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)) | (uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))), uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)))), uint(_GLF_IDENTITY(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), clamp(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), _GLF_IDENTITY(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), (uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)) | (uvec2(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-53.26)), bool(false))))), uint(uvec4(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-53.26)), bool(false))))), ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 0u, 0u))), 0u))), uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))))))))), _GLF_IDENTITY(0u, uint(uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) ^ 0u), (0u >> _GLF_IDENTITY(uint(6u), uint(6u))), 1u))) + (uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (0u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, clamp(5u, 5u, 5u))) | 0u)), 0u | (uint(5u))))) | (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(4961.6951)), float(injectionSwitch.x), bool(true))))), injectionSwitch.x)), float(mat2x3(injectionSwitch.x, 0.0, sqrt(0.0), 1.0, round(length(_GLF_IDENTITY(normalize(1.0), (false ? _GLF_FUZZED(-642.879) : normalize(1.0))))), 1.0))))), ~ (~ (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))))))) + _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) | 0), int(ivec2(1, 0))), (false ? _GLF_FUZZED(workgroup_size) : subgroup_local_id + 1))) % subgroup_size)) >> 0u), workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(radians(0.6))))), (0u << _GLF_IDENTITY(uint(5u), uint(5u))) | (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))) + 1, (false ? _GLF_FUZZED(workgroup_size) : subgroup_local_id + 1))) % _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, 4))) | (_GLF_IDENTITY(0 & -2792, int(ivec2(0 & -2792, ((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), 0 | (int(7))))) >> _GLF_IDENTITY(int(7), int(7)))))))), _GLF_IDENTITY(64, (false ? _GLF_FUZZED(34891) : 64)), 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(1), ~ (~ (uint(1)))), 4, 64, 4);
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, true, false)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)), (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)), (bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))) && true)) && true)), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(checker[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, clamp(_GLF_IDENTITY(virtual_gid, 0u ^ (virtual_gid)), _GLF_IDENTITY(virtual_gid, uint(uint(virtual_gid))), virtual_gid)), uint(uvec3(_GLF_IDENTITY(virtual_gid, clamp(_GLF_IDENTITY(virtual_gid, 0u ^ (virtual_gid)), _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uint(virtual_gid))), uint(uvec4(_GLF_IDENTITY(virtual_gid, uint(uint(virtual_gid))), 1u, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), 0u))), virtual_gid)), 1u, 1u)))], _GLF_IDENTITY(_GLF_IDENTITY(read, (read) ^ 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (read)), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
