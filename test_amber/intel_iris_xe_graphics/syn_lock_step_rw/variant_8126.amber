#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), true && (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), false || (_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(injectionSwitch.x), mix(float(float(injectionSwitch.x)), float(_GLF_FUZZED(577.455)), bool(false))), float(_GLF_FUZZED(22.85)), bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(false))))), _GLF_IDENTITY(true && (false), (true && (false)) && true))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) && true), false, false)), _GLF_IDENTITY(bool(bvec4(bool(bvec3(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false)), false, true, _GLF_IDENTITY(false, (false) && true))), bool(bvec3(bool(bvec4(bool(bvec3(false, false, false)), false, true, _GLF_IDENTITY(false, bool(bvec2(false, false))))), false, false))))))))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mat2(1.0) : _GLF_FUZZED(mat2(78.38, -6.1, 284.385, 8.6)))), (_GLF_IDENTITY(mat2(1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mat2(1.0) : _GLF_FUZZED(mat2(78.38, _GLF_IDENTITY(-6.1, min(-6.1, _GLF_IDENTITY(-6.1, min(-6.1, -6.1)))), 284.385, 8.6))))) / mat2(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, float(mat4x2(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0))), 1.0)), 1.0, 1.0, 1.0)) * (injectionSwitch)))).y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > injectionSwitch.y))))))))), (_GLF_IDENTITY((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > injectionSwitch.y))))))))), ! (! (_GLF_IDENTITY((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > injectionSwitch.y))))))))), true && ((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > injectionSwitch.y))))))))))))))) && true)))) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))) : _GLF_FUZZED(mat2(78.38, -6.1, 284.385, 8.6)))) * (injectionSwitch)))).y, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mat2(1.0) : _GLF_FUZZED(mat2(5.1, _GLF_IDENTITY(-8.6, (-8.6) * exp(0.0)), -289.664, 3.2)))), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(smoothstep(-793.232, -9.3, -6633.7033)))) < _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y, injectionSwitch.y)))) ? mat2(1.0) : _GLF_FUZZED(mat2(78.38, -6.1, 284.385, 8.6)))) * (injectionSwitch)))).y), min(float(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mat2(1.0) : _GLF_FUZZED(mat2(5.1, _GLF_IDENTITY(-8.6, (-8.6) * exp(0.0)), -289.664, 3.2)))), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(smoothstep(-793.232, -9.3, -6633.7033)))) < _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y, injectionSwitch.y)))) ? mat2(1.0) : _GLF_FUZZED(mat2(78.38, -6.1, 284.385, 8.6)))) * (injectionSwitch)))).y), float(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mat2(1.0) : _GLF_FUZZED(mat2(5.1, _GLF_IDENTITY(-8.6, (-8.6) * exp(0.0)), -289.664, 3.2)))), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(smoothstep(-793.232, -9.3, -6633.7033)))) < _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y, injectionSwitch.y)))) ? mat2(1.0) : _GLF_FUZZED(mat2(78.38, -6.1, 284.385, 8.6)))) * (injectionSwitch)))).y))), float(_GLF_FUZZED(float(98836u))), bool(false))), _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x < injectionSwitch.y)))))))) ? mat2(1.0) : _GLF_FUZZED(mat2(78.38, -6.1, _GLF_IDENTITY(284.385, clamp(_GLF_IDENTITY(284.385, (284.385) - 0.0), 284.385, 284.385)), 8.6)))) * (injectionSwitch)))).y, _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mat2(1.0) : _GLF_FUZZED(mat2(78.38, -6.1, 284.385, 8.6)))) * (injectionSwitch)))).y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))) - vec2(0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), min(injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), false)))))), _GLF_IDENTITY(false || (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, exp(0.0), 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3x2(1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), (float(mat3x2(1.0, 1.0, 0.0, 1.0, 0.0, 1.0))) + 0.0)), exp(0.0), 0.0, sqrt(1.0), 1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, 1.0 * (1.0))), float(_GLF_FUZZED(-131.677)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), 1.0, 0.0, 0.0, abs(0.0), round(length(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), (normalize(vec4(1.0, 1.0, 1.0, 1.0))) * mat4(1.0))))))).y)))), false || (_GLF_IDENTITY(false || (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, exp(0.0), 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3x2(1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), (float(mat3x2(1.0, 1.0, 0.0, 1.0, 0.0, 1.0))) + 0.0)), exp(0.0), 0.0, sqrt(1.0), 1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, 1.0 * (1.0))), float(_GLF_FUZZED(-131.677)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), 1.0, 0.0, 0.0, abs(0.0), round(length(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), (normalize(vec4(1.0, 1.0, 1.0, 1.0))) * mat4(1.0))))))).y)))), true && (_GLF_IDENTITY(false || (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, exp(0.0), 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3x2(1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), (float(mat3x2(1.0, 1.0, 0.0, 1.0, 0.0, 1.0))) + 0.0)), exp(0.0), 0.0, sqrt(1.0), 1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, 1.0 * (1.0))), float(_GLF_FUZZED(-131.677)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), 1.0, 0.0, 0.0, abs(0.0), round(length(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), (normalize(vec4(1.0, 1.0, 1.0, 1.0))) * mat4(1.0))))))).y)))), ! (! (false || (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, exp(0.0), 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(float(mat3x2(1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), (float(mat3x2(1.0, 1.0, 0.0, 1.0, 0.0, 1.0))) / _GLF_ONE(1.0, injectionSwitch.y)), (float(mat3x2(1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0))) + 0.0)), _GLF_IDENTITY(exp(0.0), clamp(exp(0.0), exp(0.0), _GLF_IDENTITY(exp(0.0), max(exp(0.0), _GLF_IDENTITY(exp(0.0), (exp(0.0)) * 1.0))))), 0.0, sqrt(1.0), 1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, 1.0 * (1.0))), float(_GLF_FUZZED(-131.677)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(87.09)), bool(false)))) / _GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(-1833.4176))), abs(0.0), round(length(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), (normalize(vec4(1.0, 1.0, 1.0, 1.0))) * mat4(1.0))))))).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, exp(0.0), 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(float(mat3x2(1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), (float(mat3x2(1.0, 1.0, 0.0, 1.0, 0.0, 1.0))) / _GLF_ONE(1.0, injectionSwitch.y)), (float(mat3x2(1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0))) + 0.0)), _GLF_IDENTITY(exp(0.0), clamp(exp(0.0), exp(0.0), _GLF_IDENTITY(exp(0.0), max(exp(0.0), _GLF_IDENTITY(exp(0.0), (exp(0.0)) * 1.0))))), 0.0, sqrt(1.0), 1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, 1.0 * (1.0))), float(_GLF_FUZZED(-131.677)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(87.09)), bool(false)))) / _GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(-1833.4176))), abs(0.0), round(length(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), (normalize(vec4(1.0, 1.0, 1.0, 1.0))) * mat4(1.0))))))).y))))))))))))))))), true, true)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), bool(bvec2(bool(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(true, (true) && true))), false))), (_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), bool(bvec2(bool(bvec2(_GLF_DEAD(false), true)), false)))) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(false, (false) || false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY(uint(uint(gl_WorkGroupID.x)), (uint(uint(gl_WorkGroupID.x))) >> 0u));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false))))), true && (bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))), bool(bvec4(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))), bool(bool(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))))), true, false, true))))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0))))), 1.0, 0.0, 0.0, 1.0, 0.0, sin(0.0), 0.0), transpose(transpose(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, float(vec2(injectionSwitch.y, 1.0))), 1.0, 0.0, 0.0, 1.0, 0.0, sin(0.0), 0.0))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, 1.0, 0.0, cos(0.0), sin(0.0), _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0))) < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, float(mat3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, 1.0, 0.0, cos(0.0), sin(0.0), 1.0, 1.0))) < injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true && (_GLF_IDENTITY((_GLF_DEAD(false)) && _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, 1.0, 0.0, cos(0.0), sin(0.0), _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0))) < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, float(mat3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, 1.0, 0.0, cos(0.0), sin(0.0), 1.0, 1.0))) < injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(bvec3(_GLF_IDENTITY((_GLF_DEAD(false)) && _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, 1.0, 0.0, cos(0.0), sin(0.0), _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0))) < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, float(mat3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, 1.0, 0.0, cos(0.0), sin(0.0), 1.0, 1.0))) < injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(bvec2((_GLF_DEAD(false)) && _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, 1.0, 0.0, cos(0.0), sin(0.0), _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0))) < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, float(mat3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, 1.0, 0.0, cos(0.0), sin(0.0), 1.0, 1.0))) < injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true))), true, true)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))), ((_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))) || false)))) && true, ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) / determinant(mat2(1.0, 0.0, 0.0, 1.0)))))))), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) / determinant(mat2(1.0, 0.0, 0.0, 1.0)))))))), true, false, true))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, sin(0.0)))).x > injectionSwitch.y))))), false || ((false) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), sin(0.0), 0.0))).y)), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, sin(0.0)))).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(vec2(1.0, 1.0))).y)))))))), bool(bool(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-105.301), _GLF_FUZZED(79.55)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) : _GLF_FUZZED(vec2(-2.8, -17.87)))).y)))), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, sin(0.0)))).x > injectionSwitch.y))))))))))) || false), ! (! (_GLF_DEAD(false))))) && true)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(65.30)), float(injectionSwitch.x), bool(true))) > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-2.2) : injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))))), true, true, true)), true && (bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, true)))))) && true))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, true)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool(bvec4(false, false, false, true)), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, false, false, true)), false || (bool(bvec4(false, false, false, true)))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, false, false, true)), false || (bool(bvec4(false, false, false, true)))), ! (! (_GLF_IDENTITY(bool(bvec4(false, false, false, true)), false || (bool(bvec4(false, false, false, true)))))))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true)), (bool(_GLF_IDENTITY(bvec2(bool(bvec4(false, false, false, true)), _GLF_IDENTITY(true, ! (! (true)))), bvec2(bvec2(bvec2(bool(bvec4(false, false, false, true)), _GLF_IDENTITY(true, ! (! (true))))))))) || false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u) + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / 1u), (true ? _GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u) + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / 1u) : _GLF_FUZZED(usubBorrow(num_workgroup, workgroup_size, workgroup_base)))) + subgroup_local_id, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u) + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / 1u), (true ? _GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u) + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / 1u) : _GLF_FUZZED(usubBorrow(num_workgroup, workgroup_size, workgroup_base)))) + subgroup_local_id, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u) + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / 1u), (true ? _GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u) + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / 1u) : _GLF_FUZZED(usubBorrow(num_workgroup, workgroup_size, workgroup_base)))) + subgroup_local_id))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), false)))))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u) + (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u) + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), 0u | (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), min((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)))), ~ (_GLF_IDENTITY(~ ((subgroup_local_id + 1) % subgroup_size), (~ ((subgroup_local_id + 1) % subgroup_size)) / ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(_GLF_IDENTITY(6u, 0u | (6u)))))))));
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(6731.9530), _GLF_FUZZED((-6.0))), vec2(_GLF_IDENTITY((injectionSwitch)[0], 0.0 + ((injectionSwitch)[0])), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(vec2(-8.8, -8975.1489)) : (injectionSwitch))), _GLF_IDENTITY((injectionSwitch), mat2(1.0) * ((injectionSwitch))), (injectionSwitch)))[1], _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) - 0.0)) * 1.0, exp(0.0) * ((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))[1], ((injectionSwitch)[1]) - 0.0)) * 1.0)))), bvec2(true, true))).x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(89.64)), mix(float(float(_GLF_FUZZED(89.64))), float(_GLF_FUZZED(6.3)), bool(false))), float(injectionSwitch.x), bool(true))), (true ? _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(_GLF_IDENTITY(89.64, mix(float(_GLF_FUZZED(-46.64)), float(89.64), bool(true))))), float(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])))), _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[0], injectionSwitch[0]), max(min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[0], injectionSwitch[0]), min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[0], injectionSwitch[0])))), injectionSwitch[1])).x), _GLF_IDENTITY(bool(true), ! (! (bool(true)))))) : _GLF_FUZZED(_GLF_IDENTITY(6100.8258, clamp(6100.8258, 6100.8258, _GLF_IDENTITY(6100.8258, _GLF_IDENTITY(float(float(6100.8258)), 1.0 * (float(float(6100.8258)))))))))) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), ! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(6731.9530), _GLF_FUZZED((-6.0))), mix(_GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_FUZZED(_GLF_IDENTITY(9261.2287, 0.0 + (9261.2287))), (vec2(_GLF_FUZZED(6731.9530), _GLF_FUZZED((-6.0))))[1]), mix(vec2(_GLF_IDENTITY((vec2(_GLF_FUZZED(_GLF_IDENTITY(9261.2287, 0.0 + (9261.2287))), (vec2(_GLF_FUZZED(6731.9530), _GLF_FUZZED((-6.0))))[1]))[0], ((vec2(_GLF_FUZZED(_GLF_IDENTITY(9261.2287, 0.0 + (9261.2287))), (vec2(_GLF_FUZZED(6731.9530), _GLF_FUZZED((-6.0))))[1]))[0]) * 1.0), _GLF_FUZZED(vec2(-53.21, -164.119).g)), vec2(_GLF_FUZZED(47.59), (vec2(_GLF_FUZZED(_GLF_IDENTITY(9261.2287, 0.0 + (9261.2287))), (vec2(_GLF_FUZZED(6731.9530), _GLF_FUZZED((-6.0))))[1]))[1]), bvec2(false, true))), mat2(1.0) * (vec2(_GLF_FUZZED(9261.2287), (vec2(_GLF_FUZZED(6731.9530), _GLF_FUZZED((_GLF_IDENTITY(-6.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-9534.2752) : -6.0))))))[1]))), vec2((vec2(_GLF_FUZZED(6731.9530), _GLF_FUZZED((-6.0))))[0], _GLF_FUZZED(9521.7161)), bvec2(true, _GLF_IDENTITY(false, ! (! (false)))))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], (_GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) - 0.0)) * 1.0)), _GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(true, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))))), bvec2(bvec3(bvec2(bvec2(true, true)), false))))))).x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(89.64)), (float(_GLF_FUZZED(89.64))) + 0.0), float(injectionSwitch.x), bool(true))), (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, (true) || false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) + _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), max(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0)))))) > injectionSwitch.y))), bvec2(_GLF_IDENTITY(bvec2(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec2(bvec2(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), bvec2(bvec3(_GLF_IDENTITY(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).y))), bvec2(bvec2(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false))))) ? _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(89.64), min(_GLF_FUZZED(89.64), _GLF_IDENTITY(_GLF_FUZZED(89.64), clamp(_GLF_FUZZED(_GLF_IDENTITY(89.64, max(89.64, 89.64))), _GLF_FUZZED(89.64), _GLF_FUZZED(89.64)))))), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-929.011)), vec2(_GLF_FUZZED(vec3(68.17, 933.647, -4.0).b), (injectionSwitch)[1]), bvec2(false, true))), vec2(_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY(min(injectionSwitch[0], injectionSwitch[0]), mix(float(min(injectionSwitch[0], injectionSwitch[0])), float(_GLF_FUZZED(1.7)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), injectionSwitch[1])).x), bool(true))) : _GLF_FUZZED(6100.8258))) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).y)))), ! (_GLF_IDENTITY(! ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(6731.9530), _GLF_FUZZED((-6.0))), mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(9261.2287), (vec2(_GLF_FUZZED(6731.9530), _GLF_FUZZED((-6.0))))[1]), mat2(1.0) * _GLF_IDENTITY((vec2(_GLF_FUZZED(9261.2287), (vec2(_GLF_FUZZED(6731.9530), _GLF_FUZZED((-6.0))))[1])), log(vec2(1.0, 1.0)) + (_GLF_IDENTITY((vec2(_GLF_FUZZED(9261.2287), (vec2(_GLF_FUZZED(6731.9530), _GLF_FUZZED((-6.0))))[1])), clamp((vec2(_GLF_FUZZED(9261.2287), (vec2(_GLF_FUZZED(6731.9530), _GLF_FUZZED((-6.0))))[1])), _GLF_IDENTITY((vec2(_GLF_FUZZED(9261.2287), (vec2(_GLF_FUZZED(6731.9530), _GLF_FUZZED((-6.0))))[1])), clamp((vec2(_GLF_FUZZED(9261.2287), (vec2(_GLF_FUZZED(6731.9530), _GLF_FUZZED((-6.0))))[1])), (vec2(_GLF_FUZZED(9261.2287), (vec2(_GLF_FUZZED(6731.9530), _GLF_FUZZED((-6.0))))[1])), (vec2(_GLF_FUZZED(9261.2287), (vec2(_GLF_FUZZED(6731.9530), _GLF_FUZZED((-6.0))))[1])))), (vec2(_GLF_FUZZED(9261.2287), (vec2(_GLF_FUZZED(6731.9530), _GLF_FUZZED((-6.0))))[1]))))))), vec2((vec2(_GLF_FUZZED(6731.9530), _GLF_FUZZED((-6.0))))[0], _GLF_FUZZED(9521.7161)), bvec2(true, false))), vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, clamp(1, 1, 1))))], (false ? _GLF_FUZZED(-92.84) : (injectionSwitch)[_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, clamp(1, 1, 1))))])), (_GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) - 0.0)) * 1.0)), _GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(true, _GLF_IDENTITY(true, bool(bvec3(true, false, true))))), bvec2(bvec3(bvec2(bvec2(true, true)), _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))))))).x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(89.64)), (float(_GLF_FUZZED(89.64))) + 0.0), float(injectionSwitch.x), bool(true))), (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(_GLF_IDENTITY(bvec2(bvec2(true, _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec2(bvec2(bvec2(true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) : _GLF_FUZZED(tan(-7.7)))) > injectionSwitch.y))))))))), bvec2(bvec3(_GLF_IDENTITY(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec2(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false))))) ? _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(89.64), min(_GLF_FUZZED(89.64), _GLF_IDENTITY(_GLF_FUZZED(89.64), clamp(_GLF_FUZZED(89.64), _GLF_FUZZED(89.64), _GLF_FUZZED(89.64)))))), float(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[_GLF_IDENTITY(0, (0) | (0))], injectionSwitch[0])), injectionSwitch[1])).x), bool(true))) : _GLF_FUZZED(6100.8258))) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (0.0) - 0.0) : _GLF_FUZZED(length(vec3(-804.764, -407.596, 1.1))))))))).y))))), ! (! (! ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(6731.9530), _GLF_FUZZED((-6.0))), mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(9261.2287), (vec2(_GLF_FUZZED(6731.9530), _GLF_FUZZED((-6.0))))[1]), mat2(1.0) * (vec2(_GLF_FUZZED(9261.2287), (vec2(_GLF_FUZZED(6731.9530), _GLF_FUZZED((-6.0))))[1]))), vec2((vec2(_GLF_FUZZED(6731.9530), _GLF_FUZZED((-6.0))))[0], _GLF_FUZZED(9521.7161)), bvec2(true, false))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], (_GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) - 0.0)) * 1.0)), _GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(true, true)), bvec2(bvec3(bvec2(bvec2(true, true)), false))))))).x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(89.64)), (float(_GLF_FUZZED(89.64))) + 0.0), float(injectionSwitch.x), bool(true))), (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(_GLF_IDENTITY(bvec2(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec2(bvec2(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), bvec2(bvec3(_GLF_IDENTITY(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec2(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false))))) ? _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(89.64), min(_GLF_FUZZED(89.64), _GLF_IDENTITY(_GLF_FUZZED(89.64), clamp(_GLF_FUZZED(89.64), _GLF_FUZZED(89.64), _GLF_FUZZED(89.64)))))), float(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).x), bool(true))) : _GLF_FUZZED(6100.8258))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(6731.9530), _GLF_FUZZED((-6.0))), mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(9261.2287), (vec2(_GLF_FUZZED(6731.9530), _GLF_FUZZED((-6.0))))[1]), mat2(1.0) * (vec2(_GLF_FUZZED(9261.2287), (vec2(_GLF_FUZZED(6731.9530), _GLF_FUZZED((-6.0))))[1]))), vec2((vec2(_GLF_FUZZED(6731.9530), _GLF_FUZZED((-6.0))))[0], _GLF_FUZZED(9521.7161)), bvec2(true, false))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], (_GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) - 0.0)) * 1.0)), _GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(true, true)), bvec2(bvec3(bvec2(bvec2(true, true)), false))))))).x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(89.64)), (float(_GLF_FUZZED(89.64))) + 0.0), float(injectionSwitch.x), bool(true))), (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(_GLF_IDENTITY(bvec2(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec2(bvec2(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), bvec2(bvec3(_GLF_IDENTITY(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec2(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false))))) ? _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(89.64), min(_GLF_FUZZED(89.64), _GLF_IDENTITY(_GLF_FUZZED(89.64), clamp(_GLF_FUZZED(89.64), _GLF_FUZZED(89.64), _GLF_FUZZED(89.64)))))), float(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).x), bool(true))) : _GLF_FUZZED(6100.8258))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(6731.9530), _GLF_FUZZED((-6.0))), mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(9261.2287), (vec2(_GLF_FUZZED(6731.9530), _GLF_FUZZED((-6.0))))[1]), mat2(1.0) * (vec2(_GLF_FUZZED(9261.2287), (vec2(_GLF_FUZZED(6731.9530), _GLF_FUZZED((-6.0))))[1]))), vec2((vec2(_GLF_FUZZED(6731.9530), _GLF_FUZZED((-6.0))))[0], _GLF_FUZZED(9521.7161)), bvec2(true, false))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], (_GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) - 0.0)) * 1.0)), _GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(true, true)), bvec2(bvec3(bvec2(bvec2(true, true)), false))))))).x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(89.64)), (float(_GLF_FUZZED(89.64))) + 0.0), float(injectionSwitch.x), bool(true))), (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(_GLF_IDENTITY(bvec2(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec2(bvec2(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), bvec2(bvec3(_GLF_IDENTITY(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec2(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false))))) ? _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(89.64), min(_GLF_FUZZED(89.64), _GLF_IDENTITY(_GLF_FUZZED(89.64), clamp(_GLF_FUZZED(89.64), _GLF_FUZZED(89.64), _GLF_FUZZED(89.64)))))), float(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).x), bool(true))) : _GLF_FUZZED(6100.8258))))) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) - vec2(0.0, 0.0), mat2(1.0) * ((injectionSwitch) - vec2(0.0, 0.0)))))).y)))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint read = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (false ? _GLF_IDENTITY(_GLF_FUZZED(-37914), (_GLF_IDENTITY(_GLF_FUZZED(-37914), clamp(_GLF_FUZZED(-37914), _GLF_FUZZED(-37914), _GLF_FUZZED(-37914)))) << 0) : 64)), 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(1, 1, 1), _GLF_IDENTITY(clamp(ivec3(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-76374) : 1)), 1, 1), ivec3(1, 1, 1), ivec3(1, 1, 1)), min(_GLF_IDENTITY(clamp(ivec3(1, 1, 1), ivec3(1, 1, 1), ivec3(1, 1, 1)), clamp(clamp(ivec3(1, 1, 1), _GLF_IDENTITY(ivec3(1, _GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), (true ? 1 : _GLF_IDENTITY(_GLF_FUZZED(39052), ~ (~ (_GLF_IDENTITY(_GLF_FUZZED(39052), 0 + (_GLF_FUZZED(_GLF_IDENTITY(39052, clamp(39052, 39052, _GLF_IDENTITY(39052, max(39052, 39052)))))))))))), 1), _GLF_IDENTITY((ivec3(1, 1, 1)) | (ivec3(1, 1, 1)), (ivec3(0, 0, 0) << _GLF_IDENTITY(ivec3(7), ivec3(7))) | ((ivec3(1, 1, 1)) | (ivec3(1, 1, 1))))), _GLF_IDENTITY(ivec3(1, 1, 1), (ivec3(1, 1, 1)) / ivec3(1, 1, 1))), clamp(ivec3(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(int(1)))) >> (0 >> _GLF_IDENTITY(int(1), int(1)))), 1, 1), ivec3(1, 1, 1), ivec3(1, 1, 1)), clamp(ivec3(_GLF_IDENTITY(1, (1) * 1), 1, 1), ivec3(1, 1, 1), ivec3(1, 1, 1)))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(ivec3(1, _GLF_IDENTITY(1, (1) ^ 0), 1), ~ (_GLF_IDENTITY(~ (ivec3(1, _GLF_IDENTITY(1, (1) >> 0), 1)), clamp(~ (ivec3(1, 1, 1)), ~ (ivec3(1, 1, 1)), ~ (ivec3(1, 1, 1)))))), ivec3(1, 1, 1), ivec3(1, 1, 1)), (false ? _GLF_FUZZED(ivec3(-87453, 62548, -6315)) : clamp(_GLF_IDENTITY(ivec3(1, 1, 1), (ivec3(1, 1, 1)) / ivec3(1, 1, 1)), ivec3(1, 1, 1), ivec3(1, 1, 1)))))))), (int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, max(1, 1)), 1, 1), _GLF_IDENTITY(_GLF_IDENTITY(clamp(ivec3(1, 1, 1), ivec3(1, 1, 1), ivec3(1, 1, 1)), (true ? clamp(ivec3(1, 1, _GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, max(1, 1)) : _GLF_FUZZED((mat4(-7.1, 248.358, -145.893, -71.79, 200.641, 4.6, 4.8, 19.85, 6.8, -1.5, -54.34, 8880.8609, -7083.1888, 2.1, -2343.5770, 3051.7507) , 88593))))), ivec3(1, 1, 1), ivec3(1, 1, 1)) : _GLF_FUZZED(ivec3(67847, -71867, _GLF_IDENTITY(18943, clamp(18943, _GLF_IDENTITY(18943, (18943) - 0), 18943)))))), min(_GLF_IDENTITY(clamp(ivec3(1, 1, 1), ivec3(1, 1, 1), ivec3(1, 1, 1)), _GLF_IDENTITY(clamp(clamp(ivec3(1, 1, 1), _GLF_IDENTITY(ivec3(1, 1, 1), (ivec3(1, 1, 1)) | (ivec3(1, 1, 1))), ivec3(1, 1, 1)), clamp(ivec3(1, 1, 1), ivec3(1, 1, 1), _GLF_IDENTITY(ivec3(1, 1, 1), (ivec3(1, 1, 1)) >> (ivec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) ^ ivec3(1, 1, 1)))), clamp(ivec3(_GLF_IDENTITY(1, (1) * 1), 1, 1), ivec3(1, 1, 1), ivec3(1, 1, 1))), min(clamp(clamp(ivec3(1, 1, 1), _GLF_IDENTITY(ivec3(1, 1, 1), (_GLF_IDENTITY(ivec3(1, 1, 1), (ivec3(1, 1, 1)) | (_GLF_IDENTITY(ivec3(1, 1, 1), ivec3(1, 1, 1) * (ivec3(1, 1, 1)))))) | (ivec3(1, 1, 1))), ivec3(1, 1, 1)), clamp(ivec3(1, 1, 1), ivec3(1, 1, 1), ivec3(1, 1, 1)), clamp(ivec3(_GLF_IDENTITY(1, _GLF_IDENTITY((1) * 1, min((1) * 1, (1) * 1))), 1, 1), ivec3(1, 1, 1), ivec3(1, 1, 1))), clamp(clamp(ivec3(1, 1, 1), _GLF_IDENTITY(ivec3(1, 1, 1), (ivec3(1, 1, _GLF_IDENTITY(1, 0 | (1)))) | (ivec3(1, 1, 1))), ivec3(1, 1, 1)), clamp(ivec3(1, 1, 1), ivec3(1, 1, 1), ivec3(1, 1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (false ? _GLF_FUZZED(-54432) : ~ (1)))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))))), clamp(ivec3(_GLF_IDENTITY(1, (1) * 1), 1, 1), ivec3(1, 1, 1), ivec3(1, 1, 1)))))), _GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(ivec3(1, 1, 1), ~ (_GLF_IDENTITY(~ (ivec3(1, 1, 1)), clamp(~ (ivec3(1, 1, 1)), ~ (ivec3(1, 1, 1)), ~ (ivec3(1, 1, 1)))))), ivec3(1, 1, 1), ivec3(1, 1, 1)), ivec3(0, _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(0, (0) | (0)))), _GLF_IDENTITY(0, 0 | (0)))), 0) | (clamp(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) | (1)), 1, 1), ~ (_GLF_IDENTITY(~ (ivec3(1, 1, 1)), clamp(~ (ivec3(_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(1, ~ (~ (1))), 0, 1)), (int(ivec3(_GLF_IDENTITY(1, ~ (~ (1))), 0, 1))) | (_GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(1, ~ (~ (1))), 0, 1)), min(int(ivec3(_GLF_IDENTITY(1, ~ (~ (1))), 0, 1)), int(ivec3(_GLF_IDENTITY(1, ~ (~ (1))), 0, 1))))))), _GLF_IDENTITY(1, (1) | (1)), 1)), ~ (ivec3(1, 1, 1)), ~ (ivec3(1, 1, 1)))))), ivec3(1, 1, 1), ivec3(1, 1, 1)))), (false ? _GLF_FUZZED(ivec3(-87453, 62548, -6315)) : clamp(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (0 >> _GLF_IDENTITY(int(7), int(7))) + (1)), 1, 1), (ivec3(1, 1, 1)) / ivec3(1, 1, 1)), (_GLF_IDENTITY(ivec3(1, 1, 1), (ivec3(1, 1, 1)) / ivec3(1, 1, 1))) ^ ivec3(_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-5940))))), 0, 0)), ivec3(1, 1, 1), ivec3(1, _GLF_IDENTITY(1, (1) / ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)))), 1))))))))) - int(_GLF_ZERO(0.0, injectionSwitch.x)))), (1) * 1), (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(1, 1, 1), _GLF_IDENTITY(clamp(ivec3(1, 1, 1), ivec3(1, 1, 1), ivec3(1, 1, 1)), min(_GLF_IDENTITY(clamp(ivec3(1, 1, 1), ivec3(1, 1, 1), ivec3(1, 1, 1)), clamp(_GLF_IDENTITY(clamp(ivec3(1, 1, 1), _GLF_IDENTITY(ivec3(1, _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(39052))), 1), (ivec3(1, 1, 1)) | (ivec3(1, 1, 1))), ivec3(1, 1, 1)), min(_GLF_IDENTITY(clamp(ivec3(1, 1, 1), _GLF_IDENTITY(ivec3(1, _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(39052))), 1), (ivec3(1, 1, 1)) | (ivec3(1, 1, 1))), ivec3(1, 1, 1)), (clamp(ivec3(1, 1, 1), _GLF_IDENTITY(ivec3(1, _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(39052))), 1), (ivec3(1, 1, 1)) | (ivec3(1, 1, 1))), ivec3(1, 1, 1))) + ivec3(0, 0, 0)), _GLF_IDENTITY(clamp(ivec3(1, 1, 1), _GLF_IDENTITY(ivec3(1, _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(39052))), 1), (ivec3(1, 1, 1)) | (ivec3(1, 1, 1))), ivec3(1, 1, 1)), (clamp(ivec3(1, 1, 1), _GLF_IDENTITY(ivec3(1, _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(39052))), 1), (ivec3(1, 1, 1)) | (ivec3(1, 1, 1))), ivec3(1, 1, 1))) | ivec3(0, 0, 0)))), clamp(ivec3(1, 1, 1), ivec3(_GLF_IDENTITY(1, (1) / 1), 1, 1), ivec3(1, 1, 1)), clamp(ivec3(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(int(1)))) * 1), 1, 1), ivec3(1, 1, 1), ivec3(1, 1, 1)))), _GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(ivec3(1, 1, 1), ~ (_GLF_IDENTITY(~ (ivec3(1, _GLF_IDENTITY(1, (1) >> 0), 1)), clamp(~ (ivec3(1, 1, 1)), ~ (ivec3(1, 1, 1)), ~ (ivec3(1, 1, 1)))))), ivec3(1, 1, 1), ivec3(1, 1, 1)), (false ? _GLF_FUZZED(ivec3(-87453, 62548, -6315)) : clamp(_GLF_IDENTITY(ivec3(1, 1, 1), (ivec3(1, 1, 1)) / ivec3(1, 1, 1)), ivec3(1, 1, 1), ivec3(1, 1, 1)))), _GLF_IDENTITY(ivec3(ivec3(_GLF_IDENTITY(clamp(_GLF_IDENTITY(ivec3(1, 1, 1), ~ (_GLF_IDENTITY(~ (ivec3(1, _GLF_IDENTITY(1, (1) >> 0), 1)), clamp(~ (ivec3(1, 1, 1)), ~ (ivec3(1, 1, 1)), ~ (ivec3(1, 1, 1)))))), ivec3(1, 1, 1), ivec3(1, 1, 1)), (false ? _GLF_FUZZED(ivec3(-87453, 62548, -6315)) : clamp(_GLF_IDENTITY(ivec3(1, 1, 1), (ivec3(1, 1, 1)) / ivec3(1, 1, 1)), ivec3(1, 1, 1), ivec3(1, 1, 1)))))), ivec3(0, 0, 0) + (ivec3(ivec3(_GLF_IDENTITY(clamp(_GLF_IDENTITY(ivec3(1, 1, 1), ~ (_GLF_IDENTITY(~ (ivec3(1, _GLF_IDENTITY(1, (1) >> 0), 1)), clamp(~ (ivec3(1, 1, 1)), ~ (ivec3(1, 1, 1)), ~ (ivec3(1, 1, 1)))))), ivec3(1, 1, 1), ivec3(1, 1, 1)), (false ? _GLF_FUZZED(ivec3(-87453, 62548, -6315)) : clamp(_GLF_IDENTITY(ivec3(1, 1, 1), (ivec3(1, 1, 1)) / ivec3(1, 1, 1)), ivec3(1, 1, 1), ivec3(1, 1, 1))))))))))))), (int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, max(1, 1)), 1, _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-87797) : 1))), _GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(ivec3(1, 1, 1), (ivec3(1, 1, 1)) << ivec3(0, 0, 0)), ivec3(1, _GLF_IDENTITY(1, (1) | 0), 1), ivec3(1, 1, 1)), (true ? clamp(ivec3(1, 1, 1), ivec3(1, 1, 1), ivec3(1, 1, 1)) : _GLF_FUZZED(ivec3(67847, -71867, 18943)))), min(_GLF_IDENTITY(clamp(ivec3(1, _GLF_IDENTITY(1, max(1, 1)), 1), ivec3(1, 1, 1), ivec3(1, 1, 1)), _GLF_IDENTITY(clamp(clamp(ivec3(1, 1, 1), _GLF_IDENTITY(ivec3(1, 1, 1), (_GLF_IDENTITY(ivec3(1, 1, 1), min(_GLF_IDENTITY(ivec3(1, 1, 1), (ivec3(1, 1, 1)) / ivec3(1, 1, 1)), ivec3(1, 1, 1)))) | (_GLF_IDENTITY(ivec3(1, 1, 1), clamp(_GLF_IDENTITY(ivec3(1, 1, 1), ivec3(ivec3(ivec3(1, 1, 1)))), ivec3(1, 1, 1), ivec3(1, 1, 1))))), ivec3(1, 1, 1)), clamp(ivec3(1, 1, 1), ivec3(1, 1, 1), ivec3(1, 1, _GLF_IDENTITY(1, ~ (~ (1))))), clamp(ivec3(_GLF_IDENTITY(1, (1) * 1), 1, 1), ivec3(1, 1, 1), ivec3(1, 1, 1))), min(clamp(clamp(ivec3(1, 1, 1), _GLF_IDENTITY(_GLF_IDENTITY(ivec3(1, 1, 1), (ivec3(1, 1, 1)) | (ivec3(1, 1, 1))), (_GLF_IDENTITY(ivec3(1, 1, 1), (ivec3(1, 1, 1)) | (ivec3(1, 1, 1)))) << _GLF_IDENTITY(ivec3(0, 0, 0), ivec3(ivec4(ivec3(0, 0, 0), 1)))), ivec3(1, 1, 1)), clamp(ivec3(1, 1, 1), ivec3(1, 1, 1), ivec3(1, 1, 1)), clamp(ivec3(_GLF_IDENTITY(1, (1) * 1), 1, 1), ivec3(1, 1, 1), ivec3(1, 1, 1))), clamp(clamp(ivec3(1, 1, 1), _GLF_IDENTITY(ivec3(1, 1, 1), (ivec3(1, 1, 1)) | (ivec3(1, 1, 1))), ivec3(1, 1, 1)), clamp(ivec3(1, 1, 1), ivec3(1, 1, 1), ivec3(1, 1, 1)), _GLF_IDENTITY(clamp(ivec3(_GLF_IDENTITY(1, (1) * 1), 1, 1), ivec3(1, 1, 1), ivec3(1, 1, 1)), (clamp(ivec3(_GLF_IDENTITY(1, (1) * 1), 1, 1), ivec3(1, 1, 1), ivec3(1, 1, 1))) << ivec3(0, 0, 0)))))), _GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(1, 1, 1), max(ivec3(1, 1, 1), ivec3(1, 1, 1))), ~ (_GLF_IDENTITY(~ (ivec3(1, 1, 1)), clamp(~ (ivec3(1, 1, 1)), ~ (ivec3(1, 1, 1)), ~ (ivec3(1, 1, 1)))))), ivec3(1, 1, 1), ivec3(1, 1, 1)), ivec3(0, 0, 0) | (clamp(_GLF_IDENTITY(ivec3(1, 1, 1), ~ (_GLF_IDENTITY(~ (ivec3(1, 1, 1)), clamp(~ (ivec3(1, 1, 1)), ~ (ivec3(1, 1, 1)), ~ (ivec3(1, 1, 1)))))), ivec3(1, 1, _GLF_IDENTITY(1, (1) ^ 0)), ivec3(1, 1, 1)))), (false ? _GLF_FUZZED(ivec3(-87453, 62548, -6315)) : clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(1, 1, 1), (ivec3(1, 1, 1)) / ivec3(1, 1, 1)), min(_GLF_IDENTITY(ivec3(1, 1, 1), (ivec3(1, 1, 1)) / ivec3(1, 1, 1)), _GLF_IDENTITY(ivec3(1, 1, 1), (ivec3(1, 1, 1)) / ivec3(1, 1, 1)))), (_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(findLSB(-50361)))), 1, 1), (ivec3(1, 1, 1)) / _GLF_IDENTITY(ivec3(1, 1, 1), (ivec3(1, 1, 1)) | (ivec3(1, 1, 1))))) ^ ivec3(_GLF_IDENTITY(0, 0 + (_GLF_IDENTITY(0, 0 + (_GLF_IDENTITY(0, min(0, 0)))))), 0, 0)), ivec3(1, 1, 1), ivec3(1, 1, 1))))))))) - int(_GLF_ZERO(0.0, injectionSwitch.x)))), (1) * 1)) >> (0 >> _GLF_IDENTITY(int(8), int(8))))), 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), true, _GLF_IDENTITY(true, bool(bvec3(true, true, true)))), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(9.6)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true)))), true)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) - vec2(0.0, 0.0)).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) - vec2(0.0, 0.0)).x > injectionSwitch.y)) || false))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 1.0, 0.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), min(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, min(1.0, 1.0)))), _GLF_IDENTITY(1.0, 0.0 + (1.0))))) * 1.0)) - _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(-16.54)))), 0.0), (true ? mat4x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0) : _GLF_FUZZED((mat4x2(-3.7, 3800.4949, -2767.3878, -31.42, 5173.2804, -7.6, 3.1, 2746.8159) * mat4(-63.10, 7.0, 8.0, 0.4, -6.2, -25.45, 8156.5383, -835.949, -1050.9197, -4.6, -123.697, 69.90, 47.44, 2.9, -92.86, -376.727)))))), vec2(0.0, 0.0) + (_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), max(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))) * (0.0))), (true ? mat4x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0) : _GLF_FUZZED((mat4x2(-3.7, 3800.4949, -2767.3878, -31.42, 5173.2804, -7.6, 3.1, 2746.8159) * _GLF_IDENTITY(mat4(-63.10, 7.0, 8.0, 0.4, _GLF_IDENTITY(_GLF_IDENTITY(-6.2, clamp(-6.2, -6.2, -6.2)), (true ? _GLF_IDENTITY(-6.2, clamp(-6.2, -6.2, -6.2)) : _GLF_FUZZED(-41.87))), -25.45, 8156.5383, _GLF_IDENTITY(-835.949, mix(float(-835.949), float(_GLF_FUZZED(8.5)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), -1050.9197, -4.6, -123.697, 69.90, _GLF_IDENTITY(47.44, _GLF_IDENTITY(dot(vec2(1.0, 0.0), _GLF_IDENTITY(vec2(0.0, round(length(normalize(vec2(1.0, 1.0))))), (_GLF_IDENTITY(vec2(0.0, round(length(normalize(vec2(1.0, 1.0))))), min(vec2(0.0, round(length(normalize(vec2(1.0, 1.0))))), vec2(0.0, round(length(normalize(vec2(1.0, 1.0)))))))) - vec2(0.0, 0.0))), dot(vec2(1.0, 0.0), vec2(0.0, round(length(normalize(vec2(1.0, 1.0))))))) + (_GLF_IDENTITY(47.44, (47.44) * _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)))))), 2.9, -92.86, -376.727), transpose(transpose(_GLF_IDENTITY(mat4(-63.10, 7.0, 8.0, 0.4, _GLF_IDENTITY(_GLF_IDENTITY(-6.2, clamp(-6.2, -6.2, -6.2)), (true ? _GLF_IDENTITY(-6.2, clamp(-6.2, -6.2, -6.2)) : _GLF_FUZZED(-41.87))), -25.45, 8156.5383, _GLF_IDENTITY(-835.949, mix(float(-835.949), float(_GLF_FUZZED(8.5)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), -1050.9197, -4.6, -123.697, 69.90, _GLF_IDENTITY(47.44, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, round(length(normalize(vec2(_GLF_IDENTITY(1.0, (1.0) * cos(0.0)), 1.0)))))), dot(vec2(1.0, 0.0), vec2(0.0, round(length(normalize(vec2(1.0, 1.0))))))) + (_GLF_IDENTITY(_GLF_IDENTITY(47.44, (47.44) * _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)))), clamp(_GLF_IDENTITY(47.44, (47.44) * _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)))), _GLF_IDENTITY(47.44, (47.44) * _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)))), _GLF_IDENTITY(_GLF_IDENTITY(47.44, (47.44) * _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)))), min(_GLF_IDENTITY(47.44, (47.44) * _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)))), _GLF_IDENTITY(47.44, (47.44) * _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)))))))))), 2.9, -92.86, -376.727), mat4(1.0) * (mat4(_GLF_IDENTITY(-63.10, clamp(-63.10, -63.10, -63.10)), 7.0, 8.0, 0.4, _GLF_IDENTITY(_GLF_IDENTITY(-6.2, clamp(-6.2, -6.2, -6.2)), (true ? _GLF_IDENTITY(-6.2, clamp(-6.2, -6.2, -6.2)) : _GLF_FUZZED(-41.87))), -25.45, 8156.5383, _GLF_IDENTITY(-835.949, mix(float(-835.949), float(_GLF_FUZZED(8.5)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), -1050.9197, -4.6, -123.697, 69.90, _GLF_IDENTITY(47.44, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, round(length(normalize(vec2(1.0, 1.0)))))), float(mat4x3(dot(vec2(1.0, 0.0), vec2(0.0, round(length(normalize(vec2(1.0, 1.0)))))), tan(0.0), exp(0.0), 0.0, cos(0.0), exp(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))))), dot(vec2(1.0, 0.0), vec2(0.0, round(length(normalize(vec2(1.0, 1.0))))))) + (_GLF_IDENTITY(47.44, (47.44) * _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(_GLF_IDENTITY(0.0, (0.0) + 0.0), 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)))))), 2.9, -92.86, -376.727))))))))))), max(vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED((-654.446 * 9.1)) : 1.0)), 0.0, 1.0, _GLF_IDENTITY(1.0, float(mat3x4(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 1.0, 1.0, 0.0, length(vec2(0.0, 0.0)), 0.0, cos(0.0), 1.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0), (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, true, false)), bool(bool(bool(bvec4(true, true, true, false)))))) ? mat4x2(injectionSwitch, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-711.310), mix(float(_GLF_FUZZED(-711.310)), float(_GLF_FUZZED(37.29)), bool(false)))), float(1.0), bool(true))), 1.0, 0.0) : _GLF_FUZZED((mat4x2(-3.7, 3800.4949, -2767.3878, -31.42, 5173.2804, -7.6, 3.1, 2746.8159) * mat4(-63.10, 7.0, 8.0, 0.4, -6.2, -25.45, 8156.5383, -835.949, _GLF_IDENTITY(-1050.9197, 0.0 + (-1050.9197)), _GLF_IDENTITY(_GLF_IDENTITY(-4.6, mix(float(_GLF_FUZZED(4.3)), float(_GLF_IDENTITY(-4.6, (-4.6) / 1.0)), bool(true))), clamp(-4.6, -4.6, _GLF_IDENTITY(-4.6, max(-4.6, -4.6)))), -123.697, 69.90, _GLF_IDENTITY(47.44, (_GLF_IDENTITY(47.44, (47.44) - 0.0)) / _GLF_IDENTITY(1.0, float(vec3(1.0, 0.0, 0.0)))), 2.9, _GLF_IDENTITY(-92.86, max(-92.86, _GLF_IDENTITY(-92.86, (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(3.4) : -92.86)))), -376.727)))))), vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 1.0, 1.0, 1.0, 0.0), (true ? mat4x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) * 1.0)) : _GLF_FUZZED((mat4x2(-3.7, 3800.4949, -2767.3878, -31.42, 5173.2804, -7.6, 3.1, 2746.8159) * mat4(-63.10, 7.0, 8.0, 0.4, -6.2, -25.45, 8156.5383, -835.949, -1050.9197, -4.6, -123.697, 69.90, 47.44, 2.9, -92.86, -376.727))))))))))).y))))
  barrier();
 atomicStore(checker[virtual_gid], read, 4, 64, _GLF_IDENTITY(4, (false ? _GLF_FUZZED(-95242) : 4)));
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
