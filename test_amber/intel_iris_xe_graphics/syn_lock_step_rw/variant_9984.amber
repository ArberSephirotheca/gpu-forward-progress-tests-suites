#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_23 {
 bvec3 _f0;
 vec3 _f1;
 uvec3 _f2;
} ;

struct _GLF_struct_22 {
 mat2x4 _f0;
 vec4 _f1;
} ;

struct _GLF_struct_24 {
 ivec3 _f0;
 uint _f1;
 uvec4 _f2;
 _GLF_struct_22 _f3;
 bvec3 _f4;
 _GLF_struct_23 _f5;
} ;

struct _GLF_struct_20 {
 uint subgroup_local_id;
 mat2x4 _f0;
} ;

struct _GLF_struct_19 {
 mat2 _f0;
 uvec2 _f1;
 bool _f2;
 mat2 _f3;
 bool _f4;
 uvec4 _f5;
} ;

struct _GLF_struct_18 {
 uvec4 _f0;
 mat4x3 _f1;
} ;

struct _GLF_struct_21 {
 mat3x4 _f0;
 _GLF_struct_18 _f1;
 _GLF_struct_19 _f2;
 mat3x4 _f3;
 uvec2 _f4;
 int _f5;
 _GLF_struct_20 _f6;
} ;

struct _GLF_struct_16 {
 bool _f0;
 int _f1;
 ivec4 _f2;
} ;

struct _GLF_struct_15 {
 ivec4 _f0;
 mat2x4 _f1;
 ivec3 _f2;
 vec4 _f3;
 uvec4 _f4;
 mat3 _f5;
} ;

struct _GLF_struct_14 {
 uvec3 _f0;
 mat3x2 _f1;
 mat3x4 _f2;
 uvec4 _f3;
 mat2x3 _f4;
 ivec4 _f5;
 vec4 _f6;
} ;

struct _GLF_struct_13 {
 mat2x3 _f0;
 mat2x3 _f1;
 mat4x2 _f2;
 bvec2 _f3;
 mat4x3 _f4;
 bvec3 _f5;
 mat2 _f6;
} ;

struct _GLF_struct_17 {
 _GLF_struct_13 _f0;
 _GLF_struct_14 _f1;
 _GLF_struct_15 _f2;
 bvec4 _f3;
 _GLF_struct_16 _f4;
} ;

struct _GLF_struct_11 {
 vec4 _f0;
} ;

struct _GLF_struct_10 {
 ivec4 _f0;
 vec2 _f1;
} ;

struct _GLF_struct_12 {
 uvec2 _f0;
 mat2x3 _f1;
 _GLF_struct_10 _f2;
 _GLF_struct_11 _f3;
 uvec2 _f4;
 mat3 _f5;
 uint _f6;
} ;

struct _GLF_struct_25 {
 float _f0;
 _GLF_struct_12 _f1;
 _GLF_struct_17 _f2;
 _GLF_struct_21 _f3;
 mat3x2 _f4;
 _GLF_struct_24 _f5;
} ;

struct _GLF_struct_7 {
 mat3x2 _f0;
 bvec4 _f1;
 float _f2;
 vec3 _f3;
} ;

struct _GLF_struct_6 {
 uint _f0;
 mat2 _f1;
} ;

struct _GLF_struct_5 {
 float _f0;
 ivec4 _f1;
 mat3 _f2;
 bvec3 _f3;
 mat4x2 _f4;
 mat3x4 _f5;
 bvec3 _f6;
} ;

struct _GLF_struct_4 {
 mat2x4 _f0;
 bvec3 _f1;
 mat2x4 _f2;
} ;

struct _GLF_struct_8 {
 uint subgroup_size;
 _GLF_struct_4 _f0;
 _GLF_struct_5 _f1;
 bvec4 _f2;
 _GLF_struct_6 _f3;
 uint _f4;
 _GLF_struct_7 _f5;
} ;

struct _GLF_struct_9 {
 _GLF_struct_8 _f0;
} ;

struct _GLF_struct_1 {
 vec2 _f0;
 bvec3 _f1;
 ivec4 _f2;
 mat3x4 _f3;
} ;

struct _GLF_struct_0 {
 ivec4 _f0;
 vec3 _f1;
} ;

struct _GLF_struct_2 {
 _GLF_struct_0 _f0;
 uint subgroup_id;
 ivec2 _f1;
 bvec3 _f2;
 _GLF_struct_1 _f3;
 vec3 _f4;
} ;

struct _GLF_struct_3 {
 _GLF_struct_2 _f0;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 _GLF_struct_3 _GLF_struct_replacement_3 = _GLF_struct_3(_GLF_struct_2(_GLF_struct_0(ivec4(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) * _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) * 1), _GLF_IDENTITY(1, clamp(1, 1, 1)))))))), _GLF_IDENTITY(vec3(1.0), min(vec3(1.0), vec3(1.0)))), gl_SubgroupID, ivec2(1), _GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))), _GLF_struct_1(vec2(1.0), bvec3(true), ivec4(1), mat3x4(1.0)), vec3(1.0)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 _GLF_struct_9 _GLF_struct_replacement_9 = _GLF_struct_9(_GLF_struct_8(gl_SubgroupSize, _GLF_struct_4(mat2x4(1.0), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(true), false)), true))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(true), _GLF_IDENTITY(false, (false) && true))), bvec3(bvec4(bvec3(bvec4(bvec3(true), false)), true))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(true), false)), true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(true), false)), true))), true)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(true), false)), true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(true), false)), true))), true)))), true))))))))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(true), false)), true))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(true), false)), true))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(true), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true))), bvec3(bvec4(bvec3(bvec4(bvec3(true), false)), true)))))))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(true), false)), true))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(true), false)), true))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(true), false)), true))))))))))))), false))), mat2x4(1.0)), _GLF_struct_5(1.0, ivec4(1), mat3(1.0), bvec3(true), mat4x2(1.0), mat3x4(1.0), bvec3(true)), bvec4(true), _GLF_struct_6(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(24659u)))))) << 0u), _GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(5.8, 0.6, 432.760, -47.68)) : mat2(1.0)))), _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(uvec3(157885u, 67537u, 10770u)[0]) : 1u)), _GLF_struct_7(mat3x2(1.0), bvec4(true), 1.0, vec3(1.0))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_25 _GLF_struct_replacement_25 = _GLF_struct_25(1.0, _GLF_struct_12(uvec2(1u), mat2x3(1.0), _GLF_struct_10(ivec4(1), vec2(1.0)), _GLF_struct_11(vec4(1.0)), uvec2(1u), mat3(1.0), 1u), _GLF_struct_17(_GLF_struct_13(mat2x3(1.0), mat2x3(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x2(1.0, 1.0, 1.0, determinant(mat2(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(2058.7947)), float(0.0), bool(true))), min(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(2058.7947)), float(0.0), bool(true))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(2058.7947)), float(0.0), bool(true))))), 1.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(0.0, float(mat3x4(0.0, 0.0, round(length(normalize(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))))), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0))), _GLF_IDENTITY(max(_GLF_IDENTITY(0.0, float(mat4(0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (0.0) - 0.0)), float(_GLF_FUZZED(9.3)), bool(false))), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))), 0.0), clamp(max(_GLF_IDENTITY(0.0, float(mat4(0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (0.0) - 0.0)), float(_GLF_FUZZED(9.3)), bool(false))), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))), 0.0), max(_GLF_IDENTITY(0.0, float(mat4(0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (0.0) - 0.0)), float(_GLF_FUZZED(9.3)), bool(false))), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))), 0.0), max(_GLF_IDENTITY(0.0, float(mat4(0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (0.0) - 0.0)), float(_GLF_FUZZED(9.3)), bool(false))), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))), 0.0)))), 0.0, 0.0)), cos(0.0), 1.0, 1.0, 0.0), mat2x3(mat2x4(mat2x3(0.0, 0.0, cos(0.0), 1.0, 1.0, 0.0)))))))), 0.0, 1.0, 1.0), (mat4x2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, determinant(mat2(1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-781.883) : 0.0)), min(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)), 1.0)), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), min(0.0, 0.0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(28.00) : 0.0)), min(0.0, 0.0)), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(_GLF_IDENTITY(-70.96, (true ? -70.96 : _GLF_FUZZED(-9020.5972)))))), 0.0)), 1.0, 1.0)) * mat4(1.0))))), mat4x2(1.0), bvec2(true), mat4x3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(vec2(3029.5876, _GLF_IDENTITY(-6418.8335, min(-6418.8335, -6418.8335))).g)), bool(false)))), bvec3(true), mat2(1.0)), _GLF_struct_14(_GLF_IDENTITY(uvec3(1u), (uvec3(1u)) | (uvec3(1u))), mat3x2(1.0), mat3x4(1.0), _GLF_IDENTITY(uvec4(1u), (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(1u), clamp(uvec4(1u), _GLF_IDENTITY(_GLF_IDENTITY(uvec4(1u), max(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(1u), ~ (~ (uvec4(1u)))), (_GLF_IDENTITY(uvec4(1u), ~ (~ (uvec4(1u))))) / uvec4(1u, 1u, 1u, 1u)), uvec4(1u))), uvec4(1u, 1u, 1u, 1u) * (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(1u), max(_GLF_IDENTITY(uvec4(1u), ~ (~ (uvec4(1u)))), uvec4(1u))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(1u), max(_GLF_IDENTITY(uvec4(1u), ~ (~ (uvec4(1u)))), uvec4(1u))), uvec4(0u, 0u, 0u, 0u) | (_GLF_IDENTITY(uvec4(1u), max(_GLF_IDENTITY(uvec4(1u), ~ (~ (uvec4(1u)))), uvec4(1u)))))) << uvec4(0u, 0u, 0u, 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(uvec4(1u), min(uvec4(1u), uvec4(1u))), (uvec4(0u, 0u, 0u, 0u) | uvec4(0u, 0u, 0u, 0u)) | (uvec4(1u))))), min(_GLF_IDENTITY(uvec4(1u), _GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(uvec4(1u), uvec4(0u, 0u, 0u, 0u) | (uvec4(1u))), _GLF_IDENTITY(uvec4(1u), _GLF_IDENTITY(max(uvec4(1u), uvec4(1u)), (max(uvec4(1u), uvec4(1u))) * uvec4(1u, _GLF_IDENTITY(1u, min(1u, 1u)), 1u, 1u))), uvec4(1u)), (clamp(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, uint(uvec3(1u, 0u, ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u)))))), 1u))), uvec4(0u, 0u, 0u, 0u) | (uvec4(1u))), _GLF_IDENTITY(uvec4(1u), _GLF_IDENTITY(max(uvec4(1u), uvec4(1u)), (_GLF_IDENTITY(max(uvec4(1u), uvec4(1u)), min(max(uvec4(1u), uvec4(1u)), max(uvec4(1u), uvec4(1u))))) * uvec4(1u, 1u, 1u, 1u))), uvec4(1u))) - uvec4(0u, 0u, 0u, 0u)), (clamp(_GLF_IDENTITY(uvec4(1u), uvec4(0u, 0u, 0u, 0u) | (uvec4(_GLF_IDENTITY(1u, (1u) ^ 0u)))), _GLF_IDENTITY(uvec4(1u), _GLF_IDENTITY(max(uvec4(1u), uvec4(1u)), _GLF_IDENTITY((max(uvec4(1u), uvec4(1u))), uvec4(0u, 0u, 0u, 0u) | ((max(uvec4(1u), uvec4(1u))))) * uvec4(1u, _GLF_IDENTITY(1u, 0u + (_GLF_IDENTITY(1u, max(1u, 1u)))), 1u, 1u))), uvec4(1u))) << uvec4(0u, 0u, 0u, 0u))), _GLF_IDENTITY(_GLF_IDENTITY(uvec4(1u), clamp(uvec4(1u), _GLF_IDENTITY(uvec4(1u), max(uvec4(1u), uvec4(1u))), uvec4(1u))), _GLF_IDENTITY((uvec4(_GLF_IDENTITY(0u, (0u) | (0u)), 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(_GLF_IDENTITY(1u, (1u) * 1u)), uvec4(1u))), _GLF_IDENTITY(((uvec4(0u, 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(1u), uvec4(1u)))), (((uvec4(0u, 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(1u), uvec4(1u))))) * uvec4(1u, 1u, 1u, 1u)) << (uvec4(0u, 0u, 0u, 0u) << _GLF_IDENTITY(uvec4(6u), uvec4(6u)))) ^ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uvec4(1u), clamp(uvec4(1u), uvec4(1u), uvec4(1u))), clamp(uvec4(1u), _GLF_IDENTITY(uvec4(1u), max(uvec4(1u), uvec4(1u))), uvec4(1u)))), (_GLF_IDENTITY((_GLF_IDENTITY(uvec4(1u), clamp(uvec4(1u), _GLF_IDENTITY(uvec4(1u), max(uvec4(1u), uvec4(1u))), uvec4(1u)))), uvec4(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), (uint(0u)) * 1u))), 0u, 0u, 0u) | _GLF_IDENTITY(((_GLF_IDENTITY(uvec4(1u), clamp(uvec4(1u), _GLF_IDENTITY(uvec4(1u), max(uvec4(1u), uvec4(1u))), uvec4(1u))))), clamp(_GLF_IDENTITY(((_GLF_IDENTITY(uvec4(1u), clamp(uvec4(1u), _GLF_IDENTITY(_GLF_IDENTITY(uvec4(1u), (uvec4(1u)) ^ uvec4(0u, 0u, 0u, 0u)), max(uvec4(1u), _GLF_IDENTITY(uvec4(1u), min(_GLF_IDENTITY(uvec4(1u), (uvec4(1u)) >> uvec4(0u, 0u, 0u, 0u)), uvec4(1u))))), uvec4(1u))))), (((_GLF_IDENTITY(uvec4(1u), clamp(uvec4(1u), _GLF_IDENTITY(uvec4(1u), max(uvec4(1u), _GLF_IDENTITY(uvec4(1u), min(_GLF_IDENTITY(uvec4(1u), (uvec4(1u)) >> uvec4(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u, 0u, 0u)), uvec4(1u))))), uvec4(1u)))))) | (_GLF_IDENTITY(((_GLF_IDENTITY(uvec4(1u), clamp(uvec4(1u), _GLF_IDENTITY(uvec4(1u), max(uvec4(1u), _GLF_IDENTITY(uvec4(1u), min(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(1u), (_GLF_IDENTITY(uvec4(1u), clamp(uvec4(1u), uvec4(1u), uvec4(1u)))) | (uvec4(1u))), (uvec4(1u)) >> uvec4(0u, 0u, 0u, 0u)), uvec4(1u))))), uvec4(1u))))), clamp(_GLF_IDENTITY(((_GLF_IDENTITY(uvec4(1u), clamp(uvec4(1u), _GLF_IDENTITY(uvec4(1u), max(uvec4(1u), _GLF_IDENTITY(uvec4(1u), min(_GLF_IDENTITY(uvec4(1u), (uvec4(1u)) >> uvec4(0u, 0u, 0u, 0u)), uvec4(1u))))), uvec4(1u))))), max(((_GLF_IDENTITY(uvec4(1u), clamp(uvec4(1u), _GLF_IDENTITY(uvec4(1u), max(uvec4(1u), _GLF_IDENTITY(uvec4(1u), min(_GLF_IDENTITY(uvec4(1u), (uvec4(1u)) >> uvec4(0u, 0u, 0u, 0u)), uvec4(1u))))), uvec4(1u))))), ((_GLF_IDENTITY(uvec4(1u), clamp(uvec4(1u), _GLF_IDENTITY(uvec4(1u), max(uvec4(1u), _GLF_IDENTITY(uvec4(1u), min(_GLF_IDENTITY(uvec4(1u), (uvec4(1u)) >> uvec4(0u, 0u, 0u, 0u)), uvec4(1u))))), uvec4(1u))))))), _GLF_IDENTITY(((_GLF_IDENTITY(uvec4(1u), clamp(uvec4(1u), _GLF_IDENTITY(uvec4(1u), max(uvec4(1u), _GLF_IDENTITY(uvec4(1u), min(_GLF_IDENTITY(uvec4(1u), (uvec4(1u)) >> uvec4(0u, 0u, 0u, 0u)), uvec4(1u))))), uvec4(1u))))), (((_GLF_IDENTITY(uvec4(1u), clamp(uvec4(1u), _GLF_IDENTITY(uvec4(1u), max(uvec4(1u), _GLF_IDENTITY(uvec4(1u), min(_GLF_IDENTITY(uvec4(1u), (uvec4(1u)) >> uvec4(0u, 0u, 0u, 0u)), uvec4(1u))))), uvec4(1u)))))) | uvec4(0u, 0u, 0u, 0u)), ((_GLF_IDENTITY(uvec4(1u), clamp(_GLF_IDENTITY(uvec4(1u), (uvec4(1u)) << uvec4(0u, 0u, 0u, 0u)), _GLF_IDENTITY(uvec4(1u), max(uvec4(1u), _GLF_IDENTITY(uvec4(1u), min(_GLF_IDENTITY(uvec4(1u), _GLF_IDENTITY((uvec4(1u)), ((uvec4(1u))) | ((uvec4(1u)))) >> uvec4(0u, 0u, 0u, 0u)), uvec4(1u))))), uvec4(1u))))))))), ((_GLF_IDENTITY(uvec4(1u), clamp(uvec4(1u), _GLF_IDENTITY(uvec4(1u), max(uvec4(1u), uvec4(1u))), uvec4(1u))))), ((_GLF_IDENTITY(uvec4(1u), clamp(uvec4(_GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u))))), _GLF_IDENTITY(uvec4(1u), max(uvec4(1u), uvec4(1u))), uvec4(1u))))))))) >> uvec4(0u, 0u, 0u, 0u)), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uvec4(1u), clamp(uvec4(1u), uvec4(1u), uvec4(1u))), _GLF_IDENTITY(clamp(uvec4(1u), _GLF_IDENTITY(uvec4(1u), max(uvec4(1u), uvec4(1u))), uvec4(1u)), uvec4(1u, 1u, 1u, 1u) * (clamp(uvec4(1u), _GLF_IDENTITY(uvec4(1u), max(uvec4(1u), uvec4(1u))), uvec4(1u)))))), (_GLF_IDENTITY((_GLF_IDENTITY(uvec4(1u), clamp(uvec4(1u), _GLF_IDENTITY(uvec4(1u), max(uvec4(1u), uvec4(1u))), uvec4(1u)))), uvec4(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), (uint(0u)) * 1u))), 0u, 0u, 0u) | _GLF_IDENTITY(((_GLF_IDENTITY(uvec4(1u), clamp(uvec4(1u), _GLF_IDENTITY(uvec4(1u), max(uvec4(1u), uvec4(1u))), uvec4(1u))))), clamp(_GLF_IDENTITY(((_GLF_IDENTITY(uvec4(1u), clamp(uvec4(1u), _GLF_IDENTITY(uvec4(1u), max(uvec4(1u), _GLF_IDENTITY(_GLF_IDENTITY(uvec4(1u), (uvec4(1u)) / uvec4(1u, 1u, 1u, 1u)), min(_GLF_IDENTITY(uvec4(1u), (uvec4(1u)) >> uvec4(0u, 0u, 0u, 0u)), uvec4(1u))))), uvec4(1u))))), (_GLF_IDENTITY(((_GLF_IDENTITY(uvec4(1u), clamp(uvec4(1u), _GLF_IDENTITY(uvec4(1u), max(uvec4(1u), _GLF_IDENTITY(uvec4(1u), min(_GLF_IDENTITY(uvec4(1u), (uvec4(1u)) >> uvec4(0u, 0u, 0u, 0u)), uvec4(1u))))), uvec4(1u))))), (_GLF_IDENTITY(((_GLF_IDENTITY(uvec4(1u), clamp(uvec4(1u), _GLF_IDENTITY(uvec4(1u), max(uvec4(1u), _GLF_IDENTITY(uvec4(1u), min(_GLF_IDENTITY(uvec4(1u), (uvec4(1u)) >> uvec4(0u, 0u, 0u, 0u)), uvec4(1u))))), uvec4(1u))))), uvec4(0u, 0u, 0u, 0u) ^ (((_GLF_IDENTITY(uvec4(1u), clamp(uvec4(1u), _GLF_IDENTITY(uvec4(1u), max(uvec4(1u), _GLF_IDENTITY(uvec4(1u), min(_GLF_IDENTITY(uvec4(1u), (uvec4(1u)) >> uvec4(0u, 0u, 0u, 0u)), uvec4(1u))))), uvec4(1u)))))))) / uvec4(1u, 1u, 1u, 1u))) | (_GLF_IDENTITY(((_GLF_IDENTITY(uvec4(1u), clamp(uvec4(1u), _GLF_IDENTITY(uvec4(1u), max(uvec4(1u), _GLF_IDENTITY(uvec4(1u), min(_GLF_IDENTITY(uvec4(1u), (uvec4(1u)) >> uvec4(0u, 0u, 0u, 0u)), uvec4(1u))))), uvec4(1u))))), clamp(_GLF_IDENTITY(((_GLF_IDENTITY(uvec4(1u), clamp(_GLF_IDENTITY(uvec4(1u), (uvec4(1u)) | (uvec4(1u))), _GLF_IDENTITY(uvec4(1u), max(uvec4(1u), _GLF_IDENTITY(uvec4(1u), min(_GLF_IDENTITY(uvec4(1u), (uvec4(1u)) >> uvec4(0u, 0u, 0u, 0u)), uvec4(1u))))), uvec4(1u))))), max(((_GLF_IDENTITY(uvec4(1u), clamp(uvec4(1u), _GLF_IDENTITY(uvec4(1u), max(uvec4(1u), _GLF_IDENTITY(uvec4(1u), min(_GLF_IDENTITY(uvec4(1u), (uvec4(1u)) >> uvec4(0u, 0u, 0u, 0u)), uvec4(1u))))), uvec4(1u))))), ((_GLF_IDENTITY(uvec4(1u), clamp(uvec4(1u), _GLF_IDENTITY(uvec4(1u), max(uvec4(1u), _GLF_IDENTITY(uvec4(1u), min(_GLF_IDENTITY(uvec4(1u), (uvec4(1u)) >> uvec4(0u, 0u, 0u, 0u)), uvec4(1u))))), uvec4(1u))))))), ((_GLF_IDENTITY(uvec4(1u), clamp(uvec4(1u), _GLF_IDENTITY(uvec4(1u), max(uvec4(1u), _GLF_IDENTITY(uvec4(1u), min(_GLF_IDENTITY(uvec4(1u), (uvec4(1u)) >> uvec4(0u, 0u, 0u, 0u)), uvec4(1u))))), uvec4(1u))))), ((_GLF_IDENTITY(uvec4(1u), clamp(uvec4(1u), _GLF_IDENTITY(uvec4(1u), max(uvec4(1u), _GLF_IDENTITY(uvec4(1u), min(_GLF_IDENTITY(uvec4(1u), (uvec4(1u)) >> uvec4(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(31735u))), 0u, 0u, 0u)), uvec4(1u))))), uvec4(1u))))))))), ((_GLF_IDENTITY(uvec4(1u), clamp(uvec4(1u), _GLF_IDENTITY(uvec4(1u), max(uvec4(1u), uvec4(1u))), uvec4(1u))))), ((_GLF_IDENTITY(uvec4(1u), clamp(uvec4(_GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u))))), _GLF_IDENTITY(uvec4(1u), max(uvec4(1u), uvec4(1u))), uvec4(1u))))))))) >> uvec4(0u, _GLF_IDENTITY(0u, uint(uvec3(0u, 1u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)))))), 0u, 0u)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uvec4(1u), clamp(uvec4(1u), uvec4(1u), uvec4(1u))), clamp(uvec4(1u), _GLF_IDENTITY(uvec4(1u), max(uvec4(1u), uvec4(1u))), uvec4(1u)))), (_GLF_IDENTITY((_GLF_IDENTITY(uvec4(1u), clamp(uvec4(1u), _GLF_IDENTITY(uvec4(1u), max(uvec4(1u), uvec4(1u))), uvec4(1u)))), uvec4(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), (uint(0u)) * 1u))), 0u, 0u, 0u) | _GLF_IDENTITY(((_GLF_IDENTITY(uvec4(1u), clamp(_GLF_IDENTITY(uvec4(1u), uvec4(1u, 1u, 1u, 1u) * (uvec4(1u))), _GLF_IDENTITY(uvec4(1u), max(uvec4(1u), uvec4(1u))), uvec4(1u))))), clamp(_GLF_IDENTITY(((_GLF_IDENTITY(uvec4(1u), clamp(uvec4(1u), _GLF_IDENTITY(uvec4(1u), _GLF_IDENTITY(max(uvec4(1u), _GLF_IDENTITY(uvec4(1u), min(_GLF_IDENTITY(uvec4(1u), (uvec4(1u)) >> uvec4(0u, 0u, 0u, 0u)), uvec4(1u)))), (_GLF_IDENTITY(max(uvec4(1u), _GLF_IDENTITY(uvec4(1u), min(_GLF_IDENTITY(uvec4(1u), (uvec4(1u)) >> uvec4(0u, 0u, 0u, 0u)), uvec4(1u)))), (true ? max(uvec4(1u), _GLF_IDENTITY(uvec4(1u), min(_GLF_IDENTITY(uvec4(1u), (uvec4(1u)) >> uvec4(0u, 0u, 0u, 0u)), uvec4(1u)))) : _GLF_FUZZED((147390u * uvec4(107042u, 157494u, 125677u, 52521u)))))) | uvec4(0u, 0u, 0u, 0u))), uvec4(1u))))), (((_GLF_IDENTITY(uvec4(1u), clamp(uvec4(1u), _GLF_IDENTITY(uvec4(1u), max(uvec4(1u), _GLF_IDENTITY(uvec4(1u), min(_GLF_IDENTITY(uvec4(1u), (_GLF_IDENTITY(uvec4(1u), min(uvec4(1u), uvec4(1u)))) >> uvec4(0u, 0u, 0u, 0u)), uvec4(1u))))), uvec4(1u)))))) | (_GLF_IDENTITY(((_GLF_IDENTITY(uvec4(1u), clamp(uvec4(1u), _GLF_IDENTITY(uvec4(1u), max(uvec4(1u), _GLF_IDENTITY(uvec4(1u), min(_GLF_IDENTITY(uvec4(1u), (uvec4(1u)) >> uvec4(0u, 0u, 0u, 0u)), uvec4(1u))))), uvec4(1u))))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(((_GLF_IDENTITY(uvec4(1u), clamp(uvec4(1u), _GLF_IDENTITY(uvec4(1u), max(uvec4(1u), _GLF_IDENTITY(uvec4(1u), min(_GLF_IDENTITY(uvec4(1u), (uvec4(1u)) >> uvec4(0u, 0u, 0u, 0u)), uvec4(1u))))), uvec4(1u))))), max(((_GLF_IDENTITY(uvec4(1u), clamp(uvec4(1u), _GLF_IDENTITY(uvec4(1u), max(uvec4(1u), _GLF_IDENTITY(uvec4(1u), min(_GLF_IDENTITY(uvec4(1u), (uvec4(1u)) >> uvec4(0u, 0u, 0u, 0u)), uvec4(1u))))), uvec4(1u))))), ((_GLF_IDENTITY(uvec4(1u), clamp(uvec4(1u), _GLF_IDENTITY(uvec4(1u), max(uvec4(1u), _GLF_IDENTITY(uvec4(1u), min(_GLF_IDENTITY(uvec4(1u), (uvec4(1u)) >> uvec4(0u, 0u, 0u, 0u)), uvec4(1u))))), uvec4(1u))))))), ((_GLF_IDENTITY(uvec4(1u), clamp(uvec4(1u), _GLF_IDENTITY(uvec4(1u), max(uvec4(1u), _GLF_IDENTITY(uvec4(1u), min(_GLF_IDENTITY(uvec4(1u), (uvec4(1u)) >> uvec4(0u, 0u, 0u, 0u)), uvec4(1u))))), uvec4(1u))))), ((_GLF_IDENTITY(uvec4(1u), clamp(uvec4(1u), _GLF_IDENTITY(uvec4(1u), max(uvec4(1u), _GLF_IDENTITY(uvec4(1u), min(_GLF_IDENTITY(uvec4(1u), (uvec4(1u)) >> uvec4(0u, 0u, 0u, 0u)), uvec4(1u))))), uvec4(1u)))))), uvec4(0u, 0u, 0u, 0u) ^ (_GLF_IDENTITY(clamp(_GLF_IDENTITY(((_GLF_IDENTITY(uvec4(1u), clamp(uvec4(1u), _GLF_IDENTITY(uvec4(1u), max(uvec4(1u), _GLF_IDENTITY(uvec4(1u), min(_GLF_IDENTITY(uvec4(1u), (uvec4(1u)) >> uvec4(0u, 0u, 0u, 0u)), uvec4(1u))))), uvec4(1u))))), max(((_GLF_IDENTITY(uvec4(1u), clamp(uvec4(1u), _GLF_IDENTITY(uvec4(1u), max(uvec4(1u), _GLF_IDENTITY(uvec4(1u), min(_GLF_IDENTITY(uvec4(1u), (uvec4(1u)) >> uvec4(0u, 0u, 0u, 0u)), uvec4(1u))))), uvec4(1u))))), ((_GLF_IDENTITY(uvec4(1u), clamp(uvec4(1u), _GLF_IDENTITY(uvec4(1u), max(uvec4(1u), _GLF_IDENTITY(uvec4(1u), min(_GLF_IDENTITY(uvec4(1u), (uvec4(1u)) >> uvec4(0u, 0u, 0u, 0u)), uvec4(1u))))), uvec4(1u))))))), ((_GLF_IDENTITY(uvec4(1u), clamp(uvec4(1u), _GLF_IDENTITY(uvec4(1u), max(uvec4(1u), _GLF_IDENTITY(uvec4(1u), min(_GLF_IDENTITY(uvec4(1u), (uvec4(1u)) >> uvec4(0u, 0u, 0u, 0u)), uvec4(1u))))), uvec4(1u))))), ((_GLF_IDENTITY(uvec4(1u), clamp(uvec4(1u), _GLF_IDENTITY(uvec4(1u), max(uvec4(1u), _GLF_IDENTITY(uvec4(1u), min(_GLF_IDENTITY(uvec4(1u), (uvec4(1u)) >> uvec4(0u, 0u, 0u, 0u)), uvec4(1u))))), uvec4(1u)))))), (clamp(_GLF_IDENTITY(((_GLF_IDENTITY(uvec4(1u), clamp(uvec4(1u), _GLF_IDENTITY(uvec4(1u), max(uvec4(1u), _GLF_IDENTITY(uvec4(1u), min(_GLF_IDENTITY(uvec4(1u), (uvec4(1u)) >> uvec4(0u, 0u, 0u, 0u)), uvec4(1u))))), uvec4(1u))))), max(((_GLF_IDENTITY(uvec4(1u), clamp(uvec4(1u), _GLF_IDENTITY(uvec4(1u), max(uvec4(1u), _GLF_IDENTITY(uvec4(1u), min(_GLF_IDENTITY(uvec4(1u), (uvec4(1u)) >> uvec4(0u, 0u, 0u, 0u)), uvec4(1u))))), uvec4(1u))))), ((_GLF_IDENTITY(uvec4(1u), clamp(uvec4(1u), _GLF_IDENTITY(uvec4(1u), max(uvec4(1u), _GLF_IDENTITY(uvec4(1u), min(_GLF_IDENTITY(uvec4(1u), (uvec4(1u)) >> uvec4(0u, 0u, 0u, 0u)), uvec4(1u))))), uvec4(1u))))))), ((_GLF_IDENTITY(uvec4(1u), clamp(uvec4(1u), _GLF_IDENTITY(uvec4(1u), max(uvec4(1u), _GLF_IDENTITY(uvec4(1u), min(_GLF_IDENTITY(uvec4(1u), (uvec4(1u)) >> uvec4(0u, 0u, 0u, 0u)), uvec4(1u))))), uvec4(1u))))), ((_GLF_IDENTITY(uvec4(1u), clamp(uvec4(1u), _GLF_IDENTITY(uvec4(1u), max(uvec4(1u), _GLF_IDENTITY(uvec4(1u), min(_GLF_IDENTITY(uvec4(1u), (uvec4(1u)) >> uvec4(0u, 0u, 0u, 0u)), uvec4(1u))))), uvec4(1u))))))) * uvec4(1u, 1u, 1u, 1u))))))), ((_GLF_IDENTITY(uvec4(1u), clamp(uvec4(1u), _GLF_IDENTITY(uvec4(1u), max(uvec4(1u), uvec4(1u))), uvec4(1u))))), ((_GLF_IDENTITY(uvec4(1u), clamp(uvec4(_GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u))))), _GLF_IDENTITY(uvec4(1u), max(uvec4(1u), uvec4(1u))), uvec4(1u))))))))) >> uvec4(0u, 0u, 0u, 0u))) | uvec4(0u, 0u, 0u, 0u))) / uvec4(1u, 1u, 1u, 1u)))))) ^ uvec4(0u, 0u, 0u, 0u)), mat2x3(1.0), ivec4(1), vec4(1.0)), _GLF_struct_15(_GLF_IDENTITY(ivec4(1), (_GLF_IDENTITY(ivec4(1), ivec4(0, 0, 0, 0) ^ (_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(1, 0, 1)), (int(ivec3(1, 0, 1))) - 0))), min(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(1, 0, 1)), (int(ivec3(1, 0, 1))) - 0))), max(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(1, 0, 1)), (int(ivec3(1, 0, 1))) - 0))), (ivec4(_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(1, 0, 1)), (int(ivec3(1, 0, 1))) - 0)))) | (ivec4(_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(1, 0, 1)), (int(ivec3(1, 0, 1))) - 0))))), ivec4(_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(1, 0, 1)), (int(ivec3(1, 0, 1))) - 0))))), ivec4(_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(1, 0, 1)), (int(ivec3(1, 0, 1))) - 0)))))))) / ivec4(1, 1, 1, 1)), mat2x4(1.0), ivec3(1), vec4(1.0), uvec4(1u), mat3(1.0)), bvec4(true), _GLF_struct_16(true, _GLF_IDENTITY(1, _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-43408) : 1))), (true ? ~ (1) : _GLF_FUZZED(79863))), int(_GLF_IDENTITY(ivec3(~ (1), 0, 1), (ivec3(~ (1), 0, 1)) >> ivec3(0, 0, 0))))), (int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(1), _GLF_IDENTITY(_GLF_IDENTITY(int(1), max(int(1), int(1))), 0 ^ (int(1))))) | (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (1), min(~ (1), _GLF_IDENTITY(~ (1), (~ (1)) << 0))), _GLF_IDENTITY((true ? ~ (1) : _GLF_FUZZED(_GLF_IDENTITY(79863, (false ? _GLF_FUZZED(-83674) : 79863)))), int(ivec2(_GLF_IDENTITY((true ? ~ (1) : _GLF_FUZZED(_GLF_IDENTITY(79863, (false ? _GLF_FUZZED(-83674) : 79863)))), 0 ^ (_GLF_IDENTITY((true ? ~ (1) : _GLF_FUZZED(_GLF_IDENTITY(79863, (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(-83674) : 79863)))), ((true ? ~ (1) : _GLF_FUZZED(_GLF_IDENTITY(79863, (false ? _GLF_FUZZED(-83674) : 79863))))) | 0))), 0)))), int(_GLF_IDENTITY(ivec3(~ (1), 0, 1), (ivec3(~ (1), 0, 1)) >> ivec3(0, 0, 0)))))))), ivec4(1))), _GLF_struct_21(mat3x4(1.0), _GLF_struct_18(uvec4(1u), mat4x3(1.0)), _GLF_struct_19(mat2(1.0), uvec2(1u), true, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (true ? mat2(1.0) : _GLF_FUZZED((mat2(1.3, -60.75, 7.5, 719.370) - -8641.1620)))), (false ? _GLF_FUZZED(mat2(-5.4, 72.86, -5.1, 701.813)) : _GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY((true ? mat2(1.0) : _GLF_FUZZED((mat2(1.3, -60.75, 7.5, 719.370) - -8641.1620))), mat2(1.0) * ((true ? mat2(1.0) : _GLF_FUZZED((mat2(1.3, -60.75, 7.5, 719.370) - -8641.1620)))))))), true, uvec4(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u) | (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u))) >> 0u)), ~ (~ ((1u) | (_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u ^ (1u)), (1u) >> 0u)))))), 1u, 1u)))), mat3x4(1.0), uvec2(1u), 1, _GLF_struct_20(gl_SubgroupInvocationID, mat2x4(1.0))), mat3x2(1.0), _GLF_struct_24(ivec3(1), 1u, uvec4(1u), _GLF_struct_22(mat2x4(1.0), vec4(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, sin(0.0), 1.0, 1.0, 0.0))))), bvec3(true), _GLF_struct_23(_GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(bvec3(bvec3(true))), bvec3(bvec4(bvec3(bvec3(bvec3(true))), false)))), vec3(1.0), uvec3(1u))));
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, ~ (_GLF_IDENTITY(~ (gl_NumWorkGroups), (_GLF_IDENTITY(~ _GLF_IDENTITY((gl_NumWorkGroups), (_GLF_IDENTITY((gl_NumWorkGroups), ((gl_NumWorkGroups)) << uvec3(0u, 0u, 0u))) / uvec3(1u, 1u, 1u)), ~ (~ (_GLF_IDENTITY(~ _GLF_IDENTITY((gl_NumWorkGroups), (_GLF_IDENTITY((gl_NumWorkGroups), ((gl_NumWorkGroups)) << uvec3(0u, 0u, 0u))) / uvec3(1u, 1u, 1u)), (~ _GLF_IDENTITY((gl_NumWorkGroups), _GLF_IDENTITY((_GLF_IDENTITY((gl_NumWorkGroups), ((gl_NumWorkGroups)) << uvec3(0u, 0u, 0u))) / uvec3(1u, 1u, 1u), min((_GLF_IDENTITY((gl_NumWorkGroups), ((gl_NumWorkGroups)) << uvec3(0u, 0u, 0u))) / uvec3(1u, 1u, 1u), (_GLF_IDENTITY((gl_NumWorkGroups), ((gl_NumWorkGroups)) << uvec3(0u, 0u, 0u))) / uvec3(1u, 1u, 1u))))) - uvec3(0u, 0u, 0u)))))) ^ uvec3(0u, 0u, 0u))))), (_GLF_IDENTITY(false ? _GLF_FUZZED(uvec3(55493u, 100748u, 64979u)) : _GLF_IDENTITY(max(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ _GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) + (uvec3(0u, 0u, 0u)))), gl_NumWorkGroups), (max(gl_NumWorkGroups, gl_NumWorkGroups)) | (max(gl_NumWorkGroups, gl_NumWorkGroups))), (false ? _GLF_FUZZED(uvec3(_GLF_IDENTITY(55493u, max(_GLF_IDENTITY(55493u, max(55493u, 55493u)), _GLF_IDENTITY(55493u, (_GLF_IDENTITY(55493u, (55493u) | 0u)) ^ 0u))), 100748u, 64979u)) : _GLF_IDENTITY(max(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u)), gl_NumWorkGroups), (max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])))) | (max(gl_NumWorkGroups, gl_NumWorkGroups)))) | (false ? _GLF_FUZZED(uvec3(55493u, 100748u, 64979u)) : _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (true ? gl_NumWorkGroups : _GLF_FUZZED(uvec3(_GLF_IDENTITY(198108u, (198108u) | (198108u)), 158252u, 135194u)))), (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), gl_NumWorkGroups), (max(gl_NumWorkGroups, gl_NumWorkGroups)) | (_GLF_IDENTITY(max(gl_NumWorkGroups, gl_NumWorkGroups), (max(gl_NumWorkGroups, gl_NumWorkGroups)) / uvec3(1u, 1u, 1u))))))))).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(mat4x3((injectionSwitch) * mat2(1.0), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)))).y)) || false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec3(bvec2(_GLF_DEAD(false), false), false)))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, false)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - sin(0.0))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, uint(uvec3(workgroup_size, 1u, 0u))) * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED(workgroup_id) : workgroup_id)), (_GLF_IDENTITY(workgroup_id, 0u | (_GLF_IDENTITY(workgroup_id, (true ? workgroup_id : _GLF_FUZZED(num_workgroup)))))) >> 0u);
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), false || (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, true && (true)), true, false)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_struct_replacement_3._f0.subgroup_id * _GLF_struct_replacement_9._f0.subgroup_size, max(_GLF_struct_replacement_3._f0.subgroup_id * _GLF_struct_replacement_9._f0.subgroup_size, _GLF_struct_replacement_3._f0.subgroup_id * _GLF_struct_replacement_9._f0.subgroup_size)) + _GLF_struct_replacement_25._f3._f6.subgroup_local_id;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), bvec3(bvec4(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), false)))))), true && (bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), bvec3(bvec4(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), false)))))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) && true))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! ((! (false)))))), (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! ((! _GLF_IDENTITY((false), true && ((false))))))))) && true)) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint next_virtual_gid = workgroup_base + _GLF_struct_replacement_3._f0.subgroup_id * _GLF_struct_replacement_9._f0.subgroup_size + ((_GLF_struct_replacement_25._f3._f6.subgroup_local_id + _GLF_IDENTITY(1, 1 * (1))) % _GLF_struct_replacement_9._f0.subgroup_size);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) && true)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))), bvec3(bvec3(bvec3(false, false, false))))), (bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false)))))) || false))) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, 1.0))))) && true)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_IDENTITY(false, (false) || false))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)), true && (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), true, true, true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_DEAD(false)), bool(bvec2(_GLF_IDENTITY(false || (_GLF_DEAD(false)), bool(bvec4(false || (_GLF_DEAD(false)), false, true, true))), true)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) || false, ! (! (((injectionSwitch.x > injectionSwitch.y)) || false)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 atomicStore(checker[_GLF_IDENTITY(virtual_gid, ~ (~ (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(~ _GLF_IDENTITY((~ _GLF_IDENTITY((virtual_gid), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), _GLF_IDENTITY(uint(uvec3((virtual_gid), 1u, 1u)), uint(uvec2(uint(uvec3((virtual_gid), 1u, 1u)), 0u)))), (_GLF_IDENTITY((virtual_gid), _GLF_IDENTITY(uint(uvec3((virtual_gid), 1u, 1u)), uint(uvec2(uint(uvec3((virtual_gid), 1u, 1u)), 0u))))) | (_GLF_IDENTITY((virtual_gid), _GLF_IDENTITY(uint(uvec3((virtual_gid), 1u, 1u)), uint(uvec2(uint(uvec3((virtual_gid), 1u, 1u)), 0u)))))))), _GLF_IDENTITY(uint(uvec4(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), _GLF_IDENTITY(uint(uvec3((virtual_gid), 1u, 1u)), uint(uvec2(uint(uvec3((virtual_gid), 1u, 1u)), 0u)))), (_GLF_IDENTITY((virtual_gid), _GLF_IDENTITY(uint(uvec3((virtual_gid), 1u, 1u)), uint(uvec2(uint(uvec3((virtual_gid), 1u, 1u)), 0u))))) | (_GLF_IDENTITY((virtual_gid), _GLF_IDENTITY(uint(uvec3((virtual_gid), 1u, 1u)), uint(uvec2(uint(uvec3((virtual_gid), 1u, 1u)), 0u)))))))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 1u)), min(uint(uvec4(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), _GLF_IDENTITY(uint(uvec3((virtual_gid), 1u, 1u)), uint(uvec2(uint(uvec3((virtual_gid), 1u, 1u)), 0u)))), (_GLF_IDENTITY((virtual_gid), _GLF_IDENTITY(uint(uvec3((virtual_gid), 1u, 1u)), uint(uvec2(uint(uvec3((virtual_gid), 1u, 1u)), 0u))))) | (_GLF_IDENTITY((virtual_gid), _GLF_IDENTITY(uint(uvec3((virtual_gid), 1u, 1u)), uint(uvec2(uint(uvec3((virtual_gid), 1u, 1u)), 0u)))))))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 1u)), uint(uvec4(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), _GLF_IDENTITY(uint(uvec3((virtual_gid), 1u, 1u)), uint(uvec2(uint(uvec3((virtual_gid), 1u, 1u)), 0u)))), (_GLF_IDENTITY((virtual_gid), _GLF_IDENTITY(uint(uvec3((virtual_gid), 1u, 1u)), uint(uvec2(uint(uvec3((virtual_gid), 1u, 1u)), 0u))))) | (_GLF_IDENTITY((virtual_gid), _GLF_IDENTITY(uint(uvec3((virtual_gid), 1u, 1u)), uint(uvec2(uint(uvec3((virtual_gid), 1u, 1u)), 0u)))))))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 1u))))))), ((~ _GLF_IDENTITY((virtual_gid), _GLF_IDENTITY(~ _GLF_IDENTITY((~ ((virtual_gid))), ((~ ((virtual_gid)))) ^ 0u), clamp(~ _GLF_IDENTITY((~ ((virtual_gid))), ((~ ((virtual_gid)))) ^ 0u), ~ _GLF_IDENTITY((~ ((virtual_gid))), ((~ ((virtual_gid)))) ^ 0u), ~ _GLF_IDENTITY((~ ((virtual_gid))), ((~ ((virtual_gid)))) ^ 0u)))))) | ((~ _GLF_IDENTITY((virtual_gid), ~ (~ ((_GLF_IDENTITY(virtual_gid, (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-55.41, 4689.1945)))).y)) ? virtual_gid : _GLF_FUZZED(workgroup_base)))))))))), ((1u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), min(uint(6u), uint(_GLF_IDENTITY(6u, (false ? _GLF_FUZZED(workgroup_base) : 6u))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(uint(6u), uint(6u))) >> 0u)) * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((~ _GLF_IDENTITY((virtual_gid), ~ (~ (_GLF_IDENTITY((virtual_gid), _GLF_IDENTITY(uint(uvec3((virtual_gid), 1u, 1u)), uint(uvec2(uint(uvec3((virtual_gid), 1u, 1u)), 0u)))))))), ((~ _GLF_IDENTITY((virtual_gid), ~ _GLF_IDENTITY((~ ((virtual_gid))), ((~ ((virtual_gid)))) ^ 0u)))) | ((~ _GLF_IDENTITY((virtual_gid), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? virtual_gid : _GLF_FUZZED(workgroup_base)))))))))), max(~ _GLF_IDENTITY((~ _GLF_IDENTITY((virtual_gid), ~ (~ (_GLF_IDENTITY((virtual_gid), _GLF_IDENTITY(uint(uvec3((virtual_gid), 1u, 1u)), uint(uvec2(uint(uvec3((virtual_gid), 1u, 1u)), 0u)))))))), ((~ _GLF_IDENTITY((virtual_gid), ~ _GLF_IDENTITY((~ ((virtual_gid))), ((~ ((virtual_gid)))) ^ 0u)))) | ((~ _GLF_IDENTITY((virtual_gid), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? virtual_gid : _GLF_FUZZED(workgroup_base)))))))))), ~ _GLF_IDENTITY((~ _GLF_IDENTITY((virtual_gid), ~ (~ (_GLF_IDENTITY((virtual_gid), _GLF_IDENTITY(uint(uvec3((virtual_gid), 1u, 1u)), uint(uvec2(uint(uvec3((virtual_gid), 1u, 1u)), 0u)))))))), ((~ _GLF_IDENTITY((virtual_gid), ~ _GLF_IDENTITY((~ ((virtual_gid))), ((~ ((virtual_gid)))) ^ 0u)))) | ((~ _GLF_IDENTITY((virtual_gid), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? virtual_gid : _GLF_FUZZED(workgroup_base)))))))))))), (~ _GLF_IDENTITY((~ _GLF_IDENTITY((virtual_gid), ~ (~ (_GLF_IDENTITY((virtual_gid), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3((virtual_gid), 1u, 1u), max(uvec3((virtual_gid), 1u, 1u), uvec3((virtual_gid), 1u, _GLF_IDENTITY(1u, (1u) / ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)))))))), uint(uvec2(uint(uvec3((virtual_gid), 1u, _GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, 0u + (1u)))))), 0u)))))))), ((~ _GLF_IDENTITY((virtual_gid), ~ _GLF_IDENTITY((~ ((virtual_gid))), ((~ ((virtual_gid)))) ^ 0u)))) | ((~ _GLF_IDENTITY((virtual_gid), ~ (~ ((_GLF_IDENTITY(virtual_gid, (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(4.3)), float(injectionSwitch.y), bool(true))))))) ? virtual_gid : _GLF_FUZZED(workgroup_base))))))))))) | (~ _GLF_IDENTITY((~ _GLF_IDENTITY((virtual_gid), ~ (~ (_GLF_IDENTITY((virtual_gid), _GLF_IDENTITY(uint(uvec3((virtual_gid), _GLF_IDENTITY(1u, 0u | (1u)), 1u)), uint(uvec2(uint(uvec3((virtual_gid), 1u, 1u)), 0u)))))))), ((~ _GLF_IDENTITY((virtual_gid), ~ _GLF_IDENTITY((~ ((virtual_gid))), ((~ ((virtual_gid)))) ^ 0u)))) | ((~ _GLF_IDENTITY((virtual_gid), ~ (~ ((_GLF_IDENTITY(virtual_gid, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? virtual_gid : _GLF_FUZZED(workgroup_base)))))))))))), (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || false) ? _GLF_IDENTITY(~ _GLF_IDENTITY((~ _GLF_IDENTITY((virtual_gid), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3((virtual_gid), 1u, 1u)), max(_GLF_IDENTITY(uint(uvec3((virtual_gid), 1u, 1u)), (_GLF_IDENTITY(uint(uvec3((virtual_gid), 1u, 1u)), 1u * (uint(uvec3((virtual_gid), 1u, 1u))))) | (uint(uvec3((virtual_gid), 1u, 1u)))), _GLF_IDENTITY(uint(uvec3((virtual_gid), 1u, 1u)), (uint(uvec3((virtual_gid), 1u, 1u))) ^ 0u))), uint(uvec2(uint(uvec3((virtual_gid), 1u, 1u)), 0u)))))))), ((~ _GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, _GLF_IDENTITY(virtual_gid, min(virtual_gid, _GLF_IDENTITY(virtual_gid, (true ? virtual_gid : _GLF_FUZZED(workgroup_base))))), virtual_gid))), _GLF_IDENTITY(~ _GLF_IDENTITY((~ ((virtual_gid))), ((~ ((virtual_gid)))) ^ 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ _GLF_IDENTITY((~ ((virtual_gid))), ((~ ((virtual_gid)))) ^ 0u), max(~ _GLF_IDENTITY((~ ((virtual_gid))), ((~ ((virtual_gid)))) ^ 0u), ~ _GLF_IDENTITY((~ ((virtual_gid))), ((~ ((virtual_gid)))) ^ 0u)))), min(~ (_GLF_IDENTITY(~ _GLF_IDENTITY((~ ((virtual_gid))), ((~ ((virtual_gid)))) ^ 0u), max(~ _GLF_IDENTITY((~ ((virtual_gid))), ((~ ((virtual_gid)))) ^ 0u), ~ _GLF_IDENTITY((~ ((virtual_gid))), ((~ ((virtual_gid)))) ^ 0u)))), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((~ ((virtual_gid))), ((~ ((virtual_gid)))) ^ 0u), max(~ _GLF_IDENTITY((~ ((virtual_gid))), ((~ ((virtual_gid)))) ^ 0u), ~ _GLF_IDENTITY((~ ((virtual_gid))), ((~ ((virtual_gid)))) ^ 0u))))))))))) | ((~ _GLF_IDENTITY((virtual_gid), ~ (~ ((_GLF_IDENTITY(virtual_gid, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < injectionSwitch.y)) ? virtual_gid : _GLF_FUZZED(workgroup_base)))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((~ _GLF_IDENTITY((virtual_gid), ~ (~ (_GLF_IDENTITY((virtual_gid), _GLF_IDENTITY(uint(uvec3((virtual_gid), 1u, 1u)), uint(uvec2(uint(uvec3((virtual_gid), 1u, 1u)), 0u)))))))), ((~ _GLF_IDENTITY((virtual_gid), ~ _GLF_IDENTITY((~ ((virtual_gid))), ((~ ((virtual_gid)))) ^ 0u)))) | ((~ _GLF_IDENTITY((virtual_gid), ~ (~ ((_GLF_IDENTITY(virtual_gid, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? virtual_gid : _GLF_FUZZED(workgroup_base)))))))))), (_GLF_IDENTITY(~ _GLF_IDENTITY((~ _GLF_IDENTITY((virtual_gid), ~ (~ (_GLF_IDENTITY((virtual_gid), _GLF_IDENTITY(uint(uvec3((virtual_gid), 1u, 1u)), uint(uvec2(uint(uvec3((virtual_gid), 1u, 1u)), 0u)))))))), ((~ _GLF_IDENTITY((virtual_gid), ~ _GLF_IDENTITY((~ ((virtual_gid))), ((~ ((virtual_gid)))) ^ 0u)))) | ((~ _GLF_IDENTITY((virtual_gid), ~ (~ ((_GLF_IDENTITY(virtual_gid, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? virtual_gid : _GLF_FUZZED(workgroup_base)))))))))), uint(uvec4(~ _GLF_IDENTITY((~ _GLF_IDENTITY((virtual_gid), ~ (~ (_GLF_IDENTITY((virtual_gid), _GLF_IDENTITY(uint(uvec3((virtual_gid), 1u, 1u)), uint(uvec2(uint(uvec3((virtual_gid), 1u, 1u)), 0u)))))))), ((~ _GLF_IDENTITY((virtual_gid), ~ _GLF_IDENTITY((~ ((virtual_gid))), ((~ ((virtual_gid)))) ^ 0u)))) | ((~ _GLF_IDENTITY((virtual_gid), ~ (~ ((_GLF_IDENTITY(virtual_gid, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? virtual_gid : _GLF_FUZZED(workgroup_base)))))))))), 0u, 0u, 1u)))) - 0u), (_GLF_IDENTITY(~ _GLF_IDENTITY((~ _GLF_IDENTITY((virtual_gid), ~ (~ (_GLF_IDENTITY((virtual_gid), _GLF_IDENTITY(uint(uvec3((virtual_gid), 1u, 1u)), uint(uvec2(uint(uvec3((virtual_gid), 1u, 1u)), 0u)))))))), ((~ _GLF_IDENTITY((virtual_gid), ~ _GLF_IDENTITY((~ ((virtual_gid))), ((~ ((virtual_gid)))) ^ 0u)))) | ((~ _GLF_IDENTITY((virtual_gid), ~ (~ ((_GLF_IDENTITY(virtual_gid, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? virtual_gid : _GLF_FUZZED(workgroup_base)))))))))), (_GLF_IDENTITY(~ _GLF_IDENTITY((~ _GLF_IDENTITY((virtual_gid), ~ (~ (_GLF_IDENTITY((virtual_gid), _GLF_IDENTITY(uint(uvec3((virtual_gid), 1u, 1u)), uint(uvec2(uint(uvec3((virtual_gid), 1u, 1u)), 0u)))))))), ((~ _GLF_IDENTITY((virtual_gid), ~ _GLF_IDENTITY((~ ((virtual_gid))), ((~ ((virtual_gid)))) ^ 0u)))) | ((~ _GLF_IDENTITY((virtual_gid), ~ (~ ((_GLF_IDENTITY(virtual_gid, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? virtual_gid : _GLF_FUZZED(workgroup_base)))))))))), uint(uvec4(~ _GLF_IDENTITY((~ _GLF_IDENTITY((virtual_gid), ~ (~ (_GLF_IDENTITY((virtual_gid), _GLF_IDENTITY(uint(uvec3((virtual_gid), 1u, 1u)), uint(uvec2(uint(uvec3((virtual_gid), 1u, 1u)), 0u)))))))), ((~ _GLF_IDENTITY((virtual_gid), ~ _GLF_IDENTITY((~ ((virtual_gid))), ((~ ((virtual_gid)))) ^ 0u)))) | ((~ _GLF_IDENTITY((virtual_gid), ~ (~ ((_GLF_IDENTITY(virtual_gid, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? virtual_gid : _GLF_FUZZED(workgroup_base)))))))))), 0u, 0u, 1u)))) - 0u)) << 0u)) | (~ _GLF_IDENTITY((~ _GLF_IDENTITY((virtual_gid), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), _GLF_IDENTITY(uint(uvec3((virtual_gid), 1u, 1u)), uint(uvec2(uint(uvec3((virtual_gid), 1u, 1u)), 0u)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), _GLF_IDENTITY(uint(uvec3((virtual_gid), 1u, 1u)), uint(uvec2(uint(uvec3((virtual_gid), 1u, 1u)), 0u)))), clamp(_GLF_IDENTITY((virtual_gid), _GLF_IDENTITY(uint(uvec3((virtual_gid), 1u, 1u)), uint(uvec2(uint(uvec3((virtual_gid), 1u, 1u)), 0u)))), _GLF_IDENTITY((virtual_gid), _GLF_IDENTITY(uint(uvec3((virtual_gid), 1u, 1u)), uint(uvec2(uint(_GLF_IDENTITY(uvec3((virtual_gid), 1u, 1u), uvec3(0u, 0u, 0u) ^ (uvec3((virtual_gid), 1u, 1u)))), 0u)))), _GLF_IDENTITY((virtual_gid), _GLF_IDENTITY(uint(uvec3((virtual_gid), 1u, 1u)), uint(uvec2(uint(uvec3((virtual_gid), 1u, 1u)), 0u))))))) >> 0u, ((_GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), _GLF_IDENTITY(uint(uvec3((virtual_gid), 1u, 1u)), uint(uvec2(uint(uvec3((virtual_gid), 1u, 1u)), 0u)))), clamp(_GLF_IDENTITY((virtual_gid), _GLF_IDENTITY(uint(uvec3((virtual_gid), 1u, 1u)), uint(uvec2(uint(uvec3((virtual_gid), 1u, 1u)), 0u)))), _GLF_IDENTITY((virtual_gid), _GLF_IDENTITY(uint(uvec3((virtual_gid), 1u, 1u)), uint(uvec2(uint(uvec3((virtual_gid), 1u, _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (1u) ^ 0u))))), 0u)))), _GLF_IDENTITY((virtual_gid), _GLF_IDENTITY(uint(uvec3((virtual_gid), 1u, 1u)), uint(uvec2(uint(uvec3((virtual_gid), 1u, 1u)), 0u))))))) >> 0u) >> 0u)))))), ((~ _GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY((virtual_gid), ((virtual_gid)) / 1u)), min(uint(_GLF_IDENTITY((virtual_gid), ((virtual_gid)) / 1u)), uint(_GLF_IDENTITY((virtual_gid), ((virtual_gid)) / 1u)))))), _GLF_IDENTITY(~ _GLF_IDENTITY((~ ((virtual_gid))), ((~ ((virtual_gid)))) ^ 0u), (~ _GLF_IDENTITY((~ ((virtual_gid))), ((~ ((virtual_gid)))) ^ _GLF_IDENTITY(0u, (0u) / uint(_GLF_ONE(1.0, injectionSwitch.y))))) << 0u)))) | _GLF_IDENTITY((_GLF_IDENTITY((~ _GLF_IDENTITY((virtual_gid), ~ (~ ((_GLF_IDENTITY(virtual_gid, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)) ? virtual_gid : _GLF_FUZZED(workgroup_base)))))))), ((~ _GLF_IDENTITY((virtual_gid), ~ (~ ((_GLF_IDENTITY(virtual_gid, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? virtual_gid : _GLF_FUZZED(workgroup_base))))))))) << _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))))), (true ? (_GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid))), ~ (~ ((_GLF_IDENTITY(virtual_gid, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? virtual_gid : _GLF_FUZZED(workgroup_base)))))))), ((~ _GLF_IDENTITY((virtual_gid), ~ (~ ((_GLF_IDENTITY(virtual_gid, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? virtual_gid : _GLF_FUZZED(workgroup_base))))))))) << 0u)) : _GLF_FUZZED(read)))))) : _GLF_FUZZED(95012u)))))))))], read, 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
