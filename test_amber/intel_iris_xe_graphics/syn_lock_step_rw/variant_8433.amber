#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_0 {
 uint next_virtual_gid;
 vec2 _f0;
 mat2x4 _f1;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), false || (! (! ((injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bvec2(true, true))))), false, false)), true && (bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false, false))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-9.8)), float(injectionSwitch.x), bool(true))), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), bool(bvec4(bool((injectionSwitch.x > injectionSwitch.y)), true, false, true)))))), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)))), injectionSwitch)), _GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)))), injectionSwitch))), vec2(mat3(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)))), injectionSwitch))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, 1.0, 0.0)))))).y)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(9.1) : injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, false)))) && true))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, false || (false)))) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), (_GLF_IDENTITY(! (! (true)), ! (! (! (! (true)))))) && true))))), bool(bool((_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, false || (false)))) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), (_GLF_IDENTITY(! (! (true)), ! (! (! (! (true)))))) && true))))))))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupID)), (uvec3(uvec3(gl_WorkGroupID))) / uvec3(_GLF_IDENTITY(1u, 0u ^ (1u)), 1u, 1u)), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID)), (gl_WorkGroupID) >> uvec3(0u, 0u, 0u)))), (uvec3(uvec3(gl_WorkGroupID))) / uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u ^ (1u)), (_GLF_IDENTITY(1u, 0u ^ _GLF_IDENTITY((1u), 0u ^ ((1u))))) | (_GLF_IDENTITY(1u, 0u ^ (1u)))), 1u, 1u)), (_GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupID)), (uvec3(uvec3(gl_WorkGroupID))) / uvec3(_GLF_IDENTITY(1u, 0u ^ (1u)), 1u, 1u))) << uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupID)), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupID), uvec3(1u, 1u, 1u) * (uvec3(gl_WorkGroupID)))), (false ? _GLF_FUZZED(uvec3(38566u, 17918u, 82293u)) : _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupID), uvec3(1u, 1u, 1u) * (uvec3(gl_WorkGroupID)))), clamp(uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupID), uvec3(1u, 1u, 1u) * (uvec3(gl_WorkGroupID)))), uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupID), uvec3(1u, 1u, 1u) * (uvec3(gl_WorkGroupID)))), uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupID), uvec3(1u, 1u, 1u) * (uvec3(gl_WorkGroupID))))))))) / uvec3(_GLF_IDENTITY(1u, 0u ^ (1u)), 1u, 1u)), max(_GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupID)), (uvec3(uvec3(gl_WorkGroupID))) / uvec3(_GLF_IDENTITY(1u, 0u ^ (1u)), 1u, 1u)), _GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupID)), (_GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupID)), clamp(uvec3(uvec3(gl_WorkGroupID)), uvec3(uvec3(gl_WorkGroupID)), uvec3(uvec3(gl_WorkGroupID))))) / _GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, 0u ^ (1u)), 1u, 1u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, 0u ^ (1u)), 1u, 1u), uvec3(0u, 0u, 0u) ^ (uvec3(_GLF_IDENTITY(1u, 0u ^ (1u)), 1u, 1u)))), uvec3(uvec4(uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, 0u ^ (1u)), 1u, 1u), uvec3(0u, 0u, 0u) ^ (uvec3(_GLF_IDENTITY(1u, 0u ^ (1u)), 1u, 1u)))), 1u)))), clamp(uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, 0u ^ (1u)), 1u, 1u), uvec3(0u, 0u, 0u) ^ (uvec3(_GLF_IDENTITY(1u, 0u ^ (1u)), 1u, 1u)))), uvec3(uvec4(uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, 0u ^ (1u)), 1u, 1u), uvec3(0u, 0u, 0u) ^ (uvec3(_GLF_IDENTITY(1u, 0u ^ (1u)), 1u, 1u)))), 1u)))), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, 0u ^ (1u)), 1u, 1u), uvec3(0u, 0u, 0u) ^ (uvec3(_GLF_IDENTITY(1u, 0u ^ (1u)), 1u, 1u)))), uvec3(uvec4(uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, 0u ^ (1u)), 1u, 1u), uvec3(0u, 0u, 0u) ^ (uvec3(_GLF_IDENTITY(1u, 0u ^ (1u)), 1u, 1u)))), 1u)))), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, 0u ^ (1u)), 1u, 1u), uvec3(0u, 0u, 0u) ^ (uvec3(_GLF_IDENTITY(1u, 0u ^ (1u)), 1u, 1u)))), uvec3(uvec4(uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, 0u ^ (1u)), 1u, 1u), uvec3(0u, 0u, 0u) ^ (uvec3(_GLF_IDENTITY(1u, 0u ^ (1u)), 1u, 1u)))), 1u))))))))))))).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size * workgroup_id, 0u | (workgroup_size * workgroup_id))) ^ 0u)) << _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) * 1u));
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u)) ^ 0u) + _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u)), _GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u))) | 0u, 0u ^ (_GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u))) | 0u, 0u ^ ((~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u))) | 0u)))))))))) + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_0 _GLF_struct_replacement_0 = _GLF_struct_0(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? workgroup_base + subgroup_id * subgroup_size : _GLF_FUZZED(mix(workgroup_id, 34608u, false)))), (workgroup_base + subgroup_id * subgroup_size) / 1u), (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size)))) - 0u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) >> (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), ((workgroup_base) >> (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))) - 0u)), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (uint(5u)))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(5u), uint(5u))), clamp((0u >> _GLF_IDENTITY(uint(5u), uint(5u))), (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(5u), uint(5u))), max((0u >> _GLF_IDENTITY(uint(5u), uint(5u))), (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))))))), 1u * (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), min((workgroup_base), _GLF_IDENTITY((workgroup_base), max(_GLF_IDENTITY((workgroup_base), ~ (~ ((workgroup_base)))), (_GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, 1u)))))))) >> (0u >> _GLF_IDENTITY(uint(5u), uint(5u))))))))), _GLF_IDENTITY(workgroup_base, (workgroup_base) >> (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))))) + subgroup_id * subgroup_size, (false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(num_workgroup), 0u ^ (_GLF_FUZZED(num_workgroup))), (_GLF_IDENTITY(_GLF_FUZZED(num_workgroup), _GLF_IDENTITY(0u, (0u) << 0u) | (_GLF_FUZZED(num_workgroup)))) + (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | 0u) & 134101u)) : workgroup_base + subgroup_id * subgroup_size)))) + ((subgroup_local_id + _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (_GLF_IDENTITY(~ (1), 0 ^ (~ (1)))) << 0)))) % subgroup_size), vec2(1.0), mat2x4(1.0));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint read = atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (0) >> (0 >> _GLF_IDENTITY(int(7), int(7)))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(buf[_GLF_IDENTITY(_GLF_struct_replacement_0.next_virtual_gid, (_GLF_IDENTITY(_GLF_struct_replacement_0.next_virtual_gid, (_GLF_struct_replacement_0.next_virtual_gid) << 0u)) >> 0u)], _GLF_IDENTITY(uint(1), (uint(1)) ^ 0u), 4, _GLF_IDENTITY(64, max(64, 64)), 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, _GLF_IDENTITY(true, bool(bvec3(true, true, false))), false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, (true) || false), false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))), false || (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false))), bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))))))))), (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y)), true, false))))) || false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(checker[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY((true ? _GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((0u | 0u) ^ (virtual_gid), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, exp(0.0)))).x)) + ((_GLF_IDENTITY(_GLF_IDENTITY(0u | 0u, (1u & 1u) * (0u | 0u)), (_GLF_IDENTITY(0u | 0u, (1u & 1u) * (0u | 0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(0u | 0u, (1u & 1u) * (0u | 0u)), (_GLF_IDENTITY(0u | 0u, _GLF_IDENTITY((1u & 1u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(bitfieldExtract(read, 41148, -43498)) : (1u & 1u))) * (0u | 0u))) * 1u)))) ^ (virtual_gid)))) : _GLF_FUZZED(workgroup_id)), 1u * (_GLF_IDENTITY((true ? _GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((0u | 0u) ^ (virtual_gid), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, exp(0.0)))).x)) + ((_GLF_IDENTITY(_GLF_IDENTITY(0u | 0u, (1u & 1u) * (0u | 0u)), (_GLF_IDENTITY(0u | 0u, (1u & 1u) * (0u | 0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(0u | 0u, (1u & 1u) * (0u | 0u)), (_GLF_IDENTITY(0u | 0u, _GLF_IDENTITY((1u & 1u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(bitfieldExtract(read, 41148, -43498)) : (1u & 1u))) * (0u | 0u))) * 1u)))) ^ (virtual_gid)))) : _GLF_FUZZED(workgroup_id)), min((true ? _GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((0u | 0u) ^ (virtual_gid), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, exp(0.0)))).x)) + ((_GLF_IDENTITY(_GLF_IDENTITY(0u | 0u, (1u & 1u) * (0u | 0u)), (_GLF_IDENTITY(0u | 0u, (1u & 1u) * (0u | 0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(0u | 0u, (1u & 1u) * (0u | 0u)), (_GLF_IDENTITY(0u | 0u, _GLF_IDENTITY((1u & 1u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(bitfieldExtract(read, 41148, -43498)) : (1u & 1u))) * (0u | 0u))) * 1u)))) ^ (virtual_gid)))) : _GLF_FUZZED(workgroup_id)), (true ? _GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((0u | 0u) ^ (virtual_gid), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, exp(0.0)))).x)) + ((_GLF_IDENTITY(_GLF_IDENTITY(0u | 0u, (1u & 1u) * (0u | 0u)), (_GLF_IDENTITY(0u | 0u, (1u & 1u) * (0u | 0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(0u | 0u, (1u & 1u) * (0u | 0u)), (_GLF_IDENTITY(0u | 0u, _GLF_IDENTITY((1u & 1u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(bitfieldExtract(read, 41148, -43498)) : (1u & 1u))) * (0u | 0u))) * 1u)))) ^ (virtual_gid)))) : _GLF_FUZZED(workgroup_id)))))), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-2679.8188) : injectionSwitch.x)))) + (_GLF_IDENTITY((_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || (true)))) ? _GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((0u | 0u) ^ _GLF_IDENTITY((virtual_gid), _GLF_IDENTITY(uint(uint((virtual_gid))), uint(uvec3(_GLF_IDENTITY(uint(uint((virtual_gid))), min(uint(uint((virtual_gid))), uint(uint((virtual_gid))))), 1u, 0u)))), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9.5)), float(injectionSwitch.x), bool(true)))))) / 1.0))) + ((_GLF_IDENTITY(0u | 0u, (1u & 1u) * (0u | 0u))) ^ (virtual_gid)))) : _GLF_FUZZED(workgroup_id)), clamp(_GLF_IDENTITY(_GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(max(_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)), virtual_gid), (max(_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)), virtual_gid)) << 0u)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0u, ~ (~ (0u))) | 0u) ^ (virtual_gid), clamp((_GLF_IDENTITY(0u, _GLF_IDENTITY(~ (~ (0u)), clamp(~ (~ (0u)), ~ (~ (0u)), ~ (~ (0u))))) | 0u) ^ (virtual_gid), (_GLF_IDENTITY(0u, _GLF_IDENTITY(~ (~ (0u)), min(~ (~ (0u)), _GLF_IDENTITY(~ (~ (0u)), 0u ^ (~ (~ (0u))))))) | 0u) ^ (virtual_gid), (_GLF_IDENTITY(0u, ~ (~ (0u))) | 0u) ^ (virtual_gid))), uint(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(2.6) : injectionSwitch.x)), 0.0, abs(1.0), determinant(mat2(1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0)), 1.0, 1.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(1.0, exp(0.0), 1.0, 0.0, 0.0, log(1.0)), transpose(transpose(mat3x2(1.0, exp(0.0), 1.0, 0.0, 0.0, log(1.0)))))), (float(_GLF_IDENTITY(mat3x2(1.0, exp(0.0), 1.0, 0.0, 0.0, log(1.0)), transpose(transpose(mat3x2(1.0, exp(0.0), 1.0, 0.0, 0.0, log(1.0))))))) - 0.0)), 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(9710.9279)), float(_GLF_IDENTITY(0.0, (0.0) / 1.0)), bool(true))), 0.0, 0.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 1.0, abs(0.0), 1.0)))), max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(3.7))), _GLF_ZERO(0.0, injectionSwitch.x)))) + (_GLF_IDENTITY((_GLF_IDENTITY(0u | 0u, (1u & 1u) * (0u | 0u))) ^ (virtual_gid), ((_GLF_IDENTITY(_GLF_IDENTITY(0u | 0u, max(0u | 0u, 0u | 0u)), (1u & 1u) * (0u | _GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(num_workgroup) : 0u)), 0u))))))) ^ (virtual_gid)) / 1u)))) : _GLF_FUZZED(workgroup_id)), max((true ? _GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((_GLF_IDENTITY(0u, ~ (~ (0u))) | 0u) ^ (virtual_gid), uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(3.7))), _GLF_ZERO(0.0, injectionSwitch.x)))) + ((_GLF_IDENTITY(0u | 0u, (1u & 1u) * (0u | 0u))) ^ (virtual_gid)))) : _GLF_FUZZED(workgroup_id)), (true ? _GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((_GLF_IDENTITY(0u, ~ (~ (0u))) | 0u) ^ (virtual_gid), uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_IDENTITY(true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(3.7), (_GLF_IDENTITY(true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(3.7), mix(float(true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(3.7)), float(_GLF_FUZZED(2659.9159)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) / 1.0))), _GLF_ZERO(0.0, injectionSwitch.x)))) + ((_GLF_IDENTITY(0u | 0u, _GLF_IDENTITY((1u & 1u), _GLF_IDENTITY(((1u & 1u)) | ((1u & 1u)), (((1u & 1u)) | _GLF_IDENTITY(((1u & 1u)), (((1u & 1u))) / uint(_GLF_ONE(1.0, injectionSwitch.y)))) - 0u)) * (0u | 0u))) ^ (virtual_gid)))) : _GLF_FUZZED(workgroup_id)))), uint(uint((true ? _GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((0u | _GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), ~ (~ (_GLF_IDENTITY(0u, max(0u, 0u)))))) - 0u)) ^ _GLF_IDENTITY((virtual_gid), ((virtual_gid)) >> 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(0u | 0u, (1u & 1u) * (0u | 0u))) ^ (virtual_gid), (_GLF_IDENTITY((_GLF_IDENTITY(0u | 0u, (1u & 1u) * (0u | 0u))) ^ (virtual_gid), (0u & 101225u) + ((_GLF_IDENTITY(0u | 0u, (1u & 1u) * (0u | 0u))) ^ (virtual_gid)))) / 1u)), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(3u), uint(3u))) | (((_GLF_IDENTITY(0u | 0u, (1u & _GLF_IDENTITY(1u, uint(uvec3(1u, 1u, 1u)))) * (0u | 0u))) ^ (virtual_gid)))))) : _GLF_FUZZED(workgroup_id))))), (_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((_GLF_IDENTITY(0u, 0u | (0u)) | 0u) ^ (virtual_gid), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + ((_GLF_IDENTITY(0u | 0u, (1u & _GLF_IDENTITY(1u, ~ (~ (1u)))) * (0u | 0u))) ^ (virtual_gid)))) : _GLF_FUZZED(workgroup_id)), (true ? _GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((0u | 0u) ^ (virtual_gid), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + ((_GLF_IDENTITY(0u | 0u, (1u & 1u) * (0u | 0u))) ^ (virtual_gid)))) : _GLF_FUZZED(workgroup_id))))))), (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((true ? _GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((0u | 0u) ^ (virtual_gid), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + ((_GLF_IDENTITY(_GLF_IDENTITY(0u | 0u, (1u & 1u) * (0u | 0u)), (_GLF_IDENTITY(0u | 0u, (1u & 1u) * (0u | 0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u | 0u, (1u & 1u) * (0u | 0u)), (_GLF_IDENTITY(0u | 0u, (1u & 1u) * (0u | 0u))) * 1u), max(_GLF_IDENTITY(_GLF_IDENTITY(0u | 0u, (1u & 1u) * (0u | 0u)), (_GLF_IDENTITY(0u | 0u, (1u & 1u) * (0u | 0u))) * 1u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u | 0u, (1u & 1u) * (0u | 0u)), (_GLF_IDENTITY(0u | 0u, (1u & 1u) * (0u | 0u))) * 1u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u | 0u, (1u & 1u) * (0u | 0u)), (_GLF_IDENTITY(0u | 0u, (1u & 1u) * (0u | 0u))) * 1u), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(0u | 0u, (1u & 1u) * (0u | 0u)), (_GLF_IDENTITY(0u | 0u, (1u & 1u) * (0u | 0u))) * 1u), 1u, 1u, 1u)))) | 0u)))))) ^ _GLF_IDENTITY((virtual_gid), min((virtual_gid), _GLF_IDENTITY((virtual_gid), ((virtual_gid)) << 0u)))))) : _GLF_FUZZED(workgroup_id)), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-2679.8188) : injectionSwitch.x)))) + (_GLF_IDENTITY((_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || (true)))) ? _GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((0u | 0u) ^ _GLF_IDENTITY((virtual_gid), _GLF_IDENTITY(uint(uint((virtual_gid))), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(uint(uint((virtual_gid))), min(uint(uint((virtual_gid))), uint(uint((virtual_gid))))), 1u, 0u)), 1u * (_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(uint(uint((virtual_gid))), min(uint(uint((virtual_gid))), uint(uint((virtual_gid))))), 1u, 0u)), (true ? uint(uvec3(_GLF_IDENTITY(uint(uint((virtual_gid))), min(uint(uint((virtual_gid))), uint(uint((virtual_gid))))), 1u, 0u)) : _GLF_FUZZED(virtual_gid))))))), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9.5)), float(injectionSwitch.x), bool(true))))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9.5)), float(injectionSwitch.x), bool(true))))), mix(float(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9.5)), float(injectionSwitch.x), bool(true)))))), float(_GLF_FUZZED(7.4)), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9.5)), float(injectionSwitch.x), bool(true))))), (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9.5)), float(injectionSwitch.x), bool(true)))))) - 0.0)))) / 1.0))) + ((_GLF_IDENTITY(0u | 0u, (1u & 1u) * (0u | 0u))) ^ (virtual_gid)))) : _GLF_FUZZED(workgroup_id)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, max(_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)), virtual_gid)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0u, ~ (~ (0u))) | 0u) ^ (virtual_gid), clamp((_GLF_IDENTITY(0u, ~ (~ (0u))) | 0u) ^ (virtual_gid), (_GLF_IDENTITY(0u, ~ (~ (0u))) | 0u) ^ (virtual_gid), (_GLF_IDENTITY(0u, ~ (~ (0u))) | 0u) ^ (virtual_gid))), uint(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(2.6) : injectionSwitch.x)), 0.0, abs(1.0), determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 1.0, abs(0.0), 1.0)))), max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(3.7))), _GLF_ZERO(0.0, injectionSwitch.x)))) + (_GLF_IDENTITY((_GLF_IDENTITY(0u | 0u, (1u & 1u) * (0u | 0u))) ^ (virtual_gid), ((_GLF_IDENTITY(0u | 0u, (1u & 1u) * (0u | 0u))) ^ (virtual_gid)) / 1u)))) : _GLF_FUZZED(workgroup_id)), max((true ? _GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((_GLF_IDENTITY(0u, ~ (~ (0u))) | 0u) ^ (virtual_gid), uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(3.7))), _GLF_ZERO(0.0, injectionSwitch.x)))) + ((_GLF_IDENTITY(0u | 0u, (1u & 1u) * (0u | 0u))) ^ (virtual_gid)))) : _GLF_FUZZED(workgroup_id)), (true ? _GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((_GLF_IDENTITY(0u, ~ (~ (0u))) | 0u) ^ (virtual_gid), uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_IDENTITY(true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(3.7), (true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(3.7)) / 1.0))), _GLF_ZERO(0.0, injectionSwitch.x)))) + ((_GLF_IDENTITY(0u | 0u, _GLF_IDENTITY((1u & 1u), ((1u & 1u)) | ((1u & 1u))) * (0u | 0u))) ^ (virtual_gid)))) : _GLF_FUZZED(workgroup_id)))), (_GLF_IDENTITY(_GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, max(_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)), virtual_gid)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0u, ~ (~ (0u))) | 0u) ^ (virtual_gid), clamp((_GLF_IDENTITY(0u, ~ (~ (0u))) | 0u) ^ (virtual_gid), (_GLF_IDENTITY(0u, ~ (~ (0u))) | 0u) ^ (virtual_gid), (_GLF_IDENTITY(0u, ~ (~ (0u))) | 0u) ^ (virtual_gid))), uint(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(2.6) : injectionSwitch.x)), 0.0, abs(1.0), determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 1.0, abs(0.0), 1.0)))), max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(3.7))), _GLF_ZERO(0.0, injectionSwitch.x)))) + (_GLF_IDENTITY((_GLF_IDENTITY(0u | 0u, (1u & 1u) * (0u | 0u))) ^ (virtual_gid), ((_GLF_IDENTITY(0u | 0u, (1u & 1u) * (0u | 0u))) ^ (virtual_gid)) / 1u)))) : _GLF_FUZZED(workgroup_id)), max((true ? _GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((_GLF_IDENTITY(0u, ~ (~ (0u))) | 0u) ^ (virtual_gid), uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(3.7))), _GLF_ZERO(0.0, injectionSwitch.x)))) + ((_GLF_IDENTITY(0u | 0u, (1u & 1u) * (0u | 0u))) ^ (virtual_gid)))) : _GLF_FUZZED(workgroup_id)), (true ? _GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((_GLF_IDENTITY(0u, ~ (~ (0u))) | 0u) ^ (virtual_gid), uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_IDENTITY(true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(3.7), (true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(3.7)) / 1.0))), _GLF_ZERO(0.0, injectionSwitch.x)))) + ((_GLF_IDENTITY(0u | 0u, _GLF_IDENTITY((1u & 1u), ((1u & 1u)) | ((1u & 1u))) * (0u | 0u))) ^ (virtual_gid)))) : _GLF_FUZZED(workgroup_id)))), (_GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, max(_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)), virtual_gid)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0u, ~ (~ (0u))) | 0u) ^ (virtual_gid), clamp((_GLF_IDENTITY(0u, ~ (~ (0u))) | 0u) ^ (virtual_gid), (_GLF_IDENTITY(0u, ~ (~ (0u))) | 0u) ^ (virtual_gid), (_GLF_IDENTITY(0u, ~ (~ (0u))) | 0u) ^ (virtual_gid))), uint(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(2.6) : injectionSwitch.x)), 0.0, abs(1.0), determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 1.0, abs(0.0), 1.0)))), max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(3.7))), _GLF_ZERO(0.0, injectionSwitch.x)))) + (_GLF_IDENTITY((_GLF_IDENTITY(0u | 0u, (1u & 1u) * (0u | 0u))) ^ (virtual_gid), ((_GLF_IDENTITY(0u | 0u, (1u & 1u) * (0u | 0u))) ^ (virtual_gid)) / 1u)))) : _GLF_FUZZED(workgroup_id)), max((true ? _GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((_GLF_IDENTITY(0u, ~ (~ (0u))) | 0u) ^ (virtual_gid), uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(3.7))), _GLF_ZERO(0.0, injectionSwitch.x)))) + ((_GLF_IDENTITY(0u | 0u, (1u & 1u) * (0u | 0u))) ^ (virtual_gid)))) : _GLF_FUZZED(workgroup_id)), (true ? _GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((_GLF_IDENTITY(0u, ~ (~ (0u))) | 0u) ^ (virtual_gid), uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_IDENTITY(true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(3.7), (true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(3.7)) / 1.0))), _GLF_ZERO(0.0, injectionSwitch.x)))) + ((_GLF_IDENTITY(0u | 0u, _GLF_IDENTITY((1u & 1u), ((1u & 1u)) | ((1u & 1u))) * (0u | 0u))) ^ (virtual_gid)))) : _GLF_FUZZED(workgroup_id))))) ^ 0u)) << 0u), uint(uint((true ? _GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((0u | _GLF_IDENTITY(0u, max(0u, 0u))) ^ _GLF_IDENTITY((virtual_gid), ((virtual_gid)) >> 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + _GLF_IDENTITY(((_GLF_IDENTITY(0u | 0u, (1u & 1u) * (0u | 0u))) ^ (virtual_gid)), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(3u), uint(3u))) | (((_GLF_IDENTITY(0u | 0u, (1u & 1u) * (0u | 0u))) ^ (virtual_gid)))))) : _GLF_FUZZED(workgroup_id))))), (_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((0u | 0u) ^ (virtual_gid), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + ((_GLF_IDENTITY(0u | 0u, (1u & _GLF_IDENTITY(1u, (1u) / 1u)) * (0u | 0u))) ^ (virtual_gid)))) : _GLF_FUZZED(workgroup_id)), (true ? _GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((0u | 0u) ^ (virtual_gid), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + ((_GLF_IDENTITY(0u | 0u, (1u & 1u) * (0u | 0u))) ^ (virtual_gid)))) : _GLF_FUZZED(workgroup_id)))))))) << 0u)], read, 4, 64, _GLF_IDENTITY(4, _GLF_IDENTITY((4), 1 * (_GLF_IDENTITY((4), ((4)) >> 0))) | (4)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[1]), vec2(_GLF_FUZZED(-640.935), _GLF_FUZZED(-4.8)), bvec2(false, false)))).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, length(vec2(0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) < injectionSwitch.y, true))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
