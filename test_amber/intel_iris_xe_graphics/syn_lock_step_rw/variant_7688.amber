#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))) + vec2(0.0, 0.0), (true ? (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(_GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])), injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], float(mat3(injectionSwitch[1], 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, log(1.0))))))))))) + vec2(0.0, 0.0) : _GLF_FUZZED(injectionSwitch)))).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), true && (bool(_GLF_DEAD(false)))))), bool(bvec2(_GLF_DEAD(false), false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! (false), ! (! (! (false)))), false, true, true))), false, false)), true && (bool(bvec3(_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! (false), ! (! (! (false)))), false, true, true))), false, false))))), bool(bool(_GLF_IDENTITY(! (false), ! (! (! (false))))))))), false, true, false)))))), true && (_GLF_IDENTITY(false, (false) || false)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(-3.2), _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, max(1, 1))], mix(float(_GLF_FUZZED((-77.33 + 4314.8196))), float(_GLF_IDENTITY((injectionSwitch)[1], log(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 0.0, abs(1.0), 1.0, 1.0, 0.0, 0.0)), mix(float(float(mat4x2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 0.0, abs(1.0), 1.0, 1.0, 0.0, 0.0))), float(_GLF_FUZZED(189.246)), bool(false))))) + ((injectionSwitch)[1]))), bool(true)))), vec2(1.0, 1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_FUZZED(-3.2), _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, max(1, 1))], mix(float(_GLF_FUZZED((-77.33 + 4314.8196))), float(_GLF_IDENTITY((injectionSwitch)[1], log(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))) + ((injectionSwitch)[1]))), bool(true)))), mix(vec2(_GLF_FUZZED((3.0 - -709.331)), _GLF_FUZZED(-2343.3764)), vec2((vec2(_GLF_FUZZED(-3.2), _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, max(1, 1))], mix(float(_GLF_FUZZED((-77.33 + 4314.8196))), float(_GLF_IDENTITY((injectionSwitch)[1], log(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))) + ((injectionSwitch)[1]))), bool(true)))))[0], (vec2(_GLF_FUZZED(-3.2), _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, max(1, 1))], mix(float(_GLF_FUZZED((-77.33 + 4314.8196))), float(_GLF_IDENTITY((injectionSwitch)[1], log(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))) + ((injectionSwitch)[1]))), bool(true)))))[1]), bvec2(true, true))), vec2(_GLF_IDENTITY(mat3x2(vec2(_GLF_FUZZED(-3.2), _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, max(1, 1))], mix(float(_GLF_FUZZED((-77.33 + 4314.8196))), float(_GLF_IDENTITY((injectionSwitch)[1], log(_GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))) + ((injectionSwitch)[1]))), bool(true)))), 0.0, sqrt(1.0), 1.0, 1.0), transpose(transpose(mat3x2(vec2(_GLF_FUZZED(-3.2), _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, max(1, 1))], mix(float(_GLF_FUZZED((-77.33 + 4314.8196))), float(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED((vec2(2.0, 18.94) * vec2(-9.4, -5.1))))))[1], log(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))) + ((injectionSwitch)[1]))), bool(true)))), 0.0, sqrt(1.0), _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-3349.1460) : 1.0)), 1.0)) : _GLF_FUZZED(8939.8884))), 1.0)))))))), vec2((injectionSwitch)[0], _GLF_FUZZED((- -21.68))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y, max(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(-3.2), _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, max(1, 1))], mix(float(_GLF_FUZZED((_GLF_IDENTITY(-77.33 + 4314.8196, clamp(_GLF_IDENTITY(-77.33 + 4314.8196, float(vec2(-77.33 + 4314.8196, 1.0))), -77.33 + 4314.8196, -77.33 + 4314.8196))))), float(_GLF_IDENTITY((injectionSwitch)[1], log(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))) + ((injectionSwitch)[1]))), bool(true)))), vec2(1.0, 1.0) * (_GLF_IDENTITY(vec2(_GLF_FUZZED(-3.2), _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, max(1, 1))], mix(float(_GLF_FUZZED((-77.33 + 4314.8196))), float(_GLF_IDENTITY((injectionSwitch)[1], log(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))) + ((injectionSwitch)[1]))), bool(true)))), vec2(_GLF_IDENTITY(mat3x2(vec2(_GLF_FUZZED(-3.2), _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, max(1, 1))], mix(float(_GLF_FUZZED((-77.33 + 4314.8196))), float(_GLF_IDENTITY((injectionSwitch)[1], log(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))) + ((injectionSwitch)[1]))), bool(true)))), 0.0, sqrt(1.0), 1.0, 1.0), transpose(transpose(mat3x2(vec2(_GLF_FUZZED(-3.2), _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, max(1, 1))], mix(float(_GLF_FUZZED((-77.33 + 4314.8196))), float(_GLF_IDENTITY((injectionSwitch)[1], log(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))) + ((injectionSwitch)[1]))), _GLF_IDENTITY(bool(true), (bool(true)) && true)))), 0.0, sqrt(1.0), 1.0, 1.0)))))))), vec2((injectionSwitch)[0], _GLF_FUZZED((- -21.68))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y, _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_FUZZED(-3.2), _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, max(1, 1))], mix(float(_GLF_FUZZED((-77.33 + 4314.8196))), float(_GLF_IDENTITY((injectionSwitch)[1], log(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))) + ((injectionSwitch)[1]))), bool(true)))), vec2(1.0, 1.0) * (_GLF_IDENTITY(vec2(_GLF_FUZZED(-3.2), _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, max(1, 1))], mix(float(_GLF_FUZZED((-77.33 + 4314.8196))), float(_GLF_IDENTITY((injectionSwitch)[1], log(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))) + ((injectionSwitch)[1]))), bool(true)))), vec2(_GLF_IDENTITY(mat3x2(vec2(_GLF_FUZZED(-3.2), _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, max(1, 1))], mix(float(_GLF_FUZZED((-77.33 + 4314.8196))), float(_GLF_IDENTITY((injectionSwitch)[1], log(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))) + ((injectionSwitch)[1]))), bool(true)))), 0.0, sqrt(1.0), 1.0, 1.0), transpose(transpose(mat3x2(vec2(_GLF_FUZZED(-3.2), _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, max(1, 1))], mix(float(_GLF_FUZZED((-77.33 + 4314.8196))), float(_GLF_IDENTITY((injectionSwitch)[1], log(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))) + ((injectionSwitch)[1]))), bool(true)))), 0.0, sqrt(1.0), 1.0, 1.0)))))))), mix(vec2((_GLF_IDENTITY(vec2(_GLF_FUZZED(-3.2), _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, max(1, 1))], mix(float(_GLF_FUZZED((-77.33 + 4314.8196))), float(_GLF_IDENTITY((injectionSwitch)[1], log(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))) + ((injectionSwitch)[1]))), bool(true)))), vec2(1.0, 1.0) * (_GLF_IDENTITY(vec2(_GLF_FUZZED(-3.2), _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, max(1, 1))], mix(float(_GLF_FUZZED((-77.33 + 4314.8196))), float(_GLF_IDENTITY((injectionSwitch)[1], log(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))) + ((injectionSwitch)[1]))), bool(true)))), vec2(_GLF_IDENTITY(mat3x2(vec2(_GLF_FUZZED(-3.2), _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, max(1, 1))], mix(float(_GLF_FUZZED((-77.33 + 4314.8196))), float(_GLF_IDENTITY((injectionSwitch)[1], log(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))) + ((injectionSwitch)[1]))), bool(true)))), 0.0, sqrt(1.0), 1.0, 1.0), transpose(transpose(mat3x2(vec2(_GLF_FUZZED(-3.2), _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, max(1, 1))], mix(float(_GLF_FUZZED((-77.33 + 4314.8196))), float(_GLF_IDENTITY((injectionSwitch)[1], log(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))) + ((injectionSwitch)[1]))), bool(true)))), 0.0, sqrt(1.0), 1.0, 1.0)))))))))[0], _GLF_FUZZED(-78.94)), vec2(_GLF_FUZZED(-746.981), (_GLF_IDENTITY(vec2(_GLF_FUZZED(-3.2), _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, max(1, 1))], mix(float(_GLF_FUZZED((-77.33 + 4314.8196))), float(_GLF_IDENTITY((injectionSwitch)[1], log(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))) + ((injectionSwitch)[1]))), bool(true)))), vec2(1.0, 1.0) * (_GLF_IDENTITY(vec2(_GLF_FUZZED(-3.2), _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, max(1, 1))], mix(float(_GLF_FUZZED((-77.33 + 4314.8196))), float(_GLF_IDENTITY((injectionSwitch)[1], log(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))) + ((injectionSwitch)[1]))), bool(true)))), vec2(_GLF_IDENTITY(mat3x2(vec2(_GLF_FUZZED(-3.2), _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, max(1, 1))], mix(float(_GLF_FUZZED((-77.33 + 4314.8196))), float(_GLF_IDENTITY((injectionSwitch)[1], log(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))) + ((injectionSwitch)[1]))), bool(true)))), 0.0, sqrt(1.0), 1.0, 1.0), transpose(transpose(mat3x2(vec2(_GLF_FUZZED(-3.2), _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, max(1, 1))], mix(float(_GLF_FUZZED((-77.33 + 4314.8196))), float(_GLF_IDENTITY((injectionSwitch)[1], log(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))) + ((injectionSwitch)[1]))), bool(true)))), 0.0, sqrt(1.0), 1.0, 1.0)))))))))[1]), bvec2(false, true))), vec2((injectionSwitch)[0], _GLF_FUZZED((- -21.68))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : mat2(1.0) * (injectionSwitch))), mat2(1.0) * (injectionSwitch)))).y))))).y))))))
    barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(92.23, -8252.6029)))).y)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) && true)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, sin(0.0), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, true)))))) && true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true))))), (injectionSwitch.x > injectionSwitch.y))), bool(bvec3((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true))))) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), ! (! (! ((false))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), ! (! (! ((false))))))), (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), ! (! (! ((false)))))))) && true), true, false, true))) && true))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) / 1u)), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))) + subgroup_id * subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(workgroup_base) : workgroup_base))) / (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) / 1u)), uint(0u))), ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) / 1u)), uint(0u)))) | ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED((-- subgroup_id)) : _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_base) : 0u)))), 0u | (0u))) / 1u)), uint(0u))))) >> _GLF_IDENTITY(uint(0u), uint(0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) / 1u)), uint(0u)), clamp(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) / 1u)), _GLF_IDENTITY(uint(0u), min(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) / 1u)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) / 1u)), uint(0u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) / 1u)), uint(0u))))) >> _GLF_IDENTITY(uint(0u), uint(0u)))), 0u | (_GLF_IDENTITY(workgroup_base, (workgroup_base) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) / 1u)), uint(0u)), (_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) / 1u)), uint(0u))) / 1u)) >> _GLF_IDENTITY(uint(0u), uint(0u))))))) + 0u), 0u | (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) / (_GLF_IDENTITY((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) / 1u)), uint(0u)), 0u | (1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) / 1u)), uint(0u))))), clamp((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) / 1u)), uint(0u))), _GLF_IDENTITY((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) / 1u)), uint(0u))), 0u | ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) / 1u)), uint(0u))))), (1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), 0u | _GLF_IDENTITY((0u), _GLF_IDENTITY(max(_GLF_IDENTITY((0u), uint(uint((0u)))), _GLF_IDENTITY((0u), ((0u)) * 1u)), max(max(_GLF_IDENTITY((0u), uint(uint((0u)))), _GLF_IDENTITY((0u), ((0u)) * 1u)), _GLF_IDENTITY(max(_GLF_IDENTITY((0u), uint(uint((0u)))), _GLF_IDENTITY((0u), ((0u)) * 1u)), min(max(_GLF_IDENTITY((0u), uint(uint((0u)))), _GLF_IDENTITY((0u), ((0u)) * 1u)), max(_GLF_IDENTITY((0u), uint(uint((0u)))), _GLF_IDENTITY((0u), ((0u)) * 1u))))))))) / 1u)), uint(uvec4(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), 0u | _GLF_IDENTITY((0u), _GLF_IDENTITY(max(_GLF_IDENTITY((0u), uint(uint((0u)))), _GLF_IDENTITY((0u), ((0u)) * 1u)), max(max(_GLF_IDENTITY((0u), uint(uint((0u)))), _GLF_IDENTITY((0u), ((0u)) * 1u)), _GLF_IDENTITY(max(_GLF_IDENTITY((0u), uint(uint((0u)))), _GLF_IDENTITY((0u), ((0u)) * 1u)), min(max(_GLF_IDENTITY((0u), uint(uint((0u)))), _GLF_IDENTITY((0u), ((0u)) * 1u)), max(_GLF_IDENTITY((0u), uint(uint((0u)))), _GLF_IDENTITY((0u), ((0u)) * 1u))))))))) / 1u)), 1u, 1u, 1u))), uint(_GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u | (0u)), max(0u, 0u)))))))))) >> _GLF_IDENTITY(uint(0u), uint(0u))), uint(uvec4((_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))) / (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY(0u, max(0u, 0u)) | (0u))) / 1u)), uint(0u))), clamp((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, _GLF_IDENTITY(0u, (0u) >> 0u) | (0u))) / 1u, ((_GLF_IDENTITY(0u, 0u | (0u))) / 1u) | ((_GLF_IDENTITY(0u, 0u | (0u))) / 1u)))), uint(0u))), _GLF_IDENTITY((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) / _GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, min(1u, 1u)))))), uint(0u))), 0u | ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) / 1u)), uint(0u))))), (1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) / 1u)), uint(_GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, max(0u, 0u)))))))))) >> _GLF_IDENTITY(uint(0u), uint(0u))), 0u, 1u, 0u)))))) + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base, (workgroup_base) / ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) / 1u)), _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(uint(uint(0u)), clamp(uint(uint(0u)), uint(uint(0u)), uint(uint(0u)))))))) >> _GLF_IDENTITY(uint(0u), uint(0u)))) + _GLF_IDENTITY(subgroup_id * subgroup_size, 1u * (subgroup_id * subgroup_size)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) / ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) / 1u)), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), ((workgroup_base) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) / 1u)), (_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) / 1u)), (uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, max(0u, 0u))))) / 1u))) - 0u)) - 0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))) << 0u)) + subgroup_id * subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base))) / ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) / 1u)), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))), _GLF_IDENTITY(0u | (_GLF_IDENTITY(workgroup_base, (workgroup_base) / ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) / 1u)), uint(0u)), (1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) / 1u)), uint(0u))) << 0u)) >> _GLF_IDENTITY(uint(0u), uint(0u))))), clamp(_GLF_IDENTITY(0u | (_GLF_IDENTITY(workgroup_base, (workgroup_base) / ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) / 1u)), uint(0u)), (1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) / 1u)), uint(0u))) << 0u)) >> _GLF_IDENTITY(uint(0u), uint(0u))))), (0u | (_GLF_IDENTITY(workgroup_base, (workgroup_base) / ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) / 1u)), uint(0u)), (1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) / 1u)), uint(0u))) << 0u)) >> _GLF_IDENTITY(uint(0u), uint(0u)))))) / 1u), 0u | (_GLF_IDENTITY(workgroup_base, (workgroup_base) / ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) / 1u)), uint(0u)), (1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) / 1u)), uint(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_id)))))) << 0u)) >> _GLF_IDENTITY(uint(0u), uint(0u))))), 0u | (_GLF_IDENTITY(workgroup_base, (workgroup_base) / ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) / 1u)), uint(0u)), (1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, uint(uvec4(0u, 0u, 0u, 1u))))), 0u | (0u))) / 1u)), uint(0u))) << 0u)) >> _GLF_IDENTITY(uint(0u), uint(0u)))))))) + _GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), _GLF_IDENTITY(workgroup_base, (workgroup_base) / ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) | (0u))) / 1u)), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))) + subgroup_id * subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) / ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) / 1u)), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), ((workgroup_base) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) / 1u)), (_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) / 1u)), (uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, max(0u, 0u))))) / 1u))) - 0u)) - 0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))) << 0u)) + subgroup_id * subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base))) / ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) / 1u)), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))), _GLF_IDENTITY(0u | (_GLF_IDENTITY(workgroup_base, (workgroup_base) / ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) / 1u)), uint(0u)), (1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) / 1u)), uint(0u))) << 0u)) >> _GLF_IDENTITY(uint(0u), uint(0u))))), clamp(_GLF_IDENTITY(0u | (_GLF_IDENTITY(workgroup_base, (workgroup_base) / ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) / 1u)), uint(0u)), (1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) / 1u)), uint(0u))) << 0u)) >> _GLF_IDENTITY(uint(0u), uint(0u))))), (0u | (_GLF_IDENTITY(workgroup_base, (workgroup_base) / ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) / 1u)), uint(0u)), (1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) / 1u)), uint(0u))) << 0u)) >> _GLF_IDENTITY(uint(0u), uint(0u)))))) / 1u), 0u | (_GLF_IDENTITY(workgroup_base, (workgroup_base) / ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) / 1u)), uint(0u)), (1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) / 1u)), uint(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_id)))))) << 0u)) >> _GLF_IDENTITY(uint(0u), uint(0u))))), 0u | (_GLF_IDENTITY(workgroup_base, (workgroup_base) / ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) / 1u)), uint(0u)), (1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, uint(uvec4(0u, 0u, 0u, 1u))))), 0u | (0u))) / 1u)), uint(0u))) << 0u)) >> _GLF_IDENTITY(uint(0u), uint(0u)))))))) + _GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), _GLF_IDENTITY(workgroup_base, (workgroup_base) / ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) | (0u))) / 1u)), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))) + subgroup_id * subgroup_size))) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) / 1u)), uint(0u)), (_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) / 1u)), uint(0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) / 1u)), uint(0u)), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) | (~ (0u))))), 0u)), 0u | (0u))) / 1u)), _GLF_IDENTITY(uint(0u), (uint(0u)) + 0u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) / 1u)), uint(0u))))))) >> _GLF_IDENTITY(uint(0u), uint(0u)))) + subgroup_id * subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) / 1u), max(_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) / 1u), ~ (~ (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) / 1u)))), _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) / 1u), (false ? _GLF_FUZZED(61422u) : _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) / 1u)))))), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))), 0u | (_GLF_IDENTITY(workgroup_base, (workgroup_base) / _GLF_IDENTITY(_GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), (_GLF_IDENTITY(0u, 0u | (0u))) / 1u)), uint(0u))) >> _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), 0u ^ (_GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(uvec3(uint(0u), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), ~ (~ (uvec3(uint(0u), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))))))))), (false ? _GLF_FUZZED(subgroup_id) : ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) / 1u)), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))))), clamp(_GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), (_GLF_IDENTITY(0u, 0u | (0u))) / 1u)), uint(0u))) >> _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), 0u ^ (_GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(uvec3(uint(0u), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), ~ (~ (uvec3(uint(0u), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))))))))), (false ? _GLF_FUZZED(subgroup_id) : ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) / 1u)), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))))), _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), (_GLF_IDENTITY(0u, 0u | (0u))) / 1u)), uint(0u))) >> _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), 0u ^ (_GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(uvec3(uint(0u), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), ~ (~ (uvec3(uint(0u), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))))))))), (false ? _GLF_FUZZED(subgroup_id) : ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) / 1u)), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))))), _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), (_GLF_IDENTITY(0u, 0u | (0u))) / 1u)), uint(0u))) >> _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), 0u ^ (_GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(uvec3(uint(0u), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), ~ (~ (uvec3(uint(0u), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))))))))), (false ? _GLF_FUZZED(subgroup_id) : ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) / 1u)), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))))))))) + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base, (workgroup_base) / ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) / 1u)), uint(0u)), (_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) / 1u)), uint(0u)), min(1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) / 1u)), uint(0u)), 1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) / 1u)), uint(0u))))) ^ 0u)) >> _GLF_IDENTITY(uint(0u), uint(0u)))) + subgroup_id * subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) / 1u)), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))) + subgroup_id * subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), uint(uvec4(_GLF_IDENTITY((workgroup_base), 0u | ((workgroup_base))), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), 0u, 0u))) / _GLF_IDENTITY((_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) / 1u)), uint(0u))), clamp((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) / 1u)), uint(0u))), (1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) / 1u)), uint(0u))), _GLF_IDENTITY((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) / 1u)), uint(0u))), max((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) / 1u)), uint(0u))), (1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) / 1u)), uint(0u))))))) >> _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (0u) | (0u))))), ((_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) / 1u)), uint(0u))), clamp((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) / 1u)), uint(0u))), (1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) / 1u)), uint(0u))), _GLF_IDENTITY((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) / 1u)), uint(0u))), max((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) / 1u)), uint(0u))), (1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) / 1u)), uint(0u))))))) >> _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (0u) | (0u)))))) - 0u)), _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u)) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) / ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY(0u | (0u), (_GLF_IDENTITY(0u | (0u), (0u | (0u)) | (0u | (0u)))) >> 0u))) / 1u)), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))))) + subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) / 1u)), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u | (0u)), (_GLF_IDENTITY(0u, 0u | (0u))) + 0u)) / 1u)), uint(0u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(uint(0u), uint(0u))) - 0u))), (_GLF_IDENTITY(workgroup_base, (workgroup_base) / ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) / 1u), uint(uvec2(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) / 1u), 0u)))), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))))) * 1u))) + subgroup_id * subgroup_size)))) + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(uint(subgroup_local_id), clamp(uint(subgroup_local_id), uint(subgroup_local_id), uint(subgroup_local_id))))) + 1) % subgroup_size);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], min(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) / 1u), ~ (~ (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) / 1u)))), buf[virtual_gid])), _GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (_GLF_IDENTITY(4, 0 | (_GLF_IDENTITY(4, 0 ^ (4)))))), (_GLF_IDENTITY(4, 1 * (4))) - 0), _GLF_IDENTITY(64, max(64, 64)), 0);
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (true && (false))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)) * vec2(1.0, 1.0)).x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y), true), bvec2(bvec2(bvec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y), true))))), true && (bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y), true), bvec2(bvec2(bvec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y), true)))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, bool(bvec3(false, true, true))), true)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(1), 4, _GLF_IDENTITY(64, (1 ^ (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0)), min(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(0), int(0))), ((1 << _GLF_IDENTITY(int(0), int(0)))) << 0) >> _GLF_IDENTITY(int(0), int(0)), (1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0)))))) | (_GLF_IDENTITY(64, 0 ^ _GLF_IDENTITY((64), max((64), (64)))))), 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), ((injectionSwitch.x > injectionSwitch.y)) || false), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(injectionSwitch, 1.0, sqrt(1.0), _GLF_IDENTITY(1.0, 0.0 + (1.0)), abs(0.0), 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), round(length(normalize(1.0))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)), clamp(vec2(mat4(injectionSwitch, 1.0, sqrt(1.0), 1.0, abs(0.0), 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat3x4(0.0, 0.0, 1.0, 1.0, abs(log(1.0)), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, sqrt(sqrt(0.0))))), 0.0)), round(length(normalize(1.0))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)), vec2(mat4(injectionSwitch, 1.0, sqrt(1.0), 1.0, abs(0.0), 0.0, determinant(mat4(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-353.496)), bool(false))))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), round(length(normalize(1.0))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)), vec2(mat4(injectionSwitch, 1.0, sqrt(1.0), 1.0, abs(0.0), 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), 0.0, 0.0, 0.0, 0.0)), determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), round(length(normalize(1.0))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))).x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), ((injectionSwitch.x > injectionSwitch.y)) || false), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), ((injectionSwitch.x > injectionSwitch.y)) || false), false, false, true)))) || false)) || _GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bool(false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 atomicStore(checker[virtual_gid], read, 4, 64, 4);
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
