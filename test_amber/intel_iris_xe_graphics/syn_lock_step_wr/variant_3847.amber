#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, true, false))))))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), true && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_IDENTITY(true, true && (true))))), true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_IDENTITY(true, true && (true))))), true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))))), bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_IDENTITY(true, true && (true))))), true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))))), false, false), bvec3(bvec3(bvec3(! (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_IDENTITY(true, true && (true))))), true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))))), false, false))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(120.822))))), _GLF_IDENTITY(0.0 + (injectionSwitch.y), (_GLF_IDENTITY(0.0, min(0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * cos(0.0)), injectionSwitch.y)))))) * 1.0))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false)))))))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))), false, false), false)))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, 0 | (0))))], (true ? (injectionSwitch)[_GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, 0 | (0))))] : _GLF_FUZZED(4.4))), clamp(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) - 0.0))), _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1]))), vec2(_GLF_FUZZED(2.9), _GLF_FUZZED(3675.1294)), bvec2(false, false))), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(13.73))), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), false, false))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0))), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))))) - 0.0) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), true && ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), false))))))), bool(bvec4(! _GLF_IDENTITY((false), true && ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), false))))))), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec2(_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ! (! ((false))))), false || (! (_GLF_IDENTITY((false), ! (! ((false))))))))), false || (! (false))), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (false), false || _GLF_IDENTITY((! (false)), bool(bool((! (false)))))), false)), bool(_GLF_IDENTITY(bvec3(bool(bvec2(_GLF_IDENTITY(! (false), false || (! (false))), false)), true, false), bvec3(bvec3(bvec3(bool(bvec2(_GLF_IDENTITY(! (false), _GLF_IDENTITY(false || (! (false)), true && (false || (! (false))))), false)), true, false))))))))))), _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((false), ! (! ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true))))), false, false, false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((false), ! _GLF_IDENTITY((! ((false))), ! (! (_GLF_IDENTITY((! ((false))), ((! ((false)))) || false))))), false, false, false)), bool(bvec3(bool(bvec4(_GLF_IDENTITY((false), ! (! ((false)))), false, false, false)), _GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, _GLF_IDENTITY(bool(bool((false) && true)), false || (bool(bool((false) && true)))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y) && true)))))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && (bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((false), ! (! ((false)))), false, false, false)), _GLF_IDENTITY(bool(bvec3(bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true)))), ! (! ((false)))), false, false, false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec3(bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true)))), ! (! ((false)))), false, false, false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((false), ! (! ((false)))), false, false, _GLF_IDENTITY(false, bool(bvec3(false, false, false))))), bool(bvec3(bool(bvec4(_GLF_IDENTITY((false), ! (! ((false)))), false, _GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((false), ! _GLF_IDENTITY((! ((false))), bool(bvec3((! ((false))), true, true)))), false, false, false)), bool(bvec3(bool(bvec4(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), false || (! (_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ((false)) && true))))))))), false, false, false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((false), ! _GLF_IDENTITY((! (_GLF_IDENTITY((false), ((false)) || false))), bool(bvec3((! ((false))), true, true)))), false, false, false)), bool(bvec3(bool(bvec4(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), false || (! (_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) && true), false || (_GLF_IDENTITY((false), (_GLF_IDENTITY((false), true && ((false)))) && true))))))))))), false, false, false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || false), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! _GLF_IDENTITY(((false)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(((false)), ! (! (((_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(((false)), ! (! (((false))))), false || (_GLF_IDENTITY(((false)), ! (! (((false))))))))))))))), bool(bool(_GLF_IDENTITY((false), ! (! _GLF_IDENTITY(((false)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(((false)), ! (! (((_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(((false)), ! (! (((false))))), false || (_GLF_IDENTITY(((false)), ! (! (((false)))))))))))))))))), false, false, false)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bool(bvec4(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), bool(bvec2(! ((false)), false))))), false, false, false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(bool(bvec4(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), bool(bvec2(! ((false)), false))))), false, false, false)), false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bool(bvec4(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), bool(bvec2(! ((false)), false))))), false, false, false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(bool(bvec4(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), bool(bvec2(! ((false)), false))))), false, false, false)), false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bool(bvec4(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), bool(bvec2(! ((false)), false))))), false, false, false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(bool(bvec4(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), bool(bvec2(! ((false)), false))))), false, false, false)), false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bool(bvec4(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), bool(bvec2(! ((false)), false))))), false, false, false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(bool(bvec4(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), bool(bvec2(! ((false)), false))))), false, false, false)), false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bool(bvec4(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), bool(bvec2(! ((false)), false))))), false, false, false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(bool(bvec4(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), bool(bvec2(! ((false)), false))))), false, false, false)), false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bool(bvec4(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), bool(bvec2(! ((false)), false))))), false, false, false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(bool(bvec4(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), bool(bvec2(! ((false)), false))))), false, false, false)), false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bool(bvec4(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), bool(bvec2(! ((false)), false))))), false, false, false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(bool(bvec4(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), bool(bvec2(! ((false)), false))))), false, false, false)), false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))))))))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), true), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false))))))))))))))) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(_GLF_IDENTITY(bvec2(bool(bool(false)), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(bool(bool(false)), true), false)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec3(bvec2(bool(bool(false)), true), false)), bvec2(bvec3(bvec2(bvec3(bvec2(bool(bool(false)), true), false)), false))), false, true)))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, 0u ^ (gl_WorkGroupSize.x)), (_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize)))), ((_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))))) | ((_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize)))))), (true ? ~ (_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize)))) : _GLF_FUZZED(_GLF_IDENTITY(uvec3(162381u, 97975u, _GLF_IDENTITY(67383u, min(67383u, 67383u))), uvec3(uvec3(uvec3(162381u, 97975u, 67383u))))))))).x) | (gl_WorkGroupSize.x)), _GLF_IDENTITY((gl_WorkGroupSize.x) | (gl_WorkGroupSize.x), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY((gl_WorkGroupSize.x) | (gl_WorkGroupSize.x), ((gl_WorkGroupSize.x) | (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) + uvec3(0u, 0u, 0u)).x)) | _GLF_IDENTITY(((gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), (((gl_WorkGroupSize.x) | (gl_WorkGroupSize.x))) | (_GLF_IDENTITY(((gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), 1u * (((gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)))))))))), gl_WorkGroupSize.x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) >> uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ (~ (0u)))))) | (gl_WorkGroupSize)).x, (gl_WorkGroupSize.x) | (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) ^ (gl_WorkGroupSize))))).x))));
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true))), false, false, true)), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true))), false, false, true)), (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true))), false, false, true))) && true)) || false)))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, 0u + (workgroup_size * workgroup_id));
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), 0.0, 1.0, 1.0)), mix(float(float(vec4(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0))), float(_GLF_FUZZED(7005.2643)), bool(false)))), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), 0.0, 1.0, 1.0)), mix(float(float(vec4(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0))), float(_GLF_FUZZED(7005.2643)), bool(false)))), (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), ((injectionSwitch.y)) * determinant(mat2(1.0, 1.0, 0.0, 1.0))) - 0.0), 0.0, 1.0, 1.0)), mix(float(float(vec4(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0))), float(_GLF_IDENTITY(_GLF_FUZZED(7005.2643), 0.0 + (_GLF_FUZZED(7005.2643)))), bool(false))))) * 1.0)))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)) - 0.0) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), ! (! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(false || (bool(bool(_GLF_IDENTITY(false, false || (false))))), ! (_GLF_IDENTITY(! (false || (bool(bool(_GLF_IDENTITY(false, false || (false)))))), ! (! (! _GLF_IDENTITY((false || (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), false || (! (_GLF_IDENTITY(false, false || (false))))))))))), bool(bvec4((false || (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), false || (! (_GLF_IDENTITY(false, false || (false))))))))))), true, true, false))))))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)) + _GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY((false ? _GLF_FUZZED(max(atomicAdd(subgroup_local_id, subgroup_id), (-- subgroup_size))) : _GLF_IDENTITY(0u, uint(uint(0u))) >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) | (uint(2u))))), ((false ? _GLF_FUZZED(max(atomicAdd(subgroup_local_id, subgroup_id), (-- subgroup_size))) : _GLF_IDENTITY(0u, uint(uint(0u))) >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) | (uint(2u)))))) | 0u)))) * subgroup_size + subgroup_local_id;
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, 0.0, 1.0, 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, log(1.0))))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(41.69) : _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-0.5), _GLF_FUZZED(0.6)), bvec2(false, false))).x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-0.5), _GLF_FUZZED(0.6)), bvec2(false, false))).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-0.5), _GLF_FUZZED(0.6)), bvec2(false, false))).x > injectionSwitch.y))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), bvec3(bvec4(bvec3(_GLF_DEAD(false), true, true), true))))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(9.8)), float(injectionSwitch.y), bool(true)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), true && (bool(false))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) || false), true && _GLF_IDENTITY((_GLF_IDENTITY(bool(false), (bool(false)) || false)), ((bool(false))) && true))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))) || (_GLF_IDENTITY((_GLF_IDENTITY(bool(false), true && _GLF_IDENTITY((_GLF_IDENTITY(bool(false), _GLF_IDENTITY((bool(false)), true && ((bool(false)))) || false)), ((bool(false))) && true))), ((_GLF_IDENTITY(bool(false), true && _GLF_IDENTITY((_GLF_IDENTITY(bool(false), _GLF_IDENTITY((bool(false)), true && ((bool(false)))) || false)), ((bool(false))) && true)))) && _GLF_IDENTITY(true, false || (true)))))))), (bool(_GLF_IDENTITY(bool(false), true && (bool(false))))) && true))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), true && _GLF_IDENTITY((_GLF_IDENTITY(bool(false), (bool(false)) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(bool(false), (bool(false)) && true))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) || false)), (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) || false)), bool(bvec2(bool(_GLF_IDENTITY(false, (false) || false)), true)))) || false), true && _GLF_IDENTITY((bool(false)), (_GLF_IDENTITY((bool(false)), ! (! (_GLF_IDENTITY((bool(false)), ! (! ((bool(false))))))))) && true))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(bool(false), true && _GLF_IDENTITY((bool(false)), ((bool(false))) && true))), bool(bvec3(! (_GLF_IDENTITY(bool(false), true && _GLF_IDENTITY((bool(false)), ((bool(false))) && true))), _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bool(bvec2(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true))))), ((injectionSwitch.x > injectionSwitch.y)) || false)), false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(bool(false), true && _GLF_IDENTITY((bool(false)), ((bool(false))) && true))), bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(bool(false), true && _GLF_IDENTITY((bool(false)), ((bool(false))) && true))), _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-9.2, -3.4)) : injectionSwitch)).y)), false), bvec3(bvec3(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(bool(false), true && _GLF_IDENTITY((bool(false)), ((bool(false))) && true))), _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec3(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), true && _GLF_IDENTITY((bool(false)), ((bool(false))) && true))), _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)), false))))))))), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))), false)))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(bool(false), true && _GLF_IDENTITY((bool(false)), ((bool(false))) && true))), bool(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(bool(false), true && _GLF_IDENTITY((bool(false)), ((bool(false))) && true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(false), _GLF_IDENTITY(true && _GLF_IDENTITY((bool(false)), ((bool(false))) && true), ! (! (_GLF_IDENTITY(true && _GLF_IDENTITY((bool(false)), ((bool(false))) && true), (true && _GLF_IDENTITY((bool(false)), ((bool(_GLF_IDENTITY(false, ! (! (false)))))) && true)) || false)))))), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(false), true && _GLF_IDENTITY(_GLF_IDENTITY((bool(false)), ((bool(false))) && true), bool(bvec2(_GLF_IDENTITY((bool(false)), ((bool(false))) && true), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true))), (injectionSwitch.x < injectionSwitch.y))))))))), true && ((_GLF_IDENTITY(bool(false), true && _GLF_IDENTITY(_GLF_IDENTITY((bool(false)), ((bool(false))) && true), bool(bvec2(_GLF_IDENTITY((bool(false)), ((bool(false))) && true), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true))), (injectionSwitch.x < injectionSwitch.y))))))))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), bool(bool(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), (bool(_GLF_IDENTITY(false, (false) && true))) || false), true && _GLF_IDENTITY((bool(false)), ((bool(false))) && _GLF_IDENTITY(true, true && (true))))), bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(bool(false), true && _GLF_IDENTITY((bool(false)), _GLF_IDENTITY(((bool(false))) && true, (_GLF_IDENTITY(((bool(false))) && true, (((bool(false))) && true) && true)) && true)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), true && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) || false))))), false), _GLF_IDENTITY(bvec3(bvec3(bvec3(! (_GLF_IDENTITY(bool(false), true && _GLF_IDENTITY((bool(false)), _GLF_IDENTITY(((bool(false))) && true, (_GLF_IDENTITY(((bool(false))) && true, (((bool(false))) && true) && true)) && true)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), true && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) || false))))), false))), bvec3(bvec3(bvec3(bvec3(bvec3(! (_GLF_IDENTITY(bool(false), true && _GLF_IDENTITY((bool(false)), _GLF_IDENTITY(((bool(false))) && true, (_GLF_IDENTITY(((bool(false))) && true, (((bool(false))) && true) && true)) && true)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), true && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) || false))))), false))))))))), true, _GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))), false)))), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(bool(false), true && _GLF_IDENTITY((bool(false)), ((bool(false))) && true))), bool(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(bool(false), true && _GLF_IDENTITY((bool(false)), ((bool(false))) && true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(false), _GLF_IDENTITY(true && _GLF_IDENTITY((bool(false)), ((bool(false))) && true), ! (! (_GLF_IDENTITY(true && _GLF_IDENTITY((bool(false)), ((bool(false))) && true), (true && _GLF_IDENTITY((bool(false)), ((bool(_GLF_IDENTITY(false, ! (! (false)))))) && true)) || false)))))), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(false), true && _GLF_IDENTITY(_GLF_IDENTITY((bool(false)), ((bool(false))) && true), bool(bvec2(_GLF_IDENTITY((bool(false)), ((bool(false))) && true), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true))), (injectionSwitch.x < injectionSwitch.y))))))))), true && ((_GLF_IDENTITY(bool(false), true && _GLF_IDENTITY(_GLF_IDENTITY((bool(false)), ((bool(false))) && true), bool(bvec2(_GLF_IDENTITY((bool(false)), ((bool(false))) && true), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true))), (injectionSwitch.x < injectionSwitch.y))))))))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), bool(bool(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), (bool(_GLF_IDENTITY(false, (false) && true))) || false), true && _GLF_IDENTITY((bool(false)), ((bool(false))) && _GLF_IDENTITY(true, true && (true))))), bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(bool(false), true && _GLF_IDENTITY((bool(false)), _GLF_IDENTITY(((bool(false))) && true, (_GLF_IDENTITY(((bool(false))) && true, (((bool(false))) && true) && true)) && true)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), true && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) || false))))), false), _GLF_IDENTITY(bvec3(bvec3(bvec3(! (_GLF_IDENTITY(bool(false), true && _GLF_IDENTITY((bool(false)), _GLF_IDENTITY(((bool(false))) && true, (_GLF_IDENTITY(((bool(false))) && true, (((bool(false))) && true) && true)) && true)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), true && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) || false))))), false))), bvec3(bvec3(bvec3(bvec3(bvec3(! (_GLF_IDENTITY(bool(false), true && _GLF_IDENTITY((bool(false)), _GLF_IDENTITY(((bool(false))) && true, (_GLF_IDENTITY(((bool(false))) && true, (((bool(false))) && true) && true)) && true)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), true && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) || false))))), false))))))))), true, _GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))), false)))), bool(bvec3(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(bool(false), true && _GLF_IDENTITY((bool(false)), ((bool(false))) && true))), bool(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(bool(false), true && _GLF_IDENTITY((bool(false)), ((bool(false))) && true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(false), _GLF_IDENTITY(true && _GLF_IDENTITY((bool(false)), ((bool(false))) && true), ! (! (_GLF_IDENTITY(true && _GLF_IDENTITY((bool(false)), ((bool(false))) && true), (true && _GLF_IDENTITY((bool(false)), ((bool(_GLF_IDENTITY(false, ! (! (false)))))) && true)) || false)))))), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(false), true && _GLF_IDENTITY(_GLF_IDENTITY((bool(false)), ((bool(false))) && true), bool(bvec2(_GLF_IDENTITY((bool(false)), ((bool(false))) && true), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true))), (injectionSwitch.x < injectionSwitch.y))))))))), true && ((_GLF_IDENTITY(bool(false), true && _GLF_IDENTITY(_GLF_IDENTITY((bool(false)), ((bool(false))) && true), bool(bvec2(_GLF_IDENTITY((bool(false)), ((bool(false))) && true), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true))), (injectionSwitch.x < injectionSwitch.y))))))))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), bool(bool(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), (bool(_GLF_IDENTITY(false, (false) && true))) || false), true && _GLF_IDENTITY((bool(false)), ((bool(false))) && _GLF_IDENTITY(true, true && (true))))), bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(bool(false), true && _GLF_IDENTITY((bool(false)), _GLF_IDENTITY(((bool(false))) && true, (_GLF_IDENTITY(((bool(false))) && true, (((bool(false))) && true) && true)) && true)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), true && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) || false))))), false), _GLF_IDENTITY(bvec3(bvec3(bvec3(! (_GLF_IDENTITY(bool(false), true && _GLF_IDENTITY((bool(false)), _GLF_IDENTITY(((bool(false))) && true, (_GLF_IDENTITY(((bool(false))) && true, (((bool(false))) && true) && true)) && true)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), true && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) || false))))), false))), bvec3(bvec3(bvec3(bvec3(bvec3(! (_GLF_IDENTITY(bool(false), true && _GLF_IDENTITY((bool(false)), _GLF_IDENTITY(((bool(false))) && true, (_GLF_IDENTITY(((bool(false))) && true, (((bool(false))) && true) && true)) && true)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), true && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) || false))))), false))))))))), true, _GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))), false)))), true, false))), false, _GLF_IDENTITY(false, ! (! (false))), true)))))))))), (bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(true, false || _GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (! (true)), (! _GLF_IDENTITY((! (true)), true && ((! (true))))) && true), true && (! (! (true)))), _GLF_IDENTITY(true, true && (true))), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(! (! (true)), true && (! (! (true)))), _GLF_IDENTITY(true, true && (true))), false, false)), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (! (true)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (! (true)), (! (! (true))) || false), true, true)), ! (! (bool(bvec3(_GLF_IDENTITY(! (! (true)), (! (! (true))) || false), true, true)))))), true && (! (! (true)))), _GLF_IDENTITY(true, true && (true))), false, false)))))))))), bool(bvec4((_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (! (true)), (! _GLF_IDENTITY((! (true)), true && ((! (true))))) && true), true && (! (! (true)))), _GLF_IDENTITY(true, true && (true))), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(! (! (true)), true && (! (! (true)))), _GLF_IDENTITY(true, true && (true))), false, false)), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (! (true)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (! (true)), (! (! (true))) || false), true, true)), ! (! (bool(bvec3(_GLF_IDENTITY(! (! (true)), (! (! (true))) || false), true, true)))))), true && (! (! (true)))), _GLF_IDENTITY(true, true && (true))), false, false)))))))))), true, true, false)))) && (bool(false))))) && true)))), (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(true, bool(bvec2(true, true))) && (_GLF_IDENTITY(bool(false), (bool(false)) && true))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(bool(false), true && _GLF_IDENTITY((bool(false)), (_GLF_IDENTITY((bool(false)), false || (_GLF_IDENTITY((bool(false)), bool(bool((bool(false)))))))) && true))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(bool(false), true && _GLF_IDENTITY((bool(false)), (_GLF_IDENTITY((bool(false)), false || (_GLF_IDENTITY((bool(false)), bool(bool((bool(false)))))))) && true))), ! (! ((_GLF_IDENTITY(bool(false), true && _GLF_IDENTITY((bool(false)), (_GLF_IDENTITY((bool(false)), false || (_GLF_IDENTITY((bool(false)), bool(bool((bool(false)))))))) && true))))))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(bool(false), true && _GLF_IDENTITY((bool(false)), ((bool(false))) && true))), bool(bvec3(! (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), true && _GLF_IDENTITY((bool(false)), ((bool(false))) && true))), _GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))) || false))))), false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(bool(false), true && _GLF_IDENTITY((bool(false)), ((bool(false))) && _GLF_IDENTITY(true, false || (true))))), bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(bool(false), true && _GLF_IDENTITY(_GLF_IDENTITY((bool(false)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((bool(false)), bool(bvec3((bool(false)), false, false))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY((bool(false)), bool(bvec3((bool(false)), false, false))), false)))))), ((bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))) && true))), _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec3(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(bool(false), _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && _GLF_IDENTITY(_GLF_IDENTITY((bool(false)), ((bool(false))) && true), (_GLF_IDENTITY((bool(false)), ((_GLF_IDENTITY(bool(false), false || (bool(false))))) && true)) && true))), _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec3(bvec3(! (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (false))), true && _GLF_IDENTITY((_GLF_IDENTITY(bool(false), (bool(false)) && true)), ((bool(false))) && true))), _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), false))))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(bool(false), true && _GLF_IDENTITY((bool(false)), ((bool(false))) && true))), bool(bvec3(! (_GLF_IDENTITY(bool(false), true && _GLF_IDENTITY((bool(false)), ((bool(false))) && true))), _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bool(((injectionSwitch.x > injectionSwitch.y))))) || false)), false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(bool(false), true && _GLF_IDENTITY((bool(false)), ((bool(false))) && true))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(bool(false), true && _GLF_IDENTITY((bool(false)), ((bool(false))) && true))), _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec3(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(bool(false), _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))) && _GLF_IDENTITY(_GLF_IDENTITY((bool(false)), ((bool(false))) && true), (_GLF_IDENTITY((bool(false)), _GLF_IDENTITY(((_GLF_IDENTITY(bool(false), false || (bool(false))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(((_GLF_IDENTITY(bool(false), false || (bool(false))))), (((_GLF_IDENTITY(bool(false), false || (bool(false)))))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), false || (bool(bvec3(_GLF_IDENTITY(((_GLF_IDENTITY(bool(false), false || (bool(false))))), (((_GLF_IDENTITY(bool(false), false || (bool(false)))))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))) && true)) && true))), _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), false), bvec3(bvec3(bvec3(! (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (false))), true && _GLF_IDENTITY((_GLF_IDENTITY(bool(false), (bool(false)) && true)), ((bool(false))) && true))), _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)), false)))))))), bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(bool(false), true && _GLF_IDENTITY((bool(false)), ((bool(false))) && true))), _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec3(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(bool(false), _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))) && _GLF_IDENTITY(_GLF_IDENTITY((bool(false)), ((bool(false))) && true), (_GLF_IDENTITY((bool(false)), _GLF_IDENTITY(((_GLF_IDENTITY(bool(false), false || (bool(false))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(((_GLF_IDENTITY(bool(false), false || (bool(false))))), (((_GLF_IDENTITY(bool(false), false || (bool(false)))))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), false || (bool(bvec3(_GLF_IDENTITY(((_GLF_IDENTITY(bool(false), false || (bool(false))))), (((_GLF_IDENTITY(bool(false), false || (bool(false)))))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))) && true)) && true))), _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), false), bvec3(bvec3(bvec3(! (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (false))), true && _GLF_IDENTITY((_GLF_IDENTITY(bool(false), (bool(false)) && true)), ((bool(false))) && true))), _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)), false))))))))), false || (bool(bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(bool(false), true && _GLF_IDENTITY((bool(false)), ((bool(false))) && true))), _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec3(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(bool(false), _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))) && _GLF_IDENTITY(_GLF_IDENTITY((bool(false)), ((bool(false))) && true), (_GLF_IDENTITY((bool(false)), _GLF_IDENTITY(((_GLF_IDENTITY(bool(false), false || (bool(false))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(((_GLF_IDENTITY(bool(false), false || (bool(false))))), (((_GLF_IDENTITY(bool(false), false || (bool(false)))))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), false || (bool(bvec3(_GLF_IDENTITY(((_GLF_IDENTITY(bool(false), false || (bool(false))))), (((_GLF_IDENTITY(bool(false), false || (bool(false)))))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))) && true)) && true))), _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), false), bvec3(bvec3(bvec3(! (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (false))), true && _GLF_IDENTITY((_GLF_IDENTITY(bool(false), (bool(false)) && true)), ((bool(false))) && true))), _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)), false)))))))))))))), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(bool(false), true && _GLF_IDENTITY((bool(false)), ((bool(false))) && true))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(bool(false), true && _GLF_IDENTITY((bool(false)), ((bool(false))) && true))), _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec3(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(bool(false), _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))) && _GLF_IDENTITY(_GLF_IDENTITY((bool(false)), ((bool(false))) && true), (_GLF_IDENTITY((bool(false)), _GLF_IDENTITY(((_GLF_IDENTITY(bool(false), false || (bool(false))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(((_GLF_IDENTITY(bool(false), false || (bool(false))))), (((_GLF_IDENTITY(bool(false), false || (bool(false)))))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), false || (bool(bvec3(_GLF_IDENTITY(((_GLF_IDENTITY(bool(false), false || (bool(false))))), (((_GLF_IDENTITY(bool(false), false || (bool(false)))))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))) && true)) && true))), _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), false), bvec3(bvec3(bvec3(! (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (false))), true && _GLF_IDENTITY((_GLF_IDENTITY(bool(false), (bool(false)) && true)), ((bool(false))) && true))), _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)), false)))))))), bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(bool(false), true && _GLF_IDENTITY((bool(false)), ((bool(false))) && true))), _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec3(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(bool(false), _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))) && _GLF_IDENTITY(_GLF_IDENTITY((bool(false)), ((bool(false))) && true), (_GLF_IDENTITY((bool(false)), _GLF_IDENTITY(((_GLF_IDENTITY(bool(false), false || (bool(false))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(((_GLF_IDENTITY(bool(false), false || (bool(false))))), (((_GLF_IDENTITY(bool(false), false || (bool(false)))))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), false || (bool(bvec3(_GLF_IDENTITY(((_GLF_IDENTITY(bool(false), false || (bool(false))))), (((_GLF_IDENTITY(bool(false), false || (bool(false)))))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))) && true)) && true))), _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), false), bvec3(bvec3(bvec3(! (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (false))), true && _GLF_IDENTITY((_GLF_IDENTITY(bool(false), (bool(false)) && true)), ((bool(false))) && true))), _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)), false))))))))), false || (bool(bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(bool(false), true && _GLF_IDENTITY((bool(false)), ((bool(false))) && true))), _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec3(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(bool(false), _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))) && _GLF_IDENTITY(_GLF_IDENTITY((bool(false)), ((bool(false))) && true), (_GLF_IDENTITY((bool(false)), _GLF_IDENTITY(((_GLF_IDENTITY(bool(false), false || (bool(false))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(((_GLF_IDENTITY(bool(false), false || (bool(false))))), (((_GLF_IDENTITY(bool(false), false || (bool(false)))))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), false || (bool(bvec3(_GLF_IDENTITY(((_GLF_IDENTITY(bool(false), false || (bool(false))))), (((_GLF_IDENTITY(bool(false), false || (bool(false)))))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))) && true)) && true))), _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), false), bvec3(bvec3(bvec3(! (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (false))), true && _GLF_IDENTITY((_GLF_IDENTITY(bool(false), (bool(false)) && true)), ((bool(false))) && true))), _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)), false)))))))))))))), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false))))))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(bool(false), true && _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((bool(false)), false || ((bool(false)))), true && (_GLF_IDENTITY((bool(false)), ((bool(false))) || false))), _GLF_IDENTITY(((bool(false))), bool(bvec3(((bool(false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))), bool(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(bool(false), true && _GLF_IDENTITY((bool(false)), _GLF_IDENTITY(((bool(false))), (((bool(false)))) || false) && true)), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(bool(false), true && _GLF_IDENTITY((bool(_GLF_IDENTITY(false, ! (! (false))))), ((bool(false))) && true))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(false), true && _GLF_IDENTITY(_GLF_IDENTITY((bool(false)), ((bool(false))) && true), bool(bvec2(_GLF_IDENTITY((bool(false)), ((bool(false))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), true && _GLF_IDENTITY(_GLF_IDENTITY((bool(false)), ((bool(false))) && true), bool(bvec2(_GLF_IDENTITY((bool(false)), ((bool(false))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (_GLF_IDENTITY(bool(false), true && _GLF_IDENTITY(_GLF_IDENTITY((bool(false)), ((bool(false))) && true), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((bool(false)), ((bool(false))) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((bool(false)), ((bool(false))) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((bool(false)), ((bool(false))) && true), true && (_GLF_IDENTITY((bool(_GLF_IDENTITY(false, ! (! (false))))), ((bool(false))) && true))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && true), false)))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(! (_GLF_IDENTITY(bool(false), true && _GLF_IDENTITY((bool(_GLF_IDENTITY(false, ! (! (false))))), ((bool(false))) && true))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(false), true && _GLF_IDENTITY(_GLF_IDENTITY((bool(false)), ((bool(false))) && true), bool(bvec2(_GLF_IDENTITY((bool(false)), ((bool(false))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), true && _GLF_IDENTITY(_GLF_IDENTITY((bool(false)), ((bool(false))) && true), bool(bvec2(_GLF_IDENTITY((bool(false)), ((bool(false))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (_GLF_IDENTITY(bool(false), true && _GLF_IDENTITY(_GLF_IDENTITY((bool(false)), ((bool(false))) && true), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((bool(false)), ((bool(false))) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((bool(false)), ((bool(false))) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((bool(false)), ((bool(false))) && true), true && (_GLF_IDENTITY((bool(_GLF_IDENTITY(false, ! (! (false))))), ((bool(false))) && true))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && true), false)))))))), true), bvec2(bvec2(bvec2((_GLF_IDENTITY(! (_GLF_IDENTITY(bool(false), true && _GLF_IDENTITY((bool(_GLF_IDENTITY(false, ! (! (false))))), ((bool(false))) && true))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(false), true && _GLF_IDENTITY(_GLF_IDENTITY((bool(false)), ((bool(false))) && true), bool(bvec2(_GLF_IDENTITY((bool(false)), ((bool(false))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), true && _GLF_IDENTITY(_GLF_IDENTITY((bool(false)), ((bool(false))) && true), bool(bvec2(_GLF_IDENTITY((bool(false)), ((bool(false))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (_GLF_IDENTITY(bool(false), true && _GLF_IDENTITY(_GLF_IDENTITY((bool(false)), ((bool(false))) && true), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((bool(false)), ((bool(false))) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((bool(false)), ((bool(false))) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((bool(false)), ((bool(false))) && true), true && (_GLF_IDENTITY((bool(_GLF_IDENTITY(false, ! (! (false))))), ((bool(false))) && true))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && true), false)))))))), true))))), false || (bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(! (_GLF_IDENTITY(bool(false), true && _GLF_IDENTITY((bool(_GLF_IDENTITY(false, ! (! (false))))), ((bool(false))) && true))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(false), true && _GLF_IDENTITY(_GLF_IDENTITY((bool(false)), ((bool(false))) && true), bool(bvec2(_GLF_IDENTITY((bool(false)), ((bool(false))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), true && _GLF_IDENTITY(_GLF_IDENTITY((bool(false)), ((bool(false))) && true), bool(bvec2(_GLF_IDENTITY((bool(false)), ((bool(false))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (_GLF_IDENTITY(bool(false), true && _GLF_IDENTITY(_GLF_IDENTITY((bool(false)), ((bool(false))) && true), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((bool(false)), ((bool(false))) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((bool(false)), ((bool(false))) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((bool(false)), ((bool(false))) && true), true && (_GLF_IDENTITY((bool(_GLF_IDENTITY(false, ! (! (false))))), ((bool(false))) && true))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && true), false)))))))), true), bvec2(bvec2(bvec2((_GLF_IDENTITY(! (_GLF_IDENTITY(bool(false), true && _GLF_IDENTITY((bool(_GLF_IDENTITY(false, ! (! (false))))), ((bool(false))) && true))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(false), true && _GLF_IDENTITY(_GLF_IDENTITY((bool(false)), ((bool(false))) && true), bool(bvec2(_GLF_IDENTITY((bool(false)), ((bool(false))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), true && _GLF_IDENTITY(_GLF_IDENTITY((bool(false)), ((bool(false))) && true), bool(bvec2(_GLF_IDENTITY((bool(false)), ((bool(false))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (_GLF_IDENTITY(bool(false), true && _GLF_IDENTITY(_GLF_IDENTITY((bool(false)), ((bool(false))) && true), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((bool(false)), ((bool(false))) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((bool(false)), ((bool(false))) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((bool(false)), ((bool(false))) && true), true && (_GLF_IDENTITY((bool(_GLF_IDENTITY(false, ! (! (false))))), ((bool(false))) && true))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && true), false)))))))), true)))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), (bool(_GLF_IDENTITY(false, (false) && true))) && true))), (bool(_GLF_IDENTITY(false, (false) && true))) || false), _GLF_IDENTITY(true && _GLF_IDENTITY((bool(false)), ((bool(false))) && _GLF_IDENTITY(true, true && (true))), _GLF_IDENTITY(bool(bvec4(true && _GLF_IDENTITY((bool(false)), ((bool(false))) && _GLF_IDENTITY(true, true && (true))), false, true, false)), (_GLF_IDENTITY(bool(bvec4(true && _GLF_IDENTITY((bool(false)), ((bool(false))) && _GLF_IDENTITY(true, true && (true))), false, true, false)), ! (! (bool(bvec4(true && _GLF_IDENTITY((bool(false)), ((bool(false))) && _GLF_IDENTITY(true, true && (true))), false, true, false)))))) || false)))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(bool(false), true && _GLF_IDENTITY((bool(false)), ((bool(false))) && true))), (! (_GLF_IDENTITY(bool(false), true && _GLF_IDENTITY((bool(false)), ((bool(false))) && true)))) && true), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))))), false), bvec3(bvec4(bvec3(! (_GLF_IDENTITY(bool(false), true && _GLF_IDENTITY((bool(false)), ((bool(false))) && true))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), false), true))))), true, _GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))) || false)) && _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x < injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x < injectionSwitch.y))), bool(bool((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x < injectionSwitch.y))))))), ! (! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x < injectionSwitch.y))), bool(bool((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x < injectionSwitch.y)))))))))))))), (injectionSwitch.x > injectionSwitch.y))), false))))))))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (! (true)), true && (! (! (true)))), _GLF_IDENTITY(true, true && (true))), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(! (! (true)), true && (! (! (true)))), _GLF_IDENTITY(true, true && (true))), false, false)), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(! (! (true)), true && (! (! (true)))), _GLF_IDENTITY(true, true && (true))), false, false))))), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(! (! (true)), true && (! (! (true)))), _GLF_IDENTITY(true, true && (true))), false, false)), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(! (! (true)), true && (! (! (true)))), _GLF_IDENTITY(true, true && (true))), false, false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(! (! (true)), true && (! (! (true)))), _GLF_IDENTITY(true, true && (true))), false, false)), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(! (! (true)), true && (! (! (true)))), _GLF_IDENTITY(true, true && (true))), false, false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))) && (bool(false))), bool(bvec3(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(! (! (true)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (! (true)), true && (! (! (true)))), _GLF_IDENTITY(true, true && (true))), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(! (! (true)), true && (! (! (true)))), _GLF_IDENTITY(true, true && (true))), false, false)), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(! (! (true)), true && (! (! (true)))), _GLF_IDENTITY(true, true && (true))), false, false)))))))), (_GLF_IDENTITY(! (! (true)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (! (true)), true && (! (_GLF_IDENTITY(! (true), (! (true)) && true)))), _GLF_IDENTITY(true, true && (true))), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (! (true)), (! (! (true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (! (_GLF_IDENTITY(! (true), bool(bvec3(! (true), false, true)))))), _GLF_IDENTITY(true, true && (true))), false, false)), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(! (! (true)), true && (_GLF_IDENTITY(! (! (true)), ! (! (_GLF_IDENTITY(! (! (true)), ! (! (! (! (true)))))))))), _GLF_IDENTITY(true, true && (true))), false, false))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && (bool(false))), false, false))))) && true))))) && true))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
       if(_GLF_DEAD(false))
        return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(num_workgroup) : workgroup_base)) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(_GLF_IDENTITY(29297u, 1u * (29297u))) : subgroup_id * subgroup_size))))), 1u * _GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), ~ (~ (_GLF_IDENTITY((subgroup_id * subgroup_size), max((subgroup_id * subgroup_size), (subgroup_id * subgroup_size)))))), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((subgroup_id * subgroup_size), ~ (~ (_GLF_IDENTITY((subgroup_id * subgroup_size), max((subgroup_id * subgroup_size), (subgroup_id * subgroup_size)))))), 0u, 0u, ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u)))), (uvec4(_GLF_IDENTITY((subgroup_id * subgroup_size), ~ (~ (_GLF_IDENTITY((subgroup_id * subgroup_size), max((subgroup_id * subgroup_size), (subgroup_id * subgroup_size)))))), 0u, 0u, ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))))) ^ uvec4(0u, 0u, 0u, 0u))))) + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))))), bool(bvec4(_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) || false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 atomicStore(buf[next_virtual_gid], uint(1), _GLF_IDENTITY(4, ~ (~ (4))), 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! ((false)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_FUZZED(873.099)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), _GLF_IDENTITY((injectionSwitch.x) - 0.0, min((injectionSwitch.x) - 0.0, (injectionSwitch.x) - 0.0)))), bool(true)), clamp(_GLF_IDENTITY(mix(float(_GLF_FUZZED(873.099)), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)), bool(true)), float(mat4(mix(float(_GLF_FUZZED(873.099)), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)), bool(true)), exp(0.0), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (1.0) / 1.0)))), float(_GLF_FUZZED((41.31 * -871.422))), bool(false))), 0.0, 0.0), vec3(0.0, 1.0, 1.0))), 0.0, 0.0, determinant(mat4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, exp(0.0), 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, max(0.0, 0.0)) : _GLF_FUZZED(8.5))), 0.0)), 1.0, 0.0, 1.0, _GLF_IDENTITY(abs(1.0), (_GLF_IDENTITY(abs(1.0), (abs(1.0)) / 1.0)) / abs(1.0)), 0.0, 0.0))), mix(float(_GLF_FUZZED(873.099)), float(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) - 0.0, max((injectionSwitch.x) - 0.0, (injectionSwitch.x) - 0.0)))), bool(true)), _GLF_IDENTITY(mix(float(_GLF_IDENTITY(_GLF_FUZZED(873.099), (_GLF_IDENTITY(_GLF_FUZZED(873.099), min(_GLF_FUZZED(873.099), _GLF_FUZZED(873.099)))) / 1.0)), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)), bool(true)), (mix(float(_GLF_IDENTITY(_GLF_FUZZED(873.099), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(873.099), min(_GLF_FUZZED(873.099), _GLF_FUZZED(873.099))), (_GLF_IDENTITY(_GLF_FUZZED(873.099), min(_GLF_FUZZED(873.099), _GLF_FUZZED(873.099)))) - 0.0)) / 1.0)), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)), bool(true))) / 1.0)))) > _GLF_IDENTITY(injectionSwitch, vec2(vec3(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), 0.0))).y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0), transpose(_GLF_IDENTITY(transpose(mat4(injectionSwitch, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0)), (true ? transpose(mat4(injectionSwitch, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0)) : _GLF_FUZZED(mat4(74.85, 363.719, 4.9, -624.712, 4.5, 71.62, 8041.0721, 785.061, -258.228, -64.39, 4337.7002, -54.24, -9.1, 6358.1839, -8.1, -9571.1454)))))))).y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           barrier();
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), bool(bool(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))))))))
          return;
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true))), false, false)), bool(bvec2(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true))), false, false)), false || (bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true))), false, false)))), true))))), false || (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true))), false, false)))))))))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           return;
          }
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), false)), ! (! (bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), false))))))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, true)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, true)), true && (bool(bvec3(_GLF_DEAD(false), false, true)))), false)), bool(bvec3(bool(bvec2(_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, true)), true && (bool(bvec3(_GLF_DEAD(false), false, true)))), false)), false, true)))))) && _GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(bvec2(true, true), true))))), true)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))))
          return;
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), ! (! (! (_GLF_DEAD(false))))))))
        return;
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, 0.0, 0.0, 1.0, 0.0, 1.0), mat2x3(mat3x4(mat2x3(injectionSwitch.x, 0.0, 0.0, 1.0, 0.0, 1.0)))))), log(1.0), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, sin(0.0), sqrt(0.0), 1.0))) > injectionSwitch.y))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(false, false || (false))))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(8131.0999) : injectionSwitch.y))) || false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))))), (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), bool(bvec4(! ((false)), false, false, false))))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (_GLF_IDENTITY(true && (false), ! (! (true && (false))))) || false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), false || (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))))) && true))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-933.722)), bool(false))), injectionSwitch.y, injectionSwitch.y))))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))))) || false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 atomicStore(checker[virtual_gid], _GLF_IDENTITY(read, (read) / _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))), 4, _GLF_IDENTITY(64, 0 + (64)), 4);
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(2.8) : injectionSwitch.x)), sqrt(0.0), 1.0, length(log(vec4(1.0, 1.0, 1.0, 1.0))), 0.0, 1.0, 1.0, 0.0), transpose(_GLF_IDENTITY(transpose(mat4x2(_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(2.8) : injectionSwitch.x)), sqrt(0.0), 1.0, length(log(vec4(1.0, 1.0, 1.0, 1.0))), 0.0, 1.0, 1.0, 0.0)), (transpose(mat4x2(_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(2.8) : injectionSwitch.x)), sqrt(0.0), 1.0, length(log(vec4(1.0, 1.0, 1.0, 1.0))), 0.0, 1.0, 1.0, 0.0))) + mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))) > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) || false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
