#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))))))), true && (_GLF_IDENTITY(false, ! (! (false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(mat4x2(6.0, -513.396, -23.65, -617.973, 25.68, -6.7, 61.48, 76.27)[3]))).y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))) || false)))) && true)), bool(bvec2(bool(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) && true)), _GLF_IDENTITY(true, (true) && true))))))))), false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))), ! (! (! ((injectionSwitch.x > injectionSwitch.y)))))) && true)), bool(bvec2(bool(_GLF_IDENTITY(! _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4(injectionSwitch.x, 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)) : _GLF_FUZZED(7.7))), sqrt(1.0), 1.0, 0.0, 1.0, 1.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(mat2x3(1.0, abs(0.0), _GLF_IDENTITY(dot(vec2(1.0, tan(0.0)), vec2(1.0, sin(0.0))), dot(vec2(1.0, tan(0.0)), vec2(1.0, sin(0.0)))), 1.0, 1.0, 1.0))))), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, 1.0, 1.0, 0.0)), max(float(mat2(1.0, 1.0, 1.0, 0.0)), float(mat2(1.0, 1.0, 1.0, 0.0))))))), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-944.181) : _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(58.32))))), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0))), (false ? _GLF_FUZZED(mat4(-9.4, _GLF_IDENTITY(36.28, mix(float(_GLF_FUZZED(932.288)), float(_GLF_IDENTITY(36.28, min(36.28, 36.28))), bool(true))), -3.2, 95.22, -65.61, 2218.7448, -659.192, 4.9, -8.8, 93.48, 8954.1989, -3601.5375, -767.879, 411.355, 1.5, 752.208)) : mat4(injectionSwitch.x, 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 1.0, 1.0, sqrt(1.0), 1.0, 0.0, 1.0, 1.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, round(_GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), mix(float(_GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), min(length(normalize(vec2(1.0, 1.0))), length(normalize(vec2(1.0, 1.0)))))), float(_GLF_FUZZED((-52.72))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), determinant(mat4(1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(190.466)), bool(false))), 0.0))), float(_GLF_FUZZED(-3.0)), bool(false))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0))), 1.0, 1.0, 1.0)))))), (_GLF_IDENTITY(float(_GLF_IDENTITY(mat4(injectionSwitch.x, 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)) : _GLF_FUZZED(7.7))), sqrt(1.0), 1.0, 0.0, 1.0, 1.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0))), (false ? _GLF_FUZZED(mat4(-9.4, _GLF_IDENTITY(36.28, mix(float(_GLF_FUZZED(932.288)), float(36.28), bool(true))), -3.2, 95.22, -65.61, 2218.7448, -659.192, 4.9, -8.8, 93.48, 8954.1989, -3601.5375, -767.879, 411.355, 1.5, 752.208)) : mat4(injectionSwitch.x, 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 1.0, 1.0, sqrt(1.0), 1.0, 0.0, 1.0, 1.0, 1.0, determinant(_GLF_IDENTITY(mat4(1.0, 0.0, 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0), (mat4(1.0, 0.0, 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), determinant(mat4(1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)))))), max(float(_GLF_IDENTITY(mat4(injectionSwitch.x, 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)) : _GLF_FUZZED(7.7))), sqrt(1.0), 1.0, 0.0, 1.0, 1.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), determinant(mat4(1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) / 1.0), 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0))), (false ? _GLF_FUZZED(mat4(-9.4, _GLF_IDENTITY(36.28, mix(float(_GLF_FUZZED(932.288)), float(36.28), bool(true))), -3.2, 95.22, -65.61, 2218.7448, -659.192, 4.9, -8.8, 93.48, 8954.1989, -3601.5375, -767.879, 411.355, 1.5, 752.208)) : mat4(injectionSwitch.x, 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 1.0, 1.0, sqrt(1.0), 1.0, 0.0, 1.0, 1.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)))))), float(_GLF_IDENTITY(mat4(injectionSwitch.x, 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)) : _GLF_FUZZED(7.7))), sqrt(1.0), 1.0, 0.0, 1.0, 1.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0))), (false ? _GLF_FUZZED(mat4(-9.4, _GLF_IDENTITY(36.28, _GLF_IDENTITY(mix(float(_GLF_FUZZED(932.288)), float(36.28), bool(true)), mix(float(_GLF_FUZZED(8104.8851)), float(mix(float(_GLF_FUZZED(932.288)), float(36.28), bool(true))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), -3.2, _GLF_IDENTITY(95.22, clamp(95.22, 95.22, _GLF_IDENTITY(95.22, mix(float(_GLF_FUZZED(2.0)), float(95.22), bool(true))))), -65.61, 2218.7448, -659.192, _GLF_IDENTITY(4.9, (4.9) - 0.0), -8.8, 93.48, 8954.1989, -3601.5375, -767.879, 411.355, 1.5, 752.208)) : mat4(injectionSwitch.x, 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 1.0, 1.0, sqrt(1.0), 1.0, 0.0, 1.0, 1.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(56.15)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0, 0.0, 1.0, 1.0, 1.0))))))))) / 1.0)) > injectionSwitch.y)), bool(bvec3(((_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4(injectionSwitch.x, 0.0, 1.0, sqrt(0.0), 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 1.0, sqrt(1.0), 1.0, 0.0, 1.0, 1.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(716.731) : 1.0)), 1.0))))), (false ? _GLF_FUZZED(mat4(-9.4, _GLF_IDENTITY(36.28, clamp(36.28, 36.28, 36.28)), -3.2, 95.22, -65.61, 2218.7448, -659.192, 4.9, -8.8, 93.48, 8954.1989, -3601.5375, -767.879, 411.355, 1.5, 752.208)) : mat4(injectionSwitch.x, 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 1.0, 1.0, sqrt(1.0), 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0))))))) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), false, false))), (! _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), bool(bool(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))))) && true)), true))))))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) && true)), bool(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), bool(bool(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))))), _GLF_IDENTITY(true, (true) && true))))))))), false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), ! (! (! ((injectionSwitch.x > injectionSwitch.y)))))) && true)), bool(bvec2(bool(_GLF_IDENTITY(! _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4(injectionSwitch.x, 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)) : _GLF_FUZZED(7.7))), sqrt(1.0), 1.0, 0.0, 1.0, 1.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0))), (false ? _GLF_FUZZED(mat4(-9.4, _GLF_IDENTITY(36.28, mix(_GLF_IDENTITY(float(_GLF_FUZZED(932.288)), min(float(_GLF_FUZZED(932.288)), float(_GLF_FUZZED(932.288)))), _GLF_IDENTITY(float(36.28), max(float(36.28), float(36.28))), bool(true))), -3.2, 95.22, -65.61, 2218.7448, -659.192, 4.9, -8.8, 93.48, 8954.1989, -3601.5375, -767.879, 411.355, 1.5, 752.208)) : mat4(injectionSwitch.x, 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 1.0, 1.0, sqrt(1.0), 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(2.6)))) - 0.0), 1.0, 1.0)), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), determinant(mat4(1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-2759.2160) : 0.0)), 1.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)), mat2(1.0) * (mat3x2(_GLF_IDENTITY(0.0, (_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))) ? _GLF_FUZZED(-2759.2160) : 0.0)), 1.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))))), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)))))), (_GLF_IDENTITY(float(_GLF_IDENTITY(mat4(injectionSwitch.x, 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-52.78)), float(1.0), bool(true)))) / 1.0), 1.0)))) : _GLF_FUZZED(7.7))), sqrt(1.0), 1.0, 0.0, 1.0, 1.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0))))), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0))), (false ? _GLF_FUZZED(mat4(-9.4, _GLF_IDENTITY(36.28, mix(float(_GLF_FUZZED(932.288)), float(36.28), bool(true))), _GLF_IDENTITY(-3.2, clamp(_GLF_IDENTITY(-3.2, max(-3.2, -3.2)), -3.2, -3.2)), 95.22, -65.61, 2218.7448, -659.192, 4.9, -8.8, 93.48, 8954.1989, -3601.5375, -767.879, 411.355, 1.5, 752.208)) : mat4(injectionSwitch.x, 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 1.0, 1.0, sqrt(1.0), 1.0, 0.0, 1.0, 1.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(vec2(0.0, 1.0))), 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-73.76)), float(0.0), bool(true))))))), round(length(normalize(vec2(1.0, 1.0)))), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(603.446) : _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(2.3) : 1.0)), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)))))), max(float(_GLF_IDENTITY(mat4(injectionSwitch.x, 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((true ? _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)) : _GLF_FUZZED(7.7)), clamp((true ? _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)) : _GLF_FUZZED(7.7)), (true ? _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)) : _GLF_FUZZED(7.7)), (true ? _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)) : _GLF_FUZZED(7.7))))), sqrt(1.0), 1.0, 0.0, 1.0, 1.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0))), (false ? _GLF_FUZZED(mat4(-9.4, _GLF_IDENTITY(36.28, mix(float(_GLF_FUZZED(932.288)), float(36.28), _GLF_IDENTITY(bool(true), ! (! (bool(true)))))), -3.2, 95.22, _GLF_IDENTITY(-65.61, clamp(_GLF_IDENTITY(-65.61, (-65.61) / 1.0), -65.61, -65.61)), 2218.7448, -659.192, _GLF_IDENTITY(4.9, (4.9) / 1.0), -8.8, 93.48, _GLF_IDENTITY(8954.1989, 1.0 * (8954.1989)), -3601.5375, -767.879, 411.355, 1.5, 752.208)) : mat4(injectionSwitch.x, 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 1.0, 1.0, sqrt(1.0), 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 1.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, round(_GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), min(length(normalize(vec2(1.0, 1.0))), length(normalize(vec2(1.0, 1.0)))))), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, 1.0, 1.0, 0.0, sqrt(0.0), sin(_GLF_ZERO(0.0, injectionSwitch.x)), 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-6.3)), float(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(6828.4156)), bool(false)))), bool(true))), 0.0, abs(sin(0.0)), 1.0))), 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-10.55))))), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), 1.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(determinant(mat4(1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), 1.0, 1.0)), float(float(dot(vec3(0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(8863.5367)), float(0.0), bool(true))))), 0.0), vec3(determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), 1.0, 1.0)))))) + (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 1.0, 1.0)))))), float(_GLF_IDENTITY(mat4(injectionSwitch.x, 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)) : _GLF_FUZZED(7.7))), sqrt(1.0), 1.0, 0.0, 1.0, 1.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0, round(_GLF_IDENTITY(length(normalize(_GLF_IDENTITY(vec2(1.0, 1.0), vec2(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) + tan(vec2(0.0, 0.0))), 0.0, length(vec3(0.0, 0.0, 0.0)), abs(1.0), 0.0), mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat2x3(_GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) + tan(vec2(0.0, 0.0))), 0.0, length(vec3(0.0, 0.0, 0.0)), abs(1.0), 0.0))))))), (length(normalize(vec2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0)))) / 1.0), 1.0)))) / 1.0)), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0))), (false ? _GLF_FUZZED(mat4(-9.4, _GLF_IDENTITY(36.28, mix(float(_GLF_FUZZED(932.288)), float(36.28), bool(true))), -3.2, 95.22, -65.61, 2218.7448, -659.192, 4.9, _GLF_IDENTITY(-8.8, max(-8.8, -8.8)), 93.48, 8954.1989, -3601.5375, -767.879, 411.355, 1.5, 752.208)) : mat4(injectionSwitch.x, 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 1.0, 1.0, sqrt(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-6.8))), 0.0, 1.0, 1.0), mat4(1.0) * (vec4(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-6.8))), 0.0, 1.0, 1.0))))), 1.0))), 1.0, 0.0, 1.0, 1.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0))))))))) / 1.0)) > injectionSwitch.y)), bool(bvec3(((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4(injectionSwitch.x, 0.0, 1.0, sqrt(0.0), 0.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x3(1.0, 1.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, log(1.0), 0.0, 1.0, cos(0.0), 1.0, 0.0)), (float(mat4x3(1.0, 1.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, log(1.0), 0.0, 1.0, cos(0.0), 1.0, 0.0))) + 0.0)), 1.0, sqrt(1.0), 1.0, 0.0, 1.0, 1.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-2.9) : 0.0)) + (1.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), determinant(mat4(1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(_GLF_IDENTITY(716.731, max(716.731, 716.731))) : 1.0)), 1.0))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, true)))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, true)))), (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, true))))) && true), true)))) ? _GLF_FUZZED(mat4(-9.4, 36.28, -3.2, 95.22, -65.61, 2218.7448, -659.192, 4.9, -8.8, 93.48, 8954.1989, -3601.5375, -767.879, 411.355, 1.5, 752.208)) : mat4(injectionSwitch.x, 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 1.0, 1.0, sqrt(1.0), 1.0, 0.0, 1.0, 1.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, _GLF_IDENTITY(0.0, (0.0) / determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)))))), min(float(_GLF_IDENTITY(mat4(injectionSwitch.x, 0.0, 1.0, sqrt(0.0), 0.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x3(1.0, 1.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, log(1.0), 0.0, 1.0, cos(0.0), 1.0, 0.0)), (float(mat4x3(1.0, 1.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, log(1.0), 0.0, 1.0, cos(0.0), 1.0, 0.0))) + 0.0)), 1.0, sqrt(1.0), 1.0, 0.0, 1.0, 1.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-2.9) : 0.0)) + (1.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), determinant(mat4(1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(_GLF_IDENTITY(716.731, max(716.731, 716.731))) : 1.0)), 1.0))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, true)))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, true)))), (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, true))))) && true), true)))) ? _GLF_FUZZED(mat4(-9.4, 36.28, -3.2, 95.22, -65.61, 2218.7448, -659.192, 4.9, -8.8, 93.48, 8954.1989, -3601.5375, -767.879, 411.355, 1.5, 752.208)) : mat4(injectionSwitch.x, 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 1.0, 1.0, sqrt(1.0), 1.0, 0.0, 1.0, 1.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, _GLF_IDENTITY(0.0, (0.0) / determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)))))), float(_GLF_IDENTITY(mat4(injectionSwitch.x, 0.0, 1.0, sqrt(0.0), 0.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x3(1.0, 1.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, log(1.0), 0.0, 1.0, cos(0.0), 1.0, 0.0)), (float(mat4x3(1.0, 1.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, log(1.0), 0.0, 1.0, cos(0.0), 1.0, 0.0))) + 0.0)), 1.0, sqrt(1.0), 1.0, 0.0, 1.0, 1.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-2.9) : 0.0)) + (1.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), determinant(mat4(1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(_GLF_IDENTITY(716.731, max(716.731, 716.731))) : 1.0)), 1.0))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, true)))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, true)))), (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, true))))) && true), true)))) ? _GLF_FUZZED(mat4(-9.4, 36.28, -3.2, 95.22, -65.61, 2218.7448, -659.192, 4.9, -8.8, 93.48, 8954.1989, -3601.5375, -767.879, 411.355, 1.5, 752.208)) : mat4(injectionSwitch.x, 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 1.0, 1.0, sqrt(1.0), 1.0, 0.0, 1.0, 1.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, _GLF_IDENTITY(0.0, (0.0) / determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0))))))))) > injectionSwitch.y)), false, false))), _GLF_IDENTITY((! _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), bool(bool(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))))) && true, ! (_GLF_IDENTITY(! ((! _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), bool(bool(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))))) && true), false || (_GLF_IDENTITY(! ((! _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), bool(bool(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))))) && true), false || (! ((! _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), bool(bool(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))))) && true))))))))), true)))))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(1746.9932)), bool(false)))))) + 0.0)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-437.045)))) / 1.0), injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bool(false))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), false || (_GLF_IDENTITY(false, bool(bool(false)))))) || false))))), ! (! (! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bool(false))))))))))) || false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ! (! ((! (injectionSwitch.x > injectionSwitch.y))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_IDENTITY(false, ! (! (false))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(238.524, 18.19)))).x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), max(_GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), (false ? _GLF_FUZZED(0.7) : min(injectionSwitch.x, injectionSwitch.x))), _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), (min(injectionSwitch.x, injectionSwitch.x)) + 0.0)))), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(1.8))))), (injectionSwitch.x) / 1.0), injectionSwitch.x)) > injectionSwitch.y)))) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)), (bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))) || false)))) && _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! _GLF_IDENTITY((bool(true)), ! (_GLF_IDENTITY(! ((bool(true))), false || (! ((bool(true))))))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! (! (false || (false)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y)), false, true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))), true && (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))), true, false, false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))) + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, _GLF_IDENTITY(4, max(_GLF_IDENTITY(4, clamp(4, 4, 4)), 4)));
 if(_GLF_DEAD(false))
  barrier();
 uint read = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, 0u + (_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid))))], 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), _GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! (! (false)), true && (! (_GLF_IDENTITY(! (false), bool(bool(! _GLF_IDENTITY((false), true && ((false)))))))))), ((_GLF_IDENTITY(! (! (false)), true && (! (_GLF_IDENTITY(! (false), bool(bool(! _GLF_IDENTITY((false), true && ((false))))))))))) && true), (! _GLF_IDENTITY((_GLF_IDENTITY(! (! (false)), true && (! (_GLF_IDENTITY(! (false), bool(bool(! _GLF_IDENTITY(_GLF_IDENTITY((false), true && ((false))), (_GLF_IDENTITY((false), true && ((false)))) && true)))))))), ((_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))))), true && (! (_GLF_IDENTITY(! (false), bool(bool(! _GLF_IDENTITY((false), true && ((false))))))))))) && true)) && true))), ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, false)))))) && true)), ! (! (! (_GLF_IDENTITY(false, ! (! (false))))))))) || false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))))))))))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(checker[virtual_gid], read, 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)) || false)))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
