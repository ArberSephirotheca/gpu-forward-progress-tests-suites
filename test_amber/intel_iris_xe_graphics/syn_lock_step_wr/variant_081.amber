#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_4 {
 uint read;
 mat4x3 _f0;
} ;

struct _GLF_struct_2 {
 mat3x4 _f0;
 bvec2 _f1;
 uint _f2;
 uvec4 _f3;
 bool _f4;
 mat3x2 _f5;
} ;

struct _GLF_struct_1 {
 int _f0;
 uvec3 _f1;
 uvec3 _f2;
 mat2x3 _f3;
 bvec4 _f4;
 ivec3 _f5;
} ;

struct _GLF_struct_3 {
 vec2 _f0;
 _GLF_struct_1 _f1;
 _GLF_struct_2 _f2;
 vec3 _f3;
 bool _f4;
} ;

struct _GLF_struct_5 {
 mat4x2 _f0;
 _GLF_struct_3 _f1;
 vec4 _f2;
 mat4 _f3;
 ivec3 _f4;
 _GLF_struct_4 _f5;
} ;

struct _GLF_struct_0 {
 uint workgroup_id;
 ivec4 _f0;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-2.7)), float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), bool(true))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-2.7)), float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), bool(true))) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), false))))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! _GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), false || ((false))))) || _GLF_IDENTITY((false), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && true))) && (_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec3(bvec2((false), true), true)))))))))), false || (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false || (false), ! (! (false || (false)))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(false || (_GLF_IDENTITY(false, ! (! (false)))), ! (! (false || (false)))), false), false))))))), _GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(false, false || (false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, false || (false)))), true && (bool(bool(_GLF_IDENTITY(false, false || (false))))))), false || _GLF_IDENTITY((bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (false))), ! (! (bool(_GLF_IDENTITY(false, false || (false))))))))), bool(bool(_GLF_IDENTITY((bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (false))), ! (! (bool(_GLF_IDENTITY(false, false || (false))))))))), ! (! ((bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (false))), ! (! (bool(_GLF_IDENTITY(false, false || (false))))))))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, false || (false)))), true && (bool(bool(_GLF_IDENTITY(false, false || (false))))))), false || (bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (false))), ! (! (bool(_GLF_IDENTITY(false, false || (false))))))))))), (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, false || (false)))), _GLF_IDENTITY(true && (bool(bool(_GLF_IDENTITY(false, false || (false))))), ! (_GLF_IDENTITY(! (true && (bool(bool(_GLF_IDENTITY(false, false || (false)))))), ! (! (! (true && (bool(bool(_GLF_IDENTITY(false, false || (false))))))))))))), false || (bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (false))), ! (! (bool(_GLF_IDENTITY(false, false || (false)))))))))))) && true))))))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) && true)) || (false)))), false || (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), (_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec2((false), false)), _GLF_IDENTITY((bool(bvec2((false), false))), ! (! ((bool(bvec2((false), false)))))) && true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), ! (! (bool(bool(bool(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), (_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec2((false), false)), _GLF_IDENTITY((bool(bvec2((false), false))), ! (! ((bool(bvec2((false), false)))))) && true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), ! (! (_GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(false, false || (false))))), false || (bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), false || (_GLF_IDENTITY(false, false || (false))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (false))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(false, false || (false)))), false || (! (bool(_GLF_IDENTITY(false, false || (false))))))))) || false))))))))))))), true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (false))) || (false)))), false || (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) && true) || (false))), _GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), (_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec2((false), false)), (bool(bvec2((false), false))) && true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), ! (! (_GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4(! (_GLF_IDENTITY(false, ! (! (false)))), false, false, true))))))))))))), _GLF_IDENTITY(false || (bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (false))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (false))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(false, false || (false)))), false || (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (false))), true && (bool(_GLF_IDENTITY(false, false || (false))))))))))) || false)))), bool(bool(false || (bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (false))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (false))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(false, false || (false)))), false || _GLF_IDENTITY((! (bool(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ((false)) && true))))), bool(bvec2((! (bool(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ((false)) && true))))), true))))))) || false)))))))))))))))))), true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), ! (! (! _GLF_IDENTITY((false), ((false)) && true))))))))) || (_GLF_IDENTITY(false, (false) || false))))), _GLF_IDENTITY(false || (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))) || _GLF_IDENTITY((false), bool(bvec4((false), _GLF_IDENTITY(true, ! (! (true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), ! (! (_GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(false, false || (false))))), false || (bool(bool(bool(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))))))))))))), true && (false || (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))) || _GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY((false), true && ((false))), true, false, true)))))), _GLF_IDENTITY(true, ! (! (true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), ! (! (_GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(false, false || (false))))), false || (bool(bool(bool(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))))))))))))))))))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
    return;
   return;
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups.x), _GLF_IDENTITY(((gl_NumWorkGroups.x)), (((gl_NumWorkGroups.x))) | (((gl_NumWorkGroups.x)))) >> (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) | (gl_NumWorkGroups.x), (false ? _GLF_FUZZED(173842u) : (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x)));
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), (injectionSwitch[0]) * 1.0), 1.0 * (injectionSwitch[0])), injectionSwitch[1])).y, 1.0, 1.0, 0.0)), _GLF_IDENTITY(clamp(_GLF_IDENTITY(float(vec4(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], 1.0 * (injectionSwitch[0])), injectionSwitch[1])).y, 1.0, 1.0, 0.0)), (false ? _GLF_FUZZED(_GLF_IDENTITY(-28.95, float(float(-28.95)))) : float(vec4(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[0], 1.0 * (injectionSwitch[0])), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(59.53) : _GLF_IDENTITY(injectionSwitch[0], 1.0 * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))[0])))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) - abs(0.0))))[1])).y, 1.0, 1.0, 0.0)))), float(vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), vec2(_GLF_IDENTITY(injectionSwitch[0], 1.0 * (injectionSwitch[0])), injectionSwitch[1])).y, 1.0, 1.0, 0.0)), _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], 1.0 * (injectionSwitch[0])), injectionSwitch[1])).y, 1.0, 1.0, 0.0)), float(mat3x4(float(vec4(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY(1.0 * (injectionSwitch[0]), 0.0 + (1.0 * (injectionSwitch[0])))), injectionSwitch[1])).y, 1.0, 1.0, 0.0)), 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), round(length(normalize(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), max(vec4(1.0, 1.0, 1.0, 1.0), vec4(1.0, 1.0, 1.0, 1.0)))))), 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), (determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))) + _GLF_IDENTITY(dot(vec4(0.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0), vec4(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0))), log(1.0))), dot(vec4(0.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0), vec4(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0))), log(1.0))))))))), min(clamp(_GLF_IDENTITY(float(vec4(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], 1.0 * (injectionSwitch[0])), injectionSwitch[1])).y, 1.0, 1.0, 0.0)), (false ? _GLF_FUZZED(_GLF_IDENTITY(-28.95, float(float(-28.95)))) : float(vec4(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[0], 1.0 * (injectionSwitch[0])), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(59.53) : _GLF_IDENTITY(injectionSwitch[0], 1.0 * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))[0])))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) - abs(0.0))))[1])).y, 1.0, 1.0, 0.0)))), float(vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), vec2(_GLF_IDENTITY(injectionSwitch[0], 1.0 * (injectionSwitch[0])), injectionSwitch[1])).y, 1.0, 1.0, 0.0)), _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], 1.0 * (injectionSwitch[0])), injectionSwitch[1])).y, 1.0, 1.0, 0.0)), float(mat3x4(float(vec4(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY(1.0 * (injectionSwitch[0]), 0.0 + (1.0 * (injectionSwitch[0])))), injectionSwitch[1])).y, 1.0, 1.0, 0.0)), 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), round(length(normalize(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), max(vec4(1.0, 1.0, 1.0, 1.0), vec4(1.0, 1.0, 1.0, 1.0)))))), 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), (determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))) + _GLF_IDENTITY(dot(vec4(0.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0), vec4(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0))), log(1.0))), dot(vec4(0.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0), vec4(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0))), log(1.0))))))))), clamp(_GLF_IDENTITY(float(vec4(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], 1.0 * (injectionSwitch[0])), injectionSwitch[1])).y, 1.0, 1.0, 0.0)), (false ? _GLF_FUZZED(_GLF_IDENTITY(-28.95, float(float(-28.95)))) : float(vec4(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[0], 1.0 * (injectionSwitch[0])), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(59.53) : _GLF_IDENTITY(injectionSwitch[0], 1.0 * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))[0])))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) - abs(0.0))))[1])).y, 1.0, 1.0, 0.0)))), float(vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), vec2(_GLF_IDENTITY(injectionSwitch[0], 1.0 * (injectionSwitch[0])), injectionSwitch[1])).y, 1.0, 1.0, 0.0)), _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], 1.0 * (injectionSwitch[0])), injectionSwitch[1])).y, 1.0, 1.0, 0.0)), float(mat3x4(float(vec4(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY(1.0 * (injectionSwitch[0]), 0.0 + (1.0 * (injectionSwitch[0])))), injectionSwitch[1])).y, 1.0, 1.0, 0.0)), 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), round(length(normalize(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), max(vec4(1.0, 1.0, 1.0, 1.0), vec4(1.0, 1.0, 1.0, 1.0)))))), 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), (determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))) + _GLF_IDENTITY(dot(vec4(0.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0), vec4(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0))), log(1.0))), dot(vec4(0.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0), vec4(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0))), log(1.0)))))))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, determinant(mat3(1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 0.0, 1.0)), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))), 1.0, sqrt(round(length(normalize(vec3(1.0, 1.0, 1.0))))), length(0.0), 0.0, 1.0, sin(0.0))), mat2(1.0) * (vec2(mat4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, determinant(mat3(1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 0.0, 1.0)), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))), 1.0, sqrt(round(length(normalize(vec3(1.0, 1.0, 1.0))))), length(0.0), 0.0, 1.0, sin(0.0)))))).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 _GLF_struct_0 _GLF_struct_replacement_0 = _GLF_struct_0(_GLF_IDENTITY(gl_WorkGroupID, (false ? _GLF_FUZZED(uvec3(6248u, 46717u, 83414u)) : _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | _GLF_IDENTITY((gl_WorkGroupID), (_GLF_IDENTITY((gl_WorkGroupID), (_GLF_IDENTITY((gl_WorkGroupID), ((gl_WorkGroupID)) * uvec3(1u, 1u, 1u))) ^ uvec3(0u, 0u, 0u))) >> (uvec3(23214u, 121545u, 148129u) & uvec3(0u, 0u, 0u)))))).x, ivec4(1));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, tan(0.0) + (injectionSwitch.x))) * exp(0.0)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = workgroup_size * _GLF_struct_replacement_0.workgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))) || false)))) && true)))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), ~ (~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size))))))))) | 0u), (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) | 0u)) / 1u) + subgroup_local_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), false || (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, false, false)))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), bool(bvec4(bool(bool(injectionSwitch.x > injectionSwitch.y)), false, false, true))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u), (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, _GLF_IDENTITY(0u, uint(uvec2(0u, ((_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(0u), uint(0u)), (uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(0u), uint(0u))) >> (1u ^ 1u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))))))))) | 0u)) | (subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))), clamp((_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), ~ (~ (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))))))))), (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))))) | 0u)) | (subgroup_size)), 0u ^ (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) | 0u), 0u + (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) | 0u)))) | (subgroup_size))))) / 1u), clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uvec2(0u, 1u))), (_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, min(0u, 0u))))) << (0u ^ 0u)), 0u), (uvec3(subgroup_size, 0u, 0u)) - uvec3(0u, 0u, 0u))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(subgroup_size, 0u, 0u), (uvec3(subgroup_size, 0u, 0u)) - uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(uvec3(subgroup_size, 0u, 0u), _GLF_IDENTITY((uvec3(subgroup_size, 0u, 0u)) - uvec3(0u, 0u, 0u), min((uvec3(subgroup_size, 0u, 0u)) - uvec3(0u, 0u, 0u), _GLF_IDENTITY((uvec3(subgroup_size, 0u, 0u)) - uvec3(0u, 0u, 0u), ((uvec3(subgroup_size, 0u, 0u)) - uvec3(0u, 0u, 0u)) >> uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) ^ 0u), 0u)))))) >> (_GLF_IDENTITY(uvec3(111806u, 101065u, 37407u) & uvec3(0u, 0u, 0u), max(uvec3(111806u, 101065u, 37407u) & uvec3(0u, 0u, 0u), uvec3(111806u, 101065u, 37407u) & uvec3(0u, 0u, 0u))))))) / 1u))) | (subgroup_size)), min(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) << 0u, ((subgroup_size) << 0u) | ((subgroup_size) << 0u)))))) | (subgroup_size)), _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))), _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))) + ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u) + 1, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u) + 1, ~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u) + 1))), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u) + 1, ~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u) + 1))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u) + 1, ~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u) + 1)))) / 1u), 1u)))) | 0u), (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) >> _GLF_IDENTITY(0, ~ (~ (0)))))), (_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(num_workgroup, (_GLF_IDENTITY(num_workgroup, (num_workgroup) / 1u)) | (_GLF_IDENTITY(num_workgroup, (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) : num_workgroup))))), ~ (~ (_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(num_workgroup, (_GLF_IDENTITY(num_workgroup, (num_workgroup) / 1u)) | (_GLF_IDENTITY(num_workgroup, (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) : num_workgroup))))), max(_GLF_FUZZED(_GLF_IDENTITY(num_workgroup, (_GLF_IDENTITY(num_workgroup, (num_workgroup) / 1u)) | (_GLF_IDENTITY(num_workgroup, (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) : num_workgroup))))), _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, (_GLF_IDENTITY(num_workgroup, (num_workgroup) / 1u)) | (_GLF_IDENTITY(num_workgroup, (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) : num_workgroup)))))))))) : _GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id + 1, max(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)) + 1, subgroup_local_id + 1)), subgroup_local_id + 1)), (true ? false ? _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, (_GLF_IDENTITY(num_workgroup, (num_workgroup) / 1u)) | (_GLF_IDENTITY(num_workgroup, (false ? _GLF_FUZZED(subgroup_local_id) : num_workgroup))))) : _GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, clamp(1, 1, 1)), max(subgroup_local_id + 1, subgroup_local_id + 1)), subgroup_local_id + 1)) : _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(packSnorm2x16(_GLF_IDENTITY(vec2(-1.1, -879.506), min(vec2(-1.1, -879.506), vec2(_GLF_IDENTITY(-1.1, max(-1.1, -1.1)), _GLF_IDENTITY(-879.506, float(mat2(_GLF_IDENTITY(-879.506, clamp(-879.506, -879.506, -879.506)), 0.0, sqrt(1.0), 1.0))))))), max(_GLF_IDENTITY(packSnorm2x16(_GLF_IDENTITY(vec2(-1.1, _GLF_IDENTITY(-879.506, mix(float(-879.506), float(_GLF_FUZZED(-744.862)), bool(false)))), min(vec2(-1.1, -879.506), vec2(-1.1, -879.506)))), 0u | (packSnorm2x16(_GLF_IDENTITY(vec2(-1.1, -879.506), min(vec2(-1.1, -879.506), vec2(-1.1, -879.506)))))), packSnorm2x16(_GLF_IDENTITY(vec2(-1.1, -879.506), min(vec2(-1.1, -879.506), vec2(-1.1, -879.506)))))), (_GLF_IDENTITY(packSnorm2x16(_GLF_IDENTITY(vec2(-1.1, -879.506), (_GLF_IDENTITY(vec2(-1.1, -879.506), clamp(_GLF_IDENTITY(_GLF_IDENTITY(vec2(-1.1, -879.506), (true ? vec2(-1.1, -879.506) : _GLF_FUZZED(vec2(14.32, 3461.7642)))), mat2(1.0) * (_GLF_IDENTITY(vec2(-1.1, -879.506), (true ? vec2(-1.1, -879.506) : _GLF_FUZZED(vec2(14.32, 3461.7642)))))), vec2(-1.1, -879.506), vec2(-1.1, -879.506)))) + log(vec2(1.0, 1.0)))), (packSnorm2x16(vec2(-1.1, -879.506))) / 1u)) | (41353u & 0u)))))))) | (_GLF_IDENTITY((0u ^ 1u) ^ 1u, clamp(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | 0u, ((0u) | 0u) | 0u)), _GLF_IDENTITY(0u, ~ (~ (0u)))))) ^ 0u) ^ _GLF_IDENTITY(1u, (1u) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | 0u, ((0u) | 0u) | 0u)), _GLF_IDENTITY(0u, ~ (~ (0u)))))) ^ 0u) ^ _GLF_IDENTITY(1u, (1u) | 0u), 0u | (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | 0u, ((0u) | 0u) | 0u)), _GLF_IDENTITY(0u, ~ (~ (0u)))))) ^ 0u) ^ _GLF_IDENTITY(1u, (1u) | 0u)))) + 0u)) ^ 1u, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((0u ^ 1u), min(_GLF_IDENTITY(_GLF_IDENTITY((0u ^ 1u), ((0u ^ 1u)) - 0u), max(_GLF_IDENTITY(_GLF_IDENTITY((0u ^ 1u), ((0u ^ 1u)) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY((0u ^ 1u), _GLF_IDENTITY(((0u ^ 1u)) - 0u, (((0u ^ 1u)) - 0u) ^ 0u)), (_GLF_IDENTITY((0u ^ 1u), ((0u ^ 1u)) - 0u)) | 0u)) << 0u), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0u ^ 1u, (0u ^ 1u) | (_GLF_IDENTITY(0u ^ 1u, 0u ^ (0u ^ 1u))))), ((0u ^ 1u)) - 0u), min(_GLF_IDENTITY((0u ^ 1u), ((0u ^ 1u)) - 0u), _GLF_IDENTITY((0u ^ 1u), ((0u ^ 1u)) - 0u))))), (0u ^ 1u))) ^ 1u, (_GLF_IDENTITY((0u ^ 1u), min(_GLF_IDENTITY(_GLF_IDENTITY((0u ^ 1u), _GLF_IDENTITY(((0u ^ 1u)) - 0u, 0u | (((0u ^ 1u)) - 0u))), max(_GLF_IDENTITY(_GLF_IDENTITY((0u ^ 1u), ((0u ^ 1u)) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY((0u ^ 1u), ((0u ^ 1u)) - 0u), (_GLF_IDENTITY((0u ^ 1u), ((0u ^ 1u)) - 0u)) | 0u)) << 0u), _GLF_IDENTITY(_GLF_IDENTITY((0u ^ 1u), ((0u ^ 1u)) - 0u), min(_GLF_IDENTITY((0u ^ 1u), ((0u ^ 1u)) - 0u), _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) | 0u) ^ 1u), ((0u ^ 1u)) - 0u))))), (0u ^ 1u))) ^ 1u) - 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY((0u ^ 1u), min(_GLF_IDENTITY((0u ^ 1u), ((0u ^ 1u)) - 0u), (_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_base))), 0u)) ^ 1u))) ^ 1u, clamp(_GLF_IDENTITY(_GLF_IDENTITY((0u ^ 1u), min(_GLF_IDENTITY((_GLF_IDENTITY(0u ^ 1u, min(0u ^ 1u, 0u ^ 1u))), (_GLF_IDENTITY((0u ^ 1u), max((0u ^ 1u), (0u ^ 1u)))) - 0u), (0u ^ 1u))) ^ 1u, max(_GLF_IDENTITY(_GLF_IDENTITY((0u ^ 1u), min(_GLF_IDENTITY((0u ^ 1u), ((0u ^ 1u)) - 0u), (0u ^ 1u))), clamp(_GLF_IDENTITY((0u ^ 1u), min(_GLF_IDENTITY(_GLF_IDENTITY((0u ^ 1u), uint(_GLF_ONE(1.0, injectionSwitch.y)) * ((0u ^ 1u))), ((0u ^ 1u)) - 0u), (0u ^ 1u))), _GLF_IDENTITY(_GLF_IDENTITY((0u ^ 1u), min(_GLF_IDENTITY((0u ^ 1u), ((0u ^ 1u)) - 0u), (0u ^ 1u))), clamp(_GLF_IDENTITY((0u ^ 1u), min(_GLF_IDENTITY((0u ^ 1u), ((0u ^ 1u)) - 0u), (0u ^ 1u))), _GLF_IDENTITY(_GLF_IDENTITY((0u ^ 1u), ((0u ^ 1u)) / 1u), min(_GLF_IDENTITY((0u ^ 1u), ((0u ^ 1u)) - 0u), (0u ^ 1u))), _GLF_IDENTITY((0u ^ 1u), min(_GLF_IDENTITY(_GLF_IDENTITY((0u ^ 1u), ((0u ^ 1u)) - 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((0u ^ 1u), ((0u ^ 1u)) - 0u)), (false ? _GLF_FUZZED((++ virtual_gid)) : ~ (_GLF_IDENTITY((0u ^ 1u), ((0u ^ 1u)) - 0u)))))), (0u ^ 1u))))), _GLF_IDENTITY(_GLF_IDENTITY((0u ^ 1u), min((_GLF_IDENTITY(0u, uint(uvec4(0u, 1u, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), 1u))) ^ 1u), (0u ^ 1u))), min(_GLF_IDENTITY((0u ^ 1u), ((0u ^ 1u)) - 0u), (0u ^ 1u))))) ^ _GLF_IDENTITY(1u, 0u | (1u)), _GLF_IDENTITY((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_base) : 0u))) / 1u) ^ 1u), min(_GLF_IDENTITY((0u ^ 1u), ((0u ^ _GLF_IDENTITY(1u, (1u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))))) - 0u), (0u ^ 1u))) ^ 1u)), _GLF_IDENTITY((0u ^ 1u), min(_GLF_IDENTITY((0u ^ 1u), ((0u ^ 1u)) - 0u), (0u ^ 1u))) ^ 1u, _GLF_IDENTITY(_GLF_IDENTITY((0u ^ 1u), min(_GLF_IDENTITY((0u ^ 1u), ((0u ^ 1u)) - 0u), (0u ^ 1u))) ^ 1u, (_GLF_IDENTITY((0u ^ 1u), min(_GLF_IDENTITY((0u ^ 1u), ((0u ^ 1u)) - 0u), (0u ^ 1u))) ^ 1u) << 0u))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((0u ^ 1u), min(_GLF_IDENTITY((0u ^ 1u), ((_GLF_IDENTITY(0u, (0u) | (0u)) ^ 1u)) - 0u), (0u ^ 1u))) ^ 1u, min(_GLF_IDENTITY((0u ^ 1u), min(_GLF_IDENTITY((0u ^ 1u), ((_GLF_IDENTITY(0u, (0u) | (0u)) ^ 1u)) - 0u), (0u ^ 1u))) ^ 1u, _GLF_IDENTITY((0u ^ 1u), min(_GLF_IDENTITY((0u ^ 1u), ((_GLF_IDENTITY(0u, (0u) | (0u)) ^ 1u)) - 0u), (0u ^ 1u))) ^ 1u)), (_GLF_IDENTITY((0u ^ 1u), min(_GLF_IDENTITY(_GLF_IDENTITY((0u ^ _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))), max(_GLF_IDENTITY((0u ^ _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))), (true ? (0u ^ _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))) : _GLF_FUZZED(workgroup_base))), (0u ^ _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))))), ((_GLF_IDENTITY(0u, (0u) + 0u) ^ 1u)) - 0u), (0u ^ 1u))) ^ 1u) | (_GLF_IDENTITY((0u ^ 1u), min(_GLF_IDENTITY((0u ^ 1u), ((0u ^ 1u)) - 0u), (0u ^ 1u))) ^ 1u)), _GLF_IDENTITY((0u ^ 1u), min(_GLF_IDENTITY((0u ^ 1u), ((0u ^ 1u)) - _GLF_IDENTITY(0u, max(0u, 0u))), (0u ^ 1u))) ^ 1u))), _GLF_IDENTITY((_GLF_IDENTITY(uint((0u ^ 1u) ^ 1u), max(uint((0u ^ 1u) ^ 1u), uint((0u ^ 1u) ^ 1u)))) | (uint((_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), min(_GLF_IDENTITY(0u, (0u) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u)) ^ 1u) ^ _GLF_IDENTITY(1u, uint(uvec3(1u, 1u, 0u))))), _GLF_IDENTITY(((_GLF_IDENTITY(uint((0u ^ 1u) ^ 1u), _GLF_IDENTITY(max(uint((0u ^ 1u) ^ 1u), uint((0u ^ 1u) ^ _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, uint(uvec2(1u, 1u))), 1u))) | (1u)))), 0u + (max(uint((0u ^ 1u) ^ 1u), uint((0u ^ 1u) ^ 1u)))))) | (uint((_GLF_IDENTITY(0u, _GLF_IDENTITY(min(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) - uint(_GLF_ZERO(0.0, injectionSwitch.x)), ((0u) - uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))) >> (uint(_GLF_ONE(1.0, injectionSwitch.y)) ^ 1u))), 0u), (min(_GLF_IDENTITY(0u, (0u) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u)) - 0u)) ^ 1u) ^ 1u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (((_GLF_IDENTITY(uint((0u ^ 1u) ^ 1u), _GLF_IDENTITY(max(uint((0u ^ _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))) ^ 1u), uint((0u ^ 1u) ^ 1u)), 0u + (max(uint((0u ^ 1u) ^ 1u), uint((0u ^ 1u) ^ 1u)))))) | (uint((_GLF_IDENTITY(0u, _GLF_IDENTITY(min(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) - uint(_GLF_ZERO(0.0, injectionSwitch.x)), ((0u) - uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED(1610.3655)), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(true))))))) >> (_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), ~ (~ (uint(_GLF_ONE(1.0, injectionSwitch.y))))) ^ 1u))), 0u), (min(_GLF_IDENTITY(0u, (0u) - uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x))))), 0u)) - _GLF_IDENTITY(0u, (true ? 0u : _GLF_IDENTITY(_GLF_FUZZED(virtual_gid), max(_GLF_FUZZED(virtual_gid), _GLF_FUZZED(virtual_gid))))))) ^ 1u) ^ 1u))))) / 1u)))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) * 1u) ^ 1u) ^ 1u, clamp((0u ^ 1u) ^ 1u, (0u ^ 1u) ^ 1u, (0u ^ 1u) ^ 1u)), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) * 1u) ^ 1u) ^ 1u, clamp(_GLF_IDENTITY((0u ^ 1u) ^ 1u, max((0u ^ 1u) ^ 1u, _GLF_IDENTITY((0u ^ 1u) ^ 1u, ~ (~ ((0u ^ 1u) ^ 1u))))), (0u ^ 1u) ^ 1u, (0u ^ 1u) ^ 1u)), 0u), (true ? uvec2(_GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) * 1u) ^ 1u) ^ 1u, clamp((0u ^ 1u) ^ 1u, _GLF_IDENTITY((0u ^ 1u) ^ 1u, ((0u ^ 1u) ^ 1u) ^ 0u), (0u ^ _GLF_IDENTITY(1u, (1u) - 0u)) ^ 1u)), 0u) : _GLF_FUZZED(uvec2(108471u, 119947u)))))), (0u ^ 1u) ^ 1u))))) % subgroup_size);
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, 0, 0), min(_GLF_IDENTITY(ivec3(1, _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), int(_GLF_IDENTITY(int(_GLF_IDENTITY(~ (0), clamp(~ (0), ~ (0), ~ (0)))), clamp(int(_GLF_IDENTITY(~ (0), clamp(~ (0), ~ (0), ~ (0)))), int(_GLF_IDENTITY(~ (_GLF_IDENTITY(0, max(0, 0))), clamp(~ (0), _GLF_IDENTITY(~ (0), min(~ (0), _GLF_IDENTITY(~ (0), clamp(~ (0), _GLF_IDENTITY(~ (0), int(int(~ (0)))), ~ (0))))), ~ _GLF_IDENTITY((0), ((0)) | (_GLF_IDENTITY((0), (_GLF_IDENTITY((0), clamp((0), (0), (0)))) | ((0)))))))), int(_GLF_IDENTITY(~ (0), clamp(~ (0), ~ (0), ~ (0)))))))))), 0), ivec3(0, 0, 0) ^ (_GLF_IDENTITY(ivec3(1, _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), int(_GLF_IDENTITY(int(_GLF_IDENTITY(~ (0), clamp(~ (0), ~ (0), ~ (0)))), clamp(int(_GLF_IDENTITY(~ (0), clamp(~ (0), ~ (0), ~ (0)))), int(_GLF_IDENTITY(~ (0), clamp(~ (0), ~ (0), ~ (0)))), int(_GLF_IDENTITY(~ (0), clamp(~ (0), ~ _GLF_IDENTITY((0), ((0)) | ((0))), ~ (0)))))))))), 0), ivec3(0, 0, 0) ^ (ivec3(1, _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), int(_GLF_IDENTITY(int(_GLF_IDENTITY(~ (0), clamp(~ (0), _GLF_IDENTITY(~ (0), int(ivec2(~ (0), int(_GLF_ONE(1.0, injectionSwitch.y))))), ~ (0)))), clamp(int(_GLF_IDENTITY(~ (0), clamp(~ (0), ~ (0), ~ (0)))), int(_GLF_IDENTITY(_GLF_IDENTITY(~ (0), clamp(~ (0), ~ (0), ~ (0))), 0 | (_GLF_IDENTITY(~ (0), clamp(~ (0), ~ (0), ~ (0)))))), int(_GLF_IDENTITY(~ (0), clamp(~ (0), ~ (0), ~ (0)))))))))), 0))))), ivec3(1, 0, 0))))), _GLF_IDENTITY(0 | (1), 0 ^ (0 | (1))))) ^ 0)), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && true)))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), ! (_GLF_IDENTITY(! _GLF_IDENTITY((bool(bvec4(false, true, false, true))), bool(bvec2((bool(bvec4(false, true, _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))))), true))), false))), ! (! (! (bool(bvec4(false, true, false, true)))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, _GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(false, ! (! (false))))), bool(bvec2(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, _GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), (! (false)) && true)) || false))))), true && (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, _GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(false, ! (! (false))))))), false))), bool(bool(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, (true) && true))))))), _GLF_IDENTITY(false, ! (! (false))))), bool(bvec2(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, _GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(false, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)), ! (! (false))))), true && (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, _GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), true && ((! (true))))), _GLF_IDENTITY(false, ! (! (false))))))), false))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(_GLF_IDENTITY(bvec2(! (_GLF_DEAD(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec2(bvec2(! (_GLF_DEAD(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec2(bvec2(bvec2(bvec2(bvec2(! (_GLF_DEAD(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 _GLF_struct_5 _GLF_struct_replacement_5 = _GLF_struct_5(mat4x2(1.0), _GLF_struct_3(_GLF_IDENTITY(vec2(1.0), _GLF_IDENTITY(max(vec2(1.0), vec2(1.0)), vec2(vec4(max(vec2(1.0), vec2(1.0)), determinant(mat3(0.0, abs(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 1.0)))), _GLF_struct_1(_GLF_IDENTITY(1, (1) | (1)), uvec3(1u), uvec3(1u), mat2x3(1.0), bvec4(true), ivec3(1)), _GLF_struct_2(mat3x4(1.0), bvec2(true), _GLF_IDENTITY(1u, _GLF_IDENTITY((1u), ((1u)) - 0u) << 0u), uvec4(1u), _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, ! (! (true)))))), mat3x2(1.0)), vec3(1.0), _GLF_IDENTITY(true, bool(bvec4(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), vec4(1.0), mat4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(9.9)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(ivec3(1), (_GLF_IDENTITY(ivec3(1), (false ? _GLF_FUZZED(ivec3(ivec2(-56801, 142), _GLF_IDENTITY(15733, ~ (~ (15733))))) : ivec3(1)))) | (ivec3(1))), _GLF_struct_4(atomicLoad(buf[virtual_gid], 4, 64, 0), mat4x3(1.0)));
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) : _GLF_FUZZED(determinant(mat3(9.9, -204.086, 250.573, -8530.9373, 944.871, -0.4, -0.5, 9.2, -0.0))))) > injectionSwitch.y)) || false))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 atomicStore(checker[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_5._f5.read, ~ (~ (_GLF_struct_replacement_5._f5.read))), (_GLF_IDENTITY(_GLF_struct_replacement_5._f5.read, (0u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), uint(uint(uint(4u)))))) + (_GLF_struct_replacement_5._f5.read))) << _GLF_IDENTITY(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 0.0, 1.0, 0.0, cos(0.0), 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-652.204) : _GLF_IDENTITY(1.0, min(1.0, 1.0)))), (1.0) - 0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, sqrt(1.0), 0.0, 0.0, 0.0)), clamp(float(mat3x4(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 0.0, 1.0, 0.0, cos(0.0), 1.0))), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, sqrt(1.0), 0.0, 0.0, 0.0)), float(mat3x4(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 0.0, 1.0, 0.0, cos(0.0), 1.0))), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, sqrt(1.0), 0.0, 0.0, 0.0)), float(mat3x4(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), 0.0, cos(0.0), 1.0))), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, sqrt(1.0), 0.0, 0.0, 0.0))))), injectionSwitch.x)), max(_GLF_IDENTITY(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 0.0, 1.0, 0.0, cos(0.0), 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-652.204) : _GLF_IDENTITY(1.0, min(1.0, 1.0)))), (1.0) - 0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, sqrt(1.0), 0.0, 0.0, 0.0)), clamp(float(mat3x4(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 0.0, 1.0, 0.0, cos(0.0), 1.0))), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, sqrt(1.0), 0.0, 0.0, 0.0)), float(mat3x4(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 0.0, 1.0, 0.0, cos(0.0), 1.0))), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, sqrt(1.0), 0.0, 0.0, 0.0)), float(mat3x4(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), 0.0, cos(0.0), 1.0))), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, sqrt(1.0), 0.0, 0.0, 0.0))))), injectionSwitch.x)), (uint(_GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 0.0, 1.0, 0.0, cos(0.0), 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-652.204) : _GLF_IDENTITY(1.0, min(1.0, 1.0)))), (1.0) - 0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, sqrt(1.0), 0.0, 0.0, 0.0)), clamp(float(mat3x4(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 0.0, 1.0, 0.0, cos(0.0), 1.0))), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, sqrt(1.0), 0.0, 0.0, 0.0)), float(mat3x4(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 0.0, 1.0, 0.0, cos(0.0), 1.0))), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, sqrt(1.0), 0.0, 0.0, 0.0)), float(mat3x4(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), 0.0, cos(0.0), 1.0))), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, sqrt(1.0), 0.0, 0.0, 0.0))))), injectionSwitch.x))) | (uint(_GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 0.0, 1.0, 0.0, cos(0.0), 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-652.204) : _GLF_IDENTITY(1.0, min(1.0, 1.0)))), (1.0) - 0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, sqrt(1.0), 0.0, 0.0, 0.0)), clamp(float(mat3x4(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 0.0, 1.0, 0.0, cos(0.0), 1.0))), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, sqrt(1.0), 0.0, 0.0, 0.0)), float(mat3x4(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 0.0, 1.0, 0.0, cos(0.0), 1.0))), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, sqrt(1.0), 0.0, 0.0, 0.0)), float(mat3x4(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), 0.0, cos(0.0), 1.0))), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, sqrt(1.0), 0.0, 0.0, 0.0))))), injectionSwitch.x)))), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 0.0, 1.0, 0.0, cos(0.0), 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-652.204) : _GLF_IDENTITY(1.0, min(1.0, 1.0)))), (1.0) - 0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, sqrt(1.0), 0.0, 0.0, 0.0)), clamp(float(mat3x4(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 0.0, 1.0, 0.0, cos(0.0), 1.0))), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, sqrt(1.0), 0.0, 0.0, 0.0)), float(mat3x4(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 0.0, 1.0, 0.0, cos(0.0), 1.0))), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, sqrt(1.0), 0.0, 0.0, 0.0)), float(mat3x4(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), 0.0, cos(0.0), 1.0))), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, sqrt(1.0), 0.0, 0.0, 0.0))))), injectionSwitch.x))))), 4, 64, _GLF_IDENTITY(4, 0 ^ (4)));
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false)))), false || (bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false)))))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false)))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (! ((_GLF_IDENTITY(false, ! (! (false))))))))), bool(bvec3(_GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(! (! (false)), false || (! (! (false)))))), ! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), false || (! (! (false))))))))))), ((! (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (! ((_GLF_IDENTITY(false, ! (! (false)))))))))) && true), false, false)))) || false)))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
