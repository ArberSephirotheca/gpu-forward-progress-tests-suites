#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_35 {
 mat4 _f0;
} ;

struct _GLF_struct_36 {
 _GLF_struct_35 _f0;
 float _f1;
} ;

struct _GLF_struct_33 {
 int _f0;
 bvec2 _f1;
 mat2x3 _f2;
 ivec3 _f3;
 ivec3 _f4;
 uvec2 _f5;
 vec4 _f6;
} ;

struct _GLF_struct_32 {
 ivec2 _f0;
 int _f1;
} ;

struct _GLF_struct_31 {
 bool _f0;
 uvec2 _f1;
 mat4x3 _f2;
 mat2 _f3;
 ivec4 _f4;
 bvec2 _f5;
 vec3 _f6;
} ;

struct _GLF_struct_30 {
 int _f0;
 uvec2 _f1;
 mat2 _f2;
 mat3x2 _f3;
} ;

struct _GLF_struct_34 {
 _GLF_struct_30 _f0;
 ivec2 _f1;
 bvec2 _f2;
 mat3x2 _f3;
 _GLF_struct_31 _f4;
 _GLF_struct_32 _f5;
 _GLF_struct_33 _f6;
} ;

struct _GLF_struct_29 {
 bvec3 _f0;
 mat4 _f1;
} ;

struct _GLF_struct_37 {
 mat2x3 _f0;
 uvec3 GLF_merged3_0_1_13_1_1_4_2_1_12num_workgroupreadworkgroup_id;
 mat2x3 _f1;
 _GLF_struct_29 _f2;
 _GLF_struct_34 _f3;
 _GLF_struct_36 _f4;
 uint _f5;
} ;

struct _GLF_struct_27 {
 mat2x3 _f0;
} ;

struct _GLF_struct_25 {
 bvec3 _f0;
 mat3x2 _f1;
 ivec4 _f2;
 bvec3 _f3;
 ivec3 _f4;
 vec3 _f5;
} ;

struct _GLF_struct_24 {
 mat3 _f0;
 mat4x2 _f1;
 uvec3 _f2;
 ivec2 _f3;
} ;

struct _GLF_struct_23 {
 mat2x4 _f0;
} ;

struct _GLF_struct_26 {
 vec4 _f0;
 _GLF_struct_23 _f1;
 _GLF_struct_24 _f2;
 _GLF_struct_25 _f3;
} ;

struct _GLF_struct_21 {
 vec2 _f0;
 vec2 _f1;
 uvec3 _f2;
 bvec4 _f3;
 int _injected_loop_counter;
} ;

struct _GLF_struct_22 {
 mat2 _f0;
 _GLF_struct_21 _f1;
} ;

struct _GLF_struct_19 {
 ivec4 _f0;
} ;

struct _GLF_struct_18 {
 int _f0;
} ;

struct _GLF_struct_17 {
 vec2 _f0;
 ivec3 _f1;
} ;

struct _GLF_struct_20 {
 _GLF_struct_17 _f0;
 uint _f1;
 _GLF_struct_18 _f2;
 vec4 _f3;
 mat3x2 _f4;
 _GLF_struct_19 _f5;
} ;

struct _GLF_struct_28 {
 _GLF_struct_20 _f0;
 _GLF_struct_22 _f1;
 _GLF_struct_26 _f2;
 ivec3 _f3;
 ivec2 _f4;
 _GLF_struct_27 _f5;
} ;

struct _GLF_struct_14 {
 bvec4 _f0;
 uint _f1;
 mat2x4 _f2;
} ;

struct _GLF_struct_15 {
 bool _f0;
 bvec3 _f1;
 uint workgroup_id;
 _GLF_struct_14 _f2;
 mat2x4 _f3;
} ;

struct _GLF_struct_16 {
 vec3 _f0;
 vec2 _f1;
 _GLF_struct_15 _f2;
 mat4x3 _f3;
 mat2x4 _f4;
 vec2 _f5;
} ;

struct _GLF_struct_13 {
 uint _f0;
 uint read;
} ;

struct _GLF_struct_10 {
 bvec2 _f0;
 int _f1;
 bvec2 _f2;
 mat4 _f3;
 vec3 _f4;
} ;

struct _GLF_struct_11 {
 _GLF_struct_10 _f0;
 bool _f1;
} ;

struct _GLF_struct_12 {
 bvec3 _f0;
 _GLF_struct_11 _f1;
 uint subgroup_local_id;
} ;

struct _GLF_struct_7 {
 uvec3 _f0;
 uint next_virtual_gid;
 mat3x2 _f1;
} ;

struct _GLF_struct_6 {
 mat4x2 _f0;
 mat3x4 _f1;
 bool _f2;
 mat4x3 _f3;
 uvec2 _f4;
 bvec3 _f5;
} ;

struct _GLF_struct_8 {
 uvec4 _f0;
 float _f1;
 _GLF_struct_6 _f2;
 mat3 _f3;
 _GLF_struct_7 _f4;
} ;

struct _GLF_struct_4 {
 vec3 _f0;
 vec3 _f1;
 uvec2 _f2;
 mat2x4 _f3;
 mat4x3 _f4;
 uvec2 _f5;
} ;

struct _GLF_struct_3 {
 ivec4 _f0;
 mat4x3 _f1;
 int _f2;
 ivec2 _f3;
 float _f4;
 vec4 _f5;
} ;

struct _GLF_struct_2 {
 uvec4 _f0;
} ;

struct _GLF_struct_1 {
 bool _f0;
 bvec3 _f1;
 mat3 _f2;
 mat2x3 _f3;
 mat2x3 _f4;
 bool _f5;
} ;

struct _GLF_struct_5 {
 _GLF_struct_1 _f0;
 _GLF_struct_2 _f1;
 _GLF_struct_3 _f2;
 _GLF_struct_4 _f3;
} ;

struct _GLF_struct_0 {
 vec2 _f0;
} ;

struct _GLF_struct_9 {
 _GLF_struct_0 _f0;
 _GLF_struct_5 _f1;
 uint _f2;
 _GLF_struct_8 _f3;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec2 GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    barrier();
   barrier();
  }
 uvec2 GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)), _GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))) && true))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > ((1 ^ 1) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(_GLF_IDENTITY(5, (5) >> 0)), max(int(5), int(5)))))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_37 _GLF_struct_replacement_37;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), true && ((false))))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)), (! ((injectionSwitch.x > injectionSwitch.y))) || false))))))));
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x = subgroup_id;
 uint subgroup_size = gl_SubgroupSize;
 _GLF_struct_12 _GLF_struct_replacement_12 = _GLF_struct_12(bvec3(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_IDENTITY(true, false || (true)), false)))) || false)) && true)), _GLF_struct_11(_GLF_struct_10(bvec2(true), 1, bvec2(true), mat4(1.0), vec3(1.0)), true), gl_SubgroupInvocationID);
 uint num_workgroup = gl_NumWorkGroups.x;
 _GLF_struct_replacement_37.GLF_merged3_0_1_13_1_1_4_2_1_12num_workgroupreadworkgroup_id.x = num_workgroup;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 | 1) ^ 0)); _injected_loop_counter ++)
  {
   for(_GLF_struct_28 _GLF_struct_replacement_28 = _GLF_struct_28(_GLF_struct_20(_GLF_struct_17(vec2(1.0), ivec3(_GLF_IDENTITY(1, clamp(1, 1, 1)))), 1u, _GLF_struct_18(1), vec4(1.0), mat3x2(1.0), _GLF_struct_19(ivec4(1))), _GLF_struct_22(mat2(1.0), _GLF_struct_21(vec2(1.0), _GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(length(refract(vec2(77.42, 32.25), vec2(-3669.3947, -5.2), -4.8))) : 1.0))), clamp(vec2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(length(refract(vec2(77.42, 32.25), vec2(-3669.3947, -5.2), -4.8))) : 1.0))), vec2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(length(refract(vec2(77.42, 32.25), vec2(-3669.3947, -5.2), -4.8))) : 1.0))), vec2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(length(refract(vec2(77.42, 32.25), vec2(-3669.3947, -5.2), -4.8))) : 1.0))))), uvec3(1u), bvec4(true), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), max(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))))))), _GLF_struct_26(vec4(1.0), _GLF_struct_23(mat2x4(1.0)), _GLF_struct_24(mat3(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))) || false, bool(bool((_GLF_IDENTITY(false, true && (false))) || false)))) ? _GLF_FUZZED(8.3) : _GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(float(mat3x2(1.0, 1.0, 0.0, 0.0, 0.0, 0.0)), min(float(mat3x2(1.0, 1.0, 0.0, 0.0, 0.0, 0.0)), float(mat3x2(1.0, 1.0, 0.0, 0.0, 0.0, 0.0)))), max(float(mat3x2(1.0, 1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(-43.90, (_GLF_IDENTITY(-43.90, min(-43.90, -43.90))) - 0.0)) : 0.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(-43.90, (_GLF_IDENTITY(-43.90, min(-43.90, -43.90))) - 0.0)) : 0.0, clamp(false ? _GLF_FUZZED(_GLF_IDENTITY(-43.90, (_GLF_IDENTITY(-43.90, min(-43.90, -43.90))) - 0.0)) : 0.0, false ? _GLF_FUZZED(_GLF_IDENTITY(-43.90, (_GLF_IDENTITY(-43.90, min(-43.90, -43.90))) - 0.0)) : 0.0, false ? _GLF_FUZZED(_GLF_IDENTITY(-43.90, (_GLF_IDENTITY(-43.90, min(-43.90, -43.90))) - 0.0)) : 0.0))) / 1.0))), _GLF_IDENTITY(0.0, max(0.0, 0.0)))), float(mat3x2(1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)))))))), mat4x2(1.0), uvec3(1u), _GLF_IDENTITY(ivec2(1), ivec2(0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(52465) : 0))) | (_GLF_IDENTITY(0, clamp(0, 0, 0))))) | (ivec2(1)))), _GLF_struct_25(bvec3(true), mat3x2(1.0), ivec4(1), bvec3(true), ivec3(1), vec3(1.0))), ivec3(_GLF_IDENTITY(1, (3826 & 0) ^ (1))), ivec2(1), _GLF_struct_27(mat2x3(1.0))); _GLF_WRAPPED_LOOP(_GLF_struct_replacement_28._f1._f1._injected_loop_counter != 1); _GLF_IDENTITY(_GLF_struct_replacement_28._f1._f1._injected_loop_counter ++, (_GLF_IDENTITY(_GLF_struct_replacement_28._f1._f1._injected_loop_counter ++, _GLF_IDENTITY((0 >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(3, (_GLF_IDENTITY(3, clamp(3, 3, _GLF_IDENTITY(3, (3) + 0)))) ^ 0)), int(3)), max(_GLF_IDENTITY(_GLF_IDENTITY(int(3), max(int(3), int(3))), int(3)), _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), clamp(_GLF_IDENTITY(int(3), int(3)), _GLF_IDENTITY(int(3), int(3)), _GLF_IDENTITY(int(3), int(3)))))), int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(3, (_GLF_IDENTITY(3, clamp(3, 3, _GLF_IDENTITY(3, (3) + 0)))) ^ 0)), int(3)), max(_GLF_IDENTITY(_GLF_IDENTITY(int(3), max(int(3), int(3))), int(3)), _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), clamp(_GLF_IDENTITY(int(3), int(3)), _GLF_IDENTITY(int(3), int(3)), _GLF_IDENTITY(int(3), int(3)))))), 0, (int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0))))), (_GLF_IDENTITY((0 >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(3, (_GLF_IDENTITY(3, clamp(3, 3, _GLF_IDENTITY(3, (3) + 0)))) ^ 0)), int(3)), max(_GLF_IDENTITY(_GLF_IDENTITY(int(3), max(int(3), int(3))), int(3)), _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), clamp(_GLF_IDENTITY(int(3), int(3)), _GLF_IDENTITY(int(3), int(3)), _GLF_IDENTITY(int(3), int(3)))))), int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(3, (_GLF_IDENTITY(3, clamp(3, 3, _GLF_IDENTITY(3, (3) + 0)))) ^ 0)), int(3)), max(_GLF_IDENTITY(_GLF_IDENTITY(int(3), max(int(3), int(3))), int(3)), _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), clamp(_GLF_IDENTITY(int(3), int(3)), _GLF_IDENTITY(int(3), int(3)), _GLF_IDENTITY(int(3), int(3)))))), 0, (int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0))))), ~ (~ ((0 >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(3, (_GLF_IDENTITY(3, clamp(3, 3, _GLF_IDENTITY(3, (3) + 0)))) ^ 0)), int(3)), max(_GLF_IDENTITY(_GLF_IDENTITY(int(3), max(int(3), int(3))), int(3)), _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), clamp(_GLF_IDENTITY(int(3), int(3)), _GLF_IDENTITY(int(3), int(3)), _GLF_IDENTITY(int(3), int(3)))))), int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(3, (_GLF_IDENTITY(3, clamp(3, 3, _GLF_IDENTITY(3, (3) + 0)))) ^ 0)), int(3)), max(_GLF_IDENTITY(_GLF_IDENTITY(int(3), max(int(3), int(3))), int(3)), _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), clamp(_GLF_IDENTITY(int(3), int(3)), _GLF_IDENTITY(int(3), int(3)), _GLF_IDENTITY(int(3), int(3)))))), 0, (int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0))))))))) << 0) ^ (_GLF_struct_replacement_28._f1._f1._injected_loop_counter ++))) >> (1 ^ _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, 0 | (1))), ((_GLF_IDENTITY(1, 0 | (1)))) / 1) / 1))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), ((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))))))) && true), false, true))) && true))
        {
         if(_GLF_DEAD(false))
          barrier();
         do
          {
           if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(false, true)), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(false, true)), bvec2(bvec4(bvec2(bvec2(false, true)), true, true)))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(false, true)), bvec2(bvec4(bvec2(bvec2(false, true)), true, true)))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(false, true)), bvec2(bvec4(bvec2(bvec2(false, true)), true, true)))))))))))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false), true))), false)))))) || false))), bool(_GLF_IDENTITY(bool(! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false), true))), false)))))) || false)))), false || (bool(! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false), true))), false)))))) || false)))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(false, true)), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(false, true)), bvec2(bvec4(bvec2(bvec2(false, true)), true, true)))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(false, true)), bvec2(bvec4(bvec2(bvec2(false, true)), true, true)))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(false, true)), bvec2(bvec4(bvec2(bvec2(false, true)), true, true)))))))))))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false), true))), false)))))) || false))), bool(_GLF_IDENTITY(bool(! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false), true))), false)))))) || false)))), false || (bool(! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false), true))), false)))))) || false)))))))))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(false, true)), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(bvec2(false, true)), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec2(false, true)), true, false)), bvec2(bvec4(bvec2(bvec4(bvec2(bvec2(false, true)), true, false)), false, false)))), true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(bvec2(false, true)), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec2(false, true)), true, false)), bvec2(bvec4(bvec2(bvec4(bvec2(bvec2(false, true)), true, false)), false, false)))), true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(bvec2(false, true)), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec2(false, true)), true, false)), bvec2(bvec4(bvec2(bvec4(bvec2(bvec2(false, true)), true, false)), false, false)))), true))), false)))))), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(false, true)), bvec2(bvec4(bvec2(bvec2(false, true)), true, true)))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(false, true)), bvec2(bvec4(bvec2(bvec2(false, true)), true, true)))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(false, true)), bvec2(bvec4(bvec2(bvec2(false, true)), true, true)))))))))))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))), false, false))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)), false, false), true))), false)))))) || false))), bool(_GLF_IDENTITY(bool(! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), false, false))), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false), true))), false)))))) || false)))), false || (bool(! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y)))), false, false), bvec3(bvec4(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), false, false), true))), false)))))) || false))))))))))))))))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 barrier();
                }
               else
                {
                }
              }
            }
           else
            {
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))))))) && true)) || false)))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))))).y))))
              barrier();
             barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 _GLF_struct_16 _GLF_struct_replacement_16 = _GLF_struct_16(vec3(1.0), vec2(1.0), _GLF_struct_15(true, bvec3(true), gl_WorkGroupID.x, _GLF_struct_14(bvec4(_GLF_IDENTITY(true, true && _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))), ((_GLF_IDENTITY(true, ! (! (true))))) || false), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))), ((_GLF_IDENTITY(true, ! (! (true))))) || false)) && true, ! (! ((_GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))), ((_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, ! (! (true))))), (bool(bool(_GLF_IDENTITY(true, ! (! (true)))))) && true)))))) || false)) && true)))))), 1u, mat2x4(1.0)), mat2x4(1.0)), mat4x3(1.0), mat2x4(1.0), _GLF_IDENTITY(vec2(1.0), _GLF_IDENTITY((false ? _GLF_FUZZED(vec2(-2787.2831, -1.4)) : _GLF_IDENTITY(vec2(1.0), clamp(vec2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(2908.3886) : 1.0))) / _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, sqrt(1.0))), dot(vec2(0.0, 1.0), vec2(0.0, sqrt(1.0)))))), _GLF_IDENTITY(vec2(1.0), mat2(1.0) * (vec2(1.0))), _GLF_IDENTITY(vec2(1.0), mix(vec2((vec2(1.0))[0], (vec2(1.0))[1]), vec2(_GLF_FUZZED(-91.07), _GLF_FUZZED(6.0)), bvec2(false, _GLF_IDENTITY(false, false || (false)))))))), ((false ? _GLF_FUZZED(vec2(-2787.2831, -1.4)) : _GLF_IDENTITY(vec2(1.0), clamp(vec2(1.0), _GLF_IDENTITY(vec2(1.0), _GLF_IDENTITY(mat2(1.0) * (vec2(1.0)), vec2(mat4x2(mat2(1.0) * (vec2(1.0)), 0.0, 0.0, sqrt(1.0), sqrt(0.0), 0.0, 1.0)))), _GLF_IDENTITY(vec2(1.0), mix(vec2((vec2(1.0))[0], (vec2(1.0))[1]), vec2(_GLF_FUZZED(_GLF_IDENTITY(-91.07, float(mat3(_GLF_IDENTITY(-91.07, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? -91.07 : _GLF_FUZZED(-766.777))), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0, abs(1.0), 0.0, 0.0, 0.0)))), _GLF_FUZZED(6.0)), _GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, false), false, true)), bvec2(bvec4(bvec2(bvec4(bvec2(false, false), _GLF_IDENTITY(false, (false) && true), true)), true, false)))))))))) + vec2(0.0, 0.0))));
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) && true), (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), false || (_GLF_IDENTITY(false, (false) || false) || (true))))) && true), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, float(mat3(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(7.1))), 0.0, 1.0, 0.0, 1.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 1.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_ZERO(0.0, injectionSwitch.x) + (injectionSwitch.y)), min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-6.5) : injectionSwitch.y))))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), ! (! (! (_GLF_IDENTITY(false, bool(bool(false))))))))))))), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), true))))
    barrier();
   do
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   _GLF_struct_replacement_37.GLF_merged3_0_1_13_1_1_4_2_1_12num_workgroupreadworkgroup_id.z = _GLF_struct_replacement_16._f2.workgroup_id;
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * _GLF_struct_replacement_37.GLF_merged3_0_1_13_1_1_4_2_1_12num_workgroupreadworkgroup_id.z;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.y = workgroup_base;
 GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.y = GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.y;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), min(int(2), int(2))))) >> _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, int(ivec3(2, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0))))))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec4(false, false, true, false)))))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base, uvec2(uvec2(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base))).y + _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base, clamp(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base, GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base, GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base)).x * subgroup_size + _GLF_struct_replacement_12.subgroup_local_id, (GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.y + _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base, _GLF_IDENTITY(clamp(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base, GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base, GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base), (_GLF_IDENTITY(uvec2(1u, 1u) ^ uvec2(1u, 1u), (uvec2(1u, 1u) ^ uvec2(1u, 1u)) ^ uvec2(0u, 0u))) ^ (_GLF_IDENTITY(clamp(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base, GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base, GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base), clamp(clamp(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base, GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base, GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base), clamp(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base, GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base, GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base), clamp(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base, GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base, GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base)))))).x * subgroup_size + _GLF_struct_replacement_12.subgroup_local_id) | (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.y + _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base, clamp(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base, GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base, GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base)).x * subgroup_size + _GLF_struct_replacement_12.subgroup_local_id, (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.y, clamp(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.y, _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base, uvec2(0u, 0u) | (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base, (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base, uvec2(uvec4(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base, 0u, 1u)))) >> uvec2(0u, 0u)))), uvec2(uvec3(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base, uvec2(0u, 0u) | (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base, (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base, uvec2(uvec4(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base, 0u, 1u)))) >> uvec2(0u, 0u)))), (0u | 0u)))).y, GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.y)) + _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base, clamp(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base, GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base, _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base, max(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base, _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base, uvec2(0u, 0u) | (GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base)))))).x * subgroup_size + _GLF_struct_replacement_12.subgroup_local_id) * 1u)));
 if(_GLF_DEAD(false))
  barrier();
 _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x = virtual_gid, 0u ^ (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x = virtual_gid, ~ (~ (GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x = virtual_gid)))));
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))).x, (true ? _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-2.9)), bool(false))) : _GLF_FUZZED(-8.3)))) * _GLF_IDENTITY(dot(vec2(abs(0.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 1.0, 1.0, 1.0))), vec2(0.0, 1.0)), dot(vec2(abs(0.0), determinant(_GLF_IDENTITY(mat3(1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(3.2)), bool(false))), 1.0)), 0.0, 1.0, 1.0, 1.0), mat3(_GLF_IDENTITY(mat3x4(mat3(1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(vec4(0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)))), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))))) + (0.0)), _GLF_IDENTITY(determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), mix(float(determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))), float(_GLF_FUZZED(-5711.2368)), bool(false)))))), _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 1.0, 1.0, 1.0)), (mat3x4(mat3(1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 1.0, 1.0, 1.0))) * mat3(1.0)))))), vec2(0.0, 1.0)))) > injectionSwitch.y))) || false)), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x), float(_GLF_FUZZED(-1.2)), bool(false))) > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.2)), bool(false))) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.2)), bool(false))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.2)), bool(_GLF_IDENTITY(false, (false) || false))))) / cos(0.0)) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(-7.8), (injectionSwitch)[1]), bvec2(false, true))).x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(vec3(356.166, 97.42, 450.151), mat3(1.0) * (vec3(356.166, 97.42, 450.151))).s)), bool(false)))), float(_GLF_FUZZED(_GLF_IDENTITY(-1.2, _GLF_IDENTITY((-1.2), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))))) ? _GLF_FUZZED(-8.2) : (-1.2))) / sqrt(1.0)))), bool(false))) > injectionSwitch.y) && true), ! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! ((! (injectionSwitch.x > injectionSwitch.y))), (! ((! (injectionSwitch.x > injectionSwitch.y)))) && true)))))))))))))))
  {
   for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, 0 | (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, ~ (~ (2)))) / 1)))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 | 0)); _GLF_IDENTITY(_injected_loop_counter --, (true ? _injected_loop_counter -- : _GLF_FUZZED(_injected_loop_counter))))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
  barrier();
 _GLF_struct_9 _GLF_struct_replacement_9 = _GLF_struct_9(_GLF_struct_0(vec2(1.0)), _GLF_struct_5(_GLF_struct_1(_GLF_IDENTITY(true, true && (true)), bvec3(true), mat3(_GLF_IDENTITY(1.0, determinant(_GLF_IDENTITY(mat2(0.0, 0.0, 1.0, 0.0), mat2(mat3x4(mat2(0.0, 0.0, 1.0, 0.0))))) + (1.0))), mat2x3(1.0), mat2x3(1.0), true), _GLF_struct_2(_GLF_IDENTITY(uvec4(1u), _GLF_IDENTITY((uvec4(1u)) << uvec4(0u, 0u, 0u, 0u), _GLF_IDENTITY(_GLF_IDENTITY(((uvec4(1u)) << uvec4(0u, 0u, 0u, 0u)) * uvec4(1u, 1u, 1u, 1u), min(((uvec4(1u)) << uvec4(0u, 0u, 0u, 0u)) * uvec4(1u, 1u, 1u, 1u), ((uvec4(1u)) << uvec4(0u, 0u, 0u, 0u)) * uvec4(1u, 1u, 1u, 1u))), (false ? _GLF_FUZZED(uvec4(93196u, 18804u, _GLF_IDENTITY(123432u, (123432u) | (123432u)), 39283u)) : _GLF_IDENTITY(((uvec4(1u)) << uvec4(0u, 0u, 0u, 0u)) * uvec4(1u, 1u, 1u, 1u), _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u) + (((_GLF_IDENTITY(uvec4(1u), (true ? uvec4(1u) : _GLF_FUZZED(uvec4(157710u, 22962u, 192031u, 62463u))))) << uvec4(0u, 0u, 0u, 0u)) * uvec4(1u, 1u, 1u, 1u)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))) ? _GLF_FUZZED(uvec4(86216u, 182105u, 100433u, 190261u)) : _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u) + (((uvec4(1u)) << uvec4(0u, _GLF_IDENTITY(0u, 0u + (0u)), 0u, 0u)) * uvec4(1u, 1u, 1u, 1u)), ~ (~ (_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u) + (((uvec4(1u)) << uvec4(0u, 0u, 0u, 0u)) * uvec4(1u, 1u, 1u, 1u)), min(uvec4(0u, 0u, 0u, 0u) + (((uvec4(1u)) << uvec4(0u, 0u, 0u, 0u)) * uvec4(1u, 1u, 1u, 1u)), uvec4(0u, 0u, 0u, 0u) + (((uvec4(1u)) << uvec4(0u, 0u, 0u, 0u)) * uvec4(1u, 1u, 1u, 1u))))))))))))))), _GLF_struct_3(ivec4(1), mat4x3(1.0), 1, ivec2(_GLF_IDENTITY(1, (1) + 0)), 1.0, vec4(1.0)), _GLF_struct_4(vec3(1.0), _GLF_IDENTITY(vec3(1.0), clamp(_GLF_IDENTITY(vec3(1.0), (vec3(1.0)) * mat3(1.0)), vec3(1.0), vec3(1.0))), uvec2(1u), mat2x4(1.0), mat4x3(1.0), uvec2(1u))), 1u, _GLF_struct_8(uvec4(1u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(clamp(0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, float(float(0.0))))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-412.848)), float(0.0), bool(true)))), float(vec3(clamp(0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, float(float(0.0))))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-412.848)), float(0.0), bool(true)))), 1.0, 1.0)))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_IDENTITY(length(0.0), mix(float(_GLF_FUZZED(8.5)), float(_GLF_IDENTITY(length(0.0), min(length(0.0), length(0.0)))), _GLF_IDENTITY(bool(true), (_GLF_IDENTITY(bool(true), false || (bool(true)))) || false))), 1.0, 1.0, 0.0, 0.0)), 1.0 * (float(mat4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_IDENTITY(length(0.0), min(length(0.0), length(0.0))), 1.0, 1.0, 0.0, 0.0))))), max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(clamp(0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, float(float(0.0))))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-412.848)), float(0.0), bool(true)))), float(vec3(clamp(0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, float(float(0.0))))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-412.848)), float(0.0), bool(true)))), 1.0, 1.0)))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_IDENTITY(length(0.0), mix(float(_GLF_FUZZED(8.5)), float(_GLF_IDENTITY(length(0.0), min(length(0.0), length(0.0)))), _GLF_IDENTITY(bool(true), (_GLF_IDENTITY(bool(true), false || (bool(true)))) || false))), 1.0, 1.0, 0.0, 0.0)), 1.0 * (float(mat4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_IDENTITY(length(0.0), min(length(0.0), length(0.0))), 1.0, 1.0, 0.0, 0.0))))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(clamp(0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, float(float(0.0))))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-412.848)), float(0.0), bool(true)))), float(vec3(clamp(0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, float(float(0.0))))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-412.848)), float(0.0), bool(true)))), 1.0, 1.0)))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_IDENTITY(length(0.0), mix(float(_GLF_FUZZED(8.5)), float(_GLF_IDENTITY(length(0.0), min(length(0.0), length(0.0)))), _GLF_IDENTITY(bool(true), (_GLF_IDENTITY(bool(true), false || (bool(true)))) || false))), 1.0, 1.0, 0.0, 0.0)), 1.0 * (float(mat4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_IDENTITY(length(0.0), min(length(0.0), length(0.0))), 1.0, 1.0, 0.0, 0.0))))))), _GLF_struct_6(mat4x2(1.0), mat3x4(1.0), true, mat4x3(1.0), _GLF_IDENTITY(uvec2(1u), (uvec2(1u)) / uvec2(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, 0u | (1u)), 1u, 1u)), 1u)), bvec3(true)), _GLF_IDENTITY(_GLF_IDENTITY(mat3(1.0), (false ? _GLF_FUZZED(mat3(-9.1, 453.101, -471.157, -6.4, 5.1, 2.8, 318.647, -28.78, 9352.2475)) : mat3(1.0))), (mat3(1.0)) + _GLF_IDENTITY(mat3(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) - vec2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) - 0.0), min(_GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(0.0, (0.0) - 0.0))), 0.0)).x), _GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4x2(0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, 1.0)), min(float(mat4x2(0.0, 1.0, 1.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x), 1.0, 1.0, 1.0, 1.0)), float(mat4x2(0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, _GLF_IDENTITY(1.0, float(mat2x4(1.0, 0.0, abs(1.0), 1.0, 0.0, 0.0, 1.0, 1.0))), 1.0))))), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(61.23)), float(injectionSwitch.x), bool(true))), injectionSwitch.x))))))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, sqrt(determinant(_GLF_IDENTITY(mat4(0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0), (mat4(0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, sqrt(determinant(_GLF_IDENTITY(mat4(0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0), (mat4(0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, sqrt(determinant(_GLF_IDENTITY(mat4(0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0), (mat4(0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), (false ? _GLF_FUZZED(mat3(5.5, 9147.9994, 665.289, -944.928, -61.46, 1482.9456, -707.807, 9.3, 804.499)) : mat3(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) - vec2(_GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) - 0.0, ((0.0) - 0.0) * 1.0)), 0.0)).x), _GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4x2(0.0, 1.0, 1.0, _GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - 0.0), injectionSwitch.x), 1.0, 1.0, 1.0, 1.0)), min(float(mat4x2(0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, 1.0)), float(mat4x2(0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, 1.0))))), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED(-130.720)), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(true))), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(61.23)), float(injectionSwitch.x), bool(true))), max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(61.23)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(61.23)), float(injectionSwitch.x), bool(true))))), injectionSwitch.x))))))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, sqrt(determinant(_GLF_IDENTITY(mat4(0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0)), (mat4(0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(960.162)), bool(false))), 0.0)))), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_struct_7(_GLF_IDENTITY(uvec3(1u), clamp(_GLF_IDENTITY(uvec3(1u), (uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, uint(uint(1u)))) / 1u))) ^ uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 0u), min(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 0u), uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 0u)))))) / 1u), 0u)), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), min(uvec3(1u), _GLF_IDENTITY(uvec3(1u), min(_GLF_IDENTITY(uvec3(1u), (uvec3(1u)) << _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) - uvec3(0u, 0u, 0u))), uvec3(1u))))), _GLF_IDENTITY((uvec3(1u)), uvec3(1u, 1u, 1u) * ((uvec3(1u)))) >> (uvec3(0u, 0u, 0u) ^ uvec3(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_base) : 0u)), 0u, 0u))), uvec3(_GLF_IDENTITY(1u, uint(uint(1u)))))), GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.y + _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x * subgroup_size, (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x * subgroup_size, _GLF_IDENTITY(uint(uvec4(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x * subgroup_size, (1u ^ 1u), 1u, 0u)), uint(uvec4(uint(_GLF_IDENTITY(uvec4(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x * subgroup_size, (1u ^ 1u), 1u, 0u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x * subgroup_size, (1u ^ 1u), 1u, 0u)))), 1u, 1u, 0u))))) | (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base, uvec2(1u, 1u) * (GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base)).x * subgroup_size)), (GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x * subgroup_size) - 0u) + (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_12.subgroup_local_id, (_GLF_IDENTITY(_GLF_struct_replacement_12.subgroup_local_id, ~ (~ (_GLF_struct_replacement_12.subgroup_local_id)))) | 0u) + 1) % subgroup_size, _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_struct_replacement_12.subgroup_local_id, 1u * (_GLF_IDENTITY(_GLF_struct_replacement_12.subgroup_local_id, (_GLF_struct_replacement_12.subgroup_local_id) | (_GLF_struct_replacement_12.subgroup_local_id)))) + 1) % subgroup_size) << 0u, (((_GLF_IDENTITY(_GLF_struct_replacement_12.subgroup_local_id, 1u * (_GLF_IDENTITY(_GLF_struct_replacement_12.subgroup_local_id, (_GLF_struct_replacement_12.subgroup_local_id) | (_GLF_struct_replacement_12.subgroup_local_id)))) + 1) % subgroup_size) << 0u) ^ 0u)), min(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_struct_replacement_12.subgroup_local_id + 1) % subgroup_size, ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_12.subgroup_local_id, (_GLF_struct_replacement_12.subgroup_local_id) ^ 0u), 1u * (_GLF_IDENTITY(_GLF_struct_replacement_12.subgroup_local_id, _GLF_IDENTITY((_GLF_struct_replacement_12.subgroup_local_id) | (_GLF_struct_replacement_12.subgroup_local_id), max(_GLF_IDENTITY((_GLF_struct_replacement_12.subgroup_local_id) | (_GLF_struct_replacement_12.subgroup_local_id), (_GLF_IDENTITY((_GLF_struct_replacement_12.subgroup_local_id) | (_GLF_struct_replacement_12.subgroup_local_id), min((_GLF_struct_replacement_12.subgroup_local_id) | (_GLF_struct_replacement_12.subgroup_local_id), (_GLF_struct_replacement_12.subgroup_local_id) | _GLF_IDENTITY((_GLF_struct_replacement_12.subgroup_local_id), ((_GLF_struct_replacement_12.subgroup_local_id)) | ((_GLF_struct_replacement_12.subgroup_local_id)))))) << 0u), (_GLF_struct_replacement_12.subgroup_local_id) | (_GLF_struct_replacement_12.subgroup_local_id)))))) + _GLF_IDENTITY(1, (1) | (1))) % _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, (0u ^ 0u))))) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_struct_replacement_12.subgroup_local_id + 1), ((_GLF_struct_replacement_12.subgroup_local_id + 1)) - (0u << _GLF_IDENTITY(uint(7u), uint(7u)))) % subgroup_size, ((_GLF_IDENTITY(_GLF_struct_replacement_12.subgroup_local_id, 1u * (_GLF_IDENTITY(_GLF_struct_replacement_12.subgroup_local_id, (_GLF_struct_replacement_12.subgroup_local_id) | (_GLF_struct_replacement_12.subgroup_local_id)))) + 1) % subgroup_size) << 0u)) - 0u), _GLF_IDENTITY((_GLF_struct_replacement_12.subgroup_local_id + 1) % subgroup_size, ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_12.subgroup_local_id, ~ (~ (_GLF_struct_replacement_12.subgroup_local_id))), _GLF_IDENTITY(1u * (_GLF_IDENTITY(_GLF_struct_replacement_12.subgroup_local_id, (_GLF_struct_replacement_12.subgroup_local_id) | _GLF_IDENTITY((_GLF_struct_replacement_12.subgroup_local_id), clamp(_GLF_IDENTITY((_GLF_struct_replacement_12.subgroup_local_id), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_struct_replacement_12.subgroup_local_id), max((_GLF_struct_replacement_12.subgroup_local_id), (_GLF_struct_replacement_12.subgroup_local_id))), (_GLF_IDENTITY((_GLF_struct_replacement_12.subgroup_local_id), max((_GLF_struct_replacement_12.subgroup_local_id), (_GLF_struct_replacement_12.subgroup_local_id)))) | 0u)) | ((_GLF_struct_replacement_12.subgroup_local_id))), (_GLF_struct_replacement_12.subgroup_local_id), (_GLF_struct_replacement_12.subgroup_local_id))))), (1u * (_GLF_IDENTITY(_GLF_struct_replacement_12.subgroup_local_id, (_GLF_struct_replacement_12.subgroup_local_id) | _GLF_IDENTITY((_GLF_struct_replacement_12.subgroup_local_id), _GLF_IDENTITY(clamp(_GLF_IDENTITY((_GLF_struct_replacement_12.subgroup_local_id), (_GLF_IDENTITY((_GLF_struct_replacement_12.subgroup_local_id), max((_GLF_struct_replacement_12.subgroup_local_id), (_GLF_struct_replacement_12.subgroup_local_id)))) | _GLF_IDENTITY(((_GLF_struct_replacement_12.subgroup_local_id)), uint(uvec3(_GLF_IDENTITY(((_GLF_struct_replacement_12.subgroup_local_id)), (((_GLF_struct_replacement_12.subgroup_local_id))) | (_GLF_IDENTITY(((_GLF_struct_replacement_12.subgroup_local_id)), max(((_GLF_struct_replacement_12.subgroup_local_id)), ((_GLF_struct_replacement_12.subgroup_local_id)))))), 0u, 0u)))), (_GLF_struct_replacement_12.subgroup_local_id), (_GLF_struct_replacement_12.subgroup_local_id)), (true ? clamp(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_struct_replacement_12.subgroup_local_id), ~ (~ ((_GLF_struct_replacement_12.subgroup_local_id)))), (_GLF_IDENTITY((_GLF_struct_replacement_12.subgroup_local_id), max((_GLF_struct_replacement_12.subgroup_local_id), (_GLF_struct_replacement_12.subgroup_local_id)))) | _GLF_IDENTITY(((_GLF_struct_replacement_12.subgroup_local_id)), uint(uvec3(_GLF_IDENTITY(((_GLF_struct_replacement_12.subgroup_local_id)), (((_GLF_struct_replacement_12.subgroup_local_id))) | (_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_struct_replacement_12.subgroup_local_id)), (_GLF_IDENTITY(((_GLF_struct_replacement_12.subgroup_local_id)), (((_GLF_struct_replacement_12.subgroup_local_id))) | 0u)) + ((0u | 0u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))), max(((_GLF_struct_replacement_12.subgroup_local_id)), ((_GLF_struct_replacement_12.subgroup_local_id)))))), 0u, 0u)))), (_GLF_struct_replacement_12.subgroup_local_id), (_GLF_struct_replacement_12.subgroup_local_id)) : _GLF_FUZZED(num_workgroup))))))) + 0u)) + 1) % subgroup_size) << 0u)))), mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((- -3986.7704)) : 1.0)), 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(557.132))))), 1.0)), min(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((- -3986.7704)) : 1.0)), 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(557.132))))), 1.0)), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((- -3986.7704)) : 1.0)), 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(557.132))))), 1.0))))))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[_GLF_struct_replacement_9._f3._f4.next_virtual_gid], _GLF_IDENTITY(uint(1), (uint(1)) >> 0u), _GLF_IDENTITY(4, 0 ^ (_GLF_IDENTITY(4, max(4, 4)))), 64, _GLF_IDENTITY(_GLF_IDENTITY(4, (4) - 0), (_GLF_IDENTITY(4, (4) - 0)) << 0));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 _GLF_struct_13 _GLF_struct_replacement_13 = _GLF_struct_13(1u, atomicLoad(buf[_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x, min(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x, GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x)), max(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x, min(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x, GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x)), (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x, min(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x, GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x))) | (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x, min(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x, GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x)))), _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x, min(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x, GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x))))) << 0u)], 4, 64, 0));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 _GLF_struct_replacement_37.GLF_merged3_0_1_13_1_1_4_2_1_12num_workgroupreadworkgroup_id.y = _GLF_struct_replacement_13.read;
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(checker[GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x], _GLF_IDENTITY(_GLF_struct_replacement_37.GLF_merged3_0_1_13_1_1_4_2_1_12num_workgroupreadworkgroup_id, max(_GLF_struct_replacement_37.GLF_merged3_0_1_13_1_1_4_2_1_12num_workgroupreadworkgroup_id, _GLF_struct_replacement_37.GLF_merged3_0_1_13_1_1_4_2_1_12num_workgroupreadworkgroup_id)).y, _GLF_IDENTITY(4, max(4, 4)), 64, 4);
 if(_GLF_DEAD(false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
