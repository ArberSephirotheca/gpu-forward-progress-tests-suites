#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_11 {
 uint subgroup_id;
 bool _f0;
} ;

struct _GLF_struct_8 {
 mat2 _f0;
 int _f1;
 vec2 _f2;
 mat3x2 _f3;
 mat2x4 _f4;
 mat4x2 _f5;
 uvec2 _f6;
} ;

struct _GLF_struct_7 {
 mat3x4 _f0;
 vec4 _f1;
 mat2x3 _f2;
} ;

struct _GLF_struct_9 {
 _GLF_struct_7 _f0;
 uint _f1;
 uvec4 _f2;
 uvec2 _f3;
 mat3 _f4;
 uint subgroup_local_id;
 _GLF_struct_8 _f5;
 vec4 _f6;
} ;

struct _GLF_struct_5 {
 bvec2 _f0;
 mat4x3 _f1;
} ;

struct _GLF_struct_4 {
 mat3x2 _f0;
 uint _f1;
 bvec3 _f2;
 mat4x2 _f3;
 vec2 _f4;
 ivec2 _f5;
 bool _f6;
} ;

struct _GLF_struct_6 {
 _GLF_struct_4 _f0;
 _GLF_struct_5 _f1;
} ;

struct _GLF_struct_2 {
 mat3 _f0;
 mat2x3 _f1;
 vec3 _f2;
} ;

struct _GLF_struct_1 {
 uvec4 _f0;
 mat2x4 _f1;
 vec4 _f2;
 vec2 _f3;
} ;

struct _GLF_struct_0 {
 mat2x3 _f0;
 mat2 _f1;
 uint _f2;
} ;

struct _GLF_struct_3 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 _GLF_struct_2 _f2;
} ;

struct _GLF_struct_10 {
 uvec4 _f0;
 _GLF_struct_3 _f1;
 _GLF_struct_6 _f2;
 _GLF_struct_9 _f3;
 mat4x3 _f4;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 uvec2 GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(9300.1624), _GLF_FUZZED(-8.2)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
        barrier();
       barrier();
      }
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((0.0 * -3.6))), vec2(_GLF_FUZZED(351.464), _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((true), false || ((true))))), true, true)), bvec2(bvec3(bvec2(bvec4(bvec2(false, true), true, true)), false)))))).y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), bool(bvec4(! (! ((injectionSwitch.x > injectionSwitch.y))), true, _GLF_IDENTITY(true, (true) || false), true)))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec2(50.50, -8480.7949).x), _GLF_FUZZED(471.788)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), injectionSwitch)).x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)), clamp(_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)), (false ? _GLF_FUZZED(-743.185) : _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))))), vec2(0.0, 0.0) + ((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))).y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), true && (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 _GLF_struct_11 _GLF_struct_replacement_11 = _GLF_struct_11(gl_SubgroupID, true);
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x = _GLF_struct_replacement_11.subgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))))) || false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 _GLF_struct_10 _GLF_struct_replacement_10 = _GLF_struct_10(uvec4(1u), _GLF_struct_3(_GLF_struct_0(mat2x3(1.0), mat2(1.0), 1u), _GLF_struct_1(uvec4(1u), mat2x4(1.0), _GLF_IDENTITY(vec4(1.0), (vec4(1.0)) / vec4(1.0, 1.0, 1.0, 1.0)), vec2(1.0)), _GLF_struct_2(mat3(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, 1.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat3x2(0.4, _GLF_IDENTITY(_GLF_IDENTITY(-9759.9543, (true ? -9759.9543 : _GLF_FUZZED(0.8))), min(_GLF_IDENTITY(_GLF_IDENTITY(-9759.9543, (true ? -9759.9543 : _GLF_FUZZED(0.8))), min(_GLF_IDENTITY(-9759.9543, (true ? -9759.9543 : _GLF_FUZZED(0.8))), _GLF_IDENTITY(-9759.9543, (true ? -9759.9543 : _GLF_FUZZED(0.8))))), _GLF_IDENTITY(-9759.9543, (true ? -9759.9543 : _GLF_FUZZED(0.8))))), 86.71, 2.1, -1.8, -3.1)) : mat3x2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, 1.0, 1.0, 1.0)))))), mat2x3(1.0), vec3(1.0))), _GLF_struct_6(_GLF_struct_4(mat3x2(1.0), 1u, bvec3(true), mat4x2(1.0), vec2(1.0), _GLF_IDENTITY(ivec2(1), ~ (~ (ivec2(1)))), true), _GLF_struct_5(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(bvec2(true), true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true)), bvec2(bvec3(bvec2(true), true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec2(bvec3(_GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(bvec2(true), true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(bvec2(true), true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec3(bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(bvec2(true), true))), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(bvec2(true), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(bvec2(true), true))), true, false))), true, false))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))), true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, bool(bvec2(false, false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), mat4x3(1.0))), _GLF_struct_9(_GLF_struct_7(mat3x4(1.0), vec4(1.0), mat2x3(1.0)), _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec2(1u, 0u), clamp(uvec2(1u, 0u), uvec2(1u, 0u), uvec2(1u, 0u))))), uvec4(1u), _GLF_IDENTITY(uvec2(1u), (uvec2(_GLF_IDENTITY(1u, ~ (~ (1u))))) / (uvec2(1u, 1u) & uvec2(1u, 1u))), mat3(1.0), gl_SubgroupInvocationID, _GLF_struct_8(mat2(1.0), 1, vec2(1.0), mat3x2(1.0), mat2x4(1.0), mat4x2(1.0), uvec2(1u)), vec4(1.0)), mat4x3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(float(vec3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0)), (_GLF_IDENTITY(_GLF_IDENTITY(float(vec3(1.0, 1.0, 1.0)), mix(float(float(vec3(1.0, 1.0, 1.0))), float(_GLF_FUZZED((-5860.8230))), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))), (float(vec3(1.0, 1.0, 1.0))) / 1.0)) - tan(0.0)), _GLF_IDENTITY(clamp(_GLF_IDENTITY(float(vec3(1.0, 1.0, 1.0)), (_GLF_IDENTITY(float(vec3(1.0, 1.0, 1.0)), (float(vec3(1.0, 1.0, 1.0))) / 1.0)) - tan(0.0)), _GLF_IDENTITY(float(vec3(1.0, 1.0, 1.0)), (_GLF_IDENTITY(float(vec3(1.0, 1.0, 1.0)), (float(vec3(1.0, 1.0, 1.0))) / 1.0)) - tan(0.0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(float(vec3(1.0, 1.0, 1.0)), min(float(vec3(1.0, 1.0, 1.0)), float(vec3(1.0, 1.0, 1.0)))), (_GLF_IDENTITY(float(vec3(1.0, 1.0, 1.0)), (float(vec3(1.0, 1.0, 1.0))) / 1.0)) - tan(0.0)), 0.0 + (_GLF_IDENTITY(float(vec3(1.0, 1.0, 1.0)), _GLF_IDENTITY((_GLF_IDENTITY(float(vec3(1.0, 1.0, 1.0)), (float(vec3(1.0, 1.0, 1.0))) / 1.0)), clamp((_GLF_IDENTITY(float(vec3(1.0, 1.0, 1.0)), (float(vec3(1.0, 1.0, 1.0))) / 1.0)), (_GLF_IDENTITY(float(vec3(1.0, 1.0, 1.0)), (float(vec3(1.0, 1.0, 1.0))) / 1.0)), _GLF_IDENTITY((_GLF_IDENTITY(float(vec3(1.0, 1.0, 1.0)), (float(vec3(1.0, 1.0, 1.0))) / 1.0)), _GLF_IDENTITY(float(vec3(_GLF_IDENTITY((_GLF_IDENTITY(float(vec3(1.0, 1.0, 1.0)), (float(vec3(1.0, 1.0, 1.0))) / 1.0)), mix(float(_GLF_FUZZED(-84.72)), float((_GLF_IDENTITY(float(vec3(1.0, 1.0, 1.0)), (float(vec3(1.0, 1.0, 1.0))) / 1.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 0.0, sqrt(0.0))), min(float(vec3(_GLF_IDENTITY((_GLF_IDENTITY(float(vec3(1.0, 1.0, 1.0)), (float(vec3(1.0, 1.0, 1.0))) / 1.0)), mix(float(_GLF_FUZZED(-84.72)), float((_GLF_IDENTITY(float(vec3(1.0, 1.0, 1.0)), (float(vec3(1.0, 1.0, 1.0))) / 1.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 0.0, sqrt(0.0))), float(vec3(_GLF_IDENTITY((_GLF_IDENTITY(float(vec3(1.0, 1.0, 1.0)), (float(vec3(1.0, 1.0, 1.0))) / 1.0)), mix(float(_GLF_FUZZED(-84.72)), float((_GLF_IDENTITY(float(vec3(1.0, 1.0, 1.0)), (float(vec3(1.0, 1.0, 1.0))) / 1.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 0.0, sqrt(0.0)))))))) - tan(0.0))))), float(mat4x2(clamp(_GLF_IDENTITY(float(vec3(1.0, 1.0, 1.0)), (_GLF_IDENTITY(float(vec3(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 1.0)), (float(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), min(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), clamp(vec3(1.0, 1.0, 1.0), vec3(1.0, 1.0, 1.0), vec3(1.0, 1.0, 1.0))), vec3(1.0, 1.0, 1.0))))) / 1.0)) - tan(0.0)), _GLF_IDENTITY(float(vec3(1.0, 1.0, 1.0)), (_GLF_IDENTITY(float(vec3(1.0, 1.0, 1.0)), (float(vec3(1.0, 1.0, 1.0))) / 1.0)) - tan(0.0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(float(vec3(1.0, 1.0, 1.0)), mix(float(float(vec3(1.0, 1.0, 1.0))), float(_GLF_FUZZED(40.41)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(float(vec3(1.0, 1.0, 1.0)), (float(vec3(1.0, 1.0, 1.0))) / 1.0)) - _GLF_IDENTITY(tan(0.0), (true ? _GLF_IDENTITY(tan(0.0), mix(float(_GLF_FUZZED(-1.8)), float(_GLF_IDENTITY(tan(0.0), 0.0 + (tan(0.0)))), bool(true))) : _GLF_FUZZED(mod(90.22, -962.853))))), 0.0 + (_GLF_IDENTITY(float(vec3(1.0, 1.0, 1.0)), (_GLF_IDENTITY(float(vec3(1.0, 1.0, 1.0)), (float(vec3(1.0, 1.0, 1.0))) / 1.0)) - tan(0.0))))), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, sin(length(vec4(0.0, 0.0, 0.0, 0.0))))))))));
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (false ? _GLF_FUZZED(uvec3(66561u, 10659u, 188045u)) : _GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)))).x, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), uint(_GLF_IDENTITY(uint(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupSize.x))) | (0u ^ 0u)))), (uint(~ (gl_WorkGroupSize.x))) >> 0u)))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), (bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false))) && true)), false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)), (bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false))) && true)))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.y = workgroup_base;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-4.1)), bool(false))) < injectionSwitch.y)), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-4.1)), bool(false))) < injectionSwitch.y))) && true), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, _GLF_IDENTITY(dot(vec3(cos(0.0), 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(cos(0.0), 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0)), vec3(0.0, 1.0, 1.0))), _GLF_IDENTITY(1.0, (1.0) / _GLF_IDENTITY(1.0, _GLF_IDENTITY((_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0)))) * 1.0, (false ? _GLF_FUZZED(1.4) : (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0)))) * 1.0)))), 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(exp(0.0), 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(exp(0.0), 0.0, 1.0), vec3(0.0, 1.0, 0.0))), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(_GLF_IDENTITY(vec3(1.0, 1.0, 0.0), (vec3(1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec4(1.0, 0.0, 1.0, 0.0), (vec4(1.0, 0.0, 1.0, 0.0)) * mat4(1.0)))), 0.0)) - cross(vec3(-2338.0483, 849.197, -4.4), vec3(-2338.0483, 849.197, -4.4))), vec3(0.0, 0.0, 1.0))), 0.0, exp(0.0)), (mat4x3(injectionSwitch.y, _GLF_IDENTITY(dot(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec3(cos(0.0), 0.0, 0.0), mix(vec3(_GLF_FUZZED(-935.791), _GLF_FUZZED(-41.87), _GLF_FUZZED(_GLF_IDENTITY(5.9, (5.9) - 0.0))), vec3((vec3(_GLF_IDENTITY(cos(0.0), float(mat2x4(cos(0.0), 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), vec4(0.0, 1.0, 1.0, 0.0))), 1.0, 1.0, 1.0, 1.0, 1.0))), 0.0, 0.0))[0], (vec3(cos(0.0), 0.0, 0.0))[1], (vec3(cos(0.0), 0.0, 0.0))[2]), bvec3(_GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))), (injectionSwitch.x < injectionSwitch.y)), true, true))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(vec3(cos(0.0), 0.0, 0.0), mix(vec3(_GLF_FUZZED(-935.791), _GLF_FUZZED(-41.87), _GLF_FUZZED(_GLF_IDENTITY(5.9, (5.9) - 0.0))), vec3((vec3(cos(0.0), 0.0, 0.0))[0], (vec3(cos(0.0), 0.0, 0.0))[1], (vec3(cos(0.0), 0.0, 0.0))[2]), bvec3(_GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))), (injectionSwitch.x < injectionSwitch.y)), true, true))), (_GLF_IDENTITY(vec3(cos(0.0), 0.0, 0.0), mix(vec3(_GLF_FUZZED(-935.791), _GLF_FUZZED(-41.87), _GLF_FUZZED(_GLF_IDENTITY(5.9, (5.9) - 0.0))), vec3((vec3(cos(0.0), 0.0, 0.0))[0], (vec3(cos(0.0), 0.0, 0.0))[1], (vec3(cos(0.0), 0.0, 0.0))[2]), bvec3(_GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))), (injectionSwitch.x < injectionSwitch.y)), true, true)))) - vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(vec3(cos(0.0), 0.0, 0.0), mix(vec3(_GLF_FUZZED(-935.791), _GLF_FUZZED(-41.87), _GLF_FUZZED(_GLF_IDENTITY(5.9, (5.9) - 0.0))), vec3((vec3(cos(0.0), 0.0, 0.0))[0], (vec3(cos(0.0), 0.0, 0.0))[1], (vec3(cos(0.0), 0.0, 0.0))[2]), bvec3(_GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))), (injectionSwitch.x < injectionSwitch.y)), true, true))), _GLF_IDENTITY(_GLF_IDENTITY(vec3(cos(0.0), 0.0, 0.0), mix(vec3(_GLF_FUZZED(-935.791), _GLF_FUZZED(-41.87), _GLF_FUZZED(_GLF_IDENTITY(5.9, (5.9) - 0.0))), vec3((vec3(cos(0.0), 0.0, 0.0))[0], (vec3(_GLF_IDENTITY(cos(0.0), min(_GLF_IDENTITY(cos(0.0), mix(float(_GLF_FUZZED(-789.756)), float(cos(0.0)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), cos(0.0))), 0.0, 0.0))[1], (vec3(cos(0.0), 0.0, 0.0))[2]), _GLF_IDENTITY(bvec3(_GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))), (injectionSwitch.x < injectionSwitch.y)), true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))), (injectionSwitch.x < injectionSwitch.y)), true, true))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))), (injectionSwitch.x < injectionSwitch.y)), true, true))))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(vec3(cos(0.0), 0.0, 0.0), mix(vec3(_GLF_FUZZED(-935.791), _GLF_FUZZED(-41.87), _GLF_FUZZED(_GLF_IDENTITY(5.9, (5.9) - 0.0))), vec3((vec3(cos(0.0), 0.0, 0.0))[0], (vec3(cos(0.0), 0.0, 0.0))[1], (vec3(cos(0.0), 0.0, 0.0))[2]), bvec3(_GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))), (injectionSwitch.x < injectionSwitch.y)), true, true))), (true ? _GLF_IDENTITY(vec3(cos(0.0), 0.0, 0.0), mix(vec3(_GLF_FUZZED(-935.791), _GLF_FUZZED(-41.87), _GLF_FUZZED(_GLF_IDENTITY(5.9, (5.9) - 0.0))), vec3((vec3(cos(0.0), 0.0, 0.0))[0], (vec3(cos(0.0), 0.0, 0.0))[1], (vec3(cos(0.0), 0.0, 0.0))[2]), bvec3(_GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))), true, true))) : _GLF_FUZZED(vec3(668.990, -1578.8621, 6.1)))), _GLF_IDENTITY(vec3(cos(0.0), 0.0, 0.0), mix(vec3(_GLF_FUZZED(-935.791), _GLF_FUZZED(-41.87), _GLF_FUZZED(_GLF_IDENTITY(5.9, _GLF_IDENTITY((5.9) - 0.0, float(vec2((5.9) - 0.0, 0.0)))))), vec3((vec3(cos(0.0), 0.0, 0.0))[0], (vec3(cos(0.0), 0.0, 0.0))[_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, max(1, 1))))], (vec3(cos(0.0), 0.0, 0.0))[2]), bvec3(_GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))), (injectionSwitch.x < injectionSwitch.y)), true, true))))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(vec3(cos(0.0), 0.0, 0.0), mix(vec3(_GLF_FUZZED(-935.791), _GLF_FUZZED(-41.87), _GLF_FUZZED(5.9)), vec3((vec3(cos(0.0), 0.0, 0.0))[0], (_GLF_IDENTITY(vec3(cos(0.0), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(0.0, 0.0), mat2(1.0) * (vec2(0.0, 0.0)))), max(float(vec2(0.0, 0.0)), float(vec2(0.0, 0.0))))), 0.0), _GLF_IDENTITY((vec3(cos(0.0), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(0.0, 0.0), mat2(1.0) * (vec2(0.0, 0.0)))), max(float(vec2(0.0, 0.0)), float(vec2(0.0, 0.0))))), 0.0)) / vec3(1.0, 1.0, 1.0), ((vec3(_GLF_IDENTITY(cos(0.0), max(cos(0.0), cos(0.0))), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(0.0, 0.0), mat2(1.0) * (vec2(0.0, 0.0)))), max(float(vec2(0.0, 0.0)), float(vec2(0.0, 0.0))))), 0.0)) / vec3(1.0, 1.0, 1.0)) - vec3(0.0, 0.0, 0.0))))[1], (vec3(cos(0.0), 0.0, 0.0))[2]), bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))), _GLF_IDENTITY(vec3(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(vec3(cos(0.0), 0.0, 0.0), mix(vec3(_GLF_FUZZED(-935.791), _GLF_FUZZED(-41.87), _GLF_FUZZED(5.9)), vec3((vec3(cos(0.0), 0.0, 0.0))[0], (_GLF_IDENTITY(vec3(cos(0.0), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(0.0, 0.0), mat2(1.0) * (vec2(0.0, 0.0)))), max(float(vec2(0.0, 0.0)), float(vec2(0.0, 0.0))))), 0.0), _GLF_IDENTITY((vec3(cos(0.0), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(0.0, 0.0), mat2(1.0) * (vec2(0.0, 0.0)))), max(float(vec2(0.0, 0.0)), float(vec2(0.0, 0.0))))), 0.0)) / vec3(1.0, 1.0, 1.0), ((vec3(_GLF_IDENTITY(cos(0.0), max(cos(0.0), cos(0.0))), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(0.0, 0.0), mat2(1.0) * (vec2(0.0, 0.0)))), max(float(vec2(0.0, 0.0)), float(vec2(0.0, 0.0))))), 0.0)) / vec3(1.0, 1.0, 1.0)) - vec3(0.0, 0.0, 0.0))))[1], (vec3(cos(0.0), 0.0, 0.0))[2]), bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat4x3(4.2, 2.1, -8.0, 8.1, 69.46, -84.69, 70.19, -89.38, -17.77, -686.526, -470.493, 7512.7243)) : _GLF_IDENTITY(mat4x3(_GLF_IDENTITY(vec3(cos(0.0), 0.0, 0.0), mix(vec3(_GLF_FUZZED(-935.791), _GLF_FUZZED(-41.87), _GLF_FUZZED(5.9)), vec3((vec3(cos(0.0), 0.0, 0.0))[0], (_GLF_IDENTITY(vec3(cos(0.0), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(0.0, 0.0), mat2(1.0) * (vec2(0.0, 0.0)))), max(float(vec2(0.0, 0.0)), float(vec2(0.0, 0.0))))), 0.0), _GLF_IDENTITY((vec3(cos(0.0), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(0.0, 0.0), mat2(1.0) * (vec2(0.0, 0.0)))), max(float(vec2(0.0, 0.0)), float(vec2(0.0, 0.0))))), 0.0)) / vec3(1.0, 1.0, 1.0), ((vec3(_GLF_IDENTITY(cos(0.0), max(cos(0.0), cos(0.0))), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(0.0, 0.0), mat2(1.0) * (vec2(0.0, 0.0)))), max(float(vec2(0.0, 0.0)), float(vec2(0.0, 0.0))))), 0.0)) / vec3(1.0, 1.0, 1.0)) - vec3(0.0, 0.0, 0.0))))[1], (vec3(cos(0.0), 0.0, 0.0))[2]), bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0), (mat4x3(_GLF_IDENTITY(vec3(cos(0.0), 0.0, 0.0), mix(vec3(_GLF_FUZZED(-935.791), _GLF_FUZZED(-41.87), _GLF_FUZZED(5.9)), vec3((vec3(cos(0.0), 0.0, 0.0))[0], (_GLF_IDENTITY(vec3(cos(0.0), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(0.0, 0.0), mat2(1.0) * (vec2(0.0, 0.0)))), max(float(vec2(0.0, 0.0)), float(vec2(0.0, 0.0))))), 0.0), _GLF_IDENTITY((vec3(cos(0.0), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(0.0, 0.0), mat2(1.0) * (vec2(0.0, 0.0)))), max(float(vec2(0.0, 0.0)), float(vec2(0.0, 0.0))))), 0.0)) / vec3(1.0, 1.0, 1.0), ((vec3(_GLF_IDENTITY(cos(0.0), max(cos(0.0), cos(0.0))), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(0.0, 0.0), mat2(1.0) * (vec2(0.0, 0.0)))), max(float(vec2(0.0, 0.0)), float(vec2(0.0, 0.0))))), 0.0)) / vec3(1.0, 1.0, 1.0)) - vec3(0.0, 0.0, 0.0))))[1], (vec3(cos(0.0), 0.0, 0.0))[2]), bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0)) + mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), mix(vec3((vec3(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(vec3(cos(0.0), 0.0, 0.0), mix(vec3(_GLF_FUZZED(-935.791), _GLF_FUZZED(-41.87), _GLF_FUZZED(5.9)), vec3((vec3(cos(0.0), 0.0, 0.0))[0], (_GLF_IDENTITY(vec3(cos(0.0), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(0.0, 0.0), mat2(1.0) * (vec2(0.0, 0.0)))), max(float(vec2(0.0, 0.0)), float(vec2(0.0, 0.0))))), 0.0), _GLF_IDENTITY((vec3(cos(0.0), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(0.0, 0.0), mat2(1.0) * (vec2(0.0, 0.0)))), max(float(vec2(0.0, 0.0)), float(vec2(0.0, 0.0))))), 0.0)) / vec3(1.0, 1.0, 1.0), ((vec3(_GLF_IDENTITY(cos(0.0), max(cos(0.0), cos(0.0))), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(0.0, 0.0), mat2(1.0) * (vec2(0.0, 0.0)))), max(float(vec2(0.0, 0.0)), float(vec2(0.0, 0.0))))), 0.0)) / vec3(1.0, 1.0, 1.0)) - vec3(0.0, 0.0, 0.0))))[1], (vec3(cos(0.0), 0.0, 0.0))[2]), bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat4x3(4.2, 2.1, -8.0, 8.1, 69.46, -84.69, 70.19, -89.38, -17.77, -686.526, -470.493, 7512.7243)) : _GLF_IDENTITY(mat4x3(_GLF_IDENTITY(vec3(cos(0.0), 0.0, 0.0), mix(vec3(_GLF_FUZZED(-935.791), _GLF_FUZZED(-41.87), _GLF_FUZZED(5.9)), vec3((vec3(cos(0.0), 0.0, 0.0))[0], (_GLF_IDENTITY(vec3(cos(0.0), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(0.0, 0.0), mat2(1.0) * (vec2(0.0, 0.0)))), max(float(vec2(0.0, 0.0)), float(vec2(0.0, 0.0))))), 0.0), _GLF_IDENTITY((vec3(cos(0.0), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(0.0, 0.0), mat2(1.0) * (vec2(0.0, 0.0)))), max(float(vec2(0.0, 0.0)), float(vec2(0.0, 0.0))))), 0.0)) / vec3(1.0, 1.0, 1.0), ((vec3(_GLF_IDENTITY(cos(0.0), max(cos(0.0), cos(0.0))), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(0.0, 0.0), mat2(1.0) * (vec2(0.0, 0.0)))), max(float(vec2(0.0, 0.0)), float(vec2(0.0, 0.0))))), 0.0)) / vec3(1.0, 1.0, 1.0)) - vec3(0.0, 0.0, 0.0))))[1], (vec3(cos(0.0), 0.0, 0.0))[2]), bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0), (mat4x3(_GLF_IDENTITY(vec3(cos(0.0), 0.0, 0.0), mix(vec3(_GLF_FUZZED(-935.791), _GLF_FUZZED(-41.87), _GLF_FUZZED(5.9)), vec3((vec3(cos(0.0), 0.0, 0.0))[0], (_GLF_IDENTITY(vec3(cos(0.0), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(0.0, 0.0), mat2(1.0) * (vec2(0.0, 0.0)))), max(float(vec2(0.0, 0.0)), float(vec2(0.0, 0.0))))), 0.0), _GLF_IDENTITY((vec3(cos(0.0), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(0.0, 0.0), mat2(1.0) * (vec2(0.0, 0.0)))), max(float(vec2(0.0, 0.0)), float(vec2(0.0, 0.0))))), 0.0)) / vec3(1.0, 1.0, 1.0), ((vec3(_GLF_IDENTITY(cos(0.0), max(cos(0.0), cos(0.0))), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(0.0, 0.0), mat2(1.0) * (vec2(0.0, 0.0)))), max(float(vec2(0.0, 0.0)), float(vec2(0.0, 0.0))))), 0.0)) / vec3(1.0, 1.0, 1.0)) - vec3(0.0, 0.0, 0.0))))[1], (vec3(cos(0.0), 0.0, 0.0))[2]), bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0)) + mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))[0], (vec3(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(vec3(cos(0.0), 0.0, 0.0), mix(vec3(_GLF_FUZZED(-935.791), _GLF_FUZZED(-41.87), _GLF_FUZZED(5.9)), vec3((vec3(cos(0.0), 0.0, 0.0))[0], (_GLF_IDENTITY(vec3(cos(0.0), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(0.0, 0.0), mat2(1.0) * (vec2(0.0, 0.0)))), max(float(vec2(0.0, 0.0)), float(vec2(0.0, 0.0))))), 0.0), _GLF_IDENTITY((vec3(cos(0.0), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(0.0, 0.0), mat2(1.0) * (vec2(0.0, 0.0)))), max(float(vec2(0.0, 0.0)), float(vec2(0.0, 0.0))))), 0.0)) / vec3(1.0, 1.0, 1.0), ((vec3(_GLF_IDENTITY(cos(0.0), max(cos(0.0), cos(0.0))), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(0.0, 0.0), mat2(1.0) * (vec2(0.0, 0.0)))), max(float(vec2(0.0, 0.0)), float(vec2(0.0, 0.0))))), 0.0)) / vec3(1.0, 1.0, 1.0)) - vec3(0.0, 0.0, 0.0))))[1], (vec3(cos(0.0), 0.0, 0.0))[2]), bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat4x3(4.2, 2.1, -8.0, 8.1, 69.46, -84.69, 70.19, -89.38, -17.77, -686.526, -470.493, 7512.7243)) : _GLF_IDENTITY(mat4x3(_GLF_IDENTITY(vec3(cos(0.0), 0.0, 0.0), mix(vec3(_GLF_FUZZED(-935.791), _GLF_FUZZED(-41.87), _GLF_FUZZED(5.9)), vec3((vec3(cos(0.0), 0.0, 0.0))[0], (_GLF_IDENTITY(vec3(cos(0.0), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(0.0, 0.0), mat2(1.0) * (vec2(0.0, 0.0)))), max(float(vec2(0.0, 0.0)), float(vec2(0.0, 0.0))))), 0.0), _GLF_IDENTITY((vec3(cos(0.0), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(0.0, 0.0), mat2(1.0) * (vec2(0.0, 0.0)))), max(float(vec2(0.0, 0.0)), float(vec2(0.0, 0.0))))), 0.0)) / vec3(1.0, 1.0, 1.0), ((vec3(_GLF_IDENTITY(cos(0.0), max(cos(0.0), cos(0.0))), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(0.0, 0.0), mat2(1.0) * (vec2(0.0, 0.0)))), max(float(vec2(0.0, 0.0)), float(vec2(0.0, 0.0))))), 0.0)) / vec3(1.0, 1.0, 1.0)) - vec3(0.0, 0.0, 0.0))))[1], (vec3(cos(0.0), 0.0, 0.0))[2]), bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0), (mat4x3(_GLF_IDENTITY(vec3(cos(0.0), 0.0, 0.0), mix(vec3(_GLF_FUZZED(-935.791), _GLF_FUZZED(-41.87), _GLF_FUZZED(5.9)), vec3((vec3(cos(0.0), 0.0, 0.0))[0], (_GLF_IDENTITY(vec3(cos(0.0), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(0.0, 0.0), mat2(1.0) * (vec2(0.0, 0.0)))), max(float(vec2(0.0, 0.0)), float(vec2(0.0, 0.0))))), 0.0), _GLF_IDENTITY((vec3(cos(0.0), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(0.0, 0.0), mat2(1.0) * (vec2(0.0, 0.0)))), max(float(vec2(0.0, 0.0)), float(vec2(0.0, 0.0))))), 0.0)) / vec3(1.0, 1.0, 1.0), ((vec3(_GLF_IDENTITY(cos(0.0), max(cos(0.0), cos(0.0))), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(0.0, 0.0), mat2(1.0) * (vec2(0.0, 0.0)))), max(float(vec2(0.0, 0.0)), float(vec2(0.0, 0.0))))), 0.0)) / vec3(1.0, 1.0, 1.0)) - vec3(0.0, 0.0, 0.0))))[1], (vec3(cos(0.0), 0.0, 0.0))[2]), bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0)) + mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))[1], _GLF_FUZZED(1277.2268)), vec3(_GLF_FUZZED(76.42), _GLF_FUZZED(576.140), (vec3(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(vec3(cos(0.0), 0.0, 0.0), mix(vec3(_GLF_FUZZED(-935.791), _GLF_FUZZED(-41.87), _GLF_FUZZED(5.9)), vec3((vec3(cos(0.0), 0.0, 0.0))[0], (_GLF_IDENTITY(vec3(cos(0.0), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(0.0, 0.0), mat2(1.0) * (vec2(0.0, 0.0)))), max(float(vec2(0.0, 0.0)), float(vec2(0.0, 0.0))))), 0.0), _GLF_IDENTITY((vec3(cos(0.0), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(0.0, 0.0), mat2(1.0) * (vec2(0.0, 0.0)))), max(float(vec2(0.0, 0.0)), float(vec2(0.0, 0.0))))), 0.0)) / vec3(1.0, 1.0, 1.0), ((vec3(_GLF_IDENTITY(cos(0.0), max(cos(0.0), cos(0.0))), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(0.0, 0.0), mat2(1.0) * (vec2(0.0, 0.0)))), max(float(vec2(0.0, 0.0)), float(vec2(0.0, 0.0))))), 0.0)) / vec3(1.0, 1.0, 1.0)) - vec3(0.0, 0.0, 0.0))))[1], (vec3(cos(0.0), 0.0, 0.0))[2]), bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat4x3(4.2, 2.1, -8.0, 8.1, 69.46, -84.69, 70.19, -89.38, -17.77, -686.526, -470.493, 7512.7243)) : _GLF_IDENTITY(mat4x3(_GLF_IDENTITY(vec3(cos(0.0), 0.0, 0.0), mix(vec3(_GLF_FUZZED(-935.791), _GLF_FUZZED(-41.87), _GLF_FUZZED(5.9)), vec3((vec3(cos(0.0), 0.0, 0.0))[0], (_GLF_IDENTITY(vec3(cos(0.0), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(0.0, 0.0), mat2(1.0) * (vec2(0.0, 0.0)))), max(float(vec2(0.0, 0.0)), float(vec2(0.0, 0.0))))), 0.0), _GLF_IDENTITY((vec3(cos(0.0), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(0.0, 0.0), mat2(1.0) * (vec2(0.0, 0.0)))), max(float(vec2(0.0, 0.0)), float(vec2(0.0, 0.0))))), 0.0)) / vec3(1.0, 1.0, 1.0), ((vec3(_GLF_IDENTITY(cos(0.0), max(cos(0.0), cos(0.0))), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(0.0, 0.0), mat2(1.0) * (vec2(0.0, 0.0)))), max(float(vec2(0.0, 0.0)), float(vec2(0.0, 0.0))))), 0.0)) / vec3(1.0, 1.0, 1.0)) - vec3(0.0, 0.0, 0.0))))[1], (vec3(cos(0.0), 0.0, 0.0))[2]), bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0), (mat4x3(_GLF_IDENTITY(vec3(cos(0.0), 0.0, 0.0), mix(vec3(_GLF_FUZZED(-935.791), _GLF_FUZZED(-41.87), _GLF_FUZZED(5.9)), vec3((vec3(cos(0.0), 0.0, 0.0))[0], (_GLF_IDENTITY(vec3(cos(0.0), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(0.0, 0.0), mat2(1.0) * (vec2(0.0, 0.0)))), max(float(vec2(0.0, 0.0)), float(vec2(0.0, 0.0))))), 0.0), _GLF_IDENTITY((vec3(cos(0.0), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(0.0, 0.0), mat2(1.0) * (vec2(0.0, 0.0)))), max(float(vec2(0.0, 0.0)), float(vec2(0.0, 0.0))))), 0.0)) / vec3(1.0, 1.0, 1.0), ((vec3(_GLF_IDENTITY(cos(0.0), max(cos(0.0), cos(0.0))), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(0.0, 0.0), mat2(1.0) * (vec2(0.0, 0.0)))), max(float(vec2(0.0, 0.0)), float(vec2(0.0, 0.0))))), 0.0)) / vec3(1.0, 1.0, 1.0)) - vec3(0.0, 0.0, 0.0))))[1], (vec3(cos(0.0), 0.0, 0.0))[2]), bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0)) + mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))[2]), bvec3(false, false, true)))) : _GLF_FUZZED(vec3(1.4, 4726.4115, -2.8)))), _GLF_IDENTITY(vec3(0.0, 1.0, 1.0), (vec3(0.0, 1.0, 1.0)) - vec3(0.0, 0.0, 0.0))), dot(vec3(_GLF_IDENTITY(cos(0.0), (cos(0.0)) * 1.0), 0.0, 0.0), vec3(0.0, 1.0, 1.0))), _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(dot(vec3(exp(0.0), 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(exp(0.0), 0.0, 1.0), vec3(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(radians(-27.13)) : 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0)), _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-812.670)), float(_GLF_IDENTITY(0.0, min(0.0, 0.0))), bool(true)))))))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-784.367))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), (_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), clamp(_GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(1.0, (1.0) - 0.0)), _GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(distance(-4248.7172, -750.869)) : _GLF_IDENTITY(1.0, float(mat2(1.0, 0.0, 0.0, 1.0))))))))) / 1.0), 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0), vec3(0.0, 0.0, 1.0)), mix(float(_GLF_FUZZED(2.2)), float(dot(vec3(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0), vec3(0.0, 0.0, 1.0))), bool(true))), min(dot(_GLF_IDENTITY(vec3(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec3(-4.8, 2.3, 0.9)) : vec3(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0))), vec3(0.0, 0.0, 1.0)), dot(vec3(_GLF_IDENTITY(1.0, float(vec3(1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(float(0.0)), max(float(float(0.0)), float(float(0.0))))), 1.0))), _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0), vec3(0.0, 0.0, 1.0)))), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0), vec3(0.0, 0.0, 1.0)), mix(float(_GLF_FUZZED(2.2)), float(dot(vec3(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0), vec3(0.0, 0.0, 1.0))), bool(true))), min(dot(vec3(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(_GLF_IDENTITY(1.0, float(vec3(1.0, 0.0, 1.0))), _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0), vec3(0.0, 0.0, 1.0)))), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6305.1679)), bool(false))))), 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0), vec3(0.0, 0.0, 1.0)), mix(float(_GLF_FUZZED(2.2)), float(dot(vec3(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0), vec3(0.0, 0.0, 1.0))), bool(true))), min(dot(vec3(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(_GLF_IDENTITY(1.0, float(vec3(1.0, 0.0, 1.0))), _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0), vec3(0.0, 0.0, 1.0)))), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 1.0)), _GLF_IDENTITY(0.0, (0.0) / 1.0)), vec3(0.0, 0.0, 1.0)), mix(float(_GLF_FUZZED(2.2)), float(dot(vec3(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0), vec3(0.0, 0.0, 1.0))), bool(_GLF_IDENTITY(true, true && (true))))), min(dot(vec3(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(_GLF_IDENTITY(1.0, float(vec3(1.0, 0.0, 1.0))), _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0), vec3(0.0, 0.0, 1.0)))), dot(vec3(1.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 0.0, 1.0), (vec3(0.0, 0.0, 1.0)) / vec3(1.0, 1.0, 1.0))))) / 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-146.534)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 0.0), vec3(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0, 1.0)), dot(vec3(_GLF_IDENTITY(1.0, float(vec4(_GLF_IDENTITY(1.0, (1.0) / exp(0.0)), 1.0, 1.0, 0.0))), 1.0, 0.0), vec3(0.0, 0.0, 1.0))), (_GLF_IDENTITY(dot(vec3(1.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)))) + _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-318.891)), bool(false)))))), 0.0, _GLF_IDENTITY(exp(0.0), float(mat2(_GLF_IDENTITY(_GLF_IDENTITY(exp(0.0), _GLF_ZERO(0.0, injectionSwitch.x) + (exp(0.0))), max(_GLF_IDENTITY(exp(0.0), _GLF_ZERO(0.0, injectionSwitch.x) + (exp(0.0))), _GLF_IDENTITY(exp(0.0), _GLF_ZERO(0.0, injectionSwitch.x) + (exp(0.0))))), 1.0, _GLF_IDENTITY(dot(vec4(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((-5.4 - (-1.3)))), float(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(smoothstep(-65.63, -6.0, 9.0)) : 1.0))), bool(true))), 0.0, 1.0, 0.0)), 0.0, 0.0, _GLF_IDENTITY(length(vec4(0.0, 0.0, 0.0, 0.0)), float(mat2x4(_GLF_IDENTITY(length(vec4(0.0, 0.0, 0.0, 0.0)), max(length(vec4(0.0, 0.0, 0.0, 0.0)), length(vec4(0.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-946.062))), 0.0, 0.0, 1.0, 1.0, 0.0, sqrt(0.0))))), vec4(1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), abs(1.0))), dot(vec4(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0)), 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0))), vec4(1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x3(0.0, tan(0.0), 0.0, cos(0.0), 0.0, sin(0.0))), (true ? float(mat2x3(0.0, tan(0.0), 0.0, cos(0.0), 0.0, sin(0.0))) : _GLF_FUZZED(7.8))))), vec3(0.0, 1.0, 0.0))), abs(1.0)))), tan(0.0)))))) - mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat4x3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0))), 0.0, 0.0)))))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))) || false))) || false)))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec2(! (false), true)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(! (false), true)), true && (bool(bvec2(! (false), true)))), bool(bvec4(_GLF_IDENTITY(bool(bvec2(! (false), true)), true && (bool(bvec2(! (false), true)))), true, false, true)))))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)))), true && (bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.y + _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x, (false ? _GLF_FUZZED(subgroup_size) : GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x)) * subgroup_size + _GLF_IDENTITY(_GLF_struct_replacement_10._f3.subgroup_local_id, (_GLF_struct_replacement_10._f3.subgroup_local_id) + (0u | 0u));
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) || false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.y + _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x * subgroup_size, (GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x * subgroup_size) * 1u) + ((_GLF_struct_replacement_10._f3.subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ 0u), 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, (false) && true) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_struct_replacement_10._f3.subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, false)))) && true))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(refract(-217.205, 571.138, -4.6)) : injectionSwitch.y)), (injectionSwitch.y) - _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4x2(0.0, 0.0, 1.0, tan(0.0), length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 1.0)), (true ? float(mat4x2(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.7)), bool(false))), 0.0, 1.0, tan(0.0), length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 1.0)) : _GLF_FUZZED(-53.15))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(refract(-217.205, 571.138, -4.6)), (_GLF_FUZZED(refract(-217.205, 571.138, -4.6))) / 1.0) : injectionSwitch.y)), (injectionSwitch.y) - _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4x2(0.0, 0.0, 1.0, tan(0.0), length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 1.0)), (true ? float(mat4x2(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.7)), bool(false))), 0.0, 1.0, tan(0.0), length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 1.0)) : _GLF_FUZZED(-53.15)))))) - 0.0))), false, _GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)), ! (! (_GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)), ! (! (bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))))))))), _GLF_IDENTITY(true, false || _GLF_IDENTITY((true), ! (_GLF_IDENTITY(! ((true)), bool(bvec4(! ((true)), false, false, true)))))) && (_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(! _GLF_IDENTITY((! (false)), bool(bvec3((! (false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec3(! _GLF_IDENTITY((! (false)), bool(bvec3((! (false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, false)), (bool(bvec3(! _GLF_IDENTITY((! (false)), bool(bvec3((! (false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, false))) || false))))), (injectionSwitch.x > injectionSwitch.y)))), false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(bool(bool(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), ! (! (bool(bool(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_FUZZED((7268.7967 * _GLF_IDENTITY(-912.741, max(-912.741, -912.741))))), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), min(mix(float(_GLF_FUZZED((7268.7967 * _GLF_IDENTITY(-912.741, max(-912.741, -912.741))))), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), mix(float(_GLF_FUZZED((7268.7967 * _GLF_IDENTITY(-912.741, max(-912.741, -912.741))))), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), false || (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))), false, true))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(checker[virtual_gid], _GLF_IDENTITY(read, _GLF_IDENTITY((read), (_GLF_IDENTITY((read), max(_GLF_IDENTITY((read), ((read)) << 0u), (read)))) - 0u) | (read)), 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, true && (false)))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! (! (false || (false)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     atomicStore(checker[virtual_gid], read, 4, 64, 4);
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(true);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(_GLF_IDENTITY(! (! (! (false))), bool(bvec4(! (! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))), ! (! (_GLF_IDENTITY(! (! (! (false))), bool(bvec4(! (! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))))))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), true && ((false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), false)), ! (! (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), false))))))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
