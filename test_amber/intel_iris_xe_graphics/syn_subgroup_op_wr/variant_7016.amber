#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_6 {
 vec2 _f0;
 bvec4 _f1;
 uint _f2;
 bool _f3;
 mat4 _f4;
} ;

struct _GLF_struct_5 {
 int _f0;
 float _f1;
 mat2x4 _f2;
 mat3x4 _f3;
 int _f4;
} ;

struct _GLF_struct_4 {
 uint _f0;
 bvec3 _f1;
 mat4 _f2;
} ;

struct _GLF_struct_7 {
 mat4x3 _f0;
 ivec4 _f1;
 mat2x3 _f2;
 _GLF_struct_4 _f3;
 _GLF_struct_5 _f4;
 _GLF_struct_6 _f5;
} ;

struct _GLF_struct_2 {
 bool _f0;
 bool _f1;
 mat4 _f2;
 bool _f3;
 ivec3 _f4;
} ;

struct _GLF_struct_1 {
 uint virtual_gid;
 ivec4 _f0;
 mat4 _f1;
 bvec4 _f2;
 mat4 _f3;
 vec2 _f4;
 bool _f5;
 mat3 _f6;
} ;

struct _GLF_struct_0 {
 mat2x3 _f0;
 mat4x2 _f1;
 mat2 _f2;
 ivec2 _f3;
} ;

struct _GLF_struct_3 {
 _GLF_struct_0 _f0;
 mat2x4 _f1;
 _GLF_struct_1 _f2;
 ivec2 _f3;
 mat4 _f4;
 vec3 _f5;
 _GLF_struct_2 _f6;
} ;

struct _GLF_struct_8 {
 ivec2 _f0;
 _GLF_struct_3 _f1;
 _GLF_struct_7 _f2;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 for(int _injected_loop_counter = _GLF_IDENTITY((_GLF_IDENTITY(0 << _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, (6) >> 0))), (false ? _GLF_FUZZED(-92545) : 0 << _GLF_IDENTITY(int(6), int(6))))), clamp((_GLF_IDENTITY(0 << _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, (6) >> 0))), (false ? _GLF_FUZZED(-92545) : 0 << _GLF_IDENTITY(int(6), int(6))))), _GLF_IDENTITY((_GLF_IDENTITY(0 << _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, (6) >> 0))), (false ? _GLF_FUZZED(-92545) : 0 << _GLF_IDENTITY(int(6), int(6))))), clamp((_GLF_IDENTITY(0 << _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, (6) >> 0))), (false ? _GLF_FUZZED(-92545) : 0 << _GLF_IDENTITY(int(6), int(6))))), (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, (6) >> 0))), (false ? _GLF_FUZZED(-92545) : 0 << _GLF_IDENTITY(int(6), int(6))))), _GLF_IDENTITY((_GLF_IDENTITY(0 << _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, (6) >> 0))), (false ? _GLF_FUZZED(-92545) : 0 << _GLF_IDENTITY(int(6), int(6))))), (true ? (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, (6) >> 0))), (false ? _GLF_FUZZED(-92545) : 0 << _GLF_IDENTITY(int(6), int(6))))) : _GLF_FUZZED(-70787))))), (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, (6) >> 0))), (false ? _GLF_FUZZED(-92545) : 0 << _GLF_IDENTITY(int(6), int(6))))))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), ! (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 1, (_GLF_IDENTITY(_injected_loop_counter, clamp(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, int(ivec4(_injected_loop_counter, 0, 0, 0)))) | (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) * 1))), _GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (false ? _GLF_FUZZED(_injected_loop_counter) : _injected_loop_counter)), _injected_loop_counter)), (_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (false ? _GLF_FUZZED(_injected_loop_counter) : _injected_loop_counter)), _injected_loop_counter))) | (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (false ? _GLF_FUZZED(_injected_loop_counter) : _injected_loop_counter)), _injected_loop_counter)), _GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (false ? _GLF_FUZZED(_injected_loop_counter) : _injected_loop_counter)), _injected_loop_counter))), min(_GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (false ? _GLF_FUZZED(_injected_loop_counter) : _injected_loop_counter)), _injected_loop_counter))), max((_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (false ? _GLF_FUZZED(_injected_loop_counter) : _injected_loop_counter)), _injected_loop_counter))), (_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (false ? _GLF_FUZZED(_injected_loop_counter) : _injected_loop_counter)), _injected_loop_counter))))), _GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (false ? _GLF_FUZZED(_injected_loop_counter) : _injected_loop_counter)), _injected_loop_counter))), int(ivec4((_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (false ? _GLF_FUZZED(_injected_loop_counter) : _injected_loop_counter)), _injected_loop_counter))), 0, 1, 1))))) - 0))), _injected_loop_counter)) != 1) || false))))); _GLF_IDENTITY(_injected_loop_counter ++, (_GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) << 0)) | 0))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) && _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), ! (! (_GLF_IDENTITY(true, true && (true)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), (true) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, false || _GLF_IDENTITY(_GLF_IDENTITY((true), _GLF_IDENTITY(! (! ((true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (! ((true))), (! (! ((true)))) && true), true && (! _GLF_IDENTITY((! ((true))), ! (! ((! ((true))))))))), _GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(! (! ((true))), true && (! (_GLF_IDENTITY(! ((true)), bool(bvec2(! ((true)), true))))))))), _GLF_IDENTITY(! (! (bool(bool(! (_GLF_IDENTITY(! (! ((true))), true && (! (! ((true)))))))))), (_GLF_IDENTITY(! (! (bool(bool(! (_GLF_IDENTITY(! (! ((true))), true && (! (! ((true)))))))))), true && (! (! (bool(bool(! (_GLF_IDENTITY(! (! ((true))), true && (! (! ((true))))))))))))) || false)))))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY((true), bool(bvec4(_GLF_IDENTITY((true), ((true)) && true), true, false, _GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), false || (_GLF_IDENTITY(true, bool(bvec4(true, false, false, true))))))))), ((_GLF_IDENTITY((true), bool(bvec4((true), true, false, _GLF_IDENTITY(true, _GLF_IDENTITY(false || (_GLF_IDENTITY(true, bool(bvec4(true, false, false, true)))), ! (! (false || (_GLF_IDENTITY(true, bool(bvec4(true, false, false, true))))))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(! (_GLF_IDENTITY((true), bool(bvec4((true), true, false, true)))), true)))))), (true) && true))))))
      {
       do
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
    }
   else
    {
    }
  }
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > (((-90412 | 51078) ^ 57487) & (_GLF_IDENTITY(-67080, (-67080) | (1 ^ 1)) & 0))); _injected_loop_counter --)
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
    {
     barrier();
    }
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (_GLF_IDENTITY(gl_NumWorkGroups.x, uint(uvec2(gl_NumWorkGroups.x, 0u)))));
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(0), int(0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       do
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(5), int(5)))); _injected_loop_counter --)
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
            }
           else
            {
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     else
      {
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 else
  {
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 _GLF_struct_8 _GLF_struct_replacement_8 = _GLF_struct_8(ivec2(1), _GLF_struct_3(_GLF_struct_0(mat2x3(1.0), mat4x2(1.0), mat2(1.0), ivec2(1)), mat2x4(1.0), _GLF_struct_1(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * subgroup_size), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3((subgroup_id * subgroup_size), 0u, 0u)), max(uint(uvec3((subgroup_id * subgroup_size), 0u, 0u)), uint(uvec3((subgroup_id * subgroup_size), 0u, 0u)))), clamp(uint(uvec3((subgroup_id * subgroup_size), 0u, 0u)), uint(uvec3((subgroup_id * subgroup_size), 0u, 0u)), uint(uvec3((subgroup_id * subgroup_size), 0u, 0u))))) | 0u)), min(_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | _GLF_IDENTITY(0u, (0u) ^ 0u))), 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | _GLF_IDENTITY(0u, (0u) ^ 0u))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | _GLF_IDENTITY(0u, (0u) ^ 0u))), ((_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | _GLF_IDENTITY(0u, (0u) ^ 0u)))) | ((_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | _GLF_IDENTITY(0u, (0u) ^ 0u))))), (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | _GLF_IDENTITY(0u, (0u) ^ 0u))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | _GLF_IDENTITY(0u, (0u) ^ 0u))), ((_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | _GLF_IDENTITY(0u, (0u) ^ 0u)))) | 0u))))), ~ (~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u))))), ~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u)))))), 1u * (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * subgroup_size), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3((subgroup_id * subgroup_size), 0u, 0u)), max(uint(uvec3((subgroup_id * subgroup_size), 0u, _GLF_IDENTITY(0u, (0u) >> (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))))), uint(uvec3((subgroup_id * subgroup_size), _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(num_workgroup))), 0u)))), clamp(uint(uvec3((subgroup_id * subgroup_size), 0u, 0u)), uint(uvec3((subgroup_id * subgroup_size), 0u, 0u)), uint(uvec3((subgroup_id * subgroup_size), 0u, 0u))))) | 0u)), min(_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size))) | _GLF_IDENTITY(0u, (0u) ^ 0u))), ~ (~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u)), min(~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u)), _GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u)), clamp(~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u)), ~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u)), ~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u)))))))))))) + subgroup_local_id, ~ (_GLF_IDENTITY(~ (workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * subgroup_size) << 0u, ((subgroup_id * subgroup_size) << 0u) - 0u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * subgroup_size), _GLF_IDENTITY(uint(uvec3((subgroup_id * subgroup_size), 0u, 0u)), clamp(uint(uvec3((subgroup_id * subgroup_size), 0u, 0u)), uint(uvec3((_GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size)), _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(subgroup_size) : subgroup_id * subgroup_size))) | (subgroup_id * subgroup_size))))), 0u, 0u)), uint(uvec3((_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u))) * subgroup_size), 0u, 0u))))) | 0u)), min(_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), 0.0 + (_GLF_ZERO(0.0, injectionSwitch.x)))) / 1.0)) ^ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))), min(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) << 0u), subgroup_id * subgroup_size))), ((_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)) * subgroup_size, (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)) * subgroup_size) - 0u), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size) << 0u, (_GLF_IDENTITY((subgroup_id * subgroup_size) << 0u, ((subgroup_id * subgroup_size) << 0u) << 0u)) | (_GLF_IDENTITY((subgroup_id * subgroup_size) << 0u, ((_GLF_IDENTITY(subgroup_id, (true ? _GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u) : _GLF_FUZZED(subgroup_local_id))) * subgroup_size) << 0u) / 1u))), clamp(_GLF_IDENTITY((subgroup_id * subgroup_size) << 0u, (_GLF_IDENTITY((subgroup_id * subgroup_size) << 0u, ((subgroup_id * subgroup_size) << 0u) << 0u)) | (_GLF_IDENTITY((subgroup_id * subgroup_size) << 0u, ((subgroup_id * subgroup_size) << 0u) / 1u))), _GLF_IDENTITY((subgroup_id * subgroup_size) << 0u, (_GLF_IDENTITY((subgroup_id * subgroup_size) << 0u, ((subgroup_id * subgroup_size) << 0u) << 0u)) | (_GLF_IDENTITY((subgroup_id * subgroup_size) << 0u, ((subgroup_id * subgroup_size) << 0u) / 1u))), _GLF_IDENTITY((subgroup_id * subgroup_size) << 0u, (_GLF_IDENTITY((subgroup_id * subgroup_size) << 0u, ((subgroup_id * subgroup_size) << 0u) << 0u)) | (_GLF_IDENTITY((subgroup_id * subgroup_size) << 0u, ((subgroup_id * subgroup_size) << 0u) / 1u)))))), subgroup_id * subgroup_size)))) >> 0u))) | 0u)), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (true ? _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), max(~ (subgroup_id * subgroup_size), ~ (subgroup_id * subgroup_size))))) : _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_IDENTITY(_GLF_FUZZED(num_workgroup), max(_GLF_FUZZED(num_workgroup), _GLF_FUZZED(num_workgroup)))) * uint(_GLF_ONE(1.0, injectionSwitch.y))))), (subgroup_id * _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, 0u + (subgroup_size)), _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))) | 0u)), ~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (true ? _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), max(~ (subgroup_id * subgroup_size), ~ (subgroup_id * subgroup_size))))) : _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_IDENTITY(_GLF_FUZZED(num_workgroup), max(_GLF_FUZZED(num_workgroup), _GLF_FUZZED(num_workgroup)))) * uint(_GLF_ONE(1.0, injectionSwitch.y))))), (subgroup_id * _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, 0u + (subgroup_size)), _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))) | 0u))), 0u + (~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (true ? _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))), max(~ (subgroup_id * subgroup_size), ~ (subgroup_id * subgroup_size))))) : _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_IDENTITY(_GLF_FUZZED(num_workgroup), max(_GLF_FUZZED(num_workgroup), _GLF_FUZZED(num_workgroup)))) * uint(_GLF_ONE(1.0, injectionSwitch.y))))), _GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, 0u + (subgroup_size)), _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))) | 0u, 0u ^ ((subgroup_id * _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, 0u + (subgroup_size)), _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))) | 0u)))))))))))), ~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u)))))) + subgroup_local_id), clamp(~ (workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) << 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * subgroup_size), _GLF_IDENTITY(uint(uvec3((subgroup_id * subgroup_size), 0u, 0u)), clamp(uint(uvec3((subgroup_id * subgroup_size), 0u, 0u)), uint(uvec3((_GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size)), _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(subgroup_size) : subgroup_id * subgroup_size))) | (subgroup_id * subgroup_size))))), 0u, 0u)), uint(uvec3((_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u))) * subgroup_size), 0u, 0u))))) | 0u)), min(_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), 0.0 + (_GLF_ZERO(0.0, injectionSwitch.x)))) / 1.0)) ^ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) << 0u), subgroup_id * subgroup_size))), ((_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)) * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size) << 0u, (_GLF_IDENTITY((subgroup_id * subgroup_size) << 0u, ((subgroup_id * subgroup_size) << 0u) << 0u)) | (_GLF_IDENTITY((subgroup_id * subgroup_size) << 0u, ((subgroup_id * subgroup_size) << 0u) / 1u))), clamp(_GLF_IDENTITY((subgroup_id * subgroup_size) << _GLF_IDENTITY(0u, (0u) * 1u), (_GLF_IDENTITY((subgroup_id * subgroup_size) << 0u, ((subgroup_id * subgroup_size) << 0u) << 0u)) | (_GLF_IDENTITY((subgroup_id * subgroup_size) << 0u, ((subgroup_id * subgroup_size) << 0u) / 1u))), _GLF_IDENTITY((subgroup_id * subgroup_size) << 0u, (_GLF_IDENTITY((subgroup_id * subgroup_size) << 0u, ((subgroup_id * subgroup_size) << 0u) << 0u)) | (_GLF_IDENTITY((subgroup_id * subgroup_size) << 0u, ((subgroup_id * subgroup_size) << 0u) / 1u))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), ~ (~ ((subgroup_id * subgroup_size)))) << 0u, (_GLF_IDENTITY((subgroup_id * subgroup_size) << 0u, ((subgroup_id * subgroup_size) << 0u) << 0u)) | (_GLF_IDENTITY((subgroup_id * subgroup_size) << 0u, ((subgroup_id * subgroup_size) << 0u) / 1u)))))), subgroup_id * subgroup_size)))) >> 0u))) | 0u)), ~ (~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (true ? _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), max(~ (subgroup_id * subgroup_size), ~ (subgroup_id * subgroup_size))))) : _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_IDENTITY(_GLF_FUZZED(num_workgroup), max(_GLF_FUZZED(num_workgroup), _GLF_FUZZED(num_workgroup)))) * uint(_GLF_ONE(1.0, injectionSwitch.y))))), (subgroup_id * _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, 0u + (subgroup_size)), _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))) | 0u))))), ~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u)))))) + subgroup_local_id), _GLF_IDENTITY(~ (workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) << 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * subgroup_size), _GLF_IDENTITY(uint(uvec3((subgroup_id * subgroup_size), 0u, 0u)), clamp(uint(uvec3((subgroup_id * subgroup_size), 0u, 0u)), uint(uvec3((_GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size)), _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(subgroup_size) : subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))) << (151317u & 0u))))) | (subgroup_id * subgroup_size))))), 0u, 0u)), uint(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u))) * subgroup_size), (((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) ^ 1u) + ((_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u))) * subgroup_size))), 0u, 0u))))) | 0u)), min(_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), 0.0 + (_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(782.455, 10.93)) : injectionSwitch)).x)))) / 1.0)) ^ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) << 0u), subgroup_id * subgroup_size))), ((_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)) * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size) << 0u, (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), subgroup_size))))), _GLF_IDENTITY(uint(uint((subgroup_id * _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), subgroup_size))))))), (uint(uint((subgroup_id * _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), subgroup_size)))))))) ^ 0u)) << 0u, ((subgroup_id * subgroup_size) << 0u) << 0u)) | (_GLF_IDENTITY((subgroup_id * subgroup_size) << 0u, (_GLF_IDENTITY((subgroup_id * subgroup_size), ~ (~ ((subgroup_id * subgroup_size)))) << 0u) / 1u))), clamp(_GLF_IDENTITY((subgroup_id * subgroup_size) << 0u, (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) ^ 0u) << 0u, ((subgroup_id * subgroup_size) << 0u) << 0u)) | (_GLF_IDENTITY((subgroup_id * subgroup_size) << 0u, ((subgroup_id * subgroup_size) << 0u) / 1u))), _GLF_IDENTITY((subgroup_id * subgroup_size) << 0u, (_GLF_IDENTITY((subgroup_id * subgroup_size) << 0u, ((subgroup_id * subgroup_size) << 0u) << 0u)) | (_GLF_IDENTITY((subgroup_id * subgroup_size) << 0u, ((subgroup_id * subgroup_size) << 0u) / 1u))), _GLF_IDENTITY((subgroup_id * subgroup_size) << 0u, (_GLF_IDENTITY((subgroup_id * subgroup_size) << 0u, ((subgroup_id * subgroup_size) << 0u) << 0u)) | (_GLF_IDENTITY((subgroup_id * subgroup_size) << 0u, _GLF_IDENTITY(((subgroup_id * subgroup_size) << 0u) / 1u, clamp(((subgroup_id * subgroup_size) << 0u) / 1u, ((subgroup_id * subgroup_size) << 0u) / 1u, ((subgroup_id * subgroup_size) << 0u) / 1u)))))))), subgroup_id * subgroup_size)))) >> _GLF_IDENTITY(0u, (0u) / 1u)))) | 0u)), ~ (~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_id * subgroup_size), max(~ (subgroup_id * subgroup_size), ~ (subgroup_id * subgroup_size))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), max(~ (subgroup_id * subgroup_size), ~ (subgroup_id * subgroup_size)))), (true ? ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), max(~ (subgroup_id * subgroup_size), ~ (subgroup_id * subgroup_size)))) : _GLF_FUZZED(71560u))))))) : _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED(num_workgroup), max(_GLF_FUZZED(num_workgroup), _GLF_FUZZED(num_workgroup)))) * uint(_GLF_ONE(1.0, injectionSwitch.y)), ~ (~ ((_GLF_IDENTITY(_GLF_FUZZED(num_workgroup), max(_GLF_FUZZED(num_workgroup), _GLF_FUZZED(num_workgroup)))) * uint(_GLF_ONE(1.0, injectionSwitch.y)))))))), (subgroup_id * _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, 0u + (subgroup_size)), _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))) | 0u))))), ~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u)))))) + subgroup_local_id), uint(uvec2(~ (workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) << 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * subgroup_size), _GLF_IDENTITY(uint(uvec3((subgroup_id * subgroup_size), 0u, 0u)), clamp(uint(uvec3((subgroup_id * subgroup_size), 0u, 0u)), uint(uvec3((_GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size)), _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(subgroup_size) : subgroup_id * subgroup_size))) | (subgroup_id * subgroup_size))))), 0u, 0u)), uint(uvec3((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u))), min(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u))), _GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u))))) * subgroup_size), 0u, 0u))))) | 0u)), min(_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), 0.0 + (_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-1272.1539), _GLF_FUZZED(vec3(3.2, -6358.6055, -7699.4907).x)), bvec2(false, false)))) / vec2(1.0, 1.0)).x)))) / 1.0)) ^ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) << 0u), subgroup_id * subgroup_size))), ((_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)) * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size) << 0u, (_GLF_IDENTITY((subgroup_id * subgroup_size) << 0u, ((subgroup_id * subgroup_size) << 0u) << 0u)) | (_GLF_IDENTITY((subgroup_id * subgroup_size) << 0u, ((subgroup_id * subgroup_size) << 0u) / 1u))), clamp(_GLF_IDENTITY((subgroup_id * subgroup_size) << 0u, (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size) << 0u, ((subgroup_id * subgroup_size) << 0u) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size) << 0u, ((subgroup_id * subgroup_size) << 0u) << 0u), (_GLF_IDENTITY((subgroup_id * subgroup_size) << 0u, ((subgroup_id * subgroup_size) << 0u) << 0u)) - 0u)) / 1u)) | (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)))) * subgroup_size) << 0u, ((subgroup_id * subgroup_size) << 0u) / 1u))), _GLF_IDENTITY((subgroup_id * subgroup_size) << 0u, (_GLF_IDENTITY((subgroup_id * subgroup_size) << 0u, ((subgroup_id * subgroup_size) << 0u) << 0u)) | (_GLF_IDENTITY((subgroup_id * subgroup_size) << 0u, ((subgroup_id * subgroup_size) << 0u) / 1u))), _GLF_IDENTITY((subgroup_id * subgroup_size) << 0u, (_GLF_IDENTITY((subgroup_id * subgroup_size) << 0u, ((subgroup_id * subgroup_size) << 0u) << 0u)) | (_GLF_IDENTITY((subgroup_id * subgroup_size) << 0u, ((subgroup_id * subgroup_size) << 0u) / 1u)))))), subgroup_id * subgroup_size)))) >> 0u))) | 0u)), ((_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), 0.0 + (_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-1272.1539), _GLF_FUZZED(vec3(3.2, -6358.6055, -7699.4907).x)), bvec2(false, false)))) / vec2(1.0, 1.0)).x)))) / 1.0)) ^ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) << 0u), subgroup_id * subgroup_size))), ((_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)) * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size) << 0u, (_GLF_IDENTITY((subgroup_id * subgroup_size) << 0u, ((subgroup_id * subgroup_size) << 0u) << 0u)) | (_GLF_IDENTITY((subgroup_id * subgroup_size) << 0u, ((subgroup_id * subgroup_size) << 0u) / 1u))), clamp(_GLF_IDENTITY((subgroup_id * subgroup_size) << 0u, (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size) << 0u, ((subgroup_id * subgroup_size) << 0u) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size) << 0u, ((subgroup_id * subgroup_size) << 0u) << 0u), (_GLF_IDENTITY((subgroup_id * subgroup_size) << 0u, ((subgroup_id * subgroup_size) << 0u) << 0u)) - 0u)) / 1u)) | (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)))) * subgroup_size) << 0u, ((subgroup_id * subgroup_size) << 0u) / 1u))), _GLF_IDENTITY((subgroup_id * subgroup_size) << 0u, (_GLF_IDENTITY((subgroup_id * subgroup_size) << 0u, ((subgroup_id * subgroup_size) << 0u) << 0u)) | (_GLF_IDENTITY((subgroup_id * subgroup_size) << 0u, ((subgroup_id * subgroup_size) << 0u) / 1u))), _GLF_IDENTITY((subgroup_id * subgroup_size) << 0u, (_GLF_IDENTITY((subgroup_id * subgroup_size) << 0u, ((subgroup_id * subgroup_size) << 0u) << 0u)) | (_GLF_IDENTITY((subgroup_id * subgroup_size) << 0u, ((subgroup_id * subgroup_size) << 0u) / 1u)))))), subgroup_id * subgroup_size)))) >> 0u))) | 0u))) | ((_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), 0.0 + (_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-1272.1539), _GLF_FUZZED(vec3(3.2, -6358.6055, -7699.4907).x)), bvec2(false, false)))) / vec2(1.0, 1.0)).x)))) / 1.0)) ^ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) << 0u), subgroup_id * subgroup_size))), ((_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)) * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size) << 0u, (_GLF_IDENTITY((subgroup_id * subgroup_size) << 0u, ((subgroup_id * subgroup_size) << 0u) << 0u)) | (_GLF_IDENTITY((subgroup_id * subgroup_size) << 0u, ((subgroup_id * subgroup_size) << 0u) / 1u))), clamp(_GLF_IDENTITY((subgroup_id * subgroup_size) << 0u, (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size) << 0u, ((subgroup_id * subgroup_size) << 0u) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size) << 0u, ((subgroup_id * subgroup_size) << 0u) << 0u), (_GLF_IDENTITY((subgroup_id * subgroup_size) << 0u, ((subgroup_id * subgroup_size) << 0u) << 0u)) - 0u)) / 1u)) | (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)))) * subgroup_size) << 0u, ((subgroup_id * subgroup_size) << 0u) / 1u))), _GLF_IDENTITY((subgroup_id * subgroup_size) << 0u, (_GLF_IDENTITY((subgroup_id * subgroup_size) << 0u, ((subgroup_id * subgroup_size) << 0u) << 0u)) | (_GLF_IDENTITY((subgroup_id * subgroup_size) << 0u, ((subgroup_id * subgroup_size) << 0u) / 1u))), _GLF_IDENTITY((subgroup_id * subgroup_size) << 0u, (_GLF_IDENTITY((subgroup_id * subgroup_size) << 0u, ((subgroup_id * subgroup_size) << 0u) << 0u)) | (_GLF_IDENTITY((subgroup_id * subgroup_size) << 0u, ((subgroup_id * subgroup_size) << 0u) / 1u)))))), subgroup_id * subgroup_size)))) >> 0u))) | 0u)))), ~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (true ? _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), max(~ (subgroup_id * subgroup_size), ~ (subgroup_id * subgroup_size))))) : _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_IDENTITY(_GLF_FUZZED(num_workgroup), max(_GLF_FUZZED(num_workgroup), _GLF_FUZZED(num_workgroup)))) * uint(_GLF_ONE(1.0, injectionSwitch.y))))), (subgroup_id * _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, 0u + (subgroup_size)), _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))) | 0u))), (~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (true ? _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), max(~ (subgroup_id * subgroup_size), ~ (subgroup_id * subgroup_size))))) : _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_IDENTITY(_GLF_FUZZED(num_workgroup), max(_GLF_FUZZED(num_workgroup), _GLF_FUZZED(num_workgroup)))) * uint(_GLF_ONE(1.0, injectionSwitch.y))))), (subgroup_id * _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, 0u + (subgroup_size)), _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))) | 0u)))) | (~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (true ? _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), max(~ (subgroup_id * subgroup_size), ~ (subgroup_id * subgroup_size))))) : _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_IDENTITY(_GLF_FUZZED(num_workgroup), max(_GLF_FUZZED(num_workgroup), _GLF_FUZZED(num_workgroup)))) * uint(_GLF_ONE(1.0, injectionSwitch.y))))), (subgroup_id * _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, 0u + (subgroup_size)), _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))) | 0u))))))), ~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u)))))) + subgroup_local_id), 1u))), ~ (workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) << 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), _GLF_IDENTITY((subgroup_id * subgroup_size), _GLF_IDENTITY(uint(uvec3((subgroup_id * subgroup_size), 0u, 0u)), clamp(uint(uvec3((subgroup_id * subgroup_size), 0u, 0u)), uint(uvec3((_GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (subgroup_id), (~ (subgroup_id)) | (~ (subgroup_id))))) * subgroup_size, subgroup_id * subgroup_size)), _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size, (false ? _GLF_FUZZED(subgroup_size) : subgroup_id * subgroup_size))) | (subgroup_id * subgroup_size))))), 0u, 0u)), uint(_GLF_IDENTITY(uvec3((_GLF_IDENTITY(subgroup_id, (subgroup_id) | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u)), 0u | (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u)), ((_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u))) << 0u)))) * subgroup_size), 0u, 0u), (uvec3((_GLF_IDENTITY(subgroup_id, (subgroup_id) | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u)), 0u | (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u)), ((_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u))) << 0u)))) * subgroup_size), 0u, 0u)) - uvec3(0u, 0u, 0u)))))) | 0u)), min(_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), 0.0 + (_GLF_ZERO(0.0, injectionSwitch.x)))) / 1.0)) ^ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) << 0u), subgroup_id * subgroup_size))), ((_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)) * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size) << 0u, (_GLF_IDENTITY((subgroup_id * subgroup_size) << 0u, ((subgroup_id * subgroup_size) << 0u) << 0u)) | (_GLF_IDENTITY((subgroup_id * subgroup_size) << 0u, ((subgroup_id * subgroup_size) << 0u) / 1u))), clamp(_GLF_IDENTITY((subgroup_id * subgroup_size) << 0u, (_GLF_IDENTITY((subgroup_id * subgroup_size) << 0u, ((subgroup_id * subgroup_size) << 0u) << 0u)) | (_GLF_IDENTITY((subgroup_id * subgroup_size) << _GLF_IDENTITY(0u, (0u) - 0u), ((subgroup_id * subgroup_size) << 0u) / 1u))), _GLF_IDENTITY((subgroup_id * subgroup_size) << 0u, (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size) << 0u, ((subgroup_id * subgroup_size) << 0u) << 0u), uint(uvec2(_GLF_IDENTITY((subgroup_id * subgroup_size) << 0u, ((subgroup_id * subgroup_size) << 0u) << 0u), 0u)))) | (_GLF_IDENTITY((subgroup_id * subgroup_size) << 0u, ((subgroup_id * subgroup_size) << 0u) / 1u))), _GLF_IDENTITY((subgroup_id * subgroup_size) << 0u, (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) | ((subgroup_id * subgroup_size))) << 0u, ((subgroup_id * subgroup_size) << 0u) << 0u)) | (_GLF_IDENTITY((subgroup_id * subgroup_size) << 0u, ((subgroup_id * subgroup_size) << 0u) / 1u)))))), subgroup_id * subgroup_size)))) >> 0u))) | 0u)), ~ (~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (true ? _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), max(~ (subgroup_id * subgroup_size), _GLF_IDENTITY(~ (subgroup_id * subgroup_size), uint(uvec2(~ (subgroup_id * subgroup_size), 1u))))))) : _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_IDENTITY(_GLF_FUZZED(num_workgroup), max(_GLF_FUZZED(num_workgroup), _GLF_FUZZED(num_workgroup)))) * uint(_GLF_ONE(1.0, injectionSwitch.y))))), (subgroup_id * _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, 0u + (subgroup_size)), _GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) * 1u))))) | 0u))))), ~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u)))))) + subgroup_local_id))))), ivec4(1), mat4(1.0), bvec4(true), mat4(1.0), vec2(1.0), true, mat3(1.0)), ivec2(_GLF_IDENTITY(1, int(ivec2(1, 1)))), _GLF_IDENTITY(mat4(1.0), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY(mat4(1.0), mat4(1.0) * (mat4(1.0))))), vec3(1.0), _GLF_struct_2(true, _GLF_IDENTITY(true, (true) && true), _GLF_IDENTITY(mat4(1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(mat4(1.0), (mat4(1.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)) : _GLF_FUZZED(mat4(832.534, -949.435, -519.523, 569.000, 9632.6826, 8.1, 0.1, 3565.4294, _GLF_IDENTITY(-7788.3303, min(_GLF_IDENTITY(-7788.3303, mix(float(-7788.3303), float(_GLF_FUZZED(9.4)), bool(false))), _GLF_IDENTITY(-7788.3303, mix(float(_GLF_FUZZED(-871.656)), float(-7788.3303), bool(true))))), -0.7, 64.97, 326.568, 6.6, 9.4, 582.412, -2282.9331)))), true, ivec3(1))), _GLF_struct_7(mat4x3(1.0), ivec4(1), mat2x3(1.0), _GLF_struct_4(1u, bvec3(true), _GLF_IDENTITY(mat4(1.0), _GLF_IDENTITY((mat4(1.0)) + _GLF_IDENTITY(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(_GLF_IDENTITY(float(_GLF_FUZZED(-2972.6561)), min(float(_GLF_FUZZED(-2972.6561)), float(_GLF_FUZZED(-2972.6561)))), float(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(mat3x4(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, _GLF_IDENTITY(1.0, float(float(1.0)))), _GLF_IDENTITY(vec3(0.0, 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(min(trunc(2.8), -4203.5905))))), (true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-49.08, -1.8, -898.784))))), dot(vec3(1.0, 0.0, 1.0), _GLF_IDENTITY(_GLF_IDENTITY(vec3(0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(float(workgroup_size)))), 0.0), (vec3(0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(float(workgroup_size)))), 0.0)) * vec3(1.0, 1.0, 1.0)), (_GLF_IDENTITY(vec3(0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(float(workgroup_size)))), 0.0), vec3(mat2x3(vec3(0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec3(! (true), false, false)), true && (bool(bvec3(! (true), false, false))))))) ? 1.0 : _GLF_FUZZED(float(workgroup_size)))), 0.0), tan(0.0), 0.0, 1.0)))) * vec3(1.0, 1.0, 1.0)))), 0.0, exp(0.0), sin(0.0), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), float(mat4x2(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0)))), sqrt(1.0)))), 0.0))) - 0.0)), bool(true)), clamp(mix(_GLF_IDENTITY(float(_GLF_FUZZED(-2972.6561)), min(float(_GLF_FUZZED(-2972.6561)), float(_GLF_FUZZED(-2972.6561)))), float(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(mat3x4(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, _GLF_IDENTITY(1.0, float(float(1.0)))), _GLF_IDENTITY(vec3(0.0, 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(min(trunc(2.8), -4203.5905))))), (true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-49.08, -1.8, -898.784))))), dot(vec3(1.0, 0.0, 1.0), _GLF_IDENTITY(_GLF_IDENTITY(vec3(0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(float(workgroup_size)))), 0.0), (vec3(0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(float(workgroup_size)))), 0.0)) * vec3(1.0, 1.0, 1.0)), (_GLF_IDENTITY(vec3(0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(float(workgroup_size)))), 0.0), vec3(mat2x3(vec3(0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec3(! (true), false, false)), true && (bool(bvec3(! (true), false, false))))))) ? 1.0 : _GLF_FUZZED(float(workgroup_size)))), 0.0), tan(0.0), 0.0, 1.0)))) * vec3(1.0, 1.0, 1.0)))), 0.0, exp(0.0), sin(0.0), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), float(mat4x2(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0)))), sqrt(1.0)))), 0.0))) - 0.0)), bool(true)), mix(_GLF_IDENTITY(float(_GLF_FUZZED(-2972.6561)), min(float(_GLF_FUZZED(-2972.6561)), float(_GLF_FUZZED(-2972.6561)))), float(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(mat3x4(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, _GLF_IDENTITY(1.0, float(float(1.0)))), _GLF_IDENTITY(vec3(0.0, 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(min(trunc(2.8), -4203.5905))))), (true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-49.08, -1.8, -898.784))))), dot(vec3(1.0, 0.0, 1.0), _GLF_IDENTITY(_GLF_IDENTITY(vec3(0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(float(workgroup_size)))), 0.0), (vec3(0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(float(workgroup_size)))), 0.0)) * vec3(1.0, 1.0, 1.0)), (_GLF_IDENTITY(vec3(0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(float(workgroup_size)))), 0.0), vec3(mat2x3(vec3(0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec3(! (true), false, false)), true && (bool(bvec3(! (true), false, false))))))) ? 1.0 : _GLF_FUZZED(float(workgroup_size)))), 0.0), tan(0.0), 0.0, 1.0)))) * vec3(1.0, 1.0, 1.0)))), 0.0, exp(0.0), sin(0.0), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), float(mat4x2(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0)))), sqrt(1.0)))), 0.0))) - 0.0)), bool(true)), mix(_GLF_IDENTITY(float(_GLF_FUZZED(-2972.6561)), min(float(_GLF_FUZZED(-2972.6561)), float(_GLF_FUZZED(-2972.6561)))), float(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(mat3x4(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, _GLF_IDENTITY(1.0, float(float(1.0)))), _GLF_IDENTITY(vec3(0.0, 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(min(trunc(2.8), -4203.5905))))), (true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-49.08, -1.8, -898.784))))), dot(vec3(1.0, 0.0, 1.0), _GLF_IDENTITY(_GLF_IDENTITY(vec3(0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(float(workgroup_size)))), 0.0), (vec3(0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(float(workgroup_size)))), 0.0)) * vec3(1.0, 1.0, 1.0)), (_GLF_IDENTITY(vec3(0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(float(workgroup_size)))), 0.0), vec3(mat2x3(vec3(0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec3(! (true), false, false)), true && (bool(bvec3(! (true), false, false))))))) ? 1.0 : _GLF_FUZZED(float(workgroup_size)))), 0.0), tan(0.0), 0.0, 1.0)))) * vec3(1.0, 1.0, 1.0)))), 0.0, exp(0.0), sin(0.0), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), float(mat4x2(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0)))), sqrt(1.0)))), 0.0))) - 0.0)), bool(true))))), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) - abs(0.0)), 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), (mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(_GLF_IDENTITY(float(_GLF_FUZZED(-2972.6561)), min(float(_GLF_FUZZED(-2972.6561)), float(_GLF_FUZZED(-2972.6561)))), float(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(mat3x4(_GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, min(0.0, 0.0)))), 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), _GLF_IDENTITY(vec3(0.0, 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(min(trunc(2.8), -4203.5905))))), (true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-49.08, -1.8, -898.784))))), dot(vec3(1.0, 0.0, 1.0), _GLF_IDENTITY(vec3(0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(float(workgroup_size)))), min(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(float(workgroup_size)))), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(float(workgroup_size)))))), 0.0), (_GLF_IDENTITY(vec3(0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(float(workgroup_size)))), 0.0), vec3(mat2x3(vec3(0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec3(! (true), false, false)), true && (bool(bvec3(! (true), false, false))))))) ? 1.0 : _GLF_FUZZED(float(workgroup_size)))), 0.0), tan(0.0), 0.0, 1.0)))) * vec3(1.0, 1.0, 1.0)))), 0.0, exp(0.0), sin(0.0), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), float(mat4x2(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0)))), sqrt(1.0)))), 0.0))) - 0.0)), bool(true)), (mix(_GLF_IDENTITY(float(_GLF_FUZZED(-2972.6561)), min(float(_GLF_FUZZED(-2972.6561)), float(_GLF_FUZZED(-2972.6561)))), float(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(mat3x4(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(vec3(6.2, -283.644, 7.0).g)), float(0.0), bool(true))), 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(min(trunc(2.8), -4203.5905))))), (true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-49.08, -1.8, -898.784))))), dot(vec3(1.0, 0.0, 1.0), _GLF_IDENTITY(vec3(0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), true && ((true))))) ? 1.0 : _GLF_FUZZED(float(workgroup_size)))), 0.0), (_GLF_IDENTITY(vec3(0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(float(workgroup_size)))), 0.0), vec3(mat2x3(vec3(0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec3(! (true), false, false)), true && (bool(bvec3(! (true), false, false))))))) ? 1.0 : _GLF_FUZZED(float(workgroup_size)))), 0.0), tan(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED((4.4 - 755.774)) : 0.0)), 0.0, 1.0, determinant(mat4(0.0, _GLF_ONE(1.0, injectionSwitch.y), tan(0.0), 1.0, 0.0, sin(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 1.0)), mix(float(_GLF_FUZZED(-2.2)), float(float(mat2x3(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED((4.4 - 755.774)) : 0.0)), 0.0, 1.0, determinant(mat4(0.0, _GLF_ONE(1.0, injectionSwitch.y), tan(0.0), 1.0, 0.0, sin(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 1.0))), bool(true))))), 0.0, 1.0)))) * vec3(1.0, 1.0, 1.0)))), 0.0, exp(0.0), sin(0.0), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), _GLF_IDENTITY(vec2(0.0, 1.0), mix(vec2(_GLF_FUZZED(1.7), (vec2(0.0, 1.0))[1]), vec2((vec2(0.0, 1.0))[0], _GLF_FUZZED(-3.7)), bvec2(true, false)))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), float(mat4x2(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0)))), sqrt(1.0)))), 0.0))) - 0.0)), _GLF_IDENTITY(bool(true), (bool(true)) && true))) / sqrt(1.0))), 0.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), 0.0, 0.0, 0.0, 0.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0, 1.0, 1.0, 1.0)), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(_GLF_IDENTITY(mat4(_GLF_IDENTITY(39.82, 0.0 + (39.82)), -5.0, 670.009, 4.0, -0.7, 43.86, -3.2, _GLF_IDENTITY(-759.372, min(-759.372, _GLF_IDENTITY(_GLF_IDENTITY(-759.372, max(-759.372, -759.372)), max(_GLF_IDENTITY(-759.372, max(-759.372, -759.372)), _GLF_IDENTITY(-759.372, max(-759.372, _GLF_IDENTITY(-759.372, (_GLF_IDENTITY(-759.372, (false ? _GLF_FUZZED(-7285.6232) : -759.372))) * _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0)))))))))), -6.2, 3.9, 12.26, -9.3, 1.2, 1.6, 23.78, -326.717), mat4(_GLF_ONE(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(1.0)), float(1.0), bool(true))), 1.0)), injectionSwitch.y)) * (_GLF_IDENTITY(mat4(39.82, -5.0, 670.009, 4.0, -0.7, 43.86, -3.2, -759.372, -6.2, 3.9, 12.26, -9.3, 1.2, 1.6, _GLF_IDENTITY(23.78, (false ? _GLF_FUZZED((49.94)) : 23.78)), -326.717), _GLF_IDENTITY(_GLF_IDENTITY((mat4(39.82, -5.0, 670.009, 4.0, -0.7, _GLF_IDENTITY(43.86, (false ? _GLF_FUZZED(-38.84) : 43.86)), -3.2, -759.372, -6.2, 3.9, 12.26, -9.3, 1.2, _GLF_IDENTITY(_GLF_IDENTITY(1.6, max(1.6, 1.6)), min(_GLF_IDENTITY(_GLF_IDENTITY(1.6, max(1.6, 1.6)), max(_GLF_IDENTITY(_GLF_IDENTITY(1.6, max(1.6, 1.6)), 1.0 * (_GLF_IDENTITY(1.6, max(1.6, 1.6)))), _GLF_IDENTITY(1.6, max(1.6, 1.6)))), _GLF_IDENTITY(_GLF_IDENTITY(1.6, max(1.6, 1.6)), (true ? _GLF_IDENTITY(1.6, max(1.6, 1.6)) : _GLF_FUZZED(7228.4317))))), 23.78, -326.717)), transpose(transpose((mat4(39.82, -5.0, 670.009, 4.0, -0.7, _GLF_IDENTITY(43.86, (false ? _GLF_FUZZED(-38.84) : 43.86)), -3.2, -759.372, -6.2, 3.9, 12.26, -9.3, 1.2, _GLF_IDENTITY(_GLF_IDENTITY(1.6, max(1.6, 1.6)), min(_GLF_IDENTITY(_GLF_IDENTITY(1.6, max(1.6, 1.6)), max(_GLF_IDENTITY(_GLF_IDENTITY(1.6, max(1.6, 1.6)), 1.0 * _GLF_IDENTITY((_GLF_IDENTITY(1.6, max(1.6, 1.6))), ((_GLF_IDENTITY(1.6, max(1.6, 1.6)))) + 0.0)), _GLF_IDENTITY(1.6, max(1.6, 1.6)))), _GLF_IDENTITY(_GLF_IDENTITY(1.6, max(1.6, 1.6)), (true ? _GLF_IDENTITY(1.6, max(1.6, 1.6)) : _GLF_FUZZED(7228.4317))))), 23.78, -326.717))))), transpose(_GLF_IDENTITY(transpose((mat4(39.82, -5.0, 670.009, 4.0, _GLF_IDENTITY(-0.7, 0.0 + (-0.7)), 43.86, -3.2, -759.372, -6.2, 3.9, 12.26, -9.3, 1.2, 1.6, 23.78, -326.717))), transpose(_GLF_IDENTITY(transpose(transpose((mat4(39.82, -5.0, 670.009, 4.0, -0.7, 43.86, -3.2, -759.372, -6.2, 3.9, 12.26, -9.3, 1.2, 1.6, 23.78, -326.717)))), (_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(mat4(-905.459, 347.056, 2.7, 5856.6230, 880.030, 6.0, -809.277, 8.0, -5.4, -6.2, -516.160, -130.582, 5.2, 810.977, 4.4, -6711.0841)) : transpose(transpose((mat4(_GLF_IDENTITY(_GLF_IDENTITY(39.82, min(39.82, 39.82)), clamp(_GLF_IDENTITY(39.82, min(39.82, 39.82)), _GLF_IDENTITY(_GLF_IDENTITY(39.82, min(39.82, 39.82)), clamp(_GLF_IDENTITY(39.82, min(39.82, 39.82)), _GLF_IDENTITY(39.82, min(39.82, 39.82)), _GLF_IDENTITY(39.82, min(39.82, 39.82)))), _GLF_IDENTITY(_GLF_IDENTITY(39.82, min(39.82, 39.82)), (true ? _GLF_IDENTITY(39.82, min(39.82, 39.82)) : _GLF_FUZZED(8.3))))), -5.0, 670.009, 4.0, -0.7, 43.86, -3.2, -759.372, -6.2, 3.9, 12.26, -9.3, 1.2, 1.6, 23.78, -326.717)))), (false ? _GLF_FUZZED(mat4(93.69, -0.8, 86.67, -9533.9762, 797.925, -560.479, -283.501, -6834.4665, 7.6, 19.00, -77.08, -13.25, -65.83, 6.8, -5622.3342, -1.3)) : false ? _GLF_FUZZED(mat4(-905.459, 347.056, 2.7, 5856.6230, 880.030, 6.0, -809.277, 8.0, -5.4, -6.2, -516.160, _GLF_IDENTITY(-130.582, 1.0 * (-130.582)), 5.2, 810.977, 4.4, -6711.0841)) : transpose(transpose((mat4(_GLF_IDENTITY(39.82, min(39.82, 39.82)), -5.0, 670.009, 4.0, -0.7, 43.86, -3.2, -759.372, -6.2, 3.9, 12.26, -9.3, 1.2, 1.6, 23.78, -326.717)))))), (_GLF_IDENTITY(false ? _GLF_FUZZED(mat4(-905.459, 347.056, 2.7, 5856.6230, 880.030, 6.0, -809.277, 8.0, -5.4, -6.2, -516.160, -130.582, 5.2, 810.977, 4.4, -6711.0841)) : transpose(transpose((_GLF_IDENTITY(mat4(_GLF_IDENTITY(_GLF_IDENTITY(39.82, min(39.82, 39.82)), clamp(_GLF_IDENTITY(39.82, min(39.82, 39.82)), _GLF_IDENTITY(_GLF_IDENTITY(39.82, _GLF_IDENTITY(min(39.82, 39.82), (min(39.82, 39.82)) - 0.0)), clamp(_GLF_IDENTITY(39.82, min(39.82, 39.82)), _GLF_IDENTITY(39.82, min(_GLF_IDENTITY(39.82, clamp(39.82, 39.82, 39.82)), 39.82)), _GLF_IDENTITY(39.82, min(39.82, 39.82)))), _GLF_IDENTITY(_GLF_IDENTITY(39.82, min(39.82, 39.82)), (true ? _GLF_IDENTITY(39.82, min(39.82, 39.82)) : _GLF_FUZZED(8.3))))), -5.0, 670.009, 4.0, -0.7, 43.86, -3.2, -759.372, -6.2, 3.9, 12.26, -9.3, 1.2, 1.6, 23.78, -326.717), transpose(_GLF_IDENTITY(transpose(mat4(_GLF_IDENTITY(_GLF_IDENTITY(39.82, min(39.82, 39.82)), clamp(_GLF_IDENTITY(39.82, min(39.82, 39.82)), _GLF_IDENTITY(_GLF_IDENTITY(39.82, _GLF_IDENTITY(min(39.82, 39.82), (min(39.82, 39.82)) - 0.0)), clamp(_GLF_IDENTITY(39.82, min(39.82, 39.82)), _GLF_IDENTITY(39.82, min(_GLF_IDENTITY(39.82, clamp(39.82, 39.82, 39.82)), 39.82)), _GLF_IDENTITY(39.82, min(39.82, 39.82)))), _GLF_IDENTITY(_GLF_IDENTITY(39.82, min(39.82, 39.82)), (true ? _GLF_IDENTITY(39.82, min(39.82, 39.82)) : _GLF_FUZZED(8.3))))), -5.0, 670.009, 4.0, -0.7, 43.86, -3.2, -759.372, -6.2, 3.9, 12.26, -9.3, 1.2, 1.6, 23.78, -326.717)), (transpose(mat4(_GLF_IDENTITY(_GLF_IDENTITY(39.82, min(39.82, 39.82)), clamp(_GLF_IDENTITY(39.82, min(39.82, 39.82)), _GLF_IDENTITY(_GLF_IDENTITY(39.82, _GLF_IDENTITY(min(39.82, 39.82), (min(39.82, 39.82)) - 0.0)), clamp(_GLF_IDENTITY(39.82, min(39.82, 39.82)), _GLF_IDENTITY(39.82, min(_GLF_IDENTITY(39.82, clamp(39.82, 39.82, 39.82)), 39.82)), _GLF_IDENTITY(39.82, min(39.82, 39.82)))), _GLF_IDENTITY(_GLF_IDENTITY(39.82, min(39.82, 39.82)), (true ? _GLF_IDENTITY(39.82, min(39.82, 39.82)) : _GLF_FUZZED(8.3))))), -5.0, 670.009, 4.0, -0.7, 43.86, -3.2, -759.372, -6.2, 3.9, 12.26, -9.3, 1.2, 1.6, 23.78, -326.717))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))), (false ? _GLF_FUZZED(mat4(93.69, -0.8, 86.67, -9533.9762, 797.925, -560.479, -283.501, -6834.4665, 7.6, 19.00, -77.08, -13.25, -65.83, 6.8, -5622.3342, -1.3)) : false ? _GLF_FUZZED(mat4(-905.459, 347.056, 2.7, 5856.6230, 880.030, 6.0, -809.277, 8.0, -5.4, -6.2, -516.160, _GLF_IDENTITY(-130.582, 1.0 * (-130.582)), 5.2, 810.977, 4.4, -6711.0841)) : transpose(transpose((mat4(_GLF_IDENTITY(39.82, min(39.82, 39.82)), -5.0, 670.009, 4.0, -0.7, 43.86, -3.2, -759.372, -6.2, 3.9, 12.26, -9.3, 1.2, 1.6, 23.78, -326.717))))))) * mat4(1.0)))))))) - _GLF_IDENTITY(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), _GLF_IDENTITY((_GLF_IDENTITY(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), ((_GLF_IDENTITY(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat3x2(0.0, 0.0, 1.0, 1.0, 0.0, 0.0))), 0.0, 0.0, 0.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(5.2))), 1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0, 1.0, 1.0))) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))) : (mat4(1.0)) + mat4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(3.2) : 0.0)), 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), (_GLF_IDENTITY(true, (true) || false) ? 0.0 : _GLF_FUZZED(52.45))), 0.0)), 0.0, 0.0, 0.0))))), _GLF_struct_5(1, 1.0, mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(321.510) : _GLF_IDENTITY(1.0, _GLF_IDENTITY((false ? _GLF_FUZZED(9058.3364) : 1.0), min(_GLF_IDENTITY((false ? _GLF_FUZZED(9058.3364) : 1.0), _GLF_IDENTITY(float(mat3((false ? _GLF_FUZZED(9058.3364) : 1.0), 1.0, 0.0, 0.0, 1.0, exp(0.0), 0.0, 1.0, 0.0)), 1.0 * (float(mat3((false ? _GLF_FUZZED(9058.3364) : 1.0), 1.0, 0.0, 0.0, 1.0, exp(0.0), 0.0, 1.0, 0.0))))), (false ? _GLF_FUZZED(9058.3364) : 1.0)))), max(false ? _GLF_FUZZED(321.510) : _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(9058.3364) : 1.0)), false ? _GLF_FUZZED(321.510) : _GLF_IDENTITY(1.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(9058.3364) : 1.0, max(false ? _GLF_FUZZED(9058.3364) : 1.0, _GLF_IDENTITY(false ? _GLF_FUZZED(9058.3364) : 1.0, (false ? _GLF_FUZZED(9058.3364) : 1.0) - 0.0))))))))), 1.0)), max(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(321.510) : _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(9058.3364) : 1.0)))), 1.0)), _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(321.510) : _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(9058.3364) : 1.0)))), 1.0))))), mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 1.0 * (1.0)), min(1.0, 1.0))), 1), _GLF_struct_6(vec2(_GLF_IDENTITY(1.0, float(vec3(1.0, 1.0, 0.0)))), bvec4(true), 1u, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, ! (! (true))))), (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, ! (! (true))))), true && (bool(bool(_GLF_IDENTITY(true, ! (! (true)))))))) || false)), mat4(1.0))));
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))), false, true, true))), false, false, true)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_DEAD(false)))))), bool(bvec4(_GLF_DEAD(false), false, true, true))), false, false, _GLF_IDENTITY(true, bool(bvec2(true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, (true) || false))), ! (! (bool(bool(_GLF_IDENTITY(true, (true) || false)))))))))))), false, true)))))
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), true && (_GLF_WRAPPED_IF_FALSE(false))), true, false))))
    {
    }
   else
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)))).y))); _injected_loop_counter ++)
      {
       for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), max(int(5), int(5))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         barrier();
        }
      }
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
          {
           if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))
            {
             barrier();
            }
           else
            {
            }
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))) && true)))
              {
              }
             else
              {
               barrier();
              }
            }
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
             barrier();
            }
           do
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
       else
        {
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)) * subgroup_size, (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)) * subgroup_size) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)) * subgroup_size, (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)) * subgroup_size) | (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)) * subgroup_size)))) + (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)), 1u, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), (0u >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (uint(1u)) | (uint(1u)))))), (uvec4(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)), 1u, ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), 0u | (uint(0u))), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), (0u >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (uint(1u)) | (uint(_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec4(1u, 1u, 1u, 1u)), clamp(uint(_GLF_IDENTITY(uvec4(1u, 1u, 1u, 1u), (true ? uvec4(1u, 1u, 1u, 1u) : _GLF_FUZZED(uvec4(55332u, 145438u, 53232u, 168266u))))), uint(uvec4(1u, 1u, 1u, 1u)), _GLF_IDENTITY(uint(uvec4(1u, 1u, 1u, 1u)), (uint(uvec4(1u, 1u, 1u, 1u))) / 1u))))))))))) | uvec4(0u, 0u, _GLF_IDENTITY(0u, min(0u, 0u)), 0u)))), (_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)), 1u, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), (0u >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (uint(1u)) | (uint(1u)))))), (uvec4(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)), 1u, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), (_GLF_IDENTITY(0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), min(uint(1u), uint(1u))), _GLF_IDENTITY(uint(1u), (uint(1u)) | (uint(1u)))), uint(_GLF_IDENTITY(uint(0u >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (uint(1u)) | (uint(1u))))), max(_GLF_IDENTITY(uint(0u >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (uint(1u)) | (uint(1u))))), (uint(0u >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (uint(1u)) | (uint(1u)))))) | (uint(0u >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (uint(1u)) | (uint(1u))))))), uint(0u >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (uint(1u)) | (uint(1u)))))))))))) | uvec4(0u, 0u, 0u, 0u))))) >> 0u)) % subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ ((subgroup_local_id + 1) % subgroup_size), min(~ ((subgroup_local_id + 1) % subgroup_size), ~ ((subgroup_local_id + 1) % subgroup_size))), _GLF_IDENTITY((0u | 0u) ^ (~ ((subgroup_local_id + 1) % subgroup_size)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((0u | 0u) ^ (~ ((subgroup_local_id + 1) % subgroup_size)), ((0u | 0u) ^ (~ ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))) >> 0u)))) ^ 0u)), _GLF_IDENTITY(uint(uvec3(~ (_GLF_IDENTITY((0u | 0u) ^ (~ ((subgroup_local_id + 1) % subgroup_size)), ((_GLF_IDENTITY(0u | 0u, uint(uvec2(_GLF_IDENTITY(0u | 0u, clamp(0u | 0u, 0u | 0u, 0u | 0u)), uint(_GLF_ONE(1.0, injectionSwitch.y)))))) ^ (~ ((subgroup_local_id + 1) % subgroup_size))) ^ 0u)), 0u, 0u)), min(uint(uvec3(~ (_GLF_IDENTITY((0u | 0u) ^ (~ ((subgroup_local_id + 1) % subgroup_size)), ((0u | 0u) ^ (~ ((subgroup_local_id + 1) % subgroup_size))) ^ 0u)), 0u, 0u)), uint(uvec3(~ (_GLF_IDENTITY((0u | 0u) ^ (~ ((subgroup_local_id + 1) % subgroup_size)), ((0u | 0u) ^ (~ ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << uint(_GLF_ZERO(0.0, injectionSwitch.x))) + 1) % subgroup_size))) ^ 0u)), 0u, 0u))))))))))), 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ~ (~ ((subgroup_local_id + 1) % subgroup_size)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ~ (~ ((subgroup_local_id + 1) % subgroup_size)))) : _GLF_FUZZED(max(subgroup_id, _GLF_IDENTITY(packSnorm2x16(injectionSwitch), (packSnorm2x16(injectionSwitch)) >> (0u >> _GLF_IDENTITY(uint(7u), uint(7u)))))))))) + 0u));
 do
  {
   atomicStore(buf[next_virtual_gid], uint(1), _GLF_IDENTITY(4, max(_GLF_IDENTITY(4, int(int(4))), 4)), 64, 4);
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint read = atomicLoad(buf[_GLF_IDENTITY(_GLF_struct_replacement_8._f1._f2.virtual_gid, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_8._f1._f2.virtual_gid, (_GLF_struct_replacement_8._f1._f2.virtual_gid) | 0u), 0u | (_GLF_IDENTITY(_GLF_struct_replacement_8._f1._f2.virtual_gid, (_GLF_struct_replacement_8._f1._f2.virtual_gid) | 0u))))))], 4, 64, 0);
 for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), ~ (_GLF_IDENTITY(~ (int(3)), int(ivec4(~ (int(3)), 1, 1, 0))))))) >> _GLF_IDENTITY(int(3), int(3))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(0), int(0)))); _injected_loop_counter --)
  {
   for(int _injected_loop_counter = (0 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     if(subgroup_local_id + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) | (1))))), (_GLF_IDENTITY((_GLF_IDENTITY(1, 0 + (1))), (_GLF_IDENTITY((_GLF_IDENTITY(1, 0 + (1))), ~ (~ ((_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | 0)) | 0), 1))))))))) | 0)) >> 0))), _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) | _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, 0 + (0)), 0))))), 1)) < subgroup_size)
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && true)))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
            {
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
          }
         else
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true)), bool(bvec4(false, false, false, false))), false)))))))))))
            barrier();
          }
        }
       else
        {
         for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, (5) ^ 0)))) >> _GLF_IDENTITY(int(5), int(5))); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _GLF_IDENTITY(_injected_loop_counter --, (false ? _GLF_FUZZED(_injected_loop_counter) : _injected_loop_counter --)))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           do
            {
             for(int _injected_loop_counter = (0 & 4146); _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 | ((1 ^ 1) ^ 1))); _injected_loop_counter ++)
              {
               if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bool(false)))))
                {
                }
               else
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
              }
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               for(int _injected_loop_counter = (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (0))), 0 ^ (0)), 0 | (0)) | _GLF_IDENTITY(0, _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)), max(_GLF_IDENTITY(0, min(0, 0)), _GLF_IDENTITY(0, min(0, 0)))), 0), (max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)), (_GLF_IDENTITY(0, min(0, 0))) | (_GLF_IDENTITY(0, min(0, 0)))), clamp(_GLF_IDENTITY(0, min(0, 0)), _GLF_IDENTITY(0, min(0, 0)), _GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)), clamp(_GLF_IDENTITY(0, min(0, 0)), _GLF_IDENTITY(0, min(0, 0)), _GLF_IDENTITY(0, min(0, 0)))))), 0)) * 1))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, ~ (_GLF_IDENTITY(~ (_injected_loop_counter), (~ (_injected_loop_counter)) / 1))) != (((_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(0), clamp(_GLF_IDENTITY(int(0), (int(0)) - (1 ^ 1)), _GLF_IDENTITY(_GLF_IDENTITY(int(0), (int(0)) >> 0), max(_GLF_IDENTITY(int(0), (int(0)) >> 0), _GLF_IDENTITY(int(0), (int(0)) >> 0))), int(0))), int(0))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), int(ivec4(_GLF_IDENTITY(int(0), min(_GLF_IDENTITY(int(0), int(int(int(0)))), int(0))), _GLF_IDENTITY(0, _GLF_IDENTITY(int(int(0)), clamp(int(int(0)), int(_GLF_IDENTITY(int(0), (true ? _GLF_IDENTITY(int(0), (int(0)) ^ 0) : _GLF_FUZZED(atomicXor(_injected_loop_counter, _injected_loop_counter))))), int(int(0))))), 0, 0)))), (_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(0), clamp(int(0), _GLF_IDENTITY(int(0), (int(0)) >> 0), int(0))), int(0))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(_GLF_IDENTITY(int(0), 0 ^ (int(0))), int(ivec4(_GLF_IDENTITY(int(0), min(_GLF_IDENTITY(int(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(clamp(_injected_loop_counter, _injected_loop_counter, (_injected_loop_counter))) : 0))), int(int(int(0)))), int(0))), _GLF_IDENTITY(0, _GLF_IDENTITY(int(int(0)), clamp(int(int(0)), int(int(0)), int(_GLF_IDENTITY(int(0), ~ (_GLF_IDENTITY(~ (int(0)), (~ (int(0))) | 0))))))), 0, 0)))), _GLF_IDENTITY(min((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(0), clamp(int(_GLF_IDENTITY(0, (0) / 1)), _GLF_IDENTITY(int(0), (int(0)) >> 0), int(0))), int(0))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), int(ivec4(_GLF_IDENTITY(int(0), min(_GLF_IDENTITY(int(0), int(int(int(0)))), int(0))), _GLF_IDENTITY(0, _GLF_IDENTITY(int(int(0)), clamp(int(int(0)), int(int(0)), int(int(0))))), 0, 0)))), _GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(0), clamp(int(0), _GLF_IDENTITY(int(0), (int(0)) >> 0), int(0))), int(0))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(0), clamp(int(0), _GLF_IDENTITY(int(0), (int(0)) >> 0), int(0))), int(0))), 0, 1, 1), ~ (~ (ivec4((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(0), clamp(int(0), _GLF_IDENTITY(int(0), (int(0)) >> 0), int(0))), int(0))), 0, 1, 1))))), (int(_GLF_IDENTITY(ivec4((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(0), clamp(int(0), _GLF_IDENTITY(int(0), (int(0)) >> 0), int(0))), int(0))), 0, 1, 1), ~ (~ (ivec4((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(0), clamp(int(0), _GLF_IDENTITY(int(0), (int(0)) >> 0), int(0))), int(0))), 0, 1, 1)))))) | (int(_GLF_IDENTITY(ivec4((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(0), clamp(int(0), _GLF_IDENTITY(int(0), (int(0)) >> 0), int(0))), int(0))), 0, 1, 1), ~ (~ (ivec4((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(0), clamp(int(0), _GLF_IDENTITY(int(0), (int(0)) >> 0), int(0))), int(0))), 0, 1, 1)))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), int(ivec4(_GLF_IDENTITY(int(0), min(_GLF_IDENTITY(int(0), int(int(int(0)))), int(0))), _GLF_IDENTITY(0, _GLF_IDENTITY(int(int(0)), clamp(int(int(0)), int(int(0)), int(int(0))))), 0, 0)))), (_GLF_IDENTITY(_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), int(ivec4(_GLF_IDENTITY(int(0), min(_GLF_IDENTITY(int(0), int(int(int(0)))), int(0))), _GLF_IDENTITY(0, _GLF_IDENTITY(int(int(0)), clamp(int(int(0)), int(int(0)), int(int(0))))), 0, 0)))), (_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), int(ivec4(_GLF_IDENTITY(int(0), min(_GLF_IDENTITY(int(0), int(int(int(0)))), int(0))), _GLF_IDENTITY(0, _GLF_IDENTITY(int(int(0)), clamp(int(int(0)), int(int(0)), int(int(0))))), 0, 0))))) / 1)) | 0)), (min((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(0), clamp(int(0), _GLF_IDENTITY(_GLF_IDENTITY(int(0), (int(0)) >> 0), (_GLF_IDENTITY(int(0), (int(0)) >> 0)) << 0), int(0))), int(0))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), int(ivec4(_GLF_IDENTITY(int(0), min(_GLF_IDENTITY(int(0), int(int(int(0)))), int(0))), _GLF_IDENTITY(0, _GLF_IDENTITY(int(int(0)), clamp(int(int(0)), int(int(0)), int(int(0))))), 0, 0)))), _GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(0), clamp(int(0), _GLF_IDENTITY(int(0), (int(0)) >> 0), int(0))), int(0))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), int(ivec4(_GLF_IDENTITY(int(0), min(_GLF_IDENTITY(int(0), int(int(int(0)))), int(0))), _GLF_IDENTITY(0, _GLF_IDENTITY(int(int(0)), clamp(int(int(0)), int(int(0)), int(int(0))))), 0, 0)))), ~ (~ ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(0), clamp(int(0), _GLF_IDENTITY(int(0), (int(0)) >> 0), int(0))), int(0))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(int(0), ~ (~ (int(0)))), min(_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(int(int(0))), int(_GLF_IDENTITY(ivec2(int(int(int(0))), 1), ivec2(_GLF_IDENTITY(ivec3(ivec2(int(int(int(0))), 1), 1), max(ivec3(ivec2(int(int(int(0))), 1), 1), ivec3(ivec2(int(int(int(0))), 1), 1)))))))), int(0))), _GLF_IDENTITY(0, _GLF_IDENTITY(int(int(0)), clamp(int(int(0)), int(int(0)), int(int(0))))), 0, 0))))))))) >> 0))) | ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(0), clamp(int(0), _GLF_IDENTITY(_GLF_IDENTITY(int(0), (int(0)) >> 0), _GLF_IDENTITY(0, int(int(0))) | (_GLF_IDENTITY(int(0), (int(0)) >> 0))), int(0))), int(0))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), int(ivec4(_GLF_IDENTITY(int(0), min(_GLF_IDENTITY(int(0), int(int(int(0)))), _GLF_IDENTITY(int(0), (_GLF_IDENTITY(int(0), (int(0)) ^ 0)) | 0))), _GLF_IDENTITY(0, _GLF_IDENTITY(int(int(0)), clamp(int(int(0)), int(int(0)), int(int(0))))), 0, 0))))))) << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(6), ~ _GLF_IDENTITY((~ (int(6))), clamp((~ (int(6))), _GLF_IDENTITY((~ (int(6))), clamp((~ (int(6))), (~ (int(6))), (_GLF_IDENTITY(~ (int(6)), ~ (_GLF_IDENTITY(~ (~ (int(6))), 0 | (~ (~ (int(6)))))))))), _GLF_IDENTITY((~ (int(6))), 1 * ((~ (int(6)))))))), _GLF_IDENTITY(int(6), (int(_GLF_IDENTITY(6, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(6, (6) ^ 0), ~ (~ (_GLF_IDENTITY(6, (6) ^ 0)))), (6) ^ 0), _GLF_IDENTITY((false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(_GLF_IDENTITY(6, (6) ^ 0), (6) ^ 0)), max((false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(_GLF_IDENTITY(6, (6) ^ 0), (6) ^ 0)), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(_GLF_IDENTITY(6, (6) ^ 0), (6) ^ 0))))), 6)))) - 0)))); _injected_loop_counter ++)
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   do
                    {
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), true && (! (_GLF_IDENTITY(true, ! (! (true))))))))))
                        {
                         if(_GLF_WRAPPED_IF_FALSE(false))
                          {
                          }
                         else
                          {
                           barrier();
                          }
                        }
                       else
                        {
                        }
                      }
                     if(_GLF_DEAD(false))
                      {
                       for(int _injected_loop_counter = (0 & 68557); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                        {
                         for(int _injected_loop_counter = (1 | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                          {
                           barrier();
                          }
                        }
                      }
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        {
                         for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (_GLF_IDENTITY(int(0), 1 * (int(0)))) | 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter < (((1 | 1) << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), int(ivec4(int(7), 1, 1, 0)))))); _injected_loop_counter ++)
                          {
                           barrier();
                          }
                        }
                       if(_GLF_WRAPPED_IF_TRUE(true))
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                         barrier();
                        }
                       else
                        {
                        }
                       if(_GLF_DEAD(false))
                        barrier();
                      }
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, min(0, 0))); _injected_loop_counter --)
                    {
                     atomicStore(checker[_GLF_struct_replacement_8._f1._f2.virtual_gid], read, 4, 64, 4);
                    }
                  }
                 for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(0), int(0))); _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 ^ 0)); _GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) | 0))
                  {
                   if(_GLF_DEAD(false))
                    {
                     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 & 1)); _injected_loop_counter ++)
                      {
                       barrier();
                      }
                    }
                  }
                }
              }
             else
              {
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
       subgroupAll(false);
      }
     else
      {
       do
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, min(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter))), 0 ^ (_GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter))))) : _GLF_FUZZED(74891))), _injected_loop_counter)) != 0); _injected_loop_counter --)
            {
             barrier();
            }
           if(_GLF_DEAD(false))
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
              {
               for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                {
                 barrier();
                }
              }
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, exp(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y)), transpose(transpose(mat3x2(injectionSwitch, 0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, exp(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y))))))).x < injectionSwitch.y))))
        {
         atomicStore(checker[_GLF_struct_replacement_8._f1._f2.virtual_gid], read, 4, 64, 4);
        }
       else
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
            }
          }
         else
          {
          }
        }
       subgroupAll(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, true, true)), (bool(bvec4(_GLF_IDENTITY(true, bool(bvec2(true, true))), true, true, true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
    }
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
