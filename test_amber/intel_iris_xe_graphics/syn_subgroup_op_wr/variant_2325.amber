#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_7 {
 bool _f0;
 uvec3 _f1;
 ivec2 _f2;
} ;

struct _GLF_struct_6 {
 mat2x4 _f0;
 uint _f1;
} ;

struct _GLF_struct_5 {
 uvec2 _f0;
 mat4x2 _f1;
} ;

struct _GLF_struct_8 {
 _GLF_struct_5 _f0;
 vec2 _f1;
 _GLF_struct_6 _f2;
 _GLF_struct_7 _f3;
 mat3 _f4;
 uvec3 _f5;
 mat4x2 _f6;
} ;

struct _GLF_struct_4 {
 mat3 _f0;
 uint _f1;
 bvec2 _f2;
} ;

struct _GLF_struct_2 {
 uvec4 _f0;
 mat3x4 _f1;
 uvec4 _f2;
 mat2x3 _f3;
 uvec3 _f4;
 bool _f5;
} ;

struct _GLF_struct_1 {
 bvec2 _f0;
 bvec2 _f1;
 mat3x4 _f2;
 mat2 _f3;
} ;

struct _GLF_struct_0 {
 bvec2 _f0;
 uvec2 _f1;
 uvec2 _f2;
 uint _f3;
 float _f4;
 uvec4 _f5;
 ivec3 _f6;
} ;

struct _GLF_struct_3 {
 _GLF_struct_0 _f0;
 vec3 _f1;
 _GLF_struct_1 _f2;
 _GLF_struct_2 _f3;
 mat4x2 _f4;
 bvec3 _f5;
 uvec2 _f6;
} ;

struct _GLF_struct_9 {
 bvec4 _f0;
 _GLF_struct_3 _f1;
 _GLF_struct_4 _f2;
 _GLF_struct_8 _f3;
 uint read;
 int _f4;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * sqrt(vec2(1.0, 1.0))).y))))
        {
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, false)), ! (! (bool(bvec4(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, false)))))))
          {
          }
         else
          {
           barrier();
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       do
        {
         return;
        }
       while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) && true));
      }
    }
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, true && ((_GLF_DEAD(false)) && true))))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       do
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            barrier();
           do
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
               barrier();
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         else
          {
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       do
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               barrier();
              }
             else
              {
              }
            }
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! (! (false || (false))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(377.741) : _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) * mat2(1.0)), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0), (true ? mat4x2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0) : _GLF_FUZZED((mat4x2(407.416, -2949.1630, -1743.0905, 614.459, 21.25, 1268.6521, -2956.9234, -2098.3536) / -386.235)))))), 1.0, sin(0.0), 1.0, 1.0, sqrt(1.0), sqrt(1.0)), mat3x4(mat4(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) * mat2(1.0)), 0.0, 0.0, 0.0, 0.0, 1.0, sin(0.0), 1.0, 1.0, sqrt(1.0), sqrt(1.0)), transpose(transpose(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) * mat2(1.0)), 0.0, 0.0, 0.0, 0.0, 1.0, sin(0.0), 1.0, 1.0, sqrt(1.0), sqrt(1.0)))))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) * mat2(1.0)), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0), (true ? mat4x2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0) : _GLF_FUZZED((mat4x2(407.416, -2949.1630, -1743.0905, 614.459, 21.25, 1268.6521, -2956.9234, -2098.3536) / -386.235)))))), 1.0, sin(0.0), 1.0, 1.0, sqrt(1.0), sqrt(1.0)), mat3x4(mat4(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) * mat2(1.0)), 0.0, 0.0, 0.0, 0.0, 1.0, sin(0.0), 1.0, 1.0, sqrt(1.0), sqrt(1.0)), transpose(transpose(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) * mat2(1.0)), 0.0, 0.0, 0.0, 0.0, 1.0, sin(0.0), 1.0, 1.0, sqrt(1.0), sqrt(1.0)))))))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) * mat2(1.0)), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0), (true ? mat4x2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0) : _GLF_FUZZED((mat4x2(407.416, -2949.1630, -1743.0905, 614.459, 21.25, 1268.6521, -2956.9234, -2098.3536) / -386.235)))))), 1.0, sin(0.0), 1.0, 1.0, sqrt(1.0), sqrt(1.0)), mat3x4(mat4(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) * mat2(1.0)), 0.0, 0.0, 0.0, 0.0, 1.0, sin(0.0), 1.0, 1.0, sqrt(1.0), sqrt(1.0)), transpose(transpose(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) * mat2(1.0)), 0.0, 0.0, 0.0, 0.0, 1.0, sin(0.0), 1.0, 1.0, sqrt(1.0), sqrt(1.0)))))))))))).y))))))))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               barrier();
              }
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))));
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))))), bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))), false, true, _GLF_IDENTITY(false, false || (false))))), true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (! (true)), false || (! (! (true)))), true)), true && (bool(bvec2(_GLF_IDENTITY(! (! (true)), false || (! (! (true)))), true))))))), bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (! (true)), false || (! (! (true)))), true)), true && (bool(bvec2(_GLF_IDENTITY(! (! (true)), false || (! (! (true)))), true))))))), true))))), true)))))
    {
     for(int _injected_loop_counter = (0 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         do
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 & 1)); _injected_loop_counter ++)
          {
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           do
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               barrier();
              }
             else
              {
              }
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
          }
        }
       else
        {
        }
      }
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 ^ 1)); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 do
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), 0.0 + (_GLF_ZERO(0.0, injectionSwitch.x))))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[0]) >> 0u), gl_WorkGroupSize[_GLF_IDENTITY(1, int(int(1)))], _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize))[2])).x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        barrier();
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (1) / 1)), 0 | (~ (_GLF_IDENTITY(1, (1) / 1)))))), int(int(1))) << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6)))); _injected_loop_counter ++)
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             return;
            }
           else
            {
            }
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)) && true)))
        barrier();
      }
    }
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) || false)))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
      }
    }
   else
    {
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(38.31) : _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))) : _GLF_FUZZED(60.23)))))), false || ((! ((injectionSwitch.x > injectionSwitch.y))))), false || (! _GLF_IDENTITY((! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, determinant(mat4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)) + (injectionSwitch.y)), injectionSwitch.y)), (true ? _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(38.31) : _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))) : _GLF_FUZZED(60.23)))))), false || ((! ((injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(true, ! (! (true))) && (! _GLF_IDENTITY(_GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((! ((injectionSwitch.x > injectionSwitch.y))))), false || ((! ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x)))) / 1.0) > injectionSwitch.y)))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     barrier();
    }
   else
    {
    }
  }
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED((+ subgroup_size)) : _GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)))) + subgroup_id * subgroup_size, max(_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED((+ subgroup_size)) : _GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)))) + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED((+ subgroup_size)) : _GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)))) + subgroup_id * subgroup_size)) + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-6.7) : injectionSwitch.y))), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-5.8)), float(injectionSwitch.y), bool(true)))), true, false)))))), ! (! _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, abs(1.0), 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y)), (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, abs(1.0), 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y))) && true))))))
    barrier();
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(_GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))), 1.0, log(1.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, sqrt(0.0))))))))
  barrier();
 do
  {
   do
    {
     atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-6.8, -9.3)) : injectionSwitch)), (true ? _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(-6.8, -9.3)) : injectionSwitch, (false ? _GLF_FUZZED(vec2(-79.46, 7.7)) : false ? _GLF_FUZZED(vec2(-6.8, -9.3)) : injectionSwitch)))) : _GLF_FUZZED(fract(vec2(-118.468, 8.2))))).x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bvec3((false), true, true))))), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     else
      {
      }
     barrier();
    }
  }
 _GLF_struct_9 _GLF_struct_replacement_9 = _GLF_struct_9(bvec4(true), _GLF_struct_3(_GLF_struct_0(bvec2(true), _GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u), uvec2(0u, 0u) | (_GLF_IDENTITY(uvec2(1u), (uvec2(1u)) | (uvec2(1u))))), (_GLF_IDENTITY(uvec2(1u), uvec2(0u, 0u) | (_GLF_IDENTITY(uvec2(1u), (uvec2(1u)) | (uvec2(1u)))))) | _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u), uvec2(0u, 0u) | (_GLF_IDENTITY(uvec2(1u), (uvec2(1u)) | (uvec2(1u))))), (_GLF_IDENTITY(uvec2(1u), uvec2(0u, 0u) | (_GLF_IDENTITY(uvec2(1u), (uvec2(1u)) | (uvec2(1u)))))) - uvec2(0u, 0u))), ((_GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u), uvec2(0u, 0u) | (_GLF_IDENTITY(uvec2(1u), (uvec2(1u)) | (uvec2(1u))))), (_GLF_IDENTITY(uvec2(1u), uvec2(0u, 0u) | (_GLF_IDENTITY(uvec2(1u), (uvec2(1u)) | (uvec2(1u)))))) - uvec2(0u, 0u)))) / uvec2(1u, 1u)), clamp((_GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u), uvec2(0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u), (uvec2(1u)) | (uvec2(1u))), (uvec2(1u)) | (uvec2(1u))))), (_GLF_IDENTITY(uvec2(1u), uvec2(0u, 0u) | (_GLF_IDENTITY(uvec2(1u), (uvec2(1u)) | (uvec2(1u)))))) - uvec2(0u, 0u))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u), uvec2(0u, 0u) | (_GLF_IDENTITY(uvec2(1u), (uvec2(1u)) | (uvec2(1u))))), (_GLF_IDENTITY(uvec2(1u), uvec2(0u, 0u) | (_GLF_IDENTITY(uvec2(1u), (uvec2(1u)) | (uvec2(1u)))))) - uvec2(0u, 0u)), (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(7u), uvec2(7u))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u), uvec2(0u, 0u) | (_GLF_IDENTITY(uvec2(1u), (uvec2(1u)) | (uvec2(1u))))), (_GLF_IDENTITY(uvec2(1u), uvec2(0u, 0u) | (_GLF_IDENTITY(uvec2(1u), (uvec2(1u)) | (uvec2(1u)))))) - uvec2(0u, 0u))))), (true ? (_GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u), uvec2(0u, 0u) | (_GLF_IDENTITY(uvec2(1u), (uvec2(1u)) | (uvec2(1u))))), (_GLF_IDENTITY(uvec2(1u), uvec2(0u, 0u) | (_GLF_IDENTITY(uvec2(1u), (uvec2(1u)) | (uvec2(1u)))))) - uvec2(0u, 0u))) : _GLF_FUZZED(uvec2(3118u, 39575u)))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u), uvec2(0u, 0u) | (_GLF_IDENTITY(uvec2(1u), (uvec2(1u)) | (uvec2(1u))))), (_GLF_IDENTITY(uvec2(1u), uvec2(0u, 0u) | (_GLF_IDENTITY(uvec2(1u), (uvec2(1u)) | (uvec2(1u)))))) - uvec2(0u, 0u)))))), _GLF_IDENTITY(uvec2(1u), (uvec2(1u)) - uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), 1u, 1.0, uvec4(1u), ivec3(1)), vec3(1.0), _GLF_struct_1(bvec2(true), bvec2(true), mat3x4(1.0), mat2(1.0)), _GLF_struct_2(uvec4(1u), mat3x4(1.0), uvec4(1u), mat2x3(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) - _GLF_IDENTITY(0.0, float(mat4x3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(137.531) : 0.0))) / 1.0), exp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-6597.3888)))), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(determinant(mat4(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(_GLF_IDENTITY(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))), clamp(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))), vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))), vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))))), vec4(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(1.0, 1.0, sin(0.0), 1.0, 0.0, 0.0), mat2x3(mat2x3(mat2x3(1.0, 1.0, sin(0.0), 1.0, 0.0, 0.0))))), (_GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y)) ? float(_GLF_IDENTITY(mat2x3(1.0, 1.0, sin(0.0), 1.0, 0.0, 0.0), mat2x3(mat2x3(mat2x3(1.0, 1.0, sin(0.0), 1.0, 0.0, 0.0))))) : _GLF_FUZZED(0.5)))), 0.0, 0.0))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) - 0.0)), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 0.0, _GLF_IDENTITY(exp(0.0), mix(float(_GLF_FUZZED(6.7)), float(exp(0.0)), bool(true))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0, 0.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-9.9) : determinant(mat4(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(_GLF_IDENTITY(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))), clamp(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))), vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))), vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))))), vec4(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(1.0, 1.0, sin(0.0), 1.0, 0.0, 0.0), mat2x3(mat2x3(mat2x3(1.0, 1.0, sin(0.0), 1.0, 0.0, 0.0))))), (_GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], (true ? (injectionSwitch)[0] : _GLF_FUZZED(-1622.6013))), _GLF_FUZZED(-1.4)), vec2(_GLF_FUZZED(-7.8), (injectionSwitch)[1]), bvec2(false, true))) : _GLF_FUZZED(injectionSwitch))).y)) ? float(_GLF_IDENTITY(mat2x3(1.0, 1.0, sin(0.0), 1.0, 0.0, 0.0), mat2x3(mat2x3(mat2x3(1.0, 1.0, sin(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(876.209)), float(0.0), bool(true)))), 1.0, 0.0, 0.0))))) : _GLF_FUZZED(0.5)))), 0.0, 0.0))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) - 0.0)), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 0.0, _GLF_IDENTITY(exp(0.0), mix(float(_GLF_FUZZED(6.7)), float(exp(0.0)), bool(true))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0, 0.0)))), 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-5.9)), bool(false))), 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(vec4(0.0, abs(0.0), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), _GLF_IDENTITY(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (true ? _GLF_IDENTITY(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), clamp(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mix(vec3(_GLF_FUZZED(21.88), _GLF_FUZZED(-78.64), (vec3(0.0, 1.0, 0.0))[2]), vec3((vec3(0.0, 1.0, 0.0))[0], (vec3(0.0, 1.0, 0.0))[1], _GLF_FUZZED((- -654.307))), bvec3(true, true, false))))), max(_GLF_IDENTITY(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), clamp(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mix(vec3(_GLF_FUZZED(21.88), _GLF_FUZZED(-78.64), (vec3(0.0, 1.0, 0.0))[2]), vec3((vec3(0.0, 1.0, 0.0))[0], (vec3(0.0, 1.0, 0.0))[1], _GLF_FUZZED((- -654.307))), bvec3(true, true, false))))), (_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), clamp(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mix(vec3(_GLF_FUZZED(21.88), _GLF_FUZZED(-78.64), (vec3(0.0, 1.0, 0.0))[2]), vec3((vec3(0.0, 1.0, 0.0))[0], (vec3(0.0, 1.0, 0.0))[1], _GLF_FUZZED((- -654.307))), bvec3(true, true, false)))))) / vec3(1.0, 1.0, 1.0)), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), clamp(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mix(vec3(_GLF_FUZZED(21.88), _GLF_FUZZED(-78.64), (vec3(0.0, 1.0, 0.0))[2]), vec3((vec3(0.0, 1.0, 0.0))[0], (vec3(0.0, 1.0, 0.0))[1], _GLF_FUZZED((- -654.307))), bvec3(true, true, false))))))) : _GLF_FUZZED(vec3(7.0, -6.2, -260.608))))) - vec3(0.0, 0.0, 0.0)), min(_GLF_IDENTITY(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (true ? _GLF_IDENTITY(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), clamp(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mix(vec3(_GLF_FUZZED(21.88), _GLF_FUZZED(-78.64), (vec3(0.0, 1.0, 0.0))[2]), vec3((vec3(0.0, 1.0, 0.0))[0], (vec3(0.0, 1.0, 0.0))[1], _GLF_FUZZED((- -654.307))), bvec3(true, true, false))))), max(_GLF_IDENTITY(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), clamp(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mix(vec3(_GLF_FUZZED(21.88), _GLF_FUZZED(-78.64), (vec3(0.0, 1.0, 0.0))[2]), vec3((vec3(0.0, 1.0, 0.0))[0], (vec3(0.0, 1.0, 0.0))[1], _GLF_FUZZED((- -654.307))), bvec3(true, true, false))))), (_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), clamp(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mix(vec3(_GLF_FUZZED(21.88), _GLF_FUZZED(-78.64), (vec3(0.0, 1.0, 0.0))[2]), vec3((vec3(0.0, 1.0, 0.0))[0], (vec3(0.0, 1.0, 0.0))[1], _GLF_FUZZED((- -654.307))), bvec3(true, true, false)))))) / vec3(1.0, 1.0, 1.0)), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), clamp(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mix(vec3(_GLF_FUZZED(21.88), _GLF_FUZZED(-78.64), (vec3(0.0, 1.0, 0.0))[2]), vec3((vec3(0.0, 1.0, 0.0))[0], (vec3(0.0, 1.0, 0.0))[1], _GLF_FUZZED((- -654.307))), bvec3(true, true, false))))))) : _GLF_FUZZED(vec3(7.0, -6.2, -260.608))))) - vec3(0.0, 0.0, 0.0)), mat3(1.0) * (_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (true ? _GLF_IDENTITY(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), clamp(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mix(vec3(_GLF_FUZZED(21.88), _GLF_FUZZED(-78.64), (vec3(0.0, 1.0, 0.0))[2]), vec3((vec3(0.0, 1.0, 0.0))[0], (vec3(0.0, 1.0, 0.0))[1], _GLF_FUZZED((- -654.307))), bvec3(true, true, false))))), max(_GLF_IDENTITY(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), clamp(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mix(vec3(_GLF_FUZZED(21.88), _GLF_FUZZED(-78.64), (vec3(0.0, 1.0, 0.0))[2]), vec3((vec3(0.0, 1.0, 0.0))[0], (vec3(0.0, 1.0, 0.0))[1], _GLF_FUZZED((- -654.307))), bvec3(true, true, false))))), (_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), clamp(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mix(vec3(_GLF_FUZZED(21.88), _GLF_FUZZED(-78.64), (vec3(0.0, 1.0, 0.0))[2]), vec3((vec3(0.0, 1.0, 0.0))[0], (vec3(0.0, 1.0, 0.0))[1], _GLF_FUZZED((- -654.307))), bvec3(true, true, false)))))) / vec3(1.0, 1.0, 1.0)), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), clamp(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mix(vec3(_GLF_FUZZED(21.88), _GLF_FUZZED(-78.64), (vec3(0.0, 1.0, 0.0))[2]), vec3((vec3(0.0, 1.0, 0.0))[0], (vec3(0.0, 1.0, 0.0))[1], _GLF_FUZZED((- -654.307))), bvec3(true, true, false))))))) : _GLF_FUZZED(vec3(7.0, -6.2, -260.608))))) - vec3(0.0, 0.0, 0.0)))), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (true ? _GLF_IDENTITY(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), clamp(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mix(vec3(_GLF_FUZZED(21.88), _GLF_FUZZED(-78.64), (vec3(0.0, 1.0, 0.0))[2]), vec3((vec3(0.0, 1.0, 0.0))[0], (vec3(0.0, 1.0, 0.0))[1], _GLF_FUZZED((- -654.307))), bvec3(true, true, false))))), max(_GLF_IDENTITY(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), clamp(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mix(vec3(_GLF_FUZZED(21.88), _GLF_FUZZED(-78.64), (vec3(0.0, 1.0, 0.0))[2]), vec3((vec3(0.0, 1.0, 0.0))[0], (vec3(0.0, 1.0, 0.0))[1], _GLF_FUZZED((- -654.307))), bvec3(true, true, false))))), (_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), clamp(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mix(vec3(_GLF_FUZZED(21.88), _GLF_FUZZED(-78.64), (vec3(0.0, 1.0, 0.0))[2]), vec3((vec3(0.0, 1.0, 0.0))[0], (vec3(0.0, 1.0, 0.0))[1], _GLF_FUZZED((- -654.307))), bvec3(true, true, false)))))) / vec3(1.0, 1.0, 1.0)), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), clamp(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mix(vec3(_GLF_FUZZED(21.88), _GLF_FUZZED(-78.64), (vec3(0.0, 1.0, 0.0))[2]), vec3((vec3(0.0, 1.0, 0.0))[0], (vec3(0.0, 1.0, 0.0))[1], _GLF_FUZZED((- -654.307))), bvec3(true, true, false))))))) : _GLF_FUZZED(vec3(7.0, -6.2, -260.608))))) - vec3(0.0, 0.0, 0.0))))))))), _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)), 0.0))))) / 1.0)), uvec3(1u), true), mat4x2(1.0), bvec3(true), uvec2(1u)), _GLF_struct_4(_GLF_IDENTITY(mat3(1.0), mat3(mat4(_GLF_IDENTITY(mat3(1.0), mat3(1.0) * (mat3(1.0)))))), 1u, bvec2(true)), _GLF_struct_8(_GLF_struct_5(uvec2(_GLF_IDENTITY(1u, uint(uvec2(1u, 0u)))), mat4x2(1.0)), vec2(1.0), _GLF_struct_6(mat2x4(1.0), _GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY((1u) / 1u, clamp((1u) / 1u, (1u) / 1u, (1u) / 1u)), (_GLF_IDENTITY((_GLF_IDENTITY(1u, ~ (~ (1u)))), min((_GLF_IDENTITY(1u, ~ (~ (1u)))), (_GLF_IDENTITY(1u, ~ (~ (1u)))))) / 1u) - 0u))), _GLF_struct_7(true, uvec3(1u), ivec2(1)), _GLF_IDENTITY(_GLF_IDENTITY(mat3(1.0), _GLF_IDENTITY((mat3(1.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0), _GLF_IDENTITY(transpose(transpose((mat3(1.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), (false ? _GLF_FUZZED(mat3(-5145.5067, 2415.9779, -8.1, -6.4, -1766.1259, -698.686, -6.7, -4051.3814, 580.128)) : transpose(transpose((mat3(1.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))))), (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, true && (false)))), ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false))))))))) && true), (false) && true))))) ? _GLF_FUZZED(mat3(4.7, 72.24, -1.1, 9.3, 360.047, 56.34, 8.3, 6439.2838, 2.3)) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), mat3(mat4x3(mat3(1.0)))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(mat3(1.0), mat3(mat4x3(mat3(1.0)))), (true ? _GLF_IDENTITY(mat3(1.0), mat3(mat4x3(mat3(1.0)))) : _GLF_FUZZED(mat3(7267.7636, 329.403, 6793.3356, 322.830, -0.4, -71.83, -7.6, -61.08, -1129.2549)))) : _GLF_FUZZED(mat3(mat4x3(116.090, 1.4, -21.96, 3.1, -515.438, -1.7, 4.2, -5417.5454, 7377.1022, 79.67, _GLF_IDENTITY(224.294, float(mat2(224.294, abs(1.0), 0.0, 1.0))), -192.703))))), (true ? _GLF_IDENTITY(mat3(1.0), mat3(mat4x3(mat3(1.0)))) : _GLF_FUZZED(mat3(1.1, 16.01, _GLF_IDENTITY(-4586.3907, min(_GLF_IDENTITY(-4586.3907, (true ? -4586.3907 : _GLF_FUZZED(8815.6496))), _GLF_IDENTITY(-4586.3907, mix(float(_GLF_FUZZED(-1.5)), float(-4586.3907), bool(true))))), -508.291, -302.793, 3.6, -62.83, -38.71, -7.1)))))), uvec3(1u), mat4x2(1.0)), atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-21044) : 0)), 0)), int(int(0))), _GLF_IDENTITY(max(0, 0), ~ (~ (max(0, 0)))))), 1);
 do
  {
   do
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(3), int(3)), clamp(0 >> _GLF_IDENTITY(int(3), int(3)), 0 >> _GLF_IDENTITY(int(3), int(3)), _GLF_IDENTITY(0 >> _GLF_IDENTITY(int(3), int(3)), max(0 >> _GLF_IDENTITY(int(3), int(3)), 0 >> _GLF_IDENTITY(int(3), int(3))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, tan(0.0), 1.0, sqrt(0.0), 1.0, 0.0, determinant(mat3(0.0, 1.0, sin(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, determinant(mat4(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0)), 1.0, tan(0.0), 0.0, _GLF_IDENTITY(dot(vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), abs(1.0), 0.0)))))); _injected_loop_counter ++)
        {
         barrier();
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0))) - vec2(0.0, 0.0)).y) + 0.0)), float(_GLF_FUZZED(-9110.7804)), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x4(injectionSwitch.x, 1.0, _GLF_IDENTITY(1.0, float(vec2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0))), 1.0, 0.0, log(1.0), 1.0, 1.0), (true ? mat2x4(injectionSwitch.x, 1.0, 1.0, 1.0, 0.0, log(1.0), 1.0, 1.0) : _GLF_FUZZED((mat2x4(-392.928, 33.63, 2826.3831, -2.7, 45.55, 63.73, 3.9, -10.30) + mat2x4(-8.2, 84.52, 8629.0670, -3823.0484, -5749.7639, -8283.0214, 1.9, 371.481))))))) > injectionSwitch.y)))))))))
        {
         do
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
            }
           else
            {
            }
          }
         while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, bool(bvec3(true, false, false))), _GLF_IDENTITY(true, false || (true))))))) || false));
        }
      }
     else
      {
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), true && (! (! ((injectionSwitch.x > injectionSwitch.y)))))))))
        barrier();
      }
     else
      {
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   else
    {
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(false))
        {
         do
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), true)))))))
            {
            }
           else
            {
             barrier();
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
     else
      {
       if(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(atomicOr(workgroup_size, _GLF_IDENTITY(subgroup_id, 0u | (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)))))) : subgroup_local_id)) + _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(0, min(0, 0)) | (1)), _GLF_IDENTITY(clamp(_GLF_IDENTITY(1, _GLF_IDENTITY(0, _GLF_IDENTITY(min(0, 0), (min(0, 0)) / 1)) | _GLF_IDENTITY((1), (true ? (1) : _GLF_FUZZED(findMSB(workgroup_base))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(0, min(0, 0)) | (1)), 0 + (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(0, min(0, 0)) | (1)), int(int(_GLF_IDENTITY(1, _GLF_IDENTITY(0, min(0, 0)) | (1))))))), (true ? _GLF_IDENTITY(1, _GLF_IDENTITY(0, min(0, 0)) | (1)) : _GLF_FUZZED((97716 * -91943)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(0, min(0, 0)) | (1)), (_GLF_IDENTITY(true ? _GLF_IDENTITY(1, _GLF_IDENTITY(0, min(0, 0)) | (1)) : _GLF_FUZZED((_GLF_IDENTITY(97716 * -91943, (97716 * -91943) | (97716 * -91943)))), (true ? _GLF_IDENTITY(1, _GLF_IDENTITY(0, min(0, 0)) | (_GLF_IDENTITY(1, clamp(1, 1, 1)))) : _GLF_FUZZED((97716 * -91943))) - 0)))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(0, min(0, 0)) | (_GLF_IDENTITY(1, min(1, 1)))), (_GLF_IDENTITY(true ? _GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)) | (1), (_GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)) | (1), (_GLF_IDENTITY(0, min(0, 0)) | (1)) | 0)) / ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))))) : _GLF_FUZZED((97716 * -91943)), 0 | (true ? _GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)) | (1), (_GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)) | (1), (_GLF_IDENTITY(0, min(0, 0)) | (1)) | 0)) / ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))))) : _GLF_FUZZED((97716 * -91943))))))), 0 | (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)), 0 | (_GLF_IDENTITY(0, min(0, 0)))) | (1)), (true ? _GLF_IDENTITY(1, _GLF_IDENTITY(0, min(0, 0)) | _GLF_IDENTITY((1), ((1)) | ((1)))) : _GLF_FUZZED((97716 * -91943))))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(0, min(0, 0)) | (1)), (true ? _GLF_IDENTITY(1, _GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(21455) : _GLF_IDENTITY(0, (0) << 0))))) | (1)) : _GLF_FUZZED((97716 * -91943))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(0, min(0, 0)) | (1)), (true ? _GLF_IDENTITY(1, _GLF_IDENTITY(0, min(0, 0)) | (1)) : _GLF_FUZZED((97716 * -91943))))), (~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(0, min(0, 0)) | (1)), (true ? _GLF_IDENTITY(1, _GLF_IDENTITY(0, min(0, 0)) | (1)) : _GLF_FUZZED((97716 * -91943))))), 0 ^ ((_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(0, min(0, 0)) | (1)), (true ? _GLF_IDENTITY(1, _GLF_IDENTITY(0, min(0, 0)) | (1)) : _GLF_FUZZED((97716 * _GLF_IDENTITY(-91943, 0 ^ (-91943)))))))))) | (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(0, min(0, 0)) | (1)), min(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(0, min(0, 0)) | (1)), max(_GLF_IDENTITY(1, _GLF_IDENTITY(0, min(0, 0)) | (1)), _GLF_IDENTITY(1, _GLF_IDENTITY(0, min(0, 0)) | (1)))), _GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(0, min(0, 0)), 1)), max(int(ivec2(_GLF_IDENTITY(0, min(0, 0)), 1)), int(ivec2(_GLF_IDENTITY(0, min(0, 0)), 1))))) | (1)))), (true ? _GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)) | (1), max(_GLF_IDENTITY(0, min(0, 0)) | (1), _GLF_IDENTITY(0, min(0, 0)) | (1)))) : _GLF_FUZZED((97716 * -91943))))))))))), _GLF_IDENTITY(1, _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (0) | 0), 0)) | (_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(1, 1, (0 << _GLF_IDENTITY(int(5), int(5))), 1), ivec4(0, 0, 0, 0) | (ivec4(1, 1, (0 << _GLF_IDENTITY(int(5), int(5))), 1)))))))), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(1, _GLF_IDENTITY(0, _GLF_IDENTITY(min(0, 0), (min(0, 0)) / 1)) | _GLF_IDENTITY((1), (true ? (1) : _GLF_FUZZED(findMSB(workgroup_base))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(0, min(0, 0)) | (1)), 0 + (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(0, min(0, 0)) | (1)), int(int(_GLF_IDENTITY(1, _GLF_IDENTITY(0, min(0, 0)) | (1))))))), (true ? _GLF_IDENTITY(1, _GLF_IDENTITY(0, min(0, 0)) | (1)) : _GLF_FUZZED((97716 * -91943)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(0, min(0, 0)) | (1)), (_GLF_IDENTITY(true ? _GLF_IDENTITY(1, _GLF_IDENTITY(0, min(0, 0)) | (1)) : _GLF_FUZZED((_GLF_IDENTITY(97716 * -91943, (97716 * -91943) | (97716 * -91943)))), (true ? _GLF_IDENTITY(1, _GLF_IDENTITY(0, min(0, 0)) | (_GLF_IDENTITY(1, clamp(1, 1, 1)))) : _GLF_FUZZED((97716 * -91943))) - 0)))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(0, min(0, 0)) | (_GLF_IDENTITY(1, min(1, 1)))), (_GLF_IDENTITY(true ? _GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)) | (1), (_GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)) | (1), (_GLF_IDENTITY(0, min(0, 0)) | (1)) | 0)) / ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))))) : _GLF_FUZZED((97716 * -91943)), 0 | (true ? _GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)) | (1), (_GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)) | (1), (_GLF_IDENTITY(0, min(0, 0)) | (1)) | 0)) / ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))))) : _GLF_FUZZED((97716 * -91943))))))), 0 | (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)), 0 | (_GLF_IDENTITY(0, min(0, 0)))) | (1)), (true ? _GLF_IDENTITY(1, _GLF_IDENTITY(0, min(0, 0)) | _GLF_IDENTITY((1), ((1)) | ((1)))) : _GLF_FUZZED((97716 * -91943))))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(0, min(0, 0)) | (1)), (true ? _GLF_IDENTITY(1, _GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(21455) : _GLF_IDENTITY(0, (0) << 0))))) | (1)) : _GLF_FUZZED((97716 * -91943))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(0, min(0, 0)) | (1)), (true ? _GLF_IDENTITY(1, _GLF_IDENTITY(0, min(0, 0)) | (1)) : _GLF_FUZZED((97716 * -91943))))), (~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(0, min(0, 0)) | (1)), (true ? _GLF_IDENTITY(1, _GLF_IDENTITY(0, min(0, 0)) | (1)) : _GLF_FUZZED((97716 * -91943))))), 0 ^ ((_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(0, min(0, 0)) | (1)), (true ? _GLF_IDENTITY(1, _GLF_IDENTITY(0, min(0, 0)) | (1)) : _GLF_FUZZED((97716 * _GLF_IDENTITY(-91943, 0 ^ (-91943)))))))))) | (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(0, min(0, 0)) | (1)), min(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(0, min(0, 0)) | (1)), max(_GLF_IDENTITY(1, _GLF_IDENTITY(0, min(0, 0)) | (1)), _GLF_IDENTITY(1, _GLF_IDENTITY(0, min(0, 0)) | (1)))), _GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(0, min(0, 0)), 1)), max(int(ivec2(_GLF_IDENTITY(0, min(0, 0)), 1)), int(ivec2(_GLF_IDENTITY(0, min(0, 0)), 1))))) | (1)))), (true ? _GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)) | (1), max(_GLF_IDENTITY(0, min(0, 0)) | (1), _GLF_IDENTITY(0, min(0, 0)) | (1)))) : _GLF_FUZZED((97716 * -91943))))))))))), _GLF_IDENTITY(1, _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (0) | 0), 0)) | (_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(1, 1, (0 << _GLF_IDENTITY(int(5), int(5))), 1), ivec4(0, 0, 0, 0) | (ivec4(1, 1, (0 << _GLF_IDENTITY(int(5), int(5))), 1)))))))), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(1, _GLF_IDENTITY(0, _GLF_IDENTITY(min(0, 0), (min(0, 0)) / 1)) | _GLF_IDENTITY((1), (true ? (1) : _GLF_FUZZED(findMSB(workgroup_base))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(0, min(0, 0)) | (1)), 0 + (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(0, min(0, 0)) | (1)), int(int(_GLF_IDENTITY(1, _GLF_IDENTITY(0, min(0, 0)) | (1))))))), (true ? _GLF_IDENTITY(1, _GLF_IDENTITY(0, min(0, 0)) | (1)) : _GLF_FUZZED((97716 * -91943)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(0, min(0, 0)) | (1)), (_GLF_IDENTITY(true ? _GLF_IDENTITY(1, _GLF_IDENTITY(0, min(0, 0)) | (1)) : _GLF_FUZZED((_GLF_IDENTITY(97716 * -91943, (97716 * -91943) | (97716 * -91943)))), (true ? _GLF_IDENTITY(1, _GLF_IDENTITY(0, min(0, 0)) | (_GLF_IDENTITY(1, clamp(1, 1, 1)))) : _GLF_FUZZED((97716 * -91943))) - 0)))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(0, min(0, 0)) | (_GLF_IDENTITY(1, min(1, 1)))), (_GLF_IDENTITY(true ? _GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)) | (1), (_GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)) | (1), (_GLF_IDENTITY(0, min(0, 0)) | (1)) | 0)) / ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))))) : _GLF_FUZZED((97716 * -91943)), 0 | (true ? _GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)) | (1), (_GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)) | (1), (_GLF_IDENTITY(0, min(0, 0)) | (1)) | 0)) / ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))))) : _GLF_FUZZED((97716 * -91943))))))), 0 | (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)), 0 | (_GLF_IDENTITY(0, min(0, 0)))) | (1)), (true ? _GLF_IDENTITY(1, _GLF_IDENTITY(0, min(0, 0)) | _GLF_IDENTITY((1), ((1)) | ((1)))) : _GLF_FUZZED((97716 * -91943))))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(0, min(0, 0)) | (1)), (true ? _GLF_IDENTITY(1, _GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(21455) : _GLF_IDENTITY(0, (0) << 0))))) | (1)) : _GLF_FUZZED((97716 * -91943))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(0, min(0, 0)) | (1)), (true ? _GLF_IDENTITY(1, _GLF_IDENTITY(0, min(0, 0)) | (1)) : _GLF_FUZZED((97716 * -91943))))), (~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(0, min(0, 0)) | (1)), (true ? _GLF_IDENTITY(1, _GLF_IDENTITY(0, min(0, 0)) | (1)) : _GLF_FUZZED((97716 * -91943))))), 0 ^ ((_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(0, min(0, 0)) | (1)), (true ? _GLF_IDENTITY(1, _GLF_IDENTITY(0, min(0, 0)) | (1)) : _GLF_FUZZED((97716 * _GLF_IDENTITY(-91943, 0 ^ (-91943)))))))))) | (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(0, min(0, 0)) | (1)), min(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(0, min(0, 0)) | (1)), max(_GLF_IDENTITY(1, _GLF_IDENTITY(0, min(0, 0)) | (1)), _GLF_IDENTITY(1, _GLF_IDENTITY(0, min(0, 0)) | (1)))), _GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(0, min(0, 0)), 1)), max(int(ivec2(_GLF_IDENTITY(0, min(0, 0)), 1)), int(ivec2(_GLF_IDENTITY(0, min(0, 0)), 1))))) | (1)))), (true ? _GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)) | (1), max(_GLF_IDENTITY(0, min(0, 0)) | (1), _GLF_IDENTITY(0, min(0, 0)) | (1)))) : _GLF_FUZZED((97716 * -91943))))))))))), _GLF_IDENTITY(1, _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (0) | 0), 0)) | (_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(1, 1, (0 << _GLF_IDENTITY(int(5), int(5))), 1), ivec4(0, 0, 0, 0) | (ivec4(1, 1, (0 << _GLF_IDENTITY(int(5), int(5))), 1)))))))), (false ? _GLF_FUZZED(-20548) : clamp(_GLF_IDENTITY(1, _GLF_IDENTITY(0, _GLF_IDENTITY(min(0, 0), (min(0, 0)) / 1)) | _GLF_IDENTITY((1), (true ? (1) : _GLF_FUZZED(findMSB(workgroup_base))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(0, min(0, 0)) | (1)), 0 + (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(0, min(0, 0)) | (1)), int(int(_GLF_IDENTITY(1, _GLF_IDENTITY(0, min(0, 0)) | (1))))))), (true ? _GLF_IDENTITY(1, _GLF_IDENTITY(0, min(0, 0)) | (1)) : _GLF_FUZZED((97716 * -91943)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(0, min(0, 0)) | (1)), (_GLF_IDENTITY(true ? _GLF_IDENTITY(1, _GLF_IDENTITY(0, min(0, 0)) | (1)) : _GLF_FUZZED((_GLF_IDENTITY(97716 * -91943, (97716 * -91943) | (97716 * -91943)))), (true ? _GLF_IDENTITY(1, _GLF_IDENTITY(0, min(0, 0)) | (_GLF_IDENTITY(1, clamp(1, 1, 1)))) : _GLF_FUZZED((97716 * -91943))) - 0)))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(0, min(0, 0)) | (_GLF_IDENTITY(1, min(1, 1)))), (_GLF_IDENTITY(true ? _GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)) | (1), (_GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)) | (1), (_GLF_IDENTITY(0, min(0, 0)) | (1)) | 0)) / ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))))) : _GLF_FUZZED((97716 * -91943)), 0 | (true ? _GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)) | (1), (_GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)) | (1), (_GLF_IDENTITY(0, min(0, 0)) | (1)) | 0)) / ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))))) : _GLF_FUZZED((97716 * -91943))))))), 0 | (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)), 0 | (_GLF_IDENTITY(0, min(0, 0)))) | (1)), (true ? _GLF_IDENTITY(1, _GLF_IDENTITY(0, min(0, 0)) | _GLF_IDENTITY((1), ((1)) | ((1)))) : _GLF_FUZZED((97716 * -91943))))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(0, min(0, 0)) | (1)), (true ? _GLF_IDENTITY(1, _GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(21455) : _GLF_IDENTITY(0, (0) << 0))))) | (1)) : _GLF_FUZZED((97716 * -91943))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(0, min(0, 0)) | (1)), (true ? _GLF_IDENTITY(1, _GLF_IDENTITY(0, min(0, 0)) | (1)) : _GLF_FUZZED((97716 * -91943))))), (~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(0, min(0, 0)) | (1)), (true ? _GLF_IDENTITY(1, _GLF_IDENTITY(0, min(0, 0)) | (1)) : _GLF_FUZZED((97716 * -91943))))), 0 ^ ((_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(0, min(0, 0)) | (1)), (true ? _GLF_IDENTITY(1, _GLF_IDENTITY(0, min(0, 0)) | (1)) : _GLF_FUZZED((97716 * _GLF_IDENTITY(-91943, 0 ^ (-91943)))))))))) | (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(0, min(0, 0)) | (1)), min(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(0, min(0, 0)) | (1)), max(_GLF_IDENTITY(1, _GLF_IDENTITY(0, min(0, 0)) | (1)), _GLF_IDENTITY(1, _GLF_IDENTITY(0, min(0, 0)) | (1)))), _GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(0, min(0, 0)), 1)), max(int(ivec2(_GLF_IDENTITY(0, min(0, 0)), 1)), int(ivec2(_GLF_IDENTITY(0, min(0, 0)), 1))))) | (1)))), (true ? _GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)) | (1), max(_GLF_IDENTITY(0, min(0, 0)) | (1), _GLF_IDENTITY(0, min(0, 0)) | (1)))) : _GLF_FUZZED((97716 * -91943))))))))))), _GLF_IDENTITY(1, _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (0) | 0), 0)) | (_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(1, 1, (0 << _GLF_IDENTITY(int(5), int(5))), 1), ivec4(0, 0, 0, 0) | (ivec4(1, 1, (0 << _GLF_IDENTITY(int(5), int(5))), 1))))))))))) ^ 0)) / 1)) < subgroup_size)
        {
         do
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
            barrier();
           if(_GLF_DEAD(false))
            {
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
            }
           do
            {
             if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(true, true, false)), bvec3(bvec3(bvec3(bvec3(true, true, false))))))))), ! (! (true))), _GLF_IDENTITY(true, false || (true)), false, true))), _GLF_IDENTITY(true && (_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(true, false || (true)), false, true)))), ! (_GLF_IDENTITY(! (true && (_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(true, false || (true)), false, true))))), true && (! (true && (_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(true, false || (true)), false, true)))))))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(true, false || (true)), false, true))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), false || (! (! (true))))), _GLF_IDENTITY(true, false || (true)), false, true)), (bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(true, false || _GLF_IDENTITY((true), false || ((true)))), false, true))) && true)), false, true), false))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(288.220)), bool(false))), float(mat3(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(79.85))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, round(length(normalize(1.0))), 1.0, 0.0))))), (true ? _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), (true ? injectionSwitch.x : _GLF_FUZZED(79.85))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, round(length(normalize(1.0))), 1.0, 0.0))))) : _GLF_FUZZED(3.2))) < injectionSwitch.y), _GLF_IDENTITY(! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, float(mat3(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(79.85))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, round(length(normalize(1.0))), 1.0, 0.0))))), (true ? _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, float(mat3(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(79.85))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, round(length(normalize(1.0))), 1.0, 0.0))))) : _GLF_FUZZED(3.2))) < injectionSwitch.y))), ! (! (! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, float(mat3(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(79.85))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, round(length(normalize(1.0))), 1.0, 0.0))))), (true ? _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, float(mat3(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(79.85))), 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-6934.1387)), bool(false))), 0.0, 1.0))), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, round(length(_GLF_IDENTITY(normalize(1.0), (normalize(1.0)) * 1.0))), 1.0, 0.0))))) : _GLF_FUZZED(3.2))) < injectionSwitch.y))))))))), false || (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(true, false || (true)), false, true)), bool(bvec4(bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(true, false || (true)), false, true)), false, true, false)))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), ! (! (! (! (true)))))), _GLF_IDENTITY(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), true && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))), false || (true)), false, true))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), true && (_GLF_IDENTITY(true, ! (! (true))))), _GLF_IDENTITY(true, false || (true)), false, true)), (bool(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), bool(bool(! (! (true)))))), _GLF_IDENTITY(true, false || (true)), false, true))) && true)), false, _GLF_IDENTITY(true, (true) || false)), _GLF_IDENTITY(false, bool(bvec2(false, true)))))))), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-10.16, -900.775)) : injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch.x, float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, float(mat3(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(79.85))), _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4x3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(mat4x3(-930.814, -3142.8560, -7.7, 963.355, 113.175, -6247.7976, 4.7, -1.8, -26.08, 0.8, -840.959, 0.6)) : mat4x3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0))))), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, round(length(normalize(1.0))), 1.0, 0.0))))) < injectionSwitch.y))))))
              {
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 ^ 0)); _injected_loop_counter --)
                {
                 atomicStore(checker[virtual_gid], _GLF_struct_replacement_9.read, 4, 64, 4);
                }
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
         if(_GLF_DEAD(false))
          barrier();
         do
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
           subgroupAll(false);
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, (0 << _GLF_IDENTITY(int(4), int(4))) | (1))); _injected_loop_counter ++)
              {
               barrier();
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             barrier();
            }
           else
            {
            }
          }
        }
       else
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter ++, (_GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) >> (0 >> _GLF_IDENTITY(int(5), int(5))))) * 1), ~ (~ (_injected_loop_counter ++))))
          {
           atomicStore(checker[virtual_gid], _GLF_struct_replacement_9.read, 4, _GLF_IDENTITY(64, (64) / 1), 4);
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(false))
            {
             do
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 barrier();
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
          }
         subgroupAll(true);
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 0.0, 1.0, sqrt(1.0))))))))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             else
              {
              }
            }
          }
         else
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               barrier();
              }
             else
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                  {
                   barrier();
                  }
                 else
                  {
                  }
                }
              }
            }
          }
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
        }
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = ((int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED((- 60.28))), float(_GLF_ONE(1.0, injectionSwitch.y)), bool(true)))) - 0.0)) << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), 0 ^ (int(5))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _GLF_IDENTITY(_injected_loop_counter --, 0 + (_GLF_IDENTITY(_injected_loop_counter --, 1 * (_GLF_IDENTITY(_injected_loop_counter --, (false ? _GLF_FUZZED(78194) : _injected_loop_counter --)))))))
    {
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
      }
     else
      {
       do
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-8.2)), bool(false))), determinant(mat3(1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) - length(vec3(0.0, 0.0, 0.0))), 1.0, 0.0, 0.0, 1.0, 1.0)), 0.0, 1.0))), injectionSwitch)).x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, determinant(mat3(1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0, 0.0, 1.0, 1.0)), 0.0, 1.0))), injectionSwitch)).x, float(vec2(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))) / cos(vec2(0.0, 0.0))), 1.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)), 0.0, 1.0))), injectionSwitch)).x, 0.0)))) / 1.0) > injectionSwitch.y)), false)))))
          {
          }
         else
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                {
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))))))))
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                      }
                    }
                   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_IDENTITY(true, ! (! (true))))))))
                    {
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       do
                        {
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          {
                           do
                            {
                             barrier();
                            }
                           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                          }
                         barrier();
                        }
                       while(_GLF_WRAPPED_LOOP(false));
                      }
                     else
                      {
                      }
                    }
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-9.4) : injectionSwitch.y))))))))
                    {
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(false))
                        {
                         do
                          {
                           barrier();
                          }
                         while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) && true)))));
                        }
                       barrier();
                      }
                     barrier();
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)))
                        {
                         if(_GLF_DEAD(false))
                          {
                           do
                            {
                             if(_GLF_DEAD(false))
                              {
                               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
                                {
                                }
                               else
                                {
                                 barrier();
                                }
                              }
                            }
                           while(_GLF_WRAPPED_LOOP(false));
                           return;
                           if(_GLF_DEAD(false))
                            {
                             do
                              {
                               barrier();
                              }
                             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                            }
                          }
                        }
                       else
                        {
                        }
                      }
                    }
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                       do
                        {
                         barrier();
                        }
                       while(_GLF_WRAPPED_LOOP(false));
                      }
                    }
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(false))
                    {
                     for(int _injected_loop_counter = (1 | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _GLF_IDENTITY(_injected_loop_counter --, 1 * (_injected_loop_counter --)))
                      {
                       do
                        {
                         barrier();
                        }
                       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                      }
                    }
                   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, true))))))))
                    barrier();
                  }
                 else
                  {
                  }
                }
               if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               return;
              }
            }
           else
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
                {
                }
               else
                {
                 do
                  {
                   barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(false, true && (false)))))))));
                }
              }
            }
          }
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
    }
  }
 while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_WRAPPED_LOOP(false)), ! (_GLF_IDENTITY(! (bool(_GLF_WRAPPED_LOOP(false))), (_GLF_IDENTITY(! (bool(_GLF_WRAPPED_LOOP(false))), ! (! (! (bool(_GLF_WRAPPED_LOOP(false))))))) && true)))), (bool(_GLF_IDENTITY(bool(_GLF_WRAPPED_LOOP(false)), ! (! (bool(_GLF_WRAPPED_LOOP(false))))))) && true)))), true && (! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_WRAPPED_LOOP(false)), (bool(_GLF_WRAPPED_LOOP(false))) && true), ! (! (bool(_GLF_WRAPPED_LOOP(false)))))), (bool(_GLF_IDENTITY(bool(_GLF_WRAPPED_LOOP(false)), ! (! (_GLF_IDENTITY(bool(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false))))), ! (! (bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) || false)))))))))) && true))))))));
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
