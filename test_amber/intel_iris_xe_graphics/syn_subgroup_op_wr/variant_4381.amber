#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_7 {
 mat4x2 _f0;
 int _f1;
 ivec3 _f2;
 float _f3;
 mat4x2 _f4;
} ;

struct _GLF_struct_6 {
 vec4 _f0;
 uvec3 _f1;
 float _f2;
 mat2 _f3;
} ;

struct _GLF_struct_8 {
 bool _f0;
 _GLF_struct_6 _f1;
 uvec3 _f2;
 mat3x4 _f3;
 _GLF_struct_7 _f4;
} ;

struct _GLF_struct_4 {
 mat3x2 _f0;
 bool _f1;
 vec4 _f2;
 vec4 _f3;
 bool _f4;
 ivec3 _f5;
} ;

struct _GLF_struct_3 {
 mat2 _f0;
 bvec4 _f1;
 bvec2 _f2;
 vec2 _f3;
} ;

struct _GLF_struct_5 {
 _GLF_struct_3 _f0;
 _GLF_struct_4 _f1;
} ;

struct _GLF_struct_1 {
 mat4x3 _f0;
} ;

struct _GLF_struct_0 {
 ivec2 _f0;
 uvec4 _f1;
 mat3 _f2;
 mat3x4 _f3;
 vec3 _f4;
 mat3 _f5;
} ;

struct _GLF_struct_2 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
} ;

struct _GLF_struct_9 {
 float _f0;
 vec3 _f1;
 uvec3 _f2;
 _GLF_struct_2 _f3;
 _GLF_struct_5 _f4;
 uint subgroup_size;
 _GLF_struct_8 _f5;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 _GLF_struct_9 _GLF_struct_replacement_9 = _GLF_struct_9(1.0, vec3(1.0), uvec3(1u), _GLF_struct_2(_GLF_struct_0(ivec2(1), _GLF_IDENTITY(uvec4(1u), ~ (_GLF_IDENTITY(~ (uvec4(_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, 0u | _GLF_IDENTITY((1u), min((1u), (1u)))), 1u)))), (~ (uvec4(1u))) - uvec4(0u, 0u, 0u, 0u)))), mat3(1.0), mat3x4(1.0), vec3(1.0), mat3(1.0)), _GLF_struct_1(mat4x3(1.0))), _GLF_struct_5(_GLF_struct_3(mat2(1.0), bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, bool(bool((true) && true)))), false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)).y)), true)), bool(_GLF_IDENTITY(bvec2(bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), true)), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), false || _GLF_IDENTITY((true), true && ((true)))))))))), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(bvec4(true, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), false || (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))), true)), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || (true)))))))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), _GLF_IDENTITY(float(mat4x3(min(injectionSwitch.y, injectionSwitch.y), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, tan(0.0), 0.0)), 0.0)), min(_GLF_IDENTITY(float(mat4x3(min(injectionSwitch.y, injectionSwitch.y), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, tan(0.0), 0.0)), 0.0)), max(float(mat4x3(min(injectionSwitch.y, injectionSwitch.y), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, tan(0.0), 0.0)), 0.0)), float(mat4x3(min(injectionSwitch.y, injectionSwitch.y), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, tan(0.0), 0.0)), 0.0)))), _GLF_IDENTITY(float(mat4x3(min(injectionSwitch.y, injectionSwitch.y), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, tan(0.0), 0.0)), 0.0)), float(mat2(float(mat4x3(min(injectionSwitch.y, injectionSwitch.y), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, tan(0.0), 0.0)), 0.0)), 1.0, 1.0, 0.0))))))))), true)), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), bool(bvec4(_GLF_IDENTITY(true, false || (true)), false, true, true)))))))))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), _GLF_IDENTITY(float(mat4x3(min(injectionSwitch.y, injectionSwitch.y), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, tan(0.0), 0.0)), 0.0)), min(_GLF_IDENTITY(float(mat4x3(min(injectionSwitch.y, injectionSwitch.y), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, tan(0.0), 0.0)), 0.0)), max(float(mat4x3(min(injectionSwitch.y, injectionSwitch.y), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, tan(0.0), 0.0)), 0.0)), float(mat4x3(min(injectionSwitch.y, injectionSwitch.y), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, tan(0.0), 0.0)), 0.0)))), _GLF_IDENTITY(float(mat4x3(min(injectionSwitch.y, injectionSwitch.y), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, tan(0.0), 0.0)), 0.0)), float(mat2(float(mat4x3(min(injectionSwitch.y, injectionSwitch.y), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, tan(0.0), 0.0)), 0.0)), 1.0, 1.0, 0.0))))))))), true)), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), bool(bvec4(_GLF_IDENTITY(true, false || (true)), false, true, true)))))))))), bvec2(bvec4(bvec2(bvec2(bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), _GLF_IDENTITY(float(mat4x3(min(injectionSwitch.y, injectionSwitch.y), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, tan(0.0), 0.0)), 0.0)), min(_GLF_IDENTITY(float(mat4x3(min(injectionSwitch.y, injectionSwitch.y), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, tan(0.0), 0.0)), 0.0)), max(float(mat4x3(min(injectionSwitch.y, injectionSwitch.y), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, tan(0.0), 0.0)), 0.0)), float(mat4x3(min(injectionSwitch.y, injectionSwitch.y), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, tan(0.0), 0.0)), 0.0)))), _GLF_IDENTITY(float(mat4x3(min(injectionSwitch.y, injectionSwitch.y), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, tan(0.0), 0.0)), 0.0)), float(mat2(float(mat4x3(min(injectionSwitch.y, injectionSwitch.y), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, tan(0.0), 0.0)), 0.0)), 1.0, 1.0, 0.0))))))))), true)), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), bool(bvec4(_GLF_IDENTITY(true, false || (true)), false, true, true)))))))))), false, false))), true, true))), bvec2(bvec2(bvec2(bvec2(bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), true)), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || (true))))))))))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), true)), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || (true))))))))), bvec2(bvec2(bvec2(bvec2(bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), true)), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || (true))))))))))))))))), true, false)), bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), true)), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || (true)))))))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), true)), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || (true))))))))), bvec2(bvec2(bvec2(bvec2(bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), true)), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || _GLF_IDENTITY((true), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((true), (_GLF_IDENTITY((true), ! (! ((true))))) && true), true), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY((true), (_GLF_IDENTITY((true), ! (! ((true))))) && true), true)), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY((true), (_GLF_IDENTITY((true), ! (! ((true))))) && true), true)), true, true))))))))))))))))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), true)), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || (true))))))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), true)), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || (true))))))))), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), true)), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || (true)))))))))), bvec2(bvec4(bvec2(bvec2(bvec2(bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), true)), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || (true)))))))))), false, true))))))))))))), true, false)), false, true))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(bvec4(true, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), false || (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))), true)), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || (true)))))))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), _GLF_IDENTITY(float(mat4x3(min(injectionSwitch.y, injectionSwitch.y), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, tan(0.0), 0.0)), 0.0)), min(_GLF_IDENTITY(float(mat4x3(min(injectionSwitch.y, injectionSwitch.y), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, tan(0.0), 0.0)), 0.0)), max(float(mat4x3(min(injectionSwitch.y, injectionSwitch.y), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, tan(0.0), 0.0)), 0.0)), float(mat4x3(min(injectionSwitch.y, injectionSwitch.y), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, tan(0.0), 0.0)), 0.0)))), _GLF_IDENTITY(float(mat4x3(min(injectionSwitch.y, injectionSwitch.y), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, tan(0.0), 0.0)), 0.0)), float(mat2(float(mat4x3(min(injectionSwitch.y, injectionSwitch.y), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, tan(0.0), 0.0)), 0.0)), 1.0, 1.0, 0.0))))))))), true)), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), bool(bvec4(_GLF_IDENTITY(true, false || (true)), false, true, true)))))))))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), _GLF_IDENTITY(float(mat4x3(min(injectionSwitch.y, injectionSwitch.y), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, tan(0.0), 0.0)), 0.0)), min(_GLF_IDENTITY(float(mat4x3(min(injectionSwitch.y, injectionSwitch.y), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, tan(0.0), 0.0)), 0.0)), max(float(mat4x3(min(injectionSwitch.y, injectionSwitch.y), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, tan(0.0), 0.0)), 0.0)), float(mat4x3(min(injectionSwitch.y, injectionSwitch.y), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, tan(0.0), 0.0)), 0.0)))), _GLF_IDENTITY(float(mat4x3(min(injectionSwitch.y, injectionSwitch.y), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, tan(0.0), 0.0)), 0.0)), float(mat2(float(mat4x3(min(injectionSwitch.y, injectionSwitch.y), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, tan(0.0), 0.0)), 0.0)), 1.0, 1.0, 0.0))))))))), true)), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), bool(bvec4(_GLF_IDENTITY(true, false || (true)), false, true, true)))))))))), bvec2(bvec4(bvec2(bvec2(bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), _GLF_IDENTITY(float(mat4x3(min(injectionSwitch.y, injectionSwitch.y), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, tan(0.0), 0.0)), 0.0)), min(_GLF_IDENTITY(float(mat4x3(min(injectionSwitch.y, injectionSwitch.y), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, tan(0.0), 0.0)), 0.0)), max(float(mat4x3(min(injectionSwitch.y, injectionSwitch.y), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, tan(0.0), 0.0)), 0.0)), float(mat4x3(min(injectionSwitch.y, injectionSwitch.y), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, tan(0.0), 0.0)), 0.0)))), _GLF_IDENTITY(float(mat4x3(min(injectionSwitch.y, injectionSwitch.y), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, tan(0.0), 0.0)), 0.0)), float(mat2(float(mat4x3(min(injectionSwitch.y, injectionSwitch.y), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, tan(0.0), 0.0)), 0.0)), 1.0, 1.0, 0.0))))))))), true)), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), bool(bvec4(_GLF_IDENTITY(true, false || (true)), false, true, true)))))))))), false, false))), true, true))), bvec2(bvec2(bvec2(bvec2(bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), true)), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || (true))))))))))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), true)), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || (true))))))))), bvec2(bvec2(bvec2(bvec2(bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), true)), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || (true))))))))))))))))), true, false)), bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), true)), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || (true)))))))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), true)), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || (true))))))))), bvec2(bvec2(bvec2(bvec2(bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), true)), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || _GLF_IDENTITY((true), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((true), (_GLF_IDENTITY((true), ! (! ((true))))) && true), true), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY((true), (_GLF_IDENTITY((true), ! (! ((true))))) && true), true)), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY((true), (_GLF_IDENTITY((true), ! (! ((true))))) && true), true)), true, true))))))))))))))))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), true)), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || (true))))))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), true)), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || (true))))))))), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), true)), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || (true)))))))))), bvec2(bvec4(bvec2(bvec2(bvec2(bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), true)), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || (true)))))))))), false, true))))))))))))), true, false)), false, true))))))))), true && (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), _GLF_IDENTITY(bvec3(bvec4(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), true)), bvec3(bvec4(bvec3(bvec4(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), true)), true))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), _GLF_IDENTITY(bvec3(bvec4(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), true)), bvec3(bvec4(bvec3(bvec4(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), true)), true))))), bool(bvec3(bool(_GLF_IDENTITY(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), _GLF_IDENTITY(bvec3(bvec4(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), true)), bvec3(bvec4(bvec3(bvec4(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), true)), true))))), true, false))))))), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, sqrt(0.0), 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, cos(0.0), 1.0, 0.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(transpose(_GLF_IDENTITY(transpose(mat3(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, sqrt(0.0), 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, cos(0.0), 1.0, 0.0, 1.0, 0.0, 1.0)))), transpose(transpose(transpose(mat3(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, sqrt(0.0), 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, cos(0.0), 1.0, 0.0, 1.0, 0.0, 1.0)))))))), mat3(mat4(transpose(_GLF_IDENTITY(transpose(mat3(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, sqrt(0.0), 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, cos(0.0), 1.0, 0.0, 1.0, 0.0, 1.0)))), transpose(transpose(transpose(mat3(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, sqrt(0.0), 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, cos(0.0), 1.0, 0.0, 1.0, 0.0, 1.0)))))))))))))))), true)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(47.92, -960.760)))).y)), true)), _GLF_IDENTITY(true && (bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), ! (! (true && (bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))), true)), ! _GLF_IDENTITY((! (bool(bvec2(_GLF_IDENTITY(bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), _GLF_IDENTITY(true, (true) && true) && (bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), true)))), _GLF_IDENTITY(bool(bool((! (bool(bvec2(_GLF_IDENTITY(bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), _GLF_IDENTITY(true, (true) && true) && (bool(bvec4(true, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - log(vec2(1.0, 1.0))))).x > injectionSwitch.y)), true)))), true)))))), false || (bool(bool((! (bool(bvec2(_GLF_IDENTITY(bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), _GLF_IDENTITY(true, (true) && true) && (bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-9.6)), bool(false)))) * 1.0))), true)))), true))))))))))))))), bvec2(true), vec2(1.0)), _GLF_struct_4(mat3x2(1.0), true, vec4(1.0), vec4(1.0), _GLF_IDENTITY(true, ! (! (true))), ivec3(1))), gl_SubgroupSize, _GLF_struct_8(true, _GLF_struct_6(vec4(1.0), uvec3(_GLF_IDENTITY(1u, _GLF_IDENTITY((_GLF_IDENTITY(1u, _GLF_IDENTITY((1u) | (1u), max((1u) | (1u), _GLF_IDENTITY((1u), max((1u), _GLF_IDENTITY((1u), ((1u)) | ((1u))))) | (1u))))) + 0u, uint(_GLF_IDENTITY(uvec4((_GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, uint(uint(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))))))) + 0u, _GLF_IDENTITY((0u & 108618u), min((0u & 108618u), (0u & 108618u))), 0u, _GLF_IDENTITY(1u, (1u) | (1u))), (false ? _GLF_FUZZED(uvec4(154935u, 44539u, _GLF_IDENTITY(10209u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(10209u, 0u, 0u), _GLF_IDENTITY(uvec3(uvec4(uvec3(10209u, 0u, 0u), 1u)), (uvec3(uvec4(uvec3(10209u, 0u, 0u), 1u))) ^ uvec3(0u, 0u, 0u)))), (uint(_GLF_IDENTITY(uvec3(10209u, 0u, 0u), _GLF_IDENTITY(uvec3(uvec4(uvec3(10209u, 0u, 0u), 1u)), (uvec3(uvec4(uvec3(10209u, 0u, 0u), 1u))) ^ uvec3(0u, 0u, 0u))))) << 0u)), 128530u)) : uvec4((_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u + (1u))) | (_GLF_IDENTITY(1u, (1u) | 0u)))) + 0u, (0u & 108618u), 0u, 1u))))))), 1.0, _GLF_IDENTITY(mat2(1.0), (_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) * mat2(1.0))) - mat2(0.0, 0.0, 0.0, 0.0))), uvec3(1u), mat3x4(1.0), _GLF_struct_7(mat4x2(1.0), 1, ivec3(1), 1.0, mat4x2(1.0))));
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), _GLF_IDENTITY(bool(bool(bool(bvec2(_GLF_DEAD(false), true)))), bool(bvec4(bool(bool(bool(bvec2(_GLF_DEAD(false), true)))), false, false, true))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), false || (! ((injectionSwitch.x > injectionSwitch.y)))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
      barrier();
     barrier();
    }
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
     else
      {
      }
    }
   return;
  }
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))) || false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    continue;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y)), false, true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true)), true && (bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true))))))))
      barrier();
     for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _GLF_IDENTITY(_injected_loop_counter --, ~ (~ (_injected_loop_counter --))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           return;
          }
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), exp(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0)))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(roundEven(79.80)))), 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 1.0, 0.0, 0.0, 1.0, _GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4x3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)), (float(mat4x3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0))) - 0.0)), injectionSwitch.x), 1.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, 0.0))).x > injectionSwitch.y))))
      {
       do
        {
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))), injectionSwitch)).y))))))
          {
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       while(_GLF_WRAPPED_LOOP(false));
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) ^ (gl_WorkGroupSize)).x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 do
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), true, true, false))))))
      continue;
     barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 do
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0)) * (injectionSwitch)).x > injectionSwitch.y, bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * _GLF_IDENTITY(dot(vec3(exp(0.0), 0.0, 0.0), vec3(1.0, 0.0, sqrt(0.0))), dot(vec3(exp(0.0), 0.0, 0.0), vec3(1.0, 0.0, sqrt(0.0))))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (bool((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), bool(bool(injectionSwitch.x > injectionSwitch.y)))))), (! (_GLF_IDENTITY(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))), (bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))) && true))) || false)), bool(bvec3((_GLF_IDENTITY(! (bool((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), bool(bool(injectionSwitch.x > injectionSwitch.y)))))), (! (_GLF_IDENTITY(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))), (bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))) && true))) || false)), false, true))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))), (! (bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))))) || false))), (_GLF_IDENTITY(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))), (! (bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x > injectionSwitch.y), true, false))), false)))), false || (! (_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x > injectionSwitch.y), true, false))), false)))))))))))))) || false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))))
      break;
     for(int _injected_loop_counter = _GLF_IDENTITY(0, min(0, 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((- float(-61922)))), bool(false))) > injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             return;
            }
           else
            {
            }
          }
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     do
      {
       for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          continue;
         continue;
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(_GLF_IDENTITY(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), false)), bvec2(bvec2(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), false))))))))))));
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true)), false || (bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true))))))))) || false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0)))))), 0.0)))) > injectionSwitch.y, ! (! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false, true))) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(clamp(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / vec2(1.0, 1.0)), mat2(1.0) * (injectionSwitch)), vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(clamp(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / vec2(1.0, 1.0)), mat2(1.0) * (injectionSwitch)), (clamp(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / vec2(1.0, 1.0)), mat2(1.0) * (injectionSwitch))) - vec2(0.0, 0.0)))))).y, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false, true))) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(clamp(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / vec2(1.0, 1.0)), mat2(1.0) * (injectionSwitch)), vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(clamp(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / vec2(1.0, 1.0)), mat2(1.0) * (injectionSwitch)), (clamp(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / vec2(1.0, 1.0)), mat2(1.0) * (injectionSwitch))) - vec2(0.0, 0.0)))))).y, ! (! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false, true))) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(clamp(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / vec2(1.0, 1.0)), mat2(1.0) * (injectionSwitch)), vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(clamp(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / vec2(1.0, 1.0)), mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0))) * (injectionSwitch)), (clamp(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / vec2(1.0, 1.0)), mat2(1.0) * (injectionSwitch))) - vec2(0.0, 0.0)))))).y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false, true))) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(clamp(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / vec2(1.0, 1.0)), mat2(1.0) * (injectionSwitch)), vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(clamp(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / vec2(1.0, 1.0)), mat2(1.0) * (injectionSwitch)), (clamp(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / vec2(1.0, 1.0)), mat2(1.0) * (injectionSwitch))) - vec2(0.0, 0.0)))))).y, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false, true))) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(clamp(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / vec2(1.0, 1.0)), mat2(1.0) * (injectionSwitch)), vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(clamp(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / vec2(1.0, 1.0)), mat2(1.0) * (injectionSwitch)), (clamp(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / vec2(1.0, 1.0)), mat2(1.0) * (injectionSwitch))) - vec2(0.0, 0.0)))))).y, ! (! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false, true))) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(clamp(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / vec2(1.0, 1.0)), mat2(1.0) * (injectionSwitch)), vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(clamp(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / vec2(1.0, 1.0)), mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0))) * (injectionSwitch)), (clamp(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / vec2(1.0, 1.0)), mat2(1.0) * (injectionSwitch))) - vec2(0.0, 0.0)))))).y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true, true)))))))))
      {
       for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
          barrier();
        }
       else
        {
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && _GLF_IDENTITY((_GLF_IDENTITY(! (false), (! (false)) || false)), true && (_GLF_IDENTITY((_GLF_IDENTITY(! (false), (! (false)) || false)), ((_GLF_IDENTITY(! (false), (! (false)) || false))) && true))))))))
        barrier();
       return;
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 | 0)); _GLF_IDENTITY(_injected_loop_counter --, ~ (~ (_injected_loop_counter --))))
          {
           barrier();
          }
        }
      }
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
        barrier();
      }
    }
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), false || (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
      }
    }
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_struct_replacement_9.subgroup_size, (false ? _GLF_FUZZED(workgroup_size) : _GLF_struct_replacement_9.subgroup_size)) + subgroup_local_id, (workgroup_base + _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)) * _GLF_IDENTITY(_GLF_struct_replacement_9.subgroup_size, (false ? _GLF_FUZZED(workgroup_size) : _GLF_struct_replacement_9.subgroup_size)) + subgroup_local_id) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u) + subgroup_id * _GLF_IDENTITY(_GLF_struct_replacement_9.subgroup_size, (false ? _GLF_FUZZED(workgroup_size) : _GLF_struct_replacement_9.subgroup_size)) + subgroup_local_id, ~ (~ (workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_struct_replacement_9.subgroup_size, (false ? _GLF_FUZZED(workgroup_size) : _GLF_struct_replacement_9.subgroup_size)) + subgroup_local_id)))));
 do
  {
   if(_GLF_DEAD(false))
    return;
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 uint next_virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_struct_replacement_9.subgroup_size, _GLF_IDENTITY(uint(uvec4(_GLF_struct_replacement_9.subgroup_size, (_GLF_IDENTITY(16432u & _GLF_IDENTITY((0u & 96331u), 0u + (_GLF_IDENTITY((0u & 96331u), clamp((0u & 96331u), (0u & 96331u), (0u & 96331u))))), min(_GLF_IDENTITY(16432u & (0u & 96331u), max(16432u & (0u & 96331u), 16432u & (0u & 96331u))), 16432u & (0u & _GLF_IDENTITY(96331u, (96331u) + 0u))))), _GLF_IDENTITY(1u, 0u ^ (1u)), 1u)), _GLF_IDENTITY(_GLF_IDENTITY((uint(uvec4(_GLF_struct_replacement_9.subgroup_size, (_GLF_IDENTITY(16432u & (0u & 96331u), ~ (~ (16432u & (0u & 96331u))))), _GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(68780u))), (true ? _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(68780u))) : _GLF_FUZZED(atomicAnd(num_workgroup, 7706u)))), 1u)), 1u))) | 0u, clamp((uint(uvec4(_GLF_struct_replacement_9.subgroup_size, (16432u & (0u & 96331u)), 1u, 1u))) | 0u, (uint(uvec4(_GLF_struct_replacement_9.subgroup_size, (16432u & (0u & 96331u)), 1u, 1u))) | 0u, (uint(uvec4(_GLF_struct_replacement_9.subgroup_size, (16432u & (0u & 96331u)), 1u, 1u))) | 0u)), (_GLF_IDENTITY((uint(uvec4(_GLF_struct_replacement_9.subgroup_size, (16432u & (0u & 96331u)), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) | (1u))) << 0u), 1u))) | 0u, clamp((uint(uvec4(_GLF_IDENTITY(_GLF_struct_replacement_9.subgroup_size, (_GLF_struct_replacement_9.subgroup_size) | (_GLF_struct_replacement_9.subgroup_size)), (16432u & (0u & 96331u)), 1u, 1u))) | 0u, _GLF_IDENTITY((uint(uvec4(_GLF_struct_replacement_9.subgroup_size, _GLF_IDENTITY((16432u & (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(min((workgroup_base & workgroup_base), 134360u)) : _GLF_IDENTITY(0u, (0u) >> 0u))) & 96331u)), uint(uvec4((16432u & (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(min((workgroup_base & workgroup_base), 134360u)) : _GLF_IDENTITY(0u, (0u) >> 0u))) & 96331u)), (0u >> _GLF_IDENTITY(uint(1u), uint(1u))), 1u, 0u))), 1u, 1u))), (true ? (uint(uvec4(_GLF_struct_replacement_9.subgroup_size, (16432u & (0u & 96331u)), 1u, 1u))) : _GLF_FUZZED(num_workgroup))) | 0u, (uint(uvec4(_GLF_struct_replacement_9.subgroup_size, (_GLF_IDENTITY(16432u & (0u & 96331u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : 16432u & (0u & _GLF_IDENTITY(96331u, ~ (~ (_GLF_IDENTITY(96331u, max(96331u, 96331u))))))))), 1u, 1u))) | _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, (0u) | (0u)) : _GLF_FUZZED(subgroup_id)))))) | 0u))) + ((subgroup_local_id + 1) % _GLF_struct_replacement_9.subgroup_size);
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
      }
     else
      {
      }
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     barrier();
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))))
      break;
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint read = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) >> 0u)], 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(27.19)), vec2(_GLF_FUZZED(-8863.7801), _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(false, true))), min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(27.19)), vec2(_GLF_FUZZED(-8863.7801), _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(false, true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(27.19)), vec2(_GLF_FUZZED(-8863.7801), _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(false, true))), min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(27.19)), vec2(_GLF_FUZZED(-8863.7801), _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(false, true))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(27.19)), vec2(_GLF_FUZZED(-8863.7801), _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(false, true))))))), max(injectionSwitch, injectionSwitch)).x, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(27.19)), vec2(_GLF_FUZZED(-8863.7801), _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(false, true))), min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(27.19)), vec2(_GLF_FUZZED(-8863.7801), _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(false, true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(27.19)), vec2(_GLF_FUZZED(-8863.7801), _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(false, true))), min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(27.19)), vec2(_GLF_FUZZED(-8863.7801), _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(false, true))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(27.19)), vec2(_GLF_FUZZED(-8863.7801), _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(false, true))))))), max(injectionSwitch, injectionSwitch)).x) * 1.0) > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, 0.0, tan(0.0), 0.0, log(1.0), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, tan(0.0)))), injectionSwitch.y, injectionSwitch.y))))))
          return;
         barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     return;
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), cos(0.0), 0.0, abs(1.0), 1.0, 1.0, 1.0, 1.0), (mat4x2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), cos(0.0), 0.0, abs(1.0), 1.0, 1.0, 1.0, 1.0)) * mat4(1.0)))) > injectionSwitch.y), _GLF_IDENTITY(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(! (! (bool(bool(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), true), bvec2(bvec4(bvec2(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), true), true, true))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), true), bvec2(bvec4(bvec2(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), true), true, true))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), true), bvec2(bvec4(bvec2(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), true), true, true))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), false || (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), true), bvec2(bvec4(bvec2(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), true), true, true))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), true), bvec2(bvec4(bvec2(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), true), true, true))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), true), bvec2(bvec4(bvec2(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), true), true, true))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), true), bvec2(bvec4(bvec2(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), true), true, true))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), true), bvec2(bvec4(bvec2(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), true), true, true))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), true), bvec2(bvec4(bvec2(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), true), true, true))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), false || (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), true), bvec2(bvec4(bvec2(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), true), true, true))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), true), bvec2(bvec4(bvec2(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), true), true, true))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), true), bvec2(bvec4(bvec2(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), true), true, true))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))))), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) && _GLF_IDENTITY(true, ! (! (true))), true && (_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))))) && _GLF_IDENTITY(true, ! (! (true))), ! (! (((injectionSwitch.x > injectionSwitch.y)) && _GLF_IDENTITY(true, ! (! (true))))))))))))), (! (! (bool(bool(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, log(1.0), 1.0), (vec4(injectionSwitch, log(1.0), 1.0)) + vec4(0.0, 0.0, 0.0, 0.0)))).x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), true), bvec2(bvec4(bvec2(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bool(! (injectionSwitch.x > injectionSwitch.y))))))), true), true, true))))), false, _GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))))))), (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), true), bvec2(bvec4(bvec2(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))))))), true), true, true))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-4499.9071) : injectionSwitch.x)) > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, tan(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)))) + (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(957.317)), float(injectionSwitch.y), bool(true))), 1.0, sin(0.0), 0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))), float(mat2(float(mat3x4(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(957.317)), float(injectionSwitch.y), bool(true))), 1.0, sin(0.0), 0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))), 0.0, 1.0, 0.0)))))), ! (! (injectionSwitch.x > injectionSwitch.y)))), true), bvec2(bvec4(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false, false), false)))))), true), true, true))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), false || (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) + 0.0))) > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))), bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), true), bvec2(bvec4(bvec2(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ((! (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true), true, true))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))) && true), true), bvec2(bvec4(bvec2(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), true), true, true))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-3.1), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((4.6 * 4.2))), bvec2(true, false))).y))))), ! (! (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), true), bvec2(bvec4(bvec2(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), true), true, true))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), true), bvec2(bvec4(bvec2(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)), bool(bvec4(bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)), false, true, false))))))), true), true, true))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, length(vec3(0.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0)), max(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0))))), 1.0, 0.0, 1.0, 0.0, sqrt(0.0), 0.0, 0.0))).x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x))), vec2(mat3x4(vec2(vec3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0)))), injectionSwitch)).x > injectionSwitch.y)))), true), bvec2(bvec4(bvec2(! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), false, true, true)))), ! (! (bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), false, true, true)))))))), true), true, true))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)) || false)))), true), bvec2(bvec4(bvec2(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), true), true, true))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), false || (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), true), bvec2(bvec4(bvec2(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), true), true, true))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-9307.9064)), bool(false))) > injectionSwitch.y))))) && true), true), bvec2(bvec4(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), ! (! (injectionSwitch.x > injectionSwitch.y)))), true), true, true))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), true), bvec2(bvec4(bvec2(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false)))), true), true, true))))), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-415.100)), vec2(_GLF_FUZZED(7745.4409), (injectionSwitch)[1]), bvec2(false, true))))), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0), (true ? mat2x4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-415.100)), vec2(_GLF_FUZZED(7745.4409), (injectionSwitch)[1]), bvec2(false, true))))), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0) : _GLF_FUZZED(mat2x4(404.717, -9506.7917, 536.894, -5.2, -4.2, 44.96, -42.27, -8.8))))), max(vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-415.100)), vec2(_GLF_FUZZED(7745.4409), (injectionSwitch)[1]), bvec2(false, true))))), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0), (true ? mat2x4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-415.100)), vec2(_GLF_FUZZED(7745.4409), (injectionSwitch)[1]), bvec2(false, true))))), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0) : _GLF_FUZZED(mat2x4(404.717, -9506.7917, 536.894, -5.2, -4.2, 44.96, -42.27, -8.8))))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-415.100)), vec2(_GLF_FUZZED(7745.4409), (injectionSwitch)[1]), bvec2(false, true))))), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0), (true ? mat2x4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-415.100)), vec2(_GLF_FUZZED(7745.4409), (injectionSwitch)[1]), bvec2(false, true))))), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0) : _GLF_FUZZED(mat2x4(404.717, -9506.7917, 536.894, -5.2, -4.2, 44.96, -42.27, -8.8))))), min(vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-415.100)), vec2(_GLF_FUZZED(7745.4409), (injectionSwitch)[1]), bvec2(false, true))))), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0), (true ? mat2x4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-415.100)), vec2(_GLF_FUZZED(7745.4409), (injectionSwitch)[1]), bvec2(false, true))))), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0) : _GLF_FUZZED(mat2x4(404.717, -9506.7917, 536.894, -5.2, -4.2, 44.96, -42.27, -8.8))))), vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-415.100)), vec2(_GLF_FUZZED(7745.4409), (injectionSwitch)[1]), bvec2(false, true))))), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0), (true ? mat2x4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-415.100)), vec2(_GLF_FUZZED(7745.4409), (injectionSwitch)[1]), bvec2(false, true))))), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0) : _GLF_FUZZED(mat2x4(404.717, -9506.7917, 536.894, -5.2, -4.2, 44.96, -42.27, -8.8)))))))))).x > injectionSwitch.y)))))))))))))))))), _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))) && _GLF_IDENTITY(true, ! (! (true))), true && (_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), 1.0 * (_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))))))) && _GLF_IDENTITY(true, ! (! (true))), ! (! (((injectionSwitch.x > injectionSwitch.y)) && _GLF_IDENTITY(true, ! (! (true)))))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), (! (_GLF_IDENTITY(false, bool(bvec3(false, false, false))))) || false), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), (! (_GLF_IDENTITY(false, bool(bvec3(false, false, false))))) || false), false), false)))))))), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), (! (_GLF_IDENTITY(false, bool(bvec3(false, false, false))))) || false), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), (! (_GLF_IDENTITY(false, bool(bvec3(false, false, false))))) || false), false), false)))))))), true)), ! (! (bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), (! (_GLF_IDENTITY(false, bool(bvec3(false, false, false))))) || false), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), (! (_GLF_IDENTITY(false, bool(bvec3(false, false, false))))) || false), false), false)))))))), true)))))) || false)))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, bool(_GLF_IDENTITY(bvec2((false) && true, true), bvec2(bvec3(bvec2((false) && true, true), true))))))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, bool(_GLF_IDENTITY(bvec2((false) && true, true), bvec2(bvec3(bvec2((false) && true, true), true))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))))
      {
       if(_GLF_DEAD(false))
        return;
       for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), max(int(3), int(3))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 1.0, determinant(mat3(1.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, sqrt(0.0), abs(1.0), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0)), 1.0, 0.0, 0.0))))).y))))
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               return;
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           else
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
            }
          }
         else
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             barrier();
            }
           if(_GLF_DEAD(false))
            return;
          }
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < _GLF_struct_replacement_9.subgroup_size, (subgroup_local_id + 1 < _GLF_struct_replacement_9.subgroup_size) && true), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < _GLF_struct_replacement_9.subgroup_size, bool(_GLF_IDENTITY(bool(subgroup_local_id + 1 < _GLF_struct_replacement_9.subgroup_size), true && (bool(subgroup_local_id + 1 < _GLF_struct_replacement_9.subgroup_size))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (subgroup_local_id + 1 < _GLF_struct_replacement_9.subgroup_size), ! _GLF_IDENTITY((! (! (subgroup_local_id + 1 < _GLF_struct_replacement_9.subgroup_size))), false || (_GLF_IDENTITY((! _GLF_IDENTITY((! (subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)) < _GLF_struct_replacement_9.subgroup_size)), ! (! ((! (subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)) < _GLF_struct_replacement_9.subgroup_size)))))), true && ((! (! (subgroup_local_id + 1 < _GLF_struct_replacement_9.subgroup_size))))))))), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(! (subgroup_local_id + 1 < _GLF_struct_replacement_9.subgroup_size), ! _GLF_IDENTITY((! (! (subgroup_local_id + 1 < _GLF_struct_replacement_9.subgroup_size))), false || (_GLF_IDENTITY((! (! (subgroup_local_id + 1 < _GLF_struct_replacement_9.subgroup_size))), true && ((! (! (subgroup_local_id + 1 < _GLF_struct_replacement_9.subgroup_size))))))))), (! (_GLF_IDENTITY(! (subgroup_local_id + 1 < _GLF_struct_replacement_9.subgroup_size), ! _GLF_IDENTITY((! (! (subgroup_local_id + 1 < _GLF_struct_replacement_9.subgroup_size))), false || _GLF_IDENTITY((_GLF_IDENTITY((! (! (subgroup_local_id + 1 < _GLF_struct_replacement_9.subgroup_size))), true && ((! (_GLF_IDENTITY(! (subgroup_local_id + 1 < _GLF_struct_replacement_9.subgroup_size), bool(bool(! (subgroup_local_id + 1 < _GLF_struct_replacement_9.subgroup_size))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY((! (! (subgroup_local_id + 1 < _GLF_struct_replacement_9.subgroup_size))), true && ((! (_GLF_IDENTITY(! (subgroup_local_id + 1 < _GLF_struct_replacement_9.subgroup_size), bool(bool(! (subgroup_local_id + 1 < _GLF_struct_replacement_9.subgroup_size))))))))), true && ((_GLF_IDENTITY((! (! (subgroup_local_id + 1 < _GLF_struct_replacement_9.subgroup_size))), true && ((! (_GLF_IDENTITY(! (subgroup_local_id + 1 < _GLF_struct_replacement_9.subgroup_size), bool(bool(! (subgroup_local_id + 1 < _GLF_struct_replacement_9.subgroup_size)))))))))))), ! (! (! (_GLF_IDENTITY((_GLF_IDENTITY((! (! (subgroup_local_id + 1 < _GLF_struct_replacement_9.subgroup_size))), true && ((! (_GLF_IDENTITY(! (subgroup_local_id + 1 < _GLF_struct_replacement_9.subgroup_size), bool(bool(! (subgroup_local_id + 1 < _GLF_struct_replacement_9.subgroup_size))))))))), true && ((_GLF_IDENTITY((! (! (subgroup_local_id + 1 < _GLF_struct_replacement_9.subgroup_size))), true && ((! (_GLF_IDENTITY(! (subgroup_local_id + 1 < _GLF_struct_replacement_9.subgroup_size), bool(bool(! (subgroup_local_id + 1 < _GLF_struct_replacement_9.subgroup_size))))))))))))))))))))) || false), false, false, false))))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec4(-5.4, -5.0, 6.8, 1.8).z), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-803.278)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x > injectionSwitch.y)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < _GLF_struct_replacement_9.subgroup_size, bool(_GLF_IDENTITY(bool(subgroup_local_id + 1 < _GLF_struct_replacement_9.subgroup_size), true && (bool(subgroup_local_id + 1 < _GLF_struct_replacement_9.subgroup_size))))), bool(bvec2(_GLF_IDENTITY(subgroup_local_id + 1 < _GLF_struct_replacement_9.subgroup_size, bool(_GLF_IDENTITY(bool(subgroup_local_id + 1 < _GLF_struct_replacement_9.subgroup_size), true && (bool(subgroup_local_id + 1 < _GLF_struct_replacement_9.subgroup_size))))), true))), _GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (subgroup_local_id + 1 < _GLF_struct_replacement_9.subgroup_size), ! _GLF_IDENTITY((! (! (subgroup_local_id + 1 < _GLF_struct_replacement_9.subgroup_size))), false || (_GLF_IDENTITY((! _GLF_IDENTITY((! (subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)) < _GLF_struct_replacement_9.subgroup_size)), ! (! ((! (subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)) < _GLF_struct_replacement_9.subgroup_size)))))), true && ((! (! (subgroup_local_id + 1 < _GLF_struct_replacement_9.subgroup_size)))))))), ! (! (_GLF_IDENTITY(! (subgroup_local_id + 1 < _GLF_struct_replacement_9.subgroup_size), ! _GLF_IDENTITY((! (! (subgroup_local_id + 1 < _GLF_struct_replacement_9.subgroup_size))), false || (_GLF_IDENTITY((! _GLF_IDENTITY((! (subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)) < _GLF_struct_replacement_9.subgroup_size)), ! (! _GLF_IDENTITY(((! _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)) < _GLF_IDENTITY(_GLF_struct_replacement_9.subgroup_size, max(_GLF_struct_replacement_9.subgroup_size, _GLF_struct_replacement_9.subgroup_size))), bool(_GLF_IDENTITY(bool((subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)) < _GLF_IDENTITY(_GLF_struct_replacement_9.subgroup_size, max(_GLF_struct_replacement_9.subgroup_size, _GLF_struct_replacement_9.subgroup_size)))), ! (_GLF_IDENTITY(! (bool((subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)) < _GLF_IDENTITY(_GLF_struct_replacement_9.subgroup_size, max(_GLF_struct_replacement_9.subgroup_size, _GLF_struct_replacement_9.subgroup_size))))), bool(bvec2(! (bool((subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)) < _GLF_IDENTITY(_GLF_struct_replacement_9.subgroup_size, max(_GLF_struct_replacement_9.subgroup_size, _GLF_struct_replacement_9.subgroup_size))))), true))))))))), true && (((! _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)) < _GLF_IDENTITY(_GLF_struct_replacement_9.subgroup_size, max(_GLF_struct_replacement_9.subgroup_size, _GLF_struct_replacement_9.subgroup_size))), bool(_GLF_IDENTITY(bool((subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)) < _GLF_IDENTITY(_GLF_struct_replacement_9.subgroup_size, max(_GLF_struct_replacement_9.subgroup_size, _GLF_struct_replacement_9.subgroup_size)))), ! (_GLF_IDENTITY(! (bool((subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)) < _GLF_IDENTITY(_GLF_struct_replacement_9.subgroup_size, max(_GLF_struct_replacement_9.subgroup_size, _GLF_struct_replacement_9.subgroup_size))))), bool(bvec2(! (bool((subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)) < _GLF_IDENTITY(_GLF_struct_replacement_9.subgroup_size, max(_GLF_struct_replacement_9.subgroup_size, _GLF_struct_replacement_9.subgroup_size))))), true)))))))))))))), true && ((! (! (subgroup_local_id + 1 < _GLF_IDENTITY(_GLF_struct_replacement_9.subgroup_size, uint(_GLF_IDENTITY(uvec2(_GLF_struct_replacement_9.subgroup_size, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)))), clamp(uvec2(_GLF_struct_replacement_9.subgroup_size, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)))), uvec2(_GLF_struct_replacement_9.subgroup_size, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)))), uvec2(_GLF_struct_replacement_9.subgroup_size, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)))))))))))))))))))), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(! (subgroup_local_id + 1 < _GLF_struct_replacement_9.subgroup_size), ! _GLF_IDENTITY((! (! (subgroup_local_id + 1 < _GLF_struct_replacement_9.subgroup_size))), false || (_GLF_IDENTITY((! (! (_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), 0u | (_GLF_IDENTITY(~ (subgroup_local_id), (true ? ~ (subgroup_local_id) : _GLF_FUZZED(subgroup_id))))))) + 1 < _GLF_struct_replacement_9.subgroup_size))), true && (_GLF_IDENTITY((! (! (subgroup_local_id + 1 < _GLF_struct_replacement_9.subgroup_size))), bool(bvec4((! (! (subgroup_local_id + 1 < _GLF_struct_replacement_9.subgroup_size))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))), (! (_GLF_IDENTITY(! (subgroup_local_id + 1 < _GLF_struct_replacement_9.subgroup_size), ! _GLF_IDENTITY((! (! (subgroup_local_id + 1 < _GLF_struct_replacement_9.subgroup_size))), false || _GLF_IDENTITY((_GLF_IDENTITY((! (! (subgroup_local_id + 1 < _GLF_struct_replacement_9.subgroup_size))), true && ((! (_GLF_IDENTITY(! (subgroup_local_id + 1 < _GLF_struct_replacement_9.subgroup_size), bool(bool(! (subgroup_local_id + 1 < _GLF_struct_replacement_9.subgroup_size))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY((! (! (subgroup_local_id + 1 < _GLF_struct_replacement_9.subgroup_size))), true && ((! (_GLF_IDENTITY(! (subgroup_local_id + 1 < _GLF_struct_replacement_9.subgroup_size), bool(bool(! (subgroup_local_id + 1 < _GLF_struct_replacement_9.subgroup_size))))))))), true && ((_GLF_IDENTITY((! (! (subgroup_local_id + 1 < _GLF_struct_replacement_9.subgroup_size))), true && ((! (_GLF_IDENTITY(! (subgroup_local_id + 1 < _GLF_struct_replacement_9.subgroup_size), bool(bool(! (subgroup_local_id + 1 < _GLF_struct_replacement_9.subgroup_size)))))))))))), ! (! (! (_GLF_IDENTITY((_GLF_IDENTITY((! (! (subgroup_local_id + 1 < _GLF_struct_replacement_9.subgroup_size))), true && ((! (_GLF_IDENTITY(! (subgroup_local_id + 1 < _GLF_struct_replacement_9.subgroup_size), bool(bool(! _GLF_IDENTITY((subgroup_local_id + 1 < _GLF_struct_replacement_9.subgroup_size), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((subgroup_local_id + 1 < _GLF_struct_replacement_9.subgroup_size), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2((subgroup_local_id + 1 < _GLF_struct_replacement_9.subgroup_size), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))), (bool(_GLF_IDENTITY(bvec2((subgroup_local_id + 1 < _GLF_struct_replacement_9.subgroup_size), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2((subgroup_local_id + 1 < _GLF_struct_replacement_9.subgroup_size), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))) && true)))))))))), true && ((_GLF_IDENTITY((! (! (subgroup_local_id + 1 < _GLF_struct_replacement_9.subgroup_size))), true && ((! (_GLF_IDENTITY(! (subgroup_local_id + 1 < _GLF_struct_replacement_9.subgroup_size), _GLF_IDENTITY(bool(bool(! (subgroup_local_id + 1 < _GLF_struct_replacement_9.subgroup_size))), false || (bool(bool(! (subgroup_local_id + 1 < _GLF_struct_replacement_9.subgroup_size))))))))))))))))))))))) || _GLF_IDENTITY(false, ! (! (false)))), false, false, false))))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec4(-5.4, -5.0, 6.8, 1.8).z), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-803.278)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, false || (false)), true, false)), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, false || (false)), true, false), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, false || (false)), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, false || (false)), true, false))))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, false || (false)), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, false || (false)), true, false))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, false || (false)), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, false || (false)), true, false))))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, false || (false)), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, false || (false)), true, false))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, false || (false)), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, false || (false)), true, false))))))))), false))))))))) || false))))
        return;
       barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(float(-86628)), _GLF_FUZZED(40.67)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
      }
    }
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     else
      {
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), false || ((false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), true && (! (! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), false || ((false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! _GLF_IDENTITY((false), (_GLF_IDENTITY(_GLF_IDENTITY((false), false || ((false))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((false), false || ((false)))), true && (bool(_GLF_IDENTITY((false), false || ((false))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
        }
       else
        {
         subgroupAll(false);
         if(_GLF_DEAD(false))
          return;
        }
      }
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
   subgroupAll(true);
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(8), int(8))); _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 | 1)); _injected_loop_counter ++)
        {
         return;
        }
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       return;
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
        {
         return;
        }
       else
        {
        }
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
      }
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
