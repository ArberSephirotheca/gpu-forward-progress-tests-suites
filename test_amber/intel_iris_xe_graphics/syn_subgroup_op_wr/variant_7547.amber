#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec4 GLF_merged3_0_2_47_2_1_16_3_1_11GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidnext_virtual_gidsubgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uvec3 GLF_merged3_0_1_4_1_1_11_2_1_14readsubgroup_idworkgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(sqrt(abs(vec2(1.0, 1.0))), (true ? sqrt(abs(vec2(1.0, 1.0))) : _GLF_FUZZED(injectionSwitch))) * (injectionSwitch), vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(sqrt(abs(vec2(1.0, 1.0))) * (injectionSwitch), mix(vec2(_GLF_FUZZED(891.923), _GLF_FUZZED(89.73)), vec2((sqrt(abs(vec2(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, float(vec3(1.0, 0.0, 0.0))), 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))), 1.0))) * (injectionSwitch))[0], (sqrt(abs(vec2(1.0, 1.0))) * (injectionSwitch))[1]), bvec2(true, true))), 0.0, _GLF_ONE(1.0, injectionSwitch.y)), mat2(mat2(mat2(_GLF_IDENTITY(sqrt(abs(vec2(1.0, 1.0))) * (injectionSwitch), mix(vec2(_GLF_FUZZED(891.923), _GLF_FUZZED(89.73)), vec2((sqrt(abs(vec2(1.0, 1.0))) * (injectionSwitch))[_GLF_IDENTITY(0, int(int(0)))], (sqrt(abs(vec2(1.0, 1.0))) * (injectionSwitch))[1]), bvec2(true, true))), 0.0, _GLF_ONE(1.0, injectionSwitch.y))))))), mix(vec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(sqrt(abs(vec2(1.0, 1.0))), (true ? sqrt(abs(vec2(1.0, 1.0))) : _GLF_FUZZED(injectionSwitch))) * (injectionSwitch), vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(sqrt(abs(vec2(1.0, 1.0))) * (injectionSwitch), mix(vec2(_GLF_FUZZED(891.923), _GLF_FUZZED(89.73)), vec2((sqrt(abs(vec2(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, float(vec3(1.0, 0.0, 0.0))), 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))), 1.0))) * (injectionSwitch))[0], (sqrt(abs(vec2(1.0, 1.0))) * (injectionSwitch))[1]), bvec2(true, true))), 0.0, _GLF_ONE(1.0, injectionSwitch.y)), mat2(mat2(mat2(_GLF_IDENTITY(sqrt(abs(vec2(1.0, 1.0))) * (injectionSwitch), mix(vec2(_GLF_FUZZED(891.923), _GLF_FUZZED(89.73)), vec2((sqrt(abs(vec2(1.0, 1.0))) * (injectionSwitch))[_GLF_IDENTITY(0, int(int(0)))], (sqrt(abs(vec2(1.0, 1.0))) * (injectionSwitch))[1]), bvec2(true, true))), 0.0, _GLF_ONE(1.0, injectionSwitch.y))))))))[0], _GLF_IDENTITY(float(_GLF_IDENTITY(float((_GLF_IDENTITY(_GLF_IDENTITY(sqrt(abs(vec2(1.0, 1.0))), (true ? sqrt(abs(vec2(1.0, 1.0))) : _GLF_FUZZED(injectionSwitch))) * (injectionSwitch), vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(sqrt(abs(vec2(1.0, 1.0))) * (injectionSwitch), mix(vec2(_GLF_FUZZED(891.923), _GLF_FUZZED(89.73)), vec2((sqrt(abs(vec2(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, float(vec3(1.0, 0.0, 0.0))), 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))), 1.0))) * (injectionSwitch))[0], (sqrt(abs(vec2(1.0, 1.0))) * (injectionSwitch))[1]), bvec2(true, true))), 0.0, _GLF_ONE(1.0, injectionSwitch.y)), mat2(mat2(mat2(_GLF_IDENTITY(sqrt(abs(vec2(1.0, 1.0))) * (injectionSwitch), mix(vec2(_GLF_FUZZED(891.923), _GLF_FUZZED(89.73)), vec2((sqrt(abs(vec2(1.0, 1.0))) * (injectionSwitch))[_GLF_IDENTITY(0, int(int(0)))], (sqrt(abs(vec2(1.0, 1.0))) * (injectionSwitch))[1]), bvec2(true, true))), 0.0, _GLF_ONE(1.0, injectionSwitch.y))))))))[0]), min(float((_GLF_IDENTITY(_GLF_IDENTITY(sqrt(abs(vec2(1.0, 1.0))), (true ? sqrt(abs(vec2(1.0, 1.0))) : _GLF_FUZZED(injectionSwitch))) * (injectionSwitch), vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(sqrt(abs(vec2(1.0, 1.0))) * (injectionSwitch), mix(vec2(_GLF_FUZZED(891.923), _GLF_FUZZED(89.73)), vec2((sqrt(abs(vec2(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, float(vec3(1.0, 0.0, 0.0))), 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))), 1.0))) * (injectionSwitch))[0], (sqrt(abs(vec2(1.0, 1.0))) * (injectionSwitch))[1]), bvec2(true, true))), 0.0, _GLF_ONE(1.0, injectionSwitch.y)), mat2(mat2(mat2(_GLF_IDENTITY(sqrt(abs(vec2(1.0, 1.0))) * (injectionSwitch), mix(vec2(_GLF_FUZZED(891.923), _GLF_FUZZED(89.73)), vec2((sqrt(abs(vec2(1.0, 1.0))) * (injectionSwitch))[_GLF_IDENTITY(0, int(int(0)))], (sqrt(abs(vec2(1.0, 1.0))) * (injectionSwitch))[1]), bvec2(true, true))), 0.0, _GLF_ONE(1.0, injectionSwitch.y))))))))[0]), float((_GLF_IDENTITY(_GLF_IDENTITY(sqrt(abs(vec2(1.0, 1.0))), (true ? sqrt(abs(vec2(1.0, 1.0))) : _GLF_FUZZED(injectionSwitch))) * (injectionSwitch), vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(sqrt(abs(vec2(1.0, 1.0))) * (injectionSwitch), mix(vec2(_GLF_FUZZED(891.923), _GLF_FUZZED(89.73)), vec2((sqrt(abs(vec2(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, float(vec3(1.0, 0.0, 0.0))), 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))), 1.0))) * (injectionSwitch))[0], (sqrt(abs(vec2(1.0, 1.0))) * (injectionSwitch))[1]), bvec2(true, true))), 0.0, _GLF_ONE(1.0, injectionSwitch.y)), mat2(mat2(mat2(_GLF_IDENTITY(sqrt(abs(vec2(1.0, 1.0))) * (injectionSwitch), mix(vec2(_GLF_FUZZED(891.923), _GLF_FUZZED(89.73)), vec2((sqrt(abs(vec2(1.0, 1.0))) * (injectionSwitch))[_GLF_IDENTITY(0, int(int(0)))], (sqrt(abs(vec2(1.0, 1.0))) * (injectionSwitch))[1]), bvec2(true, true))), 0.0, _GLF_ONE(1.0, injectionSwitch.y))))))))[0])))), float(mat2(float(_GLF_IDENTITY(float((_GLF_IDENTITY(_GLF_IDENTITY(sqrt(abs(vec2(1.0, 1.0))), (true ? sqrt(abs(vec2(1.0, 1.0))) : _GLF_FUZZED(injectionSwitch))) * (injectionSwitch), vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(sqrt(abs(vec2(1.0, 1.0))) * (injectionSwitch), mix(vec2(_GLF_FUZZED(891.923), _GLF_FUZZED(89.73)), vec2((sqrt(abs(vec2(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, float(vec3(1.0, 0.0, 0.0))), 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))), 1.0))) * (injectionSwitch))[0], (sqrt(abs(vec2(1.0, 1.0))) * (injectionSwitch))[1]), bvec2(true, true))), 0.0, _GLF_ONE(1.0, injectionSwitch.y)), mat2(mat2(mat2(_GLF_IDENTITY(sqrt(abs(vec2(1.0, 1.0))) * (injectionSwitch), mix(vec2(_GLF_FUZZED(891.923), _GLF_FUZZED(89.73)), vec2((sqrt(abs(vec2(1.0, 1.0))) * (injectionSwitch))[_GLF_IDENTITY(0, int(int(0)))], (sqrt(abs(vec2(1.0, 1.0))) * (injectionSwitch))[1]), bvec2(true, true))), 0.0, _GLF_ONE(1.0, injectionSwitch.y))))))))[0]), min(float((_GLF_IDENTITY(_GLF_IDENTITY(sqrt(abs(vec2(1.0, 1.0))), (true ? sqrt(abs(vec2(1.0, 1.0))) : _GLF_FUZZED(injectionSwitch))) * (injectionSwitch), vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(sqrt(abs(vec2(1.0, 1.0))) * (injectionSwitch), mix(vec2(_GLF_FUZZED(891.923), _GLF_FUZZED(89.73)), vec2((sqrt(abs(vec2(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, float(vec3(1.0, 0.0, 0.0))), 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))), 1.0))) * (injectionSwitch))[0], (sqrt(abs(vec2(1.0, 1.0))) * (injectionSwitch))[1]), bvec2(true, true))), 0.0, _GLF_ONE(1.0, injectionSwitch.y)), mat2(mat2(mat2(_GLF_IDENTITY(sqrt(abs(vec2(1.0, 1.0))) * (injectionSwitch), mix(vec2(_GLF_FUZZED(891.923), _GLF_FUZZED(89.73)), vec2((sqrt(abs(vec2(1.0, 1.0))) * (injectionSwitch))[_GLF_IDENTITY(0, int(int(0)))], (sqrt(abs(vec2(1.0, 1.0))) * (injectionSwitch))[1]), bvec2(true, true))), 0.0, _GLF_ONE(1.0, injectionSwitch.y))))))))[0]), float((_GLF_IDENTITY(_GLF_IDENTITY(sqrt(abs(vec2(1.0, 1.0))), (true ? sqrt(abs(vec2(1.0, 1.0))) : _GLF_FUZZED(injectionSwitch))) * (injectionSwitch), vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(sqrt(abs(vec2(1.0, 1.0))) * (injectionSwitch), mix(vec2(_GLF_FUZZED(891.923), _GLF_FUZZED(89.73)), vec2((sqrt(abs(vec2(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, float(vec3(1.0, 0.0, 0.0))), 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))), 1.0))) * (injectionSwitch))[0], (sqrt(abs(vec2(1.0, 1.0))) * (injectionSwitch))[1]), bvec2(true, true))), 0.0, _GLF_ONE(1.0, injectionSwitch.y)), mat2(mat2(mat2(_GLF_IDENTITY(sqrt(abs(vec2(1.0, 1.0))) * (injectionSwitch), mix(vec2(_GLF_FUZZED(891.923), _GLF_FUZZED(89.73)), vec2((sqrt(abs(vec2(1.0, 1.0))) * (injectionSwitch))[_GLF_IDENTITY(0, int(int(0)))], (sqrt(abs(vec2(1.0, 1.0))) * (injectionSwitch))[1]), bvec2(true, true))), 0.0, _GLF_ONE(1.0, injectionSwitch.y))))))))[0])))), 0.0, 1.0, 1.0)))), _GLF_FUZZED(4049.5867)), vec2(_GLF_FUZZED(vec4(19.34, -3.1, 62.12, 96.92).s), (_GLF_IDENTITY(_GLF_IDENTITY(sqrt(abs(vec2(1.0, 1.0))), (true ? sqrt(abs(vec2(1.0, 1.0))) : _GLF_FUZZED(injectionSwitch))) * (injectionSwitch), vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(sqrt(abs(vec2(1.0, 1.0))) * (injectionSwitch), mix(vec2(_GLF_FUZZED(891.923), _GLF_FUZZED(89.73)), vec2((sqrt(abs(vec2(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, float(vec3(1.0, 0.0, 0.0))), 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))), 1.0))) * (injectionSwitch))[0], (sqrt(abs(vec2(1.0, 1.0))) * (injectionSwitch))[1]), bvec2(true, true))), 0.0, _GLF_ONE(1.0, injectionSwitch.y)), mat2(mat2(mat2(_GLF_IDENTITY(sqrt(abs(vec2(1.0, 1.0))) * (injectionSwitch), mix(vec2(_GLF_FUZZED(891.923), _GLF_FUZZED(89.73)), vec2((sqrt(abs(vec2(1.0, 1.0))) * (injectionSwitch))[_GLF_IDENTITY(0, int(int(0)))], (sqrt(abs(vec2(1.0, 1.0))) * (injectionSwitch))[1]), bvec2(true, true))), 0.0, _GLF_ONE(1.0, injectionSwitch.y))))))))[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(9.6)), bool(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) || false), true, false))))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-8940.2198))) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   barrier();
  }
 uvec3 GLF_merged2_0_2_47_2_1_12GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidworkgroup_id;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uvec2 GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid;
 GLF_merged3_0_2_47_2_1_16_3_1_11GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidnext_virtual_gidsubgroup_id.xy = GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid;
 GLF_merged2_0_2_47_2_1_12GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidworkgroup_id.xy = GLF_merged3_0_2_47_2_1_16_3_1_11GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidnext_virtual_gidsubgroup_id.xy;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-3.8) : injectionSwitch.y))), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-3.8) : injectionSwitch.y))))))))
    barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 GLF_merged3_0_2_47_2_1_16_3_1_11GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidnext_virtual_gidsubgroup_id.w = _GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))), clamp((_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))), (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))), (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))))), (false ? _GLF_FUZZED(128504u) : ~ (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))))));
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, mix(float(_GLF_FUZZED(211.336)), float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x), bool(true))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))))
    barrier();
   barrier();
  }
 _GLF_IDENTITY(GLF_merged3_0_1_4_1_1_11_2_1_14readsubgroup_idworkgroup_size.y = _GLF_IDENTITY(GLF_merged3_0_2_47_2_1_16_3_1_11GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidnext_virtual_gidsubgroup_id.w, min(GLF_merged3_0_2_47_2_1_16_3_1_11GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidnext_virtual_gidsubgroup_id.w, _GLF_IDENTITY(GLF_merged3_0_2_47_2_1_16_3_1_11GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidnext_virtual_gidsubgroup_id.w, (false ? _GLF_FUZZED(79404u) : GLF_merged3_0_2_47_2_1_16_3_1_11GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidnext_virtual_gidsubgroup_id.w)))), _GLF_IDENTITY((GLF_merged3_0_1_4_1_1_11_2_1_14readsubgroup_idworkgroup_size.y = GLF_merged3_0_2_47_2_1_16_3_1_11GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidnext_virtual_gidsubgroup_id.w) ^ 0u, (_GLF_IDENTITY((GLF_merged3_0_1_4_1_1_11_2_1_14readsubgroup_idworkgroup_size.y = GLF_merged3_0_2_47_2_1_16_3_1_11GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidnext_virtual_gidsubgroup_id.w) ^ 0u, ~ (~ ((GLF_merged3_0_1_4_1_1_11_2_1_14readsubgroup_idworkgroup_size.y = GLF_merged3_0_2_47_2_1_16_3_1_11GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidnext_virtual_gidsubgroup_id.w) ^ 0u)))) - 0u));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged2_0_2_47_2_1_12GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidworkgroup_id.xy.x = GLF_merged3_0_1_4_1_1_11_2_1_14readsubgroup_idworkgroup_size.y;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false)), bool(bvec4(_GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false)), (bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false))) && true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))) || (false))))), false, false)))), false || ((injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, (_GLF_IDENTITY((false) || false, ((false) || false) || false)) || false))))
      barrier();
     barrier();
    }
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(bvec3(_GLF_DEAD(false), true, false))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged3_0_1_4_1_1_11_2_1_14readsubgroup_idworkgroup_size.z = workgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, ~ (~ (_GLF_IDENTITY(gl_WorkGroupID.x, max(gl_WorkGroupID.x, gl_WorkGroupID.x)))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 GLF_merged2_0_2_47_2_1_12GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidworkgroup_id.z = workgroup_id;
 uint workgroup_base = GLF_merged3_0_1_4_1_1_11_2_1_14readsubgroup_idworkgroup_size.z * _GLF_IDENTITY(GLF_merged2_0_2_47_2_1_12GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidworkgroup_id.z, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_2_47_2_1_12GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidworkgroup_id, ~ (~ (GLF_merged2_0_2_47_2_1_12GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidworkgroup_id))), ~ (~ (GLF_merged2_0_2_47_2_1_12GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidworkgroup_id))).z, (false ? _GLF_FUZZED(72290u) : _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_2_47_2_1_12GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidworkgroup_id, ~ (~ (GLF_merged2_0_2_47_2_1_12GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidworkgroup_id))), ~ (~ (GLF_merged2_0_2_47_2_1_12GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidworkgroup_id))).z)), uint(uvec4(GLF_merged2_0_2_47_2_1_12GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidworkgroup_id.z, 1u, 1u, 1u)))) | (_GLF_IDENTITY(GLF_merged2_0_2_47_2_1_12GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidworkgroup_id.z, clamp(GLF_merged2_0_2_47_2_1_12GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidworkgroup_id.z, GLF_merged2_0_2_47_2_1_12GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidworkgroup_id.z, _GLF_IDENTITY(GLF_merged2_0_2_47_2_1_12GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidworkgroup_id, min(_GLF_IDENTITY(GLF_merged2_0_2_47_2_1_12GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidworkgroup_id, min(GLF_merged2_0_2_47_2_1_12GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidworkgroup_id, GLF_merged2_0_2_47_2_1_12GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidworkgroup_id)), GLF_merged2_0_2_47_2_1_12GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidworkgroup_id)).z))), (false ? _GLF_FUZZED(subgroup_id) : (_GLF_IDENTITY(GLF_merged2_0_2_47_2_1_12GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidworkgroup_id, clamp(GLF_merged2_0_2_47_2_1_12GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidworkgroup_id, GLF_merged2_0_2_47_2_1_12GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidworkgroup_id, _GLF_IDENTITY(GLF_merged2_0_2_47_2_1_12GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidworkgroup_id, uvec3(GLF_merged2_0_2_47_2_1_12GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidworkgroup_id[0], _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_2_47_2_1_12GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidworkgroup_id, ~ (_GLF_IDENTITY(~ (GLF_merged2_0_2_47_2_1_12GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidworkgroup_id), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(~ (GLF_merged2_0_2_47_2_1_12GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidworkgroup_id), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(~ (GLF_merged2_0_2_47_2_1_12GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidworkgroup_id), min(~ (GLF_merged2_0_2_47_2_1_12GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidworkgroup_id), ~ (GLF_merged2_0_2_47_2_1_12GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidworkgroup_id))) : _GLF_FUZZED(GLF_merged3_0_1_4_1_1_11_2_1_14readsubgroup_idworkgroup_size))), 1u), (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(~ (GLF_merged2_0_2_47_2_1_12GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidworkgroup_id), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(~ (GLF_merged2_0_2_47_2_1_12GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidworkgroup_id), min(~ (GLF_merged2_0_2_47_2_1_12GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidworkgroup_id), ~ (GLF_merged2_0_2_47_2_1_12GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidworkgroup_id))) : _GLF_FUZZED(GLF_merged3_0_1_4_1_1_11_2_1_14readsubgroup_idworkgroup_size))), 1u), (uvec4(_GLF_IDENTITY(~ (GLF_merged2_0_2_47_2_1_12GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidworkgroup_id), (_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(~ (GLF_merged2_0_2_47_2_1_12GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidworkgroup_id), min(~ (GLF_merged2_0_2_47_2_1_12GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidworkgroup_id), ~ (GLF_merged2_0_2_47_2_1_12GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidworkgroup_id))) : _GLF_FUZZED(GLF_merged3_0_1_4_1_1_11_2_1_14readsubgroup_idworkgroup_size))), 1u)) | uvec4(0u, 0u, 0u, 0u))) / uvec4(1u, 1u, 1u, 1u))), min(uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(~ (GLF_merged2_0_2_47_2_1_12GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidworkgroup_id), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)) ? _GLF_IDENTITY(~ (GLF_merged2_0_2_47_2_1_12GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidworkgroup_id), min(~ (GLF_merged2_0_2_47_2_1_12GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidworkgroup_id), ~ (GLF_merged2_0_2_47_2_1_12GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidworkgroup_id))) : _GLF_FUZZED(GLF_merged3_0_1_4_1_1_11_2_1_14readsubgroup_idworkgroup_size))), 1u), (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(~ (GLF_merged2_0_2_47_2_1_12GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidworkgroup_id), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(~ _GLF_IDENTITY((GLF_merged2_0_2_47_2_1_12GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidworkgroup_id), clamp((GLF_merged2_0_2_47_2_1_12GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidworkgroup_id), (GLF_merged2_0_2_47_2_1_12GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidworkgroup_id), _GLF_IDENTITY((GLF_merged2_0_2_47_2_1_12GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidworkgroup_id), ((GLF_merged2_0_2_47_2_1_12GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidworkgroup_id)) | uvec3(0u, 0u, 0u)))), min(~ (GLF_merged2_0_2_47_2_1_12GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidworkgroup_id), ~ (GLF_merged2_0_2_47_2_1_12GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidworkgroup_id))) : _GLF_FUZZED(GLF_merged3_0_1_4_1_1_11_2_1_14readsubgroup_idworkgroup_size))), 1u), (uvec4(_GLF_IDENTITY(~ (GLF_merged2_0_2_47_2_1_12GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidworkgroup_id), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(~ (GLF_merged2_0_2_47_2_1_12GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidworkgroup_id), min(~ (GLF_merged2_0_2_47_2_1_12GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidworkgroup_id), ~ (GLF_merged2_0_2_47_2_1_12GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidworkgroup_id))) : _GLF_FUZZED(GLF_merged3_0_1_4_1_1_11_2_1_14readsubgroup_idworkgroup_size))), 1u)) | uvec4(0u, 0u, 0u, 0u))) / uvec4(1u, 1u, 1u, 1u))), uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(~ (GLF_merged2_0_2_47_2_1_12GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidworkgroup_id), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(~ (GLF_merged2_0_2_47_2_1_12GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidworkgroup_id), min(~ (GLF_merged2_0_2_47_2_1_12GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidworkgroup_id), ~ (GLF_merged2_0_2_47_2_1_12GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidworkgroup_id))) : _GLF_FUZZED(GLF_merged3_0_1_4_1_1_11_2_1_14readsubgroup_idworkgroup_size))), 1u), (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(~ (GLF_merged2_0_2_47_2_1_12GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidworkgroup_id), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(~ (GLF_merged2_0_2_47_2_1_12GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidworkgroup_id), min(~ (GLF_merged2_0_2_47_2_1_12GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidworkgroup_id), _GLF_IDENTITY(~ (GLF_merged2_0_2_47_2_1_12GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidworkgroup_id), (true ? ~ (GLF_merged2_0_2_47_2_1_12GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidworkgroup_id) : _GLF_FUZZED(GLF_merged3_0_2_47_2_1_16_3_1_11GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidnext_virtual_gidsubgroup_id.qtq))))) : _GLF_FUZZED(GLF_merged3_0_1_4_1_1_11_2_1_14readsubgroup_idworkgroup_size))), 1u), (uvec4(_GLF_IDENTITY(~ (GLF_merged2_0_2_47_2_1_12GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidworkgroup_id), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(~ (GLF_merged2_0_2_47_2_1_12GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidworkgroup_id), min(~ (GLF_merged2_0_2_47_2_1_12GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidworkgroup_id), ~ (GLF_merged2_0_2_47_2_1_12GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidworkgroup_id))) : _GLF_FUZZED(GLF_merged3_0_1_4_1_1_11_2_1_14readsubgroup_idworkgroup_size))), 1u)) | uvec4(0u, 0u, 0u, 0u))) / uvec4(1u, 1u, 1u, 1u))))))))[1], (GLF_merged2_0_2_47_2_1_12GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidworkgroup_id[1]) + 0u), GLF_merged2_0_2_47_2_1_12GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidworkgroup_id[2])))).z) | (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_2_47_2_1_12GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidworkgroup_id.z, clamp(_GLF_IDENTITY(GLF_merged2_0_2_47_2_1_12GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidworkgroup_id.z, (GLF_merged2_0_2_47_2_1_12GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidworkgroup_id.z) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_2_47_2_1_12GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidworkgroup_id.z, 0u + (GLF_merged2_0_2_47_2_1_12GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidworkgroup_id.z)), clamp(GLF_merged2_0_2_47_2_1_12GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidworkgroup_id.z, GLF_merged2_0_2_47_2_1_12GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidworkgroup_id.z, GLF_merged2_0_2_47_2_1_12GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidworkgroup_id.z)), GLF_merged2_0_2_47_2_1_12GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidworkgroup_id.z)), clamp(GLF_merged2_0_2_47_2_1_12GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidworkgroup_id.z, GLF_merged2_0_2_47_2_1_12GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidworkgroup_id.z, GLF_merged2_0_2_47_2_1_12GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidworkgroup_id.z))))));
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_2_47_2_1_12GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidworkgroup_id.xy, (_GLF_IDENTITY(GLF_merged2_0_2_47_2_1_12GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidworkgroup_id.xy, clamp(_GLF_IDENTITY(GLF_merged2_0_2_47_2_1_12GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidworkgroup_id.xy, (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_2_47_2_1_12GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidworkgroup_id, uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(GLF_merged2_0_2_47_2_1_12GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidworkgroup_id, uvec3(0u, 0u, 0u) ^ (GLF_merged2_0_2_47_2_1_12GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidworkgroup_id)))).xy, (_GLF_IDENTITY(GLF_merged2_0_2_47_2_1_12GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidworkgroup_id.xy, min(GLF_merged2_0_2_47_2_1_12GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidworkgroup_id.xy, GLF_merged2_0_2_47_2_1_12GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidworkgroup_id.xy))) | (GLF_merged2_0_2_47_2_1_12GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidworkgroup_id.xy)), (GLF_merged2_0_2_47_2_1_12GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidworkgroup_id.xy) + uvec2(0u, 0u)) : _GLF_FUZZED(GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid))), GLF_merged2_0_2_47_2_1_12GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidworkgroup_id.xy, GLF_merged2_0_2_47_2_1_12GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidworkgroup_id.xy))) / uvec2(1u, 1u)).x, max(GLF_merged2_0_2_47_2_1_12GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidworkgroup_id.xy.x, GLF_merged2_0_2_47_2_1_12GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidworkgroup_id.xy.x)) * _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u) + subgroup_local_id, max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + GLF_merged2_0_2_47_2_1_12GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidworkgroup_id.xy.x * subgroup_size + subgroup_local_id, min(workgroup_base + GLF_merged2_0_2_47_2_1_12GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidworkgroup_id.xy.x * subgroup_size + subgroup_local_id, workgroup_base + GLF_merged2_0_2_47_2_1_12GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidworkgroup_id.xy.x * subgroup_size + subgroup_local_id)), (_GLF_IDENTITY(workgroup_base + GLF_merged2_0_2_47_2_1_12GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidworkgroup_id.xy.x * subgroup_size + subgroup_local_id, min(workgroup_base + GLF_merged2_0_2_47_2_1_12GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidworkgroup_id.xy.x * subgroup_size + _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), workgroup_base + _GLF_IDENTITY(GLF_merged2_0_2_47_2_1_12GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidworkgroup_id, uvec3(0u, 0u, 0u) + (GLF_merged2_0_2_47_2_1_12GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidworkgroup_id)).xy.x * subgroup_size + subgroup_local_id))) ^ _GLF_IDENTITY(0u, (0u) - 0u)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(GLF_merged2_0_2_47_2_1_12GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidworkgroup_id.xy, (GLF_merged2_0_2_47_2_1_12GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidworkgroup_id.xy) / ((uvec2(0u, 0u) ^ uvec2(1u, 1u)) & uvec2(1u, 1u))).x * subgroup_size + subgroup_local_id, (true ? _GLF_IDENTITY(workgroup_base + GLF_merged2_0_2_47_2_1_12GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidworkgroup_id.xy.x * subgroup_size + subgroup_local_id, (_GLF_IDENTITY(workgroup_base + GLF_merged2_0_2_47_2_1_12GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidworkgroup_id.xy.x * subgroup_size, (workgroup_base + GLF_merged2_0_2_47_2_1_12GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidworkgroup_id.xy.x * subgroup_size) >> 0u) + subgroup_local_id) | (workgroup_base + GLF_merged2_0_2_47_2_1_12GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidworkgroup_id.xy.x * subgroup_size + subgroup_local_id)) : _GLF_FUZZED(subgroup_local_id))), 0u + (workgroup_base + GLF_merged2_0_2_47_2_1_12GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidworkgroup_id.xy.x * _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) ^ 0u))), min(subgroup_size, subgroup_size))) >> _GLF_IDENTITY(0u, (0u) + 0u)), 1u, 1u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x))))), uvec4(0u, 0u, 0u, 0u) | (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(min(subgroup_size, subgroup_size), _GLF_IDENTITY(uint(uvec4(min(subgroup_size, subgroup_size), (0u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), ~ (~ (uint(5u))))) ^ 0u))), 0u, 0u)), 0u | _GLF_IDENTITY((uint(uvec4(min(subgroup_size, subgroup_size), (0u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (uint(5u)) ^ 0u))), 0u, 0u))), ~ (~ ((uint(uvec4(min(subgroup_size, subgroup_size), (0u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (uint(5u)) ^ 0u))), 0u, 0u)))))))))) >> 0u), 1u, 1u, uint(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), injectionSwitch.x))), max(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) >> 0u), 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(uvec4(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) >> 0u), 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec4(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))), min((_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))), (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))))) >> _GLF_IDENTITY(0u, (0u) / 1u)), 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), uvec4(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), subgroup_size))) >> 0u), 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))) + subgroup_local_id)), 0u | (_GLF_IDENTITY(workgroup_base + GLF_merged2_0_2_47_2_1_12GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidworkgroup_id.xy.x * subgroup_size + subgroup_local_id, 0u + (workgroup_base + GLF_merged2_0_2_47_2_1_12GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidworkgroup_id.xy.x * _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) >> _GLF_IDENTITY(0u, (0u) + 0u)), 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec4(0u, 0u, 0u, 0u) | (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) >> 0u), 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) >> 0u), 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(uvec4(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), min(subgroup_size, subgroup_size))) >> 0u), 1u, 1u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) >> 0u)), uvec4(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) >> _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) ^ 0u, (true ? (0u) ^ 0u : _GLF_FUZZED(workgroup_base)))), _GLF_IDENTITY(0u, (0u) - 0u), 0u))) / 1u)), 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), uvec4(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u))), min(subgroup_size, subgroup_size))) >> 0u), 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))) + subgroup_local_id))))));
 GLF_merged2_0_2_47_2_1_12GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidworkgroup_id.xy.y = virtual_gid;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + GLF_merged2_0_2_47_2_1_12GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidworkgroup_id.xy.x * subgroup_size + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) - 0u);
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), false || ((false))))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_47_2_1_16_3_1_11GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidnext_virtual_gidsubgroup_id.z = next_virtual_gid, (GLF_merged3_0_2_47_2_1_16_3_1_11GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidnext_virtual_gidsubgroup_id.z = next_virtual_gid) / 1u), (_GLF_IDENTITY(GLF_merged3_0_2_47_2_1_16_3_1_11GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidnext_virtual_gidsubgroup_id.z = next_virtual_gid, (GLF_merged3_0_2_47_2_1_16_3_1_11GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidnext_virtual_gidsubgroup_id.z = next_virtual_gid) / 1u)) ^ 0u);
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bool(false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(3.8), (_GLF_FUZZED(3.8)) / 1.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-0.1)), bvec2(true, false))))).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(3.8, (false ? _GLF_FUZZED(-869.721) : 3.8))), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-0.1)), bvec2(true, false))))).x > injectionSwitch.y)) && true))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, sin(0.0), 1.0, 1.0, 0.0, log(1.0), 1.0))).y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), false, false), false)))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), false, false), false))))) || false))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 atomicStore(buf[_GLF_IDENTITY(GLF_merged3_0_2_47_2_1_16_3_1_11GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidnext_virtual_gidsubgroup_id, (true ? GLF_merged3_0_2_47_2_1_16_3_1_11GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidnext_virtual_gidsubgroup_id : _GLF_FUZZED(max(GLF_merged3_0_2_47_2_1_16_3_1_11GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidnext_virtual_gidsubgroup_id, uvec4(109009u, 97414u, 143743u, 130513u))))).z], uint(1), 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(98364) : 4)), (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) ^ 0), (4) << 0)) | (_GLF_IDENTITY(4, (4) | (4)))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 uint read = atomicLoad(buf[_GLF_IDENTITY(GLF_merged2_0_2_47_2_1_12GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidworkgroup_id.xy.y, 0u | (GLF_merged2_0_2_47_2_1_12GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidworkgroup_id.xy.y))], 4, 64, 0);
 GLF_merged3_0_1_4_1_1_11_2_1_14readsubgroup_idworkgroup_size.x = _GLF_IDENTITY(read, (read) - 0u);
 if(_GLF_DEAD(false))
  barrier();
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x > injectionSwitch.y) || false)), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x > injectionSwitch.y) || false)), true), bvec2(bvec2(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x > injectionSwitch.y) || false)), true)))))))))
    barrier();
   atomicStore(checker[_GLF_IDENTITY(GLF_merged2_0_2_47_2_1_12GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidworkgroup_id.xy.y, (_GLF_IDENTITY(GLF_merged2_0_2_47_2_1_12GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidworkgroup_id.xy.y, uint(uint(GLF_merged2_0_2_47_2_1_12GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidworkgroup_id.xy.y)))) >> 0u)], GLF_merged3_0_1_4_1_1_11_2_1_14readsubgroup_idworkgroup_size.x, 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(5573.4549, -115.811)) : injectionSwitch)), vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))), injectionSwitch[1])))).y)), _GLF_IDENTITY(true, (true) || false) && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, _GLF_IDENTITY(dot(vec4(1.0, sqrt(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, sqrt(0.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)))))), (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(_GLF_IDENTITY(false, true && (false)));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), false || (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0))], injectionSwitch[1]))) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(checker[GLF_merged2_0_2_47_2_1_12GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidworkgroup_id.xy.y], GLF_merged3_0_1_4_1_1_11_2_1_14readsubgroup_idworkgroup_size.x, 4, _GLF_IDENTITY(64, (64) | (64)), 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), injectionSwitch)).x > injectionSwitch.y, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), false)))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-52.93) : injectionSwitch.y)))), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-52.93) : injectionSwitch.y)), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), (false ? _GLF_FUZZED(-52.93) : injectionSwitch.y))) || false)))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-72.34) : _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-4110.5952)), bool(false))), 0.0)), 1.0, 0.0, 0.0))))) > injectionSwitch.y))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))), (injectionSwitch.x > injectionSwitch.y) && _GLF_IDENTITY(true, ! (! (true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) && true), true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) && true))))))), (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false)))) && true)))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))), false)))))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (_GLF_IDENTITY(false, false || (false))))))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
          barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * _GLF_IDENTITY(1.0, max(1.0, 1.0))), (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x) * 1.0), injectionSwitch.x))) * cos(sin(0.0))) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-6669.8293, -489.593)) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)) : _GLF_FUZZED(vec2(-20.66, 4.2)))).y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), (bool(bvec2(_GLF_DEAD(false), false))) || false)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) / 1.0) > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((- -7381.8845))), float(injectionSwitch.y), bool(true)))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, false, false)), _GLF_IDENTITY(false, (false) || false) || (bool(bvec4(_GLF_DEAD(false), false, false, false))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   subgroupAll(true);
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), max(_GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), (false ? _GLF_FUZZED(vec2(7.4, 6.4)) : (injectionSwitch) / vec2(1.0, 1.0))), (injectionSwitch) / vec2(1.0, 1.0)))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
