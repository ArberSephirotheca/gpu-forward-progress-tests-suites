#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, ~ (~ (gl_WorkGroupID))).x, clamp(gl_WorkGroupID.x, _GLF_IDENTITY(gl_WorkGroupID.x, max(gl_WorkGroupID.x, gl_WorkGroupID.x)), _GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY((gl_WorkGroupID.x), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((subgroup_local_id --)) : (gl_WorkGroupID.x))) | (gl_WorkGroupID.x))));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (false) || false)) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, true)), (bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (! (bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), (bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, (true ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x : _GLF_FUZZED(atan(-385.092, 9.5)))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)) > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false))))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, max(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)))) + subgroup_local_id, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, 1u * (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id)))), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / 1u, (_GLF_IDENTITY((0u) / _GLF_IDENTITY(1u, (1u) >> 0u), _GLF_IDENTITY(clamp((0u) / _GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, max(1u, 1u)))), (0u) / 1u, (0u) / 1u), _GLF_IDENTITY(uint(uvec2(clamp((0u) / 1u, (0u) / 1u, (0u) / 1u), 1u)), (uint(uvec2(clamp((0u) / 1u, (0u) / 1u, _GLF_IDENTITY((0u) / 1u, min((0u) / 1u, _GLF_IDENTITY((0u) / 1u, ((0u) / 1u) | ((0u) / 1u))))), 1u))) | 0u)))) ^ 0u)))))) + (1u ^ 1u)) | (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec3(_GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bool(false))))), ! (! (! (! (_GLF_IDENTITY(false, bool(bool(false)))))))), _GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_IDENTITY(false, false || (false))))))), false || (bool(bvec2(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bool(false))))), ! (! (! (! (_GLF_IDENTITY(false, bool(bool(false)))))))), _GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_IDENTITY(false, false || (false)))))))))))))
  barrier();
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) - 0u))) + ((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u, (0u) | (0u)) | _GLF_IDENTITY((subgroup_size), (false ? _GLF_FUZZED(virtual_gid) : (subgroup_size)))), _GLF_IDENTITY((true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) << uint(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x), 0.0 + (_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0))))) : _GLF_FUZZED(workgroup_id)), ((true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), (subgroup_size) << uint(_GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(workgroup_id))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))));
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false)))) || false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint read = atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(0, max(0, 0)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / cos(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(mat3x2(0.0, 0.0, length(0.0), 0.0, 0.0, 1.0))), _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-9.4) : 0.0)))))))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-2.5)), float(injectionSwitch.y), bool(true))))))), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(0.0, max(0.0, 0.0))), vec4(0.0, 1.0, 1.0, 1.0)), min(dot(vec4(1.0, 0.0, _GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) + 0.0), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x), 0.0), vec4(0.0, 1.0, 1.0, 1.0)), dot(vec4(1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-4943.5774) : _GLF_IDENTITY(0.0, min(0.0, 0.0)))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0), _GLF_IDENTITY(vec4(0.0, 1.0, 1.0, 1.0), clamp(vec4(0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x3(1.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(85.11))), 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), mat2x3(mat2x3(mat2x3(1.0, 0.0, 0.0, 1.0, 1.0, 1.0))))))), vec4(0.0, 1.0, 1.0, 1.0), _GLF_IDENTITY(vec4(0.0, 1.0, 1.0, 1.0), max(vec4(0.0, 1.0, 1.0, 1.0), vec4(0.0, 1.0, 1.0, 1.0)))))))), dot(vec4(1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(mat3x4(0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(sign(length(vec3(-9576.4168, -5.0, 5632.7937)))))), 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(0.0, _GLF_IDENTITY(max(0.0, 0.0), (true ? max(0.0, 0.0) : _GLF_FUZZED(length(injectionSwitch))))), 0.0)), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, sin(0.0)), vec4(0.0, 0.0, cos(0.0), 0.0)), dot(vec4(0.0, 0.0, 1.0, sin(0.0)), vec4(0.0, 0.0, cos(0.0), 0.0))) * (_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(determinant(mat4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 1.0, 1.0, 1.0, 0.0, round(length(normalize(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), min(vec3(1.0, 1.0, 1.0), _GLF_IDENTITY(vec3(1.0, 1.0, 1.0), min(vec3(1.0, 1.0, 1.0), vec3(1.0, 1.0, 1.0)))))))), 0.0, 0.0, 1.0)), mix(float(_GLF_IDENTITY(determinant(mat4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 1.0, 1.0, 1.0, 0.0, round(length(normalize(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), min(vec3(1.0, 1.0, 1.0), _GLF_IDENTITY(vec3(1.0, 1.0, 1.0), min(vec3(1.0, 1.0, 1.0), vec3(1.0, 1.0, 1.0)))))))), 0.0, 0.0, 1.0)), min(determinant(mat4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 1.0, 1.0, 1.0, 0.0, round(length(normalize(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), min(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), min(vec3(1.0, 1.0, 1.0), _GLF_IDENTITY(vec3(1.0, 1.0, 1.0), mix(vec3(_GLF_FUZZED(775.527), _GLF_FUZZED(9.0), _GLF_FUZZED(0.8)), vec3((vec3(1.0, 1.0, 1.0))[0], (vec3(1.0, 1.0, 1.0))[1], (vec3(1.0, 1.0, 1.0))[2]), bvec3(true, true, true))))), _GLF_IDENTITY(vec3(1.0, 1.0, 1.0), min(vec3(1.0, 1.0, 1.0), vec3(1.0, 1.0, 1.0)))))))), 0.0, 0.0, 1.0)), determinant(mat4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 1.0, 1.0, 1.0, 0.0, round(length(normalize(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), min(vec3(1.0, 1.0, 1.0), _GLF_IDENTITY(vec3(1.0, 1.0, 1.0), min(vec3(1.0, 1.0, 1.0), vec3(1.0, 1.0, 1.0)))))))), 0.0, 0.0, 1.0))))), float(_GLF_FUZZED(float(false))), bool(false))), sin(0.0), 1.0)), (float(_GLF_IDENTITY(vec4(_GLF_ZERO(0.0, injectionSwitch.x), determinant(mat4(1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(8.2)), bool(false))))), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0)), sin(0.0), 1.0), max(vec4(_GLF_ZERO(0.0, injectionSwitch.x), determinant(mat4(1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(8.2)), bool(false))))), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0)), sin(0.0), 1.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), determinant(mat4(1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(8.2)), bool(false))))), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0)), sin(0.0), 1.0))))) * 1.0)), 0.0), vec4(0.0, 1.0, 1.0, 1.0))), 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, float(mat2x3(1.0, 1.0, 0.0, abs(1.0), length(vec3(0.0, 0.0, 0.0)), 0.0))), _GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, clamp(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x))), round(length(normalize(1.0))), 0.0, 1.0))), clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(0.0, max(0.0, 0.0))), vec4(0.0, 1.0, 1.0, 1.0)), min(dot(vec4(1.0, 0.0, _GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) + 0.0), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x), 0.0), vec4(0.0, 1.0, 1.0, 1.0)), dot(vec4(1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-4943.5774) : _GLF_IDENTITY(0.0, min(0.0, 0.0)))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0), _GLF_IDENTITY(vec4(0.0, 1.0, 1.0, 1.0), clamp(vec4(0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x3(1.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(85.11))), 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), mat2x3(mat2x3(mat2x3(1.0, 0.0, 0.0, 1.0, 1.0, 1.0))))))), vec4(0.0, 1.0, 1.0, 1.0), _GLF_IDENTITY(vec4(0.0, 1.0, 1.0, 1.0), max(vec4(0.0, 1.0, 1.0, 1.0), vec4(0.0, 1.0, 1.0, 1.0)))))))), dot(vec4(1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(mat3x4(0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(sign(length(vec3(-9576.4168, -5.0, 5632.7937)))))), 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(0.0, _GLF_IDENTITY(max(0.0, 0.0), (true ? max(0.0, 0.0) : _GLF_FUZZED(length(injectionSwitch))))), 0.0)), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, sin(0.0)), vec4(0.0, 0.0, cos(0.0), 0.0)), dot(vec4(0.0, 0.0, 1.0, sin(0.0)), vec4(0.0, 0.0, cos(0.0), 0.0))) * (_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(determinant(mat4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 1.0, 1.0, 1.0, 0.0, round(length(normalize(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), min(vec3(1.0, 1.0, 1.0), _GLF_IDENTITY(vec3(1.0, 1.0, 1.0), min(vec3(1.0, 1.0, 1.0), vec3(1.0, 1.0, 1.0)))))))), 0.0, 0.0, 1.0)), mix(float(_GLF_IDENTITY(determinant(mat4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 1.0, 1.0, 1.0, 0.0, round(length(normalize(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), min(vec3(1.0, 1.0, 1.0), _GLF_IDENTITY(vec3(1.0, 1.0, 1.0), min(vec3(1.0, 1.0, 1.0), vec3(1.0, 1.0, 1.0)))))))), 0.0, 0.0, 1.0)), min(determinant(mat4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 1.0, 1.0, 1.0, 0.0, round(length(normalize(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), min(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), min(vec3(1.0, 1.0, 1.0), _GLF_IDENTITY(vec3(1.0, 1.0, 1.0), mix(vec3(_GLF_FUZZED(775.527), _GLF_FUZZED(9.0), _GLF_FUZZED(0.8)), vec3((vec3(1.0, 1.0, 1.0))[0], (vec3(1.0, 1.0, 1.0))[1], (vec3(1.0, 1.0, 1.0))[2]), bvec3(true, true, true))))), _GLF_IDENTITY(vec3(1.0, 1.0, 1.0), min(vec3(1.0, 1.0, 1.0), vec3(1.0, 1.0, 1.0)))))))), 0.0, 0.0, 1.0)), determinant(mat4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 1.0, 1.0, 1.0, 0.0, round(length(normalize(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), min(vec3(1.0, 1.0, 1.0), _GLF_IDENTITY(vec3(1.0, 1.0, 1.0), min(vec3(1.0, 1.0, 1.0), vec3(1.0, 1.0, 1.0)))))))), 0.0, 0.0, 1.0))))), float(_GLF_FUZZED(float(false))), bool(false))), sin(0.0), 1.0)), (float(_GLF_IDENTITY(vec4(_GLF_ZERO(0.0, injectionSwitch.x), determinant(mat4(1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(8.2)), bool(false))))), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0)), sin(0.0), 1.0), max(vec4(_GLF_ZERO(0.0, injectionSwitch.x), determinant(mat4(1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(8.2)), bool(false))))), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0)), sin(0.0), 1.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), determinant(mat4(1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(8.2)), bool(false))))), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0)), sin(0.0), 1.0))))) * 1.0)), 0.0), vec4(0.0, 1.0, 1.0, 1.0))), 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, float(mat2x3(1.0, 1.0, 0.0, abs(1.0), length(vec3(0.0, 0.0, 0.0)), 0.0))), _GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, clamp(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x))), round(length(normalize(1.0))), 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(0.0, max(0.0, 0.0))), vec4(0.0, 1.0, 1.0, 1.0)), min(dot(vec4(1.0, 0.0, _GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) + 0.0), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x), 0.0), vec4(0.0, 1.0, 1.0, 1.0)), dot(vec4(1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-4943.5774) : _GLF_IDENTITY(0.0, min(0.0, 0.0)))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0), _GLF_IDENTITY(vec4(0.0, 1.0, 1.0, 1.0), clamp(vec4(0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x3(1.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(85.11))), 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), mat2x3(mat2x3(mat2x3(1.0, 0.0, 0.0, 1.0, 1.0, 1.0))))))), vec4(0.0, 1.0, 1.0, 1.0), _GLF_IDENTITY(vec4(0.0, 1.0, 1.0, 1.0), max(vec4(0.0, 1.0, 1.0, 1.0), vec4(0.0, 1.0, 1.0, 1.0)))))))), dot(vec4(1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(mat3x4(0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(sign(length(vec3(-9576.4168, -5.0, 5632.7937)))))), 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(0.0, _GLF_IDENTITY(max(0.0, 0.0), (true ? max(0.0, 0.0) : _GLF_FUZZED(length(injectionSwitch))))), 0.0)), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, sin(0.0)), vec4(0.0, 0.0, cos(0.0), 0.0)), dot(vec4(0.0, 0.0, 1.0, sin(0.0)), vec4(0.0, 0.0, cos(0.0), 0.0))) * (_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(determinant(mat4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 1.0, 1.0, 1.0, 0.0, round(length(normalize(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), min(vec3(1.0, 1.0, 1.0), _GLF_IDENTITY(vec3(1.0, 1.0, 1.0), min(vec3(1.0, 1.0, 1.0), vec3(1.0, 1.0, 1.0)))))))), 0.0, 0.0, 1.0)), mix(float(_GLF_IDENTITY(determinant(mat4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 1.0, 1.0, 1.0, 0.0, round(length(normalize(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), min(vec3(1.0, 1.0, 1.0), _GLF_IDENTITY(vec3(1.0, 1.0, 1.0), min(vec3(1.0, 1.0, 1.0), vec3(1.0, 1.0, 1.0)))))))), 0.0, 0.0, 1.0)), min(determinant(mat4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 1.0, 1.0, 1.0, 0.0, round(length(normalize(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), min(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), min(vec3(1.0, 1.0, 1.0), _GLF_IDENTITY(vec3(1.0, 1.0, 1.0), mix(vec3(_GLF_FUZZED(775.527), _GLF_FUZZED(9.0), _GLF_FUZZED(0.8)), vec3((vec3(1.0, 1.0, 1.0))[0], (vec3(1.0, 1.0, 1.0))[1], (vec3(1.0, 1.0, 1.0))[2]), bvec3(true, true, true))))), _GLF_IDENTITY(vec3(1.0, 1.0, 1.0), min(vec3(1.0, 1.0, 1.0), vec3(1.0, 1.0, 1.0)))))))), 0.0, 0.0, 1.0)), determinant(mat4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 1.0, 1.0, 1.0, 0.0, round(length(normalize(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), min(vec3(1.0, 1.0, 1.0), _GLF_IDENTITY(vec3(1.0, 1.0, 1.0), min(vec3(1.0, 1.0, 1.0), vec3(1.0, 1.0, 1.0)))))))), 0.0, 0.0, 1.0))))), float(_GLF_FUZZED(float(false))), bool(false))), sin(0.0), 1.0)), (float(_GLF_IDENTITY(vec4(_GLF_ZERO(0.0, injectionSwitch.x), determinant(mat4(1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(8.2)), bool(false))))), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0)), sin(0.0), 1.0), max(vec4(_GLF_ZERO(0.0, injectionSwitch.x), determinant(mat4(1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(8.2)), bool(false))))), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0)), sin(0.0), 1.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), determinant(mat4(1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(8.2)), bool(false))))), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0)), sin(0.0), 1.0))))) * 1.0)), 0.0), vec4(0.0, 1.0, 1.0, 1.0))), 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, float(mat2x3(1.0, 1.0, 0.0, abs(1.0), length(vec3(0.0, 0.0, 0.0)), 0.0))), _GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, clamp(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x))), round(length(normalize(1.0))), 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(0.0, max(0.0, 0.0))), vec4(0.0, 1.0, 1.0, 1.0)), min(dot(vec4(1.0, 0.0, _GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) + 0.0), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x), 0.0), vec4(0.0, 1.0, 1.0, 1.0)), dot(vec4(1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-4943.5774) : _GLF_IDENTITY(0.0, min(0.0, 0.0)))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0), _GLF_IDENTITY(vec4(0.0, 1.0, 1.0, 1.0), clamp(vec4(0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x3(1.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(85.11))), 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), mat2x3(mat2x3(mat2x3(1.0, 0.0, 0.0, 1.0, 1.0, 1.0))))))), vec4(0.0, 1.0, 1.0, 1.0), _GLF_IDENTITY(vec4(0.0, 1.0, 1.0, 1.0), max(vec4(0.0, 1.0, 1.0, 1.0), vec4(0.0, 1.0, 1.0, 1.0)))))))), dot(vec4(1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(mat3x4(0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(sign(length(vec3(-9576.4168, -5.0, 5632.7937)))))), 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(0.0, _GLF_IDENTITY(max(0.0, 0.0), (true ? max(0.0, 0.0) : _GLF_FUZZED(length(injectionSwitch))))), 0.0)), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, sin(0.0)), vec4(0.0, 0.0, cos(0.0), 0.0)), dot(vec4(0.0, 0.0, 1.0, sin(0.0)), vec4(0.0, 0.0, cos(0.0), 0.0))) * (_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(determinant(mat4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 1.0, 1.0, 1.0, 0.0, round(length(normalize(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), min(vec3(1.0, 1.0, 1.0), _GLF_IDENTITY(vec3(1.0, 1.0, 1.0), min(vec3(1.0, 1.0, 1.0), vec3(1.0, 1.0, 1.0)))))))), 0.0, 0.0, 1.0)), mix(float(_GLF_IDENTITY(determinant(mat4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 1.0, 1.0, 1.0, 0.0, round(length(normalize(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), min(vec3(1.0, 1.0, 1.0), _GLF_IDENTITY(vec3(1.0, 1.0, 1.0), min(vec3(1.0, 1.0, 1.0), vec3(1.0, 1.0, 1.0)))))))), 0.0, 0.0, 1.0)), min(determinant(mat4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 1.0, 1.0, 1.0, 0.0, round(length(normalize(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), min(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), min(vec3(1.0, 1.0, 1.0), _GLF_IDENTITY(vec3(1.0, 1.0, 1.0), mix(vec3(_GLF_FUZZED(775.527), _GLF_FUZZED(9.0), _GLF_FUZZED(0.8)), vec3((vec3(1.0, 1.0, 1.0))[0], (vec3(1.0, 1.0, 1.0))[1], (vec3(1.0, 1.0, 1.0))[2]), bvec3(true, true, true))))), _GLF_IDENTITY(vec3(1.0, 1.0, 1.0), min(vec3(1.0, 1.0, 1.0), vec3(1.0, 1.0, 1.0)))))))), 0.0, 0.0, 1.0)), determinant(mat4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 1.0, 1.0, 1.0, 0.0, round(length(normalize(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), min(vec3(1.0, 1.0, 1.0), _GLF_IDENTITY(vec3(1.0, 1.0, 1.0), min(vec3(1.0, 1.0, 1.0), vec3(1.0, 1.0, 1.0)))))))), 0.0, 0.0, 1.0))))), float(_GLF_FUZZED(float(false))), bool(false))), sin(0.0), 1.0)), (float(_GLF_IDENTITY(vec4(_GLF_ZERO(0.0, injectionSwitch.x), determinant(mat4(1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(8.2)), bool(false))))), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0)), sin(0.0), 1.0), max(vec4(_GLF_ZERO(0.0, injectionSwitch.x), determinant(mat4(1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(8.2)), bool(false))))), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0)), sin(0.0), 1.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), determinant(mat4(1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(8.2)), bool(false))))), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0)), sin(0.0), 1.0))))) * 1.0)), 0.0), vec4(0.0, 1.0, 1.0, 1.0))), 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, float(mat2x3(1.0, 1.0, 0.0, abs(1.0), length(vec3(0.0, 0.0, 0.0)), 0.0))), _GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, clamp(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x))), round(length(normalize(1.0))), 0.0, 1.0))))).x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)), max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, abs(vec2(1.0, 1.0)) * _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(8.5, -9641.6121))))), max((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(8.5, -9641.6121))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(2.1), _GLF_FUZZED(float(_GLF_IDENTITY(_GLF_IDENTITY(-97934, (-97934) + 0), (_GLF_IDENTITY(-97934, (-97934) + 0)) - 0)))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))) : _GLF_FUZZED(vec2(8.5, -9641.6121)), (true ? _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(2.1), _GLF_FUZZED(float(-97934))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))) : _GLF_FUZZED(vec2(8.5, -9641.6121))) / vec2(1.0, 1.0))))), ((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(vec2(8.5, -9641.6121), clamp(vec2(8.5, -9641.6121), _GLF_IDENTITY(vec2(8.5, -9641.6121), mix(vec2(_GLF_FUZZED(3143.6734), _GLF_FUZZED(835.864)), vec2((vec2(8.5, -9641.6121))[0], (vec2(8.5, -9641.6121))[1]), bvec2(true, true))), vec2(8.5, -9641.6121)))))))) / vec2(1.0, 1.0))))))).x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((3.8 / 464.014))), vec2(_GLF_FUZZED(-3697.0839), (injectionSwitch)[1]), bvec2(false, true))).x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))[0], _GLF_FUZZED((3.8 / 464.014))), vec2(_GLF_FUZZED(-3697.0839), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((3.8 / 464.014))), vec2(_GLF_FUZZED(-3697.0839), (injectionSwitch)[1]), bvec2(false, true))).x, max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((3.8 / 464.014))), vec2(_GLF_FUZZED(-3697.0839), (injectionSwitch)[1]), bvec2(false, true))).x, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), _GLF_IDENTITY((injectionSwitch), vec2(mat3x2((injectionSwitch), 1.0, 0.0, round(length(normalize(1.0))), 1.0)))))[0], _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) + log(abs(vec2(1.0, 1.0))))[0], (injectionSwitch)[0])), _GLF_FUZZED((3.8 / 464.014))), vec2(_GLF_FUZZED(-3697.0839), (injectionSwitch)[1]), bvec2(false, true))).x)) > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))[0], _GLF_FUZZED((3.8 / 464.014))), vec2(_GLF_FUZZED(-3697.0839), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((3.8 / 464.014))), vec2(_GLF_FUZZED(-3697.0839), (injectionSwitch)[1]), bvec2(false, true))).x, max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((3.8 / 464.014))), vec2(_GLF_FUZZED(-3697.0839), (injectionSwitch)[1]), bvec2(false, true))).x, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), _GLF_IDENTITY((injectionSwitch), vec2(mat3x2((injectionSwitch), 1.0, 0.0, round(length(normalize(1.0))), 1.0)))))[0], _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) + log(abs(vec2(1.0, 1.0))))[0], (injectionSwitch)[0])), _GLF_FUZZED((3.8 / 464.014))), vec2(_GLF_FUZZED(-3697.0839), (injectionSwitch)[1]), bvec2(false, true))).x)) > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))[0], _GLF_FUZZED((3.8 / 464.014))), vec2(_GLF_FUZZED(-3697.0839), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((3.8 / 464.014))), vec2(_GLF_FUZZED(-3697.0839), (injectionSwitch)[1]), bvec2(false, true))).x, max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((3.8 / 464.014))), vec2(_GLF_FUZZED(-3697.0839), (injectionSwitch)[1]), bvec2(false, true))).x, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), _GLF_IDENTITY((injectionSwitch), vec2(mat3x2((injectionSwitch), 1.0, 0.0, round(length(normalize(1.0))), 1.0)))))[0], _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) + log(abs(vec2(1.0, 1.0))))[0], (injectionSwitch)[0])), _GLF_FUZZED((3.8 / 464.014))), vec2(_GLF_FUZZED(-3697.0839), (injectionSwitch)[1]), bvec2(false, true))).x)) > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))[0], _GLF_FUZZED((3.8 / 464.014))), vec2(_GLF_FUZZED(-3697.0839), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((3.8 / 464.014))), vec2(_GLF_FUZZED(-3697.0839), (injectionSwitch)[1]), bvec2(false, true))).x, max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((3.8 / 464.014))), vec2(_GLF_FUZZED(-3697.0839), (injectionSwitch)[1]), bvec2(false, true))).x, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), _GLF_IDENTITY((injectionSwitch), vec2(mat3x2((injectionSwitch), 1.0, 0.0, round(length(normalize(1.0))), 1.0)))))[0], _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) + log(abs(vec2(1.0, 1.0))))[0], (injectionSwitch)[0])), _GLF_FUZZED((3.8 / 464.014))), vec2(_GLF_FUZZED(-3697.0839), (injectionSwitch)[1]), bvec2(false, true))).x)) > injectionSwitch.y))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))))[0], _GLF_FUZZED((3.8 / 464.014))), vec2(_GLF_FUZZED(-3697.0839), (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])) : _GLF_FUZZED(injectionSwitch))))[1]), bvec2(false, true))).x > injectionSwitch.y))), _GLF_IDENTITY(false || ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((3.8 / 464.014))), vec2(_GLF_FUZZED(-3697.0839), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))[1]), bvec2(false, true))).x > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((3.8 / 464.014))), vec2(_GLF_IDENTITY(_GLF_FUZZED(-3697.0839), mix(float(_GLF_FUZZED(-3697.0839)), float(_GLF_FUZZED(0.5)), bool(false))), (injectionSwitch)[1]), bvec2(false, true))), clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((3.8 / 464.014))), vec2(_GLF_IDENTITY(_GLF_FUZZED(-3697.0839), mix(float(_GLF_FUZZED(-3697.0839)), float(_GLF_FUZZED(0.5)), bool(false))), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((3.8 / 464.014))), vec2(_GLF_IDENTITY(_GLF_FUZZED(-3697.0839), mix(float(_GLF_FUZZED(-3697.0839)), float(_GLF_FUZZED(0.5)), bool(false))), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((3.8 / 464.014))), vec2(_GLF_IDENTITY(_GLF_FUZZED(-3697.0839), mix(float(_GLF_FUZZED(-3697.0839)), float(_GLF_FUZZED(0.5)), bool(false))), (injectionSwitch)[1]), bvec2(false, true))))).x > injectionSwitch.y)))), true && (false || ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, max(0, 0)), 0))], ((injectionSwitch)[_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, max(0, 0)), 0))]) / 1.0), _GLF_FUZZED((3.8 / 464.014))), vec2(_GLF_FUZZED(-3697.0839), _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(false, true))).x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((3.8 / 464.014))), vec2(_GLF_FUZZED(_GLF_IDENTITY(-3697.0839, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(1294.3919) : _GLF_IDENTITY(-3697.0839, (-3697.0839) / 1.0)))), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y)))))))), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec3(injectionSwitch.y, 1.0, 1.0), mix(_GLF_IDENTITY(vec3((vec3(injectionSwitch.y, 1.0, 1.0))[0], (vec3(injectionSwitch.y, 1.0, 1.0))[1], _GLF_FUZZED(8.5)), max(_GLF_IDENTITY(vec3((vec3(injectionSwitch.y, 1.0, 1.0))[0], (vec3(injectionSwitch.y, 1.0, 1.0))[1], _GLF_FUZZED(8.5)), min(vec3((vec3(injectionSwitch.y, 1.0, 1.0))[0], (vec3(injectionSwitch.y, 1.0, 1.0))[1], _GLF_FUZZED(8.5)), vec3((vec3(injectionSwitch.y, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-4734.8110)), bool(false)))))[0], (vec3(injectionSwitch.y, 1.0, 1.0))[1], _GLF_FUZZED(8.5)))), vec3((vec3(injectionSwitch.y, 1.0, 1.0))[0], (vec3(injectionSwitch.y, 1.0, 1.0))[1], _GLF_FUZZED(8.5)))), vec3(_GLF_FUZZED(2858.3422), _GLF_FUZZED(-444.308), _GLF_IDENTITY((_GLF_IDENTITY(vec3(injectionSwitch.y, 1.0, 1.0), min(_GLF_IDENTITY(vec3(injectionSwitch.y, 1.0, 1.0), min(vec3(injectionSwitch.y, 1.0, 1.0), vec3(injectionSwitch.y, 1.0, 1.0))), vec3(_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 0.0, sqrt(1.0), 1.0, 0.0, 0.0, 0.0))).y, 1.0, 1.0)))), (_GLF_IDENTITY((vec3(injectionSwitch.y, 1.0, 1.0)), (true ? (vec3(injectionSwitch.y, 1.0, 1.0)) : _GLF_FUZZED(vec3(-746.731, -8431.9501, 6.3))))) - vec3(0.0, 0.0, 0.0))[2]), bvec3(false, _GLF_IDENTITY(false, bool(bvec2(false, false))), true))))), clamp(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec3(injectionSwitch.y, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-876.556) : 1.0)))), 1.0), mix(vec3((vec3(injectionSwitch.y, 1.0, 1.0))[0], (vec3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, 1.0, 1.0))[_GLF_IDENTITY(1, ~ (~ (1)))], _GLF_FUZZED(8.5)), vec3(_GLF_FUZZED(2858.3422), _GLF_FUZZED(-444.308), (vec3(injectionSwitch.y, 1.0, 1.0))[2]), bvec3(false, false, true))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, 1.0, 1.0), mix(vec3((vec3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(9327.6772)), vec2(_GLF_FUZZED((70.37)), (injectionSwitch)[1]), bvec2(false, true))).y, 1.0, 1.0))[0], (vec3(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, sin(0.0), 1.0), (true ? mat3x4(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, sin(0.0), _GLF_IDENTITY(1.0, float(mat4x3(_GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(_GLF_IDENTITY(1.0, float(mat3x2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0, 0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))))), injectionSwitch.y), cos(0.0), round(length(normalize(sqrt(vec4(1.0, 1.0, 1.0, 1.0))))), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0)))) : _GLF_FUZZED(mat3x4(-43.33, 581.942, 141.071, 337.305, -331.508, -6813.9233, -6.4, 1524.1207, 8.2, -7.6, -99.17, -6.8))))), (false ? _GLF_IDENTITY(_GLF_FUZZED(-6.2), max(_GLF_FUZZED(-6.2), _GLF_IDENTITY(_GLF_FUZZED(-6.2), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(942.683) : _GLF_FUZZED(-6.2))))) : float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), (injectionSwitch.y) - 0.0), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, sin(0.0), 1.0), (true ? mat3x4(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, sin(0.0), 1.0) : _GLF_FUZZED(mat3x4(-43.33, 581.942, 141.071, 337.305, -331.508, -6813.9233, -6.4, 1524.1207, 8.2, -7.6, -99.17, -6.8)))))))), _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0)), 1.0))[1], _GLF_FUZZED(8.5)), vec3(_GLF_FUZZED(2858.3422), _GLF_FUZZED(-444.308), (vec3(injectionSwitch.y, 1.0, 1.0))[2]), bvec3(false, false, true))))), 0.0 + (_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec3(injectionSwitch.y, 1.0, 1.0), mix(vec3((vec3(injectionSwitch.y, 1.0, 1.0))[0], (vec3(injectionSwitch.y, 1.0, 1.0))[_GLF_IDENTITY(1, ((0 << _GLF_IDENTITY(int(6), int(6))) << _GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), max(_GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), (_GLF_IDENTITY(int(6), int(6))) ^ 0), _GLF_IDENTITY(int(6), int(6))))) | (1))], _GLF_FUZZED(8.5)), vec3(_GLF_FUZZED(2858.3422), _GLF_IDENTITY(_GLF_FUZZED(-444.308), clamp(_GLF_FUZZED(-444.308), _GLF_FUZZED(-444.308), _GLF_FUZZED(-444.308))), (vec3(injectionSwitch.y, 1.0, 1.0))[2]), bvec3(false, false, true))))))), _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec3(injectionSwitch.y, 1.0, 1.0), mix(vec3((_GLF_IDENTITY(vec3(injectionSwitch.y, 1.0, 1.0), (false ? _GLF_FUZZED(vec3(815.769, -6684.7314, 818.823)) : _GLF_IDENTITY(vec3(injectionSwitch.y, 1.0, 1.0), (vec3(injectionSwitch.y, 1.0, 1.0)) - vec3(0.0, 0.0, 0.0)))))[0], (vec3(injectionSwitch.y, 1.0, 1.0))[1], _GLF_FUZZED(8.5)), vec3(_GLF_FUZZED(2858.3422), _GLF_FUZZED(-444.308), (vec3(injectionSwitch.y, 1.0, 1.0))[2]), bvec3(false, false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, false)), (bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, false))) || false)))))))))))))))))), true && (! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) && true), (_GLF_IDENTITY(! (false), (! _GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false)))) && true)) && true))), ! (! (false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY((3.8 / 464.014), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY((3.8 / 464.014), float(mat4x2((3.8 / 464.014), _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec4(0.0, length(sqrt(0.0)), 1.0, 1.0), clamp(vec4(0.0, length(sqrt(0.0)), 1.0, 1.0), vec4(0.0, length(sqrt(0.0)), 1.0, 1.0), vec4(0.0, length(sqrt(0.0)), 1.0, 1.0))))), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))), 0.0, sin(0.0), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(5202.1169)), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), bool(true))), 1.0, 1.0)), (float(mat2x3(_GLF_IDENTITY((3.8 / 464.014), float(mat4x2((3.8 / 464.014), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))), 0.0, sin(0.0), 1.0, 1.0, 1.0))) + 0.0)))), vec2(_GLF_FUZZED(-3697.0839), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))[1]), bvec2(false, true))).x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((3.8 / 464.014))), vec2(_GLF_FUZZED(-3697.0839), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y)), ! (! (bool((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))[0], _GLF_FUZZED((3.8 / 464.014))), vec2(_GLF_FUZZED(-3697.0839), (injectionSwitch)[_GLF_IDENTITY(1, min(1, 1))]), _GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, true))), true), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec2(false, true), true), true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec2(false, true), true), true)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec2(false, true), true), true)), true))), true))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec3(bvec2(false, true), true), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec2(false, true), true), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(false, true), true), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec2(false, true), true))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec2(false, true), true)))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(bvec2(false, true), true)))))))))), true)), true))))))))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((3.8 / 464.014))), vec2(_GLF_FUZZED(-3697.0839), (injectionSwitch)[_GLF_IDENTITY(1, min(1, 1))]), _GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, true))), true), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec2(false, true), true), true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec2(false, true), true), true)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec2(false, true), true), true)), true))), _GLF_IDENTITY(true, ! (! (true)))))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec3(bvec2(false, true), true), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec2(false, true), true), true)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec2(false, true), true), true)), true)))))))))))) * mat2(1.0), mix(vec2(_GLF_FUZZED(-9.5), ((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((3.8 / 464.014))), vec2(_GLF_FUZZED(-3697.0839), (injectionSwitch)[_GLF_IDENTITY(1, min(1, 1))]), _GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, true))), true), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec2(false, true), true), true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec2(false, true), true), true)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec2(false, true), true), true)), true))), true))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec3(bvec2(false, true), true), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec2(false, true), true), true)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec2(false, true), true), true)), true)))))))))))) * mat2(1.0))[1]), vec2(((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((3.8 / 464.014))), vec2(_GLF_FUZZED(-3697.0839), _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, min(1, 1))], (_GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, min(1, 1))], min((injectionSwitch)[_GLF_IDENTITY(1, min(1, 1))], (injectionSwitch)[_GLF_IDENTITY(1, min(1, 1))]))) - length(0.0))), _GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, true))), true), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec2(false, true), true), true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec2(false, true), true), true)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec2(false, true), true), true)), true))), true))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec3(bvec2(false, true), true), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec2(false, true), true), true)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec2(false, true), true), true)), true)))))))))))) * mat2(1.0))[0], _GLF_FUZZED(1.1)), bvec2(true, false)))).x > injectionSwitch.y)))))))), bool(bool(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), true))))))))))))) || false))), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(5.3)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
      return;
     return;
    }
  }
 if(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1) | 0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((1) | 0, ((1) | 0) | ((1) | 0))), (0 ^ 0) ^ (~ (_GLF_IDENTITY((1) | 0, ((1) | 0) | ((1) | 0)))))))) < subgroup_size)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), true && (! (false))), false || (_GLF_IDENTITY(! (false), true && (! (false)))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   atomicStore(checker[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u)], read, 4, _GLF_IDENTITY(64, min(64, 64)), 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   subgroupAll(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(314.369, 46.90)) : injectionSwitch)).y))), bool(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   atomicStore(checker[virtual_gid], read, 4, _GLF_IDENTITY(64, max(_GLF_IDENTITY(64, ~ (~ (64))), 64)), 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(! (! (false)), false || (! (! (false))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), true && (_GLF_IDENTITY(! (! (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (! (false)))))), false || (! (! (false))))), true && ((_GLF_IDENTITY(! (! (false)), false || (! (! (false)))))))))))))), (! (false)) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), ! (! (_GLF_IDENTITY(! (! (false)), false || (! (! (false))))))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), ! (! (_GLF_IDENTITY(! (! (false)), false || _GLF_IDENTITY((! (! (false))), ! (! ((! (! (false)))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), ! (! (_GLF_IDENTITY(! (! (false)), false || (! (! (false))))))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x < injectionSwitch.y)))), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), false || (! (! (false))))), (! (_GLF_IDENTITY(! (! (false)), false || (! (! (false)))))) || false))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), (! (injectionSwitch.x < injectionSwitch.y)) || false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), false))))))), _GLF_IDENTITY((! (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((! _GLF_IDENTITY((false), bool(bvec2(_GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! (! ((false))))) || false), true)))))) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), ((false)) && true))), ! (_GLF_IDENTITY(! (! (false)), ! (! (_GLF_IDENTITY(! (! (false)), false || (_GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), (! (! (false))) && true)), false || (! (_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))))))))))))), ! (! (_GLF_IDENTITY(! _GLF_IDENTITY((false), false || ((false))), ! (_GLF_IDENTITY(! (! (false)), ! (! (_GLF_IDENTITY(! (! (false)), false || (! (! (false)))))))))))), (! (false)) && _GLF_IDENTITY(true, bool(bvec3(true, false, false)))))))))))), ! (! ((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(! (! (false)), false || (! (! (false))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), true && (_GLF_IDENTITY(! (! (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (! (false)))))), false || (! (! (false))))), true && ((_GLF_IDENTITY(! (! (false)), false || (! (! (false)))))))))))))), (! (false)) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), ! (! (_GLF_IDENTITY(! (! (false)), false || (! (! (false))))))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), ! (! (_GLF_IDENTITY(! (! (false)), false || _GLF_IDENTITY((! (! (false))), ! (! ((! (! (false)))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), ! (! (_GLF_IDENTITY(! (! (false)), false || (! (! (false))))))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x < injectionSwitch.y)))), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), false || (! (! (false))))), (! (_GLF_IDENTITY(! (! (false)), false || (! (! (false)))))) || false))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), (! (injectionSwitch.x < injectionSwitch.y)) || false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), false))))))), _GLF_IDENTITY((! (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((! _GLF_IDENTITY((false), bool(bvec2(_GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! (! ((false))))) || false), true)))))) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), ((false)) && true))), ! (_GLF_IDENTITY(! (! (false)), ! (! (_GLF_IDENTITY(! (! (false)), false || (_GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), (! (! (false))) && true)), false || (! (_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))))))))))))), ! (! (_GLF_IDENTITY(! _GLF_IDENTITY((false), false || ((false))), ! (_GLF_IDENTITY(! (! (false)), ! (! (_GLF_IDENTITY(! (! (false)), false || (! (! (false)))))))))))), (! (false)) && _GLF_IDENTITY(true, bool(bvec3(true, false, false))))))))))))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false || (false), (false || _GLF_IDENTITY((false), false || ((false)))) && true), bool(bvec3(_GLF_IDENTITY(false || (false), bool(bvec2(false || _GLF_IDENTITY((false), ((false)) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, false)))), (_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 0.0))).x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), bool(bvec3(bool(bvec3(false, true, false)), false, false))))))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! ((! (_GLF_IDENTITY(false, (false) && true)))))))))
      return;
    }
   subgroupAll(true);
   if(_GLF_DEAD(false))
    return;
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
