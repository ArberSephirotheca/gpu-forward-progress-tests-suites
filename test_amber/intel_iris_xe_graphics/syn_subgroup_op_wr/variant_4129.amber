#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, (_GLF_IDENTITY(0u ^ 0u, 0u | (0u ^ 0u)))))).x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y))), false))))
  return;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))) >> 0u), (subgroup_local_id) ^ 0u), 0u ^ (workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))) >> 0u), (subgroup_local_id) ^ 0u)));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(12.12)), vec2(_GLF_FUZZED(-0.0), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y))))
  return;
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u) * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size) / 1u, 0u | ((subgroup_id * subgroup_size) / 1u)), max(_GLF_IDENTITY((subgroup_id * subgroup_size) / 1u, (false ? _GLF_FUZZED(num_workgroup) : (subgroup_id * subgroup_size) / 1u)), (subgroup_id * subgroup_size) / 1u))) + ((_GLF_IDENTITY(subgroup_local_id, (0u | 0u) + (subgroup_local_id)) + 1) % subgroup_size);
 atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) ^ 0u), _GLF_IDENTITY(min(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((false ? _GLF_FUZZED(7.6) : injectionSwitch.x), max((false ? _GLF_FUZZED(7.6) : injectionSwitch.x), _GLF_IDENTITY((false ? _GLF_FUZZED(7.6) : injectionSwitch.x), min(_GLF_IDENTITY((false ? _GLF_FUZZED(7.6) : injectionSwitch.x), float(vec2((false ? _GLF_FUZZED(7.6) : injectionSwitch.x), 1.0))), (false ? _GLF_FUZZED(7.6) : injectionSwitch.x)))))), (_GLF_IDENTITY(false ? _GLF_FUZZED(3781.6875) : injectionSwitch.x, clamp(false ? _GLF_FUZZED(3781.6875) : injectionSwitch.x, false ? _GLF_FUZZED(3781.6875) : injectionSwitch.x, false ? _GLF_FUZZED(3781.6875) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))).x)))), _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), 0.0, _GLF_IDENTITY(cos(0.0), float(mat3(_GLF_IDENTITY(cos(0.0), min(_GLF_IDENTITY(cos(0.0), (cos(0.0)) + 0.0), _GLF_IDENTITY(cos(0.0), (cos(0.0)) - 0.0))), 1.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0))))), float(mat2(float(vec3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, cos(0.0))), 1.0, 0.0, 1.0)))))) | (next_virtual_gid))), 0u | (min(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(7.6, min(7.6, 7.6))) : injectionSwitch.x), max((false ? _GLF_FUZZED(7.6) : injectionSwitch.x), (false ? _GLF_FUZZED(7.6) : injectionSwitch.x)))), (_GLF_IDENTITY(false ? _GLF_FUZZED(3781.6875) : injectionSwitch.x, clamp(false ? _GLF_FUZZED(3781.6875) : injectionSwitch.x, false ? _GLF_FUZZED(3781.6875) : injectionSwitch.x, false ? _GLF_IDENTITY(_GLF_FUZZED(3781.6875), (_GLF_FUZZED(3781.6875)) / exp(0.0)) : injectionSwitch.x)))), _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + _GLF_ZERO(0.0, injectionSwitch.x)))))), 0.0, cos(0.0))), float(mat2(float(vec3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, cos(0.0))), 1.0, 0.0, 1.0)))))) | (next_virtual_gid))))))], uint(1), 4, 64, _GLF_IDENTITY(4, (false ? _GLF_FUZZED(_GLF_IDENTITY(76321, (76321) - (-61946 & 0))) : 4)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id)))))) + 1 < subgroup_size)
  {
   atomicStore(checker[_GLF_IDENTITY(virtual_gid, (true ? virtual_gid : _GLF_FUZZED(subgroup_size)))], read, 4, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (_GLF_IDENTITY(! _GLF_IDENTITY((! (true)), true && (_GLF_IDENTITY((! (true)), ((! (true))) || false))), (! (! (true))) && true))))) ? 64 : _GLF_FUZZED(-85902))), int(ivec3(_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(-85902))), 0, _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) | (1)), 1))), min(~ (_GLF_IDENTITY(1, max(1, 1))), ~ (_GLF_IDENTITY(1, max(1, 1))))))))))) >> 0), _GLF_IDENTITY((_GLF_IDENTITY(64, (_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(! (true), ! (_GLF_IDENTITY(! (! (true)), (! (! (true))) && _GLF_IDENTITY(true, ! (! (true)))))))) ? 64 : _GLF_FUZZED(-85902))), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(-85902))), 0, 1), (ivec3(_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(-85902))), 0, 1)) | (ivec3(_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(-85902))), 0, 1)))))) >> 0)), max((_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (_GLF_IDENTITY(! (! (true)), (! (! (true))) && true))))) ? 64 : _GLF_FUZZED(-85902))), int(ivec3(_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(-85902))), 0, 1)))) >> 0), (_GLF_IDENTITY(64, (_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (_GLF_IDENTITY(! (! (true)), (! (! (true))) && true))))) ? 64 : _GLF_FUZZED(-85902))), int(ivec3(_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(-85902))), 0, 1)))) >> 0)) | (_GLF_IDENTITY(64, (_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (_GLF_IDENTITY(! (! (true)), (! (! (true))) && true))))) ? 64 : _GLF_FUZZED(-85902))), int(ivec3(_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(-85902))), 0, 1)))) >> 0)))), (_GLF_IDENTITY(64, (_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (_GLF_IDENTITY(! (! (true)), (! (! (true))) && true))))) ? 64 : _GLF_FUZZED(-85902))), int(ivec3(_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(-85902))), 0, 1)))) >> 0)))) ^ _GLF_IDENTITY(0, (0) / 1)), (false ? _GLF_FUZZED(-8891) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (_GLF_IDENTITY(! _GLF_IDENTITY((! (true)), true && (_GLF_IDENTITY((! (true)), ((! (true))) || false))), (! (! (true))) && true))))) ? 64 : _GLF_FUZZED(-85902))), int(ivec3(_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(-85902))), 0, _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) | (1)), 1))), min(~ (_GLF_IDENTITY(1, max(1, 1))), ~ (_GLF_IDENTITY(1, max(1, 1))))))))))) >> 0), _GLF_IDENTITY((_GLF_IDENTITY(64, (_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(! (true), ! (_GLF_IDENTITY(! (! (true)), (! (! (true))) && _GLF_IDENTITY(true, ! (! (true)))))))) ? 64 : _GLF_FUZZED(-85902))), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(-85902))), 0, 1), (ivec3(_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(-85902))), 0, 1)) | (ivec3(_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(-85902))), 0, 1)))))) >> 0)), max((_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (_GLF_IDENTITY(! (! (true)), (! (! (true))) && true))))) ? 64 : _GLF_FUZZED(-85902))), int(ivec3(_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(-85902))), 0, 1)))) >> 0), (_GLF_IDENTITY(64, (_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (_GLF_IDENTITY(! (! (true)), (! (! (true))) && true))))) ? 64 : _GLF_FUZZED(-85902))), int(ivec3(_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(-85902))), 0, 1)))) >> 0)) | (_GLF_IDENTITY(64, (_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (_GLF_IDENTITY(! (! (true)), (! (! (true))) && true))))) ? 64 : _GLF_FUZZED(-85902))), int(ivec3(_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(-85902))), 0, 1)))) >> 0)))), (_GLF_IDENTITY(64, (_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (_GLF_IDENTITY(! (! (true)), (! (! (true))) && true))))) ? 64 : _GLF_FUZZED(-85902))), int(ivec3(_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(-85902))), 0, 1)))) >> 0)))) ^ _GLF_IDENTITY(0, (0) / 1)), min(_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (_GLF_IDENTITY(! _GLF_IDENTITY((! (true)), true && (_GLF_IDENTITY((! (true)), ((! (true))) || false))), (! (! (true))) && true))))) ? 64 : _GLF_FUZZED(-85902))), int(ivec3(_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(-85902))), 0, _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) | (1)), 1))), min(~ (_GLF_IDENTITY(1, max(1, 1))), ~ (_GLF_IDENTITY(1, max(1, 1))))))))))) >> 0), _GLF_IDENTITY((_GLF_IDENTITY(64, (_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(! (true), ! (_GLF_IDENTITY(! (! (true)), (! (! (true))) && _GLF_IDENTITY(true, ! (! (true)))))))) ? 64 : _GLF_FUZZED(-85902))), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(-85902))), 0, 1), (ivec3(_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(-85902))), 0, 1)) | (ivec3(_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(-85902))), 0, 1)))))) >> 0)), max((_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (_GLF_IDENTITY(! (! (true)), (! (! (true))) && true))))) ? 64 : _GLF_FUZZED(-85902))), int(ivec3(_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(-85902))), 0, 1)))) >> 0), (_GLF_IDENTITY(64, (_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (_GLF_IDENTITY(! (! (true)), (! (! (true))) && true))))) ? 64 : _GLF_FUZZED(-85902))), int(ivec3(_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(-85902))), 0, 1)))) >> 0)) | (_GLF_IDENTITY(64, (_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (_GLF_IDENTITY(! (! (true)), (! (! (true))) && true))))) ? 64 : _GLF_FUZZED(-85902))), int(ivec3(_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(-85902))), 0, 1)))) >> 0)))), (_GLF_IDENTITY(64, (_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (_GLF_IDENTITY(! (! (true)), (! (! (true))) && true))))) ? 64 : _GLF_FUZZED(-85902))), int(ivec3(_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(-85902))), 0, 1)))) >> 0)))) ^ _GLF_IDENTITY(0, (0) / 1)), _GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (_GLF_IDENTITY(! _GLF_IDENTITY((! (true)), true && (_GLF_IDENTITY((! (true)), ((! (true))) || false))), (! (! (true))) && true))))) ? 64 : _GLF_FUZZED(-85902))), int(ivec3(_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(-85902))), 0, _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) | (1)), 1))), min(~ (_GLF_IDENTITY(1, max(1, 1))), ~ (_GLF_IDENTITY(1, max(1, 1))))))))))) >> 0), _GLF_IDENTITY((_GLF_IDENTITY(64, (_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(! (true), ! (_GLF_IDENTITY(! (! (true)), (! (! (true))) && _GLF_IDENTITY(true, ! (! (true)))))))) ? 64 : _GLF_FUZZED(-85902))), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(-85902))), 0, 1), (ivec3(_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(-85902))), 0, 1)) | (ivec3(_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(-85902))), 0, 1)))))) >> 0)), max((_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (_GLF_IDENTITY(! (! (true)), (! (! (true))) && true))))) ? 64 : _GLF_FUZZED(-85902))), int(ivec3(_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(-85902))), 0, 1)))) >> 0), (_GLF_IDENTITY(64, (_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (_GLF_IDENTITY(! (! (true)), (! (! (true))) && true))))) ? 64 : _GLF_FUZZED(-85902))), int(ivec3(_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(-85902))), 0, 1)))) >> 0)) | (_GLF_IDENTITY(64, (_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (_GLF_IDENTITY(! (! (true)), (! (! (true))) && true))))) ? 64 : _GLF_FUZZED(-85902))), int(ivec3(_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(-85902))), 0, 1)))) >> 0)))), (_GLF_IDENTITY(64, (_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (_GLF_IDENTITY(! (! (true)), (! (! (true))) && true))))) ? 64 : _GLF_FUZZED(-85902))), int(ivec3(_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(-85902))), 0, 1)))) >> 0)))) ^ _GLF_IDENTITY(0, (0) / 1)))))), _GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, (false ? _GLF_FUZZED(47622) : 4)))));
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) || false))) && _GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)))))), false || ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true)), false || (bool(bvec2(_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)))))), false || ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), (injectionSwitch.x > injectionSwitch.y))))), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), (injectionSwitch.x > injectionSwitch.y)))))), false || (bool((_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), (injectionSwitch.x > injectionSwitch.y)))))))))), bool(bvec2(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true)))), (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true)))), false || (! (_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true))))))) && true))), false, true))), bool(_GLF_IDENTITY(bvec2(true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_IDENTITY(_GLF_FUZZED(7963.6801), min(_GLF_FUZZED(7963.6801), _GLF_IDENTITY(_GLF_FUZZED(7963.6801), (false ? _GLF_FUZZED(-9449.0109) : _GLF_IDENTITY(_GLF_FUZZED(7963.6801), (_GLF_IDENTITY(_GLF_FUZZED(7963.6801), (_GLF_FUZZED(7963.6801)) + 0.0)) * sqrt(1.0))))))), bool(false))), injectionSwitch[1]), (false ? _GLF_FUZZED(vec2(6925.4785, -2.7)) : vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_IDENTITY(_GLF_FUZZED(7963.6801), min(_GLF_FUZZED(7963.6801), _GLF_IDENTITY(_GLF_FUZZED(7963.6801), (false ? _GLF_FUZZED(-9449.0109) : _GLF_IDENTITY(_GLF_FUZZED(7963.6801), (_GLF_IDENTITY(_GLF_FUZZED(7963.6801), (_GLF_FUZZED(7963.6801)) + 0.0)) * sqrt(1.0))))))), bool(false))), injectionSwitch[1])))).y)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (false ? _GLF_FUZZED(40.80) : injectionSwitch[0])), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))[1])).x > injectionSwitch.y)), true))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), true))))), true, _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, false || (true)))), true && (bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec2(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), true)))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, false || (true)))), true && (bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec2(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), true)))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, false || (true)))), true && (bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec2(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), true)))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, false || (true)))), true && (bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec2(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), true)))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true)))))))))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(7963.6801)), bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-714.192), _GLF_FUZZED((- 43.87))), bvec2(false, false)))[1])).y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true)), true && (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), true)), true && (bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))), (injectionSwitch.x > injectionSwitch.y)))), true))))), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true)), true && (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), true)), true && (bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))), (injectionSwitch.x > injectionSwitch.y)))), true))))), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))))), true)))), _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(8934.2283) : injectionSwitch.y)))), true))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true)), true && (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y)))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), true)), true && (bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! _GLF_IDENTITY((bool(bool(false))), ! (! (_GLF_IDENTITY((bool(bool(false))), false || (_GLF_IDENTITY((bool(bool(false))), ! (! ((bool(bool(false)))))))))))))), (injectionSwitch.x > injectionSwitch.y)))), true))))), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), true)), true && (bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! _GLF_IDENTITY((bool(bool(false))), ! (! (_GLF_IDENTITY((bool(bool(false))), false || (_GLF_IDENTITY((bool(bool(false))), ! (! ((bool(bool(false)))))))))))))), (injectionSwitch.x > injectionSwitch.y)))), true))))), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), true)), true && (bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! _GLF_IDENTITY((bool(bool(false))), ! (! (_GLF_IDENTITY((bool(bool(false))), false || (_GLF_IDENTITY((bool(bool(false))), ! (! ((bool(bool(false)))))))))))))), (injectionSwitch.x > injectionSwitch.y)))), true))))), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))))), false)))))))) || false, ! (! ((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(8934.2283) : injectionSwitch.y)))), true))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true)), true && (bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), true))))), true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y)))))), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), true)), true && (bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(bool(bool(false)), ! (! _GLF_IDENTITY((bool(bool(false))), ! (! (_GLF_IDENTITY((bool(bool(false))), false || (_GLF_IDENTITY((bool(bool(false))), ! (! ((bool(bool(false)))))))))))))), (injectionSwitch.x > injectionSwitch.y)))), true))))), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), true)), true && (bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(bool(bool(false)), ! (! _GLF_IDENTITY((bool(bool(false))), ! (! (_GLF_IDENTITY((bool(bool(false))), false || (_GLF_IDENTITY((bool(bool(false))), ! (! ((bool(bool(false)))))))))))))), (injectionSwitch.x > injectionSwitch.y)))), true))))), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), true)), true && (bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(bool(bool(false)), ! (! _GLF_IDENTITY((bool(bool(false))), ! (! (_GLF_IDENTITY((bool(bool(false))), false || (_GLF_IDENTITY((bool(bool(false))), ! (! ((bool(bool(false)))))))))))))), (injectionSwitch.x > injectionSwitch.y)))), true))))), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), true)), true && (bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(bool(bool(false)), ! (! _GLF_IDENTITY((bool(bool(false))), ! (! (_GLF_IDENTITY((bool(bool(false))), false || (_GLF_IDENTITY((bool(bool(false))), ! (! ((bool(bool(false)))))))))))))), (injectionSwitch.x > injectionSwitch.y)))), true))))), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), true)), true && (bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(bool(bool(false)), ! (! _GLF_IDENTITY((bool(bool(false))), ! (! (_GLF_IDENTITY((bool(bool(false))), false || (_GLF_IDENTITY((bool(bool(false))), ! (! ((bool(bool(false)))))))))))))), (injectionSwitch.x > injectionSwitch.y)))), true))))), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), true)), true && (bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(bool(bool(false)), ! (! _GLF_IDENTITY((bool(bool(false))), ! (! (_GLF_IDENTITY((bool(bool(false))), false || (_GLF_IDENTITY((bool(bool(false))), ! (! ((bool(bool(false)))))))))))))), (injectionSwitch.x > injectionSwitch.y)))), true))))), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))))))))), true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))), true)))), true)), true && (bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! _GLF_IDENTITY((bool(bool(false))), ! (! (_GLF_IDENTITY((bool(bool(false))), false || (_GLF_IDENTITY((bool(bool(false))), ! (! ((bool(bool(false)))))))))))))), (injectionSwitch.x > injectionSwitch.y)))), true))))), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))), true)), true && (bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! _GLF_IDENTITY((bool(bool(false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((bool(bool(false))), false || (_GLF_IDENTITY((bool(bool(false))), ! (! ((bool(bool(false))))))))), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY((bool(bool(false))), false || (_GLF_IDENTITY((bool(bool(false))), ! (! ((bool(bool(false))))))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY((bool(bool(false))), false || (_GLF_IDENTITY((bool(bool(false))), ! (! ((bool(bool(false))))))))), false || (! (_GLF_IDENTITY((bool(bool(false))), false || (_GLF_IDENTITY((bool(bool(false))), ! (! ((bool(bool(false)))))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))), true))))), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))), true)), true && (bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! _GLF_IDENTITY((bool(bool(false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((bool(bool(false))), false || (_GLF_IDENTITY((bool(bool(false))), ! (! ((bool(bool(false))))))))), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY((bool(bool(false))), false || (_GLF_IDENTITY((bool(bool(false))), ! (! ((bool(bool(false))))))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY((bool(bool(false))), false || (_GLF_IDENTITY((bool(bool(false))), ! (! ((bool(bool(false))))))))), false || (! (_GLF_IDENTITY((bool(bool(false))), false || (_GLF_IDENTITY((bool(bool(false))), ! (! ((bool(bool(false)))))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))), true))))), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))))))))), false)))))))) || false))))))) && true)), _GLF_IDENTITY(false, true && (false))), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false), true && (true)) && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED((+ 9706.8040)), _GLF_FUZZED(20.17)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), injectionSwitch.y)), mix(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), injectionSwitch.y))), float(_GLF_FUZZED(1.4)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 1.0, determinant(mat3(1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), 1.0, 0.0, 1.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)), log(1.0), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0)), vec2(1.0, 1.0) * (vec2(mat4x3(injectionSwitch, 1.0, determinant(mat3(1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)), log(1.0), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0))))).y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, injectionSwitch.y)), injectionSwitch.y)))), false || _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), max(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))), injectionSwitch)).y, injectionSwitch.y)), injectionSwitch.y))))), ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), max(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))), injectionSwitch)).y, injectionSwitch.y)), injectionSwitch.y)))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), max(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))), injectionSwitch)).y, injectionSwitch.y)), injectionSwitch.y)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), max(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))), injectionSwitch)).y, injectionSwitch.y)), injectionSwitch.y)), mix(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), max(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))), injectionSwitch)).y, injectionSwitch.y)), injectionSwitch.y))), float(_GLF_FUZZED(7914.5363)), bool(false))), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), max(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))), injectionSwitch)).y, injectionSwitch.y)), injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), max(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))), injectionSwitch)).y, injectionSwitch.y)), injectionSwitch.y))))))) && true))) || false))))), false)))))))))
    return;
   subgroupAll(false);
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y)))))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
      return;
     return;
    }
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   subgroupAll(true);
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
