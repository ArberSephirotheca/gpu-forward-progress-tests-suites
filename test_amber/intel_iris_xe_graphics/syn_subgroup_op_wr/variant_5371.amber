#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((+ -16.81))), _GLF_IDENTITY(bool(false), bool(bvec3(_GLF_IDENTITY(bool(false), bool(bool(bool(false)))), false, false)))))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
    }
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), true))), false, false, true))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), true, true))), true)), bvec2(bvec2(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), true, true))), true)))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec2((false), false)), false || (bool(bvec2((_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), _GLF_IDENTITY(false || (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), false || (false || (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))) && true, ! (! ((_GLF_IDENTITY(false, bool(bvec3(false, true, false)))) && true))))), false))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false || _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec2((false), _GLF_IDENTITY(false, true && (false)))), false || (bool(bvec2((_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec3(false, true, false)))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec3(false, true, false)))))) && true)), false))))), ! (! (_GLF_IDENTITY(false || _GLF_IDENTITY((false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2((false), false)), false || (bool(bvec2((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))))))) && true)), false)))), ! (! (_GLF_IDENTITY(bool(bvec2((false), false)), false || (bool(bvec2((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))) && true)), false)))))))), false || (false || _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec2((false), false)), false || (bool(bvec2((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))) && true)), false))))))))))), _GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY(false || _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec2((false), false)), false || (bool(bvec2((_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))))), false || (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))))))))))) && true)), false))))), ! (! (_GLF_IDENTITY(false || _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec2((false), false)), false || (bool(bvec2((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))) && true)), false))))), false || (false || _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec2((false), false)), false || (bool(bvec2((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))) && true)), false))))))))))), false, false)), (bool(bvec3(! (_GLF_IDENTITY(false || _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec2((false), false)), false || (bool(bvec2((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))) && true)), false))))), ! (! (_GLF_IDENTITY(false || _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec2((false), false)), false || (bool(bvec2((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))) && true)), false))))), false || (false || _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec2((false), false)), false || (bool(bvec2((_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), ((_GLF_IDENTITY(false, bool(bvec3(false, true, false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true)), false))))))))))), false, false))) || false)), (_GLF_IDENTITY(! (_GLF_IDENTITY(false || _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec2((false), _GLF_IDENTITY(false, true && (false)))), false || (bool(bvec2((_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec3(false, true, false))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec3(false, true, false)))), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec3(false, true, false))))))))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec3(false, true, false)))))) && true)), false))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false || _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec2((false), false)), false || (bool(bvec2((_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(false, ! (! (false))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), ! (! (bool(bvec3(false, true, false))))))), ((_GLF_IDENTITY(false, bool(bvec3(false, true, false))))) && true)))) && true)), false))))), false || (false || _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec2((false), false)), false || (bool(bvec2((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))) && true)), false))))))), ! (! (_GLF_IDENTITY(false || _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec2((false), false)), false || (bool(bvec2((_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), ((_GLF_IDENTITY(false, bool(bvec3(false, true, false))))) && true)))) && true)), false))))), false || (false || _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec2((false), false)), _GLF_IDENTITY(false || (bool(bvec2((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))) && true)), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false || (bool(bvec2((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))) && true)), false)))))))))))))))), _GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(false || _GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec3(bvec2((false), true), true)))), ! (! (bool(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec3(bvec2((false), true), true)))))))), _GLF_IDENTITY(bool(bvec2((false), false)), false || (bool(bvec2((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))) && true)), false))))), (_GLF_IDENTITY(false || _GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec3(bvec2((false), true), true)))), ! (! (bool(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec3(bvec2((false), true), true)))))))), _GLF_IDENTITY(bool(bvec2((false), false)), false || (bool(bvec2((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))) && true)), false))))), (false || _GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec3(bvec2((false), true), true)))), ! (! (bool(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec3(bvec2((false), true), true)))))))), _GLF_IDENTITY(bool(bvec2((false), false)), false || (bool(bvec2((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))) && true)), false)))))) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(false || _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec2((false), false)), false || (bool(bvec2((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))) && _GLF_IDENTITY(true, bool(bvec3(true, true, true))))), false))))), false || (false || _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec2((false), false)), false || (bool(bvec2((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))) && true)), false))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false || _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec2((false), false)), false || (bool(bvec2((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))) && _GLF_IDENTITY(true, bool(bvec3(true, true, true))))), false))))), false || (false || _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec2((false), false)), false || (bool(bvec2((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))) && true)), false))))))))), true && (! (! (_GLF_IDENTITY(false || _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec2((false), false)), false || (bool(bvec2((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))) && _GLF_IDENTITY(true, bool(bvec3(true, true, true))))), false))))), false || (false || _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), _GLF_IDENTITY(bool(bvec2((false), false)), false || (bool(bvec2((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))) && true)), false)))))))))))), bool(bvec2(! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false || _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec2((false), false)), false || (bool(bvec2((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))) && _GLF_IDENTITY(true, bool(bvec3(true, true, true))))), false))))), false || (false || _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec2((false), false)), false || (bool(bvec2((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))) && true)), false))))))))), true && (! (! (_GLF_IDENTITY(false || _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec2((false), false)), false || (bool(bvec2((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))) && _GLF_IDENTITY(true, bool(bvec3(true, true, true))))), false))))), false || (false || _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec2((false), false)), false || (bool(bvec2((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))) && true)), false)))))))))))), true))))))), false, false)), (bool(bvec3(! (_GLF_IDENTITY(false || _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(false, (false) || false)), false)), false || (bool(bvec2((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, false), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, true, false), false)), true)))), false)))))) && true)), false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false || _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec2((false), false)), false || (bool(bvec2((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))) && true)), false))))), false || (false || _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec2((false), false)), false || (bool(bvec2((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))) && true)), false)))))))), (! (_GLF_IDENTITY(false || _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec2((false), false)), false || (bool(bvec2((_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, true, false)))) && true, ! (! ((_GLF_IDENTITY(false, bool(bvec3(false, true, false)))) && true))))), false))))), false || (false || _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec2((false), false)), false || (bool(bvec2((_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), bool(bvec3(false, true, false)))) && true)), false))))))))) && true)))), false, false))) || false))) && true))))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7.8)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x))));
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID) - uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(uvec4(_GLF_IDENTITY((gl_WorkGroupID) - uvec3(0u, 0u, 0u), (false ? _GLF_FUZZED((uvec3(115268u, 24727u, 10676u) * uvec3(36875u, 161703u, 187303u))) : (gl_WorkGroupID) - uvec3(0u, 0u, 0u))), 1u)), ~ (~ (uvec3(uvec4(_GLF_IDENTITY((gl_WorkGroupID) - uvec3(0u, 0u, 0u), (false ? _GLF_FUZZED((uvec3(115268u, 24727u, 10676u) * uvec3(36875u, 161703u, 187303u))) : (gl_WorkGroupID) - uvec3(0u, 0u, 0u))), 1u))))))).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), false || (! (false))), (! (false)) || false)))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, _GLF_IDENTITY(true, bool(bool(true))), false))))), bool(bool(_GLF_DEAD(false)))))
  return;
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u), ~ (~ (workgroup_id)))))) | (_GLF_IDENTITY(workgroup_id, uint(uvec4(workgroup_id, 0u, 0u, 1u)))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(workgroup_id, ~ (~ (_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u))))))) | (_GLF_IDENTITY(workgroup_id, uint(uvec4(workgroup_id, 0u, 0u, _GLF_IDENTITY(1u, min(1u, 1u)))))), ((_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, min(_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id)), workgroup_id)), ~ (~ (workgroup_id)))))) | (_GLF_IDENTITY(workgroup_id, uint(uvec4(workgroup_id, 0u, 0u, _GLF_IDENTITY(1u, 0u ^ (_GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec4(1u, 0u, 0u, 0u), min(uvec4(1u, 0u, 0u, 0u), uvec4(1u, 0u, 0u, 0u)))))))))))))) - 0u), (_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(workgroup_id, ~ _GLF_IDENTITY((~ (workgroup_id)), ((~ (workgroup_id))) / 1u))))) | (_GLF_IDENTITY(workgroup_id, uint(uvec4(workgroup_id, 0u, 0u, 1u)))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))))), (true ? _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))))) : _GLF_FUZZED(subgroup_id)))) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, uint(uvec4(workgroup_id, 0u, 0u, 1u))), (_GLF_IDENTITY(workgroup_id, uint(uvec4(workgroup_id, 0u, 0u, 1u)))) / _GLF_IDENTITY(1u, 0u | (1u))))))), (workgroup_size * _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u), ~ (~ (workgroup_id)))))) | (_GLF_IDENTITY(workgroup_id, uint(uvec4(workgroup_id, 0u, 0u, _GLF_IDENTITY(1u, (1u) ^ 0u))))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id)))))) | (_GLF_IDENTITY(workgroup_id, uint(uvec4(workgroup_id, 0u, 0u, 1u)))), ((_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(workgroup_id, ~ (_GLF_IDENTITY(~ (workgroup_id), (~ (workgroup_id)) >> 0u)))))) | (_GLF_IDENTITY(workgroup_id, uint(uvec4(workgroup_id, 0u, 0u, 1u))))) - 0u), (_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, _GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED((num_workgroup)) : workgroup_id)), _GLF_IDENTITY(workgroup_id, ~ _GLF_IDENTITY((~ (workgroup_id)), uint(_GLF_IDENTITY(uvec3((~ (workgroup_id)), 0u, 1u), (uvec3((~ (workgroup_id)), 0u, 1u)) | uvec3(0u, 0u, 0u)))))))) | _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, uint(uvec4(workgroup_id, 0u, 0u, 1u)))), uint(uvec4(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, uint(uvec4(workgroup_id, 0u, 0u, 1u)))), clamp((_GLF_IDENTITY(workgroup_id, uint(uvec4(workgroup_id, 0u, 0u, 1u)))), (_GLF_IDENTITY(workgroup_id, uint(uvec4(workgroup_id, 0u, 0u, 1u)))), (_GLF_IDENTITY(workgroup_id, uint(uvec4(workgroup_id, 0u, 0u, 1u)))))), uint(_GLF_ONE(1.0, injectionSwitch.y)), (1u & 1u), _GLF_IDENTITY(0u, (0u) * 1u)))), (_GLF_IDENTITY(workgroup_id, clamp(_GLF_IDENTITY(workgroup_id, (workgroup_id) | 0u), workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), ~ (~ (workgroup_id)))))) | (_GLF_IDENTITY(workgroup_id, uint(uvec4(workgroup_id, 0u, 0u, 1u)))))))) | (workgroup_size * _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u), ~ (~ _GLF_IDENTITY((workgroup_id), ((workgroup_id)) | 0u))), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u), ~ (~ _GLF_IDENTITY((workgroup_id), ((workgroup_id)) | 0u)))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) - 0u), uint(uvec4(workgroup_id, 0u, 0u, 1u)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id)))))), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id)))))), ((_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(~ (~ (workgroup_id)), min(~ (~ (workgroup_id)), _GLF_IDENTITY(~ (~ (workgroup_id)), ~ (~ (_GLF_IDENTITY(~ (~ (workgroup_id)), (~ (~ (workgroup_id))) * 1u))))))))))) / 1u)) ^ 0u) | _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, uint(uvec4(workgroup_id, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED((subgroup_size ++)))), 0u, 1u)))), ((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) - _GLF_IDENTITY(0u, (0u) >> 0u)), uint(uvec4(workgroup_id, 0u, 0u, 1u))))) | ((_GLF_IDENTITY(workgroup_id, uint(uvec4(workgroup_id, 0u, 0u, 1u)))))), ((_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(~ (~ _GLF_IDENTITY((workgroup_id), 0u | ((workgroup_id)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(~ (~ _GLF_IDENTITY((workgroup_id), 0u | ((workgroup_id)))), 0u ^ (_GLF_IDENTITY(~ (~ _GLF_IDENTITY((workgroup_id), 0u | ((workgroup_id)))), 0u | (~ (~ _GLF_IDENTITY((workgroup_id), 0u | ((workgroup_id)))))))))))))) | (_GLF_IDENTITY(workgroup_id, uint(uvec4(workgroup_id, 0u, 0u, 1u))))) - 0u), (_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id)))))) | (_GLF_IDENTITY(workgroup_id, uint(uvec4(workgroup_id, 0u, 0u, _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uint(1u)), (uint(uint(1u))) + 0u)))))), (_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id)), ~ (~ (workgroup_id)))))) | (_GLF_IDENTITY(workgroup_id, uint(uvec4(workgroup_id, 0u, 0u, 1u))))))))), (_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u), ~ (~ (workgroup_id)))))) | (_GLF_IDENTITY(workgroup_id, uint(uvec4(_GLF_IDENTITY(workgroup_id, (true ? workgroup_id : _GLF_FUZZED(_GLF_IDENTITY((workgroup_id % 25140u), (_GLF_IDENTITY((workgroup_id % 25140u), clamp((workgroup_id % 25140u), (workgroup_id % 25140u), (workgroup_id % 25140u)))) | (_GLF_IDENTITY((workgroup_id % 25140u), (false ? _GLF_FUZZED(workgroup_id) : (workgroup_id % 25140u)))))))), 0u, 0u, 1u)))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id)))))) | (_GLF_IDENTITY(workgroup_id, uint(uvec4(workgroup_id, 0u, 0u, 1u)))), ((_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id)))))) | _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, uint(uvec4(workgroup_id, 0u, 0u, 1u)))), 1u * (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, uint(uvec4(workgroup_id, 0u, 0u, 1u))), (_GLF_IDENTITY(workgroup_id, uint(uvec4(workgroup_id, 0u, 0u, 1u)))) | (_GLF_IDENTITY(workgroup_id, uint(uvec4(workgroup_id, 0u, 0u, 1u)))))), max((_GLF_IDENTITY(workgroup_id, uint(uvec4(workgroup_id, 0u, 0u, 1u)))), (_GLF_IDENTITY(workgroup_id, uint(uvec4(workgroup_id, 0u, 0u, 1u)))))))), clamp((_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(uint(uvec4(workgroup_id, 0u, 0u, 1u)), min(uint(uvec4(workgroup_id, 0u, 0u, 1u)), uint(uvec4(workgroup_id, 0u, 0u, 1u)))))), (_GLF_IDENTITY(workgroup_id, uint(uvec4(workgroup_id, 0u, 0u, 1u)))), (_GLF_IDENTITY(workgroup_id, uint(uvec4(workgroup_id, 0u, 0u, 1u))))))) - 0u), (_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id)))))) | (_GLF_IDENTITY(workgroup_id, uint(uvec4(workgroup_id, 0u, 0u, 1u)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(~ (workgroup_id), _GLF_IDENTITY(uint(uint(~ (workgroup_id))), uint(uvec4(uint(uint(~ _GLF_IDENTITY((workgroup_id), clamp((workgroup_id), (workgroup_id), (workgroup_id))))), 1u, 1u, _GLF_IDENTITY(0u, max(0u, 0u))))))), ((_GLF_IDENTITY(~ (workgroup_id), _GLF_IDENTITY(uint(uint(~ (workgroup_id))), uint(uvec4(uint(uint(~ (workgroup_id))), 1u, 1u, _GLF_IDENTITY(0u, max(0u, 0u)))))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (~ _GLF_IDENTITY((_GLF_IDENTITY(~ (workgroup_id), _GLF_IDENTITY(uint(uint(~ (workgroup_id))), uint(uvec4(uint(uint(~ _GLF_IDENTITY((workgroup_id), clamp((workgroup_id), (workgroup_id), (workgroup_id))))), 1u, 1u, _GLF_IDENTITY(0u, max(0u, 0u))))))), ((_GLF_IDENTITY(~ (workgroup_id), _GLF_IDENTITY(uint(uint(~ (workgroup_id))), uint(uvec4(uint(uint(~ (workgroup_id))), 1u, 1u, _GLF_IDENTITY(0u, max(0u, 0u)))))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), (_GLF_IDENTITY(workgroup_id, ~ (_GLF_IDENTITY(~ (workgroup_id), _GLF_IDENTITY(uint(uint(~ (_GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id))))), uint(_GLF_IDENTITY(uvec4(uint(uint(~ (workgroup_id))), _GLF_IDENTITY(1u, ~ (~ (1u))), 1u, 0u), (_GLF_IDENTITY(uvec4(uint(uint(~ (workgroup_id))), _GLF_IDENTITY(1u, ~ (~ (1u))), 1u, 0u), ~ (~ (uvec4(uint(uint(~ (workgroup_id))), _GLF_IDENTITY(1u, ~ (~ (1u))), 1u, 0u))))) / _GLF_IDENTITY(uvec4(1u, 1u, 1u, 1u), min(uvec4(1u, 1u, 1u, 1u), uvec4(1u, 1u, 1u, 1u)))))))))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(workgroup_id, ~ (~ (_GLF_IDENTITY(workgroup_id, 0u + (_GLF_IDENTITY(workgroup_id, (workgroup_id) / 1u))))))))) | (_GLF_IDENTITY(workgroup_id, uint(uvec4(workgroup_id, 0u, 0u, 1u))))))), (workgroup_size * _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u), ~ (~ (workgroup_id)))), clamp(clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u), ~ (~ (workgroup_id)))), clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u), ~ (~ (workgroup_id)))), clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u), ~ (~ (workgroup_id)))))))) | (_GLF_IDENTITY(workgroup_id, uint(uvec4(workgroup_id, 0u, 0u, 1u)))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id)))), (clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))))) | (clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id)))))))) | (_GLF_IDENTITY(workgroup_id, uint(uvec4(workgroup_id, 0u, 0u, 1u)))), ((_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id)))))) | (_GLF_IDENTITY(workgroup_id, uint(uvec4(workgroup_id, 0u, 0u, _GLF_IDENTITY(1u, (1u) - 0u)))))) - 0u), (_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id)))))) | (_GLF_IDENTITY(workgroup_id, uint(uvec4(workgroup_id, 0u, 0u, 1u)))), (_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(clamp(_GLF_IDENTITY(workgroup_id, (workgroup_id) / (1u & 1u)), workgroup_id, _GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id)))), (clamp(_GLF_IDENTITY(workgroup_id, (workgroup_id) / (1u & 1u)), workgroup_id, _GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))))) + 0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, uint(uvec4(workgroup_id, 0u, 0u, 1u))), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, uint(uvec4(workgroup_id, 0u, 0u, 1u))), uint(uvec4(_GLF_IDENTITY(workgroup_id, uint(uvec4(workgroup_id, 0u, 0u, _GLF_IDENTITY(1u, (1u) | 0u)))), 1u, _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), uint(uvec3(~ (0u), 1u, 1u))))))), 0u))), 1u, 0u, 0u)))))))) | (_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u), _GLF_IDENTITY(~ (~ (workgroup_id)), uint(uvec4(~ (~ (workgroup_id)), 0u, 1u, 0u))))))) | _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, uint(uvec4(workgroup_id, 0u, 0u, 1u)))), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, uint(uvec4(workgroup_id, 0u, 0u, 1u)))), ((_GLF_IDENTITY(workgroup_id, uint(uvec4(workgroup_id, 0u, 0u, 1u))))) + 0u)) * 1u), clamp(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, 0u ^ (workgroup_id)), clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id)))))) | (_GLF_IDENTITY(workgroup_id, uint(uvec4(workgroup_id, 0u, 0u, 1u)))), ((_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id)))))) | (_GLF_IDENTITY(workgroup_id, uint(uvec4(workgroup_id, 0u, 0u, _GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, 0u ^ (1u)))))))))) - 0u), (_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id)))))) | (_GLF_IDENTITY(workgroup_id, uint(uvec4(workgroup_id, 0u, 0u, 1u)))), (_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id)))))) | (_GLF_IDENTITY(workgroup_id, uint(uvec4(workgroup_id, 0u, 0u, 1u))))))), (_GLF_IDENTITY(true ? workgroup_size * _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u), ~ (~ (_GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u), ~ (~ (workgroup_id)))), min(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u), ~ (~ (workgroup_id)))), uint(_GLF_IDENTITY(uvec3(~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u), ~ (~ (workgroup_id)))), 1u, 1u), uvec3(1u, 1u, 1u) * (uvec3(~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u), ~ (~ (workgroup_id)))), 1u, 1u))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u), ~ (~ (workgroup_id))))))))))) | (_GLF_IDENTITY(workgroup_id, uint(uvec4(workgroup_id, 0u, 0u, 1u)))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(workgroup_id, ~ _GLF_IDENTITY((~ (workgroup_id)), (true ? (~ (workgroup_id)) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), clamp(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id), _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), clamp(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), min(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id))), _GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id))), uint(uvec2(_GLF_FUZZED(subgroup_local_id), _GLF_IDENTITY(1u, max(1u, 1u)))))) - 0u)))))))), (true ? _GLF_IDENTITY(workgroup_id, clamp(_GLF_IDENTITY(workgroup_id, 0u | (_GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)))), workgroup_id, _GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))))) : _GLF_FUZZED(num_workgroup)))) | (_GLF_IDENTITY(workgroup_id, uint(uvec4(workgroup_id, 0u, 0u, 1u)))), ((_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(workgroup_id, ~ (~ (_GLF_IDENTITY(workgroup_id, 0u | (workgroup_id)))))))) | (_GLF_IDENTITY(workgroup_id, uint(uvec4(workgroup_id, 0u, 0u, 1u))))) - 0u), (_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), ~ _GLF_IDENTITY((~ (workgroup_id)), clamp((~ (workgroup_id)), (~ (workgroup_id)), _GLF_IDENTITY((~ (workgroup_id)), ((~ (workgroup_id))) << 0u))))), min(clamp(workgroup_id, _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))) | (workgroup_id)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), ~ _GLF_IDENTITY((~ (workgroup_id)), clamp((~ (workgroup_id)), (~ (workgroup_id)), _GLF_IDENTITY((~ (workgroup_id)), ((~ (workgroup_id))) << 0u))))), clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), ~ _GLF_IDENTITY((~ (workgroup_id)), clamp((~ (workgroup_id)), (~ (workgroup_id)), _GLF_IDENTITY((~ (workgroup_id)), ((~ (workgroup_id))) << 0u))))))))) | (_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, 0u ^ (workgroup_id)), min(workgroup_id, workgroup_id))) - 0u), 0u, 0u, 1u), (uvec4(workgroup_id, 0u, 0u, 1u)) ^ uvec4(0u, 0u, 0u, 0u))))), (_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id)))), (_GLF_IDENTITY(clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id)))), (clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))))) ^ (0u >> _GLF_IDENTITY(uint(8u), uint(8u))))) | (clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id)))))))) | (_GLF_IDENTITY(workgroup_id, uint(uvec4(workgroup_id, 0u, 0u, 1u))))))) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u, (0u) ^ 0u) | (subgroup_local_id)), subgroup_local_id, subgroup_local_id))), (false ? _GLF_FUZZED(num_workgroup) : true ? workgroup_size * _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u), ~ (~ (workgroup_id))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u), (_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u)) ^ 0u), ~ (~ (workgroup_id)))), min(~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u), ~ (~ (workgroup_id)))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u), ~ (~ (workgroup_id))))))))))), min((_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u), ~ (~ (workgroup_id))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u), (_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u)) ^ 0u), ~ (~ (workgroup_id)))), min(~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u), ~ (~ (workgroup_id)))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u), ~ (~ (workgroup_id))))))))))), (_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u), ~ (~ (workgroup_id))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u), (_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u)) ^ 0u), ~ (~ (workgroup_id)))), min(~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u), ~ (~ (workgroup_id)))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u), ~ (~ (workgroup_id))))))))))))) | (_GLF_IDENTITY(workgroup_id, uint(uvec4(workgroup_id, 0u, 0u, 1u)))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(workgroup_id, ~ _GLF_IDENTITY((~ (workgroup_id)), (true ? (~ (workgroup_id)) : _GLF_FUZZED(subgroup_local_id)))))), (true ? _GLF_IDENTITY(workgroup_id, clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, 0u | (workgroup_id)), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, 0u | (workgroup_id)), (_GLF_IDENTITY(workgroup_id, 0u | (workgroup_id))) >> 0u)) >> 0u), workgroup_id, _GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))))) : _GLF_FUZZED(num_workgroup)))) | (_GLF_IDENTITY(workgroup_id, uint(uvec4(workgroup_id, 0u, 0u, 1u)))), ((_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(workgroup_id, ~ (~ (_GLF_IDENTITY(workgroup_id, 0u | (workgroup_id)))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(uint(uvec4(workgroup_id, 0u, 0u, 1u)), ~ (~ (uint(uvec4(workgroup_id, 0u, 0u, 1u)))))), (false ? _GLF_FUZZED(min(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), workgroup_id)) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec4(workgroup_id, 0u, 0u, 1u), (false ? _GLF_FUZZED(uvec4(73391u, 174105u, 116752u, 192472u)) : uvec4(workgroup_id, 0u, 0u, 1u))))), 0u | (_GLF_IDENTITY(workgroup_id, uint(uvec4(workgroup_id, 0u, 0u, 1u))))))))) - 0u), (_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), _GLF_IDENTITY(~ _GLF_IDENTITY((~ (workgroup_id)), clamp((~ (workgroup_id)), (~ (workgroup_id)), _GLF_IDENTITY((~ (workgroup_id)), ((~ (workgroup_id))) << 0u))), 0u ^ (~ _GLF_IDENTITY((~ (workgroup_id)), clamp((~ (workgroup_id)), (~ (workgroup_id)), _GLF_IDENTITY((~ (workgroup_id)), ((~ (workgroup_id))) << 0u))))))))) | (_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))) - 0u), 0u, 0u, 1u), (uvec4(workgroup_id, 0u, 0u, 1u)) ^ uvec4(0u, 0u, 0u, 0u))))), (_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id)))))) | (_GLF_IDENTITY(workgroup_id, uint(uvec4(workgroup_id, 0u, 0u, 1u))))))) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : _GLF_FUZZED(subgroup_local_id)))))))))) / 1u);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))) >> (1u ^ uint(_GLF_ONE(1.0, injectionSwitch.y)))), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)), (subgroup_id) | (subgroup_id))) >> (1u ^ uint(_GLF_ONE(1.0, injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))) >> (1u ^ uint(_GLF_ONE(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-92.88)), bool(false))), injectionSwitch.y))))) | (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))) >> (1u ^ uint(_GLF_ONE(1.0, injectionSwitch.y)))))))) * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (false || (false)) || false))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(uint(uvec3(workgroup_base + subgroup_id * subgroup_size, 1u, 0u)), (uint(uvec3(workgroup_base + subgroup_id * subgroup_size, 1u, 0u))) + 0u)) + _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), (true ? (subgroup_local_id + 1) : _GLF_FUZZED(workgroup_id))) % subgroup_size), max(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), max(((subgroup_local_id + 1) % subgroup_size), ((_GLF_IDENTITY(subgroup_local_id + 1, clamp(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), subgroup_local_id + 1, subgroup_local_id + 1))) % subgroup_size))))), uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(uint(uvec3(workgroup_base + subgroup_id * subgroup_size, 1u, 0u)), (uint(uvec3(workgroup_base + subgroup_id * subgroup_size, 1u, 0u))) + 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(uint(uvec3(workgroup_base + subgroup_id * subgroup_size, 1u, 0u)), (uint(uvec3(workgroup_base + subgroup_id * subgroup_size, 1u, 0u))) + 0u)), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(uint(uvec3(workgroup_base + subgroup_id * subgroup_size, 1u, 0u)), (uint(uvec3(workgroup_base + subgroup_id * subgroup_size, 1u, 0u))) + 0u))))) / 1u) + _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), (true ? (subgroup_local_id + 1) : _GLF_FUZZED(workgroup_id))) % subgroup_size), max(((_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(subgroup_local_id + 1, 1u)))) % subgroup_size), _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), max(((subgroup_local_id + 1) % subgroup_size), ((_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)) + 1) % subgroup_size)))))), (true ? uint(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(uint(uvec3(workgroup_base + subgroup_id * subgroup_size, 1u, 0u)), (uint(uvec3(_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED((++ num_workgroup)) : workgroup_base)) + subgroup_id * subgroup_size, 1u, 0u))) + 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(uint(uvec3(workgroup_base + subgroup_id * subgroup_size, 1u, 0u)), (uint(uvec3(workgroup_base + subgroup_id * subgroup_size, 1u, 0u))) + 0u)), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(uint(uvec3(workgroup_base + subgroup_id * subgroup_size, 1u, 0u)), (uint(uvec3(workgroup_base + subgroup_id * subgroup_size, 1u, 0u))) + 0u))))) / 1u) + _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), (true ? (subgroup_local_id + 1) : _GLF_FUZZED(workgroup_id))) % subgroup_size), max(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), max(((subgroup_local_id + 1) % subgroup_size), ((_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)) + 1) % subgroup_size)))))) : _GLF_FUZZED(num_workgroup))), max(uint(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(uint(uvec3(workgroup_base + subgroup_id * subgroup_size, 1u, 0u)), (uint(uvec3(workgroup_base + subgroup_id * subgroup_size, 1u, 0u))) + 0u)) + _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), (true ? (subgroup_local_id + 1) : _GLF_FUZZED(workgroup_id))) % subgroup_size), max(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(virtual_gid))))) + 1) % subgroup_size), max(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size)))))), uint(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(uint(uvec3(workgroup_base + subgroup_id * subgroup_size, 1u, 0u)), (uint(uvec3(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, _GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))))) * 1u) + subgroup_id * subgroup_size, 1u, 0u))) + 0u)) + _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), (true ? (subgroup_local_id + 1) : _GLF_FUZZED(workgroup_id))) % subgroup_size), max(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), max(((subgroup_local_id + 1) % subgroup_size), ((_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))) % subgroup_size))))))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) | (next_virtual_gid)), (next_virtual_gid) | 0u)], uint(1), 4, 64, 4);
 uint read = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))], 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool((false))), bool(bvec3(bool(bool((false))), false, true)))) || false)))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(subgroup_local_id + 1 < subgroup_size, true), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec3(bvec2(subgroup_local_id + 1 < subgroup_size, true), false)), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec3(bvec2(subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 + (1))) | (_GLF_IDENTITY(1, max(1, 1)))), 1)) < subgroup_size, true), false)), true), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec2(bvec3(bvec2(subgroup_local_id + 1 < subgroup_size, true), false)), true))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2(subgroup_local_id + 1 < subgroup_size, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(subgroup_local_id + 1 < subgroup_size, true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u)) >> 0u) < subgroup_size, true)), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u)) >> 0u) < subgroup_size, true)), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u)) >> 0u) < subgroup_size, true))))), false))), bvec2(bvec2(bvec2(bvec2(subgroup_local_id + 1 < subgroup_size, true)))))), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(subgroup_local_id + 1 < subgroup_size, true)), bvec2(bvec2(bvec2(bvec2(subgroup_local_id + 1 < subgroup_size, true)))))))), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(subgroup_local_id + 1 < subgroup_size, true)), bvec2(bvec2(bvec2(bvec2(subgroup_local_id + 1 < subgroup_size, true)))))))), false, false)), bvec2(bvec3(bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(subgroup_local_id + 1 < subgroup_size, true)), bvec2(bvec2(bvec2(bvec2(subgroup_local_id + 1 < subgroup_size, true)))))))), false, false)), true)))))), false, false))), false)), true)), bvec3(bvec4(bvec3(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2(subgroup_local_id + 1 < subgroup_size, true), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(subgroup_local_id + 1 < subgroup_size, true), bvec2(bvec2(bvec2(subgroup_local_id + 1 < subgroup_size, true)))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u)) >> 0u) < subgroup_size, true)), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u)) >> 0u) < subgroup_size, true)), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u)) >> 0u) < subgroup_size, true))))), false))), bvec2(bvec2(bvec2(bvec2(subgroup_local_id + 1 < subgroup_size, true)))))), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(subgroup_local_id + 1 < subgroup_size, true)), bvec2(bvec2(bvec2(bvec2(subgroup_local_id + 1 < subgroup_size, true)))))))), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(subgroup_local_id + 1 < subgroup_size, true)), bvec2(bvec2(bvec2(bvec2(subgroup_local_id + 1 < subgroup_size, true)))))))), false, false)), bvec2(bvec3(bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(subgroup_local_id + 1 < subgroup_size, true)), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u))) < subgroup_size, true)))))))), false, false)), true)))))), false, false))), false)), true)), _GLF_IDENTITY(false, ! (! (false))))))), false)))))), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec3(bvec2(subgroup_local_id + 1 < subgroup_size, true), false)), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec3(bvec2(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, 0u + (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u)))) / 1u))), true), false)), true), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec2(bvec3(bvec2(subgroup_local_id + _GLF_IDENTITY(1, (1) - 0) < subgroup_size, true), false)), true))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2(subgroup_local_id + 1 < subgroup_size, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(subgroup_local_id + 1 < subgroup_size, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, 0 | (1)), 1)) < subgroup_size, true)), bvec2(bvec2(bvec2(bvec2(subgroup_local_id + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) >> 0), 1, 1)) < subgroup_size, true))))))), false, false))), _GLF_IDENTITY(false, false || (false)))), true))), false)))))), _GLF_IDENTITY(false, (false) && true)))))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(subgroup_local_id + 1 < subgroup_size, true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(subgroup_local_id + 1 < subgroup_size, true), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(subgroup_local_id + 1 < subgroup_size, true), false), bvec3(bvec4(bvec3(bvec2(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, true, false, false)))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(true, bool(bvec4(true, true, false, false)))), true, true, true)), (bool(bvec4(! (_GLF_IDENTITY(true, bool(bvec4(true, true, false, false)))), true, true, true))) || false))))), false), true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec3(bvec2(subgroup_local_id + 1 < subgroup_size, true), false)), _GLF_IDENTITY(true, false || (true)))), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(bvec3(bvec2(bvec3(bvec2(subgroup_local_id + 1 < subgroup_size, true), false)), _GLF_IDENTITY(true, false || (true)))), bvec2(bvec3(bvec2(bvec3(bvec2(bvec3(bvec2(subgroup_local_id + 1 < subgroup_size, true), false)), _GLF_IDENTITY(true, false || (true)))), false))), true), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec2(bvec3(bvec2(bvec3(bvec2(subgroup_local_id + 1 < subgroup_size, true), false)), _GLF_IDENTITY(true, false || (true)))), true))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec2(bvec3(bvec2(bvec3(bvec2(subgroup_local_id + 1 < subgroup_size, true), false)), _GLF_IDENTITY(true, false || (true)))), true))), false))))))))), false || (bool(_GLF_IDENTITY(bvec2(subgroup_local_id + 1 < subgroup_size, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, (0u >> _GLF_IDENTITY(uint(1u), uint(1u))) | (subgroup_size)), true), false)), bvec2(bvec3(bvec2(bvec3(bvec2(subgroup_local_id + 1 < subgroup_size, true), false)), true)))))))))), (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) + 0) < subgroup_size, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(true, false || (true))), _GLF_IDENTITY(bvec2(bvec3(bvec2(subgroup_local_id + 1 < subgroup_size, true), false)), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec3(bvec2(subgroup_local_id + 1 < subgroup_size, true), false)), true), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec2(bvec3(bvec2(subgroup_local_id + 1 < subgroup_size, true), false)), true))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec2(bvec3(bvec2(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1)) < subgroup_size, true), false)), true))), false)))))))), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(subgroup_local_id + 1 < subgroup_size, true), bvec2(bvec4(bvec2(subgroup_local_id + 1 < subgroup_size, true), true, true))), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u) < _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), uint(uvec4(~ (subgroup_size), (0u | 0u), 0u, 1u)))))) / 1u), true), false)), bvec2(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (_GLF_IDENTITY(subgroup_local_id + 1, ~ (_GLF_IDENTITY(~ (subgroup_local_id + 1), 0u ^ (~ (subgroup_local_id + 1)))))))) < subgroup_size, true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(subgroup_local_id + 1 < subgroup_size, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(bvec2(subgroup_local_id + 1 < subgroup_size, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(bvec2(subgroup_local_id + 1 < subgroup_size, true), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), bvec3(bvec4(bvec3(bvec2(subgroup_local_id + 1 < subgroup_size, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))), false, false)))), false)), true))))))))) || false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   atomicStore(checker[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u), (_GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u)) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u), uint(uvec3(_GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u), 1u, 1u)))))) / 1u)], read, 4, 64, 4);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   subgroupAll(false);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), true), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), true)), bvec2(bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), true))))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, bool(bvec2(false, false))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, bool(bvec2(false, false))))))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true)))), (bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))))) || false))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   atomicStore(checker[_GLF_IDENTITY(virtual_gid, (virtual_gid) >> 0u)], read, 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   subgroupAll(true);
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x < injectionSwitch.y)), true)), _GLF_IDENTITY(true && (bool(bvec4(false, true, _GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y)), true))), false || (true && (bool(bvec4(false, true, _GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y)), true))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), true && (bool(bvec4(false, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((false ? _GLF_FUZZED(mix(95.23, 4331.6089, (bvec3(false, true, false) == bvec3(false, true, true)))) : _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), max(_GLF_IDENTITY((false ? _GLF_FUZZED(mix(95.23, 4331.6089, (bvec3(false, true, false) == bvec3(false, true, true)))) : _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), (_GLF_IDENTITY((false ? _GLF_FUZZED(mix(95.23, 4331.6089, (bvec3(false, true, false) == bvec3(false, true, true)))) : _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), max((false ? _GLF_FUZZED(mix(95.23, 4331.6089, (bvec3(false, true, false) == bvec3(false, true, true)))) : _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), (false ? _GLF_FUZZED(mix(95.23, 4331.6089, (bvec3(false, true, false) == bvec3(false, true, true)))) : _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))))) / 1.0), (false ? _GLF_FUZZED(mix(95.23, 4331.6089, (bvec3(false, true, false) == bvec3(false, true, true)))) : _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))))) < injectionSwitch.y)), true))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), true && (bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), true && (bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))), ! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), true && (bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))))))) || false), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y)), injectionSwitch.y)))), true)), true && (bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))) || false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(89258)), _GLF_FUZZED(1.1)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(89258)), _GLF_FUZZED(1.1)), vec2(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(float(mat2x3((injectionSwitch)[0], 0.0, 1.0, 1.0, 0.0, 0.0)), max(float(mat2x3((injectionSwitch)[0], 0.0, 1.0, 1.0, 0.0, 0.0)), float(mat2x3((injectionSwitch)[0], 0.0, 1.0, 1.0, 0.0, 0.0))))), _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(89258)), _GLF_FUZZED(1.1)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], clamp((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))[1], (injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x < injectionSwitch.y)))))))) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(89258)), _GLF_FUZZED(1.1)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))).x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(float(true)), _GLF_IDENTITY(_GLF_FUZZED(60.30), clamp(_GLF_IDENTITY(_GLF_FUZZED(60.30), clamp(_GLF_FUZZED(60.30), _GLF_FUZZED(60.30), _GLF_FUZZED(60.30))), _GLF_FUZZED(60.30), _GLF_FUZZED(60.30)))), bvec2(false, false))), injectionSwitch)).x > injectionSwitch.y))))))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
