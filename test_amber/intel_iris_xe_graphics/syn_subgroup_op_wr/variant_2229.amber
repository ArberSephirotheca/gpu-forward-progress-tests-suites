#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, abs(0.0), 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, abs(0.0), 0.0), vec4(0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec2(1.0, 0.0), (vec2(1.0, 0.0)) * vec2(1.0, 1.0))))), float(_GLF_FUZZED(-708.775)), bool(false))), 0.0, 0.0))), 0.0, sqrt(0.0), 0.0, 1.0, 1.0, 1.0, sqrt(sin(0.0)), 1.0, 1.0, 1.0, sqrt(exp(0.0)), 0.0, 0.0, log(_GLF_ONE(1.0, injectionSwitch.y))))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), mix(vec2((vec2(injectionSwitch[0], injectionSwitch[1]))[0], (vec2(injectionSwitch[0], injectionSwitch[1]))[1]), vec2(_GLF_FUZZED(-93.82), _GLF_FUZZED(1.4)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))).x > injectionSwitch.y)), true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), mix(vec2((vec2(injectionSwitch[0], injectionSwitch[1]))[0], (vec2(injectionSwitch[0], injectionSwitch[1]))[1]), vec2(_GLF_FUZZED(-93.82), _GLF_FUZZED(1.4)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))).x > injectionSwitch.y)), true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), mix(vec2((vec2(injectionSwitch[0], injectionSwitch[1]))[0], (vec2(injectionSwitch[0], injectionSwitch[1]))[1]), vec2(_GLF_FUZZED(-93.82), _GLF_FUZZED(1.4)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))).x > injectionSwitch.y)), true, false))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), mix(vec2((vec2(injectionSwitch[0], injectionSwitch[1]))[0], (vec2(injectionSwitch[0], injectionSwitch[1]))[1]), vec2(_GLF_FUZZED(-93.82), _GLF_FUZZED(1.4)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))).x > injectionSwitch.y)), true, false))), false)))), true))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, 0 + (1))])).x > injectionSwitch.y)), true, false), _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((false), ((false)) && true))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1])), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], 0.0 + (_GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(5.6)), float(injectionSwitch[1]), bool(true))))))).x > injectionSwitch.y)), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), clamp(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1])))).x, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)) > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)), true, false), false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1])), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], 0.0 + (_GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(5.6)), float(injectionSwitch[1]), bool(true))))))).x > injectionSwitch.y)), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), clamp(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1])))).x, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)) > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)), true, false), false))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1])), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], 0.0 + (_GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(5.6)), float(injectionSwitch[1]), bool(true))))))).x > injectionSwitch.y)), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), clamp(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1]), vec2(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)) > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])))).x, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])))).x, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])))).x, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])))).x)) > injectionSwitch.y)), true, false), false)))))) || false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false)), bool(bvec4(_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false)), true && (bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bool(bvec3(bool(bvec3(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), true, true)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, bool(bvec3(true, false, false))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(gl_NumWorkGroups[0], 0u | (gl_NumWorkGroups[0])), gl_NumWorkGroups[_GLF_IDENTITY(1, (1) | (1))], gl_NumWorkGroups[2])).x, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) ? _GLF_FUZZED((subgroup_id % subgroup_local_id)) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)), uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])).x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)), uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])).x) ^ 0u), _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])).x) - 0u, max(_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], _GLF_IDENTITY(gl_NumWorkGroups, ~ (_GLF_IDENTITY(~ (gl_NumWorkGroups), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? ~ (gl_NumWorkGroups) : _GLF_FUZZED(uvec3(68523u, 54499u, 58798u))))))[1], gl_NumWorkGroups[2])).x) - 0u, (_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], _GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups)))[1], gl_NumWorkGroups[2])).x) - 0u, ((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], _GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups)))[1], gl_NumWorkGroups[2])).x) - 0u) << (0u >> _GLF_IDENTITY(uint(7u), uint(7u))))) ^ 0u), (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[_GLF_IDENTITY(2, max(2, 2))]), uvec3(_GLF_IDENTITY(uvec4(uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2]), uint(_GLF_ZERO(0.0, injectionSwitch.x))), min(uvec4(uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2]), uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(uvec4(uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2]), uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec4(0u, 0u, 0u, 0u) + (uvec4(uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2]), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))))).x) - 0u)))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(62.03)), bool(false)))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).x > injectionSwitch.y))), true)), ! (! (bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).x > injectionSwitch.y))), true))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).x > injectionSwitch.y))), true)), ! (! (bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).x > injectionSwitch.y))), true))))), false || (_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).x > injectionSwitch.y))) || false)))), true)), ! (! (bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).x > injectionSwitch.y))), true)))))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) << _GLF_IDENTITY(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) ^ 0u, ((0u) ^ 0u) / 1u))) ^ ((0u >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) | (_GLF_IDENTITY(uint(4u), (48601u & 0u) | (uint(4u))))))) | (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), min(_GLF_IDENTITY(uint(6u), uint(6u)), _GLF_IDENTITY(uint(6u), uint(6u))))))) ^ (0u)));
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, clamp(_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) ^ 0u)) - 0u), _GLF_IDENTITY(gl_WorkGroupID.x, ~ (~ (gl_WorkGroupID.x))), _GLF_IDENTITY(gl_WorkGroupID.x, uint(uint(_GLF_IDENTITY(gl_WorkGroupID.x, 0u | (gl_WorkGroupID.x))))))), (true ? _GLF_IDENTITY(gl_WorkGroupID.x, clamp(_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) ^ 0u)) - 0u), gl_WorkGroupID.x, gl_WorkGroupID.x)) : _GLF_FUZZED(clamp(num_workgroup, subgroup_size, 14653u))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec2(injectionSwitch.x, 0.0), mix(vec2(_GLF_FUZZED(-1.1), _GLF_FUZZED(2.2)), vec2((vec2(injectionSwitch.x, 0.0))[0], (vec2(injectionSwitch.x, 0.0))[_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), ~ (~ (_GLF_IDENTITY(~ (1), (true ? ~ (1) : _GLF_FUZZED(-93794))))))))]), bvec2(true, true))), vec2(_GLF_IDENTITY(vec3(vec2(injectionSwitch.x, 0.0), 1.0), clamp(vec3(vec2(injectionSwitch.x, 0.0), 1.0), vec3(vec2(injectionSwitch.x, 0.0), 1.0), vec3(vec2(injectionSwitch.x, 0.0), 1.0))))), _GLF_IDENTITY(max(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) - vec2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))), ((injectionSwitch) - vec2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))) + vec2(0.0, 0.0))).x, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4x3(0.0, sin(0.0), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, exp(0.0)), mat4x3(mat4x3(mat4x3(0.0, sin(0.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED((55.77 + 31.75)) : 0.0)), 1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), 0.0, 0.0, 1.0, _GLF_IDENTITY(exp(0.0), max(exp(0.0), exp(0.0)))))))))), vec2(mat4(vec2(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(8525.4080, 2.1)) : injectionSwitch))) - vec2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))).x, 0.0), 1.0, abs(sin(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-715.365)), float(0.0), bool(true))))), 1.0, abs(0.0), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(log(1.0), 1.0), vec2(0.0, 1.0)), (dot(vec2(log(1.0), 1.0), vec2(0.0, 1.0))) + abs(0.0)), dot(vec2(log(1.0), 1.0), vec2(0.0, 1.0))), sqrt(0.0), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)), 0.0)), (true ? max(_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), mix(float(_GLF_FUZZED(3657.9830)), float(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), float(mat3x4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0)))), bool(true))))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(0.0, min(0.0, 0.0))))) * vec2(1.0, 1.0)).x, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4x3(0.0, sin(0.0), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-92.71) : 0.0)), 0.0, 1.0, 0.0)), clamp(float(mat2(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-92.71) : 0.0)), 0.0, 1.0, 0.0)), float(mat2(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-92.71) : 0.0)), 0.0, 1.0, 0.0)), float(mat2(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-92.71) : 0.0)), 0.0, 1.0, 0.0))))), 1.0, exp(0.0)), mat4x3(mat4x3(mat4x3(0.0, sin(0.0), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, exp(0.0)))))))), vec2(_GLF_IDENTITY(mat4(vec2(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(8525.4080, 2.1)) : injectionSwitch))) - vec2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))).x, 0.0), 1.0, abs(sin(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-715.365)), float(0.0), bool(true))))), 1.0, abs(0.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(log(1.0), 1.0), vec2(0.0, 1.0)), (dot(vec2(log(1.0), 1.0), vec2(0.0, 1.0))) + abs(0.0)), _GLF_IDENTITY(dot(vec2(log(1.0), 1.0), vec2(0.0, 1.0)), (true ? _GLF_IDENTITY(dot(vec2(log(1.0), 1.0), vec2(0.0, 1.0)), max(dot(vec2(log(1.0), 1.0), vec2(0.0, 1.0)), dot(vec2(log(1.0), 1.0), vec2(0.0, 1.0)))) : _GLF_FUZZED(-7.8)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(log(1.0), 1.0), vec2(0.0, 1.0)), (dot(vec2(log(1.0), 1.0), vec2(0.0, 1.0))) + abs(0.0)), _GLF_IDENTITY(dot(vec2(log(1.0), 1.0), vec2(0.0, 1.0)), (true ? _GLF_IDENTITY(dot(vec2(log(1.0), 1.0), vec2(0.0, 1.0)), max(dot(vec2(log(1.0), 1.0), vec2(0.0, 1.0)), dot(vec2(log(1.0), 1.0), vec2(0.0, 1.0)))) : _GLF_FUZZED(-7.8)))), max(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(log(1.0), 1.0), vec2(0.0, 1.0)), (dot(vec2(log(1.0), 1.0), vec2(0.0, 1.0))) + abs(0.0)), _GLF_IDENTITY(dot(vec2(log(1.0), 1.0), vec2(0.0, 1.0)), (true ? _GLF_IDENTITY(dot(vec2(log(1.0), 1.0), vec2(0.0, 1.0)), max(dot(vec2(log(1.0), 1.0), vec2(0.0, 1.0)), dot(vec2(log(1.0), 1.0), vec2(0.0, 1.0)))) : _GLF_FUZZED(-7.8)))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(log(1.0), 1.0), vec2(0.0, 1.0)), (dot(vec2(log(1.0), 1.0), vec2(0.0, 1.0))) + abs(0.0)), _GLF_IDENTITY(dot(vec2(log(1.0), 1.0), vec2(0.0, 1.0)), (true ? _GLF_IDENTITY(dot(vec2(log(1.0), 1.0), vec2(0.0, 1.0)), max(dot(vec2(log(1.0), 1.0), vec2(0.0, 1.0)), dot(vec2(log(1.0), 1.0), vec2(0.0, 1.0)))) : _GLF_FUZZED(-7.8))))))) + determinant(mat4(0.0, 1.0, 0.0, 1.0, abs(0.0), determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, tan(0.0), abs(0.0), 0.0, sin(0.0), 0.0, 0.0))), sqrt(0.0), _GLF_IDENTITY(1.0, float(mat3x4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, exp(0.0), round(length(normalize(vec2(1.0, 1.0)))), sin(0.0), 0.0, 1.0, 1.0))), _GLF_IDENTITY(1.0, (1.0) + length(vec4(0.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0), (mat4(vec2(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(vec2(8525.4080, 2.1)) : injectionSwitch))) - vec2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))).x, 0.0), 1.0, abs(sin(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-715.365)), float(0.0), bool(true))))), 1.0, abs(0.0), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(log(1.0), 1.0), vec2(0.0, 1.0)), (dot(vec2(log(1.0), 1.0), vec2(0.0, 1.0))) + abs(0.0)), _GLF_IDENTITY(dot(vec2(log(1.0), 1.0), vec2(0.0, 1.0)), (_GLF_IDENTITY(true ? _GLF_IDENTITY(dot(vec2(log(1.0), _GLF_IDENTITY(1.0, max(1.0, 1.0))), vec2(0.0, 1.0)), max(dot(vec2(log(1.0), 1.0), vec2(0.0, 1.0)), dot(vec2(log(1.0), 1.0), vec2(0.0, 1.0)))) : _GLF_FUZZED(_GLF_IDENTITY(-7.8, (true ? -7.8 : _GLF_FUZZED(5.2)))), mix(float(_GLF_FUZZED(9534.4839)), float(_GLF_IDENTITY(true ? _GLF_IDENTITY(dot(vec2(log(1.0), _GLF_IDENTITY(1.0, max(1.0, 1.0))), vec2(0.0, 1.0)), max(dot(vec2(log(1.0), 1.0), vec2(0.0, 1.0)), dot(vec2(log(1.0), 1.0), vec2(0.0, 1.0)))) : _GLF_FUZZED(_GLF_IDENTITY(-7.8, (true ? -7.8 : _GLF_FUZZED(5.2)))), clamp(true ? _GLF_IDENTITY(dot(vec2(log(1.0), _GLF_IDENTITY(1.0, max(1.0, 1.0))), vec2(0.0, 1.0)), max(dot(vec2(log(1.0), 1.0), vec2(0.0, 1.0)), dot(vec2(log(1.0), 1.0), vec2(0.0, 1.0)))) : _GLF_FUZZED(_GLF_IDENTITY(-7.8, (true ? -7.8 : _GLF_FUZZED(5.2)))), true ? _GLF_IDENTITY(dot(vec2(log(1.0), _GLF_IDENTITY(1.0, max(1.0, 1.0))), vec2(0.0, 1.0)), max(dot(vec2(log(1.0), 1.0), vec2(0.0, 1.0)), dot(vec2(log(1.0), 1.0), vec2(0.0, 1.0)))) : _GLF_FUZZED(_GLF_IDENTITY(-7.8, (true ? -7.8 : _GLF_FUZZED(5.2)))), _GLF_IDENTITY(true ? _GLF_IDENTITY(dot(vec2(log(1.0), _GLF_IDENTITY(1.0, max(1.0, 1.0))), vec2(0.0, 1.0)), max(dot(vec2(log(1.0), 1.0), vec2(0.0, 1.0)), dot(vec2(log(1.0), 1.0), vec2(0.0, 1.0)))) : _GLF_FUZZED(_GLF_IDENTITY(-7.8, (true ? -7.8 : _GLF_FUZZED(5.2)))), (true ? _GLF_IDENTITY(dot(vec2(log(1.0), _GLF_IDENTITY(1.0, max(1.0, 1.0))), vec2(0.0, 1.0)), max(dot(vec2(log(1.0), 1.0), vec2(0.0, 1.0)), dot(vec2(log(1.0), 1.0), vec2(0.0, 1.0)))) : _GLF_FUZZED(_GLF_IDENTITY(-7.8, (true ? -7.8 : _GLF_FUZZED(5.2))))) - 0.0)))), bool(true)))))), sqrt(0.0), 1.0, _GLF_IDENTITY(1.0, (1.0) + length(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), mix(vec4((vec4(0.0, 0.0, 0.0, 0.0))[0], _GLF_FUZZED((vec4(1120.6395, 4234.5185, -9033.5796, -47.13) * mat3x4(9630.6457, -4.1, 1.2, -142.678, -7623.5442, 8644.7857, 5.0, -6583.8339, -8.6, 5.6, 64.81, 4.8)).b), (vec4(0.0, 0.0, 0.0, 0.0))[2], _GLF_FUZZED(344.086)), vec4(_GLF_FUZZED(-9530.9859), (vec4(0.0, 0.0, 0.0, 0.0))[1], _GLF_FUZZED(-6.0), (vec4(0.0, 0.0, 0.0, 0.0))[3]), bvec4(false, _GLF_IDENTITY(true, (true) && true), false, true))))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))), vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), mix(vec2((vec2(injectionSwitch[0], injectionSwitch[1]))[0], (vec2(injectionSwitch[0], injectionSwitch[1]))[1]), vec2(_GLF_FUZZED(0.4), _GLF_FUZZED(-7.3)), bvec2(false, false)))).x, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x), (min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))) - vec2(0.0, 0.0)).x, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)) + 0.0)), 0.0)) : _GLF_FUZZED(vec2(7.3, -0.2))))))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true)))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true)))), ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y) && true)))))))))), false))))) && (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y))))), true && (! (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y))))))))))))) || false)) && true), ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, _GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)), (bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))) && true)), (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(false, true, _GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)), (bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))) && true)), (injectionSwitch.x < injectionSwitch.y))))))))))), true)))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(subgroup_id) : subgroup_local_id));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) * _GLF_IDENTITY(1u, ~ (~ (1u)))) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY((subgroup_size), uint(_GLF_IDENTITY(uint((subgroup_size)), (_GLF_IDENTITY(uint((subgroup_size)), (true ? uint((subgroup_size)) : _GLF_FUZZED(workgroup_base)))) << 0u)))), min(subgroup_id * subgroup_size, subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u))), (_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), subgroup_id * subgroup_size))) << 0u), _GLF_IDENTITY(max(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uint(subgroup_id), (_GLF_IDENTITY(uint(subgroup_id), min(uint(subgroup_id), _GLF_IDENTITY(uint(subgroup_id), (true ? uint(subgroup_id) : _GLF_FUZZED(num_workgroup)))))) - 0u))) * subgroup_size, subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) << 0u), _GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) << 0u)), min(max(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uint(subgroup_id), (_GLF_IDENTITY(uint(subgroup_id), min(uint(subgroup_id), _GLF_IDENTITY(uint(subgroup_id), (true ? uint(subgroup_id) : _GLF_FUZZED(num_workgroup)))))) - 0u))) * subgroup_size, subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) << 0u), _GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) << 0u)), max(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uint(subgroup_id), (_GLF_IDENTITY(uint(subgroup_id), min(uint(subgroup_id), _GLF_IDENTITY(uint(subgroup_id), (true ? uint(subgroup_id) : _GLF_FUZZED(num_workgroup)))))) - 0u))) * subgroup_size, subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) << 0u), _GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) << 0u))))), max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) * _GLF_IDENTITY(1u, _GLF_IDENTITY(~ (~ (1u)), ~ (~ (~ (~ (1u))))))) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), subgroup_id * subgroup_size))) << 0u), max(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uint(subgroup_id), (_GLF_IDENTITY(uint(subgroup_id), min(uint(subgroup_id), _GLF_IDENTITY(uint(subgroup_id), (true ? uint(subgroup_id) : _GLF_FUZZED(num_workgroup)))))) - 0u))) * subgroup_size, subgroup_id * subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) ^ 0u)) << 0u), _GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)) * subgroup_size, subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) << 0u))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) * _GLF_IDENTITY(1u, ~ (~ (1u)))) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_size) : subgroup_size)), (subgroup_size) | (subgroup_size)), min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), subgroup_id * subgroup_size))) << 0u), max(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uint(subgroup_id), (_GLF_IDENTITY(uint(subgroup_id), min(uint(subgroup_id), _GLF_IDENTITY(uint(subgroup_id), (true ? uint(subgroup_id) : _GLF_FUZZED(num_workgroup)))))) - 0u))) * subgroup_size, subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) << 0u), _GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(min(subgroup_id * subgroup_size, subgroup_id * subgroup_size), (_GLF_IDENTITY(min(subgroup_id * subgroup_size, subgroup_id * subgroup_size), (min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)) | 0u)) | (_GLF_IDENTITY(min(subgroup_id * subgroup_size, subgroup_id * subgroup_size), (min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)) * 1u))))) << 0u))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) * _GLF_IDENTITY(1u, ~ (~ (1u)))) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), subgroup_id * subgroup_size))) << 0u), max(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uint(subgroup_id), (_GLF_IDENTITY(uint(subgroup_id), min(uint(subgroup_id), _GLF_IDENTITY(uint(subgroup_id), (true ? uint(subgroup_id) : _GLF_FUZZED(num_workgroup)))))) - 0u))) * subgroup_size, subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) << 0u), _GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) << 0u))) : _GLF_FUZZED(workgroup_id))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (subgroup_size) | (subgroup_size)), min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (1u ^ 0u) * (subgroup_id * subgroup_size)), min(subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), subgroup_id * subgroup_size))), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (1u ^ 0u) * (subgroup_id * subgroup_size)), min(subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), subgroup_id * subgroup_size)))) ^ _GLF_IDENTITY(0u, ~ (~ (0u)))) << 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)), (workgroup_base) * 1u) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uint(subgroup_id), (uint(_GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(subgroup_id))))))) - 0u))) * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), (_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u))), subgroup_id * subgroup_size)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size)), min(subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(subgroup_id))))) * subgroup_size, 0u + (subgroup_id * subgroup_size))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size)), min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u))), clamp(uint(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u))), uint(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u))), uint(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u)))))), subgroup_size, subgroup_size)), 0u + (subgroup_id * subgroup_size))))), 0u + ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size)), min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (subgroup_id * subgroup_size)))))))) >> 0u) << 0u), _GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u) + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(uvec2(subgroup_id, ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)))))), uint(uvec2(_GLF_IDENTITY(subgroup_id, uint(uvec2(subgroup_id, ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)))))), 0u))) * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) << 0u))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), (workgroup_base) * 1u) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) + 0u), min(_GLF_IDENTITY(subgroup_id * subgroup_size, (true ? subgroup_id * subgroup_size : _GLF_FUZZED(workgroup_base))), _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(subgroup_size) : subgroup_id)) * subgroup_size))) * ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))) | (_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) / ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u)))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) << 0u)) << 0u), 1u, (0u << _GLF_IDENTITY(uint(6u), uint(6u)))))), min(subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), subgroup_id * subgroup_size))) << 0u), max(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(subgroup_id), (uint(subgroup_id)) - 0u), clamp(_GLF_IDENTITY(uint(subgroup_id), (uint(subgroup_id)) - 0u), _GLF_IDENTITY(uint(subgroup_id), _GLF_IDENTITY((uint(subgroup_id)), ((uint(subgroup_id))) << (0u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) << 0u)))) - 0u), _GLF_IDENTITY(uint(subgroup_id), (uint(subgroup_id)) - 0u))))), min(_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(subgroup_id), (uint(subgroup_id)) << 0u), (uint(subgroup_id)) - 0u))), _GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uint(subgroup_id), (uint(subgroup_id)) - 0u))))) * subgroup_size, subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) << 0u), _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), max((workgroup_base), _GLF_IDENTITY((workgroup_base), ~ (~ (_GLF_IDENTITY((workgroup_base), 0u | ((workgroup_base)))))))) * 1u) + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id, (1u | 1u) * (subgroup_id)) * subgroup_size, subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))), subgroup_id * subgroup_size))) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) << 0u)) << 0u))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u), (true ? _GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u) : _GLF_FUZZED(subgroup_id))) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) | (subgroup_size), ((subgroup_size) | (subgroup_size)) | ((_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) | (subgroup_size)))), min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), subgroup_id * subgroup_size))) >> (0u | _GLF_IDENTITY(0u, (0u) - 0u)))) << 0u), max(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u) + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uint(subgroup_id), (uint(subgroup_id)) - 0u))) * subgroup_size, subgroup_id * subgroup_size)), max(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uint(subgroup_id), (uint(subgroup_id)) - 0u))) * subgroup_size, subgroup_id * subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(subgroup_id), (uint(subgroup_id)) | (uint(subgroup_id))), (uint(subgroup_id)) - 0u))) * subgroup_size, subgroup_id * subgroup_size)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uint(subgroup_id), (uint(subgroup_id)) - 0u))), (_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uint(subgroup_id), (uint(_GLF_IDENTITY(subgroup_id, uint(uvec3(_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 1u, 1u))), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))))))) - 0u)))) / (1u & (1u & 1u))) * subgroup_size, subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u))), 0u | (_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uint(subgroup_id), (uint(subgroup_id)) - 0u))) * subgroup_size, (false ? _GLF_FUZZED((+ (subgroup_id))) : _GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uint(subgroup_id), (uint(subgroup_id)) - 0u))) * subgroup_size)), subgroup_id * subgroup_size))))))))), (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), min(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) << 0u), _GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u) + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), min(subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), 0u + (subgroup_size)), subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), min(subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), 0u + (subgroup_size)), subgroup_id * subgroup_size))) ^ 0u), (_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) << 0u))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), 1u * (_GLF_IDENTITY((workgroup_base), ~ (_GLF_IDENTITY(~ ((workgroup_base)), _GLF_IDENTITY((~ ((workgroup_base))) - 0u, ~ (~ ((~ ((workgroup_base))) - 0u)))))))) * _GLF_IDENTITY(1u, _GLF_IDENTITY(0u | (1u), uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u | (1u)), (uint(0u | (1u))) >> 0u), uint(uvec2(uint(0u | (1u)), 1u))))))) + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) / ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(5u), uint(5u)), min(1u << _GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(1u << _GLF_IDENTITY(uint(5u), uint(5u)), (false ? _GLF_FUZZED(subgroup_local_id) : 1u << _GLF_IDENTITY(uint(5u), uint(5u))))))) >> _GLF_IDENTITY(uint(5u), uint(5u)))) * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (subgroup_size) | (subgroup_size)), min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (0u << _GLF_IDENTITY(uint(3u), uint(3u))) | (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))), min(subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), subgroup_id * subgroup_size))) << 0u), max(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uint(subgroup_id), (uint(subgroup_id)) - 0u))) * subgroup_size, subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) << 0u), _GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u) + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) << _GLF_IDENTITY(0u, (0u) | (0u))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (subgroup_id)) * subgroup_size, subgroup_id * subgroup_size)), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)) * _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_id * subgroup_size))) << 0u, uint(uvec3((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), max(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), _GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size))))) << 0u, 0u, 1u))))) | 0u)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), (false ? _GLF_FUZZED(subgroup_id) : (workgroup_base))) * 1u, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), (false ? _GLF_FUZZED(subgroup_id) : (workgroup_base))) * 1u, (_GLF_IDENTITY((workgroup_base), (false ? _GLF_FUZZED(subgroup_id) : (workgroup_base))) * 1u) << 0u), 0u), (uvec2(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), (false ? _GLF_FUZZED(subgroup_id) : (workgroup_base))) * 1u, (_GLF_IDENTITY((workgroup_base), (false ? _GLF_FUZZED(subgroup_id) : (workgroup_base))) * 1u) << 0u), 0u)) << uvec2(0u, 0u))))) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), _GLF_IDENTITY(min(subgroup_id * subgroup_size, subgroup_id * subgroup_size), 0u | (min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)))), (_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), subgroup_size)), subgroup_id * subgroup_size))) << 0u), 0u + (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), (false ? _GLF_FUZZED(subgroup_id) : (workgroup_base))) * 1u, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_id) : (workgroup_base)), min((false ? _GLF_FUZZED(subgroup_id) : (workgroup_base)), (false ? _GLF_FUZZED(subgroup_id) : (workgroup_base))))) * 1u, (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (false ? _GLF_FUZZED(subgroup_id) : (workgroup_base))) * 1u) << 0u), 0u), (uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), (false ? _GLF_FUZZED(subgroup_id) : (workgroup_base))) * 1u, (_GLF_IDENTITY((workgroup_base), (false ? _GLF_FUZZED(subgroup_id) : (workgroup_base))) * 1u) << 0u), max(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), (false ? _GLF_FUZZED(subgroup_id) : (workgroup_base))) * 1u, (_GLF_IDENTITY((workgroup_base), (false ? _GLF_FUZZED(subgroup_id) : (workgroup_base))) * 1u) << 0u), _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), (false ? _GLF_FUZZED(subgroup_id) : (workgroup_base))) * 1u, (_GLF_IDENTITY((workgroup_base), (false ? _GLF_FUZZED(subgroup_id) : (workgroup_base))) * 1u) << 0u))), 0u)) << uvec2(0u, 0u))))) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), _GLF_IDENTITY(min(subgroup_id * subgroup_size, subgroup_id * subgroup_size), 0u | (min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), subgroup_size)), subgroup_id * subgroup_size)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), subgroup_size)), subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), subgroup_size)), subgroup_id * subgroup_size))) << (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))))))) << 0u))), max(_GLF_IDENTITY(workgroup_base, (workgroup_base) * _GLF_IDENTITY(1u, 0u ^ (1u))) + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(subgroup_id), (uint(subgroup_id)) - 0u)), 0u | (uint(_GLF_IDENTITY(uint(subgroup_id), (uint(subgroup_id)) - 0u))))), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uint(subgroup_id), (uint(subgroup_id)) - 0u))), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))))), max(uint(uvec2(_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uint(subgroup_id), (uint(subgroup_id)) - 0u))), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))))), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uint(subgroup_id), (uint(subgroup_id)) - 0u))), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))))), (uint(uvec2(_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uint(subgroup_id), (uint(subgroup_id)) - 0u))), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))))) + uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) * subgroup_size, subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) << 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uint(subgroup_id), (uint(subgroup_id)) - 0u))), uint(uvec2(_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uint(subgroup_id), (uint(subgroup_id)) - 0u))), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))))) * subgroup_size, subgroup_id * _GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(num_workgroup))))), (_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uint(subgroup_id), (uint(subgroup_id)) - 0u))), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uint(subgroup_id), (uint(subgroup_id)) - 0u))), ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(uint(0u), uint(0u))) / 1u)) | (_GLF_IDENTITY(uint(0u), uint(0u))))) >> _GLF_IDENTITY(uint(0u), uint(0u))))), 0u | (uint(uvec2(_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uint(subgroup_id), (uint(subgroup_id)) - 0u))), ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(uint(0u), uint(0u))) / 1u)) | (_GLF_IDENTITY(uint(0u), uint(0u))))) >> _GLF_IDENTITY(uint(0u), uint(0u)))))))) * subgroup_size, subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) << _GLF_IDENTITY(0u, (0u) ^ 0u)), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uint(subgroup_id), (uint(subgroup_id)) - 0u))), uint(uvec2(_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uint(subgroup_id), (uint(subgroup_id)) - 0u))), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))))) * subgroup_size, subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) << 0u), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uint(subgroup_id), (uint(subgroup_id)) - 0u))), uint(uvec2(_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uint(subgroup_id), (uint(subgroup_id)) - 0u))), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))))) * subgroup_size, subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) << 0u)), (true ? uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uint(subgroup_id), (uint(subgroup_id)) - 0u))), uint(uvec2(_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uint(subgroup_id), (uint(subgroup_id)) - 0u))), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))))) * subgroup_size, subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) << 0u)) : _GLF_FUZZED(workgroup_size)))), max(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uint(subgroup_id), (uint(subgroup_id)) - 0u))), uint(uvec2(_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uint(subgroup_id), (uint(subgroup_id)) - 0u))), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))))) * subgroup_size, subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) << 0u)), (true ? uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uint(subgroup_id), (uint(subgroup_id)) - 0u))), uint(uvec2(_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uint(subgroup_id), (uint(subgroup_id)) - 0u))), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))))) * subgroup_size, subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) << 0u)) : _GLF_FUZZED(workgroup_size)))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uint(subgroup_id), (uint(subgroup_id)) - 0u))), uint(uvec2(_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uint(subgroup_id), (uint(subgroup_id)) - 0u))), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))))) * subgroup_size, subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) << 0u)), (true ? uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uint(subgroup_id), (uint(subgroup_id)) - 0u))), uint(uvec2(_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uint(subgroup_id), (uint(subgroup_id)) - 0u))), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))))) * subgroup_size, subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) << 0u)) : _GLF_FUZZED(workgroup_size))))))))))), _GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)))))) << 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY((subgroup_size), uint(uvec3((subgroup_size), 0u, 0u)))), _GLF_IDENTITY(min(subgroup_id * subgroup_size, subgroup_id * subgroup_size), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(min(subgroup_id * subgroup_size, subgroup_id * subgroup_size), uint(_GLF_IDENTITY(uvec2(min(subgroup_id * subgroup_size, subgroup_id * subgroup_size), 1u), clamp(uvec2(min(subgroup_id * subgroup_size, subgroup_id * subgroup_size), 1u), uvec2(min(subgroup_id * subgroup_size, subgroup_id * subgroup_size), 1u), uvec2(min(subgroup_id * subgroup_size, subgroup_id * subgroup_size), 1u))))) : _GLF_FUZZED(166155u)))), (_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(max(subgroup_size, subgroup_size), max(max(subgroup_size, subgroup_size), _GLF_IDENTITY(max(subgroup_size, subgroup_size), 0u ^ (_GLF_IDENTITY(max(subgroup_size, subgroup_size), (max(subgroup_size, subgroup_size)) >> 0u)))))), subgroup_id * subgroup_size))) << 0u), max(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uint(subgroup_id), (uint(subgroup_id)) - 0u))) * subgroup_size, subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) << 0u), _GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), subgroup_id * subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(uvec3(subgroup_id * subgroup_size, 0u, 1u)), (true ? uint(uvec3(subgroup_id * subgroup_size, 0u, 1u)) : _GLF_FUZZED(workgroup_size)))))), min(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) << 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) * 1u, 1u * (_GLF_IDENTITY((workgroup_base) * 1u, (_GLF_IDENTITY((workgroup_base) * 1u, ~ (~ ((workgroup_base) * 1u)))) - 0u)))) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), subgroup_size)), (subgroup_size) | (subgroup_size)), min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(max(subgroup_size, subgroup_size), max(max(subgroup_size, subgroup_size), _GLF_IDENTITY(max(subgroup_size, subgroup_size), 0u ^ (_GLF_IDENTITY(max(subgroup_size, subgroup_size), (max(subgroup_size, subgroup_size)) >> 0u)))))), subgroup_id * subgroup_size))) << _GLF_IDENTITY(0u, (0u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), clamp(uint(2u), uint(2u), uint(2u))))) ^ (0u))), max(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uint(subgroup_id), (uint(subgroup_id)) - 0u))) * subgroup_size, subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) << 0u), _GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(min(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), subgroup_id * subgroup_size), (min(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), subgroup_id * subgroup_size)) << 0u)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(uvec3(subgroup_id * subgroup_size, 0u, 1u)), (true ? uint(uvec3(subgroup_id * subgroup_size, 0u, 1u)) : _GLF_FUZZED(workgroup_size)))))), min(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) << 0u, max((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(uvec3(subgroup_id * subgroup_size, 0u, 1u)), (true ? uint(uvec3(subgroup_id * subgroup_size, 0u, 1u)) : _GLF_FUZZED(workgroup_size)))))), min(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) << 0u, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(uvec3(subgroup_id * subgroup_size, 0u, 1u)), (true ? uint(uvec3(subgroup_id * subgroup_size, 0u, 1u)) : _GLF_FUZZED(workgroup_size)))))), min(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) << 0u)))))) ^ (0u >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) | 0u))))) << (0u << _GLF_IDENTITY(uint(4u), uint(4u)))))) + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + 1), max((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + 1, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + 1, 1u, ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(4u), uint(4u)), (1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, 1u * (4u))), uint(4u))) - 0u)) >> _GLF_IDENTITY(uint(4u), uint(4u)))), uvec3(0u, 0u, 0u) | (uvec3(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + 1, 1u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))))))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)))))), max(subgroup_local_id, subgroup_local_id)) + 1), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)))))), max(subgroup_local_id, subgroup_local_id)) + 1), 0u | ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)))), min(subgroup_local_id, subgroup_local_id)))))), max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)))))) + _GLF_IDENTITY(1, clamp(1, 1, 1)))))) >> 0u), max((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + 1), (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + 1))))) % subgroup_size) ^ 0u));
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(min(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) << 0u), next_virtual_gid))), _GLF_IDENTITY(1u * (_GLF_IDENTITY(min(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) << 0u), next_virtual_gid))), ~ (~ (min(_GLF_IDENTITY(next_virtual_gid, uint(uvec3(next_virtual_gid, 1u, 0u))), _GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) << 0u), next_virtual_gid))))))), ~ (_GLF_IDENTITY(~ (1u * (_GLF_IDENTITY(min(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) << 0u), next_virtual_gid))), ~ (~ (min(_GLF_IDENTITY(next_virtual_gid, uint(uvec3(next_virtual_gid, 1u, 0u))), _GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) << 0u), next_virtual_gid)))))))), (~ (1u * (_GLF_IDENTITY(min(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY((next_virtual_gid), ((next_virtual_gid)) / _GLF_IDENTITY(1u, (1u) | (1u))) << 0u), next_virtual_gid))), ~ (~ (min(_GLF_IDENTITY(next_virtual_gid, uint(uvec3(next_virtual_gid, 1u, 0u))), _GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) << 0u), next_virtual_gid))))))))) / 1u)))))], uint(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(83334) : _GLF_IDENTITY(1, (1) / _GLF_IDENTITY(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, clamp(1, 1, 1)))), min(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, clamp(1, 1, 1)))), _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, clamp(1, 1, 1)))))))))), _GLF_IDENTITY(4, _GLF_IDENTITY((4), min((4), (4))) - 0), 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(true && (_GLF_DEAD(false)), bool(bvec3(true && (_GLF_DEAD(false)), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true)))), ! (! (bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true)))))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true && (_GLF_DEAD(false)), bool(bvec3(_GLF_IDENTITY(true && (_GLF_DEAD(false)), true && (true && (_GLF_DEAD(false)))), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))).y, true && (injectionSwitch.x > injectionSwitch.y)), true, true, false)), bool(bvec4(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(2.6)), float(injectionSwitch.x), bool(true))) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), true && (injectionSwitch.x > injectionSwitch.y)), true, true, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))))), false, false, true)))))))))))))
  barrier();
 uint read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (4)), 64, _GLF_IDENTITY(0, min(0, 0)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))), true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true)), true))))))))
  barrier();
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))), (false) && true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))), _GLF_IDENTITY((false), ((false)) || false) && true))), true && (bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))), (false) && true)))))), _GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bool(false)))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(false, false)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(false, false)))), bool(bvec2(! (_GLF_IDENTITY(false, bool(bvec2(false, false)))), false)))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))))))), bool(bvec2(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))))))), false))))))), (! (bool(_GLF_IDENTITY(false, bool(bool(false)))))) && true))))), (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)) && true))), bool(bvec3(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bool(false)))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(false, false)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(false, false)))), bool(bvec2(! (_GLF_IDENTITY(false, bool(bvec2(false, false)))), false)))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))))))), bool(bvec2(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))))))), false))))))), (! (bool(_GLF_IDENTITY(false, bool(bool(false)))))) && true))))), (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)) && true))), true, false))), true && (bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))), _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))) && true, bool(bvec2((false) && true, true))))))))))), ! _GLF_IDENTITY((! (bool(bool(bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))), (false) && true))), true && (bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))), bool(bool(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bool(false))))))))), (false) && true)))))))))), bool(_GLF_IDENTITY(bvec3((! (bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))), (false) && true))), ! (! (bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))), (false) && true)))))), true && (bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))), bool(bool(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bool(false))))))))), _GLF_IDENTITY((false), ! (! ((false)))) && true)))))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))), (false) && true))), ! (! (bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))), (false) && true)))))), true && (bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))), bool(bool(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bool(false))))))))), _GLF_IDENTITY((false), ! (! ((false)))) && true))))))))))))), true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x < injectionSwitch.y), true, true, true)), false || (bool(bvec4((injectionSwitch.x < injectionSwitch.y), true, true, true))))))), bvec3(bvec4(bvec3((! (bool(bool(bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))), (false) && true))), true && (bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))), bool(bool(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bool(false))))))))), _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true), false)))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true), false))))))))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true), false)))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true), false))))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true), false)))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true), false))))))))), false || ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true), false)))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true), false))))))))))))))))) && true)))))))))), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true)))), false)))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(false, ! (! (false)))))))), (false) || false))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(! (! (! (false))), false || (! (! (! (false)))))))) && true)), (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), transpose(transpose(mat4x3(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x))))))) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-5243.9037)), vec2(_GLF_FUZZED(-897.272), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0))))).y)))), false, true))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(_GLF_IDENTITY(false, ! (! (false))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(_GLF_IDENTITY(false, ! (! (false))))))), bool(bvec4(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(_GLF_IDENTITY(false, ! (! (false))))))), false, true, true)))) && true)), false, false, false))), true, false, false)), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false))))), true, false, false)), (bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), true, false, false))) && true)) && true, false || ((_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), true, false, false)), (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bool(false))), true, false, false))) && true)) && true))), ! (! (bool(bvec4(false, true, false, _GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, true && (true)), true, true)))))))))))
      barrier();
     barrier();
    }
   atomicStore(checker[virtual_gid], _GLF_IDENTITY(read, (read) | (read)), 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(4, 0 + (_GLF_IDENTITY(4, max(4, 4)))), (_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 0, 0)), (int(ivec3(4, 0, 0))) >> 0))) - 0));
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-999.340), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(6.3), (true ? _GLF_IDENTITY(_GLF_FUZZED(6.3), max(_GLF_FUZZED(6.3), _GLF_FUZZED(6.3))) : _GLF_FUZZED(-9623.1684)))), bvec2(true, false))), (injectionSwitch) * vec2(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, min(1.0, 1.0)) : _GLF_FUZZED(28.34))), _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 1.0)).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)))).y) - 0.0)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (false) && true))), true && (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, bool(bvec2((false) && true, true)))))))))))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true)))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true))))) && true)), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(_GLF_IDENTITY(bvec3(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3(injectionSwitch.x, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), clamp(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))))), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0)), max(float(mat3(injectionSwitch.x, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), clamp(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))))), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0)), float(mat3(injectionSwitch.x, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), clamp(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))))), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0))))) > injectionSwitch.y)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec4(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, false, true)), ! (! (bool(bvec4(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, false, true)))))), ! (! (! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-2.7, 8.4)))), clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y), bool(bool((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))))))))))), false, false, _GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true), false || (false))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), false, true, false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   subgroupAll(false);
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), mix(vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))[0], (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))[1]), vec2(_GLF_FUZZED(92.86), _GLF_FUZZED(4014.9381)), bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))))))))) : injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch), (true ? _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch), clamp((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch), vec2(vec3((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch), 0.0))))) : _GLF_FUZZED(injectionSwitch)))).y, true && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(29.72), _GLF_FUZZED(2.1)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))))) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y, bool(bool(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-3.6), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(854.575, max(_GLF_IDENTITY(854.575, min(854.575, 854.575)), 854.575)))), bvec2(true, false))), (false ? _GLF_FUZZED(max(vec2(-76.77, 22.96), vec2(5.3, -183.716))) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, false)))), bool(bvec2(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, false)))), true))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, false)))), bool(bvec2(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, false)))), true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, false)))), bool(bvec2(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, false)))), true))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, false)))), bool(bvec2(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, false)))), true)))))))))))), (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-3.6), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(854.575, max(_GLF_IDENTITY(854.575, min(854.575, 854.575)), 854.575)))), bvec2(true, false))), (false ? _GLF_FUZZED(max(vec2(-76.77, 22.96), vec2(5.3, -183.716))) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, false)))), bool(bvec2(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, false)))), true))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, false)))), bool(bvec2(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, false)))), true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, false)))), bool(bvec2(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, false)))), true))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, false)))), bool(bvec2(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, false)))), true)))))))))))), (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y), float(_GLF_FUZZED(916.546)), bool(false))))))))) || false)))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    barrier();
   atomicStore(checker[virtual_gid], _GLF_IDENTITY(read, (read) + 0u), 4, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, min(64, 64))) | 0), 4);
   subgroupAll(true);
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * _GLF_ONE(1.0, injectionSwitch.y)) > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * _GLF_ONE(1.0, injectionSwitch.y)) > injectionSwitch.y)))) || false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bvec2(false, true))))), false || (! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(false, true)), bvec2(bvec2(bvec2(bvec2(false, true))))))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-8.5)), float(injectionSwitch.x), bool(true))), (true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(17.27), (_GLF_FUZZED(17.27)) - 0.0))) > injectionSwitch.y)) && true), false || _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), (injectionSwitch.x) + 0.0), injectionSwitch.x))) / 1.0), float(mat4(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), (injectionSwitch.x) + 0.0), injectionSwitch.x))) / 1.0), 0.0, 1.0, 1.0, log(1.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, abs(1.0), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0))) > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) || false)))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, true))))))), false)))), true, true))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
