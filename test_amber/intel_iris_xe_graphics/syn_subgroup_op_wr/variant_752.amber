#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_3 {
 vec4 _f0;
 uvec3 _f1;
 uint read;
 uvec2 _f2;
} ;

struct _GLF_struct_0 {
 bvec2 _f0;
 ivec3 _f1;
 uvec3 _f2;
 bvec2 _f3;
} ;

struct _GLF_struct_1 {
 vec3 _f0;
 uvec3 _f1;
 float _f2;
 mat4 _f3;
 _GLF_struct_0 _f4;
} ;

struct _GLF_struct_2 {
 _GLF_struct_1 _f0;
 uint workgroup_base;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(45308u) : _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))), injectionSwitch)).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), bool(bool((! (_GLF_DEAD(false))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, _GLF_IDENTITY(true, ! (! (true))))), bool(bvec4(bool(bvec3(false, true, true)), false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), false)))), true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), bool(bvec4(bool(bvec3(false, true, true)), false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), false))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-3.7), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6.2), _GLF_FUZZED(5925.1416)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))[0], (injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(float(-80200))), bvec2(true, false))), (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), (_GLF_FUZZED(injectionSwitch)) * mat2(1.0))))) + tan(vec2(0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4x3(0.0, 0.0, determinant(mat4(determinant(_GLF_IDENTITY(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0), mat3(1.0) * (mat3(1.0, 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0)))), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-2.2) : 1.0)), _GLF_IDENTITY(float(vec3(1.0, round(length(normalize(vec2(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))))), 1.0)), _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(float(vec3(1.0, round(_GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), max(length(normalize(vec2(1.0, 1.0))), length(normalize(vec2(1.0, 1.0)))))), 1.0)), min(float(vec3(1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0)), float(vec3(1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0)))), cos(0.0), 0.0, 1.0)), clamp(float(mat2(_GLF_IDENTITY(float(vec3(1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0)), min(float(vec3(1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0)), float(vec3(1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0)))), cos(0.0), 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(float(vec3(1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0)), min(float(vec3(1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0)), _GLF_IDENTITY(float(vec3(1.0, round(length(normalize(vec2(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, 0.0, 1.0, 0.0)), (true ? float(mat2(1.0, 0.0, 1.0, 0.0)) : _GLF_FUZZED(fma(-9.9, -0.0, 840.189))))))))), 1.0)), (_GLF_IDENTITY(float(vec3(1.0, round(length(normalize(vec2(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, 0.0, 1.0, 0.0)), (true ? float(mat2(1.0, 0.0, 1.0, 0.0)) : _GLF_FUZZED(fma(-9.9, -0.0, 840.189))))))))), 1.0)), (float(vec3(1.0, round(length(normalize(vec2(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, 0.0, 1.0, 0.0)), (true ? float(mat2(1.0, 0.0, 1.0, 0.0)) : _GLF_FUZZED(fma(-9.9, -0.0, 840.189))))))))), 1.0))) / determinant(mat2(1.0, 0.0, 1.0, 1.0)))) / 1.0))), cos(0.0), 0.0, 1.0)), 1.0 * (float(mat2(_GLF_IDENTITY(float(vec3(1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0)), min(float(vec3(1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0)), float(vec3(1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0)))), cos(0.0), 0.0, 1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(float(mat2(_GLF_IDENTITY(float(vec3(1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0)), min(float(vec3(1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0)), float(vec3(1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0)))), cos(0.0), 0.0, 1.0)), max(float(mat2(_GLF_IDENTITY(float(vec3(1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0)), min(float(vec3(1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0)), float(vec3(1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0)))), cos(0.0), 0.0, 1.0)), float(mat2(_GLF_IDENTITY(float(vec3(1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0)), min(float(vec3(1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0)), float(vec3(1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0)))), cos(0.0), 0.0, 1.0)))), clamp(_GLF_IDENTITY(float(mat2(_GLF_IDENTITY(float(vec3(1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0)), min(float(vec3(1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0)), float(vec3(1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0)))), cos(0.0), 0.0, 1.0)), max(float(mat2(_GLF_IDENTITY(float(vec3(1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0)), min(float(vec3(1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0)), float(vec3(1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0)))), cos(0.0), 0.0, 1.0)), float(mat2(_GLF_IDENTITY(float(vec3(1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0)), min(float(vec3(1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0)), float(vec3(1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0)))), cos(0.0), 0.0, 1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(float(mat2(_GLF_IDENTITY(float(vec3(1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0)), min(float(vec3(1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0)), float(vec3(1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0)))), cos(0.0), 0.0, 1.0)), max(float(mat2(_GLF_IDENTITY(float(vec3(1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0)), min(float(vec3(1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0)), float(vec3(1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0)))), cos(0.0), 0.0, 1.0)), float(mat2(_GLF_IDENTITY(float(vec3(1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0)), min(float(vec3(1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0)), float(vec3(1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0)))), cos(0.0), 0.0, 1.0)))), clamp(_GLF_IDENTITY(float(mat2(_GLF_IDENTITY(float(vec3(1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0)), min(float(vec3(1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0)), float(vec3(1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0)))), cos(0.0), 0.0, 1.0)), max(float(mat2(_GLF_IDENTITY(float(vec3(1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0)), min(float(vec3(1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0)), float(vec3(1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0)))), cos(0.0), 0.0, 1.0)), float(mat2(_GLF_IDENTITY(float(vec3(1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0)), min(float(vec3(1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0)), float(vec3(1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0)))), cos(0.0), 0.0, 1.0)))), _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(float(vec3(1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0)), min(float(vec3(1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0)), float(vec3(1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0)))), cos(0.0), 0.0, 1.0)), max(float(mat2(_GLF_IDENTITY(float(vec3(1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0)), min(float(vec3(1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0)), float(vec3(1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0)))), cos(0.0), 0.0, 1.0)), float(mat2(_GLF_IDENTITY(float(vec3(1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0)), min(float(vec3(1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0)), float(vec3(1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0)))), cos(0.0), 0.0, 1.0)))), _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(float(vec3(1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0)), min(float(vec3(1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0)), float(vec3(1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0)))), cos(0.0), 0.0, 1.0)), max(float(mat2(_GLF_IDENTITY(float(vec3(1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0)), min(float(vec3(1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0)), float(vec3(1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0)))), cos(0.0), 0.0, 1.0)), float(mat2(_GLF_IDENTITY(float(vec3(1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0)), min(float(vec3(1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0)), float(vec3(1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0)))), cos(0.0), 0.0, 1.0)))))), _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(float(vec3(1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0)), min(float(vec3(1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0)), float(vec3(1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0)))), cos(0.0), 0.0, 1.0)), max(float(mat2(_GLF_IDENTITY(float(vec3(1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0)), min(float(vec3(1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0)), float(vec3(1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0)))), cos(0.0), 0.0, 1.0)), float(mat2(_GLF_IDENTITY(float(vec3(1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0)), min(float(vec3(1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0)), float(vec3(1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0)))), cos(0.0), 0.0, 1.0))))))))))), vec3(0.0, 0.0, 1.0)), dot(_GLF_IDENTITY(vec3(0.0, 0.0, 1.0), (false ? _GLF_FUZZED(vec3(-76.08, 398.350, 607.491)) : vec3(0.0, 0.0, 1.0))), vec3(0.0, 0.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(6.6))), 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-935.740)), bool(false))))), (_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(6.6))), 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-935.740)), bool(false)))))) + 0.0) : _GLF_FUZZED(_GLF_IDENTITY(determinant(_GLF_IDENTITY(mat4(-6.1, -1775.3091, 7.2, -336.062, -2105.5059, -5575.3385, 5.6, 86.46, 1.3, -3.2, 5170.9842, 83.09, 9868.3386, -1.9, 789.877, -8.1), (_GLF_IDENTITY(mat4(-6.1, -1775.3091, 7.2, -336.062, -2105.5059, -5575.3385, 5.6, 86.46, 1.3, -3.2, 5170.9842, 83.09, 9868.3386, -1.9, 789.877, -8.1), (mat4(-6.1, -1775.3091, 7.2, -336.062, -2105.5059, -5575.3385, 5.6, 86.46, 1.3, -3.2, 5170.9842, 83.09, 9868.3386, -1.9, 789.877, -8.1)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))) - mat4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(determinant(_GLF_IDENTITY(mat4(-6.1, -1775.3091, 7.2, -336.062, -2105.5059, -5575.3385, 5.6, 86.46, 1.3, -3.2, 5170.9842, 83.09, 9868.3386, -1.9, 789.877, -8.1), (_GLF_IDENTITY(mat4(-6.1, -1775.3091, 7.2, -336.062, -2105.5059, -5575.3385, 5.6, 86.46, 1.3, -3.2, 5170.9842, 83.09, 9868.3386, -1.9, 789.877, -8.1), (mat4(-6.1, -1775.3091, 7.2, -336.062, -2105.5059, -5575.3385, 5.6, 86.46, 1.3, -3.2, 5170.9842, 83.09, 9868.3386, -1.9, 789.877, -8.1)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))) - mat4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), max(determinant(_GLF_IDENTITY(mat4(-6.1, -1775.3091, 7.2, -336.062, -2105.5059, -5575.3385, 5.6, 86.46, 1.3, -3.2, 5170.9842, 83.09, 9868.3386, -1.9, 789.877, -8.1), (_GLF_IDENTITY(mat4(-6.1, -1775.3091, 7.2, -336.062, -2105.5059, -5575.3385, 5.6, 86.46, 1.3, -3.2, 5170.9842, 83.09, 9868.3386, -1.9, 789.877, -8.1), (mat4(-6.1, -1775.3091, 7.2, -336.062, -2105.5059, -5575.3385, 5.6, 86.46, 1.3, -3.2, 5170.9842, 83.09, 9868.3386, -1.9, 789.877, -8.1)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))) - mat4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), determinant(_GLF_IDENTITY(mat4(-6.1, -1775.3091, 7.2, -336.062, -2105.5059, -5575.3385, 5.6, 86.46, 1.3, -3.2, 5170.9842, 83.09, 9868.3386, -1.9, 789.877, -8.1), (_GLF_IDENTITY(mat4(-6.1, -1775.3091, 7.2, -336.062, -2105.5059, -5575.3385, 5.6, 86.46, 1.3, -3.2, 5170.9842, 83.09, 9868.3386, -1.9, 789.877, -8.1), (mat4(-6.1, -1775.3091, 7.2, -336.062, -2105.5059, -5575.3385, 5.6, 86.46, 1.3, -3.2, 5170.9842, 83.09, 9868.3386, -1.9, 789.877, -8.1)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))) - mat4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))) : _GLF_FUZZED(3.6))))))))), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), 1.0, 1.0, 1.0, 0.0, 1.0, log(1.0), sqrt(0.0), 0.0, 0.0), (true ? mat4x3(0.0, 0.0, determinant(mat4(determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0)))), float(_GLF_FUZZED(7.1)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(34.87) : _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 1.0, 0.0, 1.0, log(1.0), sqrt(0.0), 0.0, 0.0) : _GLF_FUZZED(mat4x3(297.686, 136.534, 468.904, -852.503, -1.2, 5.8, -6.2, -9961.6512, -2.4, -44.85, -2899.9517, 9.5))))))))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-3.7), _GLF_IDENTITY((injectionSwitch), max(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), vec2(mat3x4((injectionSwitch), 1.0, 0.0, 0.0, 1.0, abs(1.0), 0.0, 1.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(mat2(1.0) * ((injectionSwitch)), clamp(mat2(1.0) * ((injectionSwitch)), mat2(1.0) * ((injectionSwitch)), _GLF_IDENTITY(mat2(1.0) * ((injectionSwitch)), mix(vec2((mat2(1.0) * ((injectionSwitch)))[0], (mat2(1.0) * ((injectionSwitch)))[1]), vec2(_GLF_FUZZED(-8.8), _GLF_FUZZED(vec2(-5690.2325, _GLF_IDENTITY(7.4, (false ? _GLF_FUZZED(9.2) : 7.4))).y)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))), (injectionSwitch)))[1]), vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(0, 0 | (0))], mix(float(_GLF_FUZZED(455.713)), float((injectionSwitch)[_GLF_IDENTITY(0, 0 | _GLF_IDENTITY((0), ~ (~ ((0)))))]), bool(_GLF_TRUE(_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(bvec2(true, true), false)))))), (injectionSwitch.x < injectionSwitch.y))))), clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(float(-80200))), bvec2(true, false))), (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))) + tan(vec2(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0))) * 1.0), float(_GLF_IDENTITY(mat4x3(0.0, 0.0, determinant(mat4(determinant(mat3(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(vec2(-2.1, 55.74).s)), float(1.0), bool(true)))) * 1.0), 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(min(0.0, 0.0), mix(float(_GLF_FUZZED(-5.2)), float(min(0.0, 0.0)), bool(true)))), 0.0, 1.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, _GLF_IDENTITY(1.0, float(vec3(1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0)))), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(6.6))), 1.0, 1.0)) : _GLF_FUZZED(determinant(mat4(-6.1, -1775.3091, 7.2, -336.062, -2105.5059, -5575.3385, 5.6, 86.46, 1.3, -3.2, 5170.9842, 83.09, 9868.3386, _GLF_IDENTITY(-1.9, min(-1.9, -1.9)), 789.877, -8.1)))))))), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), 1.0, 1.0, 1.0, 0.0, 1.0, log(1.0), sqrt(0.0), 0.0, 0.0), (true ? mat4x3(0.0, 0.0, determinant(mat4(determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), _GLF_IDENTITY(max(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), clamp(max(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), max(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), max(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))))))) * (_GLF_IDENTITY(0.0, (0.0) - 0.0))))), 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0)))), (false ? _GLF_FUZZED(-3324.6076) : float(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-9.2) : _GLF_IDENTITY(1.0, (1.0) * 1.0))), (1.0) + 0.0)))))), float(_GLF_FUZZED(7.1)), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))))))), 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0))), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(34.87) : _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(vec2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0))), 0.0, 0.0)), 1.0, log(1.0), sqrt(0.0), 0.0, 0.0) : _GLF_FUZZED(mat4x3(297.686, 136.534, 468.904, -852.503, -1.2, 5.8, -6.2, -9961.6512, -2.4, -44.85, -2899.9517, 9.5)))))))))))), max((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-3.7), _GLF_IDENTITY((injectionSwitch), max(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), vec2(mat3x4((injectionSwitch), 1.0, 0.0, 0.0, 1.0, abs(1.0), 0.0, 1.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(mat2(1.0) * ((injectionSwitch)), clamp(mat2(1.0) * ((injectionSwitch)), mat2(1.0) * ((injectionSwitch)), _GLF_IDENTITY(mat2(1.0) * ((injectionSwitch)), mix(vec2((mat2(1.0) * ((injectionSwitch)))[0], (mat2(1.0) * ((injectionSwitch)))[1]), vec2(_GLF_FUZZED(-8.8), _GLF_FUZZED(vec2(-5690.2325, _GLF_IDENTITY(7.4, (false ? _GLF_FUZZED(9.2) : 7.4))).y)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))), (injectionSwitch)))[1]), vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(0, 0 | (0))], mix(float(_GLF_FUZZED(455.713)), float((injectionSwitch)[_GLF_IDENTITY(0, 0 | _GLF_IDENTITY((0), ~ (~ ((0)))))]), bool(_GLF_TRUE(_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(bvec2(true, true), false)))))), (injectionSwitch.x < injectionSwitch.y))))), clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(float(-80200))), bvec2(true, false))), (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))) + tan(vec2(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0))) * 1.0), float(_GLF_IDENTITY(mat4x3(0.0, 0.0, determinant(mat4(determinant(mat3(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(vec2(-2.1, 55.74).s)), float(1.0), bool(true)))) * 1.0), 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(min(0.0, 0.0), mix(float(_GLF_FUZZED(-5.2)), float(min(0.0, 0.0)), bool(true)))), 0.0, 1.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, _GLF_IDENTITY(1.0, float(vec3(1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0)))), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(6.6))), 1.0, 1.0)) : _GLF_FUZZED(determinant(mat4(-6.1, -1775.3091, 7.2, -336.062, -2105.5059, -5575.3385, 5.6, 86.46, 1.3, -3.2, 5170.9842, 83.09, 9868.3386, _GLF_IDENTITY(-1.9, min(-1.9, -1.9)), 789.877, -8.1)))))))), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), 1.0, 1.0, 1.0, 0.0, 1.0, log(1.0), sqrt(0.0), 0.0, 0.0), (true ? mat4x3(0.0, 0.0, determinant(mat4(determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), _GLF_IDENTITY(max(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), clamp(max(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), max(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), max(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))))))) * (_GLF_IDENTITY(0.0, (0.0) - 0.0))))), 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0)))), (false ? _GLF_FUZZED(-3324.6076) : float(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-9.2) : _GLF_IDENTITY(1.0, (1.0) * 1.0))), (1.0) + 0.0)))))), float(_GLF_FUZZED(7.1)), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))))))), 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0))), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(34.87) : _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(vec2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0))), 0.0, 0.0)), 1.0, log(1.0), sqrt(0.0), 0.0, 0.0) : _GLF_FUZZED(mat4x3(297.686, 136.534, 468.904, -852.503, -1.2, 5.8, -6.2, -9961.6512, -2.4, -44.85, -2899.9517, 9.5)))))))))))), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-3.7), _GLF_IDENTITY((injectionSwitch), max(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), vec2(mat3x4((injectionSwitch), 1.0, 0.0, 0.0, 1.0, abs(1.0), 0.0, 1.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(mat2(1.0) * ((injectionSwitch)), clamp(mat2(1.0) * ((injectionSwitch)), mat2(1.0) * ((injectionSwitch)), _GLF_IDENTITY(mat2(1.0) * ((injectionSwitch)), mix(vec2((mat2(1.0) * ((injectionSwitch)))[0], (mat2(1.0) * ((injectionSwitch)))[1]), vec2(_GLF_FUZZED(-8.8), _GLF_FUZZED(vec2(-5690.2325, _GLF_IDENTITY(7.4, (false ? _GLF_FUZZED(9.2) : 7.4))).y)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))), (injectionSwitch)))[1]), vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(0, 0 | (0))], mix(float(_GLF_FUZZED(455.713)), float((injectionSwitch)[_GLF_IDENTITY(0, 0 | _GLF_IDENTITY((0), ~ (~ ((0)))))]), bool(_GLF_TRUE(_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(bvec2(true, true), false)))))), (injectionSwitch.x < injectionSwitch.y))))), clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(float(-80200))), bvec2(true, false))), (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))) + tan(vec2(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0))) * 1.0), float(_GLF_IDENTITY(mat4x3(0.0, 0.0, determinant(mat4(determinant(mat3(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(vec2(-2.1, 55.74).s)), float(1.0), bool(true)))) * 1.0), 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(min(0.0, 0.0), mix(float(_GLF_FUZZED(-5.2)), float(min(0.0, 0.0)), bool(true)))), 0.0, 1.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, _GLF_IDENTITY(1.0, float(vec3(1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0)))), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(6.6))), 1.0, 1.0)) : _GLF_FUZZED(determinant(mat4(-6.1, -1775.3091, 7.2, -336.062, -2105.5059, -5575.3385, 5.6, 86.46, 1.3, -3.2, 5170.9842, 83.09, 9868.3386, _GLF_IDENTITY(-1.9, min(-1.9, -1.9)), 789.877, -8.1)))))))), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), 1.0, 1.0, 1.0, 0.0, 1.0, log(1.0), sqrt(0.0), 0.0, 0.0), (true ? mat4x3(0.0, 0.0, determinant(mat4(determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), _GLF_IDENTITY(max(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), clamp(max(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), max(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), max(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))))))) * (_GLF_IDENTITY(0.0, (0.0) - 0.0))))), 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0)))), (false ? _GLF_FUZZED(-3324.6076) : float(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-9.2) : _GLF_IDENTITY(1.0, (1.0) * 1.0))), (1.0) + 0.0)))))), float(_GLF_FUZZED(7.1)), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))))))), 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0))), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(34.87) : _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(vec2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0))), 0.0, 0.0)), 1.0, log(1.0), sqrt(0.0), 0.0, 0.0) : _GLF_FUZZED(mat4x3(297.686, 136.534, 468.904, -852.503, -1.2, 5.8, -6.2, -9961.6512, -2.4, -44.85, -2899.9517, 9.5)))))))))))))) - vec2(0.0, 0.0)), min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) * mat2(1.0)) + (injectionSwitch)), injectionSwitch)), 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4(1.0, round(length(normalize(1.0))), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0)), clamp(float(mat4(1.0, round(length(normalize(_GLF_IDENTITY(1.0, (1.0) / 1.0)))), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0)), float(mat4(1.0, round(length(normalize(1.0))), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0)), float(mat4(1.0, round(length(normalize(1.0))), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0)))))), float(_GLF_FUZZED((+ 1.6))), bool(false))), 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-1.6)), float(1.0), bool(true))), 1.0, 0.0))).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), false)), false || (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), false), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), false), false)), false))))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), true && (_GLF_DEAD(false))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 0.0, 1.0)))))).x > injectionSwitch.y))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0))) : _GLF_FUZZED(-60.78)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bool(! ((injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bool(! ((injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bool(! ((injectionSwitch.x > injectionSwitch.y))))), false)))))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bool(! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (((injectionSwitch.x > injectionSwitch.y))), (! (((injectionSwitch.x > injectionSwitch.y)))) || false)))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bool(! ((injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bool(! ((injectionSwitch.x > injectionSwitch.y))))), false)))))), _GLF_IDENTITY(false, bool(bool(false))), false, false)), ! (! (bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bool(! ((injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y)))))), bool(bool(! ((injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bool(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y))))), false)))))), _GLF_IDENTITY(false, bool(bool(false))), false, false)))))))), bool(bvec2(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) : _GLF_FUZZED(degrees(273.143))), min(_GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) : _GLF_FUZZED(degrees(273.143))), max(_GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) : _GLF_FUZZED(degrees(273.143))), ((true ? _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) : _GLF_FUZZED(degrees(273.143)))) * 1.0), (true ? _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) : _GLF_FUZZED(degrees(273.143))))), _GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) : _GLF_FUZZED(degrees(273.143))), clamp((true ? _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) : _GLF_FUZZED(degrees(273.143))), (true ? _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) : _GLF_FUZZED(degrees(273.143))), (true ? _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) : _GLF_FUZZED(degrees(273.143)))))))) < injectionSwitch.y))))) && true), true)))))), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), bool(bool(! ((injectionSwitch.x > injectionSwitch.y)))))), ! (! ((_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bool(! ((injectionSwitch.x > injectionSwitch.y))))))))))), ! _GLF_IDENTITY((! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(! ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(21.40), (_GLF_FUZZED(21.40)) / round(length(normalize(vec2(1.0, 1.0)))))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))), ! (_GLF_IDENTITY(! (bool(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))) && true)))), bool(bvec2(! (bool(! ((injectionSwitch.x > injectionSwitch.y)))), false)))))))))))), (_GLF_IDENTITY((! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(! ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(21.40)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))), ! (_GLF_IDENTITY(! (bool(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))) && true)))), bool(bvec2(! (bool(! ((injectionSwitch.x > injectionSwitch.y)))), false)))))))))))), true && ((! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(! ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(21.40)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))), ! (_GLF_IDENTITY(! (bool(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), bool(bool((injectionSwitch.x > injectionSwitch.y))))) && true)))), bool(bvec2(! (bool(! ((injectionSwitch.x > injectionSwitch.y)))), false))))))))))))))) || false)), bool(bvec2(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(_GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])), injectionSwitch[1])))).x < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 0.0, 1.0)), (true ? vec2(mat4x2(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 0.0, 1.0)) : _GLF_FUZZED(vec2(-0.3, -3711.2482)))))[0], injectionSwitch[1])).y))))) && _GLF_IDENTITY(true, (true) && true)), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, false)), bool(_GLF_IDENTITY(bvec3(bool(bvec4(true, false, true, false)), false, true), bvec3(bvec4(bvec3(bool(bvec4(true, false, true, false)), false, true), false)))))))))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, round(length(normalize(vec2(1.0, 1.0)))) * (injectionSwitch.y))), ! _GLF_IDENTITY((_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), bool(bool(! ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, 1.0, 1.0, 1.0), (true ? mat3x2(injectionSwitch, 1.0, 1.0, 1.0, 1.0) : _GLF_FUZZED(mat3x2(-9.1, 657.522, -420.235, -923.664, -8350.5076, -83.50))))), (vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, 1.0, 1.0, 1.0), (true ? mat3x2(injectionSwitch, 1.0, 1.0, 1.0, 1.0) : _GLF_FUZZED(mat3x2(-9.1, 657.522, -420.235, -923.664, -8350.5076, -83.50)))))) / vec2(1.0, 1.0))).x > injectionSwitch.y)))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(((injectionSwitch.x > injectionSwitch.y)), false, false)), true && (bool(bvec3(((injectionSwitch.x > injectionSwitch.y)), false, false))))))))) || false), _GLF_IDENTITY(bool(bool(! ((injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bool(! ((injectionSwitch.x > injectionSwitch.y)))))))))))))), ! _GLF_IDENTITY((! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(! ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(21.40), (_GLF_FUZZED(21.40)) / round(length(normalize(vec2(1.0, 1.0)))))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))), ! (_GLF_IDENTITY(! (bool(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))) && true)))), bool(bvec2(! (bool(! ((injectionSwitch.x > injectionSwitch.y)))), false)))))))))))), (_GLF_IDENTITY((! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(! ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(21.40)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))), ! (_GLF_IDENTITY(! (bool(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))) && true)))), bool(bvec2(! (bool(! ((injectionSwitch.x > injectionSwitch.y)))), false)))))))))))), true && ((! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(! ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(21.40)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))), ! (_GLF_IDENTITY(! (bool(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec4(injectionSwitch.x, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(injectionSwitch.x, 0.0, 0.0, 0.0))))) > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), bool(bool((injectionSwitch.x > injectionSwitch.y))))) && true)))), bool(bvec2(! (bool(! ((injectionSwitch.x > injectionSwitch.y)))), false))))))))))))))) || false)), bool(bvec2(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, true && (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(_GLF_IDENTITY(injectionSwitch[1], clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[1], injectionSwitch[1], injectionSwitch[1])), injectionSwitch[1])))).x < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 0.0, 0.0, 1.0)), (true ? vec2(mat4x2(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, float(mat3(1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 1.0, cos(0.0), 1.0, 1.0))))) : _GLF_FUZZED(vec2(-0.3, -3711.2482)))))[0], injectionSwitch[1])).y))))) && _GLF_IDENTITY(true, (true) && true)), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, false)), bool(_GLF_IDENTITY(bvec3(bool(bvec4(true, false, true, false)), false, true), bvec3(bvec4(bvec3(bool(bvec4(true, false, true, false)), false, true), false))))))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || _GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(538.970)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(538.970)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
    barrier();
   barrier();
  }
 _GLF_struct_2 _GLF_struct_replacement_2 = _GLF_struct_2(_GLF_struct_1(vec3(1.0), uvec3(1u), _GLF_IDENTITY(1.0, sqrt(0.0) + (1.0)), mat4(1.0), _GLF_struct_0(_GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec2(bvec2(true)))), true))))), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec2(bvec2(true))), false)), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec2(bvec2(true))), false), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec2(bvec2(bvec2(true))), false))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec2(bvec2(bvec2(true))), false))), true))))), true)), bvec2(bvec3(bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec2(bvec2(true))), false), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec2(bvec2(bvec2(true))), false))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec2(bvec2(bvec2(true))), false))), true))))), true)), true)))))), _GLF_IDENTITY(_GLF_IDENTITY(ivec3(1), (ivec3(1)) / ivec3(1, 1, 1)), ~ (~ (_GLF_IDENTITY(ivec3(1), ivec3(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(1), (_GLF_IDENTITY(ivec3(1), ~ (~ (ivec3(1))))) | ivec3(0, 0, 0)), (ivec3(1)) / _GLF_IDENTITY(ivec3(1, 1, 1), (false ? _GLF_FUZZED(_GLF_IDENTITY(ivec3(-75166, -62284, -24522), ivec3(0, 0, 0) + (_GLF_IDENTITY(ivec3(-75166, -62284, -24522), ivec3(0, 0, 0) | (ivec3(-75166, -62284, -24522)))))) : ivec3(1, 1, 1)))), 1), min(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(1), (_GLF_IDENTITY(ivec3(1), ~ (~ (ivec3(1))))) | ivec3(0, 0, 0)), (ivec3(1)) / _GLF_IDENTITY(ivec3(1, 1, 1), (false ? _GLF_FUZZED(_GLF_IDENTITY(ivec3(-75166, -62284, -24522), ivec3(0, 0, 0) + (_GLF_IDENTITY(ivec3(-75166, -62284, -24522), ivec3(0, 0, 0) | (ivec3(-75166, -62284, -24522)))))) : ivec3(1, 1, 1)))), 1), _GLF_IDENTITY(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(1), (_GLF_IDENTITY(ivec3(1), ~ (~ (ivec3(1))))) | ivec3(0, 0, 0)), (ivec3(1)) / _GLF_IDENTITY(ivec3(1, 1, 1), (false ? _GLF_FUZZED(_GLF_IDENTITY(ivec3(-75166, -62284, -24522), ivec3(0, 0, 0) + (_GLF_IDENTITY(ivec3(-75166, -62284, -24522), ivec3(0, 0, 0) | (ivec3(-75166, -62284, -24522)))))) : ivec3(1, 1, 1)))), 1), min(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(1), (_GLF_IDENTITY(ivec3(1), ~ (~ (ivec3(1))))) | ivec3(0, 0, 0)), (ivec3(1)) / _GLF_IDENTITY(ivec3(1, 1, 1), (false ? _GLF_FUZZED(_GLF_IDENTITY(ivec3(-75166, -62284, -24522), ivec3(0, 0, 0) + (_GLF_IDENTITY(ivec3(-75166, -62284, -24522), ivec3(0, 0, 0) | (ivec3(-75166, -62284, -24522)))))) : ivec3(1, 1, 1)))), 1), ivec4(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(1), (_GLF_IDENTITY(ivec3(1), ~ (~ (ivec3(1))))) | ivec3(0, 0, 0)), (ivec3(1)) / _GLF_IDENTITY(ivec3(1, 1, 1), (false ? _GLF_FUZZED(_GLF_IDENTITY(ivec3(-75166, -62284, -24522), ivec3(0, 0, 0) + (_GLF_IDENTITY(ivec3(-75166, -62284, -24522), ivec3(0, 0, 0) | (ivec3(-75166, -62284, -24522)))))) : ivec3(1, 1, 1)))), 1)))))))))), uvec3(_GLF_IDENTITY(1u, 0u ^ (1u))), bvec2(true))), _GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY(1u * (workgroup_size * workgroup_id), (1u * (workgroup_size * workgroup_id)) | (_GLF_IDENTITY(1u * (workgroup_size * workgroup_id), (1u * (workgroup_size * workgroup_id)) - 0u)))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) || false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) || false))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(613.697) : injectionSwitch.y)), (false ? _GLF_FUZZED(-9.4) : _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(613.697) : injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(613.697) : injectionSwitch.y)), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false ? _GLF_FUZZED(613.697) : injectionSwitch.y, mix(float(_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(613.697, 0.0 + (613.697))) : injectionSwitch.y, (_GLF_IDENTITY(false ? _GLF_FUZZED(613.697) : injectionSwitch.y, mix(float(false ? _GLF_FUZZED(613.697) : injectionSwitch.y), float(_GLF_FUZZED(774.448)), _GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(false), bool(bool(bool(false))))), bool(bvec4(! (_GLF_IDENTITY(bool(false), bool(bool(bool(false))))), true, false, true)))))))) / 1.0)), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-0.2), mix(float(_GLF_IDENTITY(_GLF_FUZZED(-0.2), min(_GLF_FUZZED(-0.2), _GLF_FUZZED(-0.2)))), float(_GLF_FUZZED(8842.1532)), bool(false))), max(_GLF_IDENTITY(_GLF_FUZZED(-0.2), mix(float(_GLF_IDENTITY(_GLF_FUZZED(-0.2), min(_GLF_FUZZED(-0.2), _GLF_FUZZED(-0.2)))), float(_GLF_FUZZED(8842.1532)), bool(false))), _GLF_IDENTITY(_GLF_FUZZED(-0.2), mix(float(_GLF_IDENTITY(_GLF_FUZZED(-0.2), min(_GLF_FUZZED(-0.2), _GLF_FUZZED(-0.2)))), float(_GLF_FUZZED(8842.1532)), bool(false)))))), bool(false)))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(false, true)))), ! (! (! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))) ? _GLF_FUZZED(_GLF_IDENTITY(613.697, float(vec2(613.697, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) * 1.0))))) : injectionSwitch.y), ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(false, true)))), ! (! (! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))) ? _GLF_FUZZED(_GLF_IDENTITY(613.697, float(vec2(613.697, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) * 1.0))))) : injectionSwitch.y)) / sqrt(1.0)))) || _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false) && (false), true), bvec2(bvec4(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))), true), true, false)))))), false || (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false) && (false), true), bvec2(bvec4(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (false), (! (false)) || false), false)), ! (! (bool(bvec2(_GLF_IDENTITY(! (false), (! (false)) || false), false)))))))))))), true), true, false)))))))))) || false)))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), (_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))))) || false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || false)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(9.6)), bool(false))) > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, true))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && _GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((false), false || ((false))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint virtual_gid = _GLF_struct_replacement_2.workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, 1u * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)) * subgroup_size) | (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)))))), min(subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, 0u + (subgroup_id))) * (0u ^ _GLF_IDENTITY(1u, (1u) | (1u)))) * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)) / 1u), clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec3(subgroup_size, 0u, 1u)), clamp(uint(uvec3(subgroup_size, _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) | (~ (0u))))) : _GLF_FUZZED(workgroup_id))), 1u)), uint(uvec3(subgroup_size, 0u, 1u)), uint(uvec3(subgroup_size, 0u, 1u))))), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), max(_GLF_IDENTITY((subgroup_size), 1u * (_GLF_IDENTITY((subgroup_size), ~ (~ ((subgroup_size)))))), (subgroup_size))) * 1u))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) << 0u), subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) | 0u)), (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)))) - 0u), (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)))), (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) | 0u)), (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)))) - 0u)) - 0u))))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, 1u * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)) * subgroup_size) | (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)))))), min(subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, 0u + (subgroup_id))) * (0u ^ _GLF_IDENTITY(1u, (1u) | (1u)))) * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)) / 1u), clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec3(subgroup_size, 0u, 1u)), clamp(uint(uvec3(subgroup_size, _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) | (~ (0u))))) : _GLF_FUZZED(workgroup_id))), 1u)), uint(uvec3(subgroup_size, 0u, 1u)), uint(uvec3(subgroup_size, 0u, 1u))))), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), max(_GLF_IDENTITY((subgroup_size), 1u * (_GLF_IDENTITY((subgroup_size), ~ (~ ((subgroup_size)))))), (subgroup_size))) * 1u))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) << 0u), subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) | 0u)), (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)))) - 0u), (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)))), (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) | 0u)), (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)))) - 0u)) - 0u))))))), (_GLF_IDENTITY(subgroup_id * subgroup_size, 1u * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)) * subgroup_size) | (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)))))), min(subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, 0u + (subgroup_id))) * (0u ^ _GLF_IDENTITY(1u, (1u) | (1u)))) * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)) / 1u), clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec3(subgroup_size, 0u, 1u)), clamp(uint(uvec3(subgroup_size, _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) | (~ (0u))))) : _GLF_FUZZED(workgroup_id))), 1u)), uint(uvec3(subgroup_size, 0u, 1u)), uint(uvec3(subgroup_size, 0u, 1u))))), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), max(_GLF_IDENTITY((subgroup_size), 1u * (_GLF_IDENTITY((subgroup_size), ~ (~ ((subgroup_size)))))), (subgroup_size))) * 1u))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) << 0u), subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) | 0u)), (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)))) - 0u), (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)))), (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) | 0u)), (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)))) - 0u)) - 0u)))))))) | (_GLF_IDENTITY(subgroup_id * subgroup_size, 1u * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)) * subgroup_size) | (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)))))), min(subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, 0u + (subgroup_id))) * (0u ^ _GLF_IDENTITY(1u, (1u) | (1u)))) * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)) / 1u), clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec3(subgroup_size, 0u, 1u)), clamp(uint(uvec3(subgroup_size, _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) | (~ (0u))))) : _GLF_FUZZED(workgroup_id))), 1u)), uint(uvec3(subgroup_size, 0u, 1u)), uint(uvec3(subgroup_size, 0u, 1u))))), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), max(_GLF_IDENTITY((subgroup_size), 1u * (_GLF_IDENTITY((subgroup_size), ~ (~ ((subgroup_size)))))), (subgroup_size))) * 1u))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) << 0u), subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) | 0u)), (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)))) - 0u), (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)))), (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) | 0u)), (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)))) - 0u)) - 0u)))))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, 1u * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)) * subgroup_size) | (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)))))), min(subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, 0u + (subgroup_id))) * (0u ^ _GLF_IDENTITY(1u, (1u) | (1u)))) * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)) / 1u), clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec3(subgroup_size, 0u, 1u)), clamp(uint(uvec3(subgroup_size, _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) | (~ (0u))))) : _GLF_FUZZED(workgroup_id))), 1u)), uint(uvec3(subgroup_size, 0u, 1u)), uint(uvec3(subgroup_size, 0u, 1u))))), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), max(_GLF_IDENTITY((subgroup_size), 1u * (_GLF_IDENTITY((subgroup_size), ~ (~ ((subgroup_size)))))), (subgroup_size))) * 1u))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) << 0u), subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) | 0u)), (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)))) - 0u), (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)))), (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) | 0u)), (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)))) - 0u)) - 0u))))))), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(subgroup_id * subgroup_size, 1u * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)) * subgroup_size) | (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)))))), min(subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, 0u + (subgroup_id))) * (0u ^ _GLF_IDENTITY(1u, (1u) | (1u)))) * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)) / 1u), clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec3(subgroup_size, 0u, 1u)), clamp(uint(uvec3(subgroup_size, _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) | (~ (0u))))) : _GLF_FUZZED(workgroup_id))), 1u)), uint(uvec3(subgroup_size, 0u, 1u)), uint(uvec3(subgroup_size, 0u, 1u))))), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), max(_GLF_IDENTITY((subgroup_size), 1u * (_GLF_IDENTITY((subgroup_size), ~ (~ ((subgroup_size)))))), (subgroup_size))) * 1u))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) << 0u), subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) | 0u)), (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)))) - 0u), (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)))), (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) | 0u)), (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)))) - 0u)) - 0u))))))))))) + _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id));
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2.workgroup_base, clamp(_GLF_IDENTITY(_GLF_struct_replacement_2.workgroup_base, (_GLF_struct_replacement_2.workgroup_base) - 0u), _GLF_struct_replacement_2.workgroup_base, _GLF_struct_replacement_2.workgroup_base)) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)))), (subgroup_id * subgroup_size) ^ 0u)) / 1u), (_GLF_struct_replacement_2.workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) ^ _GLF_IDENTITY(0u, (0u) - 0u)) * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2.workgroup_base, clamp(_GLF_struct_replacement_2.workgroup_base, _GLF_struct_replacement_2.workgroup_base, _GLF_IDENTITY(_GLF_struct_replacement_2.workgroup_base, min(_GLF_struct_replacement_2.workgroup_base, _GLF_struct_replacement_2.workgroup_base)))) + subgroup_id * subgroup_size, _GLF_IDENTITY(~ (~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_2.workgroup_base, (_GLF_struct_replacement_2.workgroup_base) >> 0u) + subgroup_id * subgroup_size), 0u ^ ((_GLF_IDENTITY(_GLF_struct_replacement_2.workgroup_base, (_GLF_struct_replacement_2.workgroup_base) >> 0u) + subgroup_id * subgroup_size))), ((_GLF_struct_replacement_2.workgroup_base + subgroup_id * subgroup_size)) - 0u)), (~ (~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2.workgroup_base, (_GLF_struct_replacement_2.workgroup_base) >> 0u), (_GLF_IDENTITY(_GLF_struct_replacement_2.workgroup_base, (_GLF_struct_replacement_2.workgroup_base) >> 0u)) + (0u << _GLF_IDENTITY(uint(5u), uint(5u)))) + subgroup_id * subgroup_size), 0u ^ ((_GLF_IDENTITY(_GLF_struct_replacement_2.workgroup_base, (_GLF_struct_replacement_2.workgroup_base) >> 0u) + subgroup_id * subgroup_size))), ((_GLF_struct_replacement_2.workgroup_base + subgroup_id * subgroup_size)) - 0u))) | (~ (~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_2.workgroup_base, (_GLF_struct_replacement_2.workgroup_base) >> 0u) + subgroup_id * subgroup_size), 0u ^ ((_GLF_IDENTITY(_GLF_struct_replacement_2.workgroup_base, (_GLF_struct_replacement_2.workgroup_base) >> 0u) + subgroup_id * subgroup_size))), ((_GLF_struct_replacement_2.workgroup_base + subgroup_id * subgroup_size)) - 0u))))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2.workgroup_base, ~ (_GLF_IDENTITY(~ (_GLF_struct_replacement_2.workgroup_base), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((~ (_GLF_struct_replacement_2.workgroup_base)), 0u + ((~ (_GLF_struct_replacement_2.workgroup_base)))), (true ? ~ (~ (_GLF_struct_replacement_2.workgroup_base)) : _GLF_FUZZED(subgroup_local_id))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(122094u) : _GLF_struct_replacement_2.workgroup_base)) + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)))))), 0u + (subgroup_id * subgroup_size)), ~ (~ (_GLF_IDENTITY(_GLF_struct_replacement_2.workgroup_base, (true ? _GLF_struct_replacement_2.workgroup_base : _GLF_FUZZED(virtual_gid))) + subgroup_id * subgroup_size))))))) + ((_GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((true ? subgroup_local_id : _GLF_FUZZED(workgroup_size)), ((true ? subgroup_local_id : _GLF_FUZZED(workgroup_size))) | (0u & 102838u))) + 1, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((true ? subgroup_local_id : _GLF_FUZZED(workgroup_size)), ((true ? subgroup_local_id : _GLF_FUZZED(workgroup_size))) | (0u & 102838u))), 0u | (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((true ? subgroup_local_id : _GLF_FUZZED(workgroup_size)), ((true ? subgroup_local_id : _GLF_FUZZED(workgroup_size))) | (0u & 102838u))))) + 1))), subgroup_local_id + _GLF_IDENTITY(1, (1) * int(_GLF_ONE(1.0, injectionSwitch.y)))))) % subgroup_size);
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))))))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_3 _GLF_struct_replacement_3 = _GLF_struct_3(vec4(1.0), uvec3(1u), atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(0, min(0, 0))), uvec2(1u));
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(checker[virtual_gid], _GLF_struct_replacement_3.read, 4, 64, _GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), (~ (4)) >> 0))));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), ! (_GLF_IDENTITY(! (bool(bvec4(false, true, false, false))), bool(_GLF_IDENTITY(bool(! (bool(bvec4(false, true, false, false)))), (bool(! (bool(bvec4(false, true, false, false))))) && true))))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true), _GLF_IDENTITY(bool(bvec4(false, true, true, true)), ! (! (bool(bvec4(false, true, true, _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), bool(bool(_GLF_IDENTITY(true, true && (true)))))))))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch)))), injectionSwitch)).y))), false || (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))) * mat2(1.0), (false ? _GLF_FUZZED(vec2(-8.1, -524.947)) : (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))) * mat2(1.0)))), injectionSwitch)).y))))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   atomicStore(checker[virtual_gid], _GLF_struct_replacement_3.read, _GLF_IDENTITY(4, _GLF_IDENTITY((4) - 0, 0 ^ ((4) - 0))), _GLF_IDENTITY(64, (64) - 0), 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))), true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! _GLF_IDENTITY((bool(bool(false))), ! (_GLF_IDENTITY(! ((bool(bool(false)))), (! ((bool(bool(false))))) || false)))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))), ! (! (bool(bool(false)))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))) || false))))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))) || false)))))))) || false)))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))))))) || false))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))))))) || false))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))))))) || false))))))))))))))))))), bool(bvec4(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))), true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! _GLF_IDENTITY((bool(bool(false))), ! (_GLF_IDENTITY(! ((bool(bool(false)))), (! ((bool(bool(false))))) || false)))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))), ! (! (bool(bool(false)))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))) || false))))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))) || false)))))))) || false)))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))))))) || false))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))))))) || false))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))))))) || false))))))))))))))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), ! (! (! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))), ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (_GLF_IDENTITY(! (bool(bool(false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (bool(bool(false)))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))))))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))) || false))))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))) || false)))))))) || false), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(! (! (bool(bool(false)))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))) && (! (! (bool(bool(false)))))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))))))))) || false))))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! _GLF_IDENTITY((! (bool(bool(false)))), false || ((! (bool(bool(false)))))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))) || false)))))))) || false))))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))) || false))))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(false, ! (! (false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false))))), ! (! (bool(bool(false)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))) || false)))))))) || false), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(! (! (bool(bool(false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (! (bool(bool(false)))))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))), bool(bvec4(_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))), false, true, false)))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))) || false))))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (_GLF_IDENTITY(! (bool(bool(false))), false || (! (bool(bool(false)))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))) || false)))))))) || false))))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! _GLF_IDENTITY((bool(bool(false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((bool(bool(false)))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))), true)), bool(bvec4(bool(bvec2(_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))), true)), true, true, false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))), true)), bool(bvec4(bool(bvec2(_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))), true)), true, true, false)))))))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))), false || (_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! _GLF_IDENTITY((! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))), false))), ! (! (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))), false))))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))), false))), ! (! (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))), false)))))))) || false)))), bool(bvec2((! (bool(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))), false), bvec3(bvec3(bvec3(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))), false)))))))))), false)))))) || false))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), ! _GLF_IDENTITY((! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))), false))), ! (! (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))), false)))))))))), bool(bvec2((! (bool(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))), false), bvec3(bvec3(bvec3(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))), false)))))))))), false)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bool(false)), ! _GLF_IDENTITY((! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))), false))), ! (! (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))), false)))))))))), bool(bvec2((! (bool(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))), false), bvec3(bvec3(bvec3(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))), false)))))))))), false)))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(bool(false)), ! _GLF_IDENTITY((! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))), false))), ! (! (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))), false)))))))))), bool(bvec2((! (bool(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))), false), bvec3(bvec3(bvec3(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))), false)))))))))), false)))), true), true, true))))))) || false))))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! _GLF_IDENTITY((! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))), false))), ! (! (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))), false)))))))))), bool(bvec2((! (bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))), false), bvec3(bvec3(bvec3(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))), false))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))), false), bvec3(bvec3(bvec3(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))), false)))))), true && (! (bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))), false), bvec3(bvec3(bvec3(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))), false))))))))))))))), false)))))) || false))))), true, _GLF_IDENTITY(false, (false) || false)), bvec3(bvec3(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! _GLF_IDENTITY((! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))), false))), bool(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))), false))), _GLF_IDENTITY(true, ! (! (true))), true))), ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), false || (_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), ! (! ((_GLF_IDENTITY(false, true && (false)))))))))))), false), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), false || (_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), ! (! ((_GLF_IDENTITY(false, true && (false)))))))))))), false), bvec3(bvec3(bvec3(false, _GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), false || (_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), ! (! ((_GLF_IDENTITY(false, true && (false)))))))))))), false))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), false || (_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), ! (! ((_GLF_IDENTITY(false, true && (false)))))))))))), false), bvec3(bvec3(bvec3(false, _GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), false || (_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), ! (! ((_GLF_IDENTITY(false, true && (false)))))))))))), false))))))))))))))))))), bool(bvec2((! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, true && (false))), (true && (_GLF_IDENTITY(false, true && (false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false), bvec3(bvec3(bvec3(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))), false)))))))), ! (! (bool(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, true && (false))), (true && (_GLF_IDENTITY(false, true && (false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false), bvec3(bvec3(bvec3(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))), false))))))))))))), false)))))) || false))))), true, false)))))), false, true)), ! (! (bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! _GLF_IDENTITY((! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) && true) && (false)))), false))), ! (! (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) || false))) && (_GLF_IDENTITY(false, true && (false)))), false)))))))))), bool(bvec2((! (bool(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))), false)), bvec3(bvec3(bvec3(bvec3(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))), false))))))))))))), false)))))) || false))))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(! (! (bool(bool(false)))), false || (! (! (bool(bool(false)))))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! _GLF_IDENTITY((! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))), false))), ! (! (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))), false)))))))))), bool(bvec2((! (bool(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))), false), bvec3(bvec3(bvec3(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))), false)))))))))), false)))))) || false))))), true, false), bvec3(bvec3(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(false)), (! (bool(false))) && true)))), ! (! (bool(bool(false)))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! _GLF_IDENTITY((! _GLF_IDENTITY((bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))), false))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))), false))), (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))), false)))) && true))), ((! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))), false))), (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))), false)))) && true)))) && true))))), ((bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))), false))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))), false))), (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))), false)))) && true))), ((! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))), false))), (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))), false)))) && true)))) && true)))))) || false)), bool(bvec2((! (bool(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))), false), bvec3(bvec3(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))), ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))))), false)))))))))), false)))))) || false))))), true, false)))))), false, true))))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (_GLF_IDENTITY(! (bool(bool(false))), (! (bool(bool(false)))) && true)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(! (! (bool(bool(false)))), true && (! (! (bool(bool(false)))))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), ! _GLF_IDENTITY((_GLF_IDENTITY(! (bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false))))))), false)))))), ! (_GLF_IDENTITY(! (! (bool(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true && (false), bool(bvec3(true && (false), true, false)))), (! (_GLF_IDENTITY(true && (false), bool(bvec3(true && (false), true, false))))) || false)))))), false), bvec3(bvec3(bvec3(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true && (false), bool(bvec3(true && (false), true, false)))), (! (_GLF_IDENTITY(true && (false), bool(bvec3(true && (false), true, false))))) || false)))))), false)))))))))), ! (! (! (! (bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (_GLF_IDENTITY(! (true && (false)), (! (true && (false))) || false)))))), false))))))))))))), bool(bvec2((_GLF_IDENTITY(! (bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bvec3(true, true, false))) && (_GLF_IDENTITY(false, true && (false)))), false)))))), false || (! _GLF_IDENTITY((bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))), false)))))), ((bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! ((false))))))), false))))))) && true)))), false)))))) || _GLF_IDENTITY(false, ! (! (false)))))))))))))) || false)))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(_GLF_IDENTITY(true, bool(bvec4(true, true, true, false))));
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), false, false))), false)))))), (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))) && true))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
