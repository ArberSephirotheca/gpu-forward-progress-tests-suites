#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))), ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))) * mat2(_GLF_ONE(1.0, injectionSwitch.y))) + vec2(0.0, 0.0)).x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))), ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))) * mat2(_GLF_ONE(1.0, injectionSwitch.y))) + vec2(0.0, 0.0)).x > injectionSwitch.y), true), bvec2(_GLF_IDENTITY(bvec3(bvec2((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))), ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))) * mat2(_GLF_ONE(1.0, injectionSwitch.y))) + vec2(0.0, 0.0)).x > injectionSwitch.y), true), true), bvec3(bvec4(bvec3(bvec2((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))), ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))) * mat2(_GLF_ONE(1.0, injectionSwitch.y))) + vec2(0.0, 0.0)).x > injectionSwitch.y), true), true), true)))))), ! (! (bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))), ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))) * mat2(_GLF_ONE(1.0, injectionSwitch.y))) + vec2(0.0, 0.0)).x > injectionSwitch.y), true), bvec2(_GLF_IDENTITY(bvec3(bvec2((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))), ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))) * mat2(_GLF_ONE(1.0, injectionSwitch.y))) + vec2(0.0, 0.0)).x > injectionSwitch.y), true), true), bvec3(bvec4(bvec3(bvec2((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))), ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))) * mat2(_GLF_ONE(1.0, injectionSwitch.y))) + vec2(0.0, 0.0)).x > injectionSwitch.y), true), true), true)))))))))))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(254.441)), vec2(_GLF_FUZZED((1.9 * 1.6)), _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) - 0.0)), bvec2(false, true))).x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), bvec3(bvec4(bvec3(_GLF_DEAD(false), true, true), false)))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), bvec3(bvec4(bvec3(_GLF_DEAD(false), true, true), false)))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_DEAD(false), true, true), false)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_DEAD(false), true, true), false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_DEAD(false), true, true), false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)))))))))))))) && true))
    return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x));
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(length(vec4(0.0, 0.0, 0.0, 0.0)), clamp(length(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(155.246))))), 0.0)), length(vec4(0.0, 0.0, 0.0, 0.0)), length(vec4(0.0, 0.0, 0.0, 0.0)))), 0.0, 1.0, abs(1.0), 0.0, determinant(mat4(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 1.0)), clamp(float(mat3x2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 1.0)), _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 1.0)), min(float(mat3x2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 1.0)), float(mat3x2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 1.0)))), float(mat3x2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 1.0))))), 0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(_GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0, 0.0), mix(vec2(_GLF_FUZZED(-8520.2932), _GLF_FUZZED((-759.085))), vec2((vec2(1.0, 0.0))[0], (vec2(1.0, 0.0))[1]), bvec2(true, true))), vec2(mat3x4(_GLF_IDENTITY(vec2(1.0, 0.0), mix(vec2(_GLF_FUZZED(-8520.2932), _GLF_FUZZED((-759.085))), vec2((vec2(1.0, 0.0))[0], (vec2(1.0, 0.0))[1]), bvec2(true, true))), 0.0, length(vec2(0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0))), determinant(mat2(1.0, 1.0, 0.0, 1.0)), 1.0, 0.0))), vec2(1.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, round(length(normalize(cos(vec4(0.0, 0.0, 0.0, 0.0))))), 0.0, 0.0, 0.0, 1.0, exp(0.0), tan(0.0), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0))), 0.0, 0.0, 0.0)), max(float(mat4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, round(length(normalize(cos(vec4(0.0, 0.0, 0.0, 0.0))))), 0.0, 0.0, 0.0, 1.0, exp(0.0), tan(0.0), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0))), 0.0, 0.0, 0.0)), float(mat4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, round(length(normalize(cos(vec4(0.0, 0.0, 0.0, 0.0))))), 0.0, 0.0, 0.0, 1.0, exp(0.0), tan(0.0), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0))), 0.0, 0.0, 0.0)))))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), mix(float(dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), float(_GLF_FUZZED(113.456)), bool(false))), dot(_GLF_IDENTITY(vec2(1.0, 0.0), max(vec2(1.0, 0.0), vec2(1.0, 0.0))), vec2(1.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(reflect(_GLF_IDENTITY(-77.19, max(-77.19, _GLF_IDENTITY(-77.19, float(mat2x3(-77.19, 1.0, 1.0, 0.0, 1.0, 0.0))))), -8821.9946)) : 0.0))))), float(mat3x2(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), _GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec3(0.0, 0.0, 0.0)), (float(vec3(0.0, 0.0, 0.0))) / 1.0))), min(vec2(1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0))), vec2(1.0, 0.0))))), 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, 0.0))))), 0.0, _GLF_IDENTITY(0.0, float(mat4x2(0.0, 0.0, 1.0, 0.0, cos(0.0), 1.0, 0.0, 1.0))), 0.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)))), (false ? _GLF_FUZZED(exp(8.7)) : 0.0)), 0.0, 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(525.451))), 0.0, 0.0)), abs(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), clamp(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), clamp(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), (true ? dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))) : _GLF_FUZZED(6.9))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))))), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), (_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), (dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))))) * 1.0)) / 1.0))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)))), 0.0, 1.0)))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))) || false))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))) || false))), true, false, true))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))
    barrier();
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_WorkGroupID.x, clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x))))) - 0u);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))), (_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), bool(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), true, true)))))) || false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-2047.9567), _GLF_FUZZED(54.90)), bvec2(false, false))))).y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(subgroup_local_id) : workgroup_size)), min(_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(subgroup_local_id) : workgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(subgroup_local_id) : workgroup_size)), clamp(_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(subgroup_local_id) : workgroup_size)), _GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(subgroup_local_id) : workgroup_size)), _GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(subgroup_local_id) : workgroup_size)))))), 0u ^ (workgroup_size)) * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), (uint(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)))) | _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_IDENTITY(workgroup_id, min(_GLF_IDENTITY(workgroup_id, 0u | (_GLF_IDENTITY(workgroup_id, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, uint(uvec4(_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id))) | (workgroup_id)), 0u, 1u, 0u))), min(workgroup_id, workgroup_id)))))), workgroup_id))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).y)) ? _GLF_FUZZED(workgroup_size) : uint(_GLF_IDENTITY(workgroup_id, min(_GLF_IDENTITY(workgroup_id, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) | (_GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))) | 0u))))), workgroup_id)))))), ((uint(_GLF_IDENTITY(workgroup_id, min(_GLF_IDENTITY(workgroup_id, 0u | (_GLF_IDENTITY(workgroup_id, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))) - 0u))))), workgroup_id))))) | ((_GLF_IDENTITY(uint(_GLF_IDENTITY(workgroup_id, min(_GLF_IDENTITY(workgroup_id, 0u | (_GLF_IDENTITY(workgroup_id, 0u ^ (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)))))), workgroup_id))), (uint(_GLF_IDENTITY(workgroup_id, min(_GLF_IDENTITY(workgroup_id, 0u | (_GLF_IDENTITY(workgroup_id, 0u ^ (_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(min(workgroup_id, workgroup_id), ~ (_GLF_IDENTITY(~ (min(workgroup_id, workgroup_id)), (~ (min(workgroup_id, workgroup_id))) << 0u)))))))), workgroup_id)))) * ((1u & 1u) | 1u)))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), _GLF_IDENTITY((uint(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)))) | _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_IDENTITY(workgroup_id, min(_GLF_IDENTITY(workgroup_id, 0u | (_GLF_IDENTITY(workgroup_id, 0u ^ (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)))))), workgroup_id))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : uint(_GLF_IDENTITY(workgroup_id, min(_GLF_IDENTITY(workgroup_id, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) | (_GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u))), 0u ^ (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)))))), workgroup_id)))))), ((uint(_GLF_IDENTITY(workgroup_id, min(_GLF_IDENTITY(workgroup_id, 0u | (_GLF_IDENTITY(workgroup_id, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))) - 0u))))), workgroup_id))))) | ((_GLF_IDENTITY(uint(_GLF_IDENTITY(workgroup_id, min(_GLF_IDENTITY(workgroup_id, 0u | (_GLF_IDENTITY(workgroup_id, 0u ^ (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)))))), workgroup_id))), (uint(_GLF_IDENTITY(workgroup_id, min(_GLF_IDENTITY(workgroup_id, 0u | (_GLF_IDENTITY(workgroup_id, 0u ^ (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)))))), workgroup_id)))) * ((1u & 1u) | 1u))))), ~ (_GLF_IDENTITY(~ ((uint(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)))) | _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_IDENTITY(workgroup_id, min(_GLF_IDENTITY(workgroup_id, 0u | (_GLF_IDENTITY(workgroup_id, 0u ^ (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)))))), workgroup_id))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : uint(_GLF_IDENTITY(workgroup_id, min(_GLF_IDENTITY(workgroup_id, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) | (_GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u))), 0u ^ (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)))))), workgroup_id)))))), ((uint(_GLF_IDENTITY(workgroup_id, min(_GLF_IDENTITY(workgroup_id, 0u | (_GLF_IDENTITY(workgroup_id, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))) - 0u))))), workgroup_id))))) | ((_GLF_IDENTITY(uint(_GLF_IDENTITY(workgroup_id, min(_GLF_IDENTITY(workgroup_id, 0u | (_GLF_IDENTITY(workgroup_id, 0u ^ (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)))))), workgroup_id))), (uint(_GLF_IDENTITY(workgroup_id, min(_GLF_IDENTITY(workgroup_id, 0u | (_GLF_IDENTITY(workgroup_id, 0u ^ (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)))))), workgroup_id)))) * ((1u & 1u) | 1u)))))), (~ ((uint(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)))) | _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_IDENTITY(workgroup_id, min(_GLF_IDENTITY(workgroup_id, 0u | (_GLF_IDENTITY(workgroup_id, 0u ^ (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)))))), workgroup_id))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : uint(_GLF_IDENTITY(workgroup_id, min(_GLF_IDENTITY(workgroup_id, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) | (_GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u))), 0u ^ (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)))))), workgroup_id)))))), ((uint(_GLF_IDENTITY(workgroup_id, min(_GLF_IDENTITY(workgroup_id, 0u | (_GLF_IDENTITY(workgroup_id, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))) - 0u))))), workgroup_id))))) | ((_GLF_IDENTITY(uint(_GLF_IDENTITY(workgroup_id, min(_GLF_IDENTITY(workgroup_id, 0u | (_GLF_IDENTITY(workgroup_id, 0u ^ (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)))))), workgroup_id))), (uint(_GLF_IDENTITY(workgroup_id, min(_GLF_IDENTITY(workgroup_id, 0u | (_GLF_IDENTITY(workgroup_id, 0u ^ (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)))))), workgroup_id)))) * ((1u & 1u) | 1u))))))) | (~ ((uint(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)))) | _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_IDENTITY(workgroup_id, min(_GLF_IDENTITY(workgroup_id, 0u | (_GLF_IDENTITY(workgroup_id, 0u ^ (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)))))), workgroup_id))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : uint(_GLF_IDENTITY(workgroup_id, min(_GLF_IDENTITY(workgroup_id, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) | (_GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u))), 0u ^ (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)))))), workgroup_id)))))), ((uint(_GLF_IDENTITY(workgroup_id, min(_GLF_IDENTITY(workgroup_id, 0u | (_GLF_IDENTITY(workgroup_id, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))) - 0u))))), workgroup_id))))) | ((_GLF_IDENTITY(uint(_GLF_IDENTITY(workgroup_id, min(_GLF_IDENTITY(workgroup_id, 0u | (_GLF_IDENTITY(workgroup_id, 0u ^ (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)))))), workgroup_id))), (uint(_GLF_IDENTITY(workgroup_id, min(_GLF_IDENTITY(workgroup_id, 0u | (_GLF_IDENTITY(workgroup_id, 0u ^ (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)))))), workgroup_id)))) * ((1u & 1u) | 1u)))))))))))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), false || (_GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), bool(bool(((injectionSwitch.x < injectionSwitch.y))))))) && true)) ? _GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(min(_GLF_IDENTITY(workgroup_id, clamp(_GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u), workgroup_id, _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) >> 0u, 0u ^ (_GLF_IDENTITY((0u), ~ (~ ((0u)))) >> 0u))) ^ (workgroup_id)))), workgroup_id), ~ _GLF_IDENTITY((~ (min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)), (workgroup_id) + _GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, uint(uint(0u)))))), workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(~ (~ (workgroup_id)), (_GLF_IDENTITY(~ (~ (workgroup_id)), (~ (~ (workgroup_id))) ^ 0u)) ^ 0u)), (_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(~ (~ (workgroup_id)), (_GLF_IDENTITY(~ (~ (workgroup_id)), (~ (~ (workgroup_id))) ^ 0u)) ^ 0u))) ^ 0u))))), workgroup_id))), clamp((~ (min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id)), clamp(_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id)), _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id)), _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id)))), workgroup_id, workgroup_id)), _GLF_IDENTITY(clamp(_GLF_IDENTITY(workgroup_id, (workgroup_id) + _GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), uint(uint(0u)))))), workgroup_id, _GLF_IDENTITY(workgroup_id, 0u ^ (_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(~ (~ (workgroup_id)), (_GLF_IDENTITY(~ (~ (workgroup_id)), (~ (~ (workgroup_id))) ^ 0u)) ^ 0u))))), ~ (_GLF_IDENTITY(~ (clamp(_GLF_IDENTITY(workgroup_id, (workgroup_id) + _GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, uint(uint(0u)))))), workgroup_id, _GLF_IDENTITY(workgroup_id, 0u ^ (_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(~ (~ (workgroup_id)), (_GLF_IDENTITY(~ (~ (workgroup_id)), (~ (~ (workgroup_id))) ^ 0u)) ^ 0u)))))), _GLF_IDENTITY((~ (clamp(_GLF_IDENTITY(workgroup_id, (workgroup_id) + _GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, uint(uint(0u)))))), workgroup_id, _GLF_IDENTITY(workgroup_id, 0u ^ (_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(~ (~ (workgroup_id)), (_GLF_IDENTITY(~ (~ (workgroup_id)), (~ (~ (workgroup_id))) ^ 0u)) ^ 0u))))))) << 0u, max((~ (clamp(_GLF_IDENTITY(workgroup_id, (workgroup_id) + _GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, uint(uint(0u)))))), workgroup_id, _GLF_IDENTITY(workgroup_id, 0u ^ (_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(~ (~ (workgroup_id)), (_GLF_IDENTITY(~ (~ (workgroup_id)), (~ (~ (workgroup_id))) ^ 0u)) ^ 0u))))))) << 0u, (~ (clamp(_GLF_IDENTITY(workgroup_id, (workgroup_id) + _GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, uint(uint(0u)))))), workgroup_id, _GLF_IDENTITY(workgroup_id, 0u ^ (_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(~ (~ (workgroup_id)), (_GLF_IDENTITY(~ (~ (workgroup_id)), (~ (~ (workgroup_id))) ^ 0u)) ^ 0u))))))) << 0u)))))), workgroup_id))), (~ (min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, clamp(_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, 0u ^ (workgroup_id))) | _GLF_IDENTITY((workgroup_id), ((workgroup_id)) / 1u)), workgroup_id, workgroup_id)), clamp(_GLF_IDENTITY(workgroup_id, (workgroup_id) + _GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, uint(uint(0u)))))), workgroup_id, _GLF_IDENTITY(workgroup_id, 0u ^ (_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (workgroup_id)), (_GLF_IDENTITY(~ (~ (workgroup_id)), (~ (~ (workgroup_id))) ^ 0u)) ^ 0u), (_GLF_IDENTITY(~ (~ (workgroup_id)), (_GLF_IDENTITY(~ (~ (workgroup_id)), (~ (~ (workgroup_id))) ^ 0u)) ^ 0u)) << 0u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (workgroup_id)), (_GLF_IDENTITY(~ (~ (workgroup_id)), (~ (~ (workgroup_id))) ^ 0u)) ^ 0u), (_GLF_IDENTITY(~ (~ (workgroup_id)), (_GLF_IDENTITY(~ (~ (workgroup_id)), (~ (~ (workgroup_id))) ^ 0u)) ^ 0u)) << 0u))))))))), workgroup_id))), _GLF_IDENTITY((~ (min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, clamp(_GLF_IDENTITY(workgroup_id, (workgroup_id) - 0u), workgroup_id, workgroup_id)), clamp(_GLF_IDENTITY(workgroup_id, (workgroup_id) + _GLF_IDENTITY(0u, _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) << 0u, min((0u) << 0u, (0u) << 0u))), 0u)) : _GLF_FUZZED(packUnorm2x16(vec2(0.0, 0.5))))) | (_GLF_IDENTITY(0u, uint(uint(0u)))))), workgroup_id, _GLF_IDENTITY(workgroup_id, 0u ^ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, 0u | (workgroup_id)), _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (workgroup_id)), clamp(_GLF_IDENTITY(~ (~ (workgroup_id)), ~ (~ (~ (~ (workgroup_id))))), ~ (~ (workgroup_id)), ~ (~ (workgroup_id)))), (_GLF_IDENTITY(~ _GLF_IDENTITY((~ (workgroup_id)), (_GLF_IDENTITY((~ (workgroup_id)), 0u | (_GLF_IDENTITY((~ (workgroup_id)), (true ? (~ (workgroup_id)) : _GLF_FUZZED(num_workgroup)))))) ^ 0u), (~ (~ _GLF_IDENTITY((workgroup_id), ((workgroup_id)) - 0u))) ^ _GLF_IDENTITY(0u, (0u) - 0u))) ^ 0u))), uint(uvec4((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, 0u | (workgroup_id)), _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (workgroup_id)), clamp(_GLF_IDENTITY(~ (~ (workgroup_id)), ~ (~ (~ (~ (workgroup_id))))), ~ (~ (workgroup_id)), ~ (~ (workgroup_id)))), (_GLF_IDENTITY(~ _GLF_IDENTITY((~ (workgroup_id)), (_GLF_IDENTITY((~ (workgroup_id)), 0u | (_GLF_IDENTITY((~ (workgroup_id)), (true ? (~ (workgroup_id)) : _GLF_FUZZED(num_workgroup)))))) ^ 0u), (~ (~ _GLF_IDENTITY((workgroup_id), ((workgroup_id)) - 0u))) ^ _GLF_IDENTITY(0u, (0u) - 0u))) ^ 0u))), 1u, 1u, 0u))), ~ (~ ((_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (workgroup_id)), clamp(_GLF_IDENTITY(~ (~ (workgroup_id)), ~ (~ (~ (~ (workgroup_id))))), ~ (~ (workgroup_id)), ~ (~ (workgroup_id)))), (_GLF_IDENTITY(~ (~ (workgroup_id)), (~ (~ (workgroup_id))) ^ _GLF_IDENTITY(0u, (0u) - 0u))) ^ 0u))))))))), workgroup_id))), max((~ (_GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id)), clamp(_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (workgroup_id))) + _GLF_IDENTITY(0u, 0u | _GLF_IDENTITY((_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(0u)), (uint(uint(0u))) - 0u))), 0u | ((_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(0u)), (uint(uint(0u))) - 0u))))))), workgroup_id, _GLF_IDENTITY(workgroup_id, 0u ^ (_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(~ (~ (workgroup_id)), (_GLF_IDENTITY(~ (~ (workgroup_id)), _GLF_IDENTITY((~ (~ (workgroup_id))) ^ 0u, ~ (~ ((~ (~ (workgroup_id))) ^ 0u))))) ^ 0u)))))), workgroup_id), 0u + (min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id)), clamp(_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (workgroup_id))) + _GLF_IDENTITY(0u, 0u | _GLF_IDENTITY((_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(0u, 0u ^ (0u)))), _GLF_IDENTITY((uint(uint(0u))) - 0u, min((uint(uint(0u))) - 0u, (uint(uint(0u))) - 0u))))), 0u | ((_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(0u)), (uint(uint(0u))) - 0u))))))), workgroup_id, _GLF_IDENTITY(workgroup_id, 0u ^ (_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(~ (~ (workgroup_id)), (_GLF_IDENTITY(~ (~ (workgroup_id)), _GLF_IDENTITY((~ (~ (workgroup_id))) ^ 0u, ~ (~ ((~ _GLF_IDENTITY((~ (workgroup_id)), 1u * ((~ (workgroup_id))))) ^ 0u))))) ^ 0u)))))), workgroup_id))))), (~ (min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(workgroup_id, uint(uvec2(_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id)), (0u & 35694u)))))), clamp(_GLF_IDENTITY(workgroup_id, (workgroup_id) + _GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, uint(uint(0u)))))), workgroup_id, _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, uint(uvec4(0u, 1u, 1u, 1u)))))) | (0u)) ^ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(~ (~ (workgroup_id)), (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (workgroup_id)), (~ (~ (workgroup_id))) ^ 0u), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (workgroup_id)), (~ (~ (workgroup_id))) ^ 0u), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(~ (~ (workgroup_id)), (~ (~ (workgroup_id))) ^ 0u)))) ^ 0u, max((_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (workgroup_id)), (~ (~ (workgroup_id))) ^ 0u), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(~ (~ (workgroup_id)), (~ (~ (workgroup_id))) ^ 0u)))) ^ 0u, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (workgroup_id)), (~ (~ (workgroup_id))) ^ 0u), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(~ (~ (workgroup_id)), (~ (~ (workgroup_id))) ^ 0u)))) ^ 0u, uint(uint(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (workgroup_id)), (~ (~ (workgroup_id))) ^ 0u), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(~ (~ (workgroup_id)), (~ (~ (workgroup_id))) ^ 0u)))) ^ 0u, 0u | ((_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (workgroup_id)), (~ (~ (workgroup_id))) ^ 0u), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(~ (~ (workgroup_id)), (~ (~ (workgroup_id))) ^ 0u)))) ^ 0u))))))))) ^ 0u))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(~ (~ (workgroup_id)), (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (workgroup_id)), (~ (~ (workgroup_id))) ^ 0u), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (workgroup_id)), (~ (~ (workgroup_id))) ^ 0u), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(~ (~ (workgroup_id)), (~ (~ (workgroup_id))) ^ 0u)))) ^ 0u, max((_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (workgroup_id)), (~ (~ (workgroup_id))) ^ 0u), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(~ (~ (workgroup_id)), (~ (~ (workgroup_id))) ^ 0u)))) ^ 0u, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (workgroup_id)), (~ (~ (workgroup_id))) ^ 0u), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(~ (~ (workgroup_id)), (~ (~ (workgroup_id))) ^ 0u)))) ^ 0u, uint(uint(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (workgroup_id)), (~ (~ (workgroup_id))) ^ 0u), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(~ (~ (workgroup_id)), (~ (~ (workgroup_id))) ^ 0u)))) ^ 0u, 0u | ((_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (workgroup_id)), (~ (~ (workgroup_id))) ^ 0u), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(~ (~ (workgroup_id)), (~ (~ (workgroup_id))) ^ 0u)))) ^ 0u))))))))) ^ 0u))), 0u | ((_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(~ (~ (workgroup_id)), (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (workgroup_id)), (~ (~ (workgroup_id))) ^ 0u), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (workgroup_id)), (~ (~ (workgroup_id))) ^ 0u), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(~ (~ (workgroup_id)), (~ (~ (workgroup_id))) ^ 0u)))) ^ 0u, max((_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (workgroup_id)), (~ (~ (workgroup_id))) ^ 0u), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(~ (~ (workgroup_id)), (~ (~ (workgroup_id))) ^ 0u)))) ^ 0u, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (workgroup_id)), (~ (~ (workgroup_id))) ^ 0u), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(~ (~ (workgroup_id)), (~ (~ (workgroup_id))) ^ 0u)))) ^ 0u, uint(uint(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (workgroup_id)), (~ (~ (workgroup_id))) ^ 0u), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(~ (~ (workgroup_id)), (~ (~ (workgroup_id))) ^ 0u)))) ^ 0u, 0u | ((_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (workgroup_id)), (~ (~ (workgroup_id))) ^ 0u), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(~ (~ (workgroup_id)), (~ (~ (workgroup_id))) ^ 0u)))) ^ 0u))))))))) ^ 0u))))), (_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(~ (~ (workgroup_id)), (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (workgroup_id)), (~ (~ (workgroup_id))) ^ 0u), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (workgroup_id)), (~ (~ (workgroup_id))) ^ 0u), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(~ (~ (workgroup_id)), (~ (~ (workgroup_id))) ^ 0u)))) ^ 0u, max((_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (workgroup_id)), (~ (~ (workgroup_id))) ^ 0u), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(~ (~ (workgroup_id)), (~ (~ (workgroup_id))) ^ 0u)))) ^ 0u, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (workgroup_id)), (~ (~ (workgroup_id))) ^ 0u), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(~ (~ (workgroup_id)), (~ (~ (workgroup_id))) ^ 0u)))) ^ 0u, uint(uint(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (workgroup_id)), (~ (~ (workgroup_id))) ^ 0u), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(~ (~ (workgroup_id)), (~ (~ (workgroup_id))) ^ 0u)))) ^ 0u, 0u | ((_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (workgroup_id)), (~ (~ (workgroup_id))) ^ 0u), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(~ (~ (workgroup_id)), (~ (~ (workgroup_id))) ^ 0u)))) ^ 0u))))))))) ^ 0u))), (_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(~ (~ (workgroup_id)), (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (workgroup_id)), (~ (~ (workgroup_id))) ^ 0u), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (workgroup_id)), (~ (~ (workgroup_id))) ^ 0u), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(~ (~ (workgroup_id)), (~ (~ (workgroup_id))) ^ 0u)))) ^ 0u, max((_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (workgroup_id)), (~ (~ (workgroup_id))) ^ 0u), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(~ (~ (workgroup_id)), (~ (~ (workgroup_id))) ^ 0u)))) ^ 0u, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (workgroup_id)), (~ (~ (workgroup_id))) ^ 0u), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(~ (~ (workgroup_id)), (~ (~ (workgroup_id))) ^ 0u)))) ^ 0u, uint(uint(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (workgroup_id)), (~ (~ (workgroup_id))) ^ 0u), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(~ (~ (workgroup_id)), (~ (~ (workgroup_id))) ^ 0u)))) ^ 0u, 0u | ((_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (workgroup_id)), (~ (~ (workgroup_id))) ^ 0u), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(~ (~ (workgroup_id)), (~ (~ (workgroup_id))) ^ 0u)))) ^ 0u))))))))) ^ 0u)))))))), workgroup_id)))))))))), (uint(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)))) | (uint(_GLF_IDENTITY(workgroup_id, min(workgroup_id, _GLF_IDENTITY(workgroup_id, (workgroup_id) | (_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (workgroup_id) | (_GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id))))) ^ (0u & 157588u)), 0u ^ (_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (workgroup_id) | (_GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id))))) ^ (0u & 157588u))))) | 0u)))))))))) : _GLF_FUZZED(158040u)));
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))) || false)), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))) || false))) || false)))))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  return;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), true)), (bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, (true) || false), false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || (true))))))), true))) && true)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ! (! ((! (injectionSwitch.x > injectionSwitch.y)))))))))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ! (! ((! (injectionSwitch.x > injectionSwitch.y))))))))))))) && true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY((false) && true, bool(_GLF_IDENTITY(bvec3((false) && true, false, false), bvec3(bvec4(bvec3((false) && true, false, false), false))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY((false) && true, bool(_GLF_IDENTITY(bvec3((false) && true, false, false), bvec3(bvec4(bvec3((false) && true, false, false), false)))))))) || false) || false), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))), (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))) || false))))
        return;
       barrier();
      }
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, round(length(normalize(1.0)))), (mat2(injectionSwitch, 0.0, round(length(normalize(1.0))))) * mat2(1.0)))))).y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], float(mat4x3(injectionSwitch[1], 0.0, abs(1.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))))).y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) / cos(0.0))))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))))) && (bool(bvec2(false, false)))))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), _GLF_IDENTITY(min(_GLF_IDENTITY(uint(1), (uint(1)) + 0u), _GLF_IDENTITY(uint(1), 0u ^ (uint(1)))), uint(uvec3(min(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-75082)))), 0u ^ (uint(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-75082)))))), (uint(1)) + 0u), _GLF_IDENTITY(uint(1), 0u ^ (_GLF_IDENTITY(uint(1), ~ (~ (uint(1))))))), 0u, 0u))))) | _GLF_IDENTITY((uint(1)), ((uint(1))) | 0u)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(4, 0, 1), clamp(_GLF_IDENTITY(ivec3(4, 0, 1), clamp(ivec3(4, 0, 1), ivec3(4, 0, 1), ivec3(4, 0, 1))), ivec3(4, 0, 1), ivec3(4, 0, 1))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(ivec3(4, 0, 1), clamp(_GLF_IDENTITY(ivec3(4, 0, 1), clamp(ivec3(4, 0, 1), ivec3(4, 0, 1), ivec3(4, 0, 1))), ivec3(4, 0, 1), ivec3(4, 0, 1))), max(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) ^ 0)) ^ 0), 0, 1), clamp(_GLF_IDENTITY(ivec3(4, 0, 1), clamp(ivec3(4, 0, 1), ivec3(4, 0, 1), ivec3(4, 0, 1))), ivec3(4, 0, 1), ivec3(4, 0, 1))), _GLF_IDENTITY(ivec3(4, 0, 1), clamp(_GLF_IDENTITY(ivec3(4, 0, 1), clamp(ivec3(4, 0, 1), ivec3(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) >> 0)) | (4)), 0, 1), ivec3(4, 0, 1))), ivec3(4, 0, 1), ivec3(4, 0, 1)))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(0, (_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), 1 * (~ (0)))))) | (0)), 1), clamp(_GLF_IDENTITY(ivec3(4, 0, 1), clamp(ivec3(4, 0, 1), ivec3(4, 0, 1), ivec3(4, 0, 1))), ivec3(4, 0, 1), ivec3(4, 0, 1))), max(_GLF_IDENTITY(ivec3(4, 0, 1), clamp(_GLF_IDENTITY(ivec3(4, 0, 1), clamp(ivec3(4, 0, 1), ivec3(4, 0, 1), ivec3(4, 0, 1))), ivec3(4, 0, 1), ivec3(4, 0, 1))), _GLF_IDENTITY(ivec3(4, 0, 1), clamp(_GLF_IDENTITY(ivec3(4, 0, 1), clamp(ivec3(4, 0, 1), ivec3(4, 0, 1), ivec3(4, 0, 1))), ivec3(4, 0, 1), ivec3(4, 0, _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, clamp(1, 1, 1)))), 1)))))))), ~ (~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(ivec3(4, 0, 1), clamp(_GLF_IDENTITY(ivec3(4, 0, 1), clamp(ivec3(4, 0, 1), ivec3(4, 0, 1), ivec3(4, 0, 1))), ivec3(4, 0, 1), ivec3(4, 0, 1))), max(_GLF_IDENTITY(ivec3(4, 0, 1), clamp(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(4, 0, 1), (ivec3(4, 0, 1)) | (ivec3(4, 0, 1))), clamp(ivec3(4, 0, 1), ivec3(4, 0, 1), ivec3(4, 0, 1))), ivec3(4, 0, 1), ivec3(4, 0, 1))), _GLF_IDENTITY(ivec3(4, 0, 1), clamp(_GLF_IDENTITY(ivec3(4, 0, 1), clamp(ivec3(4, 0, 1), ivec3(4, 0, 1), ivec3(4, 0, 1))), ivec3(4, 0, 1), ivec3(4, 0, 1)))))))))) << ivec3(0, 0, 0))))), 1 * _GLF_IDENTITY((int(_GLF_IDENTITY(ivec3(4, 0, 1), clamp(_GLF_IDENTITY(ivec3(4, 0, 1), clamp(ivec3(4, 0, 1), ivec3(4, 0, 1), ivec3(4, 0, 1))), ivec3(4, 0, 1), ivec3(4, 0, 1))))), ((int(_GLF_IDENTITY(ivec3(4, 0, 1), clamp(_GLF_IDENTITY(ivec3(4, 0, 1), clamp(ivec3(4, 0, 1), ivec3(4, 0, 1), ivec3(4, 0, 1))), ivec3(4, 0, 1), ivec3(4, 0, 1)))))) + 0))), (_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(4, 0, 1), (ivec3(4, 0, 1)) | (ivec3(4, 0, 1))), clamp(_GLF_IDENTITY(ivec3(4, 0, 1), clamp(ivec3(4, 0, 1), ivec3(4, 0, 1), ivec3(4, 0, _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(17497)))))), ivec3(4, 0, 1), ivec3(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(-46871) : _GLF_IDENTITY(4, 1 * (4)))), 0, 1)))), 1 * (int(_GLF_IDENTITY(ivec3(4, 0, 1), clamp(_GLF_IDENTITY(ivec3(4, 0, 1), clamp(ivec3(4, 0, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) * (1 & 1))), ivec3(4, 0, 1), ivec3(4, 0, 1))), _GLF_IDENTITY(ivec3(4, 0, 1), _GLF_IDENTITY(ivec3(ivec3(ivec3(4, 0, 1))), (ivec3(ivec3(ivec3(4, 0, _GLF_IDENTITY(1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(1, ~ (~ (1))) : _GLF_FUZZED(72768))))))) / (ivec3(1, 1, 1) ^ ivec3(0, 0, 0)))), ivec3(4, 0, 1))))))), (_GLF_IDENTITY(4, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(4, 0, 1), clamp(_GLF_IDENTITY(ivec3(4, 0, 1), clamp(ivec3(_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1)))), 0, 1), ivec3(4, 0, 1), ivec3(4, _GLF_IDENTITY(0, _GLF_IDENTITY((0), ((0)) + 0) / 1), _GLF_IDENTITY(1, (1) - 0)))), _GLF_IDENTITY(ivec3(4, 0, 1), (ivec3(4, 0, 1)) << ivec3(0, 0, 0)), ivec3(4, 0, 1)))), 1 * (int(_GLF_IDENTITY(ivec3(4, 0, _GLF_IDENTITY(1, int(ivec2(_GLF_IDENTITY(1, _GLF_IDENTITY(min(1, 1), (min(1, 1)) / 1)), 1)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(4, 0, 1), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(bitfieldReverse(ivec3(-49471, -9544, 64969))) : ivec3(4, 0, 1))), clamp(ivec3(4, 0, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) * _GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), (_GLF_IDENTITY(1, (1) ^ 0)) * 1))), ivec3(4, _GLF_IDENTITY(0, clamp(0, 0, 0)), 1), _GLF_IDENTITY(ivec3(4, 0, _GLF_IDENTITY(1, ~ (~ (1)))), (ivec3(4, 0, _GLF_IDENTITY(1, ~ (~ (1))))) >> ivec3(0, 0, 0)))), ivec3(4, 0, 1), ivec3(4, 0, 1)))))))) ^ 0)) << (39568 & 0)), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(4, 0, 1), clamp(_GLF_IDENTITY(ivec3(4, 0, 1), clamp(ivec3(4, 0, 1), ivec3(4, 0, 1), ivec3(4, 0, 1))), ivec3(4, 0, 1), ivec3(4, 0, 1))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(ivec3(4, 0, 1), clamp(_GLF_IDENTITY(ivec3(4, 0, 1), clamp(ivec3(4, 0, 1), ivec3(4, 0, 1), ivec3(4, 0, 1))), ivec3(4, 0, 1), ivec3(4, 0, 1))), max(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) ^ 0)) ^ 0), 0, 1), clamp(_GLF_IDENTITY(ivec3(4, 0, 1), clamp(ivec3(4, 0, 1), ivec3(4, 0, 1), ivec3(4, 0, 1))), ivec3(4, 0, 1), ivec3(4, 0, 1))), _GLF_IDENTITY(ivec3(4, 0, 1), clamp(_GLF_IDENTITY(ivec3(4, 0, 1), clamp(ivec3(4, 0, 1), ivec3(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) >> 0)) | (4)), 0, 1), ivec3(4, 0, 1))), ivec3(4, 0, 1), ivec3(4, 0, 1)))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(0, (_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), 1 * (~ (0)))))) | (0)), 1), clamp(_GLF_IDENTITY(ivec3(4, 0, 1), clamp(ivec3(4, 0, 1), ivec3(4, 0, 1), ivec3(4, 0, 1))), ivec3(4, 0, 1), ivec3(4, 0, 1))), max(_GLF_IDENTITY(ivec3(4, 0, 1), clamp(_GLF_IDENTITY(ivec3(4, 0, 1), clamp(ivec3(4, 0, 1), ivec3(4, 0, 1), ivec3(4, 0, 1))), ivec3(4, 0, 1), ivec3(4, 0, 1))), _GLF_IDENTITY(ivec3(4, 0, 1), clamp(_GLF_IDENTITY(ivec3(4, 0, 1), clamp(ivec3(4, 0, 1), ivec3(4, 0, 1), ivec3(4, 0, 1))), ivec3(4, 0, 1), ivec3(4, 0, _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, clamp(1, 1, 1)))), 1)))))))), ~ (~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(ivec3(4, 0, 1), clamp(_GLF_IDENTITY(ivec3(4, 0, 1), clamp(ivec3(4, 0, 1), ivec3(4, 0, 1), ivec3(4, 0, 1))), ivec3(4, 0, 1), ivec3(4, 0, 1))), max(_GLF_IDENTITY(ivec3(4, 0, 1), clamp(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(4, 0, 1), (ivec3(4, 0, 1)) | (ivec3(4, 0, 1))), clamp(ivec3(4, 0, 1), ivec3(4, 0, 1), ivec3(4, 0, 1))), ivec3(4, 0, 1), ivec3(4, 0, 1))), _GLF_IDENTITY(ivec3(4, 0, 1), clamp(_GLF_IDENTITY(ivec3(4, 0, 1), clamp(ivec3(4, 0, 1), ivec3(4, 0, 1), ivec3(4, 0, 1))), ivec3(4, 0, 1), ivec3(4, 0, 1)))))))))) << ivec3(0, 0, 0))))), 1 * _GLF_IDENTITY((int(_GLF_IDENTITY(ivec3(4, 0, 1), clamp(_GLF_IDENTITY(ivec3(4, 0, 1), clamp(ivec3(4, 0, 1), ivec3(4, 0, 1), ivec3(4, 0, 1))), ivec3(4, 0, 1), ivec3(4, 0, 1))))), ((int(_GLF_IDENTITY(ivec3(4, 0, 1), clamp(_GLF_IDENTITY(ivec3(4, 0, 1), clamp(ivec3(4, 0, 1), ivec3(4, 0, 1), ivec3(4, 0, 1))), ivec3(4, 0, 1), ivec3(4, 0, 1)))))) + 0))), (_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(4, 0, 1), (ivec3(4, 0, 1)) | (ivec3(4, 0, 1))), clamp(_GLF_IDENTITY(ivec3(4, 0, 1), clamp(ivec3(4, 0, 1), ivec3(4, 0, 1), ivec3(4, 0, _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(17497)))))), ivec3(4, 0, 1), ivec3(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(-46871) : _GLF_IDENTITY(4, 1 * (4)))), 0, 1)))), 1 * (int(_GLF_IDENTITY(ivec3(4, 0, 1), clamp(_GLF_IDENTITY(ivec3(4, 0, 1), clamp(ivec3(4, 0, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) * (1 & 1))), ivec3(4, 0, 1), ivec3(4, 0, 1))), _GLF_IDENTITY(ivec3(4, 0, 1), _GLF_IDENTITY(ivec3(ivec3(ivec3(4, 0, 1))), (ivec3(ivec3(ivec3(4, 0, _GLF_IDENTITY(1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(1, ~ (~ (1))) : _GLF_FUZZED(72768))))))) / (ivec3(1, 1, 1) ^ ivec3(0, 0, 0)))), ivec3(4, 0, 1))))))), (_GLF_IDENTITY(4, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(4, 0, 1), clamp(_GLF_IDENTITY(ivec3(4, 0, 1), clamp(ivec3(_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1)))), 0, 1), ivec3(4, 0, 1), ivec3(4, _GLF_IDENTITY(0, _GLF_IDENTITY((0), ((0)) + 0) / 1), _GLF_IDENTITY(1, (1) - 0)))), _GLF_IDENTITY(ivec3(4, 0, 1), (ivec3(4, 0, 1)) << ivec3(0, 0, 0)), ivec3(4, 0, 1)))), 1 * (int(_GLF_IDENTITY(ivec3(4, 0, _GLF_IDENTITY(1, int(ivec2(_GLF_IDENTITY(1, _GLF_IDENTITY(min(1, 1), (min(1, 1)) / 1)), 1)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(4, 0, 1), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(bitfieldReverse(ivec3(-49471, -9544, 64969))) : ivec3(4, 0, 1))), clamp(ivec3(4, 0, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) * _GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), (_GLF_IDENTITY(1, (1) ^ 0)) * 1))), ivec3(4, _GLF_IDENTITY(0, clamp(0, 0, 0)), 1), _GLF_IDENTITY(ivec3(4, 0, _GLF_IDENTITY(1, ~ (~ (1)))), (ivec3(4, 0, _GLF_IDENTITY(1, ~ (~ (1))))) >> ivec3(0, 0, 0)))), ivec3(4, 0, 1), ivec3(4, 0, 1)))))))) ^ 0)) << (39568 & 0)))), 64, _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-31152))));
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)) || false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x2(injectionSwitch.y, _GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0, 0.0, sqrt(1.0))), (float(mat3x2(injectionSwitch.y, 1.0, 1.0, 1.0, 0.0, sqrt(1.0)))) / 1.0)), abs(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 0.0, 0.0, sqrt(1.0), 0.0, 1.0, 0.0, 1.0, log(1.0), 0.0, 0.0)), (false ? _GLF_FUZZED(1291.6919) : _GLF_IDENTITY(float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y, _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, (1.0) * abs(1.0)))), 1.0, 1.0, 0.0, sqrt(1.0))), (float(mat3x2(injectionSwitch.y, 1.0, 1.0, 1.0, 0.0, sqrt(1.0)))) / 1.0)), abs(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 0.0, 0.0, sqrt(1.0), 0.0, 1.0, 0.0, 1.0, log(1.0), 0.0, 0.0), (true ? mat4(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y, _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, (1.0) * abs(1.0)))), 1.0, 1.0, 0.0, sqrt(1.0))), (float(mat3x2(injectionSwitch.y, 1.0, 1.0, 1.0, 0.0, sqrt(1.0)))) / 1.0)), abs(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 0.0, 0.0, sqrt(1.0), 0.0, 1.0, 0.0, 1.0, log(1.0), 0.0, 0.0) : _GLF_FUZZED(mat4(38.32, -1.2, 22.93, 495.661, 1.5, -9.2, -6617.2963, -3.5, -398.076, 9.1, -2.9, -4.7, 1.6, -54.00, -1860.0207, -390.729))))), min(float(mat4(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0, 0.0, sqrt(1.0))), (float(mat3x2(injectionSwitch.y, 1.0, 1.0, 1.0, 0.0, sqrt(1.0)))) / 1.0)), abs(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 0.0, 0.0, sqrt(1.0), 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(55.75) : 1.0)), 0.0, 1.0, log(1.0), 0.0, 0.0)), float(mat4(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x2(injectionSwitch.y, _GLF_IDENTITY(1.0, 0.0 + _GLF_IDENTITY((1.0), (_GLF_IDENTITY((1.0), min((1.0), (1.0)))) - 0.0)), 1.0, 1.0, 0.0, sqrt(1.0))), (float(mat3x2(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, sqrt(1.0)))) / 1.0)), abs(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(sqrt(1.0), 0.0 + (_GLF_IDENTITY(sqrt(1.0), clamp(sqrt(1.0), sqrt(1.0), sqrt(1.0))))), 0.0, 1.0, 0.0, 1.0, log(1.0), 0.0, 0.0)))))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) || false) || (_GLF_IDENTITY(false, bool(bool(false)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), true, false, false))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  return;
 uint read = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) << 0), 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(77.32)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false, false)), (bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))).y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))).y))))), true, false, false))) || false)))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, abs(vec2(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))) * (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-11.03), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(5.6)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) / _GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(1.0, 0.0, 0.0, 1.0, log(1.0), 1.0), (mat2x3(1.0, 0.0, 0.0, 1.0, log(1.0), 1.0)) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), (true ? _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(1.0, 0.0, 0.0, 1.0, log(1.0), 1.0), (mat2x3(1.0, 0.0, 0.0, 1.0, log(1.0), 1.0)) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), clamp(float(_GLF_IDENTITY(mat2x3(1.0, 0.0, 0.0, 1.0, log(1.0), 1.0), (mat2x3(1.0, 0.0, 0.0, 1.0, log(1.0), 1.0)) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), float(_GLF_IDENTITY(mat2x3(1.0, 0.0, 0.0, 1.0, log(1.0), 1.0), (mat2x3(1.0, 0.0, 0.0, 1.0, log(1.0), 1.0)) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(1.0, 0.0, 0.0, 1.0, log(1.0), 1.0), (mat2x3(1.0, 0.0, 0.0, 1.0, log(1.0), 1.0)) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), mix(float(float(_GLF_IDENTITY(mat2x3(1.0, 0.0, 0.0, 1.0, log(1.0), 1.0), (mat2x3(1.0, 0.0, 0.0, 1.0, log(1.0), 1.0)) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), float(_GLF_FUZZED(-441.232)), bool(false))))) : _GLF_FUZZED(-2.3)))), 1.0), _GLF_IDENTITY(mat2(1.0) * (vec2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(1.0, 0.0, 0.0, 1.0, log(1.0), 1.0), (mat2x3(1.0, 0.0, 0.0, 1.0, log(1.0), 1.0)) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), (true ? float(_GLF_IDENTITY(mat2x3(1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0)), log(1.0), 1.0), (mat2x3(1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(log(1.0), clamp(log(1.0), _GLF_IDENTITY(log(1.0), mix(float(_GLF_FUZZED(-1.9)), float(log(1.0)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), log(1.0))), 1.0)) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) : _GLF_FUZZED(-2.3)))), 1.0)), (_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(59.10, 3.7)) : mat2(1.0) * (vec2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(1.0, 0.0, 0.0, 1.0, log(1.0), 1.0), (mat2x3(1.0, 0.0, 0.0, 1.0, log(1.0), 1.0)) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), (true ? float(_GLF_IDENTITY(mat2x3(1.0, 0.0, 0.0, 1.0, log(1.0), 1.0), (mat2x3(1.0, 0.0, 0.0, 1.0, log(1.0), 1.0)) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) : _GLF_FUZZED(-2.3)))), 1.0)), (false ? _GLF_FUZZED(vec2(59.10, 3.7)) : mat2(1.0) * (vec2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(1.0, 0.0, 0.0, 1.0, log(1.0), 1.0), (mat2x3(1.0, 0.0, 0.0, 1.0, log(1.0), 1.0)) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), (true ? float(_GLF_IDENTITY(mat2x3(1.0, 0.0, 0.0, 1.0, log(1.0), 1.0), (mat2x3(1.0, 0.0, 0.0, 1.0, log(1.0), 1.0)) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) : _GLF_FUZZED(-2.3)))), 1.0))) - vec2(0.0, 0.0)))))).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(subgroup_local_id + _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(1, 1, 0, 1), (false ? _GLF_FUZZED(clamp(ivec4(91172, 44155, -42820, 59432), ivec4(32312, 70605, -91513, 31441), ivec4(-3115, 44772, -63525, -56683))) : ivec4(1, 1, 0, 1))))) < subgroup_size)
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], 0.0 + ((injectionSwitch)[0])))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(17.83), _GLF_FUZZED(-9100.2107)), bvec2(false, false))).y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(log(-73.58))))))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], 0.0 + ((injectionSwitch)[0])))), _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, (1) + 0)], _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3((injectionSwitch)[_GLF_IDENTITY(1, (1) + 0)], 1.0, tan(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, exp(0.0), 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(mat4x3(6.0, -7830.7837, -2.1, -65.60, 1.3, 7624.1044, 99.56, -5330.6204, -525.147, 802.951, 4734.6239, -2406.9017)) : mat4x3((injectionSwitch)[_GLF_IDENTITY(1, (1) + 0)], 1.0, tan(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, exp(0.0), 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))))), clamp(float(_GLF_IDENTITY(mat4x3((injectionSwitch)[_GLF_IDENTITY(1, (1) + 0)], 1.0, tan(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, exp(0.0), 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(mat4x3(6.0, -7830.7837, -2.1, -65.60, 1.3, 7624.1044, 99.56, -5330.6204, -525.147, 802.951, 4734.6239, -2406.9017)) : mat4x3((injectionSwitch)[_GLF_IDENTITY(1, (1) + 0)], 1.0, tan(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, exp(0.0), 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))))), float(_GLF_IDENTITY(mat4x3((injectionSwitch)[_GLF_IDENTITY(1, (1) + 0)], 1.0, tan(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, exp(0.0), 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(mat4x3(6.0, -7830.7837, -2.1, -65.60, 1.3, 7624.1044, 99.56, -5330.6204, -525.147, 802.951, 4734.6239, -2406.9017)) : mat4x3((injectionSwitch)[_GLF_IDENTITY(1, (1) + 0)], 1.0, tan(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, exp(0.0), 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))))), float(_GLF_IDENTITY(mat4x3((injectionSwitch)[_GLF_IDENTITY(1, (1) + 0)], 1.0, tan(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, exp(0.0), 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(mat4x3(6.0, -7830.7837, -2.1, -65.60, 1.3, 7624.1044, 99.56, -5330.6204, -525.147, 802.951, 4734.6239, -2406.9017)) : mat4x3((injectionSwitch)[_GLF_IDENTITY(1, (1) + 0)], 1.0, tan(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, exp(0.0), 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))))))))), vec2(_GLF_FUZZED(17.83), _GLF_FUZZED(-9100.2107)), bvec2(false, false))).y, mix(float(_GLF_FUZZED((- 8502.1605))), float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], 0.0 + ((injectionSwitch)[0])))), _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, (1) + 0)], _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3((injectionSwitch)[_GLF_IDENTITY(1, (1) + 0)], 1.0, tan(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, exp(0.0), 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(mat4x3(6.0, -7830.7837, -2.1, -65.60, 1.3, 7624.1044, 99.56, -5330.6204, -525.147, 802.951, 4734.6239, -2406.9017)) : mat4x3((injectionSwitch)[_GLF_IDENTITY(1, (1) + 0)], 1.0, tan(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, exp(0.0), 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))))), clamp(float(_GLF_IDENTITY(mat4x3((injectionSwitch)[_GLF_IDENTITY(1, (1) + 0)], 1.0, tan(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, exp(0.0), 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(mat4x3(6.0, -7830.7837, -2.1, -65.60, 1.3, 7624.1044, 99.56, -5330.6204, -525.147, 802.951, 4734.6239, -2406.9017)) : mat4x3((injectionSwitch)[_GLF_IDENTITY(1, (1) + 0)], 1.0, tan(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, exp(0.0), 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))))), float(_GLF_IDENTITY(mat4x3((injectionSwitch)[_GLF_IDENTITY(1, (1) + 0)], 1.0, tan(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, exp(0.0), 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(mat4x3(6.0, -7830.7837, -2.1, -65.60, 1.3, 7624.1044, 99.56, -5330.6204, -525.147, 802.951, 4734.6239, -2406.9017)) : mat4x3((injectionSwitch)[_GLF_IDENTITY(1, (1) + 0)], 1.0, tan(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, exp(0.0), 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))))), float(_GLF_IDENTITY(mat4x3((injectionSwitch)[_GLF_IDENTITY(1, (1) + 0)], 1.0, tan(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, exp(0.0), 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(mat4x3(6.0, -7830.7837, -2.1, -65.60, 1.3, 7624.1044, 99.56, -5330.6204, -525.147, 802.951, 4734.6239, -2406.9017)) : mat4x3((injectionSwitch)[_GLF_IDENTITY(1, (1) + 0)], 1.0, tan(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, exp(0.0), 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))))))))), vec2(_GLF_FUZZED(17.83), _GLF_FUZZED(-9100.2107)), bvec2(false, false))).y), bool(true))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(log(-73.58))))))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, tan(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0))) > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-540.974, 4.3)))), mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(min((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], 0.0 + _GLF_IDENTITY(((injectionSwitch)[0]), (((injectionSwitch)[0])) - log(1.0)))), 1.0 * (_GLF_IDENTITY(min((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], 0.0 + _GLF_IDENTITY(((injectionSwitch)[0]), (((injectionSwitch)[0])) - log(1.0)))), (true ? min((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], 0.0 + _GLF_IDENTITY(((injectionSwitch)[0]), (((injectionSwitch)[0])) - log(1.0)))) : _GLF_FUZZED(4984.4381)))))), (injectionSwitch)[_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(5406))), 1, 0, 0)), (int(ivec4(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(5406))), 1, 0, 0))) * 1))]), vec2(_GLF_FUZZED(17.83), _GLF_FUZZED(-9100.2107)), bvec2(false, false))).y, (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))) ? injectionSwitch.y : _GLF_FUZZED(log(-73.58)))))))) && true), true, true, true))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), (bool(bvec4(false, true, false, false))) || false)), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y) - 0.0)))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   atomicStore(checker[virtual_gid], read, _GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 1, 1)), (false ? _GLF_FUZZED(56164) : int(ivec3(4, 1, 1))))), 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)) / 1.0)))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec4(injectionSwitch.x, 1.0, 0.0, determinant(mat4(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))), clamp(vec4(injectionSwitch.x, 1.0, 0.0, determinant(mat4(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))), vec4(injectionSwitch.x, 1.0, 0.0, determinant(mat4(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))), vec4(injectionSwitch.x, 1.0, 0.0, determinant(mat4(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))))))) > injectionSwitch.y))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), false)), bool(bvec2(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), false, true))))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), false, true)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)), (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), false))) || false), false)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), true)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 0.0)), (vec2(vec4(injectionSwitch, 0.0, 0.0))) / vec2(1.0, 1.0))).y))))
    return;
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false), (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false), (injectionSwitch.x > injectionSwitch.y))), true)), (bool(bvec2(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false), (injectionSwitch.x > injectionSwitch.y))), true))) && true)))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), false || (! (_GLF_IDENTITY(false, false || (false))))))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! _GLF_IDENTITY((! (! (false))), ! (! ((! (! (false)))))))))) && true)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3(injectionSwitch.x, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(tan(0.0), 1.0)), dot(vec2(0.0, 1.0), vec2(tan(0.0), 1.0))), determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0), (mat3(injectionSwitch.x, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(tan(0.0), 1.0)), dot(vec2(0.0, 1.0), vec2(tan(0.0), 1.0))), determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))), mix(float(_GLF_FUZZED(-6.0)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3(injectionSwitch.x, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(tan(0.0), 1.0)), dot(vec2(0.0, 1.0), vec2(tan(0.0), 1.0))), determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0), (mat3(injectionSwitch.x, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(tan(0.0), 1.0)), dot(vec2(0.0, 1.0), vec2(tan(0.0), 1.0))), determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))), mix(float(_GLF_FUZZED(4522.3464)), float(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3(injectionSwitch.x, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(tan(0.0), 1.0)), dot(vec2(0.0, 1.0), vec2(tan(0.0), 1.0))), determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0), (mat3(injectionSwitch.x, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(tan(0.0), 1.0)), dot(vec2(0.0, 1.0), vec2(tan(0.0), 1.0))), determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))), bool(true)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y))))
          return;
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   subgroupAll(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(true, (true) || false), true))));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       return;
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(-1.0)), float(injectionSwitch[1]), bool(true)))), float(_GLF_FUZZED(130.526)), bool(false))))).x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(3395.0857)), bool(false))))))).x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))), false, false))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))))), false, false))))))))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(165.328)), float(0.0), bool(true))), 1.0, 0.0, 0.0, 0.0, 0.0, sqrt(1.0), 0.0, 0.0, 1.0))).x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(false, bool(bool(false)))) && true), bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), ! (! (true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))), (true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)))) && true))), ! (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))))))))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), ! (! (true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))), (true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)))) && true))), ! (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))))))))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), ! (! (true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))), (true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)))) && true))), ! (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))))))))), true, false))), true, true))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
          return;
         return;
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)), bool(bool(bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))))) || (_GLF_IDENTITY(false, (false) || false)))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, 0.0, 0.0)))))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, false)))) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, false)), false || (bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, false))))))) && true)))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true))))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-75.71), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(72.54)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))) && true)))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! _GLF_IDENTITY((! (_GLF_IDENTITY(bool(false), bool(bvec3(bool(false), false, true))))), bool(bvec2((! (_GLF_IDENTITY(bool(false), bool(bvec3(bool(false), false, true))))), true))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), bool(bvec3(bool(false), false, true)))))), true && (_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), bool(bvec3(bool(false), false, true)))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))), bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)))))))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true), true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true), true, false)))), false)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false, _GLF_IDENTITY(true, (true) && true) && ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
