#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_49 {
 bvec4 _f0;
 mat3x4 _f1;
 vec3 _f2;
 mat4x2 _f3;
} ;

struct _GLF_struct_48 {
 bvec2 _f0;
 mat4x3 _f1;
 int _f2;
 mat4x2 _f3;
 ivec3 _f4;
 uint _f5;
} ;

struct _GLF_struct_47 {
 mat3x2 _f0;
 uvec4 _f1;
 float _f2;
 ivec2 _f3;
 mat4x2 _f4;
} ;

struct _GLF_struct_50 {
 vec3 _f0;
 _GLF_struct_47 _f1;
 vec2 _f2;
 _GLF_struct_48 _f3;
 _GLF_struct_49 _f4;
} ;

struct _GLF_struct_51 {
 _GLF_struct_50 _f0;
 uint workgroup_id;
} ;

struct _GLF_struct_44 {
 float _f0;
 bool _f1;
 mat2x3 _f2;
 vec4 _f3;
 ivec2 _f4;
 mat4x3 _f5;
} ;

struct _GLF_struct_43 {
 vec4 _f0;
} ;

struct _GLF_struct_42 {
 bool _f0;
 uvec3 _f1;
 uvec3 _f2;
 bool _f3;
 mat4x3 _f4;
 uint _f5;
} ;

struct _GLF_struct_45 {
 _GLF_struct_42 _f0;
 _GLF_struct_43 _f1;
 bvec4 _f2;
 mat2x4 _f3;
 _GLF_struct_44 _f4;
 vec2 _f5;
 mat4 _f6;
} ;

struct _GLF_struct_40 {
 uint num_workgroup;
 ivec4 _f0;
} ;

struct _GLF_struct_41 {
 _GLF_struct_40 _f0;
 mat4x2 _f1;
 mat3 _f2;
 uint _f3;
} ;

struct _GLF_struct_38 {
 bvec3 _f0;
 int _f1;
 ivec3 _f2;
} ;

struct _GLF_struct_37 {
 mat2x4 _f0;
 bvec2 _f1;
 mat4x3 _f2;
} ;

struct _GLF_struct_36 {
 ivec3 _f0;
 mat3x2 _f1;
 mat3x4 _f2;
 mat4x2 _f3;
 mat3 _f4;
} ;

struct _GLF_struct_35 {
 mat2 _f0;
 mat2x3 _f1;
 uvec2 _f2;
 uvec4 _f3;
 vec2 _f4;
} ;

struct _GLF_struct_39 {
 _GLF_struct_35 _f0;
 _GLF_struct_36 _f1;
 _GLF_struct_37 _f2;
 _GLF_struct_38 _f3;
 ivec2 _f4;
 int _f5;
 mat4x2 _f6;
} ;

struct _GLF_struct_33 {
 ivec2 _f0;
 vec4 _f1;
 ivec4 _f2;
 mat3 _f3;
 vec2 _f4;
 uint _f5;
 ivec3 _f6;
} ;

struct _GLF_struct_34 {
 bool _f0;
 _GLF_struct_33 _f1;
 int _f2;
} ;

struct _GLF_struct_31 {
 vec3 _f0;
 mat3 _f1;
 vec2 _f2;
 uvec2 _f3;
 uvec2 _f4;
} ;

struct _GLF_struct_32 {
 _GLF_struct_31 _f0;
 ivec2 _f1;
 uvec3 _f2;
} ;

struct _GLF_struct_46 {
 uvec3 _f0;
 _GLF_struct_32 _f1;
 _GLF_struct_34 _f2;
 _GLF_struct_39 _f3;
 _GLF_struct_41 _f4;
 _GLF_struct_45 _f5;
 bvec4 _f6;
} ;

struct _GLF_struct_28 {
 mat2x3 _f0;
 ivec2 _f1;
 vec4 _f2;
 ivec4 _f3;
 bvec2 _f4;
 mat3x4 _f5;
 uvec4 _f6;
} ;

struct _GLF_struct_29 {
 mat3 _f0;
 uvec4 _f1;
 _GLF_struct_28 _f2;
} ;

struct _GLF_struct_26 {
 bool _f0;
 ivec2 _f1;
} ;

struct _GLF_struct_25 {
 vec2 _f0;
 mat3x4 _f1;
} ;

struct _GLF_struct_24 {
 mat2x3 _f0;
 ivec4 _f1;
} ;

struct _GLF_struct_27 {
 ivec4 _f0;
 uvec4 _f1;
 _GLF_struct_24 _f2;
 _GLF_struct_25 _f3;
 _GLF_struct_26 _f4;
 mat2x3 _f5;
} ;

struct _GLF_struct_22 {
 mat4x3 _f0;
 bvec3 _f1;
} ;

struct _GLF_struct_21 {
 vec3 _f0;
 mat4x3 _f1;
} ;

struct _GLF_struct_20 {
 vec3 _f0;
 float _f1;
 bvec3 _f2;
 int _f3;
 mat3x4 _f4;
 mat2x3 _f5;
} ;

struct _GLF_struct_19 {
 vec3 _f0;
} ;

struct _GLF_struct_23 {
 _GLF_struct_19 _f0;
 _GLF_struct_20 _f1;
 uint workgroup_base;
 vec4 _f2;
 _GLF_struct_21 _f3;
 _GLF_struct_22 _f4;
} ;

struct _GLF_struct_30 {
 _GLF_struct_23 _f0;
 _GLF_struct_27 _f1;
 _GLF_struct_29 _f2;
} ;

struct _GLF_struct_16 {
 mat3x2 _f0;
 int _f1;
 ivec2 _f2;
 uvec4 _f3;
} ;

struct _GLF_struct_15 {
 bool _f0;
 uint _f1;
 uvec2 _f2;
 mat2x3 _f3;
 mat3x4 _f4;
 ivec4 _f5;
} ;

struct _GLF_struct_14 {
 vec4 _f0;
 uvec4 _f1;
 vec4 _f2;
 ivec3 _f3;
} ;

struct _GLF_struct_13 {
 uvec3 _f0;
 bvec2 _f1;
 vec3 _f2;
 vec4 _f3;
 uvec2 _f4;
 vec2 _f5;
} ;

struct _GLF_struct_12 {
 mat4 _f0;
} ;

struct _GLF_struct_17 {
 mat2x3 _f0;
 _GLF_struct_12 _f1;
 _GLF_struct_13 _f2;
 _GLF_struct_14 _f3;
 _GLF_struct_15 _f4;
 _GLF_struct_16 _f5;
} ;

struct _GLF_struct_10 {
 int _f0;
 ivec4 _f1;
 mat4x2 _f2;
 mat4x3 _f3;
 bool _f4;
} ;

struct _GLF_struct_9 {
 mat4 _f0;
 mat3x2 _f1;
 mat2x4 _f2;
 uint _f3;
 mat4x3 _f4;
} ;

struct _GLF_struct_11 {
 vec2 _f0;
 _GLF_struct_9 _f1;
 bool _f2;
 _GLF_struct_10 _f3;
 uint _f4;
} ;

struct _GLF_struct_7 {
 mat4 _f0;
} ;

struct _GLF_struct_6 {
 uvec2 _f0;
 mat3x4 _f1;
 ivec3 _f2;
 mat4x3 _f3;
 mat3 _f4;
} ;

struct _GLF_struct_5 {
 vec2 _f0;
 uvec4 _f1;
 vec3 _f2;
} ;

struct _GLF_struct_8 {
 _GLF_struct_5 _f0;
 _GLF_struct_6 _f1;
 _GLF_struct_7 _f2;
 uint workgroup_size;
} ;

struct _GLF_struct_18 {
 uvec4 _f0;
 vec2 _f1;
 _GLF_struct_8 _f2;
 uvec3 _f3;
 _GLF_struct_11 _f4;
 _GLF_struct_17 _f5;
 mat2x3 _f6;
} ;

struct _GLF_struct_2 {
 ivec3 _f0;
} ;

struct _GLF_struct_1 {
 mat3 _f0;
 mat3x2 _f1;
 mat4 _f2;
 vec3 _f3;
 float _f4;
} ;

struct _GLF_struct_0 {
 bvec3 _f0;
 mat4x2 _f1;
 bvec2 _f2;
} ;

struct _GLF_struct_3 {
 vec2 _f0;
 vec3 _f1;
 _GLF_struct_0 _f2;
 _GLF_struct_1 _f3;
 _GLF_struct_2 _f4;
} ;

struct _GLF_struct_4 {
 bool _f0;
 uint next_virtual_gid;
 _GLF_struct_3 _f1;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), bool(bvec2(! (! ((injectionSwitch.x > injectionSwitch.y))), true)))))) && true)), ! (! _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), bool(bvec4((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), false, false, false)))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 0.0, 0.0, determinant(mat2(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-7158.8332) : 0.0)), min(0.0, 0.0)), _GLF_IDENTITY(0.0, 1.0 * (0.0)))), 0.0, 1.0, 0.0)), 1.0, 1.0, 0.0, 1.0, 0.0))), injectionSwitch)).x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))) || false), false, false)), bool(_GLF_IDENTITY(bvec2(bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, 0.0, 1.0), _GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))) * (mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, 0.0, 1.0))))) : _GLF_FUZZED(-8.3)))))))), (_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (((injectionSwitch.x > injectionSwitch.y)))))))), (bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))) || false)))) || false), false, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), true)), bvec2(bvec2(bvec2(bvec3(bvec2(false, true), _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), true), bvec2(bvec4(bvec2(bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))) || false), false, false)), true), true, false))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), true && (! (! ((injectionSwitch.x > injectionSwitch.y))))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, sin(0.0), 0.0))))) > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0)))))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 _GLF_struct_46 _GLF_struct_replacement_46 = _GLF_struct_46(uvec3(1u), _GLF_struct_32(_GLF_struct_31(vec3(1.0), mat3(1.0), vec2(1.0), uvec2(1u), uvec2(1u)), ivec2(1), uvec3(1u)), _GLF_struct_34(true, _GLF_struct_33(ivec2(1), vec4(1.0), ivec4(1), mat3(1.0), vec2(1.0), 1u, ivec3(1)), 1), _GLF_struct_39(_GLF_struct_35(mat2(_GLF_IDENTITY(1.0, min(1.0, 1.0))), mat2x3(1.0), uvec2(1u), _GLF_IDENTITY(uvec4(1u), clamp(uvec4(1u), _GLF_IDENTITY(uvec4(1u), ~ (~ (uvec4(1u)))), uvec4(1u))), _GLF_IDENTITY(vec2(1.0), _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (_GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(20.26, 3.7, -26.72, -73.56)) : mat2(1.0))))) * (vec2(1.0)))), _GLF_struct_36(ivec3(1), mat3x2(1.0), mat3x4(1.0), mat4x2(1.0), mat3(1.0)), _GLF_struct_37(mat2x4(1.0), bvec2(true), mat4x3(1.0)), _GLF_struct_38(bvec3(true), 1, ivec3(1)), ivec2(1), 1, mat4x2(1.0)), _GLF_struct_41(_GLF_struct_40(gl_NumWorkGroups.x, ivec4(1)), mat4x2(1.0), _GLF_IDENTITY(mat3(1.0), (mat3(1.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)), 1u), _GLF_struct_45(_GLF_struct_42(true, uvec3(1u), uvec3(1u), _GLF_IDENTITY(true, bool(bool(true))), mat4x3(1.0), 1u), _GLF_struct_43(vec4(1.0)), bvec4(true), mat2x4(1.0), _GLF_struct_44(1.0, true, mat2x3(1.0), vec4(1.0), ivec2(1), mat4x3(1.0)), vec2(1.0), mat4(1.0)), bvec4(true));
 _GLF_struct_18 _GLF_struct_replacement_18 = _GLF_struct_18(uvec4(1u), _GLF_IDENTITY(vec2(1.0), (_GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0), (vec2(1.0)) - vec2(0.0, 0.0)), (vec2(1.0)) - vec2(0.0, 0.0))) + vec2(0.0, 0.0)), _GLF_struct_8(_GLF_struct_5(vec2(1.0), uvec4(1u), vec3(1.0)), _GLF_struct_6(uvec2(1u), mat3x4(1.0), ivec3(1), mat4x3(1.0), mat3(1.0)), _GLF_struct_7(mat4(1.0)), gl_WorkGroupSize.x), uvec3(1u), _GLF_struct_11(vec2(1.0), _GLF_struct_9(mat4(1.0), mat3x2(1.0), mat2x4(1.0), 1u, mat4x3(1.0)), true, _GLF_struct_10(1, ivec4(1), mat4x2(1.0), mat4x3(1.0), true), 1u), _GLF_struct_17(mat2x3(1.0), _GLF_struct_12(mat4(1.0)), _GLF_struct_13(uvec3(1u), bvec2(true), vec3(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), clamp((1.0), _GLF_IDENTITY((1.0), float(vec3((1.0), 1.0, 1.0))), (1.0))) + 0.0)), _GLF_IDENTITY(vec4(1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? vec4(1.0) : _GLF_FUZZED(vec4(-941.553, 2.0, -9.0, 495.690)))), _GLF_IDENTITY(uvec2(1u), max(uvec2(1u), _GLF_IDENTITY(uvec2(1u), ~ (~ (uvec2(1u)))))), vec2(1.0)), _GLF_struct_14(vec4(1.0), uvec4(1u), vec4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat2x4(1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), 1.0, 0.0, 1.0, 0.0))), float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat2x4(1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), 1.0, 0.0, 1.0, 0.0))), (_GLF_IDENTITY(1.0, float(mat2x4(1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_IDENTITY(1.0, float(mat4x3(1.0, cos(sin(0.0)), 0.0, 1.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, log(1.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0)))))), 1.0, 0.0, 1.0, 0.0)))) / 1.0), 1.0)))), ivec3(1)), _GLF_struct_15(true, 1u, uvec2(1u), mat2x3(1.0), mat3x4(1.0), ivec4(1)), _GLF_struct_16(mat3x2(1.0), 1, ivec2(1), uvec4(_GLF_IDENTITY(1u, (1u) >> (0u & (106700u)))))), mat2x3(1.0));
 _GLF_struct_51 _GLF_struct_replacement_51 = _GLF_struct_51(_GLF_struct_50(vec3(1.0), _GLF_struct_47(mat3x2(1.0), uvec4(_GLF_IDENTITY(1u, (1u) + 0u)), 1.0, ivec2(1), mat4x2(1.0)), vec2(1.0), _GLF_struct_48(bvec2(true), mat4x3(1.0), 1, mat4x2(1.0), ivec3(1), 1u), _GLF_struct_49(bvec4(true), mat3x4(1.0), vec3(1.0), mat4x2(1.0))), gl_WorkGroupID.x);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_30 _GLF_struct_replacement_30 = _GLF_struct_30(_GLF_struct_23(_GLF_struct_19(vec3(1.0)), _GLF_struct_20(vec3(1.0), 1.0, bvec3(true), 1, mat3x4(_GLF_IDENTITY(1.0, min(1.0, 1.0))), mat2x3(1.0)), _GLF_struct_replacement_18._f2.workgroup_size * _GLF_struct_replacement_51.workgroup_id, vec4(1.0), _GLF_struct_21(vec3(1.0), mat4x3(1.0)), _GLF_struct_22(mat4x3(1.0), bvec3(true))), _GLF_struct_27(ivec4(1), uvec4(1u), _GLF_struct_24(mat2x3(1.0), ivec4(1)), _GLF_struct_25(_GLF_IDENTITY(vec2(1.0), (_GLF_IDENTITY(vec2(1.0), mix(vec2((vec2(1.0))[0], (vec2(1.0))[1]), vec2(_GLF_FUZZED(vec3(6.2, -7.4, -51.04).r), _GLF_FUZZED(2.5)), bvec2(false, false)))) + sqrt(vec2(0.0, 0.0))), mat3x4(1.0)), _GLF_struct_26(true, ivec2(1)), mat2x3(1.0)), _GLF_struct_29(mat3(1.0), uvec4(1u), _GLF_struct_28(mat2x3(1.0), ivec2(1), vec4(1.0), ivec4(1), bvec2(true), mat3x4(1.0), uvec4(_GLF_IDENTITY(1u, 0u ^ (1u))))));
 uint virtual_gid = _GLF_struct_replacement_30._f0.workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_id))), subgroup_size, subgroup_size)) + _GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))
    barrier();
   barrier();
  }
 _GLF_struct_4 _GLF_struct_replacement_4 = _GLF_struct_4(true, _GLF_struct_replacement_30._f0.workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 1u, 1u, 1u))) + _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))) * 1u) + 1) % subgroup_size), ~ (~ (((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u) + 1) % subgroup_size)))), _GLF_struct_3(vec2(1.0), _GLF_IDENTITY(vec3(1.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(mat4(vec3(1.0), 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), min(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), 0.0 + (dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)))), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))))), 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 0.0, sqrt(1.0), determinant(mat3(0.0, 0.0, determinant(_GLF_IDENTITY(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0), mat3(mat3x4(mat3(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 1.0, 0.0, 0.0, 0.0))))), 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-7.5) : 0.0)), 0.0, 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)))), sqrt(1.0)), (mat4(vec3(1.0), 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-810.239)), float(0.0), bool(true))), 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, sqrt(1.0), determinant(mat3(0.0, 0.0, determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, 1.0 * _GLF_IDENTITY((_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-8.5)), float(0.0), bool(true)), mix(float(_GLF_IDENTITY(mix(float(_GLF_FUZZED(-8.5)), float(0.0), bool(true)), max(mix(float(_GLF_FUZZED(-8.5)), float(0.0), bool(true)), mix(float(_GLF_FUZZED(-8.5)), float(0.0), bool(true))))), float(_GLF_FUZZED(0.0)), bool(false)))), 0.0))), (true ? (_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-8.5)), float(0.0), bool(true)), mix(float(_GLF_IDENTITY(mix(float(_GLF_FUZZED(-8.5)), float(0.0), bool(true)), max(mix(float(_GLF_FUZZED(-8.5)), float(0.0), bool(true)), mix(float(_GLF_FUZZED(-8.5)), float(0.0), bool(true))))), float(_GLF_FUZZED(0.0)), bool(false)))), 0.0))) : _GLF_FUZZED(0.7)))))))), sqrt(1.0))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) - determinant(mat2(0.0, 0.0, 1.0, 0.0))), 1.0, 1.0)), 1.0, 1.0, 1.0, 1.0, 1.0))), min(vec3(_GLF_IDENTITY(mat4(vec3(1.0), 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, sqrt(1.0), determinant(mat3(0.0, 0.0, determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)))), sqrt(1.0)), (mat4(vec3(1.0), 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, sqrt(1.0), determinant(mat3(0.0, 0.0, determinant(mat3(0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-9876.8040))))), 1.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(length(vec3(-2.2, -7503.6012, -5.4))) : 0.0)))))), sqrt(1.0))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), _GLF_IDENTITY(vec3(_GLF_IDENTITY(mat4(vec3(1.0), 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, sqrt(1.0), determinant(mat3(0.0, 0.0, determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)))), sqrt(1.0)), (mat4(vec3(1.0), 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), max(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), 0.0 + (dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)))))), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(sqrt(1.0), clamp(sqrt(1.0), _GLF_IDENTITY(sqrt(1.0), clamp(sqrt(1.0), sqrt(1.0), sqrt(1.0))), _GLF_IDENTITY(sqrt(1.0), (false ? _GLF_FUZZED(-1.7) : sqrt(1.0))))), mix(float(_GLF_IDENTITY(sqrt(1.0), clamp(sqrt(1.0), _GLF_IDENTITY(sqrt(1.0), clamp(sqrt(1.0), sqrt(1.0), sqrt(1.0))), _GLF_IDENTITY(sqrt(1.0), (false ? _GLF_FUZZED(-1.7) : sqrt(1.0)))))), float(_GLF_FUZZED(-6.6)), bool(false))), determinant(mat3(0.0, 0.0, determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, abs(1.0), 0.0)), _GLF_IDENTITY(float(mat3x4(float(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, abs(1.0), 0.0)), 0.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(vec3(1.0, 1.0, 0.0)))) - 0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), clamp(float(mat3x4(float(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, abs(1.0), 0.0)), 0.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(vec3(1.0, 1.0, 0.0)))) - 0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), float(mat3x4(float(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, abs(1.0), 0.0)), 0.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(vec3(1.0, 1.0, 0.0)))) - 0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), float(mat3x4(float(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, abs(1.0), 0.0)), 0.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec3(1.0, 1.0, 0.0), clamp(vec3(1.0, 1.0, 0.0), vec3(1.0, 1.0, 0.0), vec3(1.0, 1.0, 0.0)))))) - 0.0), 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), _GLF_IDENTITY(0.0, 0.0 + (0.0)))), 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), length(_GLF_IDENTITY(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, float(vec2(0.0, tan(0.0)))), 0.0), clamp(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), (vec4(0.0, 0.0, 0.0, 0.0)) - vec4(0.0, 0.0, 0.0, 0.0)), vec4(0.0, 0.0, 0.0, 0.0), vec4(0.0, 0.0, 0.0, 0.0)))))), sqrt(1.0))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(951.559) : _GLF_IDENTITY(1.0, (1.0) * 1.0))), 1.0, 1.0))), mix(vec3(_GLF_FUZZED(-1.5), _GLF_FUZZED(568.774), _GLF_FUZZED(-2.8)), vec3((vec3(_GLF_IDENTITY(mat4(vec3(1.0), 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), max(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))))), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, sqrt(1.0), _GLF_IDENTITY(determinant(mat3(0.0, 0.0, determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0, 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)))), min(determinant(mat3(0.0, 0.0, determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0, 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)))), determinant(mat3(0.0, 0.0, determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0, 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)))))), sqrt(1.0)), (mat4(vec3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, sqrt(1.0), determinant(mat3(0.0, 0.0, determinant(mat3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(exp2(16.23)))), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(_GLF_IDENTITY(8.8, min(_GLF_IDENTITY(8.8, max(8.8, 8.8)), 8.8)))), bool(false)))) + abs(0.0)))))), sqrt(1.0))) / _GLF_IDENTITY(mat4(1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0))) * 1.0), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(8.3) : 1.0)), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0), transpose(transpose(mat4(1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0))) * 1.0), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(8.3) : 1.0)), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))))[0], _GLF_IDENTITY((vec3(_GLF_IDENTITY(mat4(vec3(1.0), 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), dot(vec3(0.0, 0.0, 1.0), _GLF_IDENTITY(vec3(0.0, 0.0, 1.0), (_GLF_IDENTITY(vec3(0.0, 0.0, 1.0), (vec3(0.0, 0.0, 1.0)) + vec3(0.0, 0.0, 0.0))) * vec3(1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 0.0, 0.0, sqrt(1.0), determinant(mat3(0.0, 0.0, determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-722.668)), float(1.0), bool(true))))), 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)))), sqrt(1.0)), (mat4(vec3(1.0), 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), _GLF_IDENTITY(vec3(0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat2x3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), abs(1.0), 1.0, sqrt(0.0), 0.0, 0.0))), max(1.0, 1.0))), (vec3(0.0, 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0)))) + vec3(0.0, 0.0, 0.0))), dot(vec3(0.0, 0.0, 1.0), vec3(_GLF_IDENTITY(0.0, float(vec4(0.0, log(1.0), round(length(normalize(1.0))), 1.0))), 0.0, 1.0))), 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0, 0.0, 0.0, 0.0, sqrt(1.0), determinant(mat3(0.0, 0.0, determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)))), sqrt(1.0))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (vec3(_GLF_IDENTITY(mat4(vec3(1.0), 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) * 1.0)) - 0.0), 0.0, 0.0, 0.0, sqrt(1.0), determinant(mat3(0.0, 0.0, determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(92.31) : 1.0)), 1.0, 1.0)), 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-722.668)), float(1.0), bool(true))))), 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)))), sqrt(1.0)), (mat4(vec3(1.0), 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), _GLF_IDENTITY(vec3(0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))), (vec3(0.0, 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0)))) + vec3(0.0, 0.0, 0.0))), dot(vec3(_GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)))), 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(sqrt(1.0), 0.0 + (sqrt(1.0))), determinant(mat3(0.0, 0.0, determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)))), sqrt(1.0))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))) : _GLF_FUZZED(vec3(-5563.1392, 256.360, -69.70))))[1], (vec3(_GLF_IDENTITY(mat4(vec3(1.0), 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, sqrt(1.0), determinant(mat3(0.0, 0.0, determinant(mat3(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(dot(vec3(-6.7, -7.8, 3.9), vec3(7.0, 931.547, -9213.3938))) : 0.0)), max(0.0, 0.0)), 0.0)), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)))), sqrt(1.0)), (mat4(vec3(1.0), 1.0, _GLF_IDENTITY(0.0, float(mat4(0.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0), vec3(0.0, 0.0, 1.0)), clamp(dot(vec3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0), vec3(0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0), vec3(0.0, 0.0, 1.0)), (true ? dot(vec3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0), vec3(0.0, 0.0, 1.0)) : _GLF_FUZZED(-6.1))), dot(vec3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0), vec3(0.0, 0.0, 1.0))))), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, sqrt(1.0), determinant(mat3(0.0, 0.0, determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)))), sqrt(1.0))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))[2]), bvec3(true, true, true)))))), _GLF_struct_0(bvec3(true), mat4x2(1.0), bvec2(true)), _GLF_struct_1(mat3(1.0), mat3x2(1.0), mat4(1.0), vec3(1.0), 1.0), _GLF_struct_2(ivec3(1))));
 atomicStore(buf[_GLF_struct_replacement_4.next_virtual_gid], uint(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, min(1, 1))))), 4, 64, 4);
 if(_GLF_DEAD(false))
  return;
 uint read = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, 0 ^ (64)), 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 0.0, 0.0), vec4(0.0, 1.0, sqrt(0.0), 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, sqrt(0.0), 0.0))), 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0))) > injectionSwitch.y))))
  barrier();
 if(subgroup_local_id + 1 < subgroup_size)
  {
   atomicStore(checker[virtual_gid], read, _GLF_IDENTITY(4, _GLF_IDENTITY(min(4, 4), int(ivec4(_GLF_IDENTITY(min(4, 4), (_GLF_IDENTITY(min(4, 4), 0 ^ (min(4, 4)))) | 0), (0 ^ 0), (0 | 0), 0)))), 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(determinant(mat4(27.55, 13.00, -5.5, -5715.1947, -503.937, 2.3, -27.14, 9.4, -4.7, 0.3, 1.8, -728.210, 9.7, -51.46, 904.402, -5.0)))))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), false || ((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((85.63 / _GLF_IDENTITY(float(-95864), 1.0 * (float(-95864))))), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat3x2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) + 0.0), 1.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), sqrt(1.0)))), _GLF_FUZZED(-3.4)), bvec2(true, false))).x > injectionSwitch.y)))))))))))))))))), (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))), ! (! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false))))), true && (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false))))), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(false, true), false), bvec3(bvec4(bvec3(bvec2(false, true), false), false)))), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec3(bvec2(false, true), false), bvec3(bvec4(bvec3(bvec2(false, true), false), false))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec3(bvec2(false, true), false), bvec3(bvec4(bvec3(bvec2(false, true), false), false)))))))))))))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false)))))))))))), false || ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))) || false))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec2(bvec2(_GLF_DEAD(false), false))))), bool(bvec3(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec2(bvec2(_GLF_DEAD(false), false))))), false, false)))))
          return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             barrier();
            }
           barrier();
          }
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(260.475)), max(vec2((injectionSwitch)[0], _GLF_FUZZED(260.475)), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(260.475)), _GLF_IDENTITY((vec2((injectionSwitch)[0], _GLF_FUZZED(260.475))) * mat2(1.0), mat2(1.0) * ((vec2((injectionSwitch)[0], _GLF_FUZZED(260.475))) * mat2(1.0)))))), vec2(_GLF_FUZZED(1.8), (injectionSwitch)[1]), bvec2(false, true))).y))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             return;
            }
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0))).x > injectionSwitch.y))))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(false);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   atomicStore(checker[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid)), 1u, 1u), uvec3(uvec4(uvec3(_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid)), 1u, 1u), 1u)))))) + uint(_GLF_ZERO(0.0, injectionSwitch.x)))], read, _GLF_IDENTITY(4, ~ (~ (4))), 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   subgroupAll(true);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))) && true))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), bool(bvec2(bool(bool(_GLF_DEAD(false))), false)))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, ! (! (true))), true, true)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
