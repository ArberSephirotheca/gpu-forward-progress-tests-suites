#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_8 {
 mat4x3 _f0;
 bvec3 _f1;
 mat4x2 _f2;
 uvec4 _f3;
 bvec3 _f4;
 ivec4 _f5;
} ;

struct _GLF_struct_9 {
 bool _f0;
 _GLF_struct_8 _f1;
 uvec4 _f2;
} ;

struct _GLF_struct_6 {
 ivec4 _f0;
 vec4 _f1;
 mat4x3 _f2;
} ;

struct _GLF_struct_5 {
 mat2 _f0;
 bvec4 _f1;
 ivec2 _f2;
} ;

struct _GLF_struct_7 {
 _GLF_struct_5 _f0;
 mat3 _f1;
 _GLF_struct_6 _f2;
 bvec2 _f3;
} ;

struct _GLF_struct_10 {
 uint num_workgroup;
 _GLF_struct_7 _f0;
 _GLF_struct_9 _f1;
 int _f2;
} ;

struct _GLF_struct_2 {
 bvec3 _f0;
 uvec4 _f1;
 bvec4 _f2;
 ivec4 _f3;
 mat2x4 _f4;
} ;

struct _GLF_struct_3 {
 uvec2 _f0;
 _GLF_struct_2 _f1;
} ;

struct _GLF_struct_0 {
 bvec4 _f0;
 ivec3 _f1;
 int _f2;
 uvec2 _f3;
 uint workgroup_base;
 mat2x3 _f4;
} ;

struct _GLF_struct_1 {
 vec4 _f0;
 bool _f1;
 mat3 _f2;
 _GLF_struct_0 _f3;
} ;

struct _GLF_struct_4 {
 vec3 _f0;
 mat4 _f1;
 _GLF_struct_1 _f2;
 int _f3;
 _GLF_struct_3 _f4;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 _GLF_struct_10 _GLF_struct_replacement_10 = _GLF_struct_10(gl_NumWorkGroups.x, _GLF_struct_7(_GLF_struct_5(mat2(1.0), bvec4(true), ivec2(_GLF_IDENTITY(1, (1) | _GLF_IDENTITY((1), (_GLF_IDENTITY((1), (false ? _GLF_FUZZED((92226 << 64258)) : (1)))) | 0)))), mat3(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-38.41) : 1.0))), _GLF_struct_6(_GLF_IDENTITY(ivec4(1), clamp(ivec4(1), _GLF_IDENTITY(ivec4(1), ivec4(0, 0, 0, 0) | _GLF_IDENTITY((_GLF_IDENTITY(ivec4(1), (false ? _GLF_FUZZED(ivec4(66919, -3565, 87272, -27116)) : ivec4(1)))), ((_GLF_IDENTITY(ivec4(1), (false ? _GLF_FUZZED(ivec4(66919, -3565, 87272, -27116)) : ivec4(1))))) << ivec4(0, 0, _GLF_IDENTITY(0, (0) << 0), 0))), ivec4(1))), vec4(1.0), mat4x3(1.0)), bvec2(true)), _GLF_struct_9(true, _GLF_struct_8(mat4x3(_GLF_IDENTITY(1.0, (1.0) / 1.0)), bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY((true), (_GLF_IDENTITY((true), ! (! ((true))))) || false) && true), _GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, (true) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), false || (_GLF_IDENTITY(true, (true) && true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), false || (_GLF_IDENTITY(true, (true) && true))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), false || (_GLF_IDENTITY(true, (true) && true))), false))))))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, (true) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 1.0))), injectionSwitch.x)) > injectionSwitch.y))))))))), false || (_GLF_IDENTITY(true, (true) && true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), false || (_GLF_IDENTITY(true, (true) && true))), (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), false || (_GLF_IDENTITY(true, (true) && true)))) && true), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), false || (_GLF_IDENTITY(true, (true) && true))), false))))))), bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, (true) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), _GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(true, (true) && true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), false || (_GLF_IDENTITY(true, (true) && true))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), false || (_GLF_IDENTITY(true, (true) && true))), false))))))), false, false))))))), ((! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, (true) || _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, false))))))), (injectionSwitch.x > injectionSwitch.y))))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true))))), (true) && true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), false || (_GLF_IDENTITY(true, (true) && true))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), false || (_GLF_IDENTITY(true, (true) && true))), false))))))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, (true) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), false || (_GLF_IDENTITY(true, (true) && true))), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((true), ((true)) && true), false)), (bool(bvec2(_GLF_IDENTITY((true), ((true)) && true), false))) || false)) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), false || (_GLF_IDENTITY(true, (true) && true))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), false || (_GLF_IDENTITY(true, (true) && true))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), false || _GLF_IDENTITY((_GLF_IDENTITY(true, (true) && true)), ! (! ((_GLF_IDENTITY(true, (true) && true)))))), false))))))), bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, (true) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), false || (_GLF_IDENTITY(true, (true) && true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), (_GLF_IDENTITY(true, (true) && true)) && true), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (true) && true))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), false || (_GLF_IDENTITY(true, (true) && true))), false))))))), false, false)))))))) && true), _GLF_IDENTITY(((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), false || (_GLF_IDENTITY(true, (true) && true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), false || (_GLF_IDENTITY(true, (true) && true))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (bool(bool(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true)) || (_GLF_IDENTITY(true, (true) && true))), false)))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), false || (_GLF_IDENTITY(true, (true) && true))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true), false || (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, false || (true)), false, true)))) && true)) && true))), false))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), _GLF_IDENTITY(false || (_GLF_IDENTITY(true, (true) && true)), (false || (_GLF_IDENTITY(true, (true) && true))) || false)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), false || (_GLF_IDENTITY(true, (true) && true))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (bool(bool(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true)) || (_GLF_IDENTITY(true, (true) && true))), false)))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), false || (_GLF_IDENTITY(true, (true) && true))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true), false || (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, false || (true)), false, true)))) && true)) && true))), false))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, ! (! ((true) && true)))), false || (_GLF_IDENTITY(true, (true) && true))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), (true) && true), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (bool(bool(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true)) || (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, true, false, true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true))), false)))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), false || (_GLF_IDENTITY(true, (true) && true))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (_GLF_IDENTITY(true, (true) || false)) && _GLF_IDENTITY(true, (true) || false)), false || (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, false || (true)), false, true)))) && true)) && true))), false)))))))) || false))))))))), true && (((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), false || (_GLF_IDENTITY(true, (true) && true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), false || (_GLF_IDENTITY(true, (true) && true))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (bool(bool(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true)) || (_GLF_IDENTITY(true, (true) && true))), false)))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), false || (_GLF_IDENTITY(true, (true) && true))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true), false || (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, false || (true)), false, true)))) && true)) && true))), false))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), _GLF_IDENTITY(false || (_GLF_IDENTITY(true, (true) && true)), (false || (_GLF_IDENTITY(true, (true) && true))) || false)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), false || (_GLF_IDENTITY(true, (true) && true))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (bool(bool(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true)) || (_GLF_IDENTITY(true, (true) && true))), false)))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), false || (_GLF_IDENTITY(true, (true) && true))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true), false || (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, false || (true)), false, true)))) && true)) && true))), false))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, ! (! ((true) && true)))), false || (_GLF_IDENTITY(true, (true) && true))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), (true) && true), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (bool(bool(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true)) || (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, true, false, true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true))), false)))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), false || (_GLF_IDENTITY(true, (true) && true))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (_GLF_IDENTITY(true, (true) || false)) && _GLF_IDENTITY(true, (true) || false)), false || (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, false || (true)), false, true)))) && true)) && true))), false)))))))) || false))))))))))) && true), ! (! (! _GLF_IDENTITY(_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, (true) || _GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)) || false)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bool(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), true, true)), bool(bvec3(bool(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), true, true)), false, false))))))))))), false || (_GLF_IDENTITY(true, (true) && true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), false || (_GLF_IDENTITY(true, (true) && true))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), false || (_GLF_IDENTITY(true, (true) && true))), false))))))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, (true) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), false || (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, (true) || false), true, true)))) && true))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), false || (_GLF_IDENTITY(true, (true) && true))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), _GLF_IDENTITY(false || (_GLF_IDENTITY(true, (true) && true)), true && (false || _GLF_IDENTITY((_GLF_IDENTITY(true, (true) && true)), bool(bvec2((_GLF_IDENTITY(true, (true) && true)), false)))))), false)))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), false || (_GLF_IDENTITY(true, (true) && true))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), _GLF_IDENTITY(false || (_GLF_IDENTITY(true, (true) && true)), true && (false || _GLF_IDENTITY((_GLF_IDENTITY(true, (true) && true)), bool(bvec2((_GLF_IDENTITY(true, (true) && true)), false)))))), false))))) && true)))), bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, (true) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))))), false || (_GLF_IDENTITY(true, (true) && true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), _GLF_IDENTITY(false || (_GLF_IDENTITY(true, (true) && true)), true && (_GLF_IDENTITY(false || (_GLF_IDENTITY(true, (true) && true)), (false || (_GLF_IDENTITY(true, (true) && true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) && true), (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) && true)) || false), false || (_GLF_IDENTITY(true, (true) && true))), false))))))), false, false))))))), ((! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, (true) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), false || (_GLF_IDENTITY(true, (true) && true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), _GLF_IDENTITY(false, (false) || false) || (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) && true))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, true && (true)), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, true && (true)), true, false), false)))))), false || (_GLF_IDENTITY(true, _GLF_IDENTITY((true), ((true)) && true) && true))), false))))))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, (true) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x4(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat2x4(-185.839, 5165.3989, -83.23, 0.7, -2.6, 1.5, 412.103, -550.472)) : mat2x4(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-2872.2661)), bool(false))), 0.0)))), mix(float(_GLF_FUZZED(9.9)), float(float(_GLF_IDENTITY(mat2x4(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0), (false ? _GLF_FUZZED(mat2x4(-185.839, 5165.3989, -83.23, 0.7, -2.6, 1.5, 412.103, -550.472)) : mat2x4(injectionSwitch.x, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(4137.4520)), bool(false))), 0.0, 1.0, 0.0, 0.0, 0.0))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(23.47), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(67.29)), bvec2(true, false))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(23.47), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(67.29)), bvec2(true, false))) : _GLF_FUZZED(injectionSwitch))).y))))))))), false || (_GLF_IDENTITY(true, (true) && true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), _GLF_IDENTITY(false, bool(bool(false))) || (_GLF_IDENTITY(true, (true) && true))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), _GLF_IDENTITY(false || (_GLF_IDENTITY(true, (true) && true)), ! (! (false || (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) && true)))))), false))))))), bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, (true) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-3.6, -2.3)) : injectionSwitch)), injectionSwitch)).y))))))))), false || (_GLF_IDENTITY(true, (true) && true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, (true) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), false || (_GLF_IDENTITY(true, (true) && true))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true)))))) && _GLF_IDENTITY(true, (true) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), false || (_GLF_IDENTITY(true, (true) && true))))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bool(true))))))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true)), bool(bool(bool(_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true)))))))))))), false || (_GLF_IDENTITY(true, (true) && true))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, (true) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), false || (_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true))))))))))))))) && true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), false || (_GLF_IDENTITY(true, (true) && true))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), true && (_GLF_IDENTITY(true, (true) && true))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, (true) || false)), _GLF_IDENTITY(true && (_GLF_IDENTITY(true, (true) && true)), (true && (_GLF_IDENTITY(true, (true) && true))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))), false), false, false))))))), false))))))), false, false)))))))) && true), _GLF_IDENTITY(((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), false || (_GLF_IDENTITY(true, _GLF_IDENTITY((true), bool(bool((true)))) && true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, ((true) && true) && true)), false || (_GLF_IDENTITY(true, (true) && true))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY((bool(bool(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true, bool(bvec4((bool(bool(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4((false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true, false)))))), (bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ((false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-7.1) : injectionSwitch.x)))) < injectionSwitch.y))) && true))))) && true))) || false) || (_GLF_IDENTITY(true, (true) && true))), false)))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), _GLF_IDENTITY(false || (_GLF_IDENTITY(true, (true) && true)), bool(bvec2(_GLF_IDENTITY(false || (_GLF_IDENTITY(true, (true) && true)), true && (false || (_GLF_IDENTITY(true, (true) && true)))), false)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true), ! (! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true)))), false || (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, false || (true)), false, true)))) && true)) && true))), false), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true), ! (! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true)))), false || (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, false || (true)), false, true)))) && true)) && true))), false), true), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true), ! (! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true)))), false || (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, false || (true)), false, true)))) && true)) && true))), false), true), true)))))))))))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), false || (_GLF_IDENTITY(true, (true) && true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, ((true) && true) && true)), false || (_GLF_IDENTITY(true, (true) && true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, ((true) && true) && true)), false || (_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) || false)))))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (bool(bool(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true)), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ((false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true))))) && true))) || false) || (_GLF_IDENTITY(true, (true) && true))), false)))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), ! (! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true)))), false || (_GLF_IDENTITY(true, (true) && true))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true), ! (! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true)))), false || (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, false || (true)), false, _GLF_IDENTITY(true, (true) || false))))) && true)) && true))), false)))))))))))), false || (((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), false || (_GLF_IDENTITY(true, (true) && true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, ((true) && true) && true)), false || (_GLF_IDENTITY(true, (true) && true))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (bool(bool(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true)), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ((false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true))))) && true))) || false) || (_GLF_IDENTITY(true, (true) && true))), false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, ((true) && _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bool(true)))))) && true)), false || (_GLF_IDENTITY(true, (true) && true))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (bool(bool(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true)), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ((false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true))))) && true))) || false) || (_GLF_IDENTITY(true, (true) && true)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (bool(bool(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false)) && true)), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)))), ((false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true))))) && true))) || false) || (_GLF_IDENTITY(true, (true) && true)))))), false)))))), ! _GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (true) && true))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true), bool(bvec3(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true), true, true)))))), false || (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, false || (true)), false, true)))) && true, ((_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, false || (true)), false, true)))) && true) || false))) && true))), false)))))), ! (! ((! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (true) && true))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true), bool(bvec3(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true), true, true)))))), false || (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, false || (true)), false, true)))) && true, ((_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, false || (true)), false, true)))) && true) || false))) && true))), false))))))))))))))))))), false || (bool(bool(_GLF_IDENTITY(((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), false || (_GLF_IDENTITY(true, (true) && true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, ((true) && true) && true)), false || (_GLF_IDENTITY(true, (true) && true))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (false) && _GLF_TRUE(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true))))), (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(bvec3(bool(bool(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, true)))))) && true)), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ((false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true))))) && true))) || false) || (_GLF_IDENTITY(true, (true) && true))), false)))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), false || (_GLF_IDENTITY(true, (true) && true))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && _GLF_IDENTITY(true, ! (! (true)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false) || (! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true)))))), _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), true))) || (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, false || (true)), false, true)))) && true)) && true))), false)))))))))))), false || (((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), false || (_GLF_IDENTITY(true, (true) && true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, ((true) && true) && true)), false || (_GLF_IDENTITY(true, (true) && true))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (bool(bool(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true)), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ((false) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))) && true))))) && true))) || false) || (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), true && (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), bool(bool(_GLF_IDENTITY(true, (true) && true)))))))), false)))), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), false || (_GLF_IDENTITY(true, (true) && true))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true), ! (! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true)))), false || (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, false || (true)), false, true)))) && true)) && true))), false)))))), ! (! (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), false || (_GLF_IDENTITY(true, (true) && true))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true), ! (! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true)))), false || (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, false || (true)), false, true)))) && true)) && true))), _GLF_IDENTITY(false, false || (false)))))))))))))))))))))))) && true)))))), mat4x2(1.0), uvec4(_GLF_IDENTITY(1u, (1u) | (1u))), bvec3(true), ivec4(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (1), max(_GLF_IDENTITY(_GLF_IDENTITY(~ (1), ~ (~ (~ (1)))), 0 | (~ (1))), ~ (1))), _GLF_IDENTITY(_GLF_IDENTITY((~ (1)) * 1, ((~ (1)) * 1) >> 0), ((~ (1)) * 1) | int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), 1.0 * (_GLF_ZERO(0.0, injectionSwitch.x)))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (int(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x), (false ? _GLF_FUZZED(117.808) : _GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x)))) ^ int(_GLF_ONE(1.0, injectionSwitch.y))) * (1)), max(1, 1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (_GLF_IDENTITY(1, max(1, 1))) << _GLF_IDENTITY(0, (_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (0) * 1)))) << 0))) >> 0))))), uvec4(1u)), 1);
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, clamp(_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), min(_GLF_IDENTITY(~ (gl_WorkGroupSize.x), min(_GLF_IDENTITY(~ _GLF_IDENTITY((gl_WorkGroupSize.x), clamp((gl_WorkGroupSize.x), _GLF_IDENTITY((gl_WorkGroupSize.x), 1u * ((gl_WorkGroupSize.x))), (gl_WorkGroupSize.x))), _GLF_IDENTITY(max(_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) | (~ _GLF_IDENTITY((gl_WorkGroupSize.x), max((gl_WorkGroupSize.x), (gl_WorkGroupSize.x))))), _GLF_IDENTITY(~ (gl_WorkGroupSize.x), ~ (~ (~ (gl_WorkGroupSize.x))))), 0u + (_GLF_IDENTITY(max(_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) | (~ _GLF_IDENTITY((gl_WorkGroupSize.x), max((gl_WorkGroupSize.x), (gl_WorkGroupSize.x))))), _GLF_IDENTITY(~ (gl_WorkGroupSize.x), ~ (~ (~ (gl_WorkGroupSize.x))))), ~ (~ (_GLF_IDENTITY(max(_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) | (~ _GLF_IDENTITY((gl_WorkGroupSize.x), max((gl_WorkGroupSize.x), (gl_WorkGroupSize.x))))), _GLF_IDENTITY(~ (gl_WorkGroupSize.x), ~ (~ (~ (gl_WorkGroupSize.x))))), (max(_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) | (~ _GLF_IDENTITY((gl_WorkGroupSize.x), max((gl_WorkGroupSize.x), (gl_WorkGroupSize.x))))), _GLF_IDENTITY(~ (gl_WorkGroupSize.x), ~ (~ (~ (gl_WorkGroupSize.x)))))) | 0u))))))), ~ (gl_WorkGroupSize.x))), ~ (gl_WorkGroupSize.x))))), _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | 0u), gl_WorkGroupSize.x));
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (false || (false)) || false))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), true, false)))) && true))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true), _GLF_IDENTITY(_GLF_IDENTITY((false) || false, ! (! _GLF_IDENTITY(((false) || false), true && _GLF_IDENTITY((_GLF_IDENTITY(((false) || false), bool(bool(_GLF_IDENTITY(((false) || false), ! (! (((false) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))))))))))), ! (! ((_GLF_IDENTITY(((false) || false), bool(bool(_GLF_IDENTITY(((false) || _GLF_IDENTITY(false, true && (false))), ! (! (((false) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))))))))))))))))), ! (! ((false) || false))))))
  return;
 _GLF_struct_4 _GLF_struct_replacement_4 = _GLF_struct_4(vec3(1.0), mat4(1.0), _GLF_struct_1(vec4(_GLF_IDENTITY(1.0, 1.0 * (1.0))), _GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), true && (! (! (true))))), _GLF_IDENTITY(mat3(1.0), (_GLF_IDENTITY(true ? mat3(1.0) : _GLF_FUZZED(mat3(mat2(-25.64, -7670.1004, _GLF_IDENTITY(9.7, (9.7) / 1.0), -61.79))), (true ? mat3(1.0) : _GLF_FUZZED(mat3(_GLF_IDENTITY(mat2(-25.64, -7670.1004, 9.7, -61.79), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mat2(-25.64, -7670.1004, 9.7, -61.79) : _GLF_FUZZED(mat2(-9.0, 411.903, -2236.6917, -748.536))))))) / _GLF_IDENTITY(mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(8.5) : _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0)))), 1.0, 1.0), _GLF_IDENTITY((mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)), ((mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))) / _GLF_IDENTITY(mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0), (mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))) - _GLF_IDENTITY(mat3(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-1.5)), bool(false))), 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))), mat3(mat4x3(mat3(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-1.5)), bool(false))), 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))))))))), _GLF_struct_0(bvec4(true), ivec3(1), 1, uvec2(1u), workgroup_size * workgroup_id, mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), (true ? _GLF_IDENTITY(max(1.0, 1.0), (true ? max(1.0, 1.0) : _GLF_FUZZED(-0.7))) : _GLF_FUZZED(cosh(29.28))))), (false ? _GLF_FUZZED(-5.0) : _GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), _GLF_IDENTITY((true ? _GLF_IDENTITY(max(1.0, 1.0), (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)) ? max(1.0, 1.0) : _GLF_FUZZED(-0.7))) : _GLF_FUZZED(cosh(29.28))), _GLF_IDENTITY(max((true ? _GLF_IDENTITY(max(1.0, 1.0), (true ? max(1.0, 1.0) : _GLF_FUZZED(-0.7))) : _GLF_FUZZED(cosh(29.28))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(max(1.0, 1.0), (max(1.0, 1.0)) / 1.0), (true ? max(1.0, 1.0) : _GLF_FUZZED(-0.7))) : _GLF_IDENTITY(_GLF_FUZZED(cosh(29.28)), clamp(_GLF_FUZZED(cosh(29.28)), _GLF_FUZZED(cosh(29.28)), _GLF_IDENTITY(_GLF_FUZZED(cosh(29.28)), (false ? _GLF_FUZZED(-3708.1836) : _GLF_FUZZED(cosh(29.28)))))))), mix(float(_GLF_FUZZED(27.75)), float(max((true ? _GLF_IDENTITY(max(1.0, 1.0), (true ? max(1.0, 1.0) : _GLF_FUZZED(-0.7))) : _GLF_FUZZED(cosh(29.28))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(max(1.0, 1.0), (max(1.0, 1.0)) / 1.0), (true ? max(1.0, 1.0) : _GLF_FUZZED(-0.7))) : _GLF_IDENTITY(_GLF_FUZZED(cosh(29.28)), clamp(_GLF_FUZZED(cosh(29.28)), _GLF_FUZZED(cosh(29.28)), _GLF_IDENTITY(_GLF_FUZZED(cosh(29.28)), (false ? _GLF_FUZZED(-3708.1836) : _GLF_FUZZED(cosh(29.28))))))))), bool(true)))))))), min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0))))))), 1, _GLF_struct_3(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(1u, max(_GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), clamp(_GLF_IDENTITY(1u, max(1u, 1u)), _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, (1u) | 0u), 1u)), _GLF_IDENTITY(1u, max(1u, 1u)))), _GLF_IDENTITY(_GLF_IDENTITY(1u, 1u * (1u)), _GLF_IDENTITY(0u + (_GLF_IDENTITY(1u, 1u * (1u))), min(0u + (_GLF_IDENTITY(1u, 1u * (1u))), _GLF_IDENTITY(0u + _GLF_IDENTITY((_GLF_IDENTITY(1u, 1u * (1u))), max((_GLF_IDENTITY(1u, 1u * (1u))), (_GLF_IDENTITY(1u, 1u * (1u))))), 0u + (0u + (_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u | (1u)), 1u * (1u))))))))))), uvec2(uvec2(uvec2(_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, max(1u, 1u)), _GLF_IDENTITY(_GLF_IDENTITY(1u, 1u * (1u)), _GLF_IDENTITY(0u + _GLF_IDENTITY((_GLF_IDENTITY(1u, 1u * (1u))), ((_GLF_IDENTITY(1u, 1u * (1u)))) * 1u), min(0u + (_GLF_IDENTITY(1u, 1u * (1u))), _GLF_IDENTITY(0u + (_GLF_IDENTITY(1u, 1u * (1u))), 0u + (0u + (_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u | (1u)), 1u * (1u)))))))))))))), _GLF_struct_2(bvec3(true), uvec4(1u), bvec4(true), ivec4(1), mat2x4(1.0))));
 uint virtual_gid = _GLF_struct_replacement_4._f2._f3.workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_struct_replacement_4._f2._f3.workgroup_base, clamp(_GLF_struct_replacement_4._f2._f3.workgroup_base, _GLF_struct_replacement_4._f2._f3.workgroup_base, _GLF_struct_replacement_4._f2._f3.workgroup_base)) + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  return;
 uint read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec4(4, 1, 1, 1), (ivec4(4, 1, 1, 1)) | ivec4(0, 0, 0, 0)))), int(int(4))), 64, _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(min(-48934, _GLF_IDENTITY(-61265, (_GLF_IDENTITY(-61265, clamp(-61265, -61265, _GLF_IDENTITY(-61265, (true ? -61265 : _GLF_FUZZED(-45664)))))) / 1))) : 0))) << 0), 0 | (0)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, ~ (~ (0)))) | (0))) << 0) | (_GLF_IDENTITY(0, 0 ^ (0)))), (_GLF_IDENTITY(_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | (0)), 0, 0)), _GLF_IDENTITY(0, (0) + 0))), _GLF_IDENTITY(0, min(0, 0)) | (0))) - 0)), (true ? _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, 0 | (0)), (_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, (0) | (0))))), 0 | (0))) - 0), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(0, 0 | (0)), _GLF_IDENTITY((_GLF_IDENTITY(0, 0 | _GLF_IDENTITY((0), ((0)) / 1))), ((_GLF_IDENTITY(0, 0 | _GLF_IDENTITY((0), ((0)) / _GLF_IDENTITY(1, min(1, 1)))))) | ((_GLF_IDENTITY(0, 0 | _GLF_IDENTITY(_GLF_IDENTITY((0), ((0)) / 1), (_GLF_IDENTITY((0), ((0)) / 1)) - 0))))) - 0)), (true ? ~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), _GLF_IDENTITY(0, (_GLF_IDENTITY(0, int(int(0)))) >> (0 >> _GLF_IDENTITY(int(1), int(1)))) | (_GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, 0 | (0))), int(int((_GLF_IDENTITY(0, 0 | (0)))))) / _GLF_IDENTITY(1, 0 + (1))))), (_GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY(min(0, 0), (min(0, 0)) | (min(0, 0)))), 0 | (0))) - 0)) : _GLF_FUZZED(-48733)))))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, 0 | (0)), (_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, (0) | (0))))), 0 | (0))) - 0), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(0, 0 | (0)), _GLF_IDENTITY((_GLF_IDENTITY(0, 0 | _GLF_IDENTITY((0), (_GLF_IDENTITY((0), min((0), (0)))) / 1))), ((_GLF_IDENTITY(0, 0 | _GLF_IDENTITY((0), ((0)) / 1)))) | ((_GLF_IDENTITY(0, 0 | _GLF_IDENTITY((0), ((0)) / 1))))) - 0)), (true ? ~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), _GLF_IDENTITY(0, (_GLF_IDENTITY(0, int(int(0)))) >> (0 >> _GLF_IDENTITY(int(1), int(1)))) | (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, _GLF_IDENTITY(0 | (0), 0 | (0 | (0))))) / _GLF_IDENTITY(1, 0 + (1))))), (_GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY(min(0, 0), (min(0, 0)) | (min(0, 0)))), 0 | (0))) - 0)) : _GLF_FUZZED(-48733)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, 0 | (0)), (_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, (0) | (0))))), 0 | _GLF_IDENTITY((0), ((0)) ^ (-67017 & 0)))) - 0), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(0, 0 | (0)), _GLF_IDENTITY((_GLF_IDENTITY(0, 0 | _GLF_IDENTITY((0), _GLF_IDENTITY(((0)) / 1, (((0)) / 1) | (((0)) / 1))))), ((_GLF_IDENTITY(0, 0 | _GLF_IDENTITY((0), ((0)) / 1)))) | ((_GLF_IDENTITY(0, 0 | _GLF_IDENTITY((0), ((0)) / 1))))) - 0)), (true ? ~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), _GLF_IDENTITY(0, (_GLF_IDENTITY(0, int(int(0)))) >> (0 >> _GLF_IDENTITY(int(1), int(1)))) | (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 | (0))) / _GLF_IDENTITY(1, 0 + (1))))), (_GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY(min(0, 0), (min(0, 0)) | (min(_GLF_IDENTITY(0, 1 * (0)), 0)))), 0 | (0))) - 0)) : _GLF_FUZZED(-48733)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, 0 | (0)), (_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, (0) | (0))))), 0 | (0))) - 0), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(0, 0 | (0)), _GLF_IDENTITY((_GLF_IDENTITY(0, 0 | _GLF_IDENTITY((0), ((0)) / 1))), ((_GLF_IDENTITY(0, 0 | _GLF_IDENTITY((0), ((0)) / 1)))) | ((_GLF_IDENTITY(0, 0 | _GLF_IDENTITY((0), ((0)) / 1))))) - 0)), (true ? ~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), _GLF_IDENTITY(0, (_GLF_IDENTITY(0, int(int(0)))) >> (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), ~ (~ (int(1)))), int(1)))) | (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 | (0))) / _GLF_IDENTITY(1, 0 + (1))))), (_GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY(min(0, 0), (min(0, 0)) | (min(0, 0)))), 0 | (0))) - 0)) : _GLF_FUZZED(-48733)))))))) : _GLF_FUZZED(-58861))) << 0), 0, 0)));
 if(_GLF_IDENTITY(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))) ^ 0u)) / 1u, _GLF_IDENTITY((_GLF_IDENTITY((subgroup_size) / 1u, (false ? _GLF_FUZZED(workgroup_size) : (_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u)) / 1u))) + _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(7u), uint(7u))), max((0u << _GLF_IDENTITY(uint(7u), uint(7u))), (0u << _GLF_IDENTITY(uint(7u), uint(7u))))), max((_GLF_IDENTITY((subgroup_size) / 1u, (false ? _GLF_FUZZED(workgroup_size) : (_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u)) / 1u))) + _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(7u), uint(7u))), max((0u << _GLF_IDENTITY(uint(7u), uint(7u))), (0u << _GLF_IDENTITY(uint(7u), uint(7u))))), (_GLF_IDENTITY((subgroup_size) / 1u, (false ? _GLF_FUZZED(workgroup_size) : (_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u)) / 1u))) + _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(7u), uint(7u))), max((0u << _GLF_IDENTITY(uint(7u), uint(7u))), (0u << _GLF_IDENTITY(uint(7u), uint(7u))))))))), true && _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1)) < subgroup_size), ! (! ((subgroup_local_id + 1 < subgroup_size))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 0.0), mat2(_GLF_IDENTITY(mat4(mat2(injectionSwitch, 0.0, 0.0)), mat4(1.0) * (mat4(mat2(injectionSwitch, 0.0, 0.0))))))), clamp(vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 0.0), mat2(_GLF_IDENTITY(mat4(mat2(injectionSwitch, 0.0, 0.0)), mat4(1.0) * (mat4(mat2(injectionSwitch, 0.0, 0.0))))))), vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 0.0), mat2(_GLF_IDENTITY(mat4(mat2(injectionSwitch, 0.0, 0.0)), mat4(1.0) * (mat4(mat2(injectionSwitch, 0.0, 0.0))))))), vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 0.0), mat2(_GLF_IDENTITY(mat4(mat2(injectionSwitch, 0.0, 0.0)), mat4(1.0) * (mat4(mat2(injectionSwitch, 0.0, 0.0)))))))))).y) * 1.0), injectionSwitch.y)), true && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))))))))))))
    return;
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
   subgroupAll(false);
  }
 else
  {
   atomicStore(checker[virtual_gid], _GLF_IDENTITY(read, (read) << 0u), _GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), _GLF_IDENTITY((~ (4)), ((~ (4))) / 1) / int(_GLF_ONE(1.0, injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY(clamp(64, 64, _GLF_IDENTITY(64, clamp(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) | 0)) | 0), 64, _GLF_IDENTITY(_GLF_IDENTITY(64, clamp(64, 64, 64)), 0 ^ (64))))), ((1 ^ 1) >> _GLF_IDENTITY(int(4), int(4))) | (_GLF_IDENTITY(clamp(64, 64, _GLF_IDENTITY(64, clamp(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) | _GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0), (false ? _GLF_FUZZED(31598) : _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-1209))))))) | 0), 64, _GLF_IDENTITY(64, 0 ^ _GLF_IDENTITY((64), (false ? _GLF_FUZZED(bitCount(subgroup_size)) : _GLF_IDENTITY((64), ~ (_GLF_IDENTITY(~ ((64)), (~ ((64))) >> 0))))))))), (clamp(64, 64, _GLF_IDENTITY(64, clamp(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) | 0)) | 0), 64, _GLF_IDENTITY(64, 0 ^ (64)))))) / 1)))), clamp(64, _GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(64, (64) | (64)), _GLF_IDENTITY(64, (64) / 1))), 64)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, clamp(64, 64, _GLF_IDENTITY(64, clamp(_GLF_IDENTITY(64, (64) | 0), 64, _GLF_IDENTITY(64, 0 ^ (64)))))), clamp(64, _GLF_IDENTITY(64, _GLF_IDENTITY(clamp(64, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, max(64, 64))) | (64)), _GLF_IDENTITY(64, (64) / 1)), (_GLF_IDENTITY(clamp(64, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, max(64, 64))) | (64)), _GLF_IDENTITY(64, (64) / 1)), (true ? _GLF_IDENTITY(clamp(64, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, max(64, 64))) | (64)), _GLF_IDENTITY(64, (64) / 1)), min(clamp(64, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, max(64, 64))) | (64)), _GLF_IDENTITY(64, (64) / 1)), clamp(64, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, max(64, 64))) | (64)), _GLF_IDENTITY(64, (64) / 1)))) : _GLF_FUZZED(-20713)))) | 0)), 64)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(64, clamp(64, 64, _GLF_IDENTITY(64, clamp(_GLF_IDENTITY(64, (64) | 0), 64, _GLF_IDENTITY(64, 0 ^ (64)))))), clamp(64, _GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(64, (64) | (_GLF_IDENTITY(64, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (64), int(int(~ (64))))), clamp((~ (64)), (~ (64)), (~ (64))))))), _GLF_IDENTITY(64, (64) / 1))), 64))), int(ivec2((_GLF_IDENTITY(_GLF_IDENTITY(64, clamp(64, 64, _GLF_IDENTITY(64, clamp(_GLF_IDENTITY(64, (64) | 0), 64, _GLF_IDENTITY(64, 0 ^ (64)))))), clamp(64, _GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(64, (64) | (_GLF_IDENTITY(64, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (64), int(int(~ (64))))), clamp((~ (64)), (~ (64)), (~ (64))))))), _GLF_IDENTITY(64, (64) / 1))), 64))), 1))) - 0)) >> 0), 4);
   subgroupAll(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, (true) || false), true, true)), ! (! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), (_GLF_IDENTITY(true, (true) || false)) && true), true, true)))))));
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
