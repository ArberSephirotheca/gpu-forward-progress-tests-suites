#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 for(int _injected_loop_counter = _GLF_IDENTITY(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((1), ((1)) / 1), min(~ _GLF_IDENTITY((1), ((1)) ^ 0), ~ (1))))), clamp(1, 1, 1)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_injected_loop_counter != int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(3.6)), max(vec2((injectionSwitch)[0], _GLF_FUZZED(3.6)), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(3.6)), clamp(vec2((injectionSwitch)[0], _GLF_FUZZED(3.6)), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(3.6)), mix(vec2(_GLF_FUZZED(8253.1459), _GLF_FUZZED(-979.648)), vec2((vec2((injectionSwitch)[0], _GLF_FUZZED(3.6)))[0], (vec2((injectionSwitch)[0], _GLF_FUZZED(3.6)))[1]), bvec2(true, true))), vec2((injectionSwitch)[0], _GLF_FUZZED(3.6)))))), vec2(_GLF_FUZZED(92.64), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y)), true))).x))), false || (bool(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_injected_loop_counter != _GLF_IDENTITY(int(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), mix(vec2((injectionSwitch)[0], _GLF_FUZZED(3.6)), vec2(_GLF_FUZZED(92.64), _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(8451.5603), _GLF_IDENTITY(((injectionSwitch))[1], max(((injectionSwitch))[1], ((injectionSwitch))[1]))), vec2(((injectionSwitch))[0], _GLF_FUZZED(-1105.8135)), bvec2(true, false)))[_GLF_IDENTITY(1, (1) / 1)]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(tanh(-9.7)) : injectionSwitch.y)))), true))).x)), (int(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), mix(vec2((injectionSwitch)[0], _GLF_FUZZED(3.6)), vec2(_GLF_FUZZED(92.64), _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(8451.5603), _GLF_IDENTITY(((injectionSwitch))[1], max(((injectionSwitch))[1], ((injectionSwitch))[1]))), vec2(((injectionSwitch))[0], _GLF_FUZZED(-1105.8135)), bvec2(true, false)))[_GLF_IDENTITY(1, (1) / 1)]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(tanh(-9.7)) : injectionSwitch.y)))), true))).x))) | (_GLF_IDENTITY(int(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), mix(vec2((injectionSwitch)[0], _GLF_FUZZED(3.6)), vec2(_GLF_FUZZED(92.64), _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(8451.5603), _GLF_IDENTITY(((injectionSwitch))[1], max(((injectionSwitch))[1], ((injectionSwitch))[1]))), vec2(((injectionSwitch))[0], _GLF_FUZZED(-1105.8135)), bvec2(true, false)))[_GLF_IDENTITY(1, (1) / 1)]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(tanh(-9.7)) : injectionSwitch.y)))), true))).x)), (int(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), mix(vec2((injectionSwitch)[0], _GLF_FUZZED(3.6)), vec2(_GLF_FUZZED(92.64), _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(8451.5603), _GLF_IDENTITY(((injectionSwitch))[1], max(((injectionSwitch))[1], ((injectionSwitch))[1]))), vec2(((injectionSwitch))[0], _GLF_FUZZED(-1105.8135)), bvec2(true, false)))[_GLF_IDENTITY(1, (1) / 1)]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(tanh(-9.7)) : injectionSwitch.y)))), true))).x))) << 0)))), true && (bool(_injected_loop_counter != _GLF_IDENTITY(int(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), mix(vec2((injectionSwitch)[0], _GLF_FUZZED(3.6)), vec2(_GLF_FUZZED(92.64), _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(8451.5603), _GLF_IDENTITY(((injectionSwitch))[1], max(((injectionSwitch))[1], ((injectionSwitch))[1]))), vec2(((injectionSwitch))[0], _GLF_FUZZED(-1105.8135)), bvec2(true, false)))[_GLF_IDENTITY(1, (1) / 1)]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(tanh(-9.7)) : injectionSwitch.y)))), true))).x)), (int(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), mix(vec2((injectionSwitch)[0], _GLF_FUZZED(3.6)), vec2(_GLF_FUZZED(92.64), _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(8451.5603), _GLF_IDENTITY(((injectionSwitch))[1], max(((injectionSwitch))[1], ((injectionSwitch))[1]))), vec2(((injectionSwitch))[0], _GLF_FUZZED(-1105.8135)), bvec2(true, false)))[_GLF_IDENTITY(1, (1) / 1)]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(tanh(-9.7)) : injectionSwitch.y)))), true))).x))) | (_GLF_IDENTITY(int(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), mix(vec2((injectionSwitch)[0], _GLF_FUZZED(3.6)), vec2(_GLF_FUZZED(92.64), _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(8451.5603), _GLF_IDENTITY(((injectionSwitch))[1], max(((injectionSwitch))[1], ((injectionSwitch))[1]))), vec2(((injectionSwitch))[0], _GLF_FUZZED(-1105.8135)), bvec2(true, false)))[_GLF_IDENTITY(1, (1) / 1)]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(tanh(-9.7)) : injectionSwitch.y)))), true))).x)), (int(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), mix(vec2((injectionSwitch)[0], _GLF_FUZZED(3.6)), vec2(_GLF_FUZZED(92.64), _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(8451.5603), _GLF_IDENTITY(((injectionSwitch))[1], max(((injectionSwitch))[1], ((injectionSwitch))[1]))), vec2(((injectionSwitch))[0], _GLF_FUZZED(-1105.8135)), bvec2(true, false)))[_GLF_IDENTITY(1, (1) / 1)]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(tanh(-9.7)) : injectionSwitch.y)))), true))).x))) << 0)))))), false || (bool(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))))), bool(bvec2(_GLF_IDENTITY(bool(_injected_loop_counter != int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(3.6)), vec2(_GLF_FUZZED(92.64), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).x))), false || (bool(_injected_loop_counter != _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(ivec4(int(_GLF_ZERO(0.0, injectionSwitch.x)), 1, 0, 1)))))), false))))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))) || (bool(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))))))), false || (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x)), bool(bvec2(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x)), false))), ! (! (_injected_loop_counter != int(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 0.0, 0.0, 1.0, exp(0.0), 0.0, determinant(mat2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0))))), injectionSwitch.x)))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x)), ! (! (_injected_loop_counter != int(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 0.0, 0.0, 1.0, exp(0.0), 0.0, determinant(mat2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0))))), injectionSwitch.x)))))), ! (! (bool(_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x)), ! (! (_injected_loop_counter != int(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 0.0, 0.0, 1.0, exp(0.0), 0.0, determinant(mat2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0))))), injectionSwitch.x)))))))))) && true), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter)) != int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(4204.0775)), bool(false)))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter)) != int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(4204.0775)), bool(false)))))), bool(bvec4(bool(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter)) != int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(4204.0775)), bool(false)))))), false, false, true))))))))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY((_injected_loop_counter) - 0, ((_injected_loop_counter) - 0) | 0))) | (_injected_loop_counter)))) != int(_GLF_ZERO(0.0, injectionSwitch.x))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(0 | (_injected_loop_counter), (_GLF_IDENTITY(0 | (_injected_loop_counter), clamp(_GLF_IDENTITY(0 | (_injected_loop_counter), (0 | (_injected_loop_counter)) - 0), 0 | (_injected_loop_counter), 0 | (_injected_loop_counter)))) | (0 | (_injected_loop_counter)))) != int(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x))), bool(bvec4(bool(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))), false, true, true)))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_injected_loop_counter != int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7.6), _GLF_FUZZED(5946.0194)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x))), false || (bool(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x)))))), bool(bool(bool(_GLF_IDENTITY(bool(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(false || (bool(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true, true)))) || false) || (false || (bool(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x)))))))))))))))))))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_injected_loop_counter != int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(3.6)), vec2(_GLF_IDENTITY(_GLF_FUZZED(92.64), (false ? _GLF_FUZZED(4487.1633) : _GLF_FUZZED(92.64))), _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(1, 0, 0, 1), ivec4(0, 0, 0, 0) | (ivec4(1, 0, 0, 1)))))], max((injectionSwitch)[_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(1, 0, 0, 1), ivec4(0, 0, 0, 0) | (ivec4(1, 0, 0, 1)))))], (injectionSwitch)[_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(1, 0, 0, 1), ivec4(0, 0, 0, 0) | (ivec4(1, 0, 0, 1)))))]))), bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true))))))))))).x))), false || (bool(_injected_loop_counter != int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_injected_loop_counter, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) / (1 & 1)) : _GLF_FUZZED(41246))) != int(_GLF_ZERO(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(3.6)), vec2(_GLF_FUZZED(92.64), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), (mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(3.6)), _GLF_IDENTITY(vec2(_GLF_FUZZED(92.64), (injectionSwitch)[1]), mix(vec2((vec2(_GLF_FUZZED(92.64), (injectionSwitch)[1]))[0], (vec2(_GLF_FUZZED(92.64), (injectionSwitch)[1]))[1]), vec2(_GLF_FUZZED(911.464), _GLF_FUZZED((-6.5))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))) / vec2(1.0, 1.0))).x))), false || _GLF_IDENTITY((bool(_injected_loop_counter != int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))), ! (! ((bool(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter))) ^ 0) != int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x))), _GLF_ZERO(0.0, injectionSwitch.x)))))))))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter))) != int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(3.6)), vec2(_GLF_FUZZED(_GLF_IDENTITY(92.64, clamp(92.64, 92.64, 92.64))), (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))[1]), _GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false), bvec3(bvec3(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false)))))))).x))), _GLF_IDENTITY(false || (bool(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x)))), bool(bvec2(false || (bool(_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x)), (_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))) && true)) && true))), false)))), false))))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(_GLF_IDENTITY(bool((! (false))), (bool((! (false)))) && true)))))) || (bool(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))))))), _GLF_IDENTITY(false, (false) && true) || (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) / ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)))) != int(_GLF_ZERO(0.0, injectionSwitch.x)), ! (! (_injected_loop_counter != int(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-396.861)), float(0.0), bool(true))), 0.0, 1.0, exp(0.0), 0.0, _GLF_IDENTITY(determinant(mat2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0)), max(determinant(mat2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0)), determinant(mat2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0))))))), _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 1.0))), sqrt(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)))), determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, log(1.0), 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)))).x)))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x)), ! (! (_injected_loop_counter != int(_GLF_ZERO(_GLF_IDENTITY(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 0.0, 0.0, 1.0, exp(0.0), 0.0, determinant(mat2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0.0, float(mat2x4(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0))), 1.0, 0.0, 0.0, 1.0, exp(0.0), 0.0, determinant(mat2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0))))), (_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-8313.5533)), float(0.0), bool(true))), float(mat2x4(0.0, 1.0, 0.0, 0.0, 1.0, exp(0.0), 0.0, determinant(_GLF_IDENTITY(mat2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0), (true ? mat2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0) : _GLF_FUZZED(mat2(6.7, 7.9, -5.8, -6.2))))))))) + 0.0), _GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 0.0, 0.0, 1.0, exp(0.0), 0.0, determinant(mat2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0))))), _GLF_IDENTITY(0.0, float(mat2x4(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(5.9)))) - 0.0), _GLF_IDENTITY(0.0, float(vec4(0.0, 0.0, 1.0, 1.0))), 0.0)), 1.0, 0.0, 0.0, 1.0, exp(0.0), _GLF_IDENTITY(0.0, min(0.0, 0.0)), determinant(mat2(0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(mat3x2(0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), tan(0.0), 1.0))), 0.0)), 0.0, 0.0))))))), injectionSwitch.x)))))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY((_injected_loop_counter) - (0 >> _GLF_IDENTITY(int(5), int(5))), 0 ^ ((_injected_loop_counter) - (0 >> _GLF_IDENTITY(int(5), int(5)))))) != int(_GLF_ZERO(0.0, injectionSwitch.x)), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 0.0, 0.0, 1.0, exp(0.0), 0.0, determinant(mat2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0))))), injectionSwitch.x)), (_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(exp(0.0), (exp(0.0)) * 1.0), 0.0, determinant(mat2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec2(0.0, 0.0)), mix(float(float(vec2(0.0, 0.0))), float(_GLF_FUZZED((8.5 * 708.113))), bool(false))))))))), injectionSwitch.x)), bool(bvec2(_injected_loop_counter != int(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, exp(0.0), 0.0, determinant(mat2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0))))), injectionSwitch.x)), false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((! (_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 0.0, 0.0, 1.0, exp(0.0), 0.0, determinant(mat2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0))))), injectionSwitch.x)), (_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(exp(0.0), (exp(0.0)) * 1.0), 0.0, determinant(mat2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec2(0.0, 0.0)), mix(float(float(vec2(0.0, 0.0))), float(_GLF_FUZZED((8.5 * 708.113))), bool(false))))))))), injectionSwitch.x)), bool(bvec2(_injected_loop_counter != int(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, exp(0.0), 0.0, determinant(mat2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0))))), injectionSwitch.x)), false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ((! (_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 0.0, 0.0, 1.0, exp(0.0), 0.0, determinant(mat2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0))))), injectionSwitch.x)), (_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(exp(0.0), (exp(0.0)) * 1.0), 0.0, determinant(mat2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec2(0.0, 0.0)), mix(float(float(vec2(0.0, 0.0))), float(_GLF_FUZZED((8.5 * 708.113))), bool(false))))))))), injectionSwitch.x)), bool(bvec2(_injected_loop_counter != int(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, exp(0.0), 0.0, determinant(mat2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0))))), injectionSwitch.x)), false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false), false), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY((! (_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 0.0, 0.0, 1.0, exp(0.0), 0.0, determinant(mat2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0))))), injectionSwitch.x)), (_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(exp(0.0), (exp(0.0)) * 1.0), 0.0, determinant(mat2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec2(0.0, 0.0)), mix(float(float(vec2(0.0, 0.0))), float(_GLF_FUZZED((8.5 * 708.113))), bool(false))))))))), injectionSwitch.x)), bool(bvec2(_injected_loop_counter != int(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, exp(0.0), 0.0, determinant(mat2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0))))), injectionSwitch.x)), false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ((! (_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 0.0, 0.0, 1.0, exp(0.0), 0.0, determinant(mat2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0))))), injectionSwitch.x)), (_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(exp(0.0), (exp(0.0)) * 1.0), 0.0, determinant(mat2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec2(0.0, 0.0)), mix(float(float(vec2(0.0, 0.0))), float(_GLF_FUZZED((8.5 * 708.113))), bool(false))))))))), injectionSwitch.x)), bool(bvec2(_injected_loop_counter != int(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, exp(0.0), 0.0, determinant(mat2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0))))), injectionSwitch.x)), false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false), false), true), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY((! (_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 0.0, 0.0, 1.0, exp(0.0), 0.0, determinant(mat2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0))))), injectionSwitch.x)), (_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(exp(0.0), (exp(0.0)) * 1.0), 0.0, determinant(mat2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec2(0.0, 0.0)), mix(float(float(vec2(0.0, 0.0))), float(_GLF_FUZZED((8.5 * 708.113))), bool(false))))))))), injectionSwitch.x)), bool(bvec2(_injected_loop_counter != int(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, exp(0.0), 0.0, determinant(mat2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0))))), injectionSwitch.x)), false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ((! (_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 0.0, 0.0, 1.0, exp(0.0), 0.0, determinant(mat2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0))))), injectionSwitch.x)), (_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(exp(0.0), (exp(0.0)) * 1.0), 0.0, determinant(mat2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec2(0.0, 0.0)), mix(float(float(vec2(0.0, 0.0))), float(_GLF_FUZZED((8.5 * 708.113))), bool(false))))))))), injectionSwitch.x)), bool(bvec2(_injected_loop_counter != int(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, exp(0.0), 0.0, determinant(mat2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0))))), injectionSwitch.x)), false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false), false), true), true)))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY((! (_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 0.0, 0.0, 1.0, exp(0.0), 0.0, determinant(mat2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0))))), injectionSwitch.x)), (_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(exp(0.0), (exp(0.0)) * 1.0), 0.0, determinant(mat2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec2(0.0, 0.0)), mix(float(float(vec2(0.0, 0.0))), float(_GLF_FUZZED((8.5 * 708.113))), bool(false))))))))), injectionSwitch.x)), bool(bvec2(_injected_loop_counter != int(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, exp(0.0), 0.0, determinant(mat2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0))))), injectionSwitch.x)), false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ((! (_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 0.0, 0.0, 1.0, exp(0.0), 0.0, determinant(mat2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0))))), injectionSwitch.x)), (_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(exp(0.0), (exp(0.0)) * 1.0), 0.0, determinant(mat2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec2(0.0, 0.0)), mix(float(float(vec2(0.0, 0.0))), float(_GLF_FUZZED((8.5 * 708.113))), bool(false))))))))), injectionSwitch.x)), bool(bvec2(_injected_loop_counter != int(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, exp(0.0), 0.0, determinant(mat2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0))))), injectionSwitch.x)), false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false), false), true), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY((! (_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 0.0, 0.0, 1.0, exp(0.0), 0.0, determinant(mat2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0))))), injectionSwitch.x)), (_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(exp(0.0), (exp(0.0)) * 1.0), 0.0, determinant(mat2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec2(0.0, 0.0)), mix(float(float(vec2(0.0, 0.0))), float(_GLF_FUZZED((8.5 * 708.113))), bool(false))))))))), injectionSwitch.x)), bool(bvec2(_injected_loop_counter != int(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, exp(0.0), 0.0, determinant(mat2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0))))), injectionSwitch.x)), false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ((! (_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 0.0, 0.0, 1.0, exp(0.0), 0.0, determinant(mat2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0))))), injectionSwitch.x)), (_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(exp(0.0), (exp(0.0)) * 1.0), 0.0, determinant(mat2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec2(0.0, 0.0)), mix(float(float(vec2(0.0, 0.0))), float(_GLF_FUZZED((8.5 * 708.113))), bool(false))))))))), injectionSwitch.x)), bool(bvec2(_injected_loop_counter != int(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, exp(0.0), 0.0, determinant(mat2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0))))), injectionSwitch.x)), false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false), false), true), true))))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((! (_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 0.0, 0.0, 1.0, exp(0.0), 0.0, determinant(mat2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0))))), injectionSwitch.x)), (_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(exp(0.0), (exp(0.0)) * 1.0), 0.0, determinant(mat2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec2(0.0, 0.0)), mix(float(float(vec2(0.0, 0.0))), float(_GLF_FUZZED((8.5 * 708.113))), bool(false))))))))), injectionSwitch.x)), bool(bvec2(_injected_loop_counter != int(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, exp(0.0), 0.0, determinant(mat2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0))))), injectionSwitch.x)), false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ((! (_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 0.0, 0.0, 1.0, exp(0.0), 0.0, determinant(mat2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0))))), injectionSwitch.x)), (_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(exp(0.0), (exp(0.0)) * 1.0), 0.0, determinant(mat2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec2(0.0, 0.0)), mix(float(float(vec2(0.0, 0.0))), float(_GLF_FUZZED((8.5 * 708.113))), bool(false))))))))), injectionSwitch.x)), bool(bvec2(_injected_loop_counter != int(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, exp(0.0), 0.0, determinant(mat2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0))))), injectionSwitch.x)), false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false), false), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY((! (_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 0.0, 0.0, 1.0, exp(0.0), 0.0, determinant(mat2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0))))), injectionSwitch.x)), (_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(exp(0.0), (exp(0.0)) * 1.0), 0.0, determinant(mat2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec2(0.0, 0.0)), mix(float(float(vec2(0.0, 0.0))), float(_GLF_FUZZED((8.5 * 708.113))), bool(false))))))))), injectionSwitch.x)), bool(bvec2(_injected_loop_counter != int(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, exp(0.0), 0.0, determinant(mat2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0))))), injectionSwitch.x)), false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ((! (_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 0.0, 0.0, 1.0, exp(0.0), 0.0, determinant(mat2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0))))), injectionSwitch.x)), (_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(exp(0.0), (exp(0.0)) * 1.0), 0.0, determinant(mat2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec2(0.0, 0.0)), mix(float(float(vec2(0.0, 0.0))), float(_GLF_FUZZED((8.5 * 708.113))), bool(false))))))))), injectionSwitch.x)), bool(bvec2(_injected_loop_counter != int(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, exp(0.0), 0.0, determinant(mat2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0))))), injectionSwitch.x)), false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false), false), true), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY((! (_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 0.0, 0.0, 1.0, exp(0.0), 0.0, determinant(mat2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0))))), injectionSwitch.x)), (_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(exp(0.0), (exp(0.0)) * 1.0), 0.0, determinant(mat2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec2(0.0, 0.0)), mix(float(float(vec2(0.0, 0.0))), float(_GLF_FUZZED((8.5 * 708.113))), bool(false))))))))), injectionSwitch.x)), bool(bvec2(_injected_loop_counter != int(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, exp(0.0), 0.0, determinant(mat2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0))))), injectionSwitch.x)), false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ((! (_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 0.0, 0.0, 1.0, exp(0.0), 0.0, determinant(mat2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0))))), injectionSwitch.x)), (_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(exp(0.0), (exp(0.0)) * 1.0), 0.0, determinant(mat2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec2(0.0, 0.0)), mix(float(float(vec2(0.0, 0.0))), float(_GLF_FUZZED((8.5 * 708.113))), bool(false))))))))), injectionSwitch.x)), bool(bvec2(_injected_loop_counter != int(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, exp(0.0), 0.0, determinant(mat2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0))))), injectionSwitch.x)), false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false), false), true), true)))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY((! (_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 0.0, 0.0, 1.0, exp(0.0), 0.0, determinant(mat2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0))))), injectionSwitch.x)), (_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(exp(0.0), (exp(0.0)) * 1.0), 0.0, determinant(mat2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec2(0.0, 0.0)), mix(float(float(vec2(0.0, 0.0))), float(_GLF_FUZZED((8.5 * 708.113))), bool(false))))))))), injectionSwitch.x)), bool(bvec2(_injected_loop_counter != int(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, exp(0.0), 0.0, determinant(mat2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0))))), injectionSwitch.x)), false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ((! (_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 0.0, 0.0, 1.0, exp(0.0), 0.0, determinant(mat2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0))))), injectionSwitch.x)), (_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(exp(0.0), (exp(0.0)) * 1.0), 0.0, determinant(mat2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec2(0.0, 0.0)), mix(float(float(vec2(0.0, 0.0))), float(_GLF_FUZZED((8.5 * 708.113))), bool(false))))))))), injectionSwitch.x)), bool(bvec2(_injected_loop_counter != int(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, exp(0.0), 0.0, determinant(mat2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0))))), injectionSwitch.x)), false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false), false), true), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY((! (_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 0.0, 0.0, 1.0, exp(0.0), 0.0, determinant(mat2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0))))), injectionSwitch.x)), (_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(exp(0.0), (exp(0.0)) * 1.0), 0.0, determinant(mat2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec2(0.0, 0.0)), mix(float(float(vec2(0.0, 0.0))), float(_GLF_FUZZED((8.5 * 708.113))), bool(false))))))))), injectionSwitch.x)), bool(bvec2(_injected_loop_counter != int(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, exp(0.0), 0.0, determinant(mat2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0))))), injectionSwitch.x)), false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ((! (_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 0.0, 0.0, 1.0, exp(0.0), 0.0, determinant(mat2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0))))), injectionSwitch.x)), (_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(exp(0.0), (exp(0.0)) * 1.0), 0.0, determinant(mat2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec2(0.0, 0.0)), mix(float(float(vec2(0.0, 0.0))), float(_GLF_FUZZED((8.5 * 708.113))), bool(false))))))))), injectionSwitch.x)), bool(bvec2(_injected_loop_counter != int(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, exp(0.0), 0.0, determinant(mat2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0))))), injectionSwitch.x)), false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false), false), true), true))))))))), bool(bool(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((! (_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 0.0, 0.0, 1.0, exp(0.0), 0.0, determinant(mat2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0))))), injectionSwitch.x)), (_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(exp(0.0), (exp(0.0)) * 1.0), 0.0, determinant(mat2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec2(0.0, 0.0)), mix(float(float(vec2(0.0, 0.0))), float(_GLF_FUZZED((8.5 * 708.113))), bool(false))))))))), injectionSwitch.x)), bool(bvec2(_injected_loop_counter != int(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, exp(0.0), 0.0, determinant(mat2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0))))), injectionSwitch.x)), false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ((! (_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 0.0, 0.0, 1.0, exp(0.0), 0.0, determinant(mat2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0))))), injectionSwitch.x)), (_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(exp(0.0), (exp(0.0)) * 1.0), 0.0, determinant(mat2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec2(0.0, 0.0)), mix(float(float(vec2(0.0, 0.0))), float(_GLF_FUZZED((8.5 * 708.113))), bool(false))))))))), injectionSwitch.x)), bool(bvec2(_injected_loop_counter != int(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, exp(0.0), 0.0, determinant(mat2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0))))), injectionSwitch.x)), false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false), false), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY((! (_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 0.0, 0.0, 1.0, exp(0.0), 0.0, determinant(mat2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0))))), injectionSwitch.x)), (_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(exp(0.0), (exp(0.0)) * 1.0), 0.0, determinant(mat2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec2(0.0, 0.0)), mix(float(float(vec2(0.0, 0.0))), float(_GLF_FUZZED((8.5 * 708.113))), bool(false))))))))), injectionSwitch.x)), bool(bvec2(_injected_loop_counter != int(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, exp(0.0), 0.0, determinant(mat2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0))))), injectionSwitch.x)), false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ((! (_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 0.0, 0.0, 1.0, exp(0.0), 0.0, determinant(mat2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0))))), injectionSwitch.x)), (_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(exp(0.0), (exp(0.0)) * 1.0), 0.0, determinant(mat2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec2(0.0, 0.0)), mix(float(float(vec2(0.0, 0.0))), float(_GLF_FUZZED((8.5 * 708.113))), bool(false))))))))), injectionSwitch.x)), bool(bvec2(_injected_loop_counter != int(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, exp(0.0), 0.0, determinant(mat2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0))))), injectionSwitch.x)), false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false), false), true), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY((! (_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 0.0, 0.0, 1.0, exp(0.0), 0.0, determinant(mat2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0))))), injectionSwitch.x)), (_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(exp(0.0), (exp(0.0)) * 1.0), 0.0, determinant(mat2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec2(0.0, 0.0)), mix(float(float(vec2(0.0, 0.0))), float(_GLF_FUZZED((8.5 * 708.113))), bool(false))))))))), injectionSwitch.x)), bool(bvec2(_injected_loop_counter != int(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, exp(0.0), 0.0, determinant(mat2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0))))), injectionSwitch.x)), false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ((! (_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 0.0, 0.0, 1.0, exp(0.0), 0.0, determinant(mat2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0))))), injectionSwitch.x)), (_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(exp(0.0), (exp(0.0)) * 1.0), 0.0, determinant(mat2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec2(0.0, 0.0)), mix(float(float(vec2(0.0, 0.0))), float(_GLF_FUZZED((8.5 * 708.113))), bool(false))))))))), injectionSwitch.x)), bool(bvec2(_injected_loop_counter != int(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, exp(0.0), 0.0, determinant(mat2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0))))), injectionSwitch.x)), false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false), false), true), true)))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY((! (_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 0.0, 0.0, 1.0, exp(0.0), 0.0, determinant(mat2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0))))), injectionSwitch.x)), (_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(exp(0.0), (exp(0.0)) * 1.0), 0.0, determinant(mat2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec2(0.0, 0.0)), mix(float(float(vec2(0.0, 0.0))), float(_GLF_FUZZED((8.5 * 708.113))), bool(false))))))))), injectionSwitch.x)), bool(bvec2(_injected_loop_counter != int(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, exp(0.0), 0.0, determinant(mat2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0))))), injectionSwitch.x)), false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ((! (_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 0.0, 0.0, 1.0, exp(0.0), 0.0, determinant(mat2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0))))), injectionSwitch.x)), (_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(exp(0.0), (exp(0.0)) * 1.0), 0.0, determinant(mat2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec2(0.0, 0.0)), mix(float(float(vec2(0.0, 0.0))), float(_GLF_FUZZED((8.5 * 708.113))), bool(false))))))))), injectionSwitch.x)), bool(bvec2(_injected_loop_counter != int(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, exp(0.0), 0.0, determinant(mat2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0))))), injectionSwitch.x)), false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false), false), true), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY((! (_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 0.0, 0.0, 1.0, exp(0.0), 0.0, determinant(mat2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0))))), injectionSwitch.x)), (_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(exp(0.0), (exp(0.0)) * 1.0), 0.0, determinant(mat2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec2(0.0, 0.0)), mix(float(float(vec2(0.0, 0.0))), float(_GLF_FUZZED((8.5 * 708.113))), bool(false))))))))), injectionSwitch.x)), bool(bvec2(_injected_loop_counter != int(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, exp(0.0), 0.0, determinant(mat2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0))))), injectionSwitch.x)), false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ((! (_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 0.0, 0.0, 1.0, exp(0.0), 0.0, determinant(mat2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0))))), injectionSwitch.x)), (_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(exp(0.0), (exp(0.0)) * 1.0), 0.0, determinant(mat2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec2(0.0, 0.0)), mix(float(float(vec2(0.0, 0.0))), float(_GLF_FUZZED((8.5 * 708.113))), bool(false))))))))), injectionSwitch.x)), bool(bvec2(_injected_loop_counter != int(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, exp(0.0), 0.0, determinant(mat2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0))))), injectionSwitch.x)), false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false), false), true), true))))))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) && true), false || (bool(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter)) != int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-181.955), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(963.486)), bvec2(true, false))).x)))))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - 0)) | (_injected_loop_counter)))) != int(_GLF_ZERO(0.0, injectionSwitch.x))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(_injected_loop_counter, 0 | (_injected_loop_counter)) != _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) * 1.0) : _GLF_FUZZED(-4.0)))), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) * 1.0) : _GLF_FUZZED(-4.0)))), int(ivec4(int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) * 1.0) : _GLF_FUZZED(-4.0)))), 0, 1, 1))), 1, 1, (1 | 1))), (int(ivec4(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) * 1.0) : _GLF_FUZZED(-4.0)))), int(ivec4(int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) * 1.0) : _GLF_FUZZED(-4.0)))), 0, 1, 1))), 1, 1, (1 | 1)))) >> 0))), bool(bvec4(bool(_GLF_IDENTITY(_injected_loop_counter, (true ? _injected_loop_counter : _GLF_FUZZED(abs(_injected_loop_counter)))) != int(_GLF_ZERO(0.0, injectionSwitch.x))), false, true, true))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(max(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - 0)) | (_injected_loop_counter))), int(int(max(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - 0)) | (_injected_loop_counter))))))) != int(_GLF_ZERO(0.0, injectionSwitch.x))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(_injected_loop_counter, 0 | (_injected_loop_counter)) != _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY((_GLF_ZERO(0.0, injectionSwitch.x)) * 1.0, ((_GLF_ZERO(0.0, injectionSwitch.x)) * 1.0) - length(0.0))) : _GLF_FUZZED(-4.0)))), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) * 1.0) : _GLF_FUZZED(-4.0))), mix(float(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) * 1.0) : _GLF_FUZZED(-4.0)))), float(_GLF_FUZZED(443.733)), bool(false)))), _GLF_IDENTITY(int(ivec4(int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) * 1.0) : _GLF_FUZZED(-4.0)))), 0, 1, 1)), (0 << _GLF_IDENTITY(int(7), int(7))) ^ (int(ivec4(int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) * 1.0) : _GLF_FUZZED(-4.0)))), 0, 1, 1))))), 1, 1, (1 | 1))), (int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(0.6) : 0.0)), injectionSwitch.x), (_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), cos(0.0) * (_GLF_ZERO(0.0, injectionSwitch.x)))))) * 1.0) : _GLF_FUZZED(-4.0)))), int(ivec4(int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) * 1.0) : _GLF_FUZZED(_GLF_IDENTITY(-4.0, clamp(-4.0, -4.0, -4.0)))), clamp((true ? _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) * 1.0) : _GLF_FUZZED(_GLF_IDENTITY(-4.0, clamp(-4.0, -4.0, -4.0)))), _GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) * 1.0) : _GLF_FUZZED(_GLF_IDENTITY(-4.0, clamp(-4.0, -4.0, -4.0)))), min((true ? _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) * 1.0) : _GLF_FUZZED(_GLF_IDENTITY(-4.0, clamp(-4.0, -4.0, -4.0)))), (true ? _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) * 1.0) : _GLF_FUZZED(_GLF_IDENTITY(-4.0, clamp(-4.0, -4.0, -4.0)))))), (true ? _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) * 1.0) : _GLF_FUZZED(_GLF_IDENTITY(-4.0, clamp(-4.0, -4.0, -4.0)))))))), 0, 1, 1))), 1, 1, (1 | 1)), (_GLF_IDENTITY(ivec4(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(0.6) : 0.0)), injectionSwitch.x), (_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), cos(0.0) * (_GLF_ZERO(0.0, injectionSwitch.x)))))) * 1.0) : _GLF_FUZZED(-4.0)))), int(ivec4(int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) * 1.0) : _GLF_FUZZED(_GLF_IDENTITY(-4.0, clamp(-4.0, -4.0, -4.0)))), clamp((true ? _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) * 1.0) : _GLF_FUZZED(_GLF_IDENTITY(-4.0, clamp(-4.0, -4.0, -4.0)))), _GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) * 1.0) : _GLF_FUZZED(_GLF_IDENTITY(-4.0, clamp(-4.0, -4.0, -4.0)))), min((true ? _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) * 1.0) : _GLF_FUZZED(_GLF_IDENTITY(-4.0, clamp(-4.0, -4.0, -4.0)))), (true ? _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) * 1.0) : _GLF_FUZZED(_GLF_IDENTITY(-4.0, clamp(-4.0, -4.0, -4.0)))))), (true ? _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) * 1.0) : _GLF_FUZZED(_GLF_IDENTITY(-4.0, clamp(-4.0, -4.0, -4.0)))))))), 0, 1, 1))), 1, 1, (1 | 1)), max(ivec4(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(0.6) : 0.0)), injectionSwitch.x), (_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), cos(0.0) * (_GLF_ZERO(0.0, injectionSwitch.x)))))) * 1.0) : _GLF_FUZZED(-4.0)))), int(ivec4(int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) * 1.0) : _GLF_FUZZED(_GLF_IDENTITY(-4.0, clamp(-4.0, -4.0, -4.0)))), clamp((true ? _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) * 1.0) : _GLF_FUZZED(_GLF_IDENTITY(-4.0, clamp(-4.0, -4.0, -4.0)))), _GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) * 1.0) : _GLF_FUZZED(_GLF_IDENTITY(-4.0, clamp(-4.0, -4.0, -4.0)))), min((true ? _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) * 1.0) : _GLF_FUZZED(_GLF_IDENTITY(-4.0, clamp(-4.0, -4.0, -4.0)))), (true ? _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) * 1.0) : _GLF_FUZZED(_GLF_IDENTITY(-4.0, clamp(-4.0, -4.0, -4.0)))))), (true ? _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) * 1.0) : _GLF_FUZZED(_GLF_IDENTITY(-4.0, clamp(-4.0, -4.0, -4.0)))))))), 0, 1, 1))), 1, 1, (1 | 1)), ivec4(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(0.6) : 0.0)), injectionSwitch.x), (_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), cos(0.0) * (_GLF_ZERO(0.0, injectionSwitch.x)))))) * 1.0) : _GLF_FUZZED(-4.0)))), int(ivec4(int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) * 1.0) : _GLF_FUZZED(_GLF_IDENTITY(-4.0, clamp(-4.0, -4.0, -4.0)))), clamp((true ? _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) * 1.0) : _GLF_FUZZED(_GLF_IDENTITY(-4.0, clamp(-4.0, -4.0, -4.0)))), _GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) * 1.0) : _GLF_FUZZED(_GLF_IDENTITY(-4.0, clamp(-4.0, -4.0, -4.0)))), min((true ? _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) * 1.0) : _GLF_FUZZED(_GLF_IDENTITY(-4.0, clamp(-4.0, -4.0, -4.0)))), (true ? _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) * 1.0) : _GLF_FUZZED(_GLF_IDENTITY(-4.0, clamp(-4.0, -4.0, -4.0)))))), (true ? _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) * 1.0) : _GLF_FUZZED(_GLF_IDENTITY(-4.0, clamp(-4.0, -4.0, -4.0)))))))), 0, 1, 1))), 1, 1, (1 | 1))))) + ivec4(0, 0, 0, 0)))) >> 0))), bool(bvec4(bool(_GLF_IDENTITY(_injected_loop_counter, (true ? _injected_loop_counter : _GLF_FUZZED(abs(_injected_loop_counter)))) != int(_GLF_ZERO(0.0, injectionSwitch.x))), false, true, true)))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))), false || (bool(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x)))))), ! (! (bool(_GLF_IDENTITY(bool(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))), false || (bool(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))))))))), bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY((_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))) && true, bool(bvec4((_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))) && true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))))), _GLF_IDENTITY(false || (bool(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false || (bool(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))))))))), false || (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY((_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))) && true, bool(bvec4((_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))) && true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))))), _GLF_IDENTITY(false || (bool(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false || (bool(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))))))))), ! (! (bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY((_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))) && true, bool(bvec4((_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))) && true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))))), _GLF_IDENTITY(false || (bool(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false || (bool(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))))))))))))))))))))))))))))); _injected_loop_counter --)
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) || false), false)), bool(bvec3(bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && ((false))) || false), false)), false, false))))))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * vec2(1.0, 1.0)), vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))), (false ? _GLF_FUZZED(vec2(-717.751, -7.9)) : _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_ONE(1.0, injectionSwitch.y)), (vec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_ONE(1.0, injectionSwitch.y))) - vec3(0.0, 0.0, 0.0)))), injectionSwitch))), mix(vec2(((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))[0], _GLF_FUZZED(-2.6)), vec2(_GLF_FUZZED(_GLF_IDENTITY(955.299, (955.299) + 0.0)), ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))[_GLF_IDENTITY(1, max(1, 1))]), bvec2(false, true))))) * vec2(1.0, 1.0)))).x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))), false || (bool(_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   do
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       do
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(584.562) : injectionSwitch.x)) > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), false || (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)) || false))))
              barrier();
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y))))
              {
               for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                  }
                }
              }
             else
              {
              }
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), ! (! (bool((injectionSwitch.x > injectionSwitch.y))))))))))
              {
               for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(2), int(2))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 1, (_injected_loop_counter != 1) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))); _injected_loop_counter ++)
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), false || (false))))))
                  barrier();
                }
               if(_GLF_DEAD(false))
                barrier();
               barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
                barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
              {
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 & 1)); _injected_loop_counter ++)
                {
                 barrier();
                }
              }
            }
          }
         else
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) && true)));
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = _GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, clamp(0, 0, 0)))); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _GLF_IDENTITY(_injected_loop_counter ++, 0 ^ (_injected_loop_counter ++)))
      {
       barrier();
      }
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     barrier();
    }
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       barrier();
      }
     else
      {
      }
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       barrier();
      }
    }
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (0 ^ 1)); _injected_loop_counter ++)
      {
       barrier();
      }
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 else
  {
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(3.2)), bool(false)))), clamp((_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(3.2)), bool(false)))), (_GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(injectionSwitch.y), min(float(injectionSwitch.y), float(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 0.0, abs(0.0), 1.0))).y))), float(_GLF_FUZZED(3.2)), bool(false)))), (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(3.2, (_GLF_IDENTITY(3.2, max(3.2, 3.2))) - 0.0))), bool(false)))))) - length(vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(272.930))))) - 0.0))))), ! (! ((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(3.2)), bool(false)))), clamp((_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(3.2)), bool(false)))), (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(3.2)), bool(false)))), (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(3.2)), bool(false)))))) - length(vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))))))))
    barrier();
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, min(gl_NumWorkGroups.x, gl_NumWorkGroups.x));
 uint workgroup_size = gl_WorkGroupSize.x;
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 0, (_GLF_IDENTITY(_injected_loop_counter != 0, ! (! (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) << 0) != 0)))) || false)); _injected_loop_counter --)
  {
   for(int _injected_loop_counter = _GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, (0) / _GLF_IDENTITY(1, (1) >> 0))), ((_GLF_IDENTITY(0, (0) / _GLF_IDENTITY(1, (1) >> _GLF_IDENTITY(0, (0) | (0)))))) * int(_GLF_ONE(1.0, injectionSwitch.y))) | 0)), _GLF_IDENTITY(0 | ((_GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, (0) / _GLF_IDENTITY(1, (1) >> 0))), ((_GLF_IDENTITY(0, (0) / _GLF_IDENTITY(1, (1) >> 0)))) * int(_GLF_ONE(1.0, injectionSwitch.y))) | 0))), ~ (~ (0 | ((_GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0, (0) / _GLF_IDENTITY(1, (1) >> 0)), (_GLF_IDENTITY(0, (0) / _GLF_IDENTITY(1, (1) >> 0))) | (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) / _GLF_IDENTITY(1, (1) >> 0)), (true ? _GLF_IDENTITY(0, (0) / _GLF_IDENTITY(1, (1) >> 0)) : _GLF_FUZZED(-2080)))))), ((_GLF_IDENTITY(0, (0) / _GLF_IDENTITY(1, (1) >> 0)))) * int(_GLF_ONE(1.0, injectionSwitch.y))) | 0))))))) - _GLF_IDENTITY((_GLF_IDENTITY(0 | 0, clamp(_GLF_IDENTITY(0 | 0, _GLF_IDENTITY((0 | _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, int(ivec2(0, 0)))))), max((0 | 0), (0 | 0))) >> 0), _GLF_IDENTITY(0 | _GLF_IDENTITY(0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(44814) : _GLF_IDENTITY(0, clamp(0, 0, 0)))), (0 | _GLF_IDENTITY(0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(44814) : _GLF_IDENTITY(0, clamp(0, 0, 0))))) >> 0), _GLF_IDENTITY(0 | 0, 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(0 | 0, max(0 | 0, _GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0), (_GLF_IDENTITY(0, (0) | _GLF_IDENTITY(0, (0) >> 0))) + 0) | 0)), 0 + (_GLF_IDENTITY(0 | _GLF_IDENTITY(0, 1 * (_GLF_IDENTITY(0, (0) | 0))), int(_GLF_IDENTITY(_GLF_IDENTITY(int(0 | 0), _GLF_IDENTITY(int(int(int(0 | 0))), (false ? _GLF_FUZZED(_injected_loop_counter) : int(int(int(0 | 0)))))), int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(int(0 | 0), _GLF_IDENTITY(int(int(int(0 | 0))), (false ? _GLF_FUZZED(_injected_loop_counter) : int(int(int(0 | 0)))))), (_GLF_IDENTITY(_GLF_IDENTITY(int(0 | 0), _GLF_IDENTITY(int(int(int(0 | 0))), (false ? _GLF_FUZZED(_injected_loop_counter) : int(int(int(0 | 0)))))), max(_GLF_IDENTITY(int(0 | 0), _GLF_IDENTITY(int(int(int(0 | 0))), (false ? _GLF_FUZZED(_injected_loop_counter) : int(int(int(0 | 0)))))), _GLF_IDENTITY(int(0 | 0), _GLF_IDENTITY(int(int(int(0 | 0))), (false ? _GLF_FUZZED(_injected_loop_counter) : int(int(int(0 | 0))))))))) - 0), 0, 0)))))))))))), (true ? (_GLF_IDENTITY(0 | 0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(0 | 0, _GLF_IDENTITY((0 | _GLF_IDENTITY(0, _GLF_IDENTITY(max(0, _GLF_IDENTITY(0, 0 ^ (0))), (_GLF_IDENTITY(max(0, _GLF_IDENTITY(0, 0 ^ (0))), max(_GLF_IDENTITY(max(0, _GLF_IDENTITY(0, 0 ^ (0))), min(max(0, _GLF_IDENTITY(0, 0 ^ (0))), max(0, _GLF_IDENTITY(0, 0 ^ (0))))), max(0, _GLF_IDENTITY(0, 0 ^ (0)))))) - 0))), max((0 | 0), (0 | 0))) >> 0), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0 | _GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(_injected_loop_counter))))), _GLF_IDENTITY((0 | _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(_GLF_IDENTITY(0, int(ivec2(_GLF_IDENTITY(0, ~ (~ (0))), 1))), 0 ^ (0))))), max((0 | 0), (0 | 0))) >> 0)), max(~ (_GLF_IDENTITY(0 | 0, _GLF_IDENTITY((0 | _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, 0 ^ (0))))), max((0 | 0), (_GLF_IDENTITY(0, (0) | (0)) | 0))) >> 0)), _GLF_IDENTITY(~ (_GLF_IDENTITY(0 | _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(2661)))) + 0), _GLF_IDENTITY((0 | _GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)), max(0, _GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), 0 ^ (0))))), max((0 | 0), (0 | 0))) >> 0)), _GLF_IDENTITY(clamp(~ (_GLF_IDENTITY(0 | 0, _GLF_IDENTITY((0 | _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, 0 ^ (0))))), max((0 | 0), (0 | 0))) >> 0)), ~ (_GLF_IDENTITY(0 | 0, _GLF_IDENTITY((0 | _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, 0 ^ (0))))), max((0 | 0), (0 | 0))) >> 0)), ~ (_GLF_IDENTITY(0 | 0, _GLF_IDENTITY((0 | _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, 0 ^ (0))))), max((0 | 0), (0 | 0))) >> 0))), int(ivec3(clamp(~ (_GLF_IDENTITY(0 | 0, _GLF_IDENTITY((0 | _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, 0 ^ (0))))), max((0 | 0), (0 | 0))) >> 0)), ~ (_GLF_IDENTITY(0 | 0, _GLF_IDENTITY((0 | _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, 0 ^ (0))))), max((0 | 0), (0 | 0))) >> 0)), ~ (_GLF_IDENTITY(0 | 0, _GLF_IDENTITY((0 | _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, 0 ^ (0))))), max((0 | 0), (0 | 0))) >> 0))), 0, 1))))))), (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0 | _GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(_injected_loop_counter))))), _GLF_IDENTITY((0 | _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(_GLF_IDENTITY(0, int(ivec2(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) ^ 0)) << 0)))))), 1))), 0 ^ (0))))), max((0 | 0), (0 | 0))) >> 0)), max(~ (_GLF_IDENTITY(0 | 0, _GLF_IDENTITY((0 | _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, 0 ^ (0))))), max((0 | 0), (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) - 0)) | (0)) | 0))) >> 0)), _GLF_IDENTITY(~ (_GLF_IDENTITY(0 | _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(2661)))) + 0), _GLF_IDENTITY((0 | _GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)), max(0, _GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), 0 ^ (0))))), max((0 | 0), (0 | 0))) >> 0)), _GLF_IDENTITY(clamp(~ (_GLF_IDENTITY(0 | 0, _GLF_IDENTITY(_GLF_IDENTITY((0 | _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, 0 ^ (0))))), max((0 | 0), (0 | 0))), (_GLF_IDENTITY((0 | _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, 0 ^ (0))))), max((0 | 0), (0 | 0)))) | (_GLF_IDENTITY((0 | _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, 0 ^ (0))))), max((0 | 0), (0 | 0))))) >> 0)), ~ (_GLF_IDENTITY(0 | 0, _GLF_IDENTITY((0 | _GLF_IDENTITY(0, _GLF_IDENTITY(max(0, _GLF_IDENTITY(0, 0 ^ (0))), (max(0, _GLF_IDENTITY(0, 0 ^ (0)))) / 1))), max((0 | 0), (0 | 0))) >> _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(_injected_loop_counter))))), ~ (_GLF_IDENTITY(0 | 0, _GLF_IDENTITY((0 | _GLF_IDENTITY(_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, 0 ^ (0)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, 0 ^ (0))))), max(~ (_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, 0 ^ (0))))), ~ (_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, 0 ^ (0)))))))))), max((_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, int(ivec3(0, 1, 1))), 0)))) | _GLF_IDENTITY(0, (0) | 0)), (0 | 0))) >> 0))), int(ivec3(_GLF_IDENTITY(clamp(~ (_GLF_IDENTITY(0 | 0, _GLF_IDENTITY((0 | _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, 0 ^ (0))))), max((0 | 0), (0 | 0))) >> 0)), ~ (_GLF_IDENTITY(0 | 0, _GLF_IDENTITY((0 | _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, 0 ^ (0))))), max((0 | 0), (0 | 0))) >> 0)), ~ (_GLF_IDENTITY(0 | 0, _GLF_IDENTITY((0 | _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, 0 ^ (0))))), max((0 | 0), (0 | 0))) >> 0))), clamp(clamp(~ (_GLF_IDENTITY(0 | 0, _GLF_IDENTITY((0 | _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, 0 ^ (0))))), max((0 | 0), (0 | 0))) >> 0)), ~ (_GLF_IDENTITY(0 | 0, _GLF_IDENTITY((0 | _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, 0 ^ (0))))), max((0 | 0), (0 | 0))) >> 0)), ~ (_GLF_IDENTITY(0 | 0, _GLF_IDENTITY((0 | _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, 0 ^ (0))))), max((0 | 0), (0 | 0))) >> 0))), clamp(~ (_GLF_IDENTITY(0 | 0, _GLF_IDENTITY((0 | _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, 0 ^ (0))))), max((0 | 0), (0 | 0))) >> 0)), ~ (_GLF_IDENTITY(0 | 0, _GLF_IDENTITY((0 | _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, 0 ^ (0))))), max((0 | 0), (0 | 0))) >> 0)), ~ (_GLF_IDENTITY(0 | 0, _GLF_IDENTITY((0 | _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, 0 ^ (0))))), max((0 | 0), (0 | 0))) >> 0))), clamp(~ (_GLF_IDENTITY(0 | 0, _GLF_IDENTITY((0 | _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, 0 ^ (0))))), max((0 | 0), (0 | 0))) >> 0)), ~ (_GLF_IDENTITY(0 | 0, _GLF_IDENTITY((0 | _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, 0 ^ (0))))), max((0 | 0), (0 | 0))) >> 0)), ~ (_GLF_IDENTITY(0 | 0, _GLF_IDENTITY((0 | _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, 0 ^ (0))))), max((0 | 0), (0 | 0))) >> 0))))), 0, 1)))))))) / (1 ^ 0))), 0 | _GLF_IDENTITY(0, _GLF_IDENTITY(int(int(_GLF_IDENTITY(0, (0) >> 0))), ~ (~ (_GLF_IDENTITY(int(int(_GLF_IDENTITY(0, (0) >> 0))), min(int(int(_GLF_IDENTITY(0, (0) >> 0))), int(_GLF_IDENTITY(int(_GLF_IDENTITY(0, (0) >> 0)), min(int(_GLF_IDENTITY(0, (0) >> 0)), _GLF_IDENTITY(int(_GLF_IDENTITY(0, (0) >> 0)), ~ (~ (int(_GLF_IDENTITY(0, (0) >> 0)))))))))))))), _GLF_IDENTITY(0 | 0, 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY(int(int(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), (_GLF_IDENTITY(0, (0) | (0))) + 0))), _GLF_IDENTITY((int(int(_GLF_IDENTITY(0, (0) | (0))))) / ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), min(_GLF_IDENTITY(int(0), int(0)), _GLF_IDENTITY(int(0), int(0))))) >> _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(97968)))) >> 0)))), (true ? (int(int(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 | (0))) / 1)) | (0))))) / ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, (0) + 0)))) : _GLF_FUZZED(atomicAdd(_injected_loop_counter, -85440)))))) | 0, 0 + (_GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(clamp((_injected_loop_counter * _injected_loop_counter), (69540 | -37601), _injected_loop_counter)) : 0)) | 0, int(_GLF_IDENTITY(int(0 | 0), _GLF_IDENTITY(int(int(int(_GLF_IDENTITY(0 | 0, max(_GLF_IDENTITY(0 | 0, (0 | 0) | (0 | 0)), 0 | 0))))), (false ? _GLF_FUZZED(_injected_loop_counter) : int(int(int(0 | 0))))))))))))))) : _GLF_FUZZED(atomicExchange(_injected_loop_counter, -92123))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(65.47)), bool(false))) < injectionSwitch.y)), false)))))))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))) && true)))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(mat4(injectionSwitch[0], 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0, 1.0, sin(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, log(1.0), 1.0, 1.0, 0.0))), injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
            barrier();
          }
         else
          {
          }
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, false || (_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))) && true))))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)))), injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(max(injectionSwitch, round(7.1))) : injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(max(injectionSwitch, _GLF_IDENTITY(round(7.1), 1.0 * (round(7.1))))) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(max(injectionSwitch, round(7.1))) : injectionSwitch)))).y))))
            {
             if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), bool(bvec3(_GLF_IDENTITY(bool(bool(false)), false || _GLF_IDENTITY((bool(bool(false))), ! (! (_GLF_IDENTITY((bool(bool(false))), bool(bvec2(_GLF_IDENTITY((bool(bool(false))), true && ((bool(bool(false))))), false))))))), _GLF_IDENTITY(true, false || (true)), false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(false)), bool(bvec3(_GLF_IDENTITY(bool(bool(false)), false || _GLF_IDENTITY((bool(bool(false))), ! (! (_GLF_IDENTITY((bool(bool(false))), bool(bvec2(_GLF_IDENTITY((bool(bool(false))), true && ((bool(bool(false))))), false))))))), _GLF_IDENTITY(true, false || (true)), false)))), bool(bool(! (_GLF_IDENTITY(bool(bool(false)), bool(bvec3(_GLF_IDENTITY(bool(bool(false)), false || _GLF_IDENTITY((bool(bool(false))), ! (! (_GLF_IDENTITY((bool(bool(false))), bool(bvec2(_GLF_IDENTITY((bool(bool(false))), true && ((bool(bool(false))))), false))))))), _GLF_IDENTITY(true, false || (true)), false)))))))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), (bool(bool(! (injectionSwitch.x > injectionSwitch.y)))) && true))), bool(bvec3(! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (bool(bool(! (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY(! (bool(bool(! (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(! (bool(bool(! (injectionSwitch.x > injectionSwitch.y)))), false, false)))))))) && true))), false, false)))))))))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ((! (injectionSwitch.x > injectionSwitch.y))) && true)))))) || false))))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) || false), true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) || false), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, _GLF_IDENTITY(bool(bool((false) || false)), ! (! (bool(bool((false) || false))))))), true, false)))), true)))))))
            barrier();
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), ! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)) && true))))))))), false || ((! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)) && true)))))))))))))
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
              {
               for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != (1 | _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) >> (((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))) ^ 1)))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != (1 | 1))))); _injected_loop_counter ++)
                {
                 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
                  barrier();
                 for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                  {
                   barrier();
                  }
                 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, true && (false)), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, true && (false)), true))))))))
                  {
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     barrier();
                    }
                   else
                    {
                    }
                  }
                }
              }
             if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
              }
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         if(_GLF_DEAD(false))
          {
           do
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   barrier();
                  }
                 else
                  {
                  }
                }
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 barrier();
                }
               else
                {
                }
              }
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY((_GLF_IDENTITY(0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), ~ (~ (int(3))))), ~ (~ (0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), ~ (_GLF_IDENTITY(~ (int(3)), ~ (~ (~ (int(3)))))))))))), _GLF_IDENTITY(int(ivec4((_GLF_IDENTITY(0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), ~ (~ (int(3))))), ~ (~ (0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), ~ (_GLF_IDENTITY(~ (int(3)), ~ (~ (~ (int(3)))))))))))), (0 | 0), 1, 1)), (int(ivec4((_GLF_IDENTITY(0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), ~ (~ (int(3))))), ~ (~ (0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), ~ (_GLF_IDENTITY(~ (int(3)), ~ (~ (~ (int(3)))))))))))), (0 | 0), 1, 1))) >> 0))); _injected_loop_counter --)
            {
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
           for(int _injected_loop_counter = (1 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), _GLF_IDENTITY(true, (true) || false) && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), ! (! (! (false))))) && true))), bool(bool(false))))) || false))))
                barrier();
               barrier();
              }
            }
          }
         else
          {
          }
        }
      }
     else
      {
      }
    }
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, 0u | (_GLF_IDENTITY(gl_WorkGroupID.x, clamp(_GLF_IDENTITY(gl_WorkGroupID.x, min(gl_WorkGroupID.x, gl_WorkGroupID.x)), gl_WorkGroupID.x, gl_WorkGroupID.x))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     barrier();
    }
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size))) | (workgroup_size)) * workgroup_id;
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(true, true && (true)) ? subgroup_id : _GLF_FUZZED(subgroup_id))) * subgroup_size, (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(true, true && (true)) ? subgroup_id : _GLF_FUZZED(subgroup_id))) * subgroup_size) * 1u) + _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) | (subgroup_local_id), ~ (~ (_GLF_IDENTITY((subgroup_local_id) | (subgroup_local_id), max((subgroup_local_id) | (subgroup_local_id), (subgroup_local_id) | (subgroup_local_id)))))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, false || (true)), false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(bool(bvec3(false, false, false)), _GLF_IDENTITY(bool(bvec3(bool(bvec3(false, false, false)), true, false)), true && (_GLF_IDENTITY(bool(bvec3(bool(bvec3(false, false, false)), true, false)), ! (! (_GLF_IDENTITY(bool(bvec3(bool(bvec3(false, false, false)), true, false)), false || (_GLF_IDENTITY(bool(bvec3(bool(bvec3(false, false, false)), true, false)), (bool(bvec3(bool(bvec3(false, false, false)), true, false))) || false))))))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(97071) : 1), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(97071) : 1)) / ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)))))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))), min((subgroup_local_id + 1), (subgroup_local_id + 1))) % subgroup_size);
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y))))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
      }
    }
  }
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(1), (uint(1)) - 0u), 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y))))
    {
     barrier();
    }
   else
    {
    }
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bvec4((false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))), false, true)))))), ! (! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))))))))), (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))) && (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bvec4((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))))), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false)))))), (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ((false)) && true)), true && (! (_GLF_IDENTITY((false), _GLF_IDENTITY(((false)) && true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(((false)) && true, ! (! (((false)) && true)))), _GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(((false)) && true, ! (! (((false)) && true)))), false, true)), (bool(bvec3(bool(_GLF_IDENTITY(((false)) && true, ! (! (((false)) && true)))), false, true))) && true))), bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(((false)) && true, ! (! (((false)) && true)))), _GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(((false)) && true, ! (! (((false)) && true)))), false, true)), (bool(bvec3(bool(_GLF_IDENTITY(((false)) && true, ! (! (((false)) && true)))), false, true))) && true))), false, true))))))))))) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bool(true)))), bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bool(true)))), false || (! (_GLF_IDENTITY(true, bool(bool(true))))))))))))))), ((_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ((false)) && true))))) && true))))) && true)))))), (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
  }
 uint read = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) - 0), _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) << 0));
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         do
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
            }
           else
            {
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), vec2(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), 1.0, tan(0.0), 1.0, 0.0))).x > injectionSwitch.y))));
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))) || false)))))
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
            {
             barrier();
            }
          }
         barrier();
        }
      }
     else
      {
      }
    }
  }
 else
  {
  }
 do
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != _GLF_IDENTITY((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, clamp(3, 3, 3))))), ~ (_GLF_IDENTITY(~ ((1 << _GLF_IDENTITY(int(3), int(3)))), 1 * (_GLF_IDENTITY(~ ((1 << _GLF_IDENTITY(int(3), int(3)))), clamp(~ ((1 << _GLF_IDENTITY(int(3), int(3)))), ~ ((1 << _GLF_IDENTITY(int(3), int(3)))), ~ ((1 << _GLF_IDENTITY(int(3), int(3)))))))))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(_GLF_IDENTITY(int(3), clamp(_GLF_IDENTITY(int(3), max(int(3), int(3))), int(3), int(3))), _GLF_IDENTITY(max(int(3), int(3)), min(max(int(3), int(3)), max(int(3), int(3))))))), ~ (_GLF_IDENTITY(~ (((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(3)) << 0), int(3))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), max(int(3), int(3)))))), ~ (~ (~ (((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(_GLF_IDENTITY(3, int(ivec3(_GLF_IDENTITY(3, (3) | 0), 0, 1)))), clamp(int(_GLF_IDENTITY(3, int(ivec3(_GLF_IDENTITY(3, (3) | 0), 0, 1)))), int(_GLF_IDENTITY(3, int(ivec3(_GLF_IDENTITY(3, (3) | 0), 0, 1)))), int(_GLF_IDENTITY(3, int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(3, min(3, 3)), (3) | 0), 0, 1)))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3))), _GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(3)) | (int(3))), max(int(3), int(3))))))))))), ! (! (_injected_loop_counter != _GLF_IDENTITY((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, clamp(3, 3, 3))))), ~ (_GLF_IDENTITY(~ ((1 << _GLF_IDENTITY(int(3), int(3)))), 1 * (_GLF_IDENTITY(~ ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), int(3)), (1 << _GLF_IDENTITY(int(3), int(3))) | (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), int(3)), (1 << _GLF_IDENTITY(int(3), int(3))) << 0))))), clamp(~ ((1 << _GLF_IDENTITY(int(3), int(3)))), ~ ((1 << _GLF_IDENTITY(int(3), int(3)))), ~ ((1 << _GLF_IDENTITY(int(3), int(3)))))))))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(_GLF_IDENTITY(int(3), clamp(_GLF_IDENTITY(int(3), max(int(3), int(3))), int(3), int(3))), _GLF_IDENTITY(max(int(3), int(3)), min(max(int(3), int(3)), max(int(3), int(3))))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(3)) << 0), int(3))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), max(int(3), int(3)))))), (0 << _GLF_IDENTITY(int(1), int(1))) ^ (_GLF_IDENTITY(~ (((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(3)) << 0), int(3))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), max(int(3), int(3)))))), int(ivec4(~ (((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(3)) << 0), int(3))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), max(int(3), int(3)))))), 0, 1, 0))))), ~ (~ (~ (((_GLF_IDENTITY(1, min(1, 1)) << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(_GLF_IDENTITY(3, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(3, (3) | 0), 0, 1)), clamp(_GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(3, (3) | 0), 0, 1)), (_GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(3, (3) | 0), 0, 1)), 0 + (int(ivec3(_GLF_IDENTITY(3, (3) | 0), 0, 1))))) << 0), int(ivec3(_GLF_IDENTITY(3, (3) | 0), 0, 1)), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(3, (3) | 0), 0, 1)), ~ (~ (int(ivec3(_GLF_IDENTITY(3, (3) | 0), 0, 1))))))))), clamp(int(_GLF_IDENTITY(3, int(ivec3(_GLF_IDENTITY(3, (3) | 0), 0, 1)))), int(_GLF_IDENTITY(3, int(ivec3(_GLF_IDENTITY(3, (3) | 0), 0, 1)))), int(_GLF_IDENTITY(3, int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(3, min(3, 3)), (3) | 0), 0, 1)))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3))), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(3, (3) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))), (int(3)) | (int(3))), max(int(3), int(3))))))))))))))); _injected_loop_counter ++)
      {
       barrier();
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), bool(bool(bool(bvec4(false, false, true, true)))))))))))
  barrier();
 if(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, (subgroup_size) >> (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))))
  {
   for(int _injected_loop_counter = ((0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(int(3), int(_GLF_ONE(1.0, injectionSwitch.y)), ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6)))), ivec3(ivec4(_GLF_IDENTITY(ivec3(int(3), int(_GLF_ONE(1.0, injectionSwitch.y)), ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6)))), min(ivec3(int(3), int(_GLF_ONE(1.0, injectionSwitch.y)), ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6)))), ivec3(int(3), int(_GLF_ONE(1.0, injectionSwitch.y)), ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6)))))), 0)))), (false ? _GLF_FUZZED(-55816) : int(_GLF_IDENTITY(ivec3(int(3), int(_GLF_ONE(1.0, injectionSwitch.y)), ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6)))), ivec3(ivec4(_GLF_IDENTITY(ivec3(int(3), int(_GLF_ONE(1.0, injectionSwitch.y)), ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6)))), min(ivec3(int(3), int(_GLF_ONE(1.0, injectionSwitch.y)), ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6)))), ivec3(int(3), int(_GLF_ONE(1.0, injectionSwitch.y)), ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6)))))), 0))))))))) >> _GLF_IDENTITY(int(5), int(5))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < 1, false || (_GLF_IDENTITY(_injected_loop_counter, ~ (~ (_GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter)))))) < 1))); _injected_loop_counter ++)
    {
     for(int _injected_loop_counter = _GLF_IDENTITY(0, (0) / ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) | (int(3)))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 & 1)); _GLF_IDENTITY(_injected_loop_counter ++, (true ? _injected_loop_counter ++ : _GLF_FUZZED(findMSB(workgroup_base)))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), (_GLF_DEAD(false)) && true))
        {
         for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) || false)); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) && true)))
          {
           barrier();
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, true, true))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))).y))))
              barrier();
            }
           else
            {
            }
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          barrier();
        }
      }
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(6), int(6)))); _injected_loop_counter --)
    {
     atomicStore(checker[virtual_gid], read, 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, (4) + 0), 4)), (true ? _GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, _GLF_IDENTITY((4) + 0, max(_GLF_IDENTITY((4) + 0, ((4) + 0) << 0), _GLF_IDENTITY((4) + 0, ~ (~ (_GLF_IDENTITY((4) + 0, max((4) + 0, (4) + 0)))))))), 4)) : _GLF_FUZZED(_injected_loop_counter))), (_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, (4) + 0), 4))) * 1), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, (4) + 0), 4)), clamp(_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, (4) + 0), 4)), _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, (4) + 0), 4)), clamp(_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, (4) + 0), 4)), _GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, (4) + 0), 4)), _GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, (4) + 0), 4)))), _GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, (4) + 0), 4)))), (_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, (4) + 0), 4))) / _GLF_IDENTITY(1, (1) | (1))), (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(4, int(ivec3(4, 0, 1))), max(_GLF_IDENTITY(4, int(ivec3(4, 0, 1))), _GLF_IDENTITY(4, int(ivec3(4, 0, 1)))))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(4, int(ivec3(4, 0, 1))), max(_GLF_IDENTITY(4, int(ivec3(4, 0, 1))), _GLF_IDENTITY(4, int(ivec3(4, 0, 1)))))), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((_GLF_IDENTITY(_GLF_IDENTITY(4, int(ivec3(4, 0, 1))), max(_GLF_IDENTITY(4, int(ivec3(4, 0, 1))), _GLF_IDENTITY(4, int(ivec3(4, 0, 1)))))))), 1), (false ? _GLF_FUZZED(ivec2(55814, 65400)) : ivec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(4, int(ivec3(4, 0, 1))), max(_GLF_IDENTITY(4, int(ivec3(4, 0, 1))), _GLF_IDENTITY(4, int(ivec3(4, 0, 1)))))), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((_GLF_IDENTITY(_GLF_IDENTITY(4, int(ivec3(4, 0, 1))), max(_GLF_IDENTITY(4, int(ivec3(4, 0, 1))), _GLF_IDENTITY(4, int(ivec3(4, 0, 1)))))))), 1)))), min(int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(4, int(ivec3(4, 0, 1))), max(_GLF_IDENTITY(4, int(ivec3(4, 0, 1))), _GLF_IDENTITY(4, int(ivec3(4, 0, 1)))))), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((_GLF_IDENTITY(_GLF_IDENTITY(4, int(ivec3(4, 0, 1))), max(_GLF_IDENTITY(4, int(ivec3(4, 0, 1))), _GLF_IDENTITY(4, int(ivec3(4, 0, 1)))))))), 1), (false ? _GLF_FUZZED(ivec2(55814, 65400)) : ivec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(4, int(ivec3(4, 0, 1))), max(_GLF_IDENTITY(4, int(ivec3(4, 0, 1))), _GLF_IDENTITY(4, int(ivec3(4, 0, 1)))))), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((_GLF_IDENTITY(_GLF_IDENTITY(4, int(ivec3(4, 0, 1))), max(_GLF_IDENTITY(4, int(ivec3(4, 0, 1))), _GLF_IDENTITY(4, int(ivec3(4, 0, 1)))))))), 1)))), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(4, int(ivec3(4, 0, 1))), max(_GLF_IDENTITY(4, int(ivec3(4, 0, 1))), _GLF_IDENTITY(4, int(ivec3(4, 0, 1)))))), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((_GLF_IDENTITY(_GLF_IDENTITY(4, int(ivec3(4, 0, 1))), max(_GLF_IDENTITY(4, int(ivec3(4, 0, 1))), _GLF_IDENTITY(4, int(ivec3(4, 0, 1)))))))), 1), (false ? _GLF_FUZZED(ivec2(55814, 65400)) : ivec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(4, int(ivec3(4, 0, 1))), max(_GLF_IDENTITY(4, int(ivec3(4, 0, 1))), _GLF_IDENTITY(4, int(ivec3(4, 0, 1)))))), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((_GLF_IDENTITY(_GLF_IDENTITY(4, int(ivec3(4, 0, 1))), max(_GLF_IDENTITY(4, int(ivec3(4, 0, 1))), _GLF_IDENTITY(4, int(ivec3(4, 0, 1)))))))), 1)))))))), clamp(4, _GLF_IDENTITY(_GLF_IDENTITY(4, 0 + (4)), (4) + 0), 4))) * 1)) + _GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(0, 0, 0))) | (0))));
    }
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(false);
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             barrier();
            }
          }
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true))
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
          }
        }
       else
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < injectionSwitch.y)))))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((_GLF_IDENTITY(injectionSwitch, abs(vec2(0.0, 0.0)) + (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), (mat2(_GLF_ONE(1.0, injectionSwitch.y))) / mat2(1.0, 1.0, 1.0, 1.0))).y), true, false))))))))
              barrier();
            }
           barrier();
          }
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          {
           do
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), clamp(int(1), int(1), int(1))), int(1))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                  {
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       barrier();
                      }
                     else
                      {
                      }
                    }
                  }
                }
              }
             else
              {
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
              {
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                {
                 barrier();
                }
              }
             if(_GLF_DEAD(false))
              barrier();
            }
           while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(false, true && (false))))), bool(bvec2(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])))).x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(false, true && (false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))));
           barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true, ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true) && true))))
            {
            }
           else
            {
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).x > injectionSwitch.y)), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)))), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))))))) || false)), bool(bvec3(_GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)))), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))))))) || false)), ! (! (true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)))), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))))))) || false))))), false, false))))), ! (! ((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-6.9, -3066.0710)))).x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)))), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))))))) || false))))))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).x > injectionSwitch.y)), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)))), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))))))) || false)), bool(bvec3(_GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)))), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))))))) || false)), ! (! (true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)))), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))))))) || false))))), false, false)))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).x > injectionSwitch.y)), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)))), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))))))) || false)), bool(bvec3(_GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3(injectionSwitch.x, sqrt(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0)), max(_GLF_IDENTITY(float(mat3(injectionSwitch.x, sqrt(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0)), (false ? _GLF_FUZZED(-9437.0178) : float(mat3(injectionSwitch.x, sqrt(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0)))), float(mat3(injectionSwitch.x, sqrt(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0))))) > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)))), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))))))) || false)), ! (! (true && (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)))), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))))))) || false))))), false, false))))))), ! (! ((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) / vec2(1.0, 1.0))), injectionSwitch)).x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-6.9, -3066.0710)))).x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)))), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))))))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-6.9, -3066.0710)))).x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)))), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))))))) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-6.9, -3066.0710)))).x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)))), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))))))) || false), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-6.9, -3066.0710)))).x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, 1.0, 1.0, 1.0))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, true && (false)), false)))), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[0], float(float(injectionSwitch[0]))))), injectionSwitch[1])).y, 1.0 * (injectionSwitch.y))))))))))) || false))))))) && _GLF_IDENTITY(true, ! (! (true))))))))))))))))))))
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))))
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), false || (bool(bvec3(_GLF_IDENTITY(false, (false) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))
                  {
                   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) || false))))
                    {
                     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false))))))
                      {
                      }
                     else
                      {
                       barrier();
                      }
                    }
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     barrier();
                    }
                   else
                    {
                    }
                  }
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false))))))
                    barrier();
                  }
                 else
                  {
                  }
                 barrier();
                }
               else
                {
                }
              }
            }
          }
        }
       else
        {
        }
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-16.51)), vec2(_GLF_FUZZED(7867.0731), _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, 0 ^ (1))], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(1, (1) << 0), 1, 1, int(_GLF_ONE(1.0, injectionSwitch.y)))), (int(ivec4(_GLF_IDENTITY(1, (1) << 0), 1, 1, int(_GLF_ONE(1.0, injectionSwitch.y))))) | 0))]))), bvec2(false, true))).y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))))))))
        {
         do
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               barrier();
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 1.0, abs(0.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), (dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))) + 0.0)))), mix(vec2((vec2(mat4x2(injectionSwitch, 1.0, abs(0.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), (dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))) + 0.0)))))[0], (vec2(mat4x2(injectionSwitch, 1.0, abs(0.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), (dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))) + 0.0)))))[1]), vec2(_GLF_FUZZED(2.7), _GLF_FUZZED(vec4(901.326, 4.5, 243.528, 213.451).y)), bvec2(false, false)))).x > injectionSwitch.y))))
                  barrier();
                }
              }
             else
              {
              }
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false, true, false)), bool(bool(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false, _GLF_IDENTITY(true, bool(bvec4(true, true, false, false))), false)))))))
              barrier();
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (false))));
        }
       else
        {
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
        }
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(false, true && (false)))), (false) && true)))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
          barrier();
         barrier();
        }
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     do
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (false)) && true)), ! (! (! (_GLF_IDENTITY(! (false), (! (false)) && true))))))))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, false || ((false) && true))), true, true, false))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y) + 0.0)))))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               barrier();
              }
             else
              {
              }
            }
          }
        }
       else
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           atomicStore(checker[virtual_gid], read, 4, 64, 4);
          }
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false)))))));
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 1.0))))).x > injectionSwitch.y))))
      {
      }
     else
      {
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
    barrier();
   for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(6), int(6))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(refract(-19.40, 517.307, log(422.496))) : injectionSwitch.y))))); _GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) << 0))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(ivec2(2, 0)), (int(ivec2(2, 0))) << 0), max(_GLF_IDENTITY(_GLF_IDENTITY(int(ivec2(2, 0)), _GLF_IDENTITY((int(ivec2(2, 0))) << 0, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2((int(ivec2(2, 0))) << 0, 1), (ivec2((int(ivec2(2, 0))) << 0, 1)) << ivec2(0, 0))), max(int(_GLF_IDENTITY(ivec2((int(ivec2(2, 0))) << 0, 1), (ivec2((int(ivec2(2, 0))) << 0, 1)) << ivec2(0, 0))), int(_GLF_IDENTITY(ivec2((int(ivec2(2, 0))) << 0, 1), (ivec2((int(ivec2(2, 0))) << 0, 1)) << ivec2(0, 0))))))), _GLF_IDENTITY(0 ^ (_GLF_IDENTITY(int(ivec2(2, 0)), (int(ivec2(2, 0))) << 0)), (false ? _GLF_FUZZED(-49796) : 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(int(ivec2(2, 0)), (int(ivec2(2, 0))) << 0), int(_GLF_IDENTITY(int(_GLF_IDENTITY(int(ivec2(2, 0)), (int(ivec2(2, 0))) << 0)), (int(_GLF_IDENTITY(int(ivec2(2, 0)), (int(ivec2(2, 0))) << 0))) ^ (0 << _GLF_IDENTITY(int(7), int(7)))))))))), _GLF_IDENTITY(_GLF_IDENTITY(int(ivec2(2, 0)), (int(ivec2(2, 0))) << 0), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(int(ivec2(2, 0)), (int(ivec2(2, 0))) << 0), (_GLF_IDENTITY(int(ivec2(2, 0)), (int(ivec2(2, 0))) << 0)) / (1 & 1)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(_injected_loop_counter))), 0)), (int(ivec2(2, 0))) << 0), max(_GLF_IDENTITY(_GLF_IDENTITY(int(ivec2(2, 0)), (int(ivec2(2, 0))) << 0), 0 ^ (_GLF_IDENTITY(int(ivec2(2, 0)), (int(ivec2(2, 0))) << 0))), _GLF_IDENTITY(_GLF_IDENTITY(int(ivec2(2, 0)), (int(ivec2(2, 0))) << 0), 0 ^ (_GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(2, max(2, 2)), 0)), (int(ivec2(2, 0))) << 0))))), max(_GLF_IDENTITY(_GLF_IDENTITY(int(ivec2(2, 0)), (int(ivec2(2, 0))) << 0), max(_GLF_IDENTITY(_GLF_IDENTITY(int(ivec2(2, 0)), (_GLF_IDENTITY(int(ivec2(2, 0)), (int(ivec2(2, 0))) << 0)) << 0), _GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) >> 0), _GLF_IDENTITY(0, ~ (~ (0))))) ^ (_GLF_IDENTITY(int(ivec2(2, 0)), (int(ivec2(2, 0))) << 0))), _GLF_IDENTITY(_GLF_IDENTITY(int(ivec2(2, 0)), (int(ivec2(2, 0))) << 0), 0 ^ (_GLF_IDENTITY(int(ivec2(2, 0)), (int(ivec2(2, 0))) << 0))))), _GLF_IDENTITY(_GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(2, (2) | 0), 0)), (int(ivec2(2, 0))) << 0), max(_GLF_IDENTITY(_GLF_IDENTITY(int(ivec2(2, 0)), (int(ivec2(2, 0))) << 0), 0 ^ (_GLF_IDENTITY(int(ivec2(2, 0)), (int(ivec2(2, 0))) << 0))), _GLF_IDENTITY(_GLF_IDENTITY(int(ivec2(2, 0)), (int(ivec2(2, 0))) << 0), 0 ^ (_GLF_IDENTITY(int(ivec2(2, 0)), (int(ivec2(2, 0))) << 0)))))))) / 1))))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (false ? _GLF_FUZZED(_GLF_IDENTITY(-59872, (true ? -59872 : _GLF_FUZZED((_injected_loop_counter , _injected_loop_counter))))) : _GLF_IDENTITY(int(2), int(int(int(2)))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter --, (true ? _injected_loop_counter -- : _GLF_IDENTITY(_GLF_FUZZED(atomicAdd(_injected_loop_counter, 75521)), (_GLF_FUZZED(atomicAdd(_injected_loop_counter, 75521))) * 1))), 1 * (_injected_loop_counter --)))
      {
       do
        {
         for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (int(5)) | (int(5))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(8), int(8)))); _injected_loop_counter --)
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               barrier();
              }
            }
           else
            {
            }
          }
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           subgroupAll(true);
          }
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - sin(0.0)))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - sin(0.0))))), bool(bool(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - sin(0.0))))))))))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false)))))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false)))))), false || (! (_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))))))))))))), true && (false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), ! (! (_GLF_DEAD(false))))))))))))
          {
           if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), ! (! (bool(bvec4(false, true, false, true)))))), (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((false) || false), true && _GLF_IDENTITY((_GLF_IDENTITY(bool((false) || false), ! (! (bool((false) || false))))), true && ((_GLF_IDENTITY(bool((false) || false), ! (! (bool((false) || false))))))))), bool(bvec2(bool(_GLF_IDENTITY(bool((false) || false), true && (_GLF_IDENTITY(bool((false) || false), ! (! (bool((false) || false))))))), true))))), _GLF_IDENTITY(_GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, false))))))), (true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, bool(bool((false) || false)))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, _GLF_IDENTITY(false, bool(bool(false)))))))))), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, bool(bool((false) || false)))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, _GLF_IDENTITY(false, bool(bool(false)))))))))))), ! (! (bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, bool(bool((false) || false)))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, _GLF_IDENTITY(false, bool(bool(false))))))))))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, false))))))), (true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, bool(bool((false) || false)))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, _GLF_IDENTITY(false, bool(bool(false)))))))))), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, bool(bool((false) || false)))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, _GLF_IDENTITY(false, bool(bool(false)))))))))))), ! (! (bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, bool(bool((false) || false)))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, _GLF_IDENTITY(false, bool(bool(false))))))))))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, false))))))), (true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, bool(bool((false) || false)))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, _GLF_IDENTITY(false, bool(bool(false)))))))))), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, bool(bool((false) || false)))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, _GLF_IDENTITY(false, bool(bool(false)))))))))))), ! (! (bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, bool(bool((false) || false)))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, _GLF_IDENTITY(false, bool(bool(false))))))))))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))))));
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), true, true))))
        barrier();
      }
    }
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (false))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 do
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) + 0)), clamp(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) + 0)), _GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) + 0)), clamp(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) + 0)), _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) + 0)), _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) + 0)))), _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) + 0))))), ~ (~ ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) + 0)), clamp(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) + 0)), _GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) + 0)), clamp(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) + 0)), _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) + 0)), _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) + 0)))), _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) + 0)))))))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) | 0)))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), false), bvec3(bvec3(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), (bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) && true))))), false))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, true, true)))))))
    barrier();
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
