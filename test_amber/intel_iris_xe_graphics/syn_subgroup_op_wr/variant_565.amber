#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, sqrt(1.0) * (injectionSwitch.x)) > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), false || (bool(injectionSwitch.x > injectionSwitch.y)))))))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         barrier();
        }
       else
        {
        }
      }
     else
      {
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = _GLF_IDENTITY(0, 0 ^ (0)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch)).y) + _GLF_ZERO(0.0, injectionSwitch.x))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_IDENTITY(_GLF_FUZZED(mod(-3786.2945, 9.4)), (false ? _GLF_FUZZED(length(vec2(-1.1, 3.0))) : _GLF_FUZZED(mod(-3786.2945, 9.4)))) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))).x)))) > injectionSwitch.y, true && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))))))), _GLF_IDENTITY(false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))) && true), false, false)), ! (! (bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))) && true), false, false)))))), true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch)).y), ((injectionSwitch.x > injectionSwitch.y)) || false)))))), (false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), _GLF_IDENTITY(true, bool(bvec4(true, true, false, false))) && (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), (bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))) || false))))))) || false)))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY(min(gl_WorkGroupID.x, gl_WorkGroupID.x), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(min(gl_WorkGroupID.x, gl_WorkGroupID.x), ~ _GLF_IDENTITY((~ (min(gl_WorkGroupID.x, gl_WorkGroupID.x))), ~ (~ ((~ (min(gl_WorkGroupID.x, gl_WorkGroupID.x)))))))), (~ (_GLF_IDENTITY(min(gl_WorkGroupID.x, gl_WorkGroupID.x), ~ _GLF_IDENTITY((~ (min(gl_WorkGroupID.x, gl_WorkGroupID.x))), (false ? _GLF_FUZZED(uvec4(185392u, 110424u, 166432u, 143232u).r) : (~ (min(gl_WorkGroupID.x, gl_WorkGroupID.x)))))))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))));
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  {
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-1.0) : injectionSwitch.x)) < injectionSwitch.y)), false, false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), ! (! (true && ((injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(true && _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), true && (bool(injectionSwitch.x > injectionSwitch.y)))))), ((injectionSwitch.x > injectionSwitch.y)) && true)), ! (! ((_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), mix(vec2(_GLF_FUZZED(-8956.6450), _GLF_FUZZED(-9867.6941)), vec2((mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))[0], (mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))[1]), bvec2(true, true)))).y), ((injectionSwitch.x > injectionSwitch.y)) && true))))), (true && _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false || (true && ((injectionSwitch.x > injectionSwitch.y)))))) ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(workgroup_base, clamp(workgroup_base, _GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED((subgroup_size & subgroup_local_id)))), _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base))) * 1u, 1u * ((_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base))) * 1u))))) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (144797u & 0u) ^ (subgroup_id))), (~ (subgroup_id)) | (~ (subgroup_id))))), min(_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 1u, 0u)))) / 1u)) - 0u))) * subgroup_size, (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(4.6), _GLF_FUZZED(98.21)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) / exp(vec2(0.0, 0.0))).y)), ! (! (_GLF_IDENTITY(true && _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), false, false, false))))))))) && true)), ! (! ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))), (true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false || (true && ((injectionSwitch.x > injectionSwitch.y)))))) ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(workgroup_base, clamp(workgroup_base, _GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED((subgroup_size & subgroup_local_id)))), _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)), (0u >> _GLF_IDENTITY(uint(3u), uint(3u))), 1u), (false ? _GLF_FUZZED(uvec3(58667u, 194541u, 127851u)) : uvec3(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)), (0u >> _GLF_IDENTITY(uint(3u), uint(3u))), 1u)))), min(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)), (0u >> _GLF_IDENTITY(uint(3u), uint(3u))), 1u), (false ? _GLF_FUZZED(uvec3(58667u, 194541u, 127851u)) : uvec3(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)), (0u >> _GLF_IDENTITY(uint(3u), uint(3u))), 1u)))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)), (0u >> _GLF_IDENTITY(uint(3u), uint(3u))), 1u), (false ? _GLF_FUZZED(uvec3(58667u, 194541u, 127851u)) : uvec3(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)), (0u >> _GLF_IDENTITY(uint(3u), uint(3u))), 1u)))))))) * 1u))) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (144797u & 0u) ^ (subgroup_id))), (~ (subgroup_id)) | (~ _GLF_IDENTITY((subgroup_id), clamp((subgroup_id), (subgroup_id), (subgroup_id))))))), min(_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u), _GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u))) * subgroup_size) | (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))), injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(true && _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false)))), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) && true, false || (((injectionSwitch.x > injectionSwitch.y)) && true)))), ! (! ((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) && true))))), (true && ((injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), false || (true && ((injectionSwitch.x > injectionSwitch.y)))))) ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(workgroup_base, clamp(workgroup_base, _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((true ? _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))))), (uint(_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)))))) | (uint(_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)))))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))))), (uint(_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)))))) | (uint(_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)))))))) : _GLF_FUZZED(subgroup_id)))) : _GLF_FUZZED((subgroup_size & subgroup_local_id))), 0u + (_GLF_IDENTITY((true ? _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))))), (uint(_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)))))) | (uint(_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)))))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))))), (uint(_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)))))) | (uint(_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)))))))) : _GLF_FUZZED(subgroup_id)))) : _GLF_FUZZED((subgroup_size & subgroup_local_id))), clamp((true ? _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))))), (uint(_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)))))) | (uint(_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)))))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))))), (uint(_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)))))) | (uint(_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)))))))) : _GLF_FUZZED(subgroup_id)))) : _GLF_FUZZED((subgroup_size & subgroup_local_id))), (true ? _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))))), (uint(_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)))))) | (uint(_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)))))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))))), (uint(_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)))))) | (uint(_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)))))))) : _GLF_FUZZED(subgroup_id)))) : _GLF_FUZZED((subgroup_size & subgroup_local_id))), (true ? _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))))), (uint(_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)))))) | (uint(_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)))))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))))), (uint(_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)))))) | (uint(_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)))))))) : _GLF_FUZZED(subgroup_id)))) : _GLF_FUZZED((subgroup_size & subgroup_local_id)))))))), _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base))) * 1u))) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (144797u & 0u) ^ (subgroup_id))), _GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_id), ~ (~ (~ (subgroup_id))))), min((_GLF_IDENTITY(~ (subgroup_id), ~ (~ (~ (subgroup_id))))), (_GLF_IDENTITY(~ (subgroup_id), ~ (~ (~ (subgroup_id))))))) | (~ (subgroup_id))))), min(_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u), _GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u))) * subgroup_size))), max(_GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(true && ((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y)), _GLF_IDENTITY((true && ((injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y))))), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bool((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y))))), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), ! (! ((true && ((injectionSwitch.x > injectionSwitch.y))) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true && (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (! (_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x))), float(_GLF_FUZZED(8985.1406)), bool(false))) < injectionSwitch.y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x))), float(_GLF_FUZZED(8985.1406)), bool(false))) < injectionSwitch.y)), bool(bvec4(! ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x))), float(_GLF_FUZZED(8985.1406)), bool(false))) < injectionSwitch.y)), false, true, true)))))))) && true))))))), _GLF_IDENTITY(false, false || (false)), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, 0.0)))) + vec2(0.0, 0.0)).y)))))))), _GLF_IDENTITY(false, false || (false)), true), false)))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(false, false || (false)), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), false || (false)), true), false))))))))))))))), _GLF_IDENTITY(false || (_GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), (true && ((injectionSwitch.x > injectionSwitch.y))) || false)), bool(bool(false || (_GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), (true && ((injectionSwitch.x > injectionSwitch.y))) || false)))))))) ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(workgroup_base, clamp(workgroup_base, _GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(_GLF_IDENTITY((subgroup_size & subgroup_local_id), ((subgroup_size & subgroup_local_id)) | 0u)))), workgroup_base)) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (subgroup_id), (~ (subgroup_id)) | _GLF_IDENTITY((~ (subgroup_id)), ((~ (subgroup_id))) / 1u)))), min(_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u), _GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u))) * subgroup_size), max((_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), (true && ((injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false || (true && ((injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), (true && ((injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false || (true && ((injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), (true && ((injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false || (true && ((injectionSwitch.x > injectionSwitch.y)))))), bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), (true && ((injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false || (true && ((injectionSwitch.x > injectionSwitch.y)))))), false)))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), (true && ((injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false || (true && ((injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(true && _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), true, true, true)))))), ! (! (_GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), (true && ((injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false || (true && ((injectionSwitch.x > injectionSwitch.y)))))) && true)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), (true && ((injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false || (true && ((injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), (true && ((injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! (! (_GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), (true && ((injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! (! (bool(! (! (_GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), (true && ((injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), (bool(_GLF_IDENTITY(bool(! (! (_GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), (true && ((injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! (! (bool(! (! (_GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), (true && ((injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (true && ((injectionSwitch.x > injectionSwitch.y)))))), false)), ! (! (_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), (true && ((injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! (! (_GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), (true && ((injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! (! (bool(! (! (_GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), (true && ((injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), (bool(_GLF_IDENTITY(bool(! (! (_GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), (true && ((injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! (! (bool(! (! (_GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), (true && ((injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (true && ((injectionSwitch.x > injectionSwitch.y)))))), false)), false || (bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), (true && ((injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! (! (_GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), (true && ((injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! (! (bool(! (! (_GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), (true && ((injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), (bool(_GLF_IDENTITY(bool(! (! (_GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), (true && ((injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! (! (bool(! (! (_GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), (true && ((injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (true && ((injectionSwitch.x > injectionSwitch.y)))))), false))))))))))))))) || false) ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(4u), uint(4u))), min((0u << _GLF_IDENTITY(uint(4u), uint(4u))), (0u << _GLF_IDENTITY(uint(4u), uint(4u))))) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u)))) : _GLF_IDENTITY(workgroup_base, clamp(workgroup_base, _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(true, false, false), false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(true, false, false), false)), bvec3(bvec3(bvec3(bvec4(bvec3(true, false, false), false))))), false))))))) || false) ? workgroup_base : _GLF_FUZZED(_GLF_IDENTITY((subgroup_size & subgroup_local_id), clamp(_GLF_IDENTITY((subgroup_size & subgroup_local_id), max((subgroup_size & subgroup_local_id), (subgroup_size & subgroup_local_id))), (subgroup_size & subgroup_local_id), (subgroup_size & subgroup_local_id)))))), _GLF_IDENTITY(workgroup_base, (1u ^ 1u) | (workgroup_base)))) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_id), (~ (subgroup_id)) | (~ (subgroup_id))), min(_GLF_IDENTITY(~ (subgroup_id), (~ (subgroup_id)) | (~ (subgroup_id))), _GLF_IDENTITY(~ (subgroup_id), (~ (subgroup_id)) | (~ (subgroup_id)))))), (true ? (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_id), (~ (subgroup_id)) | (~ (subgroup_id))), min(_GLF_IDENTITY(~ (subgroup_id), (~ (subgroup_id)) | (~ (subgroup_id))), _GLF_IDENTITY(~ (subgroup_id), (~ (subgroup_id)) | (~ (subgroup_id)))))) : _GLF_FUZZED(workgroup_id)))), min(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) ^ 0u, ((subgroup_id) ^ 0u) << 0u)), _GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u))) * subgroup_size), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(true && _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, tan(0.0) + (injectionSwitch.y)))))))), bool(bvec2(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))) && (injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), (true && ((injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), (true && ((injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), _GLF_IDENTITY(false || (true && ((injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((false || (true && ((injectionSwitch.x > injectionSwitch.y)))), bool(bvec4((false || (true && ((injectionSwitch.x > injectionSwitch.y)))), false, true, false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, _GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED((subgroup_size & subgroup_local_id)))), workgroup_base)), (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, _GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED((subgroup_size & subgroup_local_id)))), workgroup_base))) | 0u) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_id), (~ (subgroup_id)) | (0u & 119836u)), (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u))) | (~ (subgroup_id))))), min(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))) ^ 0u), _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), ((subgroup_id)) * 1u) / 1u))) * subgroup_size))), _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(true && ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, 1.0 * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)) > injectionSwitch.y)), ! (! (_GLF_IDENTITY(true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))), _GLF_IDENTITY((true && ((injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_IDENTITY((_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true) && ((injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY((_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true) && ((injectionSwitch.x > injectionSwitch.y))), false || ((_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true) && ((injectionSwitch.x > injectionSwitch.y)))))) || false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), false || _GLF_IDENTITY((_GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), ! (! (true && ((injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY((_GLF_IDENTITY((true && ((injectionSwitch.x > injectionSwitch.y))), ((true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))) || false)), false || ((_GLF_IDENTITY((true && ((injectionSwitch.x > injectionSwitch.y))), ((true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))) || false)))) && true)))) ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, _GLF_IDENTITY(workgroup_base, (true ? _GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u) : _GLF_FUZZED((subgroup_size & subgroup_local_id)))), workgroup_base)), (false ? _GLF_FUZZED((subgroup_id)) : _GLF_IDENTITY(workgroup_base, clamp(workgroup_base, _GLF_IDENTITY(workgroup_base, (true ? _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u), max(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u), _GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u))) : _GLF_FUZZED((subgroup_size & subgroup_local_id)))), workgroup_base)))) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (subgroup_id), (~ (subgroup_id)) | (~ (subgroup_id))))), min(_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u), _GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u))) * subgroup_size), (false ? _GLF_FUZZED(subgroup_size) : (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), _GLF_IDENTITY(_GLF_IDENTITY(true && ((_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y)), ! (! (_GLF_IDENTITY(true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1.2)), float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), bool(true))), exp(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)))), 1.0, round(length(normalize(1.0)))))))), (true && ((injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false || _GLF_IDENTITY((true && ((injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY((true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / exp(0.0)))).y))), ((true && ((injectionSwitch.x > injectionSwitch.y)))) || false)) && true)))) ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(workgroup_base, clamp(workgroup_base, _GLF_IDENTITY(workgroup_base, (true ? _GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u) : _GLF_FUZZED((subgroup_size & subgroup_local_id)))), workgroup_base)) + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (subgroup_id), (~ (subgroup_id)) | (~ (subgroup_id))))), clamp(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (subgroup_id), (~ (subgroup_id)) | (~ (subgroup_id))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (subgroup_id), (~ (subgroup_id)) | (~ (subgroup_id))))), clamp(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (subgroup_id), (~ (subgroup_id)) | (~ (subgroup_id))))), _GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (subgroup_id), (~ (subgroup_id)) | (~ (subgroup_id))))), _GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (subgroup_id), (~ (subgroup_id)) | (~ (subgroup_id))))))), _GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (subgroup_id), (~ (subgroup_id)) | (~ (subgroup_id))))))), min(_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), (false ? _GLF_FUZZED(145746u) : _GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u))))) * subgroup_size)))))) + subgroup_local_id;
 for(int _injected_loop_counter = (_GLF_IDENTITY(-27482, int(ivec4(-27482, 1, 1, (1 & 1)))) & 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < (((0 ^ 1) << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(_GLF_IDENTITY(int(6), (_GLF_IDENTITY(int(6), min(int(6), int(6)))) | (int(6))), (_GLF_IDENTITY(int(6), (int(6)) | (int(6)))) >> (0 << _GLF_IDENTITY(int(5), int(5))))))); _GLF_IDENTITY(_injected_loop_counter ++, 0 | (_injected_loop_counter ++)))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(_GLF_IDENTITY(3, (_GLF_IDENTITY(3, 0 | (3))) | (3))), int(3)), int(_GLF_IDENTITY(ivec2(1 << _GLF_IDENTITY(int(3), int(3)), 1), ivec2(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(ivec2(1 << _GLF_IDENTITY(int(3), int(3)), 1), (ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) << 0)) / 1) << _GLF_IDENTITY(int(3), int(3)), 1)) << ivec2(0, 0)), 0, 0), (ivec4(_GLF_IDENTITY(ivec2(1 << _GLF_IDENTITY(int(3), int(3)), 1), (ivec2(1 << _GLF_IDENTITY(int(3), int(3)), 1)) << ivec2(0, _GLF_IDENTITY(0, int(int(0))))), 0, 0)) ^ ivec4(0, 0, _GLF_IDENTITY(0, 0 | (0)), 0))))))) << 0)) >> _GLF_IDENTITY(int(_GLF_IDENTITY(3, _GLF_IDENTITY(clamp(_GLF_IDENTITY(3, 0 | (3)), 3, 3), (clamp(_GLF_IDENTITY(3, 0 | (3)), 3, 3)) | (clamp(_GLF_IDENTITY(3, 0 | (3)), 3, 3))))), int(3)))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, mix(float(_GLF_FUZZED(float(true))), float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(8.0)), bool(false)))), bool(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true))))) > injectionSwitch.y))))))))
          barrier();
        }
       else
        {
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)), (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) | (workgroup_base), min((workgroup_base) | (workgroup_base), (workgroup_base) | (workgroup_base))))) / 1u)) - 0u, clamp((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(_GLF_IDENTITY(uint(workgroup_base), _GLF_IDENTITY((uint(workgroup_base)) | 0u, (_GLF_IDENTITY((uint(workgroup_base)), ((uint(workgroup_base))) / 1u) | 0u) >> 0u)))), ~ (~ (workgroup_base))), (workgroup_base) | (workgroup_base))) - 0u, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) | (workgroup_base), ((workgroup_base) | (workgroup_base)) | (_GLF_IDENTITY((workgroup_base) | (workgroup_base), _GLF_IDENTITY(((workgroup_base) | (workgroup_base)), min(((_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u)) | (workgroup_base)), ((workgroup_base) | (workgroup_base)))) + 0u))))) - 0u, min((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 0u + (workgroup_base))) | (workgroup_base))) - _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_size))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), ((workgroup_base)) | _GLF_IDENTITY((_GLF_IDENTITY((workgroup_base), ((workgroup_base)) | 0u)), (_GLF_IDENTITY((_GLF_IDENTITY((workgroup_base), ((workgroup_base)) | 0u)), ~ (~ ((_GLF_IDENTITY((workgroup_base), ((workgroup_base)) | 0u)))))) | ((_GLF_IDENTITY((workgroup_base), ((workgroup_base)) | 0u))))) | _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))), (false ? _GLF_FUZZED(uvec4(78235u, _GLF_IDENTITY(71575u, clamp(_GLF_IDENTITY(71575u, max(71575u, 71575u)), 71575u, 71575u)), 130933u, 125219u)[2]) : (_GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, 1u)))))))) - 0u, ((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), ((workgroup_base)) | _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((workgroup_base), _GLF_IDENTITY(((workgroup_base)) | 0u, clamp(((workgroup_base)) | 0u, ((workgroup_base)) | 0u, ((workgroup_base)) | 0u)))), (true ? (_GLF_IDENTITY((workgroup_base), _GLF_IDENTITY(((workgroup_base)) | 0u, clamp(((workgroup_base)) | 0u, ((workgroup_base)) | 0u, ((workgroup_base)) | 0u)))) : _GLF_FUZZED(virtual_gid))), (_GLF_IDENTITY((_GLF_IDENTITY((workgroup_base), ((workgroup_base)) | 0u)), ~ _GLF_IDENTITY((~ ((_GLF_IDENTITY((workgroup_base), ((workgroup_base)) | 0u)))), min((~ ((_GLF_IDENTITY((workgroup_base), ((workgroup_base)) | 0u)))), (~ ((_GLF_IDENTITY((workgroup_base), ((workgroup_base)) | 0u)))))))) | ((_GLF_IDENTITY((workgroup_base), ((workgroup_base)) | 0u))))) | _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))), (false ? _GLF_FUZZED(uvec4(78235u, _GLF_IDENTITY(71575u, clamp(_GLF_IDENTITY(71575u, max(71575u, 71575u)), 71575u, 71575u)), 130933u, 125219u)[2]) : (_GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, 1u)))))))) - 0u) / 1u))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))) - 0u, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(clamp(workgroup_base, workgroup_id, virtual_gid)) : (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))) - 0u), ~ (~ ((_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(clamp(workgroup_base, workgroup_id, virtual_gid)) : (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))) - 0u)))), _GLF_IDENTITY((0u | 0u) | ((_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(clamp(workgroup_base, workgroup_id, virtual_gid)) : (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))) - 0u)), ((0u | 0u) | ((_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(clamp(workgroup_base, workgroup_id, virtual_gid)) : (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))) - 0u))) ^ (0u | 0u))))))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)), (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) | (workgroup_base), min((workgroup_base) | (workgroup_base), (workgroup_base) | (workgroup_base))))) / 1u)) - 0u, clamp((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(_GLF_IDENTITY(uint(workgroup_base), _GLF_IDENTITY((uint(workgroup_base)) | 0u, (_GLF_IDENTITY((uint(workgroup_base)), ((uint(workgroup_base))) / 1u) | 0u) >> 0u)))), ~ (~ (workgroup_base))), (workgroup_base) | (workgroup_base))) - 0u, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) | (workgroup_base), ((workgroup_base) | (workgroup_base)) | (_GLF_IDENTITY((workgroup_base) | (workgroup_base), _GLF_IDENTITY(((workgroup_base) | (workgroup_base)), min(((_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u)) | (workgroup_base)), ((workgroup_base) | (workgroup_base)))) + 0u))))) - 0u, min((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 0u + (workgroup_base))) | (workgroup_base))) - _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_size))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), ((workgroup_base)) | _GLF_IDENTITY((_GLF_IDENTITY((workgroup_base), ((workgroup_base)) | 0u)), (_GLF_IDENTITY((_GLF_IDENTITY((workgroup_base), ((workgroup_base)) | 0u)), ~ (~ ((_GLF_IDENTITY((workgroup_base), ((workgroup_base)) | 0u)))))) | ((_GLF_IDENTITY((workgroup_base), ((workgroup_base)) | 0u))))) | _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))), (false ? _GLF_FUZZED(uvec4(78235u, _GLF_IDENTITY(71575u, clamp(_GLF_IDENTITY(71575u, max(71575u, 71575u)), 71575u, 71575u)), 130933u, 125219u)[2]) : (_GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, 1u)))))))) - 0u, ((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), ((workgroup_base)) | _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((workgroup_base), _GLF_IDENTITY(((workgroup_base)) | 0u, clamp(((workgroup_base)) | 0u, ((workgroup_base)) | 0u, ((workgroup_base)) | 0u)))), (true ? (_GLF_IDENTITY((workgroup_base), _GLF_IDENTITY(((workgroup_base)) | 0u, clamp(((workgroup_base)) | 0u, ((workgroup_base)) | 0u, ((workgroup_base)) | 0u)))) : _GLF_FUZZED(virtual_gid))), (_GLF_IDENTITY((_GLF_IDENTITY((workgroup_base), ((workgroup_base)) | 0u)), ~ _GLF_IDENTITY((~ ((_GLF_IDENTITY((workgroup_base), ((workgroup_base)) | 0u)))), min((~ ((_GLF_IDENTITY((workgroup_base), ((workgroup_base)) | 0u)))), (~ ((_GLF_IDENTITY((workgroup_base), ((workgroup_base)) | 0u)))))))) | ((_GLF_IDENTITY((workgroup_base), ((workgroup_base)) | 0u))))) | _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))), (false ? _GLF_FUZZED(uvec4(78235u, _GLF_IDENTITY(71575u, clamp(_GLF_IDENTITY(71575u, max(71575u, 71575u)), 71575u, 71575u)), 130933u, 125219u)[2]) : (_GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, 1u)))))))) - 0u) / 1u))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))) - 0u, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(clamp(workgroup_base, workgroup_id, virtual_gid)) : (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))) - 0u), ~ (~ ((_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(clamp(workgroup_base, workgroup_id, virtual_gid)) : (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))) - 0u)))), _GLF_IDENTITY((0u | 0u) | ((_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(clamp(workgroup_base, workgroup_id, virtual_gid)) : (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))) - 0u)), ((0u | 0u) | ((_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(clamp(workgroup_base, workgroup_id, virtual_gid)) : (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))) - 0u))) ^ (0u | 0u))))))), (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)), (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) | (workgroup_base), min((workgroup_base) | (workgroup_base), (workgroup_base) | (workgroup_base))))) / 1u)) - 0u, clamp((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(_GLF_IDENTITY(uint(workgroup_base), _GLF_IDENTITY((uint(workgroup_base)) | 0u, (_GLF_IDENTITY((uint(workgroup_base)), ((uint(workgroup_base))) / 1u) | 0u) >> 0u)))), ~ (~ (workgroup_base))), (workgroup_base) | (workgroup_base))) - 0u, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) | (workgroup_base), ((workgroup_base) | (workgroup_base)) | (_GLF_IDENTITY((workgroup_base) | (workgroup_base), _GLF_IDENTITY(((workgroup_base) | (workgroup_base)), min(((_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u)) | (workgroup_base)), ((workgroup_base) | (workgroup_base)))) + 0u))))) - 0u, min((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 0u + (workgroup_base))) | (workgroup_base))) - _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_size))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), ((workgroup_base)) | _GLF_IDENTITY((_GLF_IDENTITY((workgroup_base), ((workgroup_base)) | 0u)), (_GLF_IDENTITY((_GLF_IDENTITY((workgroup_base), ((workgroup_base)) | 0u)), ~ (~ ((_GLF_IDENTITY((workgroup_base), ((workgroup_base)) | 0u)))))) | ((_GLF_IDENTITY((workgroup_base), ((workgroup_base)) | 0u))))) | _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))), (false ? _GLF_FUZZED(uvec4(78235u, _GLF_IDENTITY(71575u, clamp(_GLF_IDENTITY(71575u, max(71575u, 71575u)), 71575u, 71575u)), 130933u, 125219u)[2]) : (_GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, 1u)))))))) - 0u, ((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), ((workgroup_base)) | _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((workgroup_base), _GLF_IDENTITY(((workgroup_base)) | 0u, clamp(((workgroup_base)) | 0u, ((workgroup_base)) | 0u, ((workgroup_base)) | 0u)))), (true ? (_GLF_IDENTITY((workgroup_base), _GLF_IDENTITY(((workgroup_base)) | 0u, clamp(((workgroup_base)) | 0u, ((workgroup_base)) | 0u, ((workgroup_base)) | 0u)))) : _GLF_FUZZED(virtual_gid))), (_GLF_IDENTITY((_GLF_IDENTITY((workgroup_base), ((workgroup_base)) | 0u)), ~ _GLF_IDENTITY((~ ((_GLF_IDENTITY((workgroup_base), ((workgroup_base)) | 0u)))), min((~ ((_GLF_IDENTITY((workgroup_base), ((workgroup_base)) | 0u)))), (~ ((_GLF_IDENTITY((workgroup_base), ((workgroup_base)) | 0u)))))))) | ((_GLF_IDENTITY((workgroup_base), ((workgroup_base)) | 0u))))) | _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))), (false ? _GLF_FUZZED(uvec4(78235u, _GLF_IDENTITY(71575u, clamp(_GLF_IDENTITY(71575u, max(71575u, 71575u)), 71575u, 71575u)), 130933u, 125219u)[2]) : (_GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, 1u)))))))) - 0u) / 1u))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))) - 0u, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(clamp(workgroup_base, workgroup_id, virtual_gid)) : (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))) - 0u), ~ (~ ((_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(clamp(workgroup_base, workgroup_id, virtual_gid)) : (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))) - 0u)))), _GLF_IDENTITY((0u | 0u) | ((_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(clamp(workgroup_base, workgroup_id, virtual_gid)) : (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))) - 0u)), ((0u | 0u) | ((_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(clamp(workgroup_base, workgroup_id, virtual_gid)) : (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))) - 0u))) ^ (0u | 0u)))))))) >> 0u)) - 0u) + subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), ((subgroup_size)) / 1u)) | 0u) ^ 0u) + ((_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(6069.6761)), bool(false))) > injectionSwitch.y))))
  barrier();
 do
  {
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (false ? _GLF_FUZZED(bitfieldExtract((next_virtual_gid), 29302, (82840))) : _GLF_IDENTITY(next_virtual_gid, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? next_virtual_gid : _GLF_FUZZED(workgroup_size)))))], uint(1), 4, 64, 4);
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1)), ~ _GLF_IDENTITY((~ (subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, (1) * (1 & 1)))))), uint(_GLF_IDENTITY(uint((_GLF_IDENTITY(~ (subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1))), (~ (subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1)))) >> 0u))), 0u | (uint(_GLF_IDENTITY((~ (subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1)))), 0u + (_GLF_IDENTITY((~ (subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1)))), clamp((~ (subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1)))), (~ (subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1)))), _GLF_IDENTITY((~ (subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1)))), ~ (~ ((~ (subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1))))))))))))))))) < subgroup_size)
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, sqrt(vec2(0.0, 0.0)) + (injectionSwitch)).x > injectionSwitch.y))), false || (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-151.888)), bool(false))), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), ! (! (bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(-8877.2722)))))))))), (bool(_GLF_IDENTITY(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), min(_GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), min(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), ! (! (bool(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ldexp(injectionSwitch, ivec2(83382, -52443))) : injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) - 0.0), clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))))))) || _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), (bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) || false))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)))), min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x), clamp(clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x), _GLF_IDENTITY(clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x), max(_GLF_IDENTITY(clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x), (clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) - 0.0), clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))), clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)))))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-151.888)), bool(false)), (true ? mix(float(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(5.2)), bool(false)), max(mix(float(injectionSwitch.y), float(_GLF_FUZZED(5.2)), bool(false)), mix(float(injectionSwitch.y), float(_GLF_FUZZED(5.2)), bool(false)))))), float(_GLF_FUZZED(-151.888)), bool(false)) : _GLF_FUZZED(8.0)))), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), ! _GLF_IDENTITY((! (bool(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) || false)))), ((! (bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))) && true))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), min(_GLF_IDENTITY(_GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), min(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), min(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), min(_GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), min(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), min(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), round(length(normalize(vec3(1.0, 1.0, 1.0))))))), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), ! (! (bool(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, injectionSwitch.y, injectionSwitch.y))) - 0.0), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))), bool(bvec2(_GLF_IDENTITY(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), min(_GLF_IDENTITY(_GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), min(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), min(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), min(_GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), min(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), min(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), round(length(normalize(vec3(1.0, 1.0, 1.0))))))), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), ! (! (bool(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, injectionSwitch.y, injectionSwitch.y))) - 0.0), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))), true))))) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), 1.0)))))))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
            barrier();
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             atomicStore(checker[virtual_gid], _GLF_IDENTITY(read, (read) | (read)), _GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(4, ~ (~ (4))))), 1, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0)), 0 ^ (int(ivec4(_GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(4, ~ (~ (4))))), 1, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0))))), (4) - 0))), 64, 4);
            }
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) && true)), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) && true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
          }
         else
          {
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))) && _GLF_IDENTITY(true, (true) && true))))
        barrier();
      }
     else
      {
      }
    }
   subgroupAll(false);
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      barrier();
     barrier();
    }
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))))).x, injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(-6.4))) < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 0.0, 1.0, 1.0, 0.0)), (false ? _GLF_FUZZED(injectionSwitch) : vec2(mat2x3(injectionSwitch, 0.0, 1.0, 1.0, 0.0))))).y)), false))), (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) - 0.0), injectionSwitch.x, injectionSwitch.x), 0.0 + (clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), mix(float(_GLF_FUZZED(903.486)), float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), mix(float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(6.1)), bool(false))))), clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-5.3)), float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), bool(true))), injectionSwitch.x))) - 0.0), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x4(injectionSwitch.x, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))), (mat2x4(injectionSwitch.x, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))) + mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) : _GLF_FUZZED(68.12))))))))) < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.y) + 0.0))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), (! ((injectionSwitch.x < injectionSwitch.y))) || false)))), true && _GLF_IDENTITY((_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) < injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) < injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) < injectionSwitch.y, false, true)))) || false)))), ! (! ((_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) < injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) < injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) < injectionSwitch.y, false, true)))) || false)))))))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(bvec4(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) < injectionSwitch.y)), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bvec2(! (! (false)), false)), bool(bool(bool(bvec2(! (! (false)), false))))))))), true))), false)))) && true)))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, (false) && true))))))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         barrier();
        }
      }
     do
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     atomicStore(checker[_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid))], read, 4, _GLF_IDENTITY(64, int(int(_GLF_IDENTITY(64, max(64, 64))))), 4);
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (_GLF_IDENTITY(! (bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), ! (! (! (bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))), (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       else
        {
         subgroupAll(true);
        }
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
