#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))), false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))), true && (! (_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))) || false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u)), ~ _GLF_IDENTITY((~ (0u)), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY((_GLF_IDENTITY(~ (0u), _GLF_IDENTITY(max(_GLF_IDENTITY(~ (0u), clamp(~ (0u), ~ (0u), ~ (0u))), ~ (0u)), 0u | (max(_GLF_IDENTITY(~ (0u), clamp(~ (0u), ~ (0u), ~ (0u))), ~ (0u)))))), 0u ^ ((_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_id))) : _GLF_FUZZED(subgroup_size)))), 1u * (~ (_GLF_IDENTITY(0u, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) - 0.0), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-6810.1772), _GLF_FUZZED(-2.2)), bvec2(false, false)), max(mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) - 0.0), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-6810.1772), _GLF_FUZZED(-2.2)), bvec2(false, false)), mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) - 0.0), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-6810.1772), _GLF_FUZZED(-2.2)), bvec2(false, false))))).y) || false))) ? _GLF_IDENTITY(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(mix(14206u, subgroup_local_id, true)) : 0u)), (_GLF_IDENTITY(true, (true) && true) ? 0u : _GLF_FUZZED(subgroup_id))) : _GLF_FUZZED(subgroup_size)))))))))))), 0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u))))))))), min(uvec3(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (_GLF_IDENTITY(~ (0u), (true ? ~ (0u) : _GLF_FUZZED(subgroup_size)))) | (~ (0u))))), 0u, 0u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) + uint(_GLF_ZERO(0.0, injectionSwitch.x))))), max(_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) + uint(_GLF_ZERO(0.0, injectionSwitch.x))))), clamp(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) + uint(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) + uint(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) + uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) + uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), (_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ _GLF_IDENTITY((_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), (uint(0u)) >> 0u)))))), ((_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), (uint(0u)) >> 0u))))))) | ((_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), (uint(0u)) >> 0u))))))))) + _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) / 1u))))) | (_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) + uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), 0u ^ (_GLF_IDENTITY(0u, max(0u, 0u)))), _GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, max(0u, 0u))))), (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) + uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0u), ~ (_GLF_IDENTITY(~ (~ (0u)), clamp(~ (~ (0u)), ~ (~ (0u)), ~ (~ (0u)))))), (~ (_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), max(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) | (uint(0u))))), _GLF_IDENTITY((uint(0u)) >> 0u, ~ (_GLF_IDENTITY(~ ((uint(0u)) >> 0u), (~ ((uint(0u)) >> 0u)) - 0u)))))))))) + _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))) / 1u))))) | (_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) * 1u)) / 1u) : _GLF_FUZZED(79845u)))), clamp((_GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) * 1u)) / 1u) : _GLF_FUZZED(79845u)))), _GLF_IDENTITY((_GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) * 1u)) / 1u) : _GLF_FUZZED(79845u)))), ((_GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) * 1u)) / 1u) : _GLF_FUZZED(79845u))))) | ((_GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) * 1u)) / 1u) : _GLF_FUZZED(79845u)))))), _GLF_IDENTITY((_GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) * 1u)) / 1u) : _GLF_FUZZED(79845u)))), ~ (~ ((_GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) * 1u)) / 1u) : _GLF_FUZZED(79845u))))))))), (~ (0u)) + uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), clamp(_GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, min(0u, 0u)))), _GLF_IDENTITY(0u, max(0u, 0u)))))) - uvec3(0u, 0u, 0u)))) ^ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(uvec4(gl_NumWorkGroups, 0u)), (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(gl_NumWorkGroups, 0u), (_GLF_IDENTITY(uvec4(gl_NumWorkGroups, 0u), (uvec4(gl_NumWorkGroups, 0u)) / uvec4(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u, 1u))) | (uvec4(gl_NumWorkGroups, 0u))), (false ? _GLF_FUZZED(uvec4(168311u, 164090u, 77875u, 125991u)) : uvec4(gl_NumWorkGroups, 0u))))) | (uvec3(0u, 0u, 0u) | _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) + uvec3(0u, 0u, 0u)))))), ((_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(uvec4(gl_NumWorkGroups, 0u)), (uvec3(uvec4(gl_NumWorkGroups, 0u))) | (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, _GLF_IDENTITY(0u, min(0u, 0u)))))))) | (_GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(true ? 0u : _GLF_FUZZED(subgroup_size), min(true ? 0u : _GLF_FUZZED(subgroup_size), true ? 0u : _GLF_FUZZED(subgroup_size))))), 0u) << _GLF_IDENTITY(uvec3(6u), uvec3(6u)), max(uvec3(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_size))), 0u) << _GLF_IDENTITY(uvec3(6u), uvec3(6u)), _GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_size))), 0u) << _GLF_IDENTITY(uvec3(6u), uvec3(6u)), (uvec3(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_size))), 0u) << _GLF_IDENTITY(uvec3(6u), uvec3(6u))) | uvec3(0u, 0u, 0u)))))), uvec3(1u, 1u, 1u) * (_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(uvec4(gl_NumWorkGroups, 0u)), _GLF_IDENTITY((uvec3(uvec4(gl_NumWorkGroups, 0u))) | _GLF_IDENTITY((uvec3(_GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((_GLF_IDENTITY(++ subgroup_id, 1u * (++ subgroup_id)))) : _GLF_IDENTITY(0u, 0u ^ _GLF_IDENTITY((0u), ((0u)) | ((0u)))))), 0u, 0u) | uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) | ((uvec3(_GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((_GLF_IDENTITY(++ subgroup_id, 1u * (++ subgroup_id)))) : _GLF_IDENTITY(0u, 0u ^ _GLF_IDENTITY((0u), ((0u)) | ((0u)))))), 0u, 0u) | uvec3(0u, 0u, 0u)))), ~ (~ _GLF_IDENTITY(((uvec3(uvec4(gl_NumWorkGroups, 0u))) | (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), bool(bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)) || false), true, false))), false, true, true)), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)) || false), true, false))), false, true, true)), ! (! (bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)) || false), true, false))), false, true, true))))))))))))) ? _GLF_FUZZED((_GLF_IDENTITY(++ subgroup_id, 1u * (++ subgroup_id)))) : _GLF_IDENTITY(0u, 0u ^ _GLF_IDENTITY((0u), ((0u)) | ((0u)))))), 0u, 0u) | uvec3(0u, 0u, 0u))), (((uvec3(uvec4(gl_NumWorkGroups, 0u))) | (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), bool(bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)) || false), true, false))), false, true, true)), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)) || false), true, false))), false, true, true)), ! (! (bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)) || false), true, false))), false, true, true))))))))))))) ? _GLF_FUZZED((_GLF_IDENTITY(++ subgroup_id, 1u * (++ subgroup_id)))) : _GLF_IDENTITY(0u, 0u ^ _GLF_IDENTITY((0u), ((0u)) | ((0u)))))), 0u, 0u) | uvec3(0u, 0u, 0u)))) * uvec3(1u, 1u, 1u))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups)), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(gl_NumWorkGroups, 0u), (uvec4(gl_NumWorkGroups, 0u)) | (_GLF_IDENTITY(uvec4(gl_NumWorkGroups, 0u), (uvec4(gl_NumWorkGroups, 0u)) | (uvec4(gl_NumWorkGroups, 0u))))), (false ? _GLF_FUZZED(uvec4(22203u, 18794u, 190873u, 17065u)) : _GLF_IDENTITY(_GLF_IDENTITY(uvec4(gl_NumWorkGroups, 0u), (uvec4(gl_NumWorkGroups, 0u)) | (_GLF_IDENTITY(uvec4(gl_NumWorkGroups, 0u), (uvec4(gl_NumWorkGroups, 0u)) | (uvec4(gl_NumWorkGroups, 0u))))), uvec4(1u, 1u, 1u, 1u) * (_GLF_IDENTITY(uvec4(gl_NumWorkGroups, 0u), (uvec4(gl_NumWorkGroups, 0u)) | (_GLF_IDENTITY(uvec4(gl_NumWorkGroups, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(0u), (uint(0u)) | (uint(0u)))), (uint(_GLF_IDENTITY(uint(0u), (uint(0u)) | (uint(0u))))) | (uint(_GLF_IDENTITY(uint(0u), (uint(0u)) | (uint(0u)))))))), (uvec4(gl_NumWorkGroups, 0u)) | (uvec4(gl_NumWorkGroups, 0u)))))))))), (uvec3(uvec4(gl_NumWorkGroups, 0u))) | (_GLF_IDENTITY(uvec3(0u, 0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(187738u) : 0u))), (uvec3(0u, 0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(187738u) : 0u)))) - uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) | uvec3(0u, _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec2(0u, 1u), (uvec2(0u, 1u)) / uvec2(1u, 1u)))), _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, min(0u, 0u)))))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)), _GLF_IDENTITY(uvec3(uvec4(gl_NumWorkGroups, 0u)), (uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)), 0u))) | (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u)))) : _GLF_FUZZED((uvec3(14901u, 188017u, 6360u) << uvec3(77401u, _GLF_IDENTITY(74896u, 0u | (74896u)), 94760u))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(uvec4(gl_NumWorkGroups, 0u)), (uvec3(uvec4(gl_NumWorkGroups, 0u))) | (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))))), (_GLF_IDENTITY(true ? _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(uvec4(gl_NumWorkGroups, 0u)), (uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)), 0u))) | (_GLF_IDENTITY(uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u), max(uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u)) >> uvec3(0u, 0u, 0u))))))) : _GLF_FUZZED((uvec3(14901u, 188017u, 6360u) << uvec3(77401u, 74896u, 94760u))), ~ (_GLF_IDENTITY(~ (true ? _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(uvec4(gl_NumWorkGroups, 0u)), (uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)), 0u))) | (_GLF_IDENTITY(uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u), max(uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u)) >> uvec3(0u, 0u, 0u))))))) : _GLF_FUZZED((uvec3(14901u, 188017u, 6360u) << uvec3(77401u, 74896u, 94760u)))), _GLF_IDENTITY(uvec3(uvec3(~ (true ? _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(uvec4(gl_NumWorkGroups, 0u)), (uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)), 0u))) | (_GLF_IDENTITY(uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u), max(uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u)) >> uvec3(0u, 0u, 0u))))))) : _GLF_FUZZED((uvec3(14901u, 188017u, 6360u) << uvec3(77401u, 74896u, 94760u)))))), (uvec3(uvec3(~ (true ? _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(uvec4(gl_NumWorkGroups, 0u)), (uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)), 0u))) | (_GLF_IDENTITY(uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u), max(uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u)) >> uvec3(0u, 0u, 0u))))))) : _GLF_FUZZED((uvec3(14901u, 188017u, 6360u) << uvec3(77401u, 74896u, 94760u))))))) >> uvec3(0u, 0u, 0u))))))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(uvec4(gl_NumWorkGroups, 0u)), (uvec3(uvec4(gl_NumWorkGroups, 0u))) | (uvec3(_GLF_IDENTITY(0u, (0u & 139582u) | (0u)), 0u, _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, max(0u, 0u))))) | uvec3(0u, 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))))), _GLF_IDENTITY((true ? _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(uvec4(gl_NumWorkGroups, 0u)), (uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)), 0u))) | (_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) - uvec3(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) / 1.0), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) | uvec3(0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : 0u)), 0u)))) : _GLF_FUZZED((uvec3(14901u, 188017u, 6360u) << uvec3(77401u, 74896u, 94760u)))), ((true ? _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(uvec4(gl_NumWorkGroups, _GLF_IDENTITY(0u, (0u) + 0u))), (uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)), 0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, _GLF_IDENTITY(0u, uint(uvec2(_GLF_IDENTITY(0u, 0u ^ (0u)), 0u))), 0u)) - uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) | uvec3(0u, 0u, 0u), (_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) - uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x), _GLF_ZERO(0.0, injectionSwitch.x))) | uvec3(0u, 0u, 0u)) << (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u)))))) : _GLF_FUZZED(_GLF_IDENTITY((uvec3(14901u, 188017u, 6360u) << uvec3(77401u, 74896u, 94760u)), ((uvec3(14901u, 188017u, 6360u) << uvec3(77401u, 74896u, 94760u))) >> uvec3(0u, 0u, 0u))))) ^ uvec3(0u, 0u, 0u)))) / uvec3(1u, 1u, 1u))))))) | (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(6u), uvec3(6u))))))).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(float(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-1.5)))))))) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))))), _GLF_IDENTITY(false, (false) || false) || (true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))))), _GLF_IDENTITY(false, (false) || false) || (true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))))), _GLF_IDENTITY(false, (false) || false) || (_GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), (true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), ! (! ((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))) || false)))))))))) || false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.x > injectionSwitch.y) || false)))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-95.21) : _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))))) / 1.0) > injectionSwitch.y) || false))))) && true))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true)), (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (false))) && true))) && true))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id))) - 0u);
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, min(workgroup_base, _GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)))) + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u) + ((subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(97873) : 1))) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u | (subgroup_size), ~ (~ _GLF_IDENTITY((0u | (subgroup_size)), ((0u | (subgroup_size))) - 0u)))));
 atomicStore(buf[next_virtual_gid], uint(1), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, 0 | _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(4, max(4, 4))), ((_GLF_IDENTITY(4, max(4, 4)))) + 0), (_GLF_IDENTITY((_GLF_IDENTITY(4, max(4, 4))), ((_GLF_IDENTITY(4, max(4, 4)))) + 0)) << (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(4, 1 * (4))), int(4))))), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(4, 0 | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(max(4, 4), (_GLF_IDENTITY(max(4, 4), (max(4, 4)) + (0 << _GLF_IDENTITY(int(7), int(7))))) * 1)), (_GLF_IDENTITY(4, max(4, 4))) | 0)), ((_GLF_IDENTITY(4, max(4, 4)))) + 0)), (_GLF_IDENTITY(_GLF_IDENTITY(4, 0 | _GLF_IDENTITY((_GLF_IDENTITY(4, max(4, 4))), (_GLF_IDENTITY((_GLF_IDENTITY(4, max(4, 4))), _GLF_IDENTITY(int(ivec3((_GLF_IDENTITY(4, max(4, 4))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY((int(ivec3((_GLF_IDENTITY(4, max(4, 4))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))) << 0, ~ (~ (_GLF_IDENTITY((int(ivec3((_GLF_IDENTITY(4, max(4, 4))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))) << 0, clamp(_GLF_IDENTITY((int(ivec3((_GLF_IDENTITY(4, max(4, 4))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))) << 0, clamp((int(ivec3((_GLF_IDENTITY(4, max(4, 4))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))) << 0, (int(ivec3((_GLF_IDENTITY(4, max(4, 4))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))) << 0, (int(ivec3((_GLF_IDENTITY(4, max(4, 4))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))) << 0)), (int(ivec3((_GLF_IDENTITY(4, max(4, 4))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))) << 0, (int(ivec3((_GLF_IDENTITY(4, max(4, 4))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))) << 0)))))))) + 0)), (_GLF_IDENTITY(4, 0 | _GLF_IDENTITY((_GLF_IDENTITY(4, max(4, 4))), (_GLF_IDENTITY((_GLF_IDENTITY(4, max(4, 4))), _GLF_IDENTITY(int(ivec3((_GLF_IDENTITY(4, max(4, 4))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY((int(ivec3((_GLF_IDENTITY(4, max(4, 4))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))) << 0, ~ (~ (_GLF_IDENTITY((int(ivec3((_GLF_IDENTITY(4, max(4, 4))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))) << 0, clamp(_GLF_IDENTITY((int(ivec3((_GLF_IDENTITY(4, max(4, 4))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))) << 0, clamp((int(ivec3((_GLF_IDENTITY(4, max(4, 4))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))) << 0, (int(ivec3((_GLF_IDENTITY(4, max(4, 4))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))) << 0, (int(ivec3((_GLF_IDENTITY(4, max(4, 4))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))) << 0)), (int(ivec3((_GLF_IDENTITY(4, max(4, 4))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))) << 0, (int(ivec3((_GLF_IDENTITY(4, max(4, 4))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))) << 0)))))))) + 0))) << 0)) | (_GLF_IDENTITY(4, 0 | _GLF_IDENTITY((_GLF_IDENTITY(4, max(4, 4))), _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(4, max(4, 4)))) + 0, clamp(_GLF_IDENTITY(((_GLF_IDENTITY(4, max(4, 4)))) + 0, (_GLF_IDENTITY(((_GLF_IDENTITY(4, max(4, 4)))) + 0, int(ivec4(((_GLF_IDENTITY(4, max(4, 4)))) + 0, 1, 0, 0)))) / 1), _GLF_IDENTITY(((_GLF_IDENTITY(4, max(4, 4)))) + 0, (((_GLF_IDENTITY(4, max(4, 4)))) + 0) << 0), ((_GLF_IDENTITY(4, max(4, 4)))) + 0)), clamp(((_GLF_IDENTITY(4, max(4, 4)))) + 0, ((_GLF_IDENTITY(_GLF_IDENTITY(4, max(4, 4)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, max(4, 4))), (false ? _GLF_FUZZED((32110 * 20371)) : ~ (_GLF_IDENTITY(4, max(4, 4))))))))) + _GLF_IDENTITY(0, int(_GLF_IDENTITY(int(0), (int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(2), int(2))) | (int(0))))), _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(4, (4) >> 0), max(4, 4)))) + 0, min(((_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, 1 * (4)), 4)))) + 0, ((_GLF_IDENTITY(4, max(4, 4)))) + 0))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(24264) : 0)), 0)) | _GLF_IDENTITY((_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, ~ (~ (4)))))), ((_GLF_IDENTITY(4, max(4, 4)))) + _GLF_IDENTITY(0, (0 & -39030) | (0)))), (_GLF_IDENTITY(4, 0 | _GLF_IDENTITY((_GLF_IDENTITY(4, max(4, 4))), (_GLF_IDENTITY((_GLF_IDENTITY(4, max(4, 4))), _GLF_IDENTITY(int(ivec3((_GLF_IDENTITY(4, max(4, 4))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)))), (int(ivec3((_GLF_IDENTITY(4, _GLF_IDENTITY(max(4, 4), min(max(4, 4), max(4, 4))))), _GLF_IDENTITY(0, (0) - 0), int(_GLF_ZERO(0.0, injectionSwitch.x))))) << 0))) + 0))) | (_GLF_IDENTITY(4, 0 | _GLF_IDENTITY((_GLF_IDENTITY(4, max(4, 4))), _GLF_IDENTITY(((_GLF_IDENTITY(4, max(4, 4)))) + 0, clamp(((_GLF_IDENTITY(4, max(4, 4)))) + 0, ((_GLF_IDENTITY(_GLF_IDENTITY(4, max(4, 4)), min(_GLF_IDENTITY(4, max(4, 4)), _GLF_IDENTITY(4, max(4, 4)))))) + 0, _GLF_IDENTITY(((_GLF_IDENTITY(4, max(4, 4)))) + 0, _GLF_IDENTITY(min(((_GLF_IDENTITY(4, max(4, 4)))) + 0, ((_GLF_IDENTITY(4, max(4, 4)))) + 0), int(_GLF_IDENTITY(ivec2(min(((_GLF_IDENTITY(4, max(4, 4)))) + 0, ((_GLF_IDENTITY(4, max(4, 4)))) + 0), 1), (ivec2(min(((_GLF_IDENTITY(4, max(4, 4)))) + 0, ((_GLF_IDENTITY(4, max(4, 4)))) + 0), 1)) >> ivec2(0, 0))))))))))))) ^ 0))), _GLF_IDENTITY(0 + (4), (_GLF_IDENTITY(0 + (4), 0 | (0 + (4)))) / 1)), 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), true, false)), false || (bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), true, false)))))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint read = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, max(_GLF_IDENTITY(64, (64) | _GLF_IDENTITY((64), ~ (~ (_GLF_IDENTITY((64), ((64)) | 0))))), 64)), 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(subgroup_local_id + _GLF_IDENTITY(1, min(1, 1)) < _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : (subgroup_size))) | (subgroup_size)), ~ (~ (subgroup_size)))) / 1u)))), min(subgroup_size, subgroup_size)), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), min(subgroup_size, subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), min(subgroup_size, subgroup_size)))))
  {
   atomicStore(checker[virtual_gid], read, _GLF_IDENTITY(4, (4) / 1), 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bvec3(bool(_GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(false, (false) && true), true)))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(false), bool(bvec3(bool(false), false, true))))), false || (! (bool(_GLF_IDENTITY(bool(false), bool(bvec3(bool(false), false, _GLF_IDENTITY(true, (true) && true)))))))), ! (! (! (bool(_GLF_IDENTITY(bool(false), bool(bvec3(bool(false), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (! (false)))))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (! (false)))))))), (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (! (false))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (! (false)))))))), (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (! (false))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (! (false)))))))), (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (! (false))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true), false))), false, true))))), true))))))))))), _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) || false))))), bool(bvec3((false), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), vec2(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0)) + (injectionSwitch)))).x < injectionSwitch.y))))) || false)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), false || (! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), false || ((false))))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (! ((_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! _GLF_IDENTITY(((false)), true && (((false)))))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), false, true, false)), ! (! (bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), true && ((false))))))), ! (! (! (! (_GLF_IDENTITY(false, ! (! (false))))))))), false, true, false))))), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))), true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))))))) || false), ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(7.7)), float(injectionSwitch.y), bool(true))))) || (false)))))))), false, _GLF_IDENTITY(true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)), true && (bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)), true && (bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)))), false))))))) || (true)), false)), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY(false, false || (false))), true, true)), true && (bool(bvec3(! (_GLF_IDENTITY(false, false || (false))), true, true)))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY(false, false || (false))), true, true)), true && (bool(bvec3(! (_GLF_IDENTITY(false, false || (false))), true, true)))), ! (! (_GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))), true, true)), true && (bool(bvec3(! (_GLF_IDENTITY(false, false || (false))), true, true)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (! (false))))), ! (! (! (! (_GLF_IDENTITY(false, ! (! (false))))))))), false, true, false)))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), false || (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (! ((_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! ((false)))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), false, true, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))))), ! (! (bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (! (false))))), ! _GLF_IDENTITY((! (! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(_GLF_IDENTITY(! (false), ! (! (! (false)))), true, true))))))))), bool(bvec4((! (! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(_GLF_IDENTITY(! (false), ! (! (! (false)))), true, true))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))), false, true, false))))), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))), true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))))))) || false), ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))))))), false, _GLF_IDENTITY(true, false || (true)), _GLF_IDENTITY(false, false || (false)))), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY(false, false || (false))), true, true)), (bool(bvec3(! (_GLF_IDENTITY(false, false || (false))), true, true))) || false), true && (bool(bvec3(! (_GLF_IDENTITY(false, false || (false))), true, true))))))), _GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (! (false))))), ! (! (! (! (_GLF_IDENTITY(false, ! (! (false)))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (! (false))))), (! (! (_GLF_IDENTITY(false, ! (! (false)))))) || false), ! (! (! (! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ((_GLF_IDENTITY(false, ! (! (false))))) && true))))))))), false, true, false)))))))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-3399.7579), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(63.59)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).x < injectionSwitch.y)))), true, true))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), false, true)), (bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), false, true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   subgroupAll(false);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || _GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), injectionSwitch)), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, log(1.0))), min(_GLF_IDENTITY(vec2(mat4(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), injectionSwitch)), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, log(1.0))), (false ? _GLF_FUZZED(vec2(-254.934, -4719.7513)) : vec2(mat4(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), injectionSwitch)), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, log(1.0))))), vec2(mat4(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), injectionSwitch)), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, log(1.0)))))).x > injectionSwitch.y)))), ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))) && true), ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))) || _GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) || false))), ((! (_GLF_IDENTITY(false, (false) || false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bool(false)))) && true)))))) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), (bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))) || false))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-368.785))), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(6.0)), bool(false))))))))))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), false)))) || false, false || ((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, true, true))), (false) && true), false)))) || false)))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, true)), (bool(bvec4(false, false, false, true))) || false))))
      barrier();
     barrier();
    }
   atomicStore(checker[_GLF_IDENTITY(virtual_gid, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (virtual_gid))], read, _GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec3(4, 0, 1), (false ? _GLF_FUZZED((injectionSwitch , ivec3(-29228, -45514, _GLF_IDENTITY(39207, (_GLF_IDENTITY(39207, (39207) | (39207))) | (_GLF_IDENTITY(39207, (false ? _GLF_FUZZED(39440) : 39207))))))) : ivec3(4, 0, 1))))), 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(true);
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))), true, false)), bvec3(bvec4(bvec3(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), true, false)), true))))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, true))))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), false || (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, _GLF_IDENTITY(dot(vec2(length(vec2(0.0, 0.0)), 1.0), vec2(0.0, 1.0)), dot(vec2(length(vec2(0.0, 0.0)), 1.0), vec2(0.0, 1.0))), 0.0)), clamp(_GLF_IDENTITY(vec2(mat2(injectionSwitch, _GLF_IDENTITY(dot(vec2(length(vec2(0.0, 0.0)), 1.0), vec2(0.0, 1.0)), dot(vec2(length(vec2(0.0, 0.0)), 1.0), vec2(0.0, 1.0))), 0.0)), mat2(1.0) * (vec2(mat2(injectionSwitch, _GLF_IDENTITY(dot(vec2(length(vec2(0.0, 0.0)), 1.0), vec2(0.0, 1.0)), dot(vec2(length(vec2(0.0, 0.0)), 1.0), vec2(0.0, 1.0))), 0.0)))), vec2(mat2(injectionSwitch, _GLF_IDENTITY(dot(vec2(length(vec2(0.0, 0.0)), 1.0), vec2(0.0, 1.0)), dot(vec2(length(vec2(0.0, 0.0)), 1.0), vec2(0.0, 1.0))), 0.0)), vec2(mat2(injectionSwitch, _GLF_IDENTITY(dot(vec2(length(vec2(0.0, 0.0)), 1.0), vec2(0.0, 1.0)), dot(vec2(length(vec2(0.0, 0.0)), 1.0), vec2(0.0, 1.0))), 0.0))))), min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) - 0.0)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))))).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))) * 1.0)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), bool(bvec4(! (_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), false, false, true)))))), ! (! (! (false))))))))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
