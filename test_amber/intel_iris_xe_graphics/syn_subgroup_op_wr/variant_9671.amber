#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uvec3 GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupsubgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uvec4 GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupsubgroup_id.z = subgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w = GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupsubgroup_id.z;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED((-44.37 - -27.39)), _GLF_FUZZED(-4.2)), bvec2(false, false))))).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4((false), false, true, false)), ! (! (bool(bvec4((false), false, true, false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), (false) || _GLF_IDENTITY(false, true && (false)))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, true))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), bool(bvec2(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), false)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))) || false))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(vec2(-38.53, 8.7).x)), float(injectionSwitch.x), bool(true))), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), true))), false, true)), bool(bool(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))), false, true)))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 0.0, 1.0, 1.0, sqrt(round(length(normalize(1.0)))), 1.0, 1.0, 1.0, 1.0, 0.0, sqrt(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), (false ? _GLF_FUZZED(mat4x3(8894.3215, 18.07, -276.439, -956.378, -7710.7703, 2.0, -2.5, 12.52, -6.9, -9.0, 7681.9837, -2.7)) : mat4x3(injectionSwitch, 0.0, 1.0, 1.0, sqrt(round(length(normalize(1.0)))), 1.0, 1.0, 1.0, 1.0, 0.0, sqrt(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))))))).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false, true)))) || false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups), _GLF_IDENTITY(clamp((gl_NumWorkGroups), (gl_NumWorkGroups), (gl_NumWorkGroups)), uvec3(0u, 0u, 0u) + (clamp((gl_NumWorkGroups), (gl_NumWorkGroups), (gl_NumWorkGroups))))) ^ uvec3(0u, 0u, 0u), (_GLF_IDENTITY((gl_NumWorkGroups), clamp((gl_NumWorkGroups), (gl_NumWorkGroups), (gl_NumWorkGroups))) ^ uvec3(0u, 0u, 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups), clamp((gl_NumWorkGroups), (gl_NumWorkGroups), (gl_NumWorkGroups))) ^ uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) >> 0u), 0u, 0u), (false ? _GLF_FUZZED(uvec3(50660u, 170079u, 91792u)) : _GLF_IDENTITY((gl_NumWorkGroups), clamp((gl_NumWorkGroups), (gl_NumWorkGroups), (gl_NumWorkGroups))) ^ uvec3(0u, 0u, 0u)))))).x, 1u * (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups), clamp((gl_NumWorkGroups), (gl_NumWorkGroups), (gl_NumWorkGroups))) ^ uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) ^ 0u), 0u, 0u))) ^ 0u), 0u), (_GLF_IDENTITY((gl_NumWorkGroups), clamp((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (gl_NumWorkGroups))), (gl_NumWorkGroups), (gl_NumWorkGroups))) ^ _GLF_IDENTITY(uvec3(0u, 0u, 0u), (_GLF_IDENTITY(uvec3(0u, 0u, 0u), (_GLF_IDENTITY(uvec3(0u, 0u, 0u), max(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u)))) + uvec3(0u, 0u, 0u))) - (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(_GLF_IDENTITY(uvec3(2u), uvec3(2u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(62759u, 134955u, 39552u)) : _GLF_IDENTITY(uvec3(2u), uvec3(2u))))))) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups), clamp((gl_NumWorkGroups), (gl_NumWorkGroups), (gl_NumWorkGroups))) ^ _GLF_IDENTITY(uvec3(0u, 0u, 0u), clamp(_GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(uvec3(uvec3(0u, 0u, 0u)))), _GLF_IDENTITY(uvec3(0u, 0u, 0u), clamp(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, 0u)))))), uvec3(0u, 0u, 0u))), (false ? _GLF_IDENTITY(_GLF_FUZZED(uvec3(50660u, 170079u, 91792u)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED(uvec3(50660u, 170079u, 91792u)), (false ? _GLF_FUZZED(uvec3(180732u, 90445u, 33203u)) : _GLF_FUZZED(uvec3(50660u, 170079u, 91792u))))) + uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED(uvec3(50660u, 170079u, 91792u)), (false ? _GLF_FUZZED(uvec3(180732u, 90445u, 33203u)) : _GLF_FUZZED(uvec3(50660u, 170079u, 91792u))))) + uvec3(0u, 0u, 0u), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED(uvec3(50660u, 170079u, 91792u)), (false ? _GLF_FUZZED(uvec3(180732u, 90445u, 33203u)) : _GLF_FUZZED(uvec3(50660u, 170079u, 91792u))))) + uvec3(0u, 0u, 0u), clamp((_GLF_IDENTITY(_GLF_FUZZED(uvec3(50660u, 170079u, 91792u)), (false ? _GLF_FUZZED(uvec3(180732u, 90445u, 33203u)) : _GLF_FUZZED(uvec3(50660u, 170079u, 91792u))))) + uvec3(0u, 0u, 0u), (_GLF_IDENTITY(_GLF_FUZZED(uvec3(50660u, 170079u, 91792u)), (false ? _GLF_FUZZED(uvec3(180732u, 90445u, 33203u)) : _GLF_FUZZED(uvec3(50660u, 170079u, 91792u))))) + uvec3(0u, 0u, 0u), (_GLF_IDENTITY(_GLF_FUZZED(uvec3(50660u, 170079u, 91792u)), (false ? _GLF_FUZZED(uvec3(180732u, 90445u, 33203u)) : _GLF_FUZZED(uvec3(50660u, 170079u, 91792u))))) + uvec3(0u, 0u, 0u)))) | ((_GLF_IDENTITY(_GLF_FUZZED(uvec3(50660u, 170079u, 91792u)), (false ? _GLF_FUZZED(uvec3(180732u, 90445u, 33203u)) : _GLF_FUZZED(uvec3(50660u, 170079u, 91792u))))) + uvec3(0u, 0u, 0u)))))) : _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(gl_NumWorkGroups, 0u)))), clamp((gl_NumWorkGroups), _GLF_IDENTITY((gl_NumWorkGroups), min(_GLF_IDENTITY((gl_NumWorkGroups), uvec3(0u, 0u, 0u) ^ ((gl_NumWorkGroups))), (gl_NumWorkGroups))), (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))) ^ uvec3(0u, _GLF_IDENTITY(0u, 1u * (0u)), 0u)))), (_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) / uvec3(1u, 1u, 1u)) >> _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) | (0u)), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) | (0u)), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) | (0u)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) | (0u))) | (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) | (0u))), max((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) | (0u))) | (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) | (0u))), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) | (0u))) | (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) | (0u))))), (false ? _GLF_FUZZED(subgroup_size) : (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) | (0u))) | (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) | (0u)))))), uint(_GLF_ONE(1.0, injectionSwitch.y)))))) / 1u)))), uvec3(0u))) ^ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups), clamp((gl_NumWorkGroups), (gl_NumWorkGroups), (gl_NumWorkGroups))) ^ uvec3(0u, 0u, 0u), (false ? _GLF_FUZZED(uvec3(50660u, 170079u, 91792u)) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])), uvec3(uvec4(gl_NumWorkGroups, 0u)))), clamp((gl_NumWorkGroups), (gl_NumWorkGroups), (gl_NumWorkGroups))) ^ uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups), clamp((gl_NumWorkGroups), (gl_NumWorkGroups), (gl_NumWorkGroups))) ^ uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) ^ 0u), 0u), (false ? _GLF_FUZZED(uvec3(50660u, 170079u, 91792u)) : _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(gl_NumWorkGroups, 0u)))), clamp((gl_NumWorkGroups), (gl_NumWorkGroups), (gl_NumWorkGroups))) ^ uvec3(0u, 0u, 0u)))) << uvec3(0u, 0u, 0u)), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups), clamp((gl_NumWorkGroups), (gl_NumWorkGroups), (gl_NumWorkGroups))) ^ uvec3(0u, 0u, 0u), (false ? _GLF_FUZZED(uvec3(50660u, 170079u, 91792u)) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])), uvec3(uvec4(gl_NumWorkGroups, 0u)))), clamp((gl_NumWorkGroups), (gl_NumWorkGroups), (gl_NumWorkGroups))) ^ uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups), clamp((gl_NumWorkGroups), (gl_NumWorkGroups), (gl_NumWorkGroups))) ^ uvec3(0u, 0u, 0u), (false ? _GLF_FUZZED(uvec3(50660u, 170079u, 91792u)) : _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(uvec4(gl_NumWorkGroups, 0u), (uvec4(gl_NumWorkGroups, 0u)) * uvec4(1u, 1u, 1u, 1u))))), clamp((gl_NumWorkGroups), (gl_NumWorkGroups), (gl_NumWorkGroups))) ^ uvec3(0u, 0u, 0u)))) << uvec3(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups), clamp((gl_NumWorkGroups), (gl_NumWorkGroups), (gl_NumWorkGroups))) ^ uvec3(0u, 0u, 0u), (false ? _GLF_FUZZED(uvec3(50660u, 170079u, 91792u)) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])), uvec3(uvec4(gl_NumWorkGroups, 0u)))), clamp((gl_NumWorkGroups), (gl_NumWorkGroups), (gl_NumWorkGroups))) ^ uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups), clamp((gl_NumWorkGroups), (gl_NumWorkGroups), (gl_NumWorkGroups))) ^ uvec3(0u, 0u, 0u), (false ? _GLF_FUZZED(uvec3(50660u, 170079u, 91792u)) : _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(gl_NumWorkGroups, 0u)))), clamp((gl_NumWorkGroups), (gl_NumWorkGroups), (gl_NumWorkGroups))) ^ uvec3(0u, 0u, 0u)))) << uvec3(0u, 0u, 0u))))), uvec3(_GLF_IDENTITY(uvec4((_GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups), clamp((gl_NumWorkGroups), (gl_NumWorkGroups), (gl_NumWorkGroups))) ^ uvec3(0u, 0u, 0u), (false ? _GLF_FUZZED(uvec3(50660u, 170079u, 91792u)) : _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(gl_NumWorkGroups, 0u)))), clamp((gl_NumWorkGroups), (gl_NumWorkGroups), (gl_NumWorkGroups))) ^ uvec3(0u, 0u, 0u)))), _GLF_IDENTITY(1u, (1u) | (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))), max(uvec4((_GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups), clamp(_GLF_IDENTITY((gl_NumWorkGroups), ((gl_NumWorkGroups)) ^ uvec3(0u, 0u, 0u)), (gl_NumWorkGroups), (gl_NumWorkGroups))) ^ uvec3(0u, 0u, 0u), (false ? _GLF_FUZZED(uvec3(50660u, 170079u, 91792u)) : _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(gl_NumWorkGroups, 0u)))), clamp((gl_NumWorkGroups), _GLF_IDENTITY((gl_NumWorkGroups), ((gl_NumWorkGroups)) - (uvec3(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))), (false ? _GLF_FUZZED(subgroup_id) : uint(uvec3(0u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))))) << _GLF_IDENTITY(uvec3(4u), _GLF_IDENTITY(uvec3(4u), min(uvec3(4u), uvec3(4u)))))), (gl_NumWorkGroups))) ^ uvec3(0u, 0u, 0u)))), 1u), uvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups), clamp((gl_NumWorkGroups), (gl_NumWorkGroups), (gl_NumWorkGroups))) ^ _GLF_IDENTITY(uvec3(0u, 0u, _GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec2(0u, 1u)), (uint(uvec2(0u, 1u))) - 0u)), max(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec2(0u, 1u)), (uint(uvec2(0u, 1u))) - 0u)), _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec2(0u, 1u)), (uint(uvec2(0u, 1u))) - 0u))))))), clamp(uvec3(0u, 0u, _GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec2(0u, 1u)), (uint(uvec2(0u, 1u))) - 0u)), max(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec2(0u, 1u)), (uint(uvec2(0u, 1u))) - 0u)), _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec2(0u, 1u)), (uint(uvec2(0u, 1u))) - 0u))))))), uvec3(0u, 0u, _GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec2(0u, 1u)), (uint(uvec2(0u, 1u))) - 0u)), max(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec2(0u, 1u)), (uint(uvec2(0u, 1u))) - 0u)), _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec2(0u, 1u)), (uint(uvec2(0u, 1u))) - 0u))))))), uvec3(0u, 0u, _GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec2(0u, 1u)), (uint(uvec2(0u, 1u))) - 0u)), max(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec2(0u, 1u)), (uint(uvec2(0u, 1u))) - 0u)), _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec2(0u, 1u)), (uint(uvec2(0u, 1u))) - 0u))))))))), (false ? _GLF_FUZZED(uvec3(50660u, 170079u, 91792u)) : _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(gl_NumWorkGroups, 0u)))), clamp((gl_NumWorkGroups), (gl_NumWorkGroups), (gl_NumWorkGroups))) ^ uvec3(0u, 0u, 0u)))), uvec3(uvec3((_GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups), clamp((gl_NumWorkGroups), (gl_NumWorkGroups), (_GLF_IDENTITY(gl_NumWorkGroups, (false ? _GLF_FUZZED(GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupsubgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups)))))))) ^ uvec3(0u, 0u, 0u), (false ? _GLF_FUZZED(uvec3(50660u, 170079u, 91792u)) : _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(gl_NumWorkGroups, 0u)))), (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u)) ^ ((_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(uvec4(gl_NumWorkGroups, 0u)), (uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, ~ (_GLF_IDENTITY(~ (gl_NumWorkGroups), (true ? ~ (gl_NumWorkGroups) : _GLF_FUZZED(GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupsubgroup_id))))), 0u))) / uvec3(1u, 1u, 1u)))))), _GLF_IDENTITY(clamp((gl_NumWorkGroups), (gl_NumWorkGroups), (gl_NumWorkGroups)), (_GLF_IDENTITY(clamp((gl_NumWorkGroups), (gl_NumWorkGroups), (gl_NumWorkGroups)), (true ? clamp((gl_NumWorkGroups), (gl_NumWorkGroups), (gl_NumWorkGroups)) : _GLF_FUZZED(uvec3(85414u, 46861u, 182132u))))) | (_GLF_IDENTITY(clamp((gl_NumWorkGroups), (gl_NumWorkGroups), (gl_NumWorkGroups)), max(clamp(_GLF_IDENTITY((gl_NumWorkGroups), uvec3(uvec3(_GLF_IDENTITY((gl_NumWorkGroups), uvec3(uvec4((gl_NumWorkGroups), 0u)))))), (gl_NumWorkGroups), (gl_NumWorkGroups)), clamp((gl_NumWorkGroups), (gl_NumWorkGroups), (gl_NumWorkGroups))))))) ^ uvec3(0u, 0u, 0u))))))), 1u))))))))).x));
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupsubgroup_id.y = num_workgroup;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-711.508)), vec2(_GLF_FUZZED(7.8), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch, injectionSwitch)).y)))) && true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.y = GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupsubgroup_id.y, (GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.y = GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupsubgroup_id.y) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / (((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(_GLF_IDENTITY(uvec3(7u), uvec3(0u, 0u, 0u) | (uvec3(7u))), uvec3(7u))) >> _GLF_IDENTITY(uvec3(7u), uvec3(7u))) ^ uvec3(0u, 0u, 0u)))) - uvec3(0u, 0u, 0u)).x, (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(0u, 0u, 0u)).x) / 1u);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, sqrt(0.0), exp(log(1.0)), 1.0))).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), bool(bool(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))) * (injectionSwitch.x)) > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))) * (injectionSwitch.x)) > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((false), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, bool(bvec4(true, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))) && true))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w * subgroup_size + _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), 1u * (subgroup_local_id)) : _GLF_FUZZED(uint(-0.5)), (_GLF_IDENTITY(true ? _GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id)) : _GLF_FUZZED(uint(-0.5)), min(true ? _GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id)) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(uint(-0.5)), (false ? _GLF_FUZZED(bitfieldExtract(num_workgroup, -43197, -33035)) : _GLF_FUZZED(_GLF_IDENTITY(uint(-0.5), 0u ^ (_GLF_IDENTITY(uint(-0.5), clamp(uint(-0.5), uint(-0.5), uint(-0.5)))))))), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(_GLF_FUZZED(uint(-0.5)), (false ? _GLF_FUZZED(bitfieldExtract(num_workgroup, -43197, -33035)) : _GLF_FUZZED(uint(-0.5)))))), (_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(_GLF_FUZZED(uint(-0.5)), (_GLF_IDENTITY(false ? _GLF_FUZZED(bitfieldExtract(num_workgroup, -43197, -33035)) : _GLF_FUZZED(uint(-0.5)), _GLF_IDENTITY((false ? _GLF_FUZZED(bitfieldExtract(num_workgroup, -43197, -33035)) : _GLF_FUZZED(uint(-0.5))) | (_GLF_IDENTITY(false ? _GLF_FUZZED(bitfieldExtract(num_workgroup, -43197, -33035)) : _GLF_FUZZED(uint(-0.5)), ~ (~ (false ? _GLF_FUZZED(bitfieldExtract(num_workgroup, -43197, -33035)) : _GLF_FUZZED(uint(-0.5)))))), max((false ? _GLF_FUZZED(bitfieldExtract(num_workgroup, -43197, -33035)) : _GLF_FUZZED(uint(-0.5))) | (_GLF_IDENTITY(false ? _GLF_FUZZED(bitfieldExtract(num_workgroup, -43197, -33035)) : _GLF_FUZZED(uint(-0.5)), ~ (~ (false ? _GLF_FUZZED(bitfieldExtract(num_workgroup, -43197, -33035)) : _GLF_FUZZED(uint(-0.5)))))), (false ? _GLF_FUZZED(bitfieldExtract(num_workgroup, -43197, -33035)) : _GLF_FUZZED(uint(-0.5))) | (_GLF_IDENTITY(false ? _GLF_FUZZED(bitfieldExtract(num_workgroup, -43197, -33035)) : _GLF_FUZZED(uint(-0.5)), ~ (~ (false ? _GLF_FUZZED(bitfieldExtract(num_workgroup, -43197, -33035)) : _GLF_FUZZED(uint(-0.5))))))))))))), max(uint(uint(_GLF_IDENTITY(_GLF_FUZZED(uint(-0.5)), (_GLF_IDENTITY(false ? _GLF_FUZZED(bitfieldExtract(num_workgroup, -43197, -33035)) : _GLF_FUZZED(uint(-0.5)), (false ? _GLF_FUZZED(bitfieldExtract(num_workgroup, -43197, -33035)) : _GLF_FUZZED(uint(-0.5))) | (_GLF_IDENTITY(false ? _GLF_FUZZED(bitfieldExtract(num_workgroup, -43197, -33035)) : _GLF_FUZZED(uint(-0.5)), ~ (~ (false ? _GLF_FUZZED(bitfieldExtract(_GLF_IDENTITY(num_workgroup, min(num_workgroup, num_workgroup)), -43197, -33035)) : _GLF_FUZZED(uint(-0.5))))))))))), uint(uint(_GLF_IDENTITY(_GLF_FUZZED(uint(-0.5)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(bitfieldExtract(num_workgroup, -43197, -33035)) : _GLF_FUZZED(uint(-0.5)), (false ? _GLF_FUZZED(bitfieldExtract(num_workgroup, -43197, -33035)) : _GLF_FUZZED(uint(-0.5))) | (_GLF_IDENTITY(false ? _GLF_FUZZED(bitfieldExtract(num_workgroup, -43197, -33035)) : _GLF_FUZZED(uint(-0.5)), ~ (~ (false ? _GLF_FUZZED(bitfieldExtract(num_workgroup, -43197, -33035)) : _GLF_FUZZED(uint(-0.5))))))), (_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(bitfieldExtract(_GLF_IDENTITY(num_workgroup, (num_workgroup) * 1u), -43197, -33035)) : _GLF_FUZZED(uint(-0.5)), (false ? _GLF_FUZZED(bitfieldExtract(num_workgroup, -43197, -33035)) : _GLF_FUZZED(uint(-0.5))) | (_GLF_IDENTITY(false ? _GLF_FUZZED(bitfieldExtract(num_workgroup, -43197, -33035)) : _GLF_FUZZED(uint(-0.5)), ~ (~ (false ? _GLF_FUZZED(bitfieldExtract(num_workgroup, -43197, -33035)) : _GLF_FUZZED(uint(-0.5))))))), clamp(_GLF_IDENTITY(false ? _GLF_FUZZED(bitfieldExtract(num_workgroup, -43197, -33035)) : _GLF_FUZZED(uint(-0.5)), (false ? _GLF_FUZZED(bitfieldExtract(num_workgroup, -43197, -33035)) : _GLF_FUZZED(uint(-0.5))) | (_GLF_IDENTITY(false ? _GLF_FUZZED(bitfieldExtract(num_workgroup, -43197, -33035)) : _GLF_FUZZED(uint(-0.5)), ~ (~ (false ? _GLF_FUZZED(bitfieldExtract(num_workgroup, -43197, -33035)) : _GLF_FUZZED(uint(-0.5))))))), _GLF_IDENTITY(false ? _GLF_FUZZED(bitfieldExtract(num_workgroup, -43197, -33035)) : _GLF_FUZZED(uint(-0.5)), (false ? _GLF_FUZZED(bitfieldExtract(num_workgroup, -43197, -33035)) : _GLF_FUZZED(uint(-0.5))) | (_GLF_IDENTITY(false ? _GLF_FUZZED(bitfieldExtract(num_workgroup, -43197, -33035)) : _GLF_FUZZED(uint(-0.5)), ~ (~ (false ? _GLF_FUZZED(bitfieldExtract(num_workgroup, -43197, -33035)) : _GLF_FUZZED(uint(-0.5))))))), _GLF_IDENTITY(false ? _GLF_FUZZED(bitfieldExtract(num_workgroup, -43197, -33035)) : _GLF_FUZZED(uint(-0.5)), (false ? _GLF_FUZZED(bitfieldExtract(num_workgroup, -43197, -33035)) : _GLF_FUZZED(uint(-0.5))) | (_GLF_IDENTITY(false ? _GLF_FUZZED(bitfieldExtract(num_workgroup, -43197, -33035)) : _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(uint(-0.5), (uint(-0.5)) / (1u | 1u)), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(uint(-0.5), (uint(-0.5)) / (1u | 1u)), (_GLF_IDENTITY(uint(-0.5), (uint(-0.5)) / (1u | 1u))) | 0u)))), ~ (~ (false ? _GLF_FUZZED(bitfieldExtract(num_workgroup, -43197, -33035)) : _GLF_FUZZED(uint(-0.5)))))))))) ^ 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(bitfieldExtract(num_workgroup, -43197, -33035)) : _GLF_FUZZED(uint(-0.5)), (false ? _GLF_FUZZED(bitfieldExtract(num_workgroup, -43197, -33035)) : _GLF_FUZZED(uint(-0.5))) | (_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(bitfieldExtract(num_workgroup, -43197, -33035)) : _GLF_FUZZED(uint(-0.5)), ~ (~ (false ? _GLF_FUZZED(bitfieldExtract(num_workgroup, -43197, -33035)) : _GLF_FUZZED(uint(-0.5))))), max(_GLF_IDENTITY(false ? _GLF_FUZZED(bitfieldExtract(num_workgroup, -43197, -33035)) : _GLF_FUZZED(uint(-0.5)), ~ (~ (false ? _GLF_FUZZED(bitfieldExtract(num_workgroup, -43197, -33035)) : _GLF_FUZZED(uint(-0.5))))), _GLF_IDENTITY(false ? _GLF_FUZZED(bitfieldExtract(num_workgroup, -43197, -33035)) : _GLF_FUZZED(uint(-0.5)), ~ (~ (false ? _GLF_FUZZED(bitfieldExtract(num_workgroup, -43197, -33035)) : _GLF_FUZZED(uint(-0.5))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(bitfieldExtract(num_workgroup, -43197, -33035), max(bitfieldExtract(num_workgroup, -43197, -33035), _GLF_IDENTITY(bitfieldExtract(num_workgroup, -43197, -33035), (bitfieldExtract(num_workgroup, -43197, -33035)) / ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))))))) : _GLF_FUZZED(uint(-0.5)), (false ? _GLF_FUZZED(bitfieldExtract(num_workgroup, -43197, -33035)) : _GLF_FUZZED(uint(-0.5))) | (_GLF_IDENTITY(false ? _GLF_FUZZED(bitfieldExtract(num_workgroup, -43197, -33035)) : _GLF_FUZZED(uint(-0.5)), ~ (~ (false ? _GLF_FUZZED(bitfieldExtract(num_workgroup, -43197, -33035)) : _GLF_FUZZED(uint(-0.5))))))), clamp(_GLF_IDENTITY(false ? _GLF_FUZZED(bitfieldExtract(num_workgroup, -43197, -33035)) : _GLF_FUZZED(uint(-0.5)), (false ? _GLF_FUZZED(bitfieldExtract(num_workgroup, -43197, -33035)) : _GLF_FUZZED(uint(-0.5))) | (_GLF_IDENTITY(false ? _GLF_FUZZED(bitfieldExtract(num_workgroup, -43197, -33035)) : _GLF_FUZZED(uint(-0.5)), ~ (~ (false ? _GLF_FUZZED(bitfieldExtract(num_workgroup, -43197, -33035)) : _GLF_FUZZED(uint(-0.5))))))), _GLF_IDENTITY(false ? _GLF_FUZZED(bitfieldExtract(num_workgroup, -43197, -33035)) : _GLF_FUZZED(uint(-0.5)), (false ? _GLF_FUZZED(bitfieldExtract(num_workgroup, -43197, -33035)) : _GLF_FUZZED(uint(-0.5))) | (_GLF_IDENTITY(false ? _GLF_FUZZED(bitfieldExtract(num_workgroup, -43197, _GLF_IDENTITY(-33035, (-33035) / 1))) : _GLF_FUZZED(uint(-0.5)), ~ (~ (false ? _GLF_FUZZED(bitfieldExtract(num_workgroup, -43197, -33035)) : _GLF_FUZZED(uint(-0.5))))))), _GLF_IDENTITY(false ? _GLF_FUZZED(bitfieldExtract(num_workgroup, -43197, -33035)) : _GLF_FUZZED(uint(-0.5)), (false ? _GLF_FUZZED(bitfieldExtract(num_workgroup, -43197, -33035)) : _GLF_FUZZED(uint(_GLF_IDENTITY(-0.5, clamp(-0.5, _GLF_IDENTITY(-0.5, float(mat3(_GLF_IDENTITY(-0.5, (-0.5) - 0.0), 1.0, 1.0, 0.0, 0.0, 1.0, abs(1.0), 1.0, 0.0))), -0.5))))) | (_GLF_IDENTITY(false ? _GLF_FUZZED(bitfieldExtract(num_workgroup, -43197, -33035)) : _GLF_FUZZED(uint(-0.5)), ~ (~ (false ? _GLF_FUZZED(bitfieldExtract(num_workgroup, -43197, -33035)) : _GLF_FUZZED(uint(-0.5)))))))))) ^ 0u), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(bitfieldExtract(num_workgroup, -43197, -33035)) : _GLF_FUZZED(uint(-0.5)), (false ? _GLF_FUZZED(bitfieldExtract(num_workgroup, -43197, -33035)) : _GLF_FUZZED(uint(-0.5))) | (_GLF_IDENTITY(false ? _GLF_FUZZED(bitfieldExtract(num_workgroup, -43197, -33035)) : _GLF_FUZZED(uint(-0.5)), ~ (~ (false ? _GLF_FUZZED(bitfieldExtract(num_workgroup, -43197, -33035)) : _GLF_FUZZED(uint(-0.5))))))), (_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(bitfieldExtract(num_workgroup, -43197, -33035)) : _GLF_FUZZED(uint(-0.5)), (false ? _GLF_FUZZED(bitfieldExtract(num_workgroup, -43197, -33035)) : _GLF_IDENTITY(_GLF_FUZZED(uint(-0.5)), (_GLF_IDENTITY(_GLF_FUZZED(uint(-0.5)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(36245u) : _GLF_FUZZED(uint(-0.5))))) / _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(workgroup_size) : 1u)))) | (_GLF_IDENTITY(false ? _GLF_FUZZED(bitfieldExtract(num_workgroup, -43197, _GLF_IDENTITY(-33035, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(-33035, (-33035) | (-33035))), min(~ (_GLF_IDENTITY(-33035, (-33035) | (-33035))), ~ (_GLF_IDENTITY(-33035, (-33035) | (-33035))))))))) : _GLF_FUZZED(uint(-0.5)), ~ (~ (false ? _GLF_FUZZED(bitfieldExtract(num_workgroup, -43197, -33035)) : _GLF_FUZZED(uint(-0.5))))))), clamp(_GLF_IDENTITY(false ? _GLF_FUZZED(bitfieldExtract(num_workgroup, -43197, -33035)) : _GLF_FUZZED(uint(-0.5)), (false ? _GLF_FUZZED(bitfieldExtract(num_workgroup, -43197, -33035)) : _GLF_FUZZED(uint(-0.5))) | (_GLF_IDENTITY(false ? _GLF_FUZZED(bitfieldExtract(num_workgroup, -43197, -33035)) : _GLF_FUZZED(uint(-0.5)), ~ (~ (false ? _GLF_FUZZED(bitfieldExtract(num_workgroup, -43197, -33035)) : _GLF_FUZZED(uint(-0.5))))))), _GLF_IDENTITY(false ? _GLF_FUZZED(bitfieldExtract(num_workgroup, -43197, -33035)) : _GLF_FUZZED(uint(-0.5)), (false ? _GLF_FUZZED(bitfieldExtract(num_workgroup, -43197, -33035)) : _GLF_FUZZED(uint(-0.5))) | (_GLF_IDENTITY(false ? _GLF_FUZZED(bitfieldExtract(num_workgroup, -43197, -33035)) : _GLF_FUZZED(uint(-0.5)), ~ (~ (false ? _GLF_FUZZED(bitfieldExtract(num_workgroup, -43197, -33035)) : _GLF_FUZZED(uint(-0.5))))))), _GLF_IDENTITY(false ? _GLF_FUZZED(bitfieldExtract(num_workgroup, -43197, -33035)) : _GLF_FUZZED(uint(-0.5)), (false ? _GLF_FUZZED(bitfieldExtract(num_workgroup, -43197, -33035)) : _GLF_FUZZED(uint(-0.5))) | (_GLF_IDENTITY(false ? _GLF_FUZZED(bitfieldExtract(num_workgroup, -43197, -33035)) : _GLF_FUZZED(uint(-0.5)), ~ (~ (false ? _GLF_FUZZED(bitfieldExtract(num_workgroup, -43197, -33035)) : _GLF_IDENTITY(_GLF_FUZZED(uint(-0.5)), max(_GLF_FUZZED(uint(-0.5)), _GLF_FUZZED(uint(-0.5)))))))))))) ^ 0u), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(bitfieldExtract(num_workgroup, _GLF_IDENTITY(-43197, max(_GLF_IDENTITY(-43197, clamp(-43197, -43197, -43197)), -43197)), -33035)) : _GLF_FUZZED(uint(-0.5)), (false ? _GLF_FUZZED(bitfieldExtract(_GLF_IDENTITY(num_workgroup, 0u + (num_workgroup)), -43197, -33035)) : _GLF_FUZZED(uint(-0.5))) | (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))) ? _GLF_FUZZED(bitfieldExtract(num_workgroup, -43197, -33035)) : _GLF_FUZZED(uint(-0.5)), ~ (~ (false ? _GLF_FUZZED(bitfieldExtract(num_workgroup, -43197, -33035)) : _GLF_FUZZED(uint(-0.5))))))), (_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(bitfieldExtract(num_workgroup, -43197, -33035)) : _GLF_FUZZED(uint(-0.5)), (false ? _GLF_FUZZED(bitfieldExtract(num_workgroup, -43197, -33035)) : _GLF_FUZZED(uint(-0.5))) | (_GLF_IDENTITY(false ? _GLF_FUZZED(bitfieldExtract(num_workgroup, -43197, -33035)) : _GLF_FUZZED(uint(-0.5)), ~ (~ (false ? _GLF_FUZZED(bitfieldExtract(num_workgroup, -43197, -33035)) : _GLF_FUZZED(uint(-0.5))))))), clamp(_GLF_IDENTITY(false ? _GLF_FUZZED(bitfieldExtract(num_workgroup, -43197, -33035)) : _GLF_FUZZED(uint(-0.5)), (_GLF_IDENTITY(false ? _GLF_FUZZED(bitfieldExtract(num_workgroup, -43197, -33035)) : _GLF_FUZZED(uint(-0.5)), (false ? _GLF_FUZZED(bitfieldExtract(num_workgroup, -43197, -33035)) : _GLF_FUZZED(uint(-0.5))) | (false ? _GLF_FUZZED(bitfieldExtract(num_workgroup, -43197, -33035)) : _GLF_FUZZED(uint(-0.5))))) | (_GLF_IDENTITY(false ? _GLF_FUZZED(bitfieldExtract(_GLF_IDENTITY(num_workgroup, (true ? num_workgroup : _GLF_FUZZED(subgroup_size))), -43197, -33035)) : _GLF_FUZZED(uint(-0.5)), ~ (~ (_GLF_IDENTITY(false ? _GLF_FUZZED(bitfieldExtract(num_workgroup, -43197, -33035)) : _GLF_FUZZED(uint(-0.5)), (false ? _GLF_FUZZED(subgroup_local_id) : false ? _GLF_FUZZED(bitfieldExtract(num_workgroup, -43197, -33035)) : _GLF_FUZZED(uint(-0.5))))))))), _GLF_IDENTITY(false ? _GLF_FUZZED(bitfieldExtract(num_workgroup, -43197, -33035)) : _GLF_FUZZED(uint(-0.5)), (false ? _GLF_FUZZED(bitfieldExtract(num_workgroup, -43197, -33035)) : _GLF_FUZZED(uint(-0.5))) | (_GLF_IDENTITY(false ? _GLF_FUZZED(bitfieldExtract(_GLF_IDENTITY(num_workgroup, max(_GLF_IDENTITY(num_workgroup, 0u | (num_workgroup)), _GLF_IDENTITY(num_workgroup, ~ _GLF_IDENTITY((~ (num_workgroup)), ~ (~ ((~ (num_workgroup)))))))), -43197, -33035)) : _GLF_FUZZED(uint(-0.5)), ~ (~ (false ? _GLF_FUZZED(bitfieldExtract(num_workgroup, -43197, -33035)) : _GLF_FUZZED(uint(-0.5))))))), _GLF_IDENTITY(false ? _GLF_FUZZED(bitfieldExtract(num_workgroup, -43197, -33035)) : _GLF_FUZZED(_GLF_IDENTITY(uint(-0.5), (false ? _GLF_FUZZED(subgroup_local_id) : uint(-0.5)))), (false ? _GLF_FUZZED(bitfieldExtract(num_workgroup, -43197, -33035)) : _GLF_FUZZED(uint(-0.5))) | (_GLF_IDENTITY(false ? _GLF_FUZZED(bitfieldExtract(num_workgroup, -43197, -33035)) : _GLF_FUZZED(uint(-0.5)), ~ (~ (false ? _GLF_FUZZED(bitfieldExtract(num_workgroup, -43197, -33035)) : _GLF_FUZZED(uint(-0.5)))))))))) ^ 0u))), 1u)))) >> 0u)))))))) - 0u)), _GLF_IDENTITY(true, bool(bvec2(true, false))) ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(1u * (subgroup_local_id), max(1u * (subgroup_local_id), 1u * (subgroup_local_id)))), _GLF_IDENTITY(0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(1u * (subgroup_local_id), max(1u * (subgroup_local_id), 1u * (subgroup_local_id)))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(1u * (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u)), max(1u * (subgroup_local_id), 1u * (subgroup_local_id)))), (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(1u * (subgroup_local_id), max(1u * (subgroup_local_id), 1u * (subgroup_local_id))))) >> 0u)) * 1u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, (1u) ^ 0u), 1u))) ^ (0u | 0u)) * (subgroup_local_id), max(1u * (subgroup_local_id), 1u * (subgroup_local_id)))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(1u * (subgroup_local_id), max(1u * (subgroup_local_id), 1u * (subgroup_local_id)))), (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(1u * _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | (_GLF_IDENTITY((subgroup_local_id), uint(uvec2(_GLF_IDENTITY((subgroup_local_id), min((subgroup_local_id), (subgroup_local_id))), 1u))))), max(1u * (subgroup_local_id), 1u * (subgroup_local_id))))) >> 0u)) * 1u)), (_GLF_IDENTITY(0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(1u * (subgroup_local_id), max(1u * (subgroup_local_id), 1u * (subgroup_local_id)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(1u * (subgroup_local_id), max(1u * (subgroup_local_id), 1u * (subgroup_local_id)))), (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(1u * (subgroup_local_id), max(1u * (subgroup_local_id), 1u * (subgroup_local_id))))) | (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(1u * (subgroup_local_id), max(1u * (subgroup_local_id), 1u * (subgroup_local_id)))))), (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(1u * (subgroup_local_id), max(1u * (subgroup_local_id), 1u * (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uint(subgroup_local_id)), min(uint(uint(subgroup_local_id)), uint(uint(subgroup_local_id)))))))))) >> 0u)) * 1u)), (0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(1u * (subgroup_local_id), max(1u * (subgroup_local_id), 1u * (subgroup_local_id)))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(1u * (subgroup_local_id), max(1u * (subgroup_local_id), 1u * (subgroup_local_id)))), (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(1u * (subgroup_local_id), max(1u * (subgroup_local_id), 1u * (subgroup_local_id))))) >> 0u)) * 1u))) - 0u)) << 0u)), (~ (_GLF_IDENTITY(0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(1u * (subgroup_local_id), max(1u * (subgroup_local_id), 1u * (subgroup_local_id)))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(1u * (subgroup_local_id), max(1u * (subgroup_local_id), 1u * (subgroup_local_id)))), (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(1u * (subgroup_local_id), max(1u * (subgroup_local_id), 1u * (subgroup_local_id))))) >> 0u)) * 1u)), _GLF_IDENTITY((_GLF_IDENTITY(0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(1u * (subgroup_local_id), max(1u * (subgroup_local_id), 1u * (subgroup_local_id)))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(1u * (subgroup_local_id), max(1u * (subgroup_local_id), 1u * (subgroup_local_id)))), (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(1u * (subgroup_local_id), max(1u * (subgroup_local_id), 1u * (subgroup_local_id))))) >> 0u)) * 1u)), (0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(1u * (subgroup_local_id), max(1u * (subgroup_local_id), 1u * (subgroup_local_id)))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(1u * (subgroup_local_id), max(1u * (subgroup_local_id), 1u * (subgroup_local_id)))), (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(1u * (subgroup_local_id), max(1u * (subgroup_local_id), 1u * (subgroup_local_id))))) >> 0u)) * 1u))) - 0u)) << 0u, (_GLF_IDENTITY((_GLF_IDENTITY(0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(1u * (subgroup_local_id), max(1u * (subgroup_local_id), 1u * (subgroup_local_id)))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(1u * (subgroup_local_id), max(1u * (subgroup_local_id), 1u * (subgroup_local_id)))), (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(1u * (subgroup_local_id), max(1u * (subgroup_local_id), 1u * (subgroup_local_id))))) >> 0u)) * 1u)), (0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(1u * (subgroup_local_id), max(1u * (subgroup_local_id), 1u * (subgroup_local_id)))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(1u * (subgroup_local_id), max(1u * (subgroup_local_id), 1u * (subgroup_local_id)))), (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(1u * (subgroup_local_id), max(1u * (subgroup_local_id), 1u * (subgroup_local_id))))) >> 0u)) * 1u))) - 0u)) << 0u, min((_GLF_IDENTITY(0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(1u * (subgroup_local_id), max(1u * (subgroup_local_id), 1u * (subgroup_local_id)))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(1u * (subgroup_local_id), max(1u * (subgroup_local_id), 1u * (subgroup_local_id)))), (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(1u * (subgroup_local_id), max(1u * (subgroup_local_id), 1u * (subgroup_local_id))))) >> 0u)) * 1u)), (0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(1u * (subgroup_local_id), max(1u * (subgroup_local_id), 1u * (subgroup_local_id)))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(1u * (subgroup_local_id), max(1u * (subgroup_local_id), 1u * (subgroup_local_id)))), (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(1u * (subgroup_local_id), max(1u * (subgroup_local_id), 1u * (subgroup_local_id))))) >> 0u)) * 1u))) - 0u)) << 0u, (_GLF_IDENTITY(0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(1u * (subgroup_local_id), max(1u * (subgroup_local_id), 1u * (subgroup_local_id)))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(1u * (subgroup_local_id), max(1u * (subgroup_local_id), 1u * (subgroup_local_id)))), (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(1u * (subgroup_local_id), max(1u * (subgroup_local_id), 1u * (subgroup_local_id))))) >> 0u)) * 1u)), (0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(1u * (subgroup_local_id), max(1u * (subgroup_local_id), 1u * (subgroup_local_id)))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(1u * (subgroup_local_id), max(1u * (subgroup_local_id), 1u * (subgroup_local_id)))), (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(1u * (subgroup_local_id), max(1u * (subgroup_local_id), 1u * (subgroup_local_id))))) >> 0u)) * 1u))) - 0u)) << 0u))) | (_GLF_IDENTITY((_GLF_IDENTITY(0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(1u * (subgroup_local_id), max(1u * (subgroup_local_id), 1u * (subgroup_local_id)))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(1u * (subgroup_local_id), max(1u * (subgroup_local_id), 1u * (subgroup_local_id)))), (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(1u * (subgroup_local_id), max(1u * (subgroup_local_id), 1u * (subgroup_local_id))))) >> 0u)) * 1u)), (0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(1u * (subgroup_local_id), max(1u * (subgroup_local_id), 1u * (subgroup_local_id)))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(1u * (subgroup_local_id), max(1u * (subgroup_local_id), 1u * (subgroup_local_id)))), (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(1u * (subgroup_local_id), max(1u * (subgroup_local_id), 1u * (subgroup_local_id))))) >> 0u)) * 1u))) - 0u)) << 0u, max((_GLF_IDENTITY(0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(1u * (subgroup_local_id), max(1u * (subgroup_local_id), 1u * (subgroup_local_id)))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(1u * (subgroup_local_id), max(1u * (subgroup_local_id), 1u * (subgroup_local_id)))), (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(1u * (subgroup_local_id), max(1u * (subgroup_local_id), 1u * (subgroup_local_id))))) >> 0u)) * 1u)), (0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(1u * (subgroup_local_id), max(1u * (subgroup_local_id), 1u * (subgroup_local_id)))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(1u * (subgroup_local_id), max(1u * (subgroup_local_id), 1u * (subgroup_local_id)))), (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(1u * (subgroup_local_id), max(1u * (subgroup_local_id), 1u * (subgroup_local_id))))) >> 0u)) * 1u))) - 0u)) << 0u, (_GLF_IDENTITY(0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(1u * (subgroup_local_id), max(1u * (subgroup_local_id), 1u * (subgroup_local_id)))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(1u * (subgroup_local_id), max(1u * (subgroup_local_id), 1u * (subgroup_local_id)))), (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(1u * (subgroup_local_id), max(1u * (subgroup_local_id), 1u * (subgroup_local_id))))) >> 0u)) * 1u)), (0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(1u * (subgroup_local_id), max(1u * (subgroup_local_id), 1u * (subgroup_local_id)))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(1u * (subgroup_local_id), max(1u * (subgroup_local_id), 1u * (subgroup_local_id)))), (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(1u * (subgroup_local_id), max(1u * (subgroup_local_id), 1u * (subgroup_local_id))))) >> 0u)) * 1u))) - 0u)) << 0u))))))) << 0u)))) : _GLF_IDENTITY(_GLF_FUZZED(uint(-0.5)), 0u + (_GLF_IDENTITY(_GLF_FUZZED(uint(-0.5)), 0u + (_GLF_IDENTITY(_GLF_FUZZED(uint(-0.5)), clamp(_GLF_IDENTITY(_GLF_FUZZED(uint(-0.5)), (_GLF_FUZZED(uint(-0.5))) | (_GLF_FUZZED(uint(-0.5)))), _GLF_FUZZED(uint(-0.5)), _GLF_FUZZED(uint(-0.5))))))))))) - _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(num_workgroup)))) | 0u))));
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, false)))) && true))))) || false), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5.4), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_FUZZED(408.343)), vec2(_GLF_FUZZED(34.25), ((injectionSwitch))[1]), bvec2(false, true))), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * exp(vec2(0.0, 0.0))), (injectionSwitch)))[0], _GLF_FUZZED(9906.5462)), bvec2(true, _GLF_IDENTITY(false, (false) && true)))).y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))) && true))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false)), _GLF_IDENTITY(false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false, false, false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 uint next_virtual_gid = workgroup_base + GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 _GLF_IDENTITY(GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupsubgroup_id.x = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, uint(uvec3(next_virtual_gid, _GLF_IDENTITY(1u, uint(uvec4(1u, 0u, 0u, 1u))), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(float(injectionSwitch.x)), min(float(float(injectionSwitch.x)), float(float(injectionSwitch.x)))))))))))), _GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, uint(uvec3(next_virtual_gid, _GLF_IDENTITY(1u, uint(uvec4(1u, 0u, 0u, 1u))), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(float(injectionSwitch.x)), min(float(float(injectionSwitch.x)), float(_GLF_IDENTITY(float(injectionSwitch.x), 1.0 * (float(injectionSwitch.x))))))))))))))) >> 0u, 1u * ((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, uint(uvec3(next_virtual_gid, _GLF_IDENTITY(1u, uint(uvec4(1u, 0u, 0u, 1u))), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(float(injectionSwitch.x)), min(float(float(injectionSwitch.x)), float(_GLF_IDENTITY(float(injectionSwitch.x), 1.0 * (float(injectionSwitch.x))))))))))))))) >> 0u))), (_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, uint(uvec3(next_virtual_gid, _GLF_IDENTITY(1u, min(1u, 1u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))) | 0u), _GLF_IDENTITY((GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupsubgroup_id.x = _GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, uint(uvec3(next_virtual_gid, _GLF_IDENTITY(1u, uint(uvec4(1u, 0u, 0u, 1u))), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(float(injectionSwitch.x)), min(float(float(injectionSwitch.x)), float(float(injectionSwitch.x)))))))))))), (_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(min(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, uint(uvec3(next_virtual_gid, _GLF_IDENTITY(1u, min(1u, 1u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), (_GLF_IDENTITY(min(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, uint(uvec3(next_virtual_gid, _GLF_IDENTITY(1u, min(1u, 1u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), 1u * (min(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, uint(uvec3(next_virtual_gid, _GLF_IDENTITY(1u, min(1u, 1u)), uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))) * 1u))) | 0u)), 0u ^ ((GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupsubgroup_id.x = _GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, uint(uvec3(next_virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(1u, uint(uvec4(1u, 0u, 0u, 1u))), min(_GLF_IDENTITY(1u, uint(uvec4(1u, 0u, 0u, 1u))), _GLF_IDENTITY(_GLF_IDENTITY(1u, uint(uvec4(1u, 0u, 0u, 1u))), (_GLF_IDENTITY(1u, uint(uvec4(1u, 0u, 0u, 1u)))) | (_GLF_IDENTITY(1u, uint(uvec4(1u, 0u, 0u, 1u))))))), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(float(injectionSwitch.x)), min(float(float(injectionSwitch.x)), float(float(injectionSwitch.x)))))))))))), (_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(uint(uvec3(next_virtual_gid, _GLF_IDENTITY(1u, min(1u, 1u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (uint(uvec3(next_virtual_gid, _GLF_IDENTITY(1u, min(1u, 1u)), uint(_GLF_ZERO(0.0, injectionSwitch.x))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) | 0u)))) ^ 0u);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.x = GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupsubgroup_id.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 atomicStore(buf[GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.x], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint read = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) + 0), 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.z = read;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), ! (! (bool(bool(_GLF_DEAD(false))))))))
  barrier();
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   atomicStore(checker[virtual_gid], GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.z, 4, _GLF_IDENTITY(64, clamp(64, 64, 64)), 4);
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), (false ? _GLF_IDENTITY(_GLF_FUZZED((-5.6 + 5595.8424)), min(_GLF_FUZZED((-5.6 + 5595.8424)), _GLF_FUZZED((-5.6 + 5595.8424)))) : _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)))) > injectionSwitch.y))))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), (false ? _GLF_IDENTITY(_GLF_FUZZED((-5.6 + 5595.8424)), min(_GLF_FUZZED((-5.6 + 5595.8424)), _GLF_FUZZED((-5.6 + 5595.8424)))) : _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)))) > injectionSwitch.y))))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), (false ? _GLF_IDENTITY(_GLF_FUZZED((-5.6 + 5595.8424)), min(_GLF_FUZZED((-5.6 + 5595.8424)), _GLF_FUZZED((-5.6 + 5595.8424)))) : _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)))) > injectionSwitch.y))))), false || ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), (false ? _GLF_IDENTITY(_GLF_FUZZED((-5.6 + 5595.8424)), min(_GLF_FUZZED((-5.6 + 5595.8424)), _GLF_FUZZED((-5.6 + 5595.8424)))) : _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)))) > injectionSwitch.y))))))), true, false, true))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, _GLF_IDENTITY(true, bool(bvec3(true, false, true)))))))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))), ! (_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 else
  {
   atomicStore(checker[virtual_gid], GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.z, _GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) - 0), 4, 4)), _GLF_IDENTITY(_GLF_IDENTITY(64, int(int(64))), (64) * 1), 4);
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (false) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   subgroupAll(true);
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
