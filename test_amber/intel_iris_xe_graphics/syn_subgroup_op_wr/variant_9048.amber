#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_1 {
 mat3x4 _f0;
 ivec2 _f1;
 vec4 _f2;
 uvec3 _f3;
 bvec4 _f4;
 mat4 _f5;
 bvec2 _f6;
} ;

struct _GLF_struct_2 {
 vec2 _f0;
 mat4x2 _f1;
 mat2 _f2;
 _GLF_struct_1 _f3;
} ;

struct _GLF_struct_0 {
 mat4x3 _f0;
} ;

struct _GLF_struct_3 {
 mat3x2 _f0;
 uint virtual_gid;
 bool _f1;
 _GLF_struct_0 _f2;
 _GLF_struct_2 _f3;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 do
  {
   if(_GLF_DEAD(false))
    break;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    continue;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
           break;
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             return;
            }
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
       do
        {
         if(_GLF_DEAD(false))
          {
           do
            {
             if(_GLF_DEAD(false))
              continue;
             barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                break;
               continue;
              }
            }
           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, true))), true, false)))))));
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           return;
          }
        }
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      continue;
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        break;
       barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false, _GLF_IDENTITY(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false, false)), (bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false, false))) || false)))))
    break;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), true && (bool(bvec2(_GLF_DEAD(false), false))))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 for(int _injected_loop_counter = (26137 & 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            return;
           return;
          }
        }
       do
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))
      break;
     break;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     continue;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    continue;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         barrier();
        }
      }
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         break;
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(false))
        {
         do
          {
           do
            {
             if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false)))))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
              }
             else
              {
               barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
      continue;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))
    break;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      continue;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      break;
     for(int _injected_loop_counter = ((((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))) << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) | (int(3))))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) - int(_GLF_ZERO(0.0, injectionSwitch.x))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          continue;
         break;
        }
       continue;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true)))))))
    {
     for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       do
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))), (! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))))) || false)))))
            continue;
           barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, true && (true)) && (_GLF_IDENTITY(false, true && (false))))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 ^ 1)); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)))))
            break;
           do
            {
             return;
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, false, false, true)), (bool(bvec4(false, false, false, true))) || false), (_GLF_IDENTITY(bool(bvec4(false, false, false, true)), _GLF_IDENTITY((bool(bvec4(false, false, false, true))), false || ((bool(bvec4(false, false, false, true))))) || false)) && true), false || (bool(bvec4(false, false, false, true)))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bvec2(true, true))) && (false))))
            {
            }
           else
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)))); _injected_loop_counter ++)
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                continue;
               do
                {
                 for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                  {
                   if(_GLF_DEAD(false))
                    continue;
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
              }
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              continue;
             barrier();
            }
          }
         if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
          continue;
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       break;
      }
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), bool(bvec4(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), true, true, false)))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), ! (! (bool(bvec4(false, false, true, false)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y))))
            break;
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(false))
              break;
            }
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (false) || false))), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
            return;
           return;
          }
         barrier();
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           return;
          }
         else
          {
           if(_GLF_DEAD(false))
            return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              continue;
             return;
            }
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(2, _GLF_IDENTITY((2) | (2), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((2) | (2), 0 ^ ((2) | (2)))), int(ivec4(~ (_GLF_IDENTITY((2) | (2), 0 ^ ((2) | (2)))), 1, 0, (0 << _GLF_IDENTITY(int(8), int(8)))))))))), int(2)))); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_IDENTITY(false, ! (! (false))))))));
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
    }
   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))));
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        barrier();
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
       if(_GLF_DEAD(false))
        continue;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))).y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    return;
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
             return;
            }
          }
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_DEAD(false))
            continue;
          }
         else
          {
           return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
          }
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 _GLF_struct_3 _GLF_struct_replacement_3 = _GLF_struct_3(mat3x2(1.0), workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, true, _GLF_struct_0(mat4x3(1.0)), _GLF_struct_2(vec2(1.0), mat4x2(1.0), mat2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)), 0.0 + (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0))))), _GLF_struct_1(mat3x4(1.0), ivec2(1), vec4(1.0), uvec3(1u), bvec4(true), mat4(1.0), bvec2(true))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     barrier();
    }
   for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec2(! ((injectionSwitch.x > injectionSwitch.y)), true))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, 0.0, 0.0))), 0.0 + (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(_GLF_IDENTITY(9035.3989, mix(float(_GLF_FUZZED(90.29)), float(9035.3989), bool(true))))), float(injectionSwitch.y), bool(true)))))))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))).y) || false))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(smoothstep(-6452.1287, 3.8, injectionSwitch)) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))) || false), _GLF_IDENTITY(true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
              continue;
             continue;
            }
           barrier();
          }
         do
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        continue;
       for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), true && (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1))); _injected_loop_counter ++)
        {
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          break;
         barrier();
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          continue;
        }
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      continue;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), true && (bool(bvec3(false, true, false)))))) || false)))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       barrier();
      }
     else
      {
      }
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
       do
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           continue;
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)) : _GLF_FUZZED(_GLF_IDENTITY(smoothstep(7.1, -7.2, vec2(-60.28, 7.0)), (true ? smoothstep(7.1, -7.2, vec2(-60.28, 7.0)) : _GLF_FUZZED(pow(acos(vec2(8.6, 2.9)), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED((4.3)), _GLF_FUZZED(-17.60)), bvec2(false, false)))))))))).x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(vec2(-4.7, 6.3)), mix(vec2((true ? injectionSwitch : _GLF_FUZZED(vec2(-4.7, 6.3)))[0], _GLF_FUZZED(6.9)), vec2(_GLF_FUZZED(-5.6), (true ? injectionSwitch : _GLF_FUZZED(vec2(-4.7, 6.3)))[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))).x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, true))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))))))))))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       barrier();
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, false))))
          return;
        }
      }
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, uint(uvec4(workgroup_base, 0u, 1u, 0u))) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(workgroup_base))) * subgroup_size, (subgroup_id * subgroup_size) | 0u) + _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, 1u, 0u)))))) % subgroup_size), (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id))) - 0u) + _GLF_IDENTITY(1, (1) | 0), 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, 1u, 0u))), min(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id))) - 0u) + _GLF_IDENTITY(1, (1) | 0), 1u, 0u), (uvec3(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id))) - 0u) + _GLF_IDENTITY(1, (1) | 0), 1u, 0u)) | (uvec3(91555u, 53509u, 152749u) & uvec3(0u, 0u, 0u))), min(uvec3(subgroup_local_id + _GLF_IDENTITY(1, 0 + (1)), 1u, 0u), uvec3(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))))), 1u, 0u))), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id))) - 0u) + _GLF_IDENTITY(1, (1) | 0), (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id))) - 0u) + _GLF_IDENTITY(1, (1) | 0)) | (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id))) - 0u) + _GLF_IDENTITY(1, (1) | 0))), 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)), subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u))))) + 1, 1u, 0u)))))))) % subgroup_size), _GLF_IDENTITY(clamp(((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) ^ 0), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_local_id) : 1u)), 1u, 1u))))), 0u), min(uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_local_id) : 1u)), 1u, 1u))))), 0u), _GLF_IDENTITY(uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (_GLF_FUZZED(subgroup_local_id)) + uint(_GLF_ZERO(0.0, injectionSwitch.x))) : 1u)), 1u, 1u))))), 0u), uvec3(uvec3(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uint(1u)), 0u ^ (uint(uint(1u))))))), 1u, 1u))))), 0u), (uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_local_id) : 1u)), 1u, 1u))))), 0u)) - uvec3(0u, 0u, 0u))))))), uvec3(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u)) / ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u)))) + 1, 1u, 0u))), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_local_id) : 1u)), 1u, 1u))))), 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, (1u) | 0u), 0u)))))))) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(subgroup_size, (subgroup_size) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))) >> 0u)), ((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, 1u, 0u)))))) % subgroup_size), _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(57584) : 1)), _GLF_IDENTITY(1, ~ (~ (1))), 1)), _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec2(1u, (0u ^ 1u))), (uint(uvec2(1u, (0u ^ 1u)))) >> 0u)), 0u)))), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec2(1u, (0u ^ 1u))), (_GLF_IDENTITY(uint(uvec2(1u, (0u ^ 1u))), (false ? _GLF_FUZZED(subgroup_id) : uint(uvec2(1u, (0u ^ 1u)))))) >> _GLF_IDENTITY(0u, (0u) << 0u))), 0u)))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec2(1u, (0u ^ 1u))), (uint(uvec2(1u, (0u ^ 1u)))) >> 0u)), 0u)))), (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1))))), 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec2(1u, _GLF_IDENTITY((0u ^ 1u), ((0u ^ 1u)) << 0u))), (uint(uvec2(1u, (0u ^ 1u)))) >> 0u)), 0u))))) ^ 0u)) ^ 0u), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), _GLF_IDENTITY(uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec2(1u, (0u ^ 1u))), (uint(uvec2(1u, (0u ^ 1u)))) >> 0u)), 0u), clamp(uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec2(1u, (0u ^ 1u))), (uint(uvec2(1u, (0u ^ 1u)))) >> 0u)), 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec2(1u, (0u ^ 1u))), (uint(uvec2(1u, (0u ^ 1u)))) >> 0u)), 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec2(1u, (0u ^ 1u))), (uint(uvec2(1u, (0u ^ 1u)))) >> 0u)), 0u)))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)), 1u, _GLF_IDENTITY(0u, max(0u, 0u))), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(1u, (0u ^ 1u)), (_GLF_IDENTITY(uvec2(1u, (0u ^ 1u)), (uvec2(1u, (0u ^ 1u))) << uvec2(0u, 0u))) / uvec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))), (uint(uvec2(1u, (0u ^ 1u)))) >> 0u)), 0u)))), 0u + (uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec2(1u, _GLF_IDENTITY((0u ^ 1u), ((0u ^ 1u)) - 0u))), (uint(uvec2(_GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, (1u) | (1u)))), (0u ^ 1u)))) >> 0u)), 0u))))))) << 0u))))) % subgroup_size), _GLF_IDENTITY(_GLF_IDENTITY(1u * (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u)))))) % subgroup_size), max(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u)))))) % subgroup_size), (((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u)))))) % subgroup_size)) / 1u), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u)))))) % subgroup_size), min(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u)))))) % subgroup_size), (((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u)))))) % subgroup_size)) * 1u), ((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u)))))) % subgroup_size)))))), min(1u * ((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u)))))), _GLF_IDENTITY(uint(uint((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u)))))))), (uint(uint((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u))))))))) | (uint(uint((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u))))))))))) % subgroup_size)), _GLF_IDENTITY(1u * (((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)) + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u)))))) % subgroup_size)), 0u + (1u * (((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u)))))) % subgroup_size)))))), (_GLF_IDENTITY(_GLF_IDENTITY(1u * (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u)))))) % subgroup_size), max(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u)))))) % subgroup_size), (((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u)))))) % subgroup_size)) / 1u), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u)))))) % subgroup_size), min(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u)))))) % subgroup_size), (((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u)))))) % subgroup_size)) * 1u), ((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u)))))) % subgroup_size)))))), min(1u * ((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u)))))), _GLF_IDENTITY(uint(uint((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u)))))))), (uint(uint((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u))))))))) | (uint(uint((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u))))))))))) % subgroup_size)), _GLF_IDENTITY(1u * (((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)) + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u)))))) % subgroup_size)), 0u + (1u * (((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u)))))) % subgroup_size)))))), min(_GLF_IDENTITY(_GLF_IDENTITY(1u * (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u)))))) % subgroup_size), max(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u)))))) % subgroup_size), (((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u)))))) % subgroup_size)) / 1u), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u)))))) % subgroup_size), min(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u)))))) % subgroup_size), (((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u)))))) % subgroup_size)) * 1u), ((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u)))))) % subgroup_size)))))), min(1u * ((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u)))))), _GLF_IDENTITY(uint(uint((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u)))))))), (uint(uint((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u))))))))) | (uint(uint((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u))))))))))) % subgroup_size)), _GLF_IDENTITY(1u * (((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)) + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u)))))) % subgroup_size)), 0u + (1u * (((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u)))))) % subgroup_size)))))), min(_GLF_IDENTITY(1u * (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u)))))) % subgroup_size), max(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u)))))) % subgroup_size), (((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u)))))) % subgroup_size)) / 1u), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u)))))) % subgroup_size), min(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u)))))) % subgroup_size), (((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u)))))) % subgroup_size)) * 1u), ((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u)))))) % subgroup_size)))))), min(1u * ((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u)))))), _GLF_IDENTITY(uint(uint((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u)))))))), (uint(uint((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u))))))))) | (uint(uint((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u))))))))))) % subgroup_size)), _GLF_IDENTITY(1u * (((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)) + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u)))))) % subgroup_size)), 0u + (1u * (((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u)))))) % subgroup_size)))))), _GLF_IDENTITY(1u * (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u)))))) % subgroup_size), max(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u)))))) % subgroup_size), (((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u)))))) % subgroup_size)) / 1u), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u)))))) % subgroup_size), min(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u)))))) % subgroup_size), (((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u)))))) % subgroup_size)) * 1u), ((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u)))))) % subgroup_size)))))), min(1u * ((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u)))))), _GLF_IDENTITY(uint(uint((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u)))))))), (uint(uint((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u))))))))) | (uint(uint((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u))))))))))) % subgroup_size)), _GLF_IDENTITY(1u * (((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)) + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u)))))) % subgroup_size)), 0u + (1u * (((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u)))))) % subgroup_size)))))))), _GLF_IDENTITY(1u * (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u)))))) % subgroup_size), max(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u)))))) % subgroup_size), (((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u)))))) % subgroup_size)) / 1u), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u)))))) % subgroup_size), min(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u)))))) % subgroup_size), (((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u)))))) % subgroup_size)) * 1u), ((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u)))))) % subgroup_size)))))), min(1u * ((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u)))))), _GLF_IDENTITY(uint(uint((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u)))))))), (uint(uint((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u))))))))) | (uint(uint((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u))))))))))) % subgroup_size)), _GLF_IDENTITY(1u * (((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)) + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u)))))) % subgroup_size)), 0u + (1u * (((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u)))))) % subgroup_size))))))))) ^ 0u)), (0u & 158939u) + (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(57584) : 1)), _GLF_IDENTITY(1, ~ (~ (1))), 1)), _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec2(1u, (0u ^ 1u))), (uint(uvec2(1u, (0u ^ 1u)))) >> 0u)), 0u)))), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) ^ 0u)) | 0u), 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec2(1u, (0u ^ 1u))), (_GLF_IDENTITY(uint(uvec2(1u, (0u ^ 1u))), (false ? _GLF_FUZZED(subgroup_id) : uint(uvec2(1u, (0u ^ 1u)))))) >> _GLF_IDENTITY(0u, (0u) << 0u))), 0u)))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec2(1u, (0u ^ 1u))), (uint(uvec2(1u, (0u ^ 1u)))) >> 0u)), 0u)))), (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1))))), 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(subgroup_id) : subgroup_local_id)) + 1, _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec2(1u, _GLF_IDENTITY((0u ^ 1u), _GLF_IDENTITY(((_GLF_IDENTITY(0u ^ 1u, (0u ^ 1u) + 0u))), (false ? _GLF_FUZZED(atomicXor(workgroup_size, workgroup_size)) : _GLF_IDENTITY(((_GLF_IDENTITY(0u ^ 1u, (0u ^ 1u) + 0u))), (0u >> _GLF_IDENTITY(uint(3u), uint(3u))) | (((_GLF_IDENTITY(0u ^ 1u, (0u ^ 1u) + 0u))))))) << 0u))), (uint(_GLF_IDENTITY(uvec2(1u, (0u ^ 1u)), clamp(_GLF_IDENTITY(uvec2(1u, (0u ^ 1u)), uvec2(_GLF_IDENTITY(uvec2(uvec2(1u, (0u ^ 1u))), uvec2(1u, 1u) * (uvec2(uvec2(1u, (0u ^ 1u))))))), uvec2(1u, (0u ^ 1u)), uvec2(1u, (0u ^ 1u)))))) >> 0u)), 0u))))) ^ 0u)) ^ 0u), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), _GLF_IDENTITY(uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec2(1u, (0u ^ 1u))), (uint(uvec2(1u, (0u ^ 1u)))) >> 0u)), 0u), clamp(uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec2(1u, (0u ^ 1u))), _GLF_IDENTITY((uint(uvec2(1u, (0u ^ 1u)))) >> 0u, min((uint(uvec2(1u, (0u ^ 1u)))) >> 0u, (uint(uvec2(1u, (0u ^ 1u)))) >> 0u)))), 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec2(1u, (0u ^ 1u))), (uint(uvec2(1u, (0u ^ 1u)))) >> _GLF_IDENTITY(0u, min(0u, 0u)))), _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec2(1u, (0u ^ 1u))), (uint(uvec2(1u, (0u ^ 1u)))) >> 0u)), 0u)))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)), 1u, _GLF_IDENTITY(0u, max(0u, 0u))), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(1u, (0u ^ 1u)), (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(1u, 0u ^ (1u)), (0u ^ 1u)), (uvec2(1u, (0u ^ 1u))) << uvec2(0u, 0u))) / uvec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))), (uint(uvec2(_GLF_IDENTITY(1u, (1u) | 0u), (0u ^ 1u)))) >> _GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u))))), 0u)))), 0u + (uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec2(1u, _GLF_IDENTITY((0u ^ 1u), ((_GLF_IDENTITY(0u ^ 1u, (_GLF_IDENTITY(0u ^ 1u, 0u ^ (0u ^ 1u))) | 0u))) - 0u))), (uint(uvec2(_GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, (1u) | (1u)))), (0u ^ 1u)))) >> 0u)), 0u))))))) << 0u))))) % subgroup_size), _GLF_IDENTITY(_GLF_IDENTITY(1u * (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u)))))) % subgroup_size), max(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), ~ (~ (_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), (uvec3(subgroup_local_id + 1, 1u, 0u)) << uvec3(0u, 0u, 0u))))), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u)))))) % subgroup_size), (((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u)))))) % subgroup_size)) / 1u), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u)))))) % subgroup_size), min(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(workgroup_id))), 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u)))))) % subgroup_size), (((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u + (1u))) / 1u), 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u)))))) % subgroup_size)) * 1u), ((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u)))))) % subgroup_size)))))), min(1u * ((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u)))), (uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u))))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(uint(uint((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u)))))))), (uint(_GLF_IDENTITY(uint((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u))))))), (true ? uint((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u))))))) : _GLF_FUZZED(8084u))))) | (uint(uint((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u))))))))))) % subgroup_size)), _GLF_IDENTITY(1u * (((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)) + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u)))))) % subgroup_size)), 0u + (_GLF_IDENTITY(1u * (((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u)))))) % subgroup_size)), (false ? _GLF_FUZZED(num_workgroup) : 1u * (((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u)))))) % subgroup_size)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(1u * (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u)))))) % subgroup_size), max(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u)) >> 0u) + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u)))))) % subgroup_size), (((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, _GLF_IDENTITY(0u, ~ (~ (0u)))), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u)))))) % subgroup_size)) / 1u), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u) + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u)))))) % subgroup_size), min(_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u)))))) % subgroup_size), (((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u)))))) % subgroup_size)) * 1u), ~ (~ (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u)))))) % subgroup_size), (((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << uint(_GLF_ZERO(0.0, injectionSwitch.x))) + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, _GLF_IDENTITY(0u, (0u) | (0u << _GLF_IDENTITY(uint(6u), uint(6u))))), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u), _GLF_IDENTITY(1u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) << 0u)) / 1u) ^ _GLF_IDENTITY((1u), ~ (_GLF_IDENTITY(~ ((1u)), uint(uint(_GLF_IDENTITY(~ ((1u)), (~ ((1u))) + 0u))))))), 0u)))))) % subgroup_size)) * 1u)))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u)))))), max((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u)))))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u)))))), uint(uvec2((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u)))))), 1u))))) % subgroup_size), ((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u)))))), max((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u)))))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u)))))), uint(uvec2((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u)))))), 1u))))) % subgroup_size)) | 0u)))))), min(1u * ((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u)))))), _GLF_IDENTITY(uint(uint((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u)))))))), (uint(uint((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1)), 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u))))))))) | (uint(uint((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u))))))))))) % subgroup_size)), _GLF_IDENTITY(1u * (((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)) + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u)))))) % subgroup_size)), 0u + (_GLF_IDENTITY(1u, (1u) + (0u | 0u)) * (((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u)))))) % subgroup_size)))))), min(_GLF_IDENTITY(_GLF_IDENTITY(1u * (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(_GLF_IDENTITY(uvec3(subgroup_local_id + _GLF_IDENTITY(1, (1) * 1), 1u, 0u), clamp(uvec3(subgroup_local_id + _GLF_IDENTITY(1, (1) * 1), 1u, 0u), _GLF_IDENTITY(uvec3(subgroup_local_id + _GLF_IDENTITY(1, (1) * 1), 1u, 0u), (uvec3(subgroup_local_id + _GLF_IDENTITY(1, (1) * 1), 1u, 0u)) - uvec3(0u, 0u, 0u)), uvec3(subgroup_local_id + _GLF_IDENTITY(1, (1) * 1), 1u, 0u))), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u)))))) % subgroup_size), max(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ _GLF_IDENTITY((1u), min(_GLF_IDENTITY((1u), max(_GLF_IDENTITY((1u), ~ (~ ((1u)))), _GLF_IDENTITY((1u), 0u | ((1u))))), (1u)))), 0u)))))) % subgroup_size), (((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u)))))) % subgroup_size)) / 1u), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u)))))) % subgroup_size), min(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))), 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u)))))) % subgroup_size), _GLF_IDENTITY((((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u)))))) % subgroup_size)), ((((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u)))))) % subgroup_size))) ^ (0u | 0u)) * 1u), ((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u)))))) % subgroup_size)))))), min(1u * ((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, uint(uvec2(1u, 0u)))) | (1u)), 0u ^ (1u)), 0u)))))), _GLF_IDENTITY(uint(uint((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u)))))))), (uint(uint((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u))))))))) | (uint(uint((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u))))))))))) % subgroup_size)), _GLF_IDENTITY(1u * (((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)) + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u)))))) % subgroup_size)), 0u + (1u * (((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u)))))) % subgroup_size)))))), min(_GLF_IDENTITY(1u * (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u)))))) % subgroup_size), max(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u)))))) % subgroup_size), (((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(workgroup_size) : subgroup_local_id + 1)), subgroup_local_id + 1)), 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u)))), max(uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(workgroup_size) : subgroup_local_id + 1)), subgroup_local_id + 1)), 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u)))), uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(workgroup_size) : subgroup_local_id + 1)), subgroup_local_id + 1)), 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u)))))))) % subgroup_size)) / 1u), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u)))))) % subgroup_size), min(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u)))))) % subgroup_size), (((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u)))))) % subgroup_size)) * 1u), ((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u)))))) % subgroup_size)))))), min(1u * ((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u)))))), _GLF_IDENTITY(uint(uint((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u))))), (_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u)))))) / 1u)))), (uint(uint((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, _GLF_IDENTITY(0u ^ (1u), (true ? _GLF_IDENTITY(0u ^ (1u), 0u + (0u ^ (1u))) : _GLF_FUZZED(workgroup_base)))), 0u))))))))) | (uint(uint((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u))))))))))) % subgroup_size)), _GLF_IDENTITY(1u * (((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)) + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u)))))) % subgroup_size)), 0u + (1u * (((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u)))))) % subgroup_size)))))), _GLF_IDENTITY(1u * (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u)))))) % subgroup_size), max(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u)))))) % subgroup_size, _GLF_IDENTITY(uint(uvec4((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u)))))) % subgroup_size, 1u, (0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), max(uint(2u), uint(2u))))), 0u)), uint(uint(_GLF_IDENTITY(uint(uvec4((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u)))))) % subgroup_size, 1u, (0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), max(uint(2u), uint(2u))))), 0u)), max(uint(uvec4((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u)))))) % subgroup_size, 1u, (0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), max(uint(2u), uint(2u))))), 0u)), uint(uvec4((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u)))))) % subgroup_size, 1u, (0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), max(uint(2u), uint(2u))))), 0u))))))))), (((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u)))))) % subgroup_size)) / 1u), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u)))))) % _GLF_IDENTITY(subgroup_size, 0u + (subgroup_size))), min(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u)))))) % subgroup_size), (((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u)))))) % subgroup_size)) * 1u), ((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u)))))) % subgroup_size)))))), min(1u * ((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id)), subgroup_local_id)) + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))) / 1u) + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u)))))), _GLF_IDENTITY(uint(uint((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u)))))))), (uint(uint((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u))))))))) | (uint(uint((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u))))))))))) % subgroup_size)), _GLF_IDENTITY(1u * (((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)) + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)))))), 1u, 0u), (true ? uvec3(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)))))), 1u, 0u) : _GLF_FUZZED(uvec3(56686u, 1141u, 36709u)))), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u)))))) % subgroup_size)), 0u + (1u * (((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u)))))) % subgroup_size)))))))), _GLF_IDENTITY(1u * (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(_GLF_IDENTITY(1u, 0u ^ (1u)), max(_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u ^ (1u)), (_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u ^ (1u)), max(_GLF_IDENTITY(1u, 0u ^ (1u)), _GLF_IDENTITY(1u, 0u ^ (1u))))) >> 0u), _GLF_IDENTITY(1u, 0u ^ (1u)))), 0u)))))) % subgroup_size), max(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), _GLF_IDENTITY(uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u), max(uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u)))))))) % subgroup_size), (((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u)))))) % subgroup_size)) / 1u), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (_GLF_IDENTITY(1u, 0u ^ (1u)))), 0u)))))) % subgroup_size), min(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, 1u)), _GLF_IDENTITY(0u ^ (1u), (true ? 0u ^ (1u) : _GLF_FUZZED(workgroup_base)))), _GLF_IDENTITY(0u, 0u + (0u)))))))) % _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))), (((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), _GLF_IDENTITY(min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u)), clamp(min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u)), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u)), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u)))))))) % subgroup_size)) * 1u), ((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u)))))) % subgroup_size)))))), min(1u * ((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id)))) + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u)))))), _GLF_IDENTITY(uint(uint((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u)))))))), (uint(uint((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u))))))))) | (uint(uint((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u))))))))))) % subgroup_size)), _GLF_IDENTITY(1u * (((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)) + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u)))))) % subgroup_size)), 0u + (1u * (((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), _GLF_IDENTITY(0u, (0u) + ((134919u & 0u) & 81106u)))))))) % subgroup_size))))))))) ^ 0u))))), min(clamp(((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_local_id) : 1u)), 1u, 1u))))), 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, (1u) | 0u), 0u)))))) % _GLF_IDENTITY(subgroup_size, (subgroup_size) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))), ((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1))), 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + 1, 1u, 0u)))))) % subgroup_size), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, _GLF_IDENTITY((1u), clamp((1u), (1u), (1u))) ^ 0u), 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec2(1u, (_GLF_IDENTITY(0u, uint(uint(0u))) ^ 1u))), (_GLF_IDENTITY(uint(uvec2(1u, (0u ^ 1u))), uint(uvec3(uint(uvec2(_GLF_IDENTITY(1u, (1u) << 0u), (0u ^ 1u))), 1u, 0u)))) >> 0u)), 0u)))))) % subgroup_size, min((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, (1u) ^ 0u), 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec2(1u, (0u ^ 1u))), (_GLF_IDENTITY(uint(uvec2(1u, (0u ^ 1u))), uint(uvec3(uint(uvec2(_GLF_IDENTITY(1u, (1u) << 0u), (0u ^ 1u))), 1u, 0u)))) >> 0u)), 0u)))))) % subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, _GLF_IDENTITY((1u) ^ 0u, min((1u) ^ 0u, (1u) ^ 0u))), 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec2(1u, (0u ^ _GLF_IDENTITY(1u, 0u | (_GLF_IDENTITY(1u, ~ (~ (1u)))))))), (_GLF_IDENTITY(uint(uvec2(1u, (0u ^ 1u))), uint(uvec3(uint(uvec2(_GLF_IDENTITY(1u, (1u) << 0u), (0u ^ 1u))), 1u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uint(0u)))) - 0u))))) >> 0u)), 0u)))))) % subgroup_size, min((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) | (_GLF_IDENTITY(1u, (1u) >> 0u))), 0u), min(uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, (1u) ^ 0u), 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec2(1u, (0u ^ 1u))), (_GLF_IDENTITY(uint(uvec2(1u, (0u ^ 1u))), uint(uvec3(uint(uvec2(_GLF_IDENTITY(1u, (1u) << 0u), (0u ^ 1u))), 1u, 0u)))) >> 0u)), 0u)))))) % subgroup_size, (_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, (1u) ^ 0u), 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec2(1u, (0u ^ 1u))), (_GLF_IDENTITY(uint(uvec2(1u, (_GLF_IDENTITY(0u ^ 1u, (0u ^ 1u) * 1u)))), uint(uvec3(uint(uvec2(_GLF_IDENTITY(1u, (1u) << 0u), (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) ^ 1u))), _GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, max(1u, 1u)))), 0u)))) >> 0u)), 0u)))))) % subgroup_size))))), _GLF_IDENTITY(1u, (1u) + _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) * (((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)) + 1, 1u, _GLF_IDENTITY(0u, (0u) * 1u)), uvec3(subgroup_local_id + 1, 1u, 0u))), min(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, max(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) ^ 0)) << 0))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : subgroup_local_id + 1)), subgroup_local_id + 1)), 1u, 0u), max(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, max(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (1) << 0))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : subgroup_local_id + 1)), subgroup_local_id + 1)), 1u, 0u), uvec3(_GLF_IDENTITY(subgroup_local_id + 1, max(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (1) << 0))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : subgroup_local_id + 1)), subgroup_local_id + 1)), 1u, 0u))), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u)))), ~ (~ (uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)) + 1, 1u, _GLF_IDENTITY(0u, (0u) * 1u)), uvec3(subgroup_local_id + 1, 1u, 0u))), min(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, max(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) ^ 0)) << 0))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : subgroup_local_id + 1)), subgroup_local_id + 1)), 1u, 0u), max(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, max(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (1) << 0))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : subgroup_local_id + 1)), subgroup_local_id + 1)), 1u, 0u), uvec3(_GLF_IDENTITY(subgroup_local_id + 1, max(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (1) << 0))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : subgroup_local_id + 1)), subgroup_local_id + 1)), 1u, 0u))), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u))))))))) % subgroup_size)))), clamp((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u | (1u)), 0u), min(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, clamp(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1)), subgroup_local_id + 1, subgroup_local_id + 1)), ~ (~ (_GLF_IDENTITY(subgroup_local_id + 1, clamp(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (1)), max(subgroup_local_id + 1, subgroup_local_id + 1)), subgroup_local_id + 1, subgroup_local_id + 1))))), _GLF_IDENTITY(1u, ~ (~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_local_id) : 1u, (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_local_id) : 1u, ~ (~ (false ? _GLF_FUZZED(subgroup_local_id) : 1u)))) * uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))))), 1u, _GLF_IDENTITY(1u, max(1u, 1u))))), uint(uint((_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_local_id) : 1u, (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_local_id) : 1u, ~ (~ (false ? _GLF_FUZZED(subgroup_local_id) : 1u)))) * uint(_GLF_ONE(1.0, injectionSwitch.y))))), 1u, _GLF_IDENTITY(1u, max(1u, 1u)))))))), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY((_GLF_IDENTITY(1u, _GLF_IDENTITY(clamp(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_local_id) : 1u)), 1u, 1u), (true ? _GLF_IDENTITY(clamp(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_local_id) : 1u)), 1u, 1u), min(clamp(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(1u, (1u) >> 0u))), 1u, 1u), _GLF_IDENTITY(clamp(_GLF_IDENTITY(1u, _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_local_id) : 1u), min(_GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_local_id) : 1u), min((false ? _GLF_FUZZED(subgroup_local_id) : 1u), (false ? _GLF_FUZZED(subgroup_local_id) : 1u))), (false ? _GLF_FUZZED(subgroup_local_id) : 1u)))), 1u, 1u), (clamp(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_local_id) : 1u)), 1u, 1u)) << 0u))) : _GLF_FUZZED(workgroup_size))))), ((_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_local_id) : 1u)), 1u, 1u)))) + 0u), 0u, 1u, ((1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), ~ (~ (uint(2u)))))) >> _GLF_IDENTITY(uint(2u), uint(2u))))), (0u | 0u) ^ (_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY((_GLF_IDENTITY(1u, _GLF_IDENTITY(clamp(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_local_id) : 1u)), 1u, 1u), (true ? _GLF_IDENTITY(clamp(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_local_id) : 1u)), 1u, 1u), min(clamp(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(1u, (1u) >> 0u))), 1u, 1u), _GLF_IDENTITY(clamp(_GLF_IDENTITY(1u, _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_local_id) : 1u), min(_GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_local_id) : 1u), min((false ? _GLF_FUZZED(subgroup_local_id) : 1u), (false ? _GLF_FUZZED(subgroup_local_id) : 1u))), (false ? _GLF_FUZZED(subgroup_local_id) : 1u)))), 1u, 1u), (clamp(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_local_id) : 1u)), 1u, 1u)) << 0u))) : _GLF_FUZZED(workgroup_size))))), ((_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_local_id) : 1u)), 1u, 1u)))) + 0u), 0u, 1u, ((1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), ~ (~ (uint(2u)))))) >> _GLF_IDENTITY(uint(2u), uint(2u))))), clamp(uint(uvec4(_GLF_IDENTITY((_GLF_IDENTITY(1u, _GLF_IDENTITY(clamp(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_local_id) : 1u)), 1u, 1u), (true ? _GLF_IDENTITY(clamp(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_local_id) : 1u)), 1u, 1u), min(clamp(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(1u, (1u) >> 0u))), 1u, 1u), _GLF_IDENTITY(clamp(_GLF_IDENTITY(1u, _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_local_id) : 1u), min(_GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_local_id) : 1u), min((false ? _GLF_FUZZED(subgroup_local_id) : 1u), (false ? _GLF_FUZZED(subgroup_local_id) : 1u))), (false ? _GLF_FUZZED(subgroup_local_id) : 1u)))), 1u, 1u), (clamp(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_local_id) : 1u)), 1u, 1u)) << 0u))) : _GLF_FUZZED(workgroup_size))))), ((_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_local_id) : 1u)), 1u, 1u)))) + 0u), 0u, 1u, ((1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), ~ (~ (uint(2u)))))) >> _GLF_IDENTITY(uint(2u), uint(2u))))), uint(uvec4(_GLF_IDENTITY((_GLF_IDENTITY(1u, _GLF_IDENTITY(clamp(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_local_id) : 1u)), 1u, 1u), (true ? _GLF_IDENTITY(clamp(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_local_id) : 1u)), 1u, 1u), min(clamp(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(1u, (1u) >> 0u))), 1u, 1u), _GLF_IDENTITY(clamp(_GLF_IDENTITY(1u, _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_local_id) : 1u), min(_GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_local_id) : 1u), min((false ? _GLF_FUZZED(subgroup_local_id) : 1u), (false ? _GLF_FUZZED(subgroup_local_id) : 1u))), (false ? _GLF_FUZZED(subgroup_local_id) : 1u)))), 1u, 1u), (clamp(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_local_id) : 1u)), 1u, 1u)) << 0u))) : _GLF_FUZZED(workgroup_size))))), ((_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_local_id) : 1u)), 1u, 1u)))) + 0u), 0u, 1u, ((1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), ~ (~ (uint(2u)))))) >> _GLF_IDENTITY(uint(2u), uint(2u))))), uint(uvec4(_GLF_IDENTITY((_GLF_IDENTITY(1u, _GLF_IDENTITY(clamp(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_local_id) : 1u)), 1u, 1u), (true ? _GLF_IDENTITY(clamp(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_local_id) : 1u)), 1u, 1u), min(clamp(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(1u, (1u) >> 0u))), 1u, 1u), _GLF_IDENTITY(clamp(_GLF_IDENTITY(1u, _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_local_id) : 1u), min(_GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_local_id) : 1u), min((false ? _GLF_FUZZED(subgroup_local_id) : 1u), (false ? _GLF_FUZZED(subgroup_local_id) : 1u))), (false ? _GLF_FUZZED(subgroup_local_id) : 1u)))), 1u, 1u), (clamp(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_local_id) : 1u)), 1u, 1u)) << 0u))) : _GLF_FUZZED(workgroup_size))))), ((_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_local_id) : 1u)), 1u, 1u)))) + 0u), 0u, 1u, ((1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), ~ (~ (uint(2u)))))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))))))))), 0u), uvec3(subgroup_local_id + 1, 1u, 0u)))))), ((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), _GLF_IDENTITY(min(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, clamp(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1)), subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(49572u) : subgroup_local_id)) + 1)), _GLF_IDENTITY(1u, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_local_id) : 1u)), 1u, 1u))), uint(uvec4(_GLF_IDENTITY((_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_local_id) : 1u)), 1u, 1u))), ((_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(1u), uint(1u)))), clamp(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_local_id) : 1u)), 1u, 1u)))) + 0u), 0u, 1u, ((1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), ~ (~ (uint(2u)))), ~ (~ (_GLF_IDENTITY(uint(2u), ~ (~ (uint(2u))))))))) >> _GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, 0u | (_GLF_IDENTITY(2u, (2u) | 0u))))))))))), 0u), uvec3(subgroup_local_id + 1, 1u, 0u)), (true ? _GLF_IDENTITY(min(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, clamp(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1)), subgroup_local_id + 1, subgroup_local_id + 1)), _GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_local_id) : 1u)), 1u, 1u))), uint(uvec4(_GLF_IDENTITY((_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_local_id) : 1u)), 1u, 1u))), ((_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_local_id) : 1u)), 1u, 1u)))) + 0u), 0u, 1u, ((1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), ~ (~ (uint(2u)))))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))))), ~ (~ (_GLF_IDENTITY(1u, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_local_id) : 1u)), 1u, 1u))), uint(uvec4(_GLF_IDENTITY((_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_local_id) : 1u)), 1u, 1u))), ((_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_local_id) : 1u)), 1u, 1u)))) + 0u), 0u, 1u, ((1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), ~ (~ (uint(2u)))))) >> _GLF_IDENTITY(uint(2u), uint(2u))))))))))), 0u), uvec3(subgroup_local_id + 1, 1u, 0u)), clamp(min(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, clamp(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1)), subgroup_local_id + 1, subgroup_local_id + 1)), _GLF_IDENTITY(1u, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_local_id) : 1u)), 1u, 1u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_local_id) : 1u)), 1u, 1u)), ~ (~ (_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_local_id) : 1u)), 1u, 1u))))), _GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_local_id) : 1u)), 1u, 1u)), _GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_local_id) : 1u)), 1u, 1u))))), uint(uvec4(_GLF_IDENTITY((_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_local_id) : 1u)), 1u, 1u))), ((_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_local_id) : 1u)), 1u, 1u)))) + 0u), 0u, 1u, ((1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), ~ (~ (uint(2u)))))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))))), 0u), uvec3(subgroup_local_id + 1, 1u, 0u)), min(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, clamp(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1)), subgroup_local_id + 1, subgroup_local_id + 1)), _GLF_IDENTITY(1u, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_local_id) : 1u)), 1u, 1u))), uint(uvec4(_GLF_IDENTITY((_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_local_id) : 1u)), 1u, 1u))), ((_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_local_id) : 1u)), 1u, 1u)))) + 0u), 0u, 1u, ((1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), ~ (~ (uint(2u)))))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))))), 0u), uvec3(subgroup_local_id + 1, 1u, 0u)), min(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, clamp(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), subgroup_local_id)) + 1)), subgroup_local_id + 1, subgroup_local_id + 1)), _GLF_IDENTITY(1u, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_local_id) : 1u)), 1u, 1u))), uint(uvec4(_GLF_IDENTITY((_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_local_id) : 1u)), 1u, 1u))), (_GLF_IDENTITY((_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_local_id) : 1u)), 1u, 1u))), ((_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_local_id) : 1u)), 1u, 1u)))) >> 0u)) + 0u), 0u, 1u, ((1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), ~ (~ (uint(2u)))))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))))), 0u), uvec3(subgroup_local_id + 1, 1u, 0u)))) : _GLF_FUZZED(uvec3(147366u, 18828u, 162198u))))))))) ^ 0u) % _GLF_IDENTITY(subgroup_size, (subgroup_size) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)), uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))) << 0u), 1u, 0u), uvec3(subgroup_local_id + 1, 1u, 0u)))))) % subgroup_size), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), min(uvec3(subgroup_local_id + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(1u, (0u ^ 1u))), (uint(uvec2(1u, _GLF_IDENTITY((0u ^ 1u), ((0u ^ 1u)) ^ 0u)))) >> 0u), min(_GLF_IDENTITY(uint(uvec2(1u, (0u ^ 1u))), (uint(uvec2(1u, _GLF_IDENTITY((0u ^ 1u), ((0u ^ 1u)) ^ 0u)))) >> 0u), _GLF_IDENTITY(uint(uvec2(1u, (0u ^ 1u))), (uint(uvec2(1u, _GLF_IDENTITY((0u ^ 1u), ((0u ^ 1u)) ^ 0u)))) >> 0u)))), 0u)))))) % subgroup_size), 1u * (((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 0u), _GLF_IDENTITY(min(uvec3(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u))) + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? min(uvec3(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u))) + 1, 1u, 0u), uvec3(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u)) : _GLF_FUZZED(uvec3(30285u, 7271u, 39335u)))))))) % _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u), (0u >> _GLF_IDENTITY(uint(8u), uint(8u))) | (subgroup_size)), subgroup_size)))))))))) - 0u);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
      {
       barrier();
      }
     else
      {
      }
    }
   do
    {
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           return;
           if(_GLF_DEAD(false))
            barrier();
          }
        }
      }
     else
      {
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), true && (! (_GLF_IDENTITY(false, bool(bool(false))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / cos(0.0)) < injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)))) || false))))
    return;
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
  }
 uint read = atomicLoad(buf[_GLF_struct_replacement_3.virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
  {
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
     return;
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          break;
         barrier();
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))));
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))), false)), bool(bool(bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))), false)))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(false, true && (false)), false)))), false)), bool(bool(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))))), true), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))))), true))), bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))))), true))))))))), false)))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)), false || (bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false))))))))))
          {
           if(_GLF_DEAD(false))
            return;
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), true)))))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) || false), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) || false), false, true)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), true)))))))))))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       return;
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, true && (false))))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          return;
         for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(0, 1), (false ? _GLF_IDENTITY(_GLF_FUZZED((75920 | ivec2(35993, -89596))), (_GLF_FUZZED((75920 | ivec2(35993, -89596)))) - ivec2(0, 0)) : ivec2(0, 1)))), (true ? int(_GLF_IDENTITY(ivec2(0, 1), (false ? _GLF_FUZZED((75920 | ivec2(35993, -89596))) : ivec2(0, 1)))) : _GLF_FUZZED(_injected_loop_counter))))); _injected_loop_counter --)
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bool(_GLF_IDENTITY(false, true && (false)))))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                }
               else
                {
                 return;
                }
              }
            }
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))))
            break;
           if(_GLF_DEAD(false))
            break;
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       return;
      }
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))))
  return;
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (0 | 0) + (_injected_loop_counter)) != (1 ^ 0)); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     do
      {
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           barrier();
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 if(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))) / (1u | 1u)))
  {
   atomicStore(checker[_GLF_struct_replacement_3.virtual_gid], read, 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(false);
  }
 else
  {
   for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(0), int(0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))))
      break;
     if(_GLF_DEAD(false))
      barrier();
     atomicStore(checker[_GLF_struct_replacement_3.virtual_gid], read, _GLF_IDENTITY(4, (4) + 0), 64, 4);
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         return;
        }
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 & 1)); _injected_loop_counter ++)
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
          barrier();
         return;
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     else
      {
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(14.28)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(14.28)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), clamp(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)))).y)))))))))))
      {
       do
        {
         if(_GLF_DEAD(false))
          break;
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, 0.0, 0.0)), (float(vec3(injectionSwitch.y, 0.0, 0.0))) / 1.0))))));
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       else
        {
         do
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(false))
              continue;
             return;
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           do
            {
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(false))
              return;
            }
           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)));
           barrier();
          }
         if(_GLF_DEAD(false))
          return;
         for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 | 0)); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! (! ((false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec4(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec4(injectionSwitch.y, 1.0, 1.0, 0.0), (vec4(injectionSwitch.y, 1.0, 1.0, 0.0)) * mat4(1.0)))))) && (false)), false, true, true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       return;
      }
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             barrier();
            }
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             return;
            }
          }
         return;
        }
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bool(true)))) && true)))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, false || (false))))))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
        }
       else
        {
        }
      }
    }
   do
    {
     subgroupAll(true);
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      break;
     if(_GLF_DEAD(false))
      break;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
      return;
     for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(7), int(7))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       do
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             do
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                continue;
               if(_GLF_DEAD(false))
                {
                 do
                  {
                   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                    }
                   else
                    {
                     if(_GLF_DEAD(false))
                      continue;
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 1.0, abs(0.0), 0.0, 1.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 1.0, 0.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(80.19, 647.140)) : vec2(mat3x4(injectionSwitch, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 1.0, abs(0.0), 0.0, 1.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 1.0, 0.0))))).y, mix(float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 1.0, abs(0.0), 0.0, 1.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 1.0, 0.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(80.19, 647.140)) : vec2(mat3x4(injectionSwitch, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 1.0, abs(0.0), 0.0, 1.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 1.0, 0.0))))).y), float(_GLF_FUZZED(1.2)), bool(false)))))))
                      barrier();
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       return;
                      }
                     else
                      {
                      }
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                 if(_GLF_DEAD(false))
                  barrier();
                }
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
             return;
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(435.852), _GLF_FUZZED(5.3)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).y), false || ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))))
                {
                 if(_GLF_DEAD(false))
                  continue;
                 do
                  {
                   return;
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  continue;
                }
               for(int _injected_loop_counter = (0 | _GLF_IDENTITY(0, ~ (~ (0)))); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(7, (_GLF_IDENTITY(7, (7) ^ 0)) >> 0)), int(7))) >> _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, (7) | (_GLF_IDENTITY(7, clamp(7, 7, 7)))))))); _GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) + 0))
                {
                 if(_GLF_DEAD(false))
                  return;
                 do
                  {
                   return;
                  }
                 while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))));
                }
              }
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)), bvec3(bvec3(bvec3(bvec4(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))))))))
              {
               if(_GLF_DEAD(false))
                break;
              }
             else
              {
               barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
            }
           barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(vec2(161.716, -499.761)) : (injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(vec2(161.716, -499.761)) : (injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(vec2(161.716, -499.761)) : (injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))))))));
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           return;
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
          }
         else
          {
          }
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            {
             for(int _injected_loop_counter = ((0 ^ 0) ^ (1 ^ 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 return;
                }
              }
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true)))))))
                return;
              }
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (false))))
              {
               do
                {
                 barrier();
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
              }
             if(_GLF_DEAD(false))
              return;
            }
          }
        }
       else
        {
         do
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
      return;
    }
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
