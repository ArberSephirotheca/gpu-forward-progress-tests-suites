#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_0 {
 mat2x3 _f0;
 bool _f1;
 float _f2;
 uint virtual_gid;
} ;

struct _GLF_struct_1 {
 mat3x2 _f0;
 _GLF_struct_0 _f1;
 ivec4 _f2;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(false, ! (! (false)))), true), bvec2(bvec3(bvec2(! (_GLF_IDENTITY(false, ! (! (false)))), true), true)))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   return;
  }
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | 0u), (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | 0u)) / 1u);
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[_GLF_IDENTITY(0, 1 * (0))], gl_WorkGroupID[1], gl_WorkGroupID[2])).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0))) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, float(vec2(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0))), 0.0, 1.0, 1.0))) > injectionSwitch.y) || _GLF_IDENTITY(false, true && (false))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, true)))))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, ! (! (true))))), bool(bvec2(bool(bool(_GLF_IDENTITY(true, ! (! (true))))), false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), ! (! (bool(bvec3(false, false, true))))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))))), bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 _GLF_struct_1 _GLF_struct_replacement_1 = _GLF_struct_1(mat3x2(1.0), _GLF_struct_0(mat2x3(1.0), true, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uvec3(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u)) | (workgroup_base)), 1u, 1u))) + subgroup_id * subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, 1u, 1u))) + subgroup_id * subgroup_size, 0u + (_GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, 1u, 1u))) + subgroup_id * subgroup_size))) + 0u) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / ((1u << _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(_GLF_IDENTITY(3u, max(3u, 3u)), ~ (~ (_GLF_IDENTITY(3u, max(3u, 3u)))))))) >> _GLF_IDENTITY(uint(3u), uint(3u)))), (1u | 1u) * (subgroup_local_id))), ivec4(1));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(workgroup_base, (workgroup_base) | uint(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), mat2(1.0) * (injectionSwitch)).x)))))) / 1u) + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))) ? _GLF_FUZZED(67198u) : subgroup_local_id)), ~ (~ (_GLF_IDENTITY(subgroup_local_id, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(67198u) : subgroup_local_id)))))) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u))) + 1) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u | (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) | (_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))))), 0u ^ (0u | (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) | (_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)))))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(mod(-9.7, -135.793)) : injectionSwitch.y))))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))))
  return;
 atomicStore(buf[next_virtual_gid], uint(1), 4, _GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(-81142)))) | (_GLF_IDENTITY(64, (64) | 0))), max(64, _GLF_IDENTITY(_GLF_IDENTITY(64, ~ (~ _GLF_IDENTITY((64), ((64)) / 1))), int(ivec4(_GLF_IDENTITY(64, ~ (~ _GLF_IDENTITY((64), ((64)) / 1))), 1, 1, (1 | 1)))))), 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), false, false)))))), ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))), ! (! (bool(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || false))) || false)))))))), bool(bvec2(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false))))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / _GLF_ONE(1.0, injectionSwitch.y))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))) || false)), false))))), ! (! (bool(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))))))), bool(bvec2(bool(bool(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false)))))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))), _GLF_IDENTITY(bool(bool(! (! _GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((! ((injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(! (! (bool(bool(! (! (! ((injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY(! (! (bool(bool(! (! (! ((injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec4(! (! (bool(bool(! (! (! ((injectionSwitch.x > injectionSwitch.y)))))))), true, false, true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true && (_GLF_IDENTITY(false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bool(! (! (! ((injectionSwitch.x > injectionSwitch.y)))))), ! (! (bool(bool(! (! (! ((injectionSwitch.x > injectionSwitch.y)))))))))))))), _GLF_IDENTITY(false || (false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec2(! (! (! ((injectionSwitch.x > injectionSwitch.y)))), false)), (bool(bvec2(! (! (! ((injectionSwitch.x > injectionSwitch.y)))), false))) || false)))), ! (! (bool(bool(! (! (! ((injectionSwitch.x > injectionSwitch.y))))))))))))))), true && (false || (false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec2(! (! (! ((injectionSwitch.x > injectionSwitch.y)))), false)), (bool(bvec2(! (! (! ((injectionSwitch.x > injectionSwitch.y)))), false))) || false)))), ! (! (bool(bool(! (! (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec4(bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, false, false))))))))))))))))))))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint read = atomicLoad(buf[_GLF_IDENTITY(_GLF_struct_replacement_1._f1.virtual_gid, 0u + (_GLF_IDENTITY(_GLF_struct_replacement_1._f1.virtual_gid, (_GLF_IDENTITY(_GLF_struct_replacement_1._f1.virtual_gid, max(_GLF_IDENTITY(_GLF_struct_replacement_1._f1.virtual_gid, _GLF_IDENTITY((_GLF_struct_replacement_1._f1.virtual_gid) / 1u, clamp((_GLF_struct_replacement_1._f1.virtual_gid) / 1u, (_GLF_struct_replacement_1._f1.virtual_gid) / 1u, (_GLF_struct_replacement_1._f1.virtual_gid) / 1u))), _GLF_struct_replacement_1._f1.virtual_gid))) | (_GLF_struct_replacement_1._f1.virtual_gid))))], 4, 64, 0);
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false) && (false), bool(bvec4(_GLF_IDENTITY(true, (true) || false) && (false), false, false, true))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, false, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), (true ? _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, int(int(4))), 4, _GLF_IDENTITY(4, (4) | (4)))))) : _GLF_FUZZED(-38559))))), max(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), int(int(_GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(26270) : 1)), (1) | (1))))), _GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), max(_GLF_IDENTITY(1, (1) / 1), _GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), max(_GLF_IDENTITY(1, (1) / 1), _GLF_IDENTITY(1, (1) / 1)))))))))) < subgroup_size)
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 0.0))), injectionSwitch.x)) > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 0.0))), injectionSwitch.x)) > injectionSwitch.y), bool(bool((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 0.0))), injectionSwitch.x)) > injectionSwitch.y)))), false))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   atomicStore(checker[_GLF_IDENTITY(_GLF_struct_replacement_1._f1.virtual_gid, uint(_GLF_IDENTITY(uvec3(_GLF_struct_replacement_1._f1.virtual_gid, 1u, 0u), (true ? _GLF_IDENTITY(uvec3(_GLF_struct_replacement_1._f1.virtual_gid, 1u, 0u), (uvec3(_GLF_struct_replacement_1._f1.virtual_gid, 1u, 0u)) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_struct_replacement_1._f1.virtual_gid, 1u, 0u), (false ? _GLF_FUZZED(uvec3(150761u, 125704u, 159155u)) : _GLF_IDENTITY(uvec3(_GLF_struct_replacement_1._f1.virtual_gid, 1u, 0u), (uvec3(_GLF_struct_replacement_1._f1.virtual_gid, 1u, 0u)) - uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), clamp(_GLF_IDENTITY(uvec3(_GLF_struct_replacement_1._f1.virtual_gid, 1u, 0u), _GLF_IDENTITY(uvec3(uvec4(uvec3(_GLF_struct_replacement_1._f1.virtual_gid, 1u, _GLF_IDENTITY(0u, (0u) << 0u)), 1u)), ~ _GLF_IDENTITY((~ _GLF_IDENTITY((uvec3(uvec4(uvec3(_GLF_struct_replacement_1._f1.virtual_gid, 1u, 0u), 1u))), min((uvec3(uvec4(uvec3(_GLF_struct_replacement_1._f1.virtual_gid, 1u, 0u), 1u))), (uvec3(uvec4(uvec3(_GLF_struct_replacement_1._f1.virtual_gid, _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), 0u ^ (~ (1u))))), 0u), 1u)))))), (_GLF_IDENTITY((~ _GLF_IDENTITY((uvec3(uvec4(uvec3(_GLF_struct_replacement_1._f1.virtual_gid, 1u, 0u), 1u))), min((uvec3(uvec4(uvec3(_GLF_struct_replacement_1._f1.virtual_gid, 1u, 0u), 1u))), (uvec3(uvec4(uvec3(_GLF_struct_replacement_1._f1.virtual_gid, _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), 0u ^ (~ (1u))))), 0u), 1u)))))), ((~ _GLF_IDENTITY((uvec3(uvec4(uvec3(_GLF_struct_replacement_1._f1.virtual_gid, 1u, 0u), 1u))), min((uvec3(uvec4(uvec3(_GLF_struct_replacement_1._f1.virtual_gid, 1u, 0u), 1u))), (uvec3(uvec4(uvec3(_GLF_struct_replacement_1._f1.virtual_gid, _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), 0u ^ (~ (1u))))), 0u), 1u))))))) | ((~ _GLF_IDENTITY((uvec3(uvec4(uvec3(_GLF_struct_replacement_1._f1.virtual_gid, 1u, 0u), 1u))), min((uvec3(uvec4(uvec3(_GLF_struct_replacement_1._f1.virtual_gid, 1u, 0u), 1u))), (uvec3(uvec4(uvec3(_GLF_struct_replacement_1._f1.virtual_gid, _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), 0u ^ (~ (1u))))), 0u), 1u))))))))) >> uvec3(0u, 0u, 0u)))), uvec3(_GLF_struct_replacement_1._f1.virtual_gid, 1u, 0u), uvec3(_GLF_IDENTITY(_GLF_struct_replacement_1._f1.virtual_gid, uint(uvec3(_GLF_struct_replacement_1._f1.virtual_gid, 1u, 1u))), 1u, 0u)))), _GLF_IDENTITY(((_GLF_IDENTITY(uvec3(_GLF_struct_replacement_1._f1.virtual_gid, 1u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) << 0u)) - 0u)), clamp(uvec3(_GLF_struct_replacement_1._f1.virtual_gid, _GLF_IDENTITY(1u, (1u) | (1u)), 0u), uvec3(_GLF_struct_replacement_1._f1.virtual_gid, 1u, 0u), uvec3(_GLF_struct_replacement_1._f1.virtual_gid, 1u, 0u))))), (((_GLF_IDENTITY(uvec3(_GLF_struct_replacement_1._f1.virtual_gid, 1u, 0u), clamp(uvec3(_GLF_struct_replacement_1._f1.virtual_gid, 1u, 0u), uvec3(_GLF_struct_replacement_1._f1.virtual_gid, 1u, 0u), uvec3(_GLF_struct_replacement_1._f1.virtual_gid, 1u, 0u)))))) | (((_GLF_IDENTITY(uvec3(_GLF_struct_replacement_1._f1.virtual_gid, 1u, 0u), clamp(uvec3(_GLF_struct_replacement_1._f1.virtual_gid, 1u, 0u), uvec3(_GLF_IDENTITY(_GLF_struct_replacement_1._f1.virtual_gid, (true ? _GLF_struct_replacement_1._f1.virtual_gid : _GLF_FUZZED(19561u))), 1u, 0u), uvec3(_GLF_struct_replacement_1._f1.virtual_gid, 1u, 0u))))))) | (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uvec3(_GLF_struct_replacement_1._f1.virtual_gid, 1u, 0u), clamp(_GLF_IDENTITY(uvec3(_GLF_struct_replacement_1._f1.virtual_gid, 1u, 0u), clamp(uvec3(_GLF_struct_replacement_1._f1.virtual_gid, 1u, 0u), uvec3(_GLF_struct_replacement_1._f1.virtual_gid, 1u, 0u), uvec3(_GLF_struct_replacement_1._f1.virtual_gid, 1u, 0u))), uvec3(_GLF_struct_replacement_1._f1.virtual_gid, 1u, 0u), uvec3(_GLF_struct_replacement_1._f1.virtual_gid, 1u, 0u)))), ((_GLF_IDENTITY(uvec3(_GLF_struct_replacement_1._f1.virtual_gid, 1u, 0u), clamp(uvec3(_GLF_IDENTITY(_GLF_struct_replacement_1._f1.virtual_gid, max(_GLF_struct_replacement_1._f1.virtual_gid, _GLF_struct_replacement_1._f1.virtual_gid)), 1u, 0u), uvec3(_GLF_struct_replacement_1._f1.virtual_gid, 1u, 0u), uvec3(_GLF_struct_replacement_1._f1.virtual_gid, 1u, 0u))))) ^ uvec3(0u, _GLF_IDENTITY(0u, max(0u, 0u)), 0u)), _GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(uvec3(uvec3(0u, 0u, 0u)))) | (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uvec3(_GLF_struct_replacement_1._f1.virtual_gid, 1u, 0u), clamp(_GLF_IDENTITY(uvec3(_GLF_struct_replacement_1._f1.virtual_gid, 1u, 0u), clamp(uvec3(_GLF_struct_replacement_1._f1.virtual_gid, 1u, 0u), uvec3(_GLF_struct_replacement_1._f1.virtual_gid, 1u, 0u), uvec3(_GLF_struct_replacement_1._f1.virtual_gid, 1u, 0u))), uvec3(_GLF_struct_replacement_1._f1.virtual_gid, 1u, 0u), uvec3(_GLF_struct_replacement_1._f1.virtual_gid, 1u, 0u)))), ((_GLF_IDENTITY(uvec3(_GLF_struct_replacement_1._f1.virtual_gid, 1u, 0u), clamp(uvec3(_GLF_struct_replacement_1._f1.virtual_gid, 1u, 0u), uvec3(_GLF_struct_replacement_1._f1.virtual_gid, 1u, 0u), uvec3(_GLF_struct_replacement_1._f1.virtual_gid, _GLF_IDENTITY(1u, (1u) | (1u ^ 1u)), 0u))))) ^ uvec3(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) / 1u), max(0u, 0u)), 0u)), max(_GLF_IDENTITY((_GLF_IDENTITY(uvec3(_GLF_struct_replacement_1._f1.virtual_gid, 1u, 0u), clamp(_GLF_IDENTITY(uvec3(_GLF_struct_replacement_1._f1.virtual_gid, 1u, 0u), clamp(uvec3(_GLF_struct_replacement_1._f1.virtual_gid, 1u, 0u), uvec3(_GLF_struct_replacement_1._f1.virtual_gid, 1u, 0u), uvec3(_GLF_struct_replacement_1._f1.virtual_gid, 1u, 0u))), uvec3(_GLF_struct_replacement_1._f1.virtual_gid, 1u, 0u), uvec3(_GLF_struct_replacement_1._f1.virtual_gid, 1u, _GLF_IDENTITY(0u, uint(_GLF_ONE(1.0, injectionSwitch.y)) * (0u)))))), ((_GLF_IDENTITY(uvec3(_GLF_struct_replacement_1._f1.virtual_gid, 1u, 0u), clamp(uvec3(_GLF_struct_replacement_1._f1.virtual_gid, 1u, 0u), uvec3(_GLF_struct_replacement_1._f1.virtual_gid, 1u, 0u), uvec3(_GLF_struct_replacement_1._f1.virtual_gid, 1u, 0u))))) ^ uvec3(0u, _GLF_IDENTITY(0u, max(0u, 0u)), 0u)), _GLF_IDENTITY((_GLF_IDENTITY(uvec3(_GLF_struct_replacement_1._f1.virtual_gid, 1u, 0u), clamp(_GLF_IDENTITY(uvec3(_GLF_struct_replacement_1._f1.virtual_gid, 1u, 0u), clamp(uvec3(_GLF_struct_replacement_1._f1.virtual_gid, 1u, 0u), uvec3(_GLF_struct_replacement_1._f1.virtual_gid, 1u, 0u), uvec3(_GLF_struct_replacement_1._f1.virtual_gid, 1u, 0u))), uvec3(_GLF_struct_replacement_1._f1.virtual_gid, 1u, 0u), uvec3(_GLF_struct_replacement_1._f1.virtual_gid, 1u, 0u)))), ((_GLF_IDENTITY(uvec3(_GLF_struct_replacement_1._f1.virtual_gid, 1u, 0u), clamp(uvec3(_GLF_struct_replacement_1._f1.virtual_gid, 1u, 0u), uvec3(_GLF_struct_replacement_1._f1.virtual_gid, 1u, 0u), uvec3(_GLF_struct_replacement_1._f1.virtual_gid, 1u, 0u))))) ^ uvec3(0u, _GLF_IDENTITY(0u, max(0u, 0u)), 0u))))))))) : _GLF_FUZZED((uvec3(172101u, _GLF_IDENTITY(19202u, (0u >> _GLF_IDENTITY(uint(8u), uint(8u))) | (19202u)), 49552u) ^ uvec3(195676u, 105052u, _GLF_IDENTITY(6153u, _GLF_IDENTITY((_GLF_IDENTITY(6153u, uint(uvec2(6153u, 1u)))), _GLF_IDENTITY(min((_GLF_IDENTITY(_GLF_IDENTITY(6153u, (6153u) | 0u), uint(uvec2(6153u, 1u)))), (_GLF_IDENTITY(_GLF_IDENTITY(6153u, _GLF_IDENTITY((6153u), uint(uvec3(_GLF_IDENTITY((6153u), ~ (~ ((6153u)))), 1u, 0u))) - (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))), uint(uvec2(6153u, 1u))))), clamp(min((_GLF_IDENTITY(_GLF_IDENTITY(6153u, (6153u) | 0u), uint(uvec2(6153u, 1u)))), (_GLF_IDENTITY(_GLF_IDENTITY(6153u, _GLF_IDENTITY((6153u), uint(uvec3(_GLF_IDENTITY((6153u), ~ (~ ((6153u)))), 1u, 0u))) - (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))), uint(uvec2(6153u, 1u))))), min((_GLF_IDENTITY(_GLF_IDENTITY(6153u, (6153u) | 0u), uint(uvec2(6153u, 1u)))), (_GLF_IDENTITY(_GLF_IDENTITY(6153u, _GLF_IDENTITY((6153u), uint(uvec3(_GLF_IDENTITY((6153u), ~ (~ ((6153u)))), 1u, 0u))) - (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))), uint(uvec2(6153u, 1u))))), min(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(6153u, (6153u) | 0u), uint(uvec2(6153u, 1u)))), ((_GLF_IDENTITY(_GLF_IDENTITY(6153u, (6153u) | 0u), uint(uvec2(6153u, 1u))))) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(6153u, _GLF_IDENTITY((6153u), uint(uvec3(_GLF_IDENTITY((6153u), ~ (~ ((6153u)))), 1u, 0u))) - (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))), uint(uvec2(6153u, 1u)))))))) | (6153u)))))))))], _GLF_IDENTITY(_GLF_IDENTITY(read, _GLF_IDENTITY(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) - 0u)))) * 1u), clamp(0u, 0u, 0u)), 0u)) | (read), 0u | (0u | (read)))), (_GLF_IDENTITY(read, 0u | (read))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), 4, 64, 4);
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - tan(0.0)), injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)) && true)))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x < injectionSwitch.y)), false || (bool(bool(injectionSwitch.x < injectionSwitch.y))))))) && (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), false), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), false)), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), false)), false, true))))))))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false))), false, true))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(2443.6353)), float(injectionSwitch.y), bool(true)))))) / _GLF_ONE(1.0, injectionSwitch.y)), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(2443.6353)), float(injectionSwitch.y), bool(true)))))) / _GLF_ONE(1.0, injectionSwitch.y)))))), bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(2443.6353)), float(injectionSwitch.y), bool(true))))), (false ? _GLF_FUZZED((-3447.3691 - (-4.2 + -585.766))) : _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(2443.6353)), float(injectionSwitch.y), bool(true)))))))) / _GLF_ONE(1.0, injectionSwitch.y)))))))))
    return;
   atomicStore(checker[_GLF_struct_replacement_1._f1.virtual_gid], read, 4, 64, 4);
   if(_GLF_DEAD(false))
    return;
   subgroupAll(true);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (false))) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-6.1)), float(_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))), bool(true))) > injectionSwitch.y), true, false, false))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, _GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), ! (! (! ((false))))))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, true, _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (false)), bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (false)), false)))), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, _GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY(false, _GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), bool(_GLF_IDENTITY(bvec2(! (! (true)), true), bvec2(bvec2(bvec2(! (! (true)), true))))))) && (false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(false, true, _GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (false))), bvec3(bvec4(bvec3(false, true, _GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (false))), false)))), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && (false)), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (false)), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (false)))))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(false, true, _GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, true, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(true, ! (! (true))) && (false))), bvec3(bvec3(bvec3(false, true, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(true, ! (! (true))) && (false)))))))))), true))))))))))))), false)), ! (! (bool(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, _GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (false))), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, true, _GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (false))), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(false, true, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))))), _GLF_IDENTITY(true, ! (! (true))) && (false)))), bvec3(bvec3(bvec3(bvec3(false, true, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))))), _GLF_IDENTITY(true, ! (! (true))) && (false))))))), bvec3(bvec4(bvec3(bvec3(false, true, _GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (false)))), true)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(false, true, _GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bool(! (true)))))) && (false), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))) && (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, ! (! (true))) && (false)))))))), bvec3(bvec4(bvec3(false, true, _GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bool(! (true)))))) && (false), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))) && (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, ! (! (true))) && (false)))))))), false)))), bvec3(bvec4(bvec3(bvec3(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), ! (! (bool(bool(true)))))), _GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), ! (! (true))) && (false)))), true)))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, _GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (false)))), bvec3(bvec4(bvec3(bvec3(false, true, _GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (false)))), true)))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, _GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && _GLF_IDENTITY((false), bool(bool((false))))))), bvec3(bvec4(bvec3(bvec3(false, true, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), true && ((! (true))))) && (false)))), true)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, _GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (false)))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), ! (! (! (false))))) && true), false || (! (false))))), true, _GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (false)))), true)))), true)))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, _GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && _GLF_IDENTITY((false), ((false)) || false)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(false, true, _GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (false)))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(false, true, _GLF_IDENTITY(false, _GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), true && (! (! (true))))) && (false)))))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, true, _GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (false))), bvec3(bvec4(bvec3(false, true, _GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (false))), true)))))), true)))), true)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, _GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (_GLF_IDENTITY(! (! (true)), (! (! (true))) || false))))) && (false)))), bvec3(bvec4(bvec3(bvec3(false, true, _GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), true && ((true))))) && (false)))), true)))), true)))), true)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, _GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (false)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(false, true, _GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (false)))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(false, true, _GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (false)))))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, true, _GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (false)))))), true)))), true)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(false, true, _GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), ! (_GLF_IDENTITY(! (! (true)), (! (! (true))) || _GLF_IDENTITY(false, false || (false))))), ! (! (_GLF_IDENTITY(! (true), ! (_GLF_IDENTITY(! (! (true)), (! (! (true))) || _GLF_IDENTITY(false, false || (false)))))))))) && (false)))), bvec3(bvec4(bvec3(bvec3(false, true, _GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), ! (_GLF_IDENTITY(! (! (true)), (! (! (true))) || _GLF_IDENTITY(false, false || (false))))), ! (! (_GLF_IDENTITY(! (true), ! (_GLF_IDENTITY(! (! (true)), (! (! (true))) || _GLF_IDENTITY(false, false || (false)))))))))) && (false)))), false))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(false, true, _GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (false))), bvec3(bvec4(bvec3(false, true, _GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (false))), true)))), true)))), true)))), true)), false)))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, _GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (false)))), bvec3(bvec4(bvec3(bvec3(false, true, _GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (false)))), true)))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, _GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), false || ((true))))) && _GLF_IDENTITY((false), bool(bool((false))))))), bvec3(bvec4(bvec3(bvec3(false, true, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(true, ! (! (true))) && (false)))), true)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, _GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (false)))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), false || (! (false)))), ! (! (! (_GLF_IDENTITY(! (false), false || (! (false)))))))), true, _GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (false)))), true)))), true)))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, _GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && _GLF_IDENTITY((false), ((false)) || false)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(false, true, _GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (false)))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(false, true, _GLF_IDENTITY(false, _GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), true && (! (! (true))))) && (false)))))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, true, _GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (false))), bvec3(bvec4(bvec3(false, true, _GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (false))), true)))))), true)))), true)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, _GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (_GLF_IDENTITY(! (! (true)), (! (! (true))) || false))))) && (false)))), bvec3(bvec4(bvec3(bvec3(false, true, _GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))) && (false), false || (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! (true)), false || (bool(! (true))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! (true)), false || (bool(! (true))))), ! (! (bool(_GLF_IDENTITY(bool(! (true)), false || (bool(! (true))))))))))))) && (false)))))), true)))), true)))), true)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, _GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (false)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(false, true, _GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (false)))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(false, true, _GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (false)))))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, true, _GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (false)))))), true)))), true)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, _GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (_GLF_IDENTITY(! (! (true)), (! (! (true))) || _GLF_IDENTITY(false, false || (false))))))) && (false)))), bvec3(bvec4(bvec3(bvec3(false, true, _GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (false)))), true)))), true)))), true)), _GLF_IDENTITY(false, (false) && true)))))))))), true)))))))))))), false))))))))
        return;
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))) && true)))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(161.482, -379.540)))).y, (injectionSwitch.y) / 1.0)))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || false))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
