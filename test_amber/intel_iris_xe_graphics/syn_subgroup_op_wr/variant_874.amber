#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec4 GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_14num_workgroupsubgroup_idsubgroup_local_idworkgroup_size;
 uvec4 GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidnum_workgroupsubgroup_idsubgroup_size;
 uvec4 GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id;
 do
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))))
    {
     if(_GLF_DEAD(false))
      break;
     for(int _injected_loop_counter = ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, (5) | (5)))), (1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, (5) | (5))))) ^ 0)) >> _GLF_IDENTITY(int(5), int(5))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], 1.0 * (injectionSwitch[0])), injectionSwitch[1])), (injectionSwitch) - vec2(0.0, 0.0)), max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) - vec2(0.0, 0.0), vec2(_GLF_IDENTITY(vec2((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0)), mat2(1.0) * (vec2((injectionSwitch) - vec2(0.0, 0.0))))))))).x > injectionSwitch.y))));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))), vec2(vec4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))), round(length(normalize(vec2(1.0, 1.0)))), 1.0))).y, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))), vec2(vec4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))), round(length(normalize(vec2(1.0, 1.0)))), 1.0))).y : _GLF_FUZZED(-7.4))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))))))))
  return;
 uvec2 GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec2(! (true), false)))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       do
        {
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
    }
   if(_GLF_DEAD(false))
    return;
  }
 uvec4 GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-4108.6865, 4325.3093)), max(_GLF_IDENTITY(_GLF_FUZZED(vec2(-4108.6865, 4325.3093)), clamp(_GLF_FUZZED(vec2(-4108.6865, 4325.3093)), _GLF_FUZZED(vec2(-4108.6865, 4325.3093)), _GLF_FUZZED(vec2(-4108.6865, 4325.3093)))), _GLF_FUZZED(vec2(-4108.6865, 4325.3093)))) : injectionSwitch)))).y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   return;
  }
 uvec4 GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))), false), false))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))) * (injectionSwitch.x)))) > injectionSwitch.y))))
    return;
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     for(int _injected_loop_counter = _GLF_IDENTITY(1, min(1, 1)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))))
        break;
      }
    }
   else
    {
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_14num_workgroupsubgroup_idsubgroup_local_idworkgroup_size.y = subgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 & 1)); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidnum_workgroupsubgroup_idsubgroup_size.z = _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_14num_workgroupsubgroup_idsubgroup_local_idworkgroup_size, uvec4(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_14num_workgroupsubgroup_idsubgroup_local_idworkgroup_size[0], GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_14num_workgroupsubgroup_idsubgroup_local_idworkgroup_size[1], GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_14num_workgroupsubgroup_idsubgroup_local_idworkgroup_size[2], _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_14num_workgroupsubgroup_idsubgroup_local_idworkgroup_size[3], (true ? GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_14num_workgroupsubgroup_idsubgroup_local_idworkgroup_size[3] : _GLF_FUZZED(149317u))))).y, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidnum_workgroupsubgroup_idsubgroup_size.z = _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_14num_workgroupsubgroup_idsubgroup_local_idworkgroup_size, uvec4(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_14num_workgroupsubgroup_idsubgroup_local_idworkgroup_size[0], GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_14num_workgroupsubgroup_idsubgroup_local_idworkgroup_size[1], GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_14num_workgroupsubgroup_idsubgroup_local_idworkgroup_size[2], _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_14num_workgroupsubgroup_idsubgroup_local_idworkgroup_size[3], (true ? GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_14num_workgroupsubgroup_idsubgroup_local_idworkgroup_size[3] : _GLF_FUZZED(149317u))))).y, 0u + (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidnum_workgroupsubgroup_idsubgroup_size.z = _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_14num_workgroupsubgroup_idsubgroup_local_idworkgroup_size, uvec4(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_14num_workgroupsubgroup_idsubgroup_local_idworkgroup_size[0], GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_14num_workgroupsubgroup_idsubgroup_local_idworkgroup_size[1], GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_14num_workgroupsubgroup_idsubgroup_local_idworkgroup_size[2], _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_14num_workgroupsubgroup_idsubgroup_local_idworkgroup_size[3], (true ? GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_14num_workgroupsubgroup_idsubgroup_local_idworkgroup_size[3] : _GLF_FUZZED(149317u))))).y))) | 0u);
    }
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), false || (! (false))), ! (! _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), (_GLF_IDENTITY((! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! (! (false))))), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(! (false), ! (! (! (false))))), true)), bool(bvec4(bool(bvec2((_GLF_IDENTITY(! (false), ! (! (! (false))))), true)), false, false, true))))))), ! (! ((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), bool(bvec2((! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_IDENTITY(false, true && (false)))))))))))))) && true))))), (injectionSwitch.x > injectionSwitch.y))))
  {
   do
    {
     do
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), mat2(1.0) * (mat2(_GLF_ONE(1.0, injectionSwitch.y)))) * (injectionSwitch)).x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), mat2(1.0) * (mat2(_GLF_ONE(1.0, injectionSwitch.y)))) * (injectionSwitch), _GLF_IDENTITY((_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), mat2(1.0) * (mat2(_GLF_ONE(1.0, injectionSwitch.y)))) * (injectionSwitch)) * mat2(1.0), mix(vec2(_GLF_FUZZED(10.77), _GLF_FUZZED(3074.1214)), vec2(((_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), mat2(1.0) * (mat2(_GLF_ONE(1.0, injectionSwitch.y)))) * (injectionSwitch)) * mat2(1.0))[0], ((_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), mat2(1.0) * (mat2(_GLF_ONE(1.0, injectionSwitch.y)))) * (injectionSwitch)) * mat2(1.0))[1]), bvec2(true, true))))).x > injectionSwitch.y))))))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
          {
           return;
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) || false))
      return;
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))))
  return;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
  }
 else
  {
   GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z = GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidnum_workgroupsubgroup_idsubgroup_size.z;
   if(_GLF_DEAD(false))
    return;
  }
 for(int _injected_loop_counter = _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), (~ (0)) / 1))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 uint subgroup_size = gl_SubgroupSize;
 GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidnum_workgroupsubgroup_idsubgroup_size.w = subgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), true && (_GLF_IDENTITY(! (! (false)), bool(bool(! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), ! (! (bool(bvec3(false, false, true))))))))))))), (_GLF_IDENTITY(! (! (false)), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), true && (! (false)))), bool(bool(! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), ! (! (bool(bvec3(false, false, true)))))))))))))) || false)))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     do
      {
       return;
      }
     while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false)))));
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, true))))
    return;
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     do
      {
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))) || false), false))))))), bool(bvec4(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), true, false, false))));
    }
   if(_GLF_DEAD(false))
    return;
  }
 _GLF_IDENTITY(GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.y = GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidnum_workgroupsubgroup_idsubgroup_size.w, (true ? GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.y = GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidnum_workgroupsubgroup_idsubgroup_size.w : _GLF_FUZZED(subgroup_size)));
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), bool(bool(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (! (! ((injectionSwitch.x > injectionSwitch.y)))), (! (! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))) && true))))))))))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), true && (((injectionSwitch.x < injectionSwitch.y)))), ! (! (! ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)))))), ! (! (! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), ! (! (! ((injectionSwitch.x < injectionSwitch.y)))))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(2), int(2))), ((0 >> _GLF_IDENTITY(int(2), int(2)))) << 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
            {
             return;
            }
          }
         for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x)))))); _injected_loop_counter --)
          {
           return;
          }
        }
       else
        {
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true)))))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y), float(_GLF_IDENTITY(mat2x3(min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y), 0.0, 0.0, abs(0.0), 0.0, 0.0), (mat2x3(min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y), 0.0, 0.0, abs(0.0), 0.0, 0.0)) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))))) || false))))
          return;
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         for(int _injected_loop_counter = ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(0), int(0)), min(1 << _GLF_IDENTITY(int(0), int(0)), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(0), int(0)), (1 << _GLF_IDENTITY(int(0), int(0))) ^ 0)))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), 0 | (int(0))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(0), int(0)))); _injected_loop_counter --)
          {
           if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true), bool(bool(_GLF_WRAPPED_IF_FALSE(false)))))
            {
            }
           else
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))), false)), ! (! (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))), false))))))) && true))) || (false), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))), false)), ! (! (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))), false))))))) && true), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))), false)), ! (! (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, false || (false))))), false))))))) && true)))))) || (false)))))))
              break;
             return;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, sqrt(0.0), 0.0, 0.0, 1.0, exp(0.0), 1.0))).x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             break;
            }
          }
        }
      }
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(1.0, 1.0)).y))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
            return;
           return;
          }
        }
      }
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_14num_workgroupsubgroup_idsubgroup_local_idworkgroup_size.z = subgroup_local_id;
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id.x = GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_14num_workgroupsubgroup_idsubgroup_local_idworkgroup_size.z;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, true))))
  return;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)))
    return;
  }
 else
  {
   GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.w = GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id.x;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
        continue;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_14num_workgroupsubgroup_idsubgroup_local_idworkgroup_size.x = num_workgroup;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
  }
 GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidnum_workgroupsubgroup_idsubgroup_size.y = GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_14num_workgroupsubgroup_idsubgroup_local_idworkgroup_size.x;
 GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.y = GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidnum_workgroupsubgroup_idsubgroup_size.y;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) - vec2(0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, float(mat3(0.0, 0.0, 0.0, 0.0, sqrt(0.0), 1.0, 1.0, 1.0, 1.0))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      return;
    }
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true))))), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(71.86)), float(_GLF_IDENTITY(injectionSwitch[0], 1.0 * (_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / 1.0)))), bool(true))), _GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, clamp(1, 1, 1))], 1.0 * (injectionSwitch[1])))).y, 0.0 + (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(71.86)), float(_GLF_IDENTITY(injectionSwitch[0], 1.0 * (_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / 1.0)))), bool(true))), _GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, clamp(1, 1, 1))], 1.0 * (injectionSwitch[1])))).y))), (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(71.86)), float(_GLF_IDENTITY(injectionSwitch[0], 1.0 * (_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / 1.0)))), bool(true))), _GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, clamp(1, 1, 1))], 1.0 * (injectionSwitch[1])))).y, 0.0 + (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(71.86)), float(_GLF_IDENTITY(injectionSwitch[0], 1.0 * (_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / 1.0)))), bool(true))), _GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, clamp(1, 1, 1))], 1.0 * (injectionSwitch[1])))).y))), ! (! ((injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(71.86)), float(_GLF_IDENTITY(injectionSwitch[0], 1.0 * (_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / 1.0)))), bool(true))), _GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, clamp(1, 1, 1))], 1.0 * (injectionSwitch[1])))).y, 0.0 + (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(71.86)), float(_GLF_IDENTITY(injectionSwitch[0], 1.0 * (_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / 1.0)))), bool(true))), _GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, clamp(1, 1, 1))], 1.0 * (injectionSwitch[1])))).y))))))) && true), ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, clamp(1, 1, 1))], 1.0 * (injectionSwitch[1])))).y)) && true))))
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         return;
        }
      }
    }
   else
    {
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_14num_workgroupsubgroup_idsubgroup_local_idworkgroup_size.w = workgroup_size, 0u | (GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_14num_workgroupsubgroup_idsubgroup_local_idworkgroup_size.w = workgroup_size));
   if(_GLF_DEAD(false))
    return;
  }
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y))))
    return;
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (false))));
 _GLF_IDENTITY(GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.y = GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_14num_workgroupsubgroup_idsubgroup_local_idworkgroup_size.w, (_GLF_IDENTITY(GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.y = GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_14num_workgroupsubgroup_idsubgroup_local_idworkgroup_size.w, 1u * (GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.y = GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_14num_workgroupsubgroup_idsubgroup_local_idworkgroup_size.w))) | 0u);
 for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, ~ (~ (0))))))), bool(bvec4(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), bool(bool(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0)))), false, false, true))); _injected_loop_counter --)
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) && true)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))
        return;
      }
     else
      {
      }
    }
   else
    {
    }
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), 1 * (int(0))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(3), int(3)))); _injected_loop_counter --)
        {
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
       _GLF_IDENTITY(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id.w = workgroup_id, (_GLF_IDENTITY(0u, max(0u, 0u)) | 0u) | (_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id.w = workgroup_id, ~ (~ (GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id.w = workgroup_id)))));
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
  }
 GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.w = _GLF_IDENTITY(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id, _GLF_IDENTITY((GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id), uvec4(0u, 0u, 0u, 0u) ^ (_GLF_IDENTITY((GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id), (true ? (GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id) : _GLF_FUZZED(GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id))))) ^ uvec4(0u, 0u, 0u, 0u)).w;
 uint workgroup_base = GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.y * GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.w;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
  }
 for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 & -4743)); _injected_loop_counter --)
        {
         return;
        }
      }
     else
      {
      }
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id.z = workgroup_base;
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x = _GLF_IDENTITY(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id, uvec4(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id[0], GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id[1], GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id[2], GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id[3])).z;
  }
 else
  {
  }
 uint virtual_gid = GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x + _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id, (_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(2u), uvec4(2u)), (uvec4(0u, 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(2u), uvec4(2u))) - (uvec4(0u, 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(6u), uvec4(6u))))) | (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id, clamp(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id, GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id, GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id)), min(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id, clamp(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id, GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id, GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id)), clamp(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id, clamp(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id, GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id, GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id)), _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id, clamp(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id, GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id, GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id)), _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id, clamp(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id, GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id, GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id)))), _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id, clamp(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id, GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id, GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id)))))).z * GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.y + GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.w;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id.y = virtual_gid;
   if(_GLF_DEAD(false))
    return;
  }
 GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.z = _GLF_IDENTITY(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id.y, (false ? _GLF_FUZZED(workgroup_id) : GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id.y)), 0u ^ (_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id.y, (false ? _GLF_FUZZED(workgroup_id) : GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id.y)))), GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id.y, GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id.y));
 uint next_virtual_gid = _GLF_IDENTITY(GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size, min(_GLF_IDENTITY(GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size, min(GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size, GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size)), GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size)).x + _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * _GLF_IDENTITY(GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id, (false ? _GLF_FUZZED(GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id) : GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id)).y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.y, 1u * (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z, (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z) | (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z)) * GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.y)), (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.y) | (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.y)), GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * _GLF_IDENTITY(GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.y, (true ? _GLF_IDENTITY(GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.y, (GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.y) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED((~ virtual_gid)))), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.y, (true ? _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * _GLF_IDENTITY(GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.y, 0u ^ (_GLF_IDENTITY(GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.y, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.y, max(GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.y, GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.y))), clamp(~ (_GLF_IDENTITY(GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.y, max(GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.y, GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.y))), ~ (_GLF_IDENTITY(GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.y, max(GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.y, GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.y))), ~ (_GLF_IDENTITY(GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.y, max(GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.y, GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.y))))))))), max(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.y, _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z, max(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z, GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z)) * GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.y)) : _GLF_FUZZED(atomicMax(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_14num_workgroupsubgroup_idsubgroup_local_idworkgroup_size.y, GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_14num_workgroupsubgroup_idsubgroup_local_idworkgroup_size.x)))), (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * _GLF_IDENTITY(GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.y, clamp(GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.y, GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.y, GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.y)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id, clamp(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id, GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id, _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id, (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id) * uvec4(1u, 1u, 1u, 1u)))).z * GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.y, max(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id, ~ (~ (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id))).z * GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.y, GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.y)) : _GLF_FUZZED(atomicMax(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_14num_workgroupsubgroup_idsubgroup_local_idworkgroup_size.y, GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_14num_workgroupsubgroup_idsubgroup_local_idworkgroup_size.x))))) / 1u))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.y, clamp(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.y, (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.y) | (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.y)), GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.y, _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.y, (true ? _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.y, max(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.y, GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.y)) : _GLF_FUZZED(_GLF_IDENTITY(atomicMax(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_14num_workgroupsubgroup_idsubgroup_local_idworkgroup_size.y, GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_14num_workgroupsubgroup_idsubgroup_local_idworkgroup_size.x), (atomicMax(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_14num_workgroupsubgroup_idsubgroup_local_idworkgroup_size.y, GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_14num_workgroupsubgroup_idsubgroup_local_idworkgroup_size.x)) | 0u)))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z, (false ? _GLF_FUZZED(workgroup_base) : GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z)) * GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.y, (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.y) | (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.y)), GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.y, _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.y, (_GLF_IDENTITY(true ? _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.y, max(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z, clamp(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z, GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z, GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z)) * GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.y, GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.y)) : _GLF_FUZZED(atomicMax(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_14num_workgroupsubgroup_idsubgroup_local_idworkgroup_size.y, GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_14num_workgroupsubgroup_idsubgroup_local_idworkgroup_size.x)), (true ? _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.y, max(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z, clamp(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z, GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z, GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z)) * GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.y, GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.y)) : _GLF_FUZZED(atomicMax(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_14num_workgroupsubgroup_idsubgroup_local_idworkgroup_size.y, GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_14num_workgroupsubgroup_idsubgroup_local_idworkgroup_size.x))) / 1u))))), (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.y, clamp(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.y, _GLF_IDENTITY((GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.y), ((GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.y)) - 0u) | (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.y)), _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z, (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z) << (0u | 0u)) * GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.y, _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.y, _GLF_IDENTITY((true ? _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.y, max(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.y, GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.y)) : _GLF_FUZZED(atomicMax(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_14num_workgroupsubgroup_idsubgroup_local_idworkgroup_size.y, GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_14num_workgroupsubgroup_idsubgroup_local_idworkgroup_size.x))), 1u * ((true ? _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.y, max(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.y, GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.y)) : _GLF_FUZZED(atomicMax(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_14num_workgroupsubgroup_idsubgroup_local_idworkgroup_size.y, GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_14num_workgroupsubgroup_idsubgroup_local_idworkgroup_size.x))))))))) >> 0u)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z, (false ? _GLF_FUZZED(workgroup_base) : GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z)) * GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.y, (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.y) | (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.y)), GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.y, _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.y, (_GLF_IDENTITY(true ? _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.y, max(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z, clamp(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z, GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z, GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z)) * GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.y, GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.y)) : _GLF_FUZZED(atomicMax(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_14num_workgroupsubgroup_idsubgroup_local_idworkgroup_size.y, GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_14num_workgroupsubgroup_idsubgroup_local_idworkgroup_size.x)), (true ? _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.y, max(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z, clamp(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z, GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z, GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z)) * GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.y, GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.y)) : _GLF_FUZZED(atomicMax(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_14num_workgroupsubgroup_idsubgroup_local_idworkgroup_size.y, GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_14num_workgroupsubgroup_idsubgroup_local_idworkgroup_size.x))) / 1u))))), (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.y, clamp(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.y, _GLF_IDENTITY((GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.y), ((GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.y)) - 0u) | (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.y)), _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z, (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z) << (0u | 0u)) * GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.y, _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.y, _GLF_IDENTITY((true ? _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.y, max(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.y, GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.y)) : _GLF_FUZZED(atomicMax(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_14num_workgroupsubgroup_idsubgroup_local_idworkgroup_size.y, GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_14num_workgroupsubgroup_idsubgroup_local_idworkgroup_size.x))), 1u * ((true ? _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.y, max(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.y, GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.y)) : _GLF_FUZZED(atomicMax(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_14num_workgroupsubgroup_idsubgroup_local_idworkgroup_size.y, GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_14num_workgroupsubgroup_idsubgroup_local_idworkgroup_size.x))))))))) >> 0u)), ((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z, (false ? _GLF_FUZZED(workgroup_base) : GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z)) * GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.y, (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.y) | (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.y)), GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.y, _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.y, (_GLF_IDENTITY(true ? _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.y, max(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z, clamp(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z, GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z, GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z)) * GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.y, GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.y)) : _GLF_FUZZED(atomicMax(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_14num_workgroupsubgroup_idsubgroup_local_idworkgroup_size.y, GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_14num_workgroupsubgroup_idsubgroup_local_idworkgroup_size.x)), (true ? _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.y, max(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z, clamp(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z, GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z, GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z)) * GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.y, GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.y)) : _GLF_FUZZED(atomicMax(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_14num_workgroupsubgroup_idsubgroup_local_idworkgroup_size.y, GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_14num_workgroupsubgroup_idsubgroup_local_idworkgroup_size.x))) / 1u))))), (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.y, clamp(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.y, _GLF_IDENTITY((GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.y), ((GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.y)) - 0u) | (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.y)), _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z, (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z) << (0u | 0u)) * GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.y, _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.y, _GLF_IDENTITY((true ? _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.y, max(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.y, GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.y)) : _GLF_FUZZED(atomicMax(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_14num_workgroupsubgroup_idsubgroup_local_idworkgroup_size.y, GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_14num_workgroupsubgroup_idsubgroup_local_idworkgroup_size.x))), 1u * ((true ? _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.y, max(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.y, GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.y)) : _GLF_FUZZED(atomicMax(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_14num_workgroupsubgroup_idsubgroup_local_idworkgroup_size.y, GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_14num_workgroupsubgroup_idsubgroup_local_idworkgroup_size.x))))))))) >> 0u))) | 0u)) - 0u) >> 0u)), _GLF_IDENTITY(((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.y, clamp(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.y, (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.y) | (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.y)), GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.y, _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.y, (true ? _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.y, max(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.y, GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.y)) : _GLF_FUZZED(atomicMax(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_14num_workgroupsubgroup_idsubgroup_local_idworkgroup_size.y, GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_14num_workgroupsubgroup_idsubgroup_local_idworkgroup_size.x)))))))) >> 0u, ((_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.y, clamp(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.y, (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * _GLF_IDENTITY(GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id, (false ? _GLF_FUZZED(uvec4(107892u, 121075u, 97057u, 25311u)) : GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id)).y) | (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.y)), GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.y, _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.y, (true ? _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.y, max(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.y, GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.y)) : _GLF_FUZZED(atomicMax(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_14num_workgroupsubgroup_idsubgroup_local_idworkgroup_size.y, GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_14num_workgroupsubgroup_idsubgroup_local_idworkgroup_size.x))))))), ((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.y, clamp(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.y, (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * _GLF_IDENTITY(GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id, (false ? _GLF_FUZZED(uvec4(107892u, 121075u, 97057u, 25311u)) : GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id)).y) | (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.y)), GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.y, _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.y, (true ? _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.y, max(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.y, GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.y)) : _GLF_FUZZED(atomicMax(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_14num_workgroupsubgroup_idsubgroup_local_idworkgroup_size.y, GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_14num_workgroupsubgroup_idsubgroup_local_idworkgroup_size.x)))))))) | 0u)) >> 0u) << 0u)) | 0u) + ((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.w, (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.w) - 0u) + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ int(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), injectionSwitch)), mat2(1.0) * (injectionSwitch)).x))), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), 1 * (_GLF_IDENTITY(1, (1) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))))) ^ _GLF_IDENTITY(0, max(0, 0)))) % _GLF_IDENTITY(GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.y, _GLF_IDENTITY(uint(uvec3(GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.y, 1u, 0u)), (uint(uvec3(GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.y, 1u, 0u))) << 0u)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) + (0 & -39880)), int(2))); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(0), (int(0)) << 0), int(0))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) << 0)) | (0))), int(0)))); _injected_loop_counter ++)
  {
   _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidnum_workgroupsubgroup_idsubgroup_size.x = next_virtual_gid, (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidnum_workgroupsubgroup_idsubgroup_size.x = next_virtual_gid) ^ 0u);
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, true))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         return;
        }
       else
        {
        }
      }
     if(_GLF_DEAD(false))
      {
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
    }
   GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.x = GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidnum_workgroupsubgroup_idsubgroup_size.x;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(false, true, false, false)))))
    return;
  }
 else
  {
  }
 atomicStore(buf[GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.x], uint(1), 4, 64, 4);
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       return;
      }
     else
      {
       if(_GLF_DEAD(false))
        break;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(! (! (! (false))), (! (! (! (false)))) || false))))))
      return;
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY(_GLF_IDENTITY((! (false)), bool(bvec4((! (false)), false, true, true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((! (false)), bool(bvec4((! (false)), false, true, true))), bool(bvec3(_GLF_IDENTITY((! (false)), bool(bvec4((! (false)), false, true, true))), false, false)))))))))
        {
         if(_GLF_DEAD(false))
          continue;
         return;
        }
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 uint read = atomicLoad(buf[GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.z], _GLF_IDENTITY(4, (0 ^ 0) | (4)), 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(bitCount(read)) : 1))), int(1))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), 1 * (int(1)))))); _injected_loop_counter ++)
  {
   GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.x = read;
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && true)))
  {
  }
 else
  {
   do
    {
     for(int _injected_loop_counter = (int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(7, min(7, 7))), ~ (_GLF_IDENTITY(~ (int(_GLF_IDENTITY(_GLF_IDENTITY(7, (_GLF_IDENTITY(7, (7) / 1)) / _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (int(_GLF_ONE(1.0, injectionSwitch.y))) + 0)), min(7, 7)))), max(_GLF_IDENTITY(~ (_GLF_IDENTITY(int(_GLF_IDENTITY(7, min(7, 7))), clamp(int(_GLF_IDENTITY(7, min(7, 7))), int(_GLF_IDENTITY(7, min(7, 7))), int(_GLF_IDENTITY(7, min(7, 7)))))), ~ (~ (~ (int(_GLF_IDENTITY(_GLF_IDENTITY(7, min(_GLF_IDENTITY(7, max(7, 7)), 7)), _GLF_IDENTITY(min(7, _GLF_IDENTITY(7, int(ivec2(_GLF_IDENTITY(7, (false ? _GLF_FUZZED(71893) : 7)), 1)))), clamp(min(7, 7), min(7, 7), min(7, 7))))))))), _GLF_IDENTITY(~ (int(_GLF_IDENTITY(7, min(7, 7)))), _GLF_IDENTITY(~ (~ _GLF_IDENTITY((~ (int(_GLF_IDENTITY(7, min(_GLF_IDENTITY(7, (7) + 0), 7))))), ((~ (int(_GLF_IDENTITY(7, min(_GLF_IDENTITY(7, (7) + 0), 7)))))) | int(_GLF_ZERO(0.0, injectionSwitch.x)))), (false ? _GLF_FUZZED(58091) : ~ (~ _GLF_IDENTITY((~ (int(_GLF_IDENTITY(7, min(_GLF_IDENTITY(7, (7) + 0), 7))))), ((~ (int(_GLF_IDENTITY(7, min(_GLF_IDENTITY(7, (7) + 0), 7)))))) | int(_GLF_ZERO(0.0, injectionSwitch.x))))))))))), _GLF_IDENTITY(int(7), max(_GLF_IDENTITY(int(7), ~ (~ (int(_GLF_IDENTITY(7, (7) - 0))))), _GLF_IDENTITY(int(7), _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true))) ? int(7) : _GLF_FUZZED(30897)), max((true ? int(7) : _GLF_FUZZED(30897)), (true ? int(7) : _GLF_FUZZED(_GLF_IDENTITY(30897, _GLF_IDENTITY(int(int(30897)), clamp(int(int(30897)), int(int(30897)), int(int(30897))))))))))))))); _injected_loop_counter --)
      {
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (true ? _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(float(33185u))), float(injectionSwitch.y), bool(true))), injectionSwitch.y))) : _GLF_FUZZED(-180.276))))); _injected_loop_counter ++)
            {
             return;
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        {
        }
       else
        {
         return;
        }
      }
    }
  }
 do
  {
   for(int _injected_loop_counter = _GLF_IDENTITY(1, ~ (~ (1))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     if(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id, clamp(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id, uvec4(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id[0], GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id[1], GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id[2], GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id[3])), uvec4(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id[_GLF_IDENTITY(0, (0) | int(_GLF_ZERO(0.0, injectionSwitch.x)))], GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id[1], GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id[2], GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id[3])), GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id, _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id, _GLF_IDENTITY((GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id) - uvec4(0u, 0u, 0u, 0u), ((GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id) - uvec4(0u, 0u, _GLF_IDENTITY(0u, 0u + (0u)), 0u)) | ((GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id) - uvec4(0u, 0u, 0u, 0u)))))).w + 1 < GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.y)
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             break;
            }
           continue;
           if(_GLF_DEAD(false))
            continue;
          }
         return;
        }
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-3.2) : injectionSwitch.x)) : _GLF_FUZZED(28.53))), injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-3.2) : _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 1.0, 1.0, 0.0))), injectionSwitch.x, injectionSwitch.x)))) : _GLF_FUZZED(28.53))), injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(-3.2) : injectionSwitch.x)) : _GLF_FUZZED(28.53))), injectionSwitch.x, injectionSwitch.x), (clamp(_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(-3.2) : injectionSwitch.x)) : _GLF_FUZZED(28.53))), injectionSwitch.x, injectionSwitch.x)) / 1.0)) < injectionSwitch.y), false, false)))))), bool(bvec4(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, false, true)))), bool(bool(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(-3.2), (_GLF_FUZZED(-3.2)) - 0.0) : injectionSwitch.x), (true ? (false ? _GLF_IDENTITY(_GLF_FUZZED(-3.2), (_GLF_FUZZED(-3.2)) - 0.0) : injectionSwitch.x) : _GLF_FUZZED(-8746.0376)))) : _GLF_FUZZED(28.53))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-6.4), (true ? _GLF_IDENTITY(_GLF_FUZZED(-6.4), (_GLF_FUZZED(-6.4)) + abs(0.0)) : _GLF_FUZZED((ivec2(-36528, 9668) , injectionSwitch[0]))))), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x) - 0.0)), bool(true))), injectionSwitch.x)) < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(-3.2), (_GLF_FUZZED(-3.2)) - 0.0) : injectionSwitch.x), (true ? (false ? _GLF_IDENTITY(_GLF_FUZZED(-3.2), (_GLF_FUZZED(-3.2)) - 0.0) : injectionSwitch.x) : _GLF_FUZZED(-8746.0376)))) : _GLF_FUZZED(28.53))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-6.4), (true ? _GLF_IDENTITY(_GLF_FUZZED(-6.4), (_GLF_FUZZED(-6.4)) + abs(0.0)) : _GLF_FUZZED((ivec2(-36528, 9668) , injectionSwitch[0]))))), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x) - 0.0)), bool(true))), injectionSwitch.x)) < injectionSwitch.y)), false))), bool(bvec4(_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x < injectionSwitch.y)), false || (bool((injectionSwitch.x < injectionSwitch.y))))))), ! (! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(8195.2091, -9.8)))), injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x < injectionSwitch.y))))), false, false, true))))))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))) || false))
          {
           do
            {
             return;
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_DEAD(false))
            break;
          }
         if(_GLF_DEAD(false))
          break;
         do
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              break;
             continue;
            }
           atomicStore(checker[_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id, min(_GLF_IDENTITY(GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id, min(_GLF_IDENTITY(GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id, uvec4(0u, 0u, 0u, 0u) ^ (GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id)), GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id)), GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id)), (GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id) >> uvec4(0u, 0u, 0u, 0u)).z], GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.x, _GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, (4) - 0) : _GLF_FUZZED(_injected_loop_counter))), 64, 4);
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       else
        {
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(636.799)), bool(false))))) < injectionSwitch.y)), true)))), ! (! _GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (true ? injectionSwitch[0] : _GLF_FUZZED(-5484.6223))), injectionSwitch[1])).x < injectionSwitch.y)), true))))), (_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (true ? injectionSwitch[0] : _GLF_FUZZED(-5484.6223))), injectionSwitch[1])).x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[0])), (true ? injectionSwitch[0] : _GLF_FUZZED(-5484.6223))), injectionSwitch[1]), min(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[0])), (true ? injectionSwitch[0] : _GLF_FUZZED(-5484.6223))), injectionSwitch[1]), vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[0])), (true ? injectionSwitch[0] : _GLF_FUZZED(-5484.6223))), _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) - 0.0))))).x < injectionSwitch.y) || false))), true))))), true && ((! (_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (true ? injectionSwitch[0] : _GLF_FUZZED(-5484.6223))), injectionSwitch[1])).x < injectionSwitch.y)), true)))))))) || false)))))))
        break;
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         do
          {
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             subgroupAll(false);
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
       else
        {
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), false || (_GLF_WRAPPED_IF_FALSE(false))))
          {
          }
         else
          {
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
        }
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), true && (bool(false)))), _GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(bool(false), true && (bool(false)))), true)), (bool(bvec2(bool(_GLF_IDENTITY(bool(false), true && (bool(false)))), true))) && true)))))
        {
         if(_GLF_DEAD(false))
          break;
        }
       else
        {
         do
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              break;
             for(int _injected_loop_counter = ((0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(6), ~ _GLF_IDENTITY((~ (int(6))), ((~ (int(6)))) << 0)), int(_GLF_IDENTITY(6, max(6, 6))))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), max(int(4), int(4))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) / 1.0)) - 0.0))))); _GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) | 0))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 atomicStore(checker[GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.z], GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_12readsubgroup_sizevirtual_gidworkgroup_id.x, _GLF_IDENTITY(4, (4) << 0), _GLF_IDENTITY(64, max(_GLF_IDENTITY(64, (86756 & 0) | (64)), 64)), 4);
                }
               else
                {
                 if(_GLF_DEAD(false))
                  continue;
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  return;
                 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))))))
                  continue;
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  return;
                 break;
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
              }
             if(_GLF_DEAD(false))
              return;
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))), bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0), (true ? mat3x4(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0) : _GLF_FUZZED(mat3x4(-3114.2574, 3145.0714, -832.552, -0.5, 0.0, -2.9, 69.46, 66.06, 742.545, -43.05, -2.7, -10.03)))))), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), cos(0.0), 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), sin(0.0))))), _GLF_IDENTITY(false, ! (! (false)))))))));
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(8.0), _GLF_FUZZED((972.019))), bvec2(false, false))).y), false)))))))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        break;
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         subgroupAll(true);
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           return;
          }
         else
          {
          }
        }
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      break;
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
