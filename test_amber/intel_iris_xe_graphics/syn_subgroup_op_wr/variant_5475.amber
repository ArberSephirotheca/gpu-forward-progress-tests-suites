#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_16 {
 ivec4 _f0;
 mat2x4 _f1;
 mat3x2 _f2;
 ivec2 _f3;
} ;

struct _GLF_struct_17 {
 vec2 _f0;
 mat3x4 _f1;
 _GLF_struct_16 _f2;
} ;

struct _GLF_struct_18 {
 uint workgroup_size;
 mat3x4 _f0;
 _GLF_struct_17 _f1;
} ;

struct _GLF_struct_13 {
 uint _f0;
 int _f1;
 bvec4 _f2;
} ;

struct _GLF_struct_12 {
 mat4x3 _f0;
 bvec2 _f1;
} ;

struct _GLF_struct_11 {
 ivec3 _f0;
 float _f1;
 mat2 _f2;
 bool _f3;
 bool _f4;
} ;

struct _GLF_struct_10 {
 uvec2 _f0;
 mat2 _f1;
 bool _f2;
 bvec4 _f3;
 bvec3 _f4;
 uvec4 _f5;
} ;

struct _GLF_struct_14 {
 _GLF_struct_10 _f0;
 ivec2 _f1;
 _GLF_struct_11 _f2;
 _GLF_struct_12 _f3;
 vec4 _f4;
 mat3x2 _f5;
 _GLF_struct_13 _f6;
} ;

struct _GLF_struct_8 {
 uvec2 _f0;
} ;

struct _GLF_struct_9 {
 uint num_workgroup;
 bvec3 _f0;
 _GLF_struct_8 _f1;
} ;

struct _GLF_struct_15 {
 bvec4 _f0;
 _GLF_struct_9 _f1;
 uvec3 _f2;
 vec3 _f3;
 _GLF_struct_14 _f4;
 mat4x3 _f5;
} ;

struct _GLF_struct_5 {
 mat3x4 _f0;
 ivec3 _f1;
 bvec3 _f2;
 vec4 _f3;
} ;

struct _GLF_struct_4 {
 uvec2 _f0;
 uint _f1;
} ;

struct _GLF_struct_3 {
 uvec3 _f0;
 uvec3 _f1;
 mat2x4 _f2;
 float _f3;
 bvec3 _f4;
} ;

struct _GLF_struct_6 {
 _GLF_struct_3 _f0;
 _GLF_struct_4 _f1;
 _GLF_struct_5 _f2;
} ;

struct _GLF_struct_1 {
 bvec4 _f0;
 ivec2 _f1;
 vec2 _f2;
 vec3 _f3;
 uint _f4;
} ;

struct _GLF_struct_0 {
 bvec3 _f0;
 mat4x2 _f1;
 uvec3 _f2;
 bool _f3;
 bvec2 _f4;
} ;

struct _GLF_struct_2 {
 _GLF_struct_0 _f0;
 mat4x3 _f1;
 _GLF_struct_1 _f2;
 uvec2 _f3;
} ;

struct _GLF_struct_7 {
 _GLF_struct_2 _f0;
 _GLF_struct_6 _f1;
 uint workgroup_base;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     for(int _injected_loop_counter = (0 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), int(3)), (1 << _GLF_IDENTITY(int(3), int(3))) ^ 0)) >> _GLF_IDENTITY(int(3), int(3)))); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), (true ? injectionSwitch.y : _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(0.3, mix(float(_GLF_IDENTITY(_GLF_FUZZED(vec2(-8.0, 12.11).g), float(mat2(_GLF_IDENTITY(_GLF_FUZZED(vec2(-8.0, 12.11).g), (_GLF_FUZZED(vec2(-8.0, 12.11).g)) - 0.0), 1.0, 0.0, 0.0)))), float(0.3), bool(true))), mix(float(_GLF_IDENTITY(0.3, mix(float(_GLF_IDENTITY(_GLF_FUZZED(vec2(-8.0, 12.11).g), float(mat2(_GLF_IDENTITY(_GLF_FUZZED(vec2(-8.0, 12.11).g), (_GLF_FUZZED(vec2(-8.0, 12.11).g)) - 0.0), 1.0, 0.0, 0.0)))), float(0.3), bool(true)))), float(_GLF_FUZZED(-1.1)), bool(false))))))))))))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           return;
          }
         else
          {
          }
        }
      }
    }
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       do
        {
         do
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(false || (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY(_GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), ! (! (! ((! (false)))))))), false || (_GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), ! (! (! ((! (false))))))))))), (_GLF_IDENTITY(false, ! (! (false)))) && true))), (false || (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), ! (! (! ((! (false))))))))), (_GLF_IDENTITY(false, ! (! (false)))) && true)))) && true))) || false)))))
                {
                 do
                  {
                   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
                    {
                    }
                   else
                    {
                     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), ! (! (! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(4.6) : _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))))))))
                      {
                       for(int _injected_loop_counter = _GLF_IDENTITY(0, 0 | (0)); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 & 1) | 1)); _injected_loop_counter ++)
                        {
                         do
                          {
                           if(_GLF_WRAPPED_IF_FALSE(false))
                            {
                            }
                           else
                            {
                             return;
                            }
                          }
                         while(_GLF_WRAPPED_LOOP(false));
                        }
                      }
                     else
                      {
                      }
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))))));
      }
    }
  }
 else
  {
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 _GLF_struct_15 _GLF_struct_replacement_15 = _GLF_struct_15(bvec4(_GLF_IDENTITY(true, (true) || false)), _GLF_struct_9(_GLF_IDENTITY(gl_NumWorkGroups.x, min(gl_NumWorkGroups.x, gl_NumWorkGroups.x)), bvec3(true), _GLF_struct_8(uvec2(1u))), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) + 0u), clamp(_GLF_IDENTITY(1u, (1u) + 0u), _GLF_IDENTITY(1u, (1u) + 0u), _GLF_IDENTITY(1u, (1u) + 0u))), 1u, 1u), (clamp(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) + 0u), _GLF_IDENTITY(clamp(_GLF_IDENTITY(1u, (1u) + 0u), _GLF_IDENTITY(1u, (1u) + 0u), _GLF_IDENTITY(1u, (1u) + 0u)), (clamp(_GLF_IDENTITY(1u, (1u) + 0u), _GLF_IDENTITY(1u, (1u) + 0u), _GLF_IDENTITY(1u, (1u) + 0u))) >> (18988u & 0u))), 1u, 1u)) + 0u))) - (1u ^ 1u))), _GLF_IDENTITY(vec3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), (1.0) - 0.0)), max(vec3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), (1.0) - 0.0)), vec3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), (_GLF_IDENTITY(1.0, (1.0) + 0.0)) - _GLF_IDENTITY(0.0, min(0.0, 0.0)))))), _GLF_struct_14(_GLF_struct_10(_GLF_IDENTITY(uvec2(1u), ~ (~ (uvec2(1u)))), mat2(1.0), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), ! (! (true && (true))))), false)), (bool(bvec2(_GLF_IDENTITY(true, true && (true)), false))) || false)), bvec4(true), bvec3(true), _GLF_IDENTITY(_GLF_IDENTITY(uvec4(1u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(1u))), (false ? _GLF_FUZZED(uvec4(116379u, 69747u, 56494u, 140399u)) : _GLF_IDENTITY(uvec4(1u), _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), clamp(uvec4(0u, 0u, 0u, 0u), uvec4(0u, 0u, 0u, 0u), uvec4(0u, 0u, 0u, 0u))) ^ (uvec4(1u)))))), ivec2(1), _GLF_struct_11(ivec3(1), 1.0, mat2(1.0), true, true), _GLF_struct_12(mat4x3(1.0), bvec2(true)), vec4(1.0), mat3x2(1.0), _GLF_struct_13(1u, 1, bvec4(true))), mat4x3(1.0));
 _GLF_struct_18 _GLF_struct_replacement_18 = _GLF_struct_18(_GLF_IDENTITY(gl_WorkGroupSize.x, (false ? _GLF_FUZZED(uvec3(173898u, 93004u, 189654u)[1]) : gl_WorkGroupSize.x)), mat3x4(1.0), _GLF_struct_17(vec2(1.0), mat3x4(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-4504.8036)), float(1.0), bool(true))))), clamp(_GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-4504.8036)), float(1.0), bool(true)))), min(clamp(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-4504.8036)), float(1.0), bool(true)))), clamp(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-4504.8036, clamp(-4504.8036, -4504.8036, -4504.8036)))), float(1.0), bool(true))))))), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-4504.8036)), float(1.0), bool(true))))), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-4504.8036)), float(1.0), bool(true))))))), 1.0))), _GLF_struct_16(_GLF_IDENTITY(ivec4(1), _GLF_IDENTITY(max(ivec4(1), ivec4(1)), (max(ivec4(1), ivec4(1))) | ivec4(0, 0, 0, 0))), mat2x4(1.0), mat3x2(1.0), ivec2(1))));
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), (0u >> _GLF_IDENTITY(uint(0u), uint(0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u)) | (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u))))), 1u * (gl_WorkGroupID.x))));
 _GLF_struct_7 _GLF_struct_replacement_7 = _GLF_struct_7(_GLF_struct_2(_GLF_struct_0(bvec3(true), mat4x2(1.0), uvec3(1u), true, bvec2(_GLF_IDENTITY(true, ! (! (true))))), mat4x3(1.0), _GLF_struct_1(bvec4(true), ivec2(1), vec2(1.0), vec3(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, 1.0 * (1.0)), _GLF_IDENTITY(1.0, float(float(1.0)))))), 1u), uvec2(1u)), _GLF_struct_6(_GLF_struct_3(uvec3(1u), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), _GLF_IDENTITY(uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, ~ (~ (0u))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), min(_GLF_IDENTITY(uvec3(1u), max(uvec3(1u), uvec3(1u))), _GLF_IDENTITY(uvec3(1u), min(_GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u))), _GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), _GLF_IDENTITY(uvec3(1u), uvec3(0u, 0u, 0u) ^ (uvec3(1u))))))))), uvec3(0u, _GLF_IDENTITY(0u, (0u) + 0u), 0u) ^ (_GLF_IDENTITY(uvec3(1u), min(_GLF_IDENTITY(uvec3(1u), max(uvec3(1u), uvec3(1u))), _GLF_IDENTITY(uvec3(1u), _GLF_IDENTITY(min(_GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u))), _GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), _GLF_IDENTITY(uvec3(1u), uvec3(0u, 0u, 0u) ^ (uvec3(1u)))))), (min(_GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u))), _GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), _GLF_IDENTITY(uvec3(1u), uvec3(0u, 0u, 0u) ^ (uvec3(1u))))))) + uvec3(0u, 0u, 0u))))))), ~ (~ (uvec3(1u))))), uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (1u) >> _GLF_IDENTITY(0u, _GLF_IDENTITY((0u), ((0u)) | 0u) * 1u))), min(_GLF_IDENTITY(uvec3(1u), max(uvec3(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_id, (workgroup_id) | 0u)), min(_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_id, (workgroup_id) | 0u)), (~ (_GLF_IDENTITY(workgroup_id, (workgroup_id) | 0u))) | 0u), ~ (_GLF_IDENTITY(workgroup_id, (workgroup_id) | 0u))))))) : 1u))), uvec3(1u))), uvec3(1u))), ~ (~ (uvec3(1u))))), (_GLF_IDENTITY(uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), min(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), _GLF_IDENTITY((uvec3(1u)) | (uvec3(1u)), ((uvec3(1u)) | (uvec3(1u))) | uvec3(0u, 0u, 0u))), max(uvec3(1u), uvec3(1u))), uvec3(_GLF_IDENTITY(1u, min(1u, 1u))))), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((uvec3(1u)), uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(0.3)), float(_GLF_IDENTITY(0.0, (0.0) / 1.0)), bool(true))), injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, 0.0)), injectionSwitch.x)) + (_GLF_IDENTITY((uvec3(1u)), ((uvec3(1u))) / uvec3(1u, 1u, 1u)))), uvec3(0u, 0u, 0u) | (~ (uvec3(1u))))))), clamp(uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), min(_GLF_IDENTITY(uvec3(1u), max(uvec3(1u), uvec3(1u))), uvec3(1u))), ~ (~ (uvec3(1u))))), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), min(_GLF_IDENTITY(uvec3(1u), max(uvec3(1u), _GLF_IDENTITY(uvec3(1u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), (_GLF_IDENTITY(uvec3(1u), uvec3(0u, 0u, 0u) ^ (uvec3(1u)))) / uvec3(1u, 1u, 1u)), _GLF_IDENTITY(clamp(_GLF_IDENTITY(uvec3(1u), (_GLF_IDENTITY(uvec3(1u), uvec3(0u, 0u, 0u) ^ (uvec3(1u)))) / uvec3(1u, 1u, 1u)), _GLF_IDENTITY(uvec3(1u), (_GLF_IDENTITY(uvec3(1u), uvec3(0u, 0u, 0u) ^ (uvec3(1u)))) / uvec3(1u, 1u, 1u)), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), (_GLF_IDENTITY(uvec3(1u), uvec3(0u, 0u, 0u) ^ _GLF_IDENTITY((uvec3(1u)), _GLF_IDENTITY((_GLF_IDENTITY((uvec3(1u)), min((uvec3(1u)), (uvec3(1u))))) / uvec3(1u, 1u, 1u), ((_GLF_IDENTITY((uvec3(1u)), min((uvec3(1u)), (uvec3(1u))))) / uvec3(1u, 1u, 1u)) - uvec3(0u, 0u, 0u))))) / uvec3(1u, 1u, 1u)), clamp(_GLF_IDENTITY(uvec3(1u), (_GLF_IDENTITY(uvec3(1u), uvec3(0u, 0u, 0u) ^ (uvec3(1u)))) / uvec3(1u, 1u, 1u)), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), (_GLF_IDENTITY(uvec3(1u), uvec3(0u, 0u, 0u) ^ (uvec3(1u)))) / uvec3(1u, 1u, 1u)), (uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u)) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) / 1u)) / 1u)), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (1u) | (1u))), uvec3(0u, 0u, 0u) ^ (uvec3(1u)))) / uvec3(1u, 1u, 1u)), (_GLF_IDENTITY(uvec3(1u), (_GLF_IDENTITY(uvec3(1u), uvec3(0u, 0u, 0u) ^ (uvec3(1u)))) / uvec3(1u, 1u, 1u))) - uvec3(0u, 0u, 0u)))), _GLF_IDENTITY(uvec3(1u), (_GLF_IDENTITY(uvec3(1u), uvec3(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((0u), max(_GLF_IDENTITY((0u), uint(uint((0u)))), _GLF_IDENTITY((0u), clamp((0u), (0u), _GLF_IDENTITY((0u), min((0u), (0u))))))) - (0u >> _GLF_IDENTITY(uint(3u), uint(3u))))) ^ (uvec3(1u)))) / uvec3(1u, 1u, 1u))))), max(clamp(_GLF_IDENTITY(uvec3(1u), (_GLF_IDENTITY(uvec3(1u), uvec3(0u, 0u, 0u) ^ (uvec3(1u)))) / uvec3(1u, 1u, 1u)), _GLF_IDENTITY(uvec3(1u), (_GLF_IDENTITY(uvec3(1u), uvec3(0u, 0u, 0u) ^ (uvec3(1u)))) / uvec3(1u, 1u, 1u)), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), (_GLF_IDENTITY(uvec3(1u), uvec3(0u, 0u, 0u) ^ _GLF_IDENTITY((uvec3(1u)), _GLF_IDENTITY((_GLF_IDENTITY((uvec3(1u)), min((uvec3(1u)), (uvec3(1u))))) / uvec3(1u, 1u, 1u), ((_GLF_IDENTITY((uvec3(1u)), min((uvec3(1u)), (uvec3(1u))))) / uvec3(1u, 1u, 1u)) - uvec3(0u, 0u, 0u))))) / uvec3(1u, 1u, 1u)), clamp(_GLF_IDENTITY(uvec3(1u), (_GLF_IDENTITY(uvec3(1u), uvec3(0u, 0u, 0u) ^ (uvec3(1u)))) / uvec3(1u, 1u, 1u)), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), (_GLF_IDENTITY(uvec3(1u), uvec3(0u, 0u, 0u) ^ (uvec3(1u)))) / uvec3(1u, 1u, 1u)), (uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u)) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) / 1u)) / 1u)), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (1u) | (1u))), uvec3(0u, 0u, 0u) ^ (uvec3(1u)))) / uvec3(1u, 1u, 1u)), (_GLF_IDENTITY(uvec3(1u), (_GLF_IDENTITY(uvec3(1u), uvec3(0u, 0u, 0u) ^ (uvec3(1u)))) / uvec3(1u, 1u, 1u))) - uvec3(0u, 0u, 0u)))), _GLF_IDENTITY(uvec3(1u), (_GLF_IDENTITY(uvec3(1u), uvec3(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((0u), max(_GLF_IDENTITY((0u), uint(uint((0u)))), _GLF_IDENTITY((0u), clamp((0u), (0u), _GLF_IDENTITY((0u), min((0u), (0u))))))) - (0u >> _GLF_IDENTITY(uint(3u), uint(3u))))) ^ (uvec3(1u)))) / uvec3(1u, 1u, 1u))))), clamp(_GLF_IDENTITY(uvec3(1u), (_GLF_IDENTITY(uvec3(1u), uvec3(0u, 0u, 0u) ^ (uvec3(1u)))) / uvec3(1u, 1u, 1u)), _GLF_IDENTITY(uvec3(1u), (_GLF_IDENTITY(uvec3(1u), uvec3(0u, 0u, 0u) ^ (uvec3(1u)))) / uvec3(1u, 1u, 1u)), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), (_GLF_IDENTITY(uvec3(1u), uvec3(0u, 0u, 0u) ^ _GLF_IDENTITY((uvec3(1u)), _GLF_IDENTITY((_GLF_IDENTITY((uvec3(1u)), min((uvec3(1u)), (uvec3(1u))))) / uvec3(1u, 1u, 1u), ((_GLF_IDENTITY((uvec3(1u)), min((uvec3(1u)), (uvec3(1u))))) / uvec3(1u, 1u, 1u)) - uvec3(0u, 0u, 0u))))) / uvec3(1u, 1u, 1u)), clamp(_GLF_IDENTITY(uvec3(1u), (_GLF_IDENTITY(uvec3(1u), uvec3(0u, 0u, 0u) ^ (uvec3(1u)))) / uvec3(1u, 1u, 1u)), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), (_GLF_IDENTITY(uvec3(1u), uvec3(0u, 0u, 0u) ^ (uvec3(1u)))) / uvec3(1u, 1u, 1u)), (uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u)) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) / 1u)) / 1u)), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (1u) | (1u))), uvec3(0u, 0u, 0u) ^ (uvec3(1u)))) / uvec3(1u, 1u, 1u)), (_GLF_IDENTITY(uvec3(1u), (_GLF_IDENTITY(uvec3(1u), uvec3(0u, 0u, 0u) ^ (uvec3(1u)))) / uvec3(1u, 1u, 1u))) - uvec3(0u, 0u, 0u)))), _GLF_IDENTITY(uvec3(1u), (_GLF_IDENTITY(uvec3(1u), uvec3(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((0u), max(_GLF_IDENTITY((0u), uint(uint((0u)))), _GLF_IDENTITY((0u), clamp((0u), (0u), _GLF_IDENTITY((0u), min((0u), (0u))))))) - (0u >> _GLF_IDENTITY(uint(3u), uint(3u))))) ^ (uvec3(1u)))) / uvec3(1u, 1u, 1u))))))))))))), uvec3(_GLF_IDENTITY(1u, (1u) ^ 0u)))), ~ (~ (uvec3(1u))))), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), min(_GLF_IDENTITY(uvec3(1u), _GLF_IDENTITY(max(uvec3(1u), uvec3(1u)), uvec3(uvec4(max(uvec3(1u), uvec3(1u)), 1u)))), uvec3(1u))), ~ (~ (uvec3(1u)))))))) | _GLF_IDENTITY((uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), min(_GLF_IDENTITY(uvec3(1u), max(uvec3(1u), uvec3(1u))), uvec3(_GLF_IDENTITY(1u, max(1u, 1u))))), ~ (~ (uvec3(1u)))))), uvec3(uvec3(_GLF_IDENTITY((uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), min(_GLF_IDENTITY(uvec3(1u), max(uvec3(1u), uvec3(1u))), uvec3(_GLF_IDENTITY(1u, max(1u, 1u))))), ~ (~ (uvec3(1u)))))), min(_GLF_IDENTITY((uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), min(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), max(uvec3(1u), uvec3(1u))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), max(uvec3(1u), uvec3(1u))), min(_GLF_IDENTITY(uvec3(1u), max(uvec3(1u), uvec3(1u))), _GLF_IDENTITY(uvec3(1u), max(uvec3(1u), uvec3(1u))))) : _GLF_FUZZED(uvec3(34395u, 170705u, 109196u)))), uvec3(_GLF_IDENTITY(1u, max(1u, 1u))))), ~ (~ (uvec3(1u)))))), uvec3(uvec3((uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), min(_GLF_IDENTITY(uvec3(1u), max(uvec3(1u), uvec3(1u))), uvec3(_GLF_IDENTITY(1u, max(1u, 1u))))), ~ (~ (uvec3(1u))))))))), (uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), min(_GLF_IDENTITY(uvec3(1u), max(uvec3(1u), uvec3(1u))), uvec3(_GLF_IDENTITY(1u, max(1u, 1u))))), ~ (~ (uvec3(1u))))))))))))))), max(_GLF_IDENTITY(uvec3(1u), _GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, (0u) / 1u), 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), min(_GLF_IDENTITY(uvec3(1u), max(uvec3(1u), uvec3(1u))), uvec3(1u))), ~ (~ (uvec3(1u))))), uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), min(_GLF_IDENTITY(uvec3(1u), max(_GLF_IDENTITY(uvec3(1u), (uvec3(1u)) | (uvec3(1u))), uvec3(_GLF_IDENTITY(1u, ~ (~ (1u)))))), uvec3(1u))), ~ (~ (uvec3(1u))))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), min(_GLF_IDENTITY(uvec3(1u), max(uvec3(1u), uvec3(1u))), uvec3(1u))), max(_GLF_IDENTITY(uvec3(1u), min(_GLF_IDENTITY(uvec3(1u), max(uvec3(1u), uvec3(1u))), uvec3(1u))), _GLF_IDENTITY(uvec3(1u), min(_GLF_IDENTITY(uvec3(1u), max(uvec3(1u), uvec3(1u))), uvec3(1u))))), ~ (_GLF_IDENTITY(~ (uvec3(1u)), uvec3(0u, 0u, 0u) | (~ (uvec3(1u))))))), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), min(_GLF_IDENTITY(uvec3(1u), max(uvec3(1u), uvec3(1u))), uvec3(1u))), max(_GLF_IDENTITY(uvec3(1u), min(_GLF_IDENTITY(uvec3(1u), max(uvec3(1u), uvec3(1u))), uvec3(_GLF_IDENTITY(1u, (1u) >> 0u)))), _GLF_IDENTITY(uvec3(1u), min(_GLF_IDENTITY(uvec3(1u), max(uvec3(1u), uvec3(1u))), uvec3(1u))))), ~ (_GLF_IDENTITY(~ (uvec3(1u)), uvec3(0u, 0u, 0u) | (~ (uvec3(1u)))))))), (uvec3(uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), min(_GLF_IDENTITY(uvec3(1u), max(uvec3(1u), uvec3(1u))), uvec3(1u))), max(_GLF_IDENTITY(uvec3(1u), min(_GLF_IDENTITY(uvec3(1u), max(uvec3(1u), uvec3(1u))), uvec3(1u))), _GLF_IDENTITY(uvec3(1u), min(_GLF_IDENTITY(uvec3(1u), max(uvec3(1u), uvec3(1u))), uvec3(1u))))), ~ (_GLF_IDENTITY(~ (uvec3(1u)), uvec3(0u, 0u, 0u) | (~ (uvec3(1u))))))))) ^ uvec3(0u, 0u, 0u))), min(uvec3(_GLF_IDENTITY(uvec3(uvec3(0u, 0u, 0u) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), min(_GLF_IDENTITY(uvec3(1u), max(uvec3(1u), uvec3(1u))), uvec3(1u))), max(_GLF_IDENTITY(uvec3(1u), min(_GLF_IDENTITY(uvec3(1u), max(uvec3(1u), uvec3(1u))), uvec3(1u))), _GLF_IDENTITY(uvec3(1u), min(_GLF_IDENTITY(uvec3(1u), max(uvec3(1u), uvec3(1u))), uvec3(1u))))), ~ (_GLF_IDENTITY(~ (uvec3(1u)), uvec3(0u, 0u, 0u) | (~ (uvec3(1u))))))), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), min(_GLF_IDENTITY(uvec3(1u), max(uvec3(1u), uvec3(1u))), uvec3(1u))), max(_GLF_IDENTITY(uvec3(1u), min(_GLF_IDENTITY(uvec3(1u), max(uvec3(1u), uvec3(1u))), uvec3(1u))), _GLF_IDENTITY(uvec3(1u), min(_GLF_IDENTITY(uvec3(1u), max(uvec3(1u), uvec3(1u))), uvec3(1u))))), ~ (_GLF_IDENTITY(~ (uvec3(1u)), uvec3(0u, 0u, 0u) | (~ (uvec3(1u))))))))))), (uvec3(uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), min(_GLF_IDENTITY(uvec3(1u), max(uvec3(1u), uvec3(1u))), uvec3(1u))), max(_GLF_IDENTITY(uvec3(1u), min(_GLF_IDENTITY(uvec3(1u), max(uvec3(1u), uvec3(1u))), uvec3(1u))), _GLF_IDENTITY(uvec3(1u), min(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), (uvec3(1u)) << uvec3(0u, 0u, 0u)), max(uvec3(1u), uvec3(1u))), uvec3(1u))))), ~ (_GLF_IDENTITY(~ (uvec3(1u)), uvec3(0u, 0u, 0u) | (~ (uvec3(1u))))))))) ^ uvec3(0u, 0u, 0u))), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), min(_GLF_IDENTITY(uvec3(1u), max(uvec3(1u), uvec3(1u))), uvec3(1u))), max(_GLF_IDENTITY(uvec3(1u), min(_GLF_IDENTITY(uvec3(1u), max(uvec3(1u), uvec3(1u))), uvec3(1u))), _GLF_IDENTITY(uvec3(1u), min(_GLF_IDENTITY(uvec3(1u), max(uvec3(1u), uvec3(1u))), uvec3(1u))))), ~ (_GLF_IDENTITY(~ (uvec3(1u)), uvec3(0u, 0u, 0u) | (~ (uvec3(1u)))))))), (uvec3(_GLF_IDENTITY(uvec3(0u, 0u, 0u), clamp(uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(0u, 0u, 0u), min(uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) / uvec3(1u, 1u, 1u)))), uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), min(_GLF_IDENTITY(uvec3(1u), max(uvec3(1u), uvec3(1u))), uvec3(1u))), max(_GLF_IDENTITY(uvec3(1u), min(_GLF_IDENTITY(uvec3(1u), max(uvec3(1u), uvec3(1u))), uvec3(1u))), _GLF_IDENTITY(uvec3(1u), min(_GLF_IDENTITY(uvec3(1u), max(uvec3(1u), uvec3(1u))), uvec3(1u))))), ~ (_GLF_IDENTITY(~ (uvec3(1u)), uvec3(0u, 0u, 0u) | (~ (uvec3(1u))))))))) ^ uvec3(0u, 0u, 0u))), (true ? uvec3(_GLF_IDENTITY(uvec3(uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), min(_GLF_IDENTITY(uvec3(1u), max(uvec3(1u), uvec3(_GLF_IDENTITY(1u, (1u) | (1u))))), uvec3(1u))), max(_GLF_IDENTITY(uvec3(1u), min(_GLF_IDENTITY(uvec3(1u), max(uvec3(1u), uvec3(1u))), uvec3(_GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, ~ (~ (1u)))))))), _GLF_IDENTITY(uvec3(1u), min(_GLF_IDENTITY(uvec3(1u), max(uvec3(1u), uvec3(1u))), uvec3(1u))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (uvec3(1u)), uvec3(0u, 0u, 0u) | (~ (uvec3(1u)))), (_GLF_IDENTITY(~ (uvec3(1u)), uvec3(0u, 0u, 0u) | (~ (uvec3(1u))))) * uvec3(1u, 1u, 1u)))))), (uvec3(uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), min(_GLF_IDENTITY(uvec3(1u), max(uvec3(1u), uvec3(1u))), uvec3(1u))), max(_GLF_IDENTITY(uvec3(1u), min(_GLF_IDENTITY(uvec3(1u), max(uvec3(1u), uvec3(1u))), uvec3(1u))), _GLF_IDENTITY(uvec3(1u), min(_GLF_IDENTITY(uvec3(1u), max(uvec3(1u), uvec3(1u))), uvec3(1u))))), ~ (_GLF_IDENTITY(~ (uvec3(1u)), uvec3(0u, 0u, 0u) | (~ (uvec3(1u))))))))) ^ uvec3(0u, _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (0u) / 1u))), 0u))) : _GLF_FUZZED(uvec3(105612u, 191905u, 110215u))))))), clamp(uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), min(_GLF_IDENTITY(uvec3(1u), max(uvec3(1u), uvec3(1u))), uvec3(1u))), ~ (~ (uvec3(_GLF_IDENTITY(1u, uint(uvec2(1u, 1u)))))))), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), min(_GLF_IDENTITY(uvec3(1u), max(uvec3(1u), uvec3(1u))), uvec3(1u))), ~ (~ (uvec3(1u))))), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), min(_GLF_IDENTITY(uvec3(1u), max(uvec3(1u), uvec3(1u))), uvec3(1u))), ~ (~ (uvec3(1u)))))))) | (uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), min(_GLF_IDENTITY(uvec3(1u), max(uvec3(1u), uvec3(1u))), uvec3(_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(0u), uint(0u)), max(_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(0u), uint(0u)), (0u << _GLF_IDENTITY(uint(0u), uint(0u))) * 1u), 0u << _GLF_IDENTITY(uint(0u), uint(0u))))))))))), ~ (~ (uvec3(1u)))))))))), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), _GLF_IDENTITY(uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), min(_GLF_IDENTITY(uvec3(1u), max(_GLF_IDENTITY(uvec3(1u), (uvec3(1u)) | (uvec3(1u))), uvec3(1u))), uvec3(1u))), ~ (~ (uvec3(1u))))), uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), 1u * (~ (0u)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), min(_GLF_IDENTITY(uvec3(1u), max(uvec3(1u), uvec3(1u))), uvec3(1u))), ~ (~ (uvec3(1u))))), (_GLF_IDENTITY(uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(1u), (false ? _GLF_FUZZED(uvec3(57355u, 87563u, 153303u)) : uvec3(1u)))), ~ (~ (uvec3(_GLF_IDENTITY(uvec3(1u), (false ? _GLF_FUZZED(uvec3(57355u, 87563u, 153303u)) : uvec3(1u))))))))), min(_GLF_IDENTITY(uvec3(1u), max(_GLF_IDENTITY(uvec3(1u), min(_GLF_IDENTITY(uvec3(1u), (uvec3(1u)) | (uvec3(1u))), _GLF_IDENTITY(uvec3(1u), (_GLF_IDENTITY(uvec3(1u), min(uvec3(1u), uvec3(1u)))) - uvec3(0u, 0u, 0u)))), uvec3(1u))), uvec3(1u))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(1u), (false ? _GLF_FUZZED(uvec3(57355u, 87563u, 153303u)) : uvec3(1u)))), ~ (~ (uvec3(_GLF_IDENTITY(uvec3(1u), (false ? _GLF_FUZZED(uvec3(57355u, 87563u, _GLF_IDENTITY(153303u, (153303u) - 0u))) : uvec3(1u))))))))), min(_GLF_IDENTITY(uvec3(1u), max(uvec3(1u), uvec3(1u))), uvec3(1u)))) / uvec3(1u, 1u, 1u)), ~ (_GLF_IDENTITY(~ (uvec3(1u)), _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, 0u)))) | (~ (uvec3(1u))))))), clamp(uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), min(_GLF_IDENTITY(uvec3(1u), max(uvec3(1u), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), _GLF_IDENTITY(uvec3(1u), max(uvec3(1u), uvec3(1u))))), uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), _GLF_IDENTITY(uvec3(1u), max(uvec3(1u), uvec3(1u))))))))), uvec3(1u))), ~ (~ (uvec3(1u))))), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), min(_GLF_IDENTITY(uvec3(1u), max(_GLF_IDENTITY(uvec3(1u), (uvec3(1u)) * _GLF_IDENTITY(uvec3(1u, _GLF_IDENTITY(1u, uint(uvec3(_GLF_IDENTITY(1u, (1u) << 0u), (0u >> _GLF_IDENTITY(uint(0u), uint(0u))), 1u))), 1u), clamp(uvec3(1u, 1u, 1u), uvec3(1u, 1u, 1u), uvec3(1u, 1u, 1u)))), _GLF_IDENTITY(uvec3(1u), max(uvec3(1u), uvec3(1u))))), uvec3(1u))), ~ (~ (uvec3(1u))))), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), min(_GLF_IDENTITY(uvec3(1u), max(uvec3(1u), uvec3(1u))), uvec3(1u))), ~ (~ (uvec3(1u)))))))) | (uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), min(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), uvec3(0u, 0u, 0u) ^ (uvec3(1u))), max(uvec3(1u), uvec3(1u))), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), clamp(_GLF_IDENTITY(1u, max(1u, 1u)), _GLF_IDENTITY(1u, max(1u, 1u)), _GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), 0u ^ (_GLF_IDENTITY(1u, max(1u, 1u))))))))), ~ (~ (uvec3(1u))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), 1u * (~ (0u)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), min(_GLF_IDENTITY(uvec3(1u), _GLF_IDENTITY(max(uvec3(1u), uvec3(1u)), (max(uvec3(1u), uvec3(1u))) + uvec3(0u, 0u, 0u))), uvec3(1u))), ~ (_GLF_IDENTITY(~ (uvec3(1u)), (~ (uvec3(1u))) + uvec3(0u, 0u, 0u))))), (_GLF_IDENTITY(uvec3(0u, 0u, 0u) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(1u), (false ? _GLF_FUZZED(uvec3(57355u, 87563u, 153303u)) : uvec3(1u)))), ~ (~ (uvec3(_GLF_IDENTITY(uvec3(1u), (false ? _GLF_FUZZED(uvec3(57355u, 87563u, 153303u)) : uvec3(1u))))))))), min(_GLF_IDENTITY(uvec3(1u), max(uvec3(1u), uvec3(1u))), uvec3(1u))), ~ (_GLF_IDENTITY(~ (uvec3(1u)), uvec3(0u, 0u, 0u) | (~ (uvec3(1u))))))), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(1u), (false ? _GLF_FUZZED(uvec3(57355u, 87563u, 153303u)) : uvec3(1u)))), ~ (~ (uvec3(_GLF_IDENTITY(uvec3(1u), (false ? _GLF_FUZZED(uvec3(57355u, 87563u, 153303u)) : uvec3(1u))))))))), min(_GLF_IDENTITY(uvec3(1u), max(uvec3(1u), uvec3(1u))), uvec3(1u))), ~ (_GLF_IDENTITY(~ (uvec3(1u)), uvec3(0u, 0u, 0u) | (~ (uvec3(1u)))))))))), clamp(uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), min(_GLF_IDENTITY(uvec3(1u), max(uvec3(1u), uvec3(1u))), uvec3(1u))), ~ (~ (uvec3(1u))))), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), min(_GLF_IDENTITY(uvec3(1u), max(_GLF_IDENTITY(uvec3(1u), (uvec3(1u)) * _GLF_IDENTITY(uvec3(1u, 1u, 1u), clamp(uvec3(1u, 1u, 1u), uvec3(1u, 1u, 1u), uvec3(1u, 1u, 1u)))), uvec3(1u))), uvec3(1u))), ~ (~ (uvec3(1u))))), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), min(_GLF_IDENTITY(uvec3(1u), max(uvec3(1u), uvec3(1u))), uvec3(1u))), ~ (~ (uvec3(1u)))))))) | (uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), min(_GLF_IDENTITY(uvec3(1u), max(uvec3(1u), uvec3(1u))), uvec3(_GLF_IDENTITY(1u, max(1u, 1u))))), ~ (~ (uvec3(1u))))))), uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), 1u * (~ (0u)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), min(_GLF_IDENTITY(uvec3(1u), max(uvec3(1u), uvec3(1u))), uvec3(1u))), ~ (~ (uvec3(1u))))), (_GLF_IDENTITY(uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(1u), (false ? _GLF_FUZZED(uvec3(57355u, 87563u, _GLF_IDENTITY(153303u, (153303u) | (153303u)))) : uvec3(1u)))), ~ (~ (uvec3(_GLF_IDENTITY(uvec3(1u), (false ? _GLF_FUZZED(uvec3(57355u, 87563u, 153303u)) : uvec3(1u))))))))), min(_GLF_IDENTITY(uvec3(1u), max(uvec3(1u), uvec3(1u))), uvec3(1u))), ~ (_GLF_IDENTITY(~ (uvec3(1u)), uvec3(0u, 0u, 0u) | (~ (uvec3(_GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, 0u ^ (1u)), 1u))))))))))), clamp(uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), min(_GLF_IDENTITY(uvec3(1u), max(uvec3(1u), uvec3(1u))), uvec3(1u))), ~ (~ (uvec3(1u))))), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), min(_GLF_IDENTITY(uvec3(1u), max(_GLF_IDENTITY(uvec3(1u), (uvec3(1u)) * _GLF_IDENTITY(uvec3(1u, 1u, 1u), clamp(uvec3(1u, 1u, 1u), uvec3(1u, 1u, 1u), uvec3(1u, 1u, 1u)))), uvec3(1u))), uvec3(1u))), ~ (~ (uvec3(1u))))), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), min(_GLF_IDENTITY(uvec3(1u), max(uvec3(1u), uvec3(1u))), uvec3(1u))), ~ (~ (uvec3(1u)))))))) | (uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_size) : 1u))), (~ (_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_size) : 1u)))) ^ 0u)))), min(_GLF_IDENTITY(uvec3(1u), max(uvec3(1u), uvec3(1u))), uvec3(_GLF_IDENTITY(1u, max(1u, 1u))))), ~ (~ (uvec3(1u))))))))), min(_GLF_IDENTITY(uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), 1u * (~ (0u)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), min(_GLF_IDENTITY(uvec3(1u), max(uvec3(1u), uvec3(1u))), uvec3(1u))), ~ (~ (uvec3(1u))))), (_GLF_IDENTITY(uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(1u), (false ? _GLF_FUZZED(uvec3(57355u, 87563u, 153303u)) : uvec3(1u)))), ~ (~ (uvec3(_GLF_IDENTITY(uvec3(1u), (false ? _GLF_FUZZED(uvec3(57355u, 87563u, 153303u)) : uvec3(1u))))))))), min(_GLF_IDENTITY(uvec3(1u), max(_GLF_IDENTITY(uvec3(1u), (uvec3(1u)) << uvec3(0u, 0u, 0u)), uvec3(1u))), uvec3(1u))), ~ (_GLF_IDENTITY(~ (uvec3(1u)), uvec3(0u, 0u, 0u) | (~ (uvec3(1u))))))), clamp(uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), min(_GLF_IDENTITY(uvec3(1u), max(uvec3(1u), uvec3(1u))), uvec3(1u))), ~ (~ (uvec3(1u))))), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), min(_GLF_IDENTITY(uvec3(1u), max(_GLF_IDENTITY(uvec3(1u), (uvec3(1u)) * _GLF_IDENTITY(uvec3(1u, 1u, 1u), clamp(uvec3(1u, _GLF_IDENTITY(1u, 0u | (1u)), 1u), uvec3(1u, 1u, 1u), uvec3(1u, 1u, 1u)))), uvec3(1u))), uvec3(1u))), ~ (~ (uvec3(1u))))), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), min(_GLF_IDENTITY(uvec3(1u), max(uvec3(1u), uvec3(1u))), uvec3(1u))), ~ (~ _GLF_IDENTITY((uvec3(1u)), _GLF_IDENTITY(uvec3(uvec4((uvec3(1u)), 1u)), (uvec3(uvec4((uvec3(1u)), 1u))) | uvec3(0u, 0u, 0u))))))))) | (uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), min(_GLF_IDENTITY(uvec3(1u), max(uvec3(1u), uvec3(1u))), uvec3(_GLF_IDENTITY(1u, max(1u, 1u))))), ~ (~ (uvec3(1u))))))), _GLF_IDENTITY(uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), 1u * (~ (0u)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), min(_GLF_IDENTITY(uvec3(1u), max(uvec3(1u), uvec3(1u))), _GLF_IDENTITY(uvec3(1u), max(_GLF_IDENTITY(uvec3(1u), (uvec3(1u)) >> uvec3(0u, 0u, 0u)), uvec3(1u))))), ~ (_GLF_IDENTITY(~ (uvec3(1u)), (_GLF_IDENTITY(~ (uvec3(1u)), min(~ (uvec3(1u)), ~ _GLF_IDENTITY((uvec3(1u)), (_GLF_IDENTITY((uvec3(1u)), clamp((uvec3(1u)), _GLF_IDENTITY((uvec3(1u)), ((uvec3(1u))) | uvec3(0u, 0u, 0u)), (uvec3(1u))))) - uvec3(0u, 0u, 0u))))) | (~ (uvec3(1u))))))), (_GLF_IDENTITY(uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(1u), (false ? _GLF_FUZZED(uvec3(57355u, 87563u, 153303u)) : uvec3(1u)))), ~ (~ (uvec3(_GLF_IDENTITY(uvec3(1u), (false ? _GLF_FUZZED(uvec3(57355u, 87563u, 153303u)) : uvec3(1u))))))))), min(_GLF_IDENTITY(uvec3(1u), max(uvec3(1u), uvec3(1u))), uvec3(1u))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (uvec3(1u)), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(~ (uvec3(1u)), (_GLF_IDENTITY(~ (uvec3(1u)), (~ (uvec3(1u))) << uvec3(0u, 0u, 0u))) | uvec3(0u, 0u, 0u)))), max(_GLF_IDENTITY(~ (uvec3(1u)), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(~ (uvec3(1u)), (_GLF_IDENTITY(~ (uvec3(1u)), (~ (uvec3(1u))) << uvec3(0u, 0u, 0u))) | uvec3(0u, 0u, 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(~ (uvec3(1u)), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(~ (uvec3(1u)), (_GLF_IDENTITY(~ (uvec3(1u)), (~ (uvec3(1u))) << uvec3(0u, 0u, 0u))) | uvec3(0u, 0u, 0u)))), max(_GLF_IDENTITY(~ (uvec3(1u)), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(~ (uvec3(1u)), (_GLF_IDENTITY(~ (uvec3(1u)), (~ (uvec3(1u))) << uvec3(0u, 0u, 0u))) | uvec3(0u, 0u, 0u)))), _GLF_IDENTITY(~ (uvec3(1u)), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(~ (uvec3(1u)), (_GLF_IDENTITY(~ (uvec3(1u)), (~ (uvec3(1u))) << uvec3(0u, 0u, 0u))) | uvec3(0u, 0u, 0u))))))))))), clamp(uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), min(_GLF_IDENTITY(uvec3(1u), max(uvec3(1u), uvec3(1u))), uvec3(1u))), ~ (~ (uvec3(1u))))), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), min(_GLF_IDENTITY(uvec3(1u), max(_GLF_IDENTITY(uvec3(1u), (uvec3(1u)) * _GLF_IDENTITY(uvec3(1u, 1u, 1u), clamp(uvec3(1u, 1u, 1u), uvec3(1u, 1u, 1u), uvec3(1u, 1u, 1u)))), uvec3(1u))), uvec3(1u))), ~ (~ (uvec3(1u))))), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), min(_GLF_IDENTITY(uvec3(1u), max(uvec3(1u), uvec3(1u))), uvec3(1u))), ~ (~ (uvec3(1u)))))))) | _GLF_IDENTITY((uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), min(_GLF_IDENTITY(uvec3(1u), max(uvec3(1u), uvec3(1u))), uvec3(_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, (1u) | (1u)), 1u))))), ~ (~ (uvec3(1u)))))), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3((uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), min(_GLF_IDENTITY(uvec3(1u), max(uvec3(1u), uvec3(1u))), uvec3(_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, (1u) | (1u)), 1u))))), ~ (~ (uvec3(1u))))))), clamp(uvec3((uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), min(_GLF_IDENTITY(uvec3(1u), max(uvec3(1u), uvec3(1u))), uvec3(_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, (1u) | (1u)), 1u))))), ~ (~ (uvec3(1u))))))), uvec3((uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), min(_GLF_IDENTITY(uvec3(1u), max(uvec3(1u), uvec3(1u))), uvec3(_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, (1u) | (1u)), 1u))))), ~ (~ (uvec3(1u))))))), uvec3((uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), min(_GLF_IDENTITY(uvec3(1u), max(uvec3(1u), uvec3(1u))), uvec3(_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, (1u) | (1u)), 1u))))), ~ (~ (uvec3(1u)))))))))), clamp(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3((uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), min(_GLF_IDENTITY(uvec3(1u), max(uvec3(1u), uvec3(1u))), uvec3(_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, (1u) | (1u)), 1u))))), ~ (~ (uvec3(1u))))))), clamp(uvec3((uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), min(_GLF_IDENTITY(uvec3(1u), max(uvec3(1u), uvec3(1u))), uvec3(_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, (1u) | (1u)), 1u))))), ~ (~ (uvec3(1u))))))), uvec3((uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), min(_GLF_IDENTITY(uvec3(1u), max(uvec3(1u), uvec3(1u))), uvec3(_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, (1u) | (1u)), 1u))))), ~ (~ (uvec3(1u))))))), uvec3((uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), min(_GLF_IDENTITY(uvec3(1u), max(uvec3(1u), uvec3(1u))), uvec3(_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, (1u) | (1u)), 1u))))), ~ (~ (uvec3(1u)))))))))), (uvec3(_GLF_IDENTITY(uvec3((uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), min(_GLF_IDENTITY(uvec3(1u), max(uvec3(1u), uvec3(1u))), uvec3(_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, (1u) | (1u)), 1u))))), ~ (~ (uvec3(1u))))))), clamp(uvec3((uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), min(_GLF_IDENTITY(uvec3(1u), max(uvec3(1u), uvec3(1u))), uvec3(_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, (1u) | (1u)), 1u))))), ~ (~ (uvec3(1u))))))), uvec3((uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), min(_GLF_IDENTITY(uvec3(1u), max(uvec3(1u), uvec3(1u))), uvec3(_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, (1u) | (1u)), 1u))))), ~ (~ (uvec3(1u))))))), uvec3((uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), min(_GLF_IDENTITY(uvec3(1u), max(uvec3(1u), uvec3(1u))), uvec3(_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, (1u) | (1u)), 1u))))), ~ (~ (uvec3(1u))))))))))) + uvec3(0u, 0u, 0u)), uvec3(_GLF_IDENTITY(uvec3((uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), min(_GLF_IDENTITY(uvec3(1u), max(uvec3(1u), uvec3(1u))), uvec3(_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, (1u) | (1u)), 1u))))), ~ (~ (uvec3(1u))))))), clamp(uvec3((uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), min(_GLF_IDENTITY(uvec3(1u), max(uvec3(1u), uvec3(1u))), uvec3(_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, (1u) | (1u)), 1u))))), ~ (~ (uvec3(1u))))))), uvec3((uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), min(_GLF_IDENTITY(uvec3(1u), max(uvec3(1u), uvec3(1u))), uvec3(_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, (1u) | (1u)), 1u))))), ~ (~ (uvec3(1u))))))), uvec3((uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), min(_GLF_IDENTITY(uvec3(1u), max(uvec3(1u), uvec3(1u))), uvec3(_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, (1u) | (1u)), 1u))))), ~ (~ (uvec3(1u)))))))))), uvec3(_GLF_IDENTITY(uvec3((uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), min(_GLF_IDENTITY(uvec3(1u), max(uvec3(1u), uvec3(1u))), uvec3(_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, (1u) | (1u)), 1u))))), ~ (~ (uvec3(1u))))))), clamp(uvec3((uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), min(_GLF_IDENTITY(uvec3(1u), max(uvec3(1u), uvec3(1u))), uvec3(_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, (1u) | (1u)), 1u))))), ~ (~ (uvec3(1u))))))), uvec3((uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), min(_GLF_IDENTITY(uvec3(1u), max(uvec3(1u), uvec3(1u))), uvec3(_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, (1u) | (1u)), 1u))))), ~ (~ (uvec3(1u))))))), uvec3((uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), min(_GLF_IDENTITY(uvec3(1u), max(uvec3(1u), uvec3(1u))), uvec3(_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, (1u) | (1u)), 1u))))), ~ (~ (uvec3(1u)))))))))))))))), _GLF_IDENTITY(uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), 1u * (~ (0u)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), min(_GLF_IDENTITY(uvec3(1u), max(uvec3(1u), uvec3(1u))), uvec3(1u))), ~ (~ (uvec3(1u))))), (_GLF_IDENTITY(uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(1u), (false ? _GLF_FUZZED(uvec3(57355u, 87563u, 153303u)) : uvec3(1u)))), ~ (~ (uvec3(_GLF_IDENTITY(uvec3(1u), (false ? _GLF_FUZZED(uvec3(57355u, 87563u, 153303u)) : uvec3(1u))))))))), _GLF_IDENTITY(uvec3(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(1u), (false ? _GLF_FUZZED(uvec3(57355u, 87563u, 153303u)) : uvec3(1u)))), ~ (~ (uvec3(_GLF_IDENTITY(uvec3(1u), (false ? _GLF_FUZZED(uvec3(57355u, 87563u, 153303u)) : uvec3(1u))))))))), uvec3(uvec3(_GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(1u), (false ? _GLF_FUZZED(uvec3(57355u, 87563u, 153303u)) : uvec3(_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, min(1u, 1u)), 1u)))))), ~ (~ (uvec3(_GLF_IDENTITY(uvec3(1u), (false ? _GLF_FUZZED(uvec3(57355u, 87563u, 153303u)) : uvec3(1u)))))))))))), 1u)), (uvec3(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), (false ? _GLF_FUZZED(uvec3(57355u, 87563u, 153303u)) : uvec3(1u))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), (false ? _GLF_FUZZED(uvec3(57355u, 87563u, 153303u)) : uvec3(1u))), uvec3(uvec3(_GLF_IDENTITY(uvec3(1u), (false ? _GLF_FUZZED(uvec3(57355u, 87563u, 153303u)) : uvec3(1u))))))), clamp(~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), (false ? _GLF_FUZZED(uvec3(57355u, 87563u, 153303u)) : uvec3(1u))), uvec3(uvec3(_GLF_IDENTITY(uvec3(1u), (false ? _GLF_FUZZED(uvec3(57355u, 87563u, 153303u)) : uvec3(1u))))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), (false ? _GLF_FUZZED(uvec3(57355u, 87563u, 153303u)) : uvec3(1u))), uvec3(uvec3(_GLF_IDENTITY(uvec3(1u), (false ? _GLF_FUZZED(uvec3(57355u, 87563u, 153303u)) : uvec3(1u))))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), (false ? _GLF_FUZZED(uvec3(57355u, 87563u, 153303u)) : uvec3(1u))), uvec3(uvec3(_GLF_IDENTITY(uvec3(1u), (false ? _GLF_FUZZED(uvec3(57355u, 87563u, 153303u)) : uvec3(1u)))))))))))), ~ (~ (uvec3(_GLF_IDENTITY(uvec3(1u), (false ? _GLF_FUZZED(uvec3(_GLF_IDENTITY(57355u, (57355u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), 87563u, 153303u)) : uvec3(1u))))))))), uvec3(uvec3(_GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(1u), (false ? _GLF_FUZZED(uvec3(57355u, 87563u, 153303u)) : uvec3(1u)))), ~ (~ (uvec3(_GLF_IDENTITY(uvec3(1u), (false ? _GLF_FUZZED(uvec3(57355u, 87563u, 153303u)) : uvec3(1u)))))))))))), 1u))) * uvec3(1u, 1u, 1u))), min(_GLF_IDENTITY(uvec3(1u), max(uvec3(1u), uvec3(1u))), uvec3(1u))), ~ (_GLF_IDENTITY(~ (uvec3(1u)), uvec3(0u, 0u, 0u) | (~ (uvec3(1u))))))), clamp(uvec3(0u, 0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, max(0u, 0u)), 0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), min(_GLF_IDENTITY(uvec3(1u), max(uvec3(1u), uvec3(1u))), uvec3(1u))), ~ (~ (uvec3(1u))))), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), min(_GLF_IDENTITY(uvec3(1u), max(_GLF_IDENTITY(uvec3(1u), (uvec3(1u)) * _GLF_IDENTITY(uvec3(1u, 1u, 1u), clamp(uvec3(1u, 1u, 1u), uvec3(1u, 1u, 1u), uvec3(1u, 1u, 1u)))), uvec3(1u))), uvec3(1u))), ~ (~ (uvec3(1u))))), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), _GLF_IDENTITY(min(_GLF_IDENTITY(uvec3(1u), max(uvec3(1u), uvec3(1u))), uvec3(1u)), ~ (_GLF_IDENTITY(~ (min(_GLF_IDENTITY(uvec3(1u), max(uvec3(1u), uvec3(1u))), uvec3(1u))), (true ? ~ (min(_GLF_IDENTITY(uvec3(1u), max(uvec3(1u), uvec3(1u))), uvec3(1u))) : _GLF_FUZZED(uvec3(160035u, 850u, 5094u))))))), ~ (~ (uvec3(1u)))))))) | (uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), min(_GLF_IDENTITY(uvec3(1u), max(uvec3(1u), uvec3(1u))), uvec3(_GLF_IDENTITY(1u, max(1u, 1u))))), ~ (_GLF_IDENTITY(~ (uvec3(1u)), clamp(~ (uvec3(1u)), ~ (uvec3(1u)), ~ (uvec3(1u)))))))))))))), uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(uvec3(1u), _GLF_IDENTITY(uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), min(_GLF_IDENTITY(uvec3(1u), max(uvec3(1u), _GLF_IDENTITY(uvec3(1u), uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | (uvec3(1u))))), uvec3(1u))), _GLF_IDENTITY(~ (~ (uvec3(1u))), clamp(_GLF_IDENTITY(~ (~ (uvec3(1u))), (~ (~ (uvec3(1u)))) / uvec3(1u, 1u, 1u)), ~ (~ (uvec3(1u))), ~ (~ (uvec3(1u))))))), uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, min(1u, 1u))), min(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, 1u * (1u))), max(uvec3(1u), uvec3(1u))), uvec3(1u))), ~ (~ (uvec3(1u))))), (_GLF_IDENTITY(uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), min(_GLF_IDENTITY(uvec3(1u), max(uvec3(1u), _GLF_IDENTITY(uvec3(1u), (uvec3(1u)) - uvec3(0u, 0u, 0u)))), _GLF_IDENTITY(uvec3(1u), (uvec3(1u)) | (uvec3(1u))))), ~ (_GLF_IDENTITY(~ (uvec3(1u)), uvec3(0u, 0u, 0u) | (~ (uvec3(1u))))))), clamp(uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), min(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), max(uvec3(1u), uvec3(1u))), (_GLF_IDENTITY(uvec3(1u), max(uvec3(1u), uvec3(1u)))) << uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), uvec3(_GLF_IDENTITY(1u, max(1u, 1u))))), ~ (~ (uvec3(1u))))), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (1u) | (1u))), min(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), min(uvec3(1u), uvec3(1u))), max(uvec3(1u), uvec3(1u))), uvec3(1u))), ~ _GLF_IDENTITY((~ (uvec3(1u))), (_GLF_IDENTITY((~ (uvec3(1u))), ((_GLF_IDENTITY(~ (uvec3(1u)), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(~ (uvec3(1u)), ~ (~ (~ (uvec3(1u))))))))) >> uvec3(0u, 0u, 0u))) | (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u))))), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), min(_GLF_IDENTITY(uvec3(1u), max(uvec3(1u), uvec3(1u))), _GLF_IDENTITY(uvec3(1u), min(uvec3(1u), uvec3(1u))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (uvec3(1u)), (_GLF_IDENTITY(~ (uvec3(1u)), (_GLF_IDENTITY(~ (uvec3(1u)), (~ (uvec3(1u))) | uvec3(0u, 0u, 0u))) >> uvec3(0u, 0u, 0u))) ^ uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) + (~ (_GLF_IDENTITY(~ (uvec3(1u)), (_GLF_IDENTITY(~ (uvec3(1u)), (_GLF_IDENTITY(~ (uvec3(1u)), (~ (uvec3(1u))) | uvec3(0u, 0u, 0u))) >> uvec3(0u, 0u, 0u))) ^ uvec3(0u, 0u, 0u)))))))))) | (uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), min(_GLF_IDENTITY(uvec3(1u), max(uvec3(1u), uvec3(1u))), uvec3(_GLF_IDENTITY(1u, max(1u, 1u))))), _GLF_IDENTITY(~ (~ (uvec3(1u))), max(~ (~ (uvec3(1u))), ~ (~ (uvec3(1u)))))))))))))))), mat2x4(1.0), 1.0, bvec3(true)), _GLF_struct_4(uvec2(1u), 1u), _GLF_struct_5(mat3x4(1.0), _GLF_IDENTITY(ivec3(1), clamp(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(1), clamp(ivec3(1), _GLF_IDENTITY(ivec3(1), (ivec3(1)) - ivec3(_GLF_IDENTITY(0, (0) | 0), 0, 0)), ivec3(1))), (ivec3(1)) ^ ivec3(0, 0, 0)), ivec3(1), ivec3(1))), bvec3(true), vec4(1.0))), _GLF_struct_replacement_18.workgroup_size * workgroup_id);
 uint virtual_gid = _GLF_struct_replacement_7.workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_local_id, 0u ^ (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))), 1u, 1u, 0u)), 0u | (uint(uvec4(_GLF_IDENTITY(subgroup_local_id, 0u ^ (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))), 1u, 1u, 0u)))));
 uint next_virtual_gid = _GLF_struct_replacement_7.workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY(true ? (subgroup_local_id + 1) % subgroup_size : _GLF_FUZZED((~ (189159u | 62121u))), (true ? (subgroup_local_id + 1) % subgroup_size : _GLF_FUZZED((~ (189159u | 62121u)))) << (0u | 0u)))));
 do
  {
   for(int _injected_loop_counter = ((0 | 0) << _GLF_IDENTITY(int(8), int(8))); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
    {
     do
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
              {
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                {
                 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), true && (_GLF_WRAPPED_IF_FALSE(false))))
                  {
                  }
                 else
                  {
                   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                    {
                     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
                      {
                      }
                     else
                      {
                       for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(3), int(3))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                        {
                         if(_GLF_WRAPPED_IF_FALSE(false))
                          {
                          }
                         else
                          {
                           if(_GLF_DEAD(false))
                            {
                             if(_GLF_WRAPPED_IF_FALSE(false))
                              {
                              }
                             else
                              {
                               do
                                {
                                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                                  {
                                   return;
                                  }
                                }
                               while(_GLF_WRAPPED_LOOP(false));
                              }
                            }
                          }
                        }
                      }
                    }
                   else
                    {
                    }
                  }
                }
              }
            }
          }
         else
          {
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), min(int(1), int(1)))), (0 >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), min(int(1), int(1))))) >> 0))); _injected_loop_counter --)
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       atomicStore(buf[next_virtual_gid], uint(1), 4, _GLF_IDENTITY(64, clamp(_GLF_IDENTITY(64, (64) - 0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY(int(ivec2(64, 1)), (int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(64, 0 ^ (64)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(64, 0 ^ (64)), (false ? _GLF_FUZZED(-32364) : _GLF_IDENTITY(64, 0 ^ (64))))))), _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) / 1), 1))))) ^ 0)), (_GLF_IDENTITY(64, _GLF_IDENTITY((_GLF_IDENTITY(64, 1 * (64))) | _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-23578) : 0))) + 0), clamp((_GLF_IDENTITY(64, 1 * (64))) | _GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-23578) : 0))) + _GLF_IDENTITY(0, 1 * (_GLF_IDENTITY(0, (0) ^ 0))), ((_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-23578) : 0))) + 0) | ((_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-23578) : 0))) + 0))), _GLF_IDENTITY((_GLF_IDENTITY(64, 1 * (64))), max((_GLF_IDENTITY(64, 1 * (64))), _GLF_IDENTITY((_GLF_IDENTITY(64, 1 * (64))), 1 * ((_GLF_IDENTITY(64, 1 * (64))))))) | _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-23578) : 0))) + 0), (_GLF_IDENTITY(64, 1 * (64))) | _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-23578) : 0))) + 0))))) << 0), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY(int(ivec2(64, 1)), (int(ivec2(64, 1))) ^ 0)), (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, 1 * (64))) | _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-23578) : 0))) + 0))) << 0))), _GLF_IDENTITY(64, (64) | 0))), _GLF_IDENTITY(4, max(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) / 1), max(4, 4)), 4)));
      }
    }
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false, true)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false, true)), ! (! (bool(bvec4(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x < injectionSwitch.y, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (_GLF_IDENTITY(bool(bvec4(injectionSwitch.x < injectionSwitch.y, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(injectionSwitch.x < injectionSwitch.y, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))), true, false, true))))), false, true)), ! (! (bool(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false, true)), ! (! (bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false, true))))), false, true)))))))))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-5.0) : injectionSwitch.x)) > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 return;
                }
               else
                {
                }
              }
            }
           else
            {
            }
          }
        }
       else
        {
        }
      }
    }
  }
 else
  {
  }
 uint read = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))) | (virtual_gid))], 4, 64, 0);
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     do
      {
       do
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           if(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec3(subgroup_size, 1u, 1u)))) - 0u))))
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((_GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (1)) << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), ~ (~ (_GLF_IDENTITY(int(3), (int(3)) << 0)))))) >> _GLF_IDENTITY(int(3), int(3)))); _injected_loop_counter ++)
                  {
                   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) + vec2(0.0, 0.0))).y), ! (! ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) + _GLF_IDENTITY(vec2(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0)), clamp(_GLF_IDENTITY(vec2(0.0, 0.0), (_GLF_IDENTITY(_GLF_IDENTITY(vec2(0.0, 0.0), mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(864.832), _GLF_FUZZED((-8862.1358 * 36.21))), clamp(_GLF_IDENTITY(vec2(_GLF_FUZZED(864.832), _GLF_FUZZED((-8862.1358 * 36.21))), vec2(mat3x2(vec2(_GLF_FUZZED(864.832), _GLF_FUZZED((-8862.1358 * 36.21))), 1.0, 0.0, 0.0, 0.0))), vec2(_GLF_FUZZED(864.832), _GLF_FUZZED((-8862.1358 * 36.21))), vec2(_GLF_FUZZED(864.832), _GLF_FUZZED((-8862.1358 * 36.21))))), vec2((vec2(0.0, 0.0))[0], _GLF_IDENTITY((vec2(0.0, 0.0))[1], ((vec2(0.0, 0.0))[1]) - 0.0)), bvec2(true, true))), min(vec2(_GLF_IDENTITY(0.0, float(mat4(0.0, 0.0, 1.0, abs(1.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))), 0.0), vec2(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))))) / vec2(1.0, 1.0)), vec2(0.0, 0.0), vec2(0.0, 0.0))))).y)))))))
                    {
                     do
                      {
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                        }
                       else
                        {
                         for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))); _injected_loop_counter ++)
                          {
                           if(_GLF_WRAPPED_IF_TRUE(true))
                            {
                             do
                              {
                               do
                                {
                                 atomicStore(checker[virtual_gid], read, 4, 64, 4);
                                }
                               while(_GLF_WRAPPED_LOOP(false));
                              }
                             while(_GLF_WRAPPED_LOOP(false));
                            }
                           else
                            {
                            }
                          }
                        }
                      }
                     while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), false), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true), bvec3(bvec3(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true))))))))), _GLF_IDENTITY(! (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), false), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true), bvec3(bvec3(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true)))))))))))))), ! (! (! (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), false), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true), bvec3(bvec3(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true)))))))))))))))))));
                    }
                   else
                    {
                    }
                  }
                }
               else
                {
                }
              }
             for(int _injected_loop_counter = _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), min(int(2), int(2))))), (0 << _GLF_IDENTITY(int(7), int(7))) ^ ((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))), ((1 << _GLF_IDENTITY(int(2), int(2)))) ^ 0)) | ((1 << _GLF_IDENTITY(int(2), int(2))))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), min(int(2), int(2))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
              {
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                }
               else
                {
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, true)), bool(bvec3(bool(bvec4(true, false, true, true)), true, false))))))
                  {
                   subgroupAll(false);
                  }
                 else
                  {
                  }
                }
              }
            }
           else
            {
             do
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                    {
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                        }
                       else
                        {
                         atomicStore(checker[virtual_gid], read, 4, 64, 4);
                        }
                      }
                    }
                  }
                 else
                  {
                  }
                }
              }
             while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
             if(_GLF_DEAD(false))
              {
               do
                {
                 return;
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(28.03)), bool(false))) > injectionSwitch.y))));
              }
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), ~ (~ (_GLF_IDENTITY(int(7), int(7)))))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, 0 | (_injected_loop_counter)) > (0 << _GLF_IDENTITY(int(1), int(1)))); _injected_loop_counter --)
                {
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) && true) && true)))
                  {
                  }
                 else
                  {
                   do
                    {
                     subgroupAll(true);
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                }
              }
             else
              {
              }
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) - _GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0, 0.0)), 0.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0))), (_GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0, 0.0)), 0.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0))), mix(vec2((vec2(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0, 0.0)), 0.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0))))[0], _GLF_FUZZED(-1.1)), vec2(_GLF_FUZZED(-99.27), (vec2(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0))))[1]), bvec2(false, true)))) + sqrt(vec2(0.0, 0.0)))))).x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) - _GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0, 0.0)), 0.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0))), (_GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, _GLF_IDENTITY(0.0 + (0.0), 0.0 + (0.0 + (0.0)))), 0.0, 0.0)), 0.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0))), mix(vec2((vec2(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0, 0.0)), 0.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0))))[0], _GLF_FUZZED(-1.1)), vec2(_GLF_FUZZED(-99.27), (vec2(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0, 0.0)), 0.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0))))[1]), bvec2(false, true)))) + sqrt(vec2(0.0, 0.0))), clamp(_GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0, 0.0)), 0.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0))), (_GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, _GLF_IDENTITY(0.0 + (0.0), 0.0 + (0.0 + (0.0)))), 0.0, 0.0)), 0.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0))), mix(vec2((vec2(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0, 0.0)), 0.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0))))[0], _GLF_FUZZED(-1.1)), vec2(_GLF_FUZZED(-99.27), (vec2(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0, 0.0)), 0.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0))))[1]), bvec2(false, true)))) + sqrt(vec2(0.0, 0.0))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0, 0.0)), 0.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0))), (_GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, _GLF_IDENTITY(0.0 + (0.0), 0.0 + (0.0 + (0.0)))), 0.0, 0.0)), 0.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0))), mix(vec2((vec2(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0, 0.0)), 0.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0))))[0], _GLF_FUZZED(-1.1)), vec2(_GLF_FUZZED(-99.27), (vec2(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0, 0.0)), 0.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0))))[1]), bvec2(false, true)))) + sqrt(vec2(0.0, 0.0))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0, 0.0)), 0.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0))), (_GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, _GLF_IDENTITY(0.0 + (0.0), 0.0 + (0.0 + (0.0)))), 0.0, 0.0)), 0.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0))), mix(vec2((vec2(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0, 0.0)), 0.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0))))[0], _GLF_FUZZED(-1.1)), vec2(_GLF_FUZZED(-99.27), (vec2(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0, 0.0)), 0.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0))))[1]), bvec2(false, true)))) + sqrt(vec2(0.0, 0.0)))))))).x > injectionSwitch.y))) || false)));
    }
  }
 else
  {
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
