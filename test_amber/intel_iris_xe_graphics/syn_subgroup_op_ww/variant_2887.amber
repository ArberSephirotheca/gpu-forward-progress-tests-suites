#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * _GLF_IDENTITY((injectionSwitch.x), min((injectionSwitch.x), (injectionSwitch.x)))) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, false || (false))), (false || (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), false || (_GLF_IDENTITY(false || (false), (false || (false)) || false)))))) && true))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, false)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, false))))), (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, false)))))) && true))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(false, (false) || false), true), bvec3(bvec4(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(false, (false) || false), true), true))))), _GLF_IDENTITY(false, _GLF_IDENTITY(! _GLF_IDENTITY((! (false)), bool(bvec4((! (false)), _GLF_IDENTITY(false, bool(bvec2(false, false))), true, false))), bool(bvec4(! _GLF_IDENTITY((! (false)), bool(bvec4((! (false)), _GLF_IDENTITY(false, bool(bvec2(false, false))), true, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))), false)), (bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(false, (false) || false), true), bvec3(bvec4(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(false, (false) || false), true), true))))), _GLF_IDENTITY(false, _GLF_IDENTITY(! _GLF_IDENTITY((! (false)), bool(bvec4((! (false)), _GLF_IDENTITY(false, bool(bvec2(false, false))), true, false))), bool(bvec4(! _GLF_IDENTITY((! (false)), bool(bvec4((! (false)), _GLF_IDENTITY(false, bool(bvec2(false, false))), true, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))), false))) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), ! (! (bool(bool(_GLF_DEAD(false))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, _GLF_IDENTITY(false, true && (false)) || (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch), vec2(mat2((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch), log(1.0), 0.0)))).x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(faceforward(injectionSwitch, injectionSwitch, vec2(-6.8, 15.33))) : injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - tan(0.0)))), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), bool(bool(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))) || false), _GLF_IDENTITY(! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (! (! (_GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || (true)))), bool(bvec3(true, false, false))), (injectionSwitch.x < injectionSwitch.y))))) && true)), false, true))))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, determinant(mat4(0.0, cos(0.0), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0))).y), _GLF_IDENTITY(float(_GLF_FUZZED(-7432.2541)), mix(float(float(_GLF_FUZZED(-7432.2541))), _GLF_IDENTITY(float(_GLF_FUZZED(vec4(_GLF_IDENTITY(410.021, mix(float(_GLF_IDENTITY(410.021, min(410.021, 410.021))), float(_GLF_FUZZED(8.8)), bool(false))), 2179.2630, -7182.4368, -12.09).t)), min(float(_GLF_FUZZED(vec4(_GLF_IDENTITY(410.021, mix(float(_GLF_IDENTITY(410.021, min(410.021, 410.021))), float(_GLF_FUZZED(8.8)), bool(false))), 2179.2630, -7182.4368, -12.09).t)), _GLF_IDENTITY(float(_GLF_FUZZED(vec4(_GLF_IDENTITY(410.021, mix(float(_GLF_IDENTITY(410.021, min(410.021, 410.021))), float(_GLF_FUZZED(8.8)), bool(false))), 2179.2630, -7182.4368, -12.09).t)), (float(_GLF_FUZZED(vec4(_GLF_IDENTITY(410.021, mix(float(_GLF_IDENTITY(410.021, min(410.021, 410.021))), float(_GLF_FUZZED(8.8)), bool(false))), 2179.2630, -7182.4368, -12.09).t))) - 0.0))), bool(false))), bool(false)))))) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) : injectionSwitch)).x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((true), ((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec2(! (true), false))))))) || false))), bool(bvec4(bool(bool(_GLF_IDENTITY((true), ((_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), true && (bool(true)))), false || (bool(_GLF_IDENTITY(bool(true), true && (bool(true))))))))) || false))), false, true, true))))))))), (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), true)))) || false), ! (! (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y))))), false, true)), _GLF_IDENTITY(bool(bvec3(bool(bvec4(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) : injectionSwitch)).x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((true), ((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec2(! (true), false))))))) || false))), bool(bvec4(bool(bool(_GLF_IDENTITY((true), ((_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), true && (bool(true)))), false || (bool(_GLF_IDENTITY(bool(true), true && (bool(true))))))))) || false))), false, true, true))))))))), (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), true)))) || false), ! (! (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y))))), false, true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), false || (_GLF_IDENTITY(bool(bvec3(bool(bvec4(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) : injectionSwitch)).x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((true), ((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec2(! (true), false))))))) || false))), bool(bvec4(bool(bool(_GLF_IDENTITY((true), ((_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), true && (bool(true)))), false || (bool(_GLF_IDENTITY(bool(true), true && (bool(true))))))))) || false))), false, true, true))))))))), (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), true)))) || false), ! (! (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y))))), false, true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), ! (! (bool(bvec3(bool(bvec4(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) : injectionSwitch)).x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((true), ((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec2(! (true), false))))))) || false))), bool(bvec4(bool(bool(_GLF_IDENTITY((true), ((_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), true && (bool(true)))), false || (bool(_GLF_IDENTITY(bool(true), true && (bool(true))))))))) || false))), false, true, true))))))))), (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), true)))) || false), ! (! (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y))))), false, true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))))))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-7432.2541)), bool(false)))))) || _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), true, false, true))))))), ! (! (bool(_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), true, false, true)))))))))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(4937.9614, -2.6)) : _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(true)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-685.172)), bvec2(true, false))))))).x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, true, true, true))), bool(bool(_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))))), (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, true, true, true))), bool(bool(_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))))), (injectionSwitch.x < injectionSwitch.y))), (! (_GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, true, true, true))), bool(bool(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, true, true)))))), (injectionSwitch.x < injectionSwitch.y)))) || false))), (_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) || false), ! (! (_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(vec3((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED((+ mat2(8.2, 3433.7885, 61.27, -80.85))) : _GLF_IDENTITY(mat2(1.0), mat2(mat4x2(mat2(1.0)))))), 1.0)))), max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(vec3((injectionSwitch) * mat2(_GLF_IDENTITY(1.0, float(mat2x4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, abs(0.0))))), 1.0)))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(vec3((injectionSwitch) * mat2(1.0), 1.0)))))).x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))).y))))), false, true))))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(6718.2041) : injectionSwitch.y))), float(_GLF_FUZZED(-3823.2427)), bool(false)))), float(_GLF_FUZZED(-7432.2541)), bool(_GLF_IDENTITY(false, false || (false)))))))) || false)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(840.896)), float(injectionSwitch.y), bool(true))), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bvec4(bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), false, true, false))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), true && (bool(bvec2(false, true)))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, bool(bvec3(true, false, true))), true)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bvec3(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true, true))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) - vec2(0.0, 0.0))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, max(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | uvec3(0u, 0u, 0u))) ^ uvec3(0u, 0u, 0u)), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize))))), _GLF_IDENTITY(uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(gl_WorkGroupSize[_GLF_IDENTITY(0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(int(3.5)) : 0))], 0u ^ (_GLF_IDENTITY(gl_WorkGroupSize[0], _GLF_IDENTITY((gl_WorkGroupSize[0]) | (gl_WorkGroupSize[0]), uint(uvec2(_GLF_IDENTITY((gl_WorkGroupSize[0]) | (gl_WorkGroupSize[0]), ~ (~ ((gl_WorkGroupSize[0]) | (gl_WorkGroupSize[0])))), 1u)))))), gl_WorkGroupSize[1], gl_WorkGroupSize[2])))), min(uvec3(uvec3(gl_WorkGroupSize)), uvec3(uvec3(gl_WorkGroupSize))))).x, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(_GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize)), min(uvec3(uvec3(gl_WorkGroupSize)), uvec3(uvec3(gl_WorkGroupSize)))), clamp(_GLF_IDENTITY(uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(0u, 0u, 0u)))), min(uvec3(uvec3(gl_WorkGroupSize)), uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)))))), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize)), min(uvec3(uvec3(gl_WorkGroupSize)), uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), (uvec3(gl_WorkGroupSize)) | (uvec3(gl_WorkGroupSize)))))), uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize)), min(uvec3(uvec3(gl_WorkGroupSize)), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), (uvec3(gl_WorkGroupSize)) | (uvec3(gl_WorkGroupSize))), (_GLF_IDENTITY(uvec3(gl_WorkGroupSize), (uvec3(gl_WorkGroupSize)) | (uvec3(gl_WorkGroupSize)))) | (_GLF_IDENTITY(uvec3(gl_WorkGroupSize), (uvec3(gl_WorkGroupSize)) | (uvec3(gl_WorkGroupSize)))))))))), _GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize)), min(uvec3(uvec3(gl_WorkGroupSize)), uvec3(uvec3(gl_WorkGroupSize))))))).x, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(_GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize)), (uvec3(uvec3(gl_WorkGroupSize))) | uvec3(0u, 0u, 0u)), min(uvec3(uvec3(gl_WorkGroupSize)), uvec3(uvec3(gl_WorkGroupSize))))).x), _GLF_IDENTITY(1u * (~ (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize)), min(uvec3(uvec3(gl_WorkGroupSize)), uvec3(uvec3(gl_WorkGroupSize))))).x)), (true ? 1u * _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize)), min(uvec3(uvec3(gl_WorkGroupSize)), uvec3(uvec3(gl_WorkGroupSize))))), (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize)), min(uvec3(uvec3(gl_WorkGroupSize)), uvec3(uvec3(gl_WorkGroupSize)))))) | uvec3(0u, 0u, 0u)).x)), min(_GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize)), min(uvec3(uvec3(gl_WorkGroupSize)), uvec3(uvec3(gl_WorkGroupSize))))), (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize)), min(uvec3(uvec3(gl_WorkGroupSize)), uvec3(uvec3(gl_WorkGroupSize)))))) | uvec3(0u, 0u, 0u)).x)), uint(uvec3((~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize)), min(uvec3(uvec3(gl_WorkGroupSize)), uvec3(uvec3(gl_WorkGroupSize))))), (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize)), min(uvec3(uvec3(gl_WorkGroupSize)), uvec3(uvec3(gl_WorkGroupSize)))))) | uvec3(0u, 0u, 0u)).x)), 1u, 0u))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize)), min(uvec3(uvec3(gl_WorkGroupSize)), uvec3(uvec3(gl_WorkGroupSize))))), (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize)), min(uvec3(uvec3(gl_WorkGroupSize)), uvec3(uvec3(gl_WorkGroupSize)))))) | uvec3(0u, 0u, 0u)).x)))) : _GLF_FUZZED(subgroup_local_id)))))), (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize)), min(uvec3(uvec3(gl_WorkGroupSize)), uvec3(uvec3(gl_WorkGroupSize))))).x) * 1u), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(_GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize)), min(uvec3(uvec3(gl_WorkGroupSize)), uvec3(uvec3(gl_WorkGroupSize)))), clamp(_GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize)), min(uvec3(uvec3(gl_WorkGroupSize)), uvec3(uvec3(gl_WorkGroupSize)))), _GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize)), min(uvec3(uvec3(gl_WorkGroupSize)), uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), (uvec3(gl_WorkGroupSize)) | (uvec3(gl_WorkGroupSize)))))), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize)), uvec3(_GLF_IDENTITY(uvec4(uvec3(uvec3(gl_WorkGroupSize)), 1u), min(uvec4(uvec3(uvec3(gl_WorkGroupSize)), 1u), uvec4(uvec3(uvec3(gl_WorkGroupSize)), 1u))))), min(uvec3(uvec3(gl_WorkGroupSize)), uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize))))))))))).x, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize)), min(uvec3(uvec3(gl_WorkGroupSize)), uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u))) ^ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) | (gl_WorkGroupSize))))))))))).x), 1u * (~ (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize)), min(uvec3(uvec3(gl_WorkGroupSize)), uvec3(uvec3(gl_WorkGroupSize))))).x))))), (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize)), min(uvec3(uvec3(gl_WorkGroupSize)), uvec3(uvec3(gl_WorkGroupSize))))).x) * 1u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(_GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize)), min(uvec3(uvec3(gl_WorkGroupSize)), uvec3(uvec3(gl_WorkGroupSize)))), clamp(_GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize)), min(uvec3(uvec3(gl_WorkGroupSize)), uvec3(uvec3(gl_WorkGroupSize)))), _GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize)), min(uvec3(uvec3(gl_WorkGroupSize)), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), (uvec3(gl_WorkGroupSize)) | (uvec3(gl_WorkGroupSize))), (false ? _GLF_FUZZED(uvec3(149964u, 95411u, 5967u)) : _GLF_IDENTITY(uvec3(gl_WorkGroupSize), (uvec3(gl_WorkGroupSize)) | (uvec3(gl_WorkGroupSize)))))))), _GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize)), min(uvec3(uvec3(gl_WorkGroupSize)), uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize))))))))).x, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize)), min(uvec3(uvec3(gl_WorkGroupSize)), uvec3(uvec3(gl_WorkGroupSize))))).x), 1u * (~ (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize)), min(uvec3(uvec3(gl_WorkGroupSize)), uvec3(uvec3(gl_WorkGroupSize))))).x))))), (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize)), min(uvec3(uvec3(gl_WorkGroupSize)), uvec3(uvec3(gl_WorkGroupSize))))).x) * 1u)))) / 1u), uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))) * (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize)), min(uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), max(uvec3(gl_WorkGroupSize), uvec3(gl_WorkGroupSize)))), uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), uvec3(0u, 0u, 0u) + (uvec3(gl_WorkGroupSize))))))).x, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(_GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize)), min(uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), (_GLF_IDENTITY(uvec3(gl_WorkGroupSize), min(uvec3(gl_WorkGroupSize), uvec3(gl_WorkGroupSize)))) / uvec3(1u, 1u, 1u))), uvec3(uvec3(gl_WorkGroupSize)))), clamp(_GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize)), min(uvec3(uvec3(gl_WorkGroupSize)), uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), (uvec3(gl_WorkGroupSize)) ^ _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, 0u)))))))), _GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize)), min(uvec3(uvec3(gl_WorkGroupSize)), uvec3(uvec3(gl_WorkGroupSize)))), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize)), min(uvec3(uvec3(gl_WorkGroupSize)), uvec3(uvec3(gl_WorkGroupSize)))), (false ? _GLF_FUZZED(uvec3(97840u, 68120u, 135128u)) : _GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize)), min(uvec3(uvec3(gl_WorkGroupSize)), uvec3(uvec3(gl_WorkGroupSize))))))))).x, _GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(_GLF_IDENTITY(uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)))), _GLF_IDENTITY(min(uvec3(uvec3(gl_WorkGroupSize)), uvec3(uvec3(gl_WorkGroupSize))), (min(uvec3(uvec3(gl_WorkGroupSize)), uvec3(uvec3(gl_WorkGroupSize)))) ^ uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)))), _GLF_IDENTITY(min(uvec3(uvec3(gl_WorkGroupSize)), uvec3(uvec3(gl_WorkGroupSize))), (min(uvec3(uvec3(gl_WorkGroupSize)), uvec3(uvec3(gl_WorkGroupSize)))) ^ uvec3(0u, 0u, 0u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)))), _GLF_IDENTITY(min(uvec3(uvec3(gl_WorkGroupSize)), uvec3(uvec3(gl_WorkGroupSize))), (min(uvec3(uvec3(gl_WorkGroupSize)), uvec3(uvec3(gl_WorkGroupSize)))) ^ uvec3(0u, 0u, 0u))), ~ (~ (_GLF_IDENTITY(uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)))), _GLF_IDENTITY(min(uvec3(uvec3(gl_WorkGroupSize)), uvec3(uvec3(gl_WorkGroupSize))), (min(uvec3(uvec3(gl_WorkGroupSize)), uvec3(uvec3(gl_WorkGroupSize)))) ^ uvec3(0u, 0u, 0u))))))))).x), 1u * (~ (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize)), _GLF_IDENTITY(min(uvec3(uvec3(gl_WorkGroupSize)), uvec3(uvec3(gl_WorkGroupSize))), (_GLF_IDENTITY(min(uvec3(uvec3(gl_WorkGroupSize)), uvec3(uvec3(gl_WorkGroupSize))), (min(uvec3(uvec3(gl_WorkGroupSize)), uvec3(uvec3(gl_WorkGroupSize)))) - uvec3(0u, 0u, 0u))) | uvec3(0u, 0u, 0u)))).x)))), max(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(_GLF_IDENTITY(uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)))), _GLF_IDENTITY(min(uvec3(uvec3(gl_WorkGroupSize)), uvec3(uvec3(gl_WorkGroupSize))), (min(uvec3(uvec3(gl_WorkGroupSize)), uvec3(uvec3(gl_WorkGroupSize)))) ^ uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)))), _GLF_IDENTITY(min(uvec3(uvec3(gl_WorkGroupSize)), uvec3(uvec3(gl_WorkGroupSize))), (min(uvec3(uvec3(gl_WorkGroupSize)), uvec3(uvec3(gl_WorkGroupSize)))) ^ uvec3(0u, 0u, 0u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)))), _GLF_IDENTITY(min(uvec3(uvec3(gl_WorkGroupSize)), uvec3(uvec3(gl_WorkGroupSize))), (min(uvec3(uvec3(gl_WorkGroupSize)), uvec3(uvec3(gl_WorkGroupSize)))) ^ uvec3(0u, 0u, 0u))), ~ (~ (_GLF_IDENTITY(uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)))), _GLF_IDENTITY(min(uvec3(uvec3(gl_WorkGroupSize)), uvec3(uvec3(gl_WorkGroupSize))), (min(uvec3(uvec3(gl_WorkGroupSize)), uvec3(uvec3(gl_WorkGroupSize)))) ^ uvec3(0u, 0u, 0u))))))))).x), 1u * (~ (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize)), _GLF_IDENTITY(min(uvec3(uvec3(gl_WorkGroupSize)), uvec3(uvec3(gl_WorkGroupSize))), (_GLF_IDENTITY(min(uvec3(uvec3(gl_WorkGroupSize)), uvec3(uvec3(gl_WorkGroupSize))), (min(uvec3(uvec3(gl_WorkGroupSize)), uvec3(uvec3(gl_WorkGroupSize)))) - uvec3(0u, 0u, 0u))) | uvec3(0u, 0u, 0u)))).x)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(_GLF_IDENTITY(uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)))), _GLF_IDENTITY(min(uvec3(uvec3(gl_WorkGroupSize)), uvec3(uvec3(gl_WorkGroupSize))), (min(uvec3(uvec3(gl_WorkGroupSize)), uvec3(uvec3(gl_WorkGroupSize)))) ^ uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)))), _GLF_IDENTITY(min(uvec3(uvec3(gl_WorkGroupSize)), uvec3(uvec3(gl_WorkGroupSize))), (min(uvec3(uvec3(gl_WorkGroupSize)), uvec3(uvec3(gl_WorkGroupSize)))) ^ uvec3(0u, 0u, 0u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)))), _GLF_IDENTITY(min(uvec3(uvec3(gl_WorkGroupSize)), uvec3(uvec3(gl_WorkGroupSize))), (min(uvec3(uvec3(gl_WorkGroupSize)), uvec3(uvec3(gl_WorkGroupSize)))) ^ uvec3(0u, 0u, 0u))), ~ (~ (_GLF_IDENTITY(uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)))), _GLF_IDENTITY(min(uvec3(uvec3(gl_WorkGroupSize)), uvec3(uvec3(gl_WorkGroupSize))), (min(uvec3(uvec3(gl_WorkGroupSize)), uvec3(uvec3(gl_WorkGroupSize)))) ^ uvec3(0u, 0u, 0u))))))))).x), 1u * (~ (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize)), _GLF_IDENTITY(min(uvec3(uvec3(gl_WorkGroupSize)), uvec3(uvec3(gl_WorkGroupSize))), (_GLF_IDENTITY(min(uvec3(uvec3(gl_WorkGroupSize)), uvec3(uvec3(gl_WorkGroupSize))), (min(uvec3(uvec3(gl_WorkGroupSize)), uvec3(uvec3(gl_WorkGroupSize)))) - uvec3(0u, 0u, 0u))) | uvec3(0u, 0u, 0u)))).x)))))), uint(_GLF_IDENTITY(uvec2(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize)), min(uvec3(uvec3(gl_WorkGroupSize)), uvec3(uvec3(gl_WorkGroupSize))))).x), 1u * (~ (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize)), _GLF_IDENTITY(min(uvec3(uvec3(gl_WorkGroupSize)), uvec3(uvec3(gl_WorkGroupSize))), ~ (~ (min(uvec3(uvec3(gl_WorkGroupSize)), uvec3(uvec3(gl_WorkGroupSize)))))))).x)))), 1u), _GLF_IDENTITY(uvec2(0u, 0u), uvec2(uvec4(uvec2(0u, 0u), (1u & 1u), 1u))) | (uvec2(~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(_GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize)), uvec3(0u, 0u, 0u) | (uvec3(uvec3(gl_WorkGroupSize)))), min(uvec3(uvec3(gl_WorkGroupSize)), _GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize)), (_GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize)), max(_GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize)), (uvec3(uvec3(gl_WorkGroupSize))) << uvec3(0u, 0u, 0u)), uvec3(uvec3(gl_WorkGroupSize))))) + uvec3(0u, 0u, 0u))))).x), max((_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(_GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize)), uvec3(0u, 0u, 0u) | (uvec3(uvec3(gl_WorkGroupSize)))), min(uvec3(uvec3(gl_WorkGroupSize)), _GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize)), (_GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize)), max(_GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize)), (uvec3(uvec3(gl_WorkGroupSize))) << uvec3(0u, 0u, 0u)), uvec3(uvec3(gl_WorkGroupSize))))) + uvec3(0u, 0u, 0u))))).x), (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(_GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize)), uvec3(0u, 0u, 0u) | (uvec3(uvec3(gl_WorkGroupSize)))), min(uvec3(uvec3(gl_WorkGroupSize)), _GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize)), (_GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize)), max(_GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize)), (uvec3(uvec3(gl_WorkGroupSize))) << uvec3(0u, 0u, 0u)), uvec3(uvec3(gl_WorkGroupSize))))) + uvec3(0u, 0u, 0u))))).x))), 1u * (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize)), _GLF_IDENTITY(min(uvec3(uvec3(gl_WorkGroupSize)), uvec3(uvec3(gl_WorkGroupSize))), ~ (~ (min(uvec3(uvec3(gl_WorkGroupSize)), uvec3(uvec3(gl_WorkGroupSize)))))))), clamp(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize)), _GLF_IDENTITY(min(uvec3(uvec3(gl_WorkGroupSize)), uvec3(uvec3(gl_WorkGroupSize))), ~ (~ (min(uvec3(uvec3(gl_WorkGroupSize)), uvec3(uvec3(gl_WorkGroupSize)))))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize)), _GLF_IDENTITY(min(uvec3(uvec3(gl_WorkGroupSize)), _GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize)), uvec3(uvec4(uvec3(uvec3(gl_WorkGroupSize)), 0u)))), ~ (~ (min(uvec3(uvec3(gl_WorkGroupSize)), uvec3(uvec3(gl_WorkGroupSize)))))))), (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize)), _GLF_IDENTITY(min(uvec3(uvec3(gl_WorkGroupSize)), uvec3(uvec3(gl_WorkGroupSize))), ~ (_GLF_IDENTITY(~ (min(uvec3(uvec3(gl_WorkGroupSize)), uvec3(uvec3(gl_WorkGroupSize)))), max(~ (min(uvec3(uvec3(gl_WorkGroupSize)), uvec3(uvec3(gl_WorkGroupSize)))), _GLF_IDENTITY(~ (min(uvec3(uvec3(gl_WorkGroupSize)), uvec3(uvec3(gl_WorkGroupSize)))), (false ? _GLF_FUZZED(min(uvec3(85562u, 165362u, 28256u), uvec3(4129u, 124233u, 10051u))) : ~ (min(uvec3(uvec3(gl_WorkGroupSize)), uvec3(uvec3(gl_WorkGroupSize))))))))))))) | (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(1u, 1u, 1u) * (gl_WorkGroupSize))), clamp(~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(1u, 1u, 1u) * (gl_WorkGroupSize))), ~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(1u, 1u, 1u) * (gl_WorkGroupSize))), ~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(1u, 1u, 1u) * (gl_WorkGroupSize))))))))), _GLF_IDENTITY(min(uvec3(uvec3(gl_WorkGroupSize)), uvec3(uvec3(gl_WorkGroupSize))), ~ (~ (min(uvec3(uvec3(gl_WorkGroupSize)), uvec3(uvec3(gl_WorkGroupSize)))))))))), _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize)), _GLF_IDENTITY(min(uvec3(uvec3(gl_WorkGroupSize)), uvec3(uvec3(gl_WorkGroupSize))), ~ (~ (min(uvec3(uvec3(gl_WorkGroupSize)), uvec3(uvec3(gl_WorkGroupSize)))))))))).x, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize)), _GLF_IDENTITY(min(uvec3(uvec3(gl_WorkGroupSize)), uvec3(uvec3(gl_WorkGroupSize))), ~ (~ (min(uvec3(uvec3(gl_WorkGroupSize)), uvec3(uvec3(gl_WorkGroupSize)))))))), clamp(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize)), _GLF_IDENTITY(min(uvec3(uvec3(gl_WorkGroupSize)), uvec3(uvec3(gl_WorkGroupSize))), ~ (~ (min(uvec3(uvec3(gl_WorkGroupSize)), uvec3(uvec3(gl_WorkGroupSize)))))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize)), _GLF_IDENTITY(min(uvec3(uvec3(gl_WorkGroupSize)), _GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize)), uvec3(uvec4(uvec3(uvec3(gl_WorkGroupSize)), 0u)))), ~ (~ (min(uvec3(uvec3(gl_WorkGroupSize)), uvec3(uvec3(gl_WorkGroupSize)))))))), (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize)), _GLF_IDENTITY(min(uvec3(uvec3(gl_WorkGroupSize)), uvec3(uvec3(gl_WorkGroupSize))), ~ (_GLF_IDENTITY(~ (min(uvec3(uvec3(gl_WorkGroupSize)), uvec3(uvec3(gl_WorkGroupSize)))), max(~ (min(uvec3(uvec3(gl_WorkGroupSize)), uvec3(uvec3(gl_WorkGroupSize)))), _GLF_IDENTITY(~ (min(uvec3(uvec3(gl_WorkGroupSize)), uvec3(uvec3(gl_WorkGroupSize)))), (false ? _GLF_FUZZED(min(uvec3(85562u, 165362u, 28256u), uvec3(4129u, 124233u, 10051u))) : ~ (min(uvec3(uvec3(gl_WorkGroupSize)), uvec3(uvec3(gl_WorkGroupSize))))))))))))) | (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(1u, 1u, 1u) * (gl_WorkGroupSize))), clamp(~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(1u, 1u, 1u) * (gl_WorkGroupSize))), ~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(1u, 1u, 1u) * (gl_WorkGroupSize))), ~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(1u, 1u, 1u) * (gl_WorkGroupSize))))))))), _GLF_IDENTITY(min(uvec3(uvec3(gl_WorkGroupSize)), uvec3(uvec3(gl_WorkGroupSize))), ~ (~ (min(uvec3(uvec3(gl_WorkGroupSize)), uvec3(uvec3(gl_WorkGroupSize)))))))))), _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize)), _GLF_IDENTITY(min(uvec3(uvec3(gl_WorkGroupSize)), uvec3(uvec3(gl_WorkGroupSize))), ~ (~ (min(uvec3(uvec3(gl_WorkGroupSize)), uvec3(uvec3(gl_WorkGroupSize)))))))))).x, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize)), _GLF_IDENTITY(min(uvec3(uvec3(gl_WorkGroupSize)), uvec3(uvec3(gl_WorkGroupSize))), ~ (~ (min(uvec3(uvec3(gl_WorkGroupSize)), uvec3(uvec3(gl_WorkGroupSize)))))))), clamp(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize)), _GLF_IDENTITY(min(uvec3(uvec3(gl_WorkGroupSize)), uvec3(uvec3(gl_WorkGroupSize))), ~ (~ (min(uvec3(uvec3(gl_WorkGroupSize)), uvec3(uvec3(gl_WorkGroupSize)))))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize)), _GLF_IDENTITY(min(uvec3(uvec3(gl_WorkGroupSize)), _GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize)), uvec3(uvec4(uvec3(uvec3(gl_WorkGroupSize)), 0u)))), ~ (~ (min(uvec3(uvec3(gl_WorkGroupSize)), uvec3(uvec3(gl_WorkGroupSize)))))))), (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize)), _GLF_IDENTITY(min(uvec3(uvec3(gl_WorkGroupSize)), uvec3(uvec3(gl_WorkGroupSize))), ~ (_GLF_IDENTITY(~ (min(uvec3(uvec3(gl_WorkGroupSize)), uvec3(uvec3(gl_WorkGroupSize)))), max(~ (min(uvec3(uvec3(gl_WorkGroupSize)), uvec3(uvec3(gl_WorkGroupSize)))), _GLF_IDENTITY(~ (min(uvec3(uvec3(gl_WorkGroupSize)), uvec3(uvec3(gl_WorkGroupSize)))), (false ? _GLF_FUZZED(min(uvec3(85562u, 165362u, 28256u), uvec3(4129u, 124233u, 10051u))) : ~ (min(uvec3(uvec3(gl_WorkGroupSize)), uvec3(uvec3(gl_WorkGroupSize))))))))))))) | (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(1u, 1u, 1u) * (gl_WorkGroupSize))), clamp(~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(1u, 1u, 1u) * (gl_WorkGroupSize))), ~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(1u, 1u, 1u) * (gl_WorkGroupSize))), ~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(1u, 1u, 1u) * (gl_WorkGroupSize))))))))), _GLF_IDENTITY(min(uvec3(uvec3(gl_WorkGroupSize)), uvec3(uvec3(gl_WorkGroupSize))), ~ (~ (min(uvec3(uvec3(gl_WorkGroupSize)), uvec3(uvec3(gl_WorkGroupSize)))))))))), _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize)), _GLF_IDENTITY(min(uvec3(uvec3(gl_WorkGroupSize)), uvec3(uvec3(gl_WorkGroupSize))), ~ (~ (min(uvec3(uvec3(gl_WorkGroupSize)), uvec3(uvec3(gl_WorkGroupSize)))))))))).x)))))))))), 1u)))))), (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), clamp(uvec3(gl_WorkGroupSize), uvec3(gl_WorkGroupSize), _GLF_IDENTITY(uvec3(gl_WorkGroupSize), (false ? _GLF_FUZZED(uvec3(29163u, 36275u, 165971u)) : uvec3(gl_WorkGroupSize)))))), min(uvec3(uvec3(gl_WorkGroupSize)), _GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize)), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(uvec3(uvec3(gl_WorkGroupSize))), max(_GLF_IDENTITY(uvec3(uvec3(uvec3(gl_WorkGroupSize))), min(uvec3(uvec3(uvec3(gl_WorkGroupSize))), uvec3(uvec3(uvec3(gl_WorkGroupSize))))), uvec3(uvec3(uvec3(gl_WorkGroupSize)))))), (uvec3(uvec3(uvec3(uvec3(gl_WorkGroupSize))))) | (uvec3(uvec3(uvec3(uvec3(gl_WorkGroupSize))))))))), uvec3(uvec3(_GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize)), min(uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), uvec3(1u, 1u, 1u) * (uvec3(gl_WorkGroupSize)))), uvec3(uvec3(gl_WorkGroupSize)))))))).x) * 1u)) / 1u)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), mix(float(_GLF_FUZZED(float(false))), float(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), float(mat3((_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) * 1.0), 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), 0.0)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) / 1.0))), _GLF_IDENTITY(mix(float(_GLF_FUZZED(vec3(-5.8, 35.76, -4.9).b)), float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), bool(true)), max(mix(float(_GLF_FUZZED(vec3(-5.8, 35.76, -4.9).b)), float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), bool(true)), mix(float(_GLF_FUZZED(vec3(-5.8, 35.76, _GLF_IDENTITY(-4.9, min(-4.9, -4.9))).b)), float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-0.9)), bool(false))), injectionSwitch.x)) < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))) : _GLF_FUZZED(vec2(637.380, -61.61)))).y))), bool(true)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true))), (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true))), bool(bvec2(bool(bool(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true))), true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true)), false || (bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), true))))), (false) && true)))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))))), injectionSwitch)).x > injectionSwitch.y)) || _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))))), ((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))))) || false))), bool(bvec3((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), mat2(1.0) * _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))) * mat2(1.0), (((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))) * mat2(1.0)) / vec2(1.0, 1.0)))), injectionSwitch)).x > injectionSwitch.y)) || (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(cos(4.4)) : _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)) / exp(0.0)))) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch, injectionSwitch)))).x > injectionSwitch.y) && true))))))))), false, _GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(workgroup_size, ~ (_GLF_IDENTITY(~ (workgroup_size), max(~ (workgroup_size), ~ (workgroup_size))))), (0u | _GLF_IDENTITY(0u, (0u) << 0u)))), (_GLF_IDENTITY(uint(uvec2(workgroup_size, (0u | 0u))), ~ (~ (uint(uvec2(workgroup_size, (_GLF_IDENTITY(0u | 0u, min(0u | 0u, 0u | 0u))))))))) >> 0u), (uint(uvec2(workgroup_size, (_GLF_IDENTITY(0u, ~ (~ (0u))) | 0u)))) - 0u)), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(uint(uvec2(workgroup_size, (_GLF_IDENTITY(0u, min(0u, 0u)) | 0u))), (uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size))) | 0u), (0u | 0u)), _GLF_IDENTITY((uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(3u), uvec2(3u))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec2(116573u, 135532u)) : _GLF_IDENTITY((uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(3u), uvec2(3u))), ~ (~ ((uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(3u), uvec2(3u)))))))) ^ (uvec2(workgroup_size, (0u | 0u)))))) - 0u)), 0u, 1u, 1u)), (true ? uint(uvec4(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(uint(uvec2(workgroup_size, (0u | 0u))), (uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(workgroup_size, max(workgroup_size, _GLF_IDENTITY(workgroup_size, uint(uvec3(workgroup_size, 0u, 1u))))), _GLF_IDENTITY((0u | _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> 0u)) / 1u), (0u) - _GLF_IDENTITY(0u, ~ (~ (0u))))), _GLF_IDENTITY(((0u | _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) >> 0u)) / 1u), (0u) - _GLF_IDENTITY(0u, ~ (~ (0u)))))), (_GLF_IDENTITY(((0u | _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> 0u)) / 1u), (0u) - _GLF_IDENTITY(0u, ~ (~ (0u)))))), uint(uvec3(((0u | _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) >> 0u)) / 1u), (0u) - _GLF_IDENTITY(0u, ~ (~ (0u)))))), 1u, ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))))))) / 1u) | ((0u | _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> 0u)) / 1u), (0u) - _GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))), (0u | 0u) + (_GLF_IDENTITY(0u, ~ (~ (0u)))))))))), (uvec2(_GLF_IDENTITY(workgroup_size, max(workgroup_size, _GLF_IDENTITY(workgroup_size, uint(uvec3(workgroup_size, 0u, 1u))))), _GLF_IDENTITY((0u | _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> 0u)) / 1u), (0u) - _GLF_IDENTITY(0u, ~ (~ (0u))))), _GLF_IDENTITY(((0u | _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) >> 0u)) / 1u), (0u) - _GLF_IDENTITY(0u, ~ (~ (0u)))))), (_GLF_IDENTITY(((0u | _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> 0u)) / 1u), (0u) - _GLF_IDENTITY(0u, ~ (~ (0u)))))), uint(uvec3(((0u | _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) >> 0u)) / 1u), (0u) - _GLF_IDENTITY(0u, ~ (~ (0u)))))), 1u, ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))))))) / 1u) | ((0u | _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> 0u)) / 1u), (0u) - _GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))), (0u | 0u) + (_GLF_IDENTITY(0u, ~ (~ (0u))))))))))) << uvec2(0u, 0u)))) - 0u)), _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(0u, 0u, _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, 0u ^ (2u))), uint(2u))), (_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, 0u ^ (2u))), uint(2u))), max((0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, 0u ^ (2u))), uint(2u))), (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, 0u ^ (2u))), uint(2u)))))) | 0u), 0u), min(uvec4(0u, 0u, (0u << _GLF_IDENTITY(uint(2u), uint(2u))), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) | 0u)))) ^ 0u)), uvec4(0u, 0u, _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(2u), uint(2u))), ((0u << _GLF_IDENTITY(uint(2u), uint(2u)))) | ((0u << _GLF_IDENTITY(uint(2u), uint(2u))))), 0u)))), uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(0u, 0u, (0u << _GLF_IDENTITY(uint(2u), uint(2u))), 0u), min(uvec4(0u, 0u, (0u << _GLF_IDENTITY(uint(2u), uint(2u))), 0u), uvec4(0u, 0u, (0u << _GLF_IDENTITY(uint(2u), uint(2u))), 0u)))), (uint(_GLF_IDENTITY(uvec4(0u, 0u, (0u << _GLF_IDENTITY(uint(2u), uint(2u))), 0u), min(uvec4(0u, 0u, (0u << _GLF_IDENTITY(uint(2u), uint(2u))), 0u), uvec4(0u, 0u, (0u << _GLF_IDENTITY(uint(2u), uint(2u))), 0u))))) | 0u), 0u, 0u, 1u), min(uvec4(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(0u, 0u, (0u << _GLF_IDENTITY(uint(2u), uint(2u))), 0u), min(uvec4(0u, 0u, (0u << _GLF_IDENTITY(uint(2u), uint(2u))), 0u), uvec4(0u, 0u, (0u << _GLF_IDENTITY(uint(2u), uint(2u))), 0u)))), (uint(_GLF_IDENTITY(uvec4(0u, 0u, (0u << _GLF_IDENTITY(uint(2u), uint(2u))), 0u), min(uvec4(0u, 0u, (0u << _GLF_IDENTITY(uint(2u), uint(2u))), 0u), uvec4(0u, 0u, (0u << _GLF_IDENTITY(uint(2u), uint(2u))), 0u))))) | 0u), 0u, 0u, 1u), _GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(0u, 0u, (0u << _GLF_IDENTITY(uint(2u), uint(2u))), 0u), min(uvec4(0u, 0u, (0u << _GLF_IDENTITY(uint(2u), uint(2u))), 0u), uvec4(0u, 0u, (0u << _GLF_IDENTITY(uint(2u), uint(2u))), 0u)))), (uint(_GLF_IDENTITY(uvec4(0u, 0u, (0u << _GLF_IDENTITY(uint(2u), uint(2u))), 0u), min(uvec4(0u, 0u, (0u << _GLF_IDENTITY(uint(2u), uint(2u))), 0u), uvec4(0u, 0u, (0u << _GLF_IDENTITY(uint(2u), uint(2u))), 0u))))) | 0u), 0u, 0u, 1u), (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(0u, 0u, (0u << _GLF_IDENTITY(uint(2u), uint(2u))), 0u), min(uvec4(0u, 0u, (0u << _GLF_IDENTITY(uint(2u), uint(2u))), 0u), uvec4(0u, 0u, (0u << _GLF_IDENTITY(uint(2u), uint(2u))), 0u)))), (uint(_GLF_IDENTITY(uvec4(0u, 0u, (0u << _GLF_IDENTITY(uint(2u), uint(2u))), 0u), min(uvec4(0u, 0u, (0u << _GLF_IDENTITY(uint(2u), uint(2u))), 0u), uvec4(0u, 0u, (0u << _GLF_IDENTITY(uint(2u), uint(2u))), 0u))))) | 0u), 0u, 0u, 1u), (uvec4(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(0u, 0u, (0u << _GLF_IDENTITY(uint(2u), uint(2u))), 0u), min(uvec4(0u, 0u, (0u << _GLF_IDENTITY(uint(2u), uint(2u))), 0u), uvec4(0u, 0u, (0u << _GLF_IDENTITY(uint(2u), uint(2u))), 0u)))), (uint(_GLF_IDENTITY(uvec4(0u, 0u, (0u << _GLF_IDENTITY(uint(2u), uint(2u))), 0u), min(uvec4(0u, 0u, (0u << _GLF_IDENTITY(uint(2u), uint(2u))), 0u), uvec4(0u, 0u, (0u << _GLF_IDENTITY(uint(2u), uint(2u))), 0u))))) | 0u), 0u, 0u, 1u)) ^ uvec4(0u, 0u, 0u, 0u))) >> uvec4(0u, 0u, 0u, 0u)))), clamp(uvec4(uint(_GLF_IDENTITY(uvec4(0u, 0u, (0u << _GLF_IDENTITY(uint(2u), uint(2u))), 0u), min(uvec4(0u, 0u, (0u << _GLF_IDENTITY(uint(2u), uint(2u))), 0u), uvec4(0u, 0u, (0u << _GLF_IDENTITY(uint(2u), uint(2u))), 0u)))), 0u, 0u, 1u), uvec4(uint(_GLF_IDENTITY(uvec4(0u, 0u, (0u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), 0u | (uint(2u))))), 0u), min(uvec4(0u, 0u, (0u << _GLF_IDENTITY(uint(2u), uint(2u))), 0u), uvec4(0u, 0u, (0u << _GLF_IDENTITY(uint(2u), uint(2u))), 0u)))), 0u, 0u, 1u), uvec4(uint(_GLF_IDENTITY(uvec4(0u, 0u, (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(2u), uint(2u)), (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), 1u * (_GLF_IDENTITY(uint(2u), uint(2u))))) - 0u)), 0u), min(uvec4(0u, 0u, (0u << _GLF_IDENTITY(uint(2u), uint(2u))), 0u), uvec4(0u, 0u, (0u << _GLF_IDENTITY(uint(2u), uint(2u))), 0u)))), 0u, 0u, 1u))), (_GLF_IDENTITY(uvec4(uint(_GLF_IDENTITY(uvec4(0u, 0u, (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (2u))), uint(2u))), 0u), min(uvec4(0u, 0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) - 0u))) << _GLF_IDENTITY(uint(2u), uint(2u))), ((0u << _GLF_IDENTITY(uint(2u), uint(2u)))) << 0u), 0u), uvec4(0u, 0u, (0u << _GLF_IDENTITY(uint(2u), uint(2u))), 0u)))), 0u, 0u, 1u), clamp(uvec4(uint(_GLF_IDENTITY(uvec4(0u, _GLF_IDENTITY(0u, max(0u, 0u)), (0u << _GLF_IDENTITY(uint(2u), uint(2u))), 0u), min(uvec4(0u, 0u, (0u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, (2u) << 0u)), max(uint(_GLF_IDENTITY(2u, (2u) << 0u)), uint(_GLF_IDENTITY(2u, _GLF_IDENTITY((2u) << 0u, max(_GLF_IDENTITY((2u) << 0u, ((2u) << 0u) | ((2u) << 0u)), _GLF_IDENTITY((2u) << 0u, ((2u) << 0u) - 0u))))))))), 0u), uvec4(0u, 0u, (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(2u), uint(2u)), uint(uint(0u << _GLF_IDENTITY(uint(2u), uint(2u)))))), 0u)))), 0u, 0u, 1u), uvec4(uint(_GLF_IDENTITY(uvec4(0u, 0u, (0u << _GLF_IDENTITY(uint(2u), uint(2u))), 0u), min(uvec4(0u, 0u, (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(0u, (0u) + 0u) << _GLF_IDENTITY(uint(2u), uint(2u))) | 0u)), 0u), uvec4(0u, 0u, (0u << _GLF_IDENTITY(uint(2u), uint(2u))), 0u)))), 0u, 0u, 1u), uvec4(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(0u, max(0u, 0u)), 0u, (0u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) << 0u))), 0u), min(uvec4(0u, 0u, (_GLF_IDENTITY(0u, (0u) / 1u) << _GLF_IDENTITY(uint(2u), uint(2u))), 0u), uvec4(0u, 0u, (0u << _GLF_IDENTITY(uint(2u), uint(2u))), 0u)))), 0u, 0u, 1u)))) / _GLF_IDENTITY(uvec4(1u, 1u, 1u, 1u), ~ (_GLF_IDENTITY(~ (uvec4(1u, 1u, 1u, 1u)), max(~ (uvec4(1u, 1u, 1u, 1u)), _GLF_IDENTITY(~ (uvec4(1u, 1u, 1u, 1u)), uvec4(0u, 0u, 0u, 0u) | (~ (uvec4(1u, 1u, 1u, 1u)))))))))))), 1u, 1u)) : _GLF_FUZZED(subgroup_size)))) * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, (0u & 20913u) ^ (workgroup_base)) + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, false, false)), false || (bool(bvec4(_GLF_DEAD(false), false, false, false))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(smoothstep(3.6, -3.3, injectionSwitch)) : injectionSwitch)).y)), false), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec3(bvec3(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) || false))), ! (! (! (! (_GLF_IDENTITY(false, (false) || false)))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false)))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true && (injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (true && (injectionSwitch.x > injectionSwitch.y)), (! (true && (injectionSwitch.x > injectionSwitch.y))) && true)))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))) || false)))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), true && (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, tan(0.0)))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), false || (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)) + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size)) + _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), max(_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)), ((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1))) % subgroup_size, (false ? _GLF_FUZZED(workgroup_id) : (subgroup_local_id + 1) % subgroup_size)))) >> 0u), ((subgroup_local_id + 1) % subgroup_size))), (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), max(_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), (subgroup_size) << 0u)), ((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1))) % subgroup_size, (false ? _GLF_FUZZED(workgroup_id) : (subgroup_local_id + 1) % subgroup_size)), min(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1))) % subgroup_size, (false ? _GLF_FUZZED(workgroup_id) : (subgroup_local_id + 1) % subgroup_size)), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1))) % subgroup_size, (false ? _GLF_FUZZED(workgroup_id) : (subgroup_local_id + 1) % subgroup_size)))))) >> 0u), ((subgroup_local_id + 1) % subgroup_size)))) / 1u);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 atomicStore(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ _GLF_IDENTITY(0u, 0u | (0u)))], uint(1), _GLF_IDENTITY(4, (false ? _GLF_FUZZED(_GLF_IDENTITY(-25455, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (-25455))) : 4)), 64, _GLF_IDENTITY(_GLF_IDENTITY(4, (4) ^ 0), _GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, _GLF_IDENTITY(max(0, 0), 1 * (max(0, 0)))))) ^ (4)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)) + 0.0) > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).y, float(vec4(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))), injectionSwitch))) / vec2(1.0, 1.0)).y, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, ! (! (_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)), subgroup_local_id + 1)) < subgroup_size))))
  {
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) + 0u)], _GLF_IDENTITY(uint(2), (_GLF_IDENTITY(uint(2), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(max(_GLF_IDENTITY(uint(2), (uint(2)) + 0u), uint(2)), 0u | (_GLF_IDENTITY(max(_GLF_IDENTITY(uint(2), (uint(2)) + 0u), uint(2)), clamp(max(_GLF_IDENTITY(uint(2), (uint(2)) + 0u), uint(2)), max(_GLF_IDENTITY(uint(2), (uint(2)) + 0u), uint(2)), max(_GLF_IDENTITY(uint(2), (uint(2)) + 0u), uint(2)))))), 0u ^ (max(_GLF_IDENTITY(uint(2), _GLF_IDENTITY((uint(2)), ((uint(2))) >> 0u) + 0u), uint(2)))), _GLF_IDENTITY((_GLF_IDENTITY(max(_GLF_IDENTITY(uint(2), (uint(2)) + 0u), uint(2)), _GLF_IDENTITY(0u ^ (max(_GLF_IDENTITY(uint(2), (uint(2)) + 0u), uint(2))), (0u ^ (max(_GLF_IDENTITY(uint(2), (uint(2)) + 0u), uint(2)))) + 0u))) + (0u & 73543u), clamp(_GLF_IDENTITY((_GLF_IDENTITY(max(_GLF_IDENTITY(uint(2), (uint(2)) + 0u), uint(2)), _GLF_IDENTITY(0u ^ (max(_GLF_IDENTITY(uint(2), (uint(2)) + 0u), uint(2))), (0u ^ (max(_GLF_IDENTITY(uint(2), (uint(2)) + 0u), uint(2)))) + 0u))) + (0u & 73543u), 0u | ((_GLF_IDENTITY(max(_GLF_IDENTITY(uint(2), (uint(2)) + 0u), uint(2)), _GLF_IDENTITY(0u ^ (max(_GLF_IDENTITY(uint(2), (uint(2)) + 0u), uint(2))), (0u ^ (max(_GLF_IDENTITY(uint(2), (uint(2)) + 0u), uint(2)))) + 0u))) + (0u & 73543u))), (_GLF_IDENTITY(max(_GLF_IDENTITY(uint(2), (uint(2)) + 0u), uint(2)), _GLF_IDENTITY(0u ^ (max(_GLF_IDENTITY(uint(2), (uint(2)) + 0u), uint(2))), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) + 0u) ^ (max(_GLF_IDENTITY(uint(2), (uint(2)) + 0u), uint(2)))) + 0u))) + (0u & 73543u), (_GLF_IDENTITY(max(_GLF_IDENTITY(uint(2), (uint(2)) + 0u), uint(2)), _GLF_IDENTITY(0u ^ (max(_GLF_IDENTITY(uint(2), (uint(2)) + 0u), uint(2))), (0u ^ (max(_GLF_IDENTITY(uint(2), (uint(2)) + 0u), uint(2)))) + 0u))) + (0u & 73543u)))))) ^ 0u), 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(4, (4) ^ 0), _GLF_IDENTITY(0 | (4), 0 | (0 | (4)))));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), injectionSwitch.x)) > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)), false))))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))), (! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0), min(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0), max(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0), _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0))))) > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0) > injectionSwitch.y)) && true), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0) > injectionSwitch.y)) && true))), true, false)))))) || false)), ! (! ((_GLF_IDENTITY(! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))), (! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0), min(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0), max(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0), _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0))))) > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0) > injectionSwitch.y)) && true), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0) > injectionSwitch.y)) && true))), true, false)))))) || false)))))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))), (! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0), min(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0), max(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0), _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0))))) > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0) > injectionSwitch.y)) && true), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0) > injectionSwitch.y)) && true))), true, false)))))) || false)), ! (! ((_GLF_IDENTITY(! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))), (! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0), min(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0), max(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0), _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0))))) > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0) > injectionSwitch.y)) && true), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0) > injectionSwitch.y)) && true))), true, false)))))) || false)))))))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))), (! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0), _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0), max(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0), _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0)))), _GLF_IDENTITY(float(mat4(min(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0), max(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0), _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0)))), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0)), min(_GLF_IDENTITY(float(mat4(min(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0), max(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0), _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0)))), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0)), (float(mat4(min(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0), max(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0), _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0)))), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0))) + 0.0), float(mat4(min(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0), max(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0), _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0)))), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0)))))) > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))))))) / 1.0) > injectionSwitch.y), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0) > injectionSwitch.y)) && true), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), mix(float(_GLF_FUZZED(-5315.7730)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), bool(true)))))) / 1.0) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0) > injectionSwitch.y)) && true))), true, _GLF_IDENTITY(false, true && (false)))))))) || false)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))), (! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0), min(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0), max(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) * mat2(1.0))).x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0))))) > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(0.4)), float(injectionSwitch.x), bool(true)))), float(_GLF_FUZZED((- 6382.3827))), bool(false))), injectionSwitch.x))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(0.4)), float(injectionSwitch.x), bool(true)))), float(_GLF_FUZZED((- 6382.3827))), bool(false))), injectionSwitch.x))), max((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(0.4)), float(injectionSwitch.x), bool(true)))), float(_GLF_FUZZED((- 6382.3827))), bool(false))), injectionSwitch.x))), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(0.4)), float(injectionSwitch.x), bool(true)))), float(_GLF_FUZZED((- 6382.3827))), bool(false))), injectionSwitch.x))))), 1.0, 1.0, 1.0, 1.0, 1.0, length(log(vec3(1.0, 1.0, 1.0))), 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), abs(1.0), log(1.0), abs(1.0), 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0)), (true ? mat4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(0.4)), float(injectionSwitch.x), bool(true)))), float(_GLF_FUZZED((- 6382.3827))), bool(false))), injectionSwitch.x))), max((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(0.4)), float(injectionSwitch.x), bool(true)))), float(_GLF_FUZZED((- 6382.3827))), bool(false))), injectionSwitch.x))), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(0.4)), float(injectionSwitch.x), bool(true)))), float(_GLF_FUZZED((- 6382.3827))), bool(false))), injectionSwitch.x))))), 1.0, 1.0, 1.0, 1.0, 1.0, length(log(vec3(1.0, 1.0, 1.0))), 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), abs(1.0), log(1.0), abs(1.0), 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0)) : _GLF_FUZZED(mat4(2824.4097, -7.8, -181.597, 95.37, 2.2, -793.257, -3456.0530, -0.3, -2.0, 1.1, -3.9, -0.1, -38.38, 66.37, 3.0, 330.703))))), max(float(_GLF_IDENTITY(mat4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(0.4)), float(injectionSwitch.x), bool(true)))), float(_GLF_FUZZED((- 6382.3827))), bool(false))), injectionSwitch.x))), max((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(0.4)), float(injectionSwitch.x), bool(true)))), float(_GLF_FUZZED((- 6382.3827))), bool(false))), injectionSwitch.x))), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(0.4)), float(injectionSwitch.x), bool(true)))), float(_GLF_FUZZED((- 6382.3827))), bool(false))), injectionSwitch.x))))), 1.0, 1.0, 1.0, 1.0, 1.0, length(log(vec3(1.0, 1.0, 1.0))), 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), abs(1.0), log(1.0), abs(1.0), 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0)), (true ? mat4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(0.4)), float(injectionSwitch.x), bool(true)))), float(_GLF_FUZZED((- 6382.3827))), bool(false))), injectionSwitch.x))), max((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(0.4)), float(injectionSwitch.x), bool(true)))), float(_GLF_FUZZED((- 6382.3827))), bool(false))), injectionSwitch.x))), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(0.4)), float(injectionSwitch.x), bool(true)))), float(_GLF_FUZZED((- 6382.3827))), bool(false))), injectionSwitch.x))))), 1.0, 1.0, 1.0, 1.0, 1.0, length(log(vec3(1.0, 1.0, 1.0))), 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), abs(1.0), log(1.0), abs(1.0), 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0)) : _GLF_FUZZED(mat4(2824.4097, -7.8, -181.597, 95.37, 2.2, -793.257, -3456.0530, -0.3, -2.0, 1.1, -3.9, -0.1, -38.38, 66.37, 3.0, 330.703))))), float(_GLF_IDENTITY(mat4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(0.4)), float(injectionSwitch.x), bool(true)))), float(_GLF_FUZZED((- 6382.3827))), bool(false))), injectionSwitch.x))), max((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(0.4)), float(injectionSwitch.x), bool(true)))), float(_GLF_FUZZED((- 6382.3827))), bool(false))), injectionSwitch.x))), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(0.4)), float(injectionSwitch.x), bool(true)))), float(_GLF_FUZZED((- 6382.3827))), bool(false))), injectionSwitch.x))))), 1.0, 1.0, 1.0, 1.0, 1.0, length(log(vec3(1.0, 1.0, 1.0))), 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), abs(1.0), log(1.0), abs(1.0), 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0)), (true ? mat4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(0.4)), float(injectionSwitch.x), bool(true)))), float(_GLF_FUZZED((- 6382.3827))), bool(false))), injectionSwitch.x))), max((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(0.4)), float(injectionSwitch.x), bool(true)))), float(_GLF_FUZZED((- 6382.3827))), bool(false))), injectionSwitch.x))), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(0.4)), float(injectionSwitch.x), bool(true)))), float(_GLF_FUZZED((- 6382.3827))), bool(false))), injectionSwitch.x))))), 1.0, 1.0, 1.0, 1.0, 1.0, length(log(vec3(1.0, 1.0, 1.0))), 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), abs(1.0), log(1.0), abs(1.0), 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0)) : _GLF_FUZZED(mat4(2824.4097, -7.8, -181.597, 95.37, 2.2, -793.257, -3456.0530, -0.3, -2.0, 1.1, -3.9, -0.1, -38.38, 66.37, 3.0, 330.703)))))))) / 1.0) > injectionSwitch.y), _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0) > injectionSwitch.y)), (((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0) > injectionSwitch.y))) || false) && true), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0) > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(4598.4268), _GLF_FUZZED(0.1)), bvec2(false, false))))).y)) && true))), true, false)))))) || false)), ! (! ((_GLF_IDENTITY(! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))), (! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0), min(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0), max(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) * mat2(1.0))).x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0))))) > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(0.4)), float(injectionSwitch.x), bool(true)))), float(_GLF_FUZZED((- 6382.3827))), bool(false))), injectionSwitch.x))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(0.4)), float(injectionSwitch.x), bool(true)))), float(_GLF_FUZZED((- 6382.3827))), bool(false))), injectionSwitch.x))), max((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(0.4)), float(injectionSwitch.x), bool(true)))), float(_GLF_FUZZED((- 6382.3827))), bool(false))), injectionSwitch.x))), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(0.4)), float(injectionSwitch.x), bool(true)))), float(_GLF_FUZZED((- 6382.3827))), bool(false))), injectionSwitch.x))))), 1.0, 1.0, 1.0, 1.0, 1.0, length(log(vec3(1.0, 1.0, 1.0))), 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), abs(1.0), log(1.0), abs(1.0), 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0)), (true ? mat4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(0.4)), float(injectionSwitch.x), bool(true)))), float(_GLF_FUZZED((- 6382.3827))), bool(false))), injectionSwitch.x))), max((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(0.4)), float(injectionSwitch.x), bool(true)))), float(_GLF_FUZZED((- 6382.3827))), bool(false))), injectionSwitch.x))), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(0.4)), float(injectionSwitch.x), bool(true)))), float(_GLF_FUZZED((- 6382.3827))), bool(false))), injectionSwitch.x))))), 1.0, 1.0, 1.0, 1.0, 1.0, length(log(vec3(1.0, 1.0, 1.0))), 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), abs(1.0), log(1.0), abs(1.0), 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0)) : _GLF_FUZZED(mat4(2824.4097, -7.8, -181.597, 95.37, 2.2, -793.257, -3456.0530, -0.3, -2.0, 1.1, -3.9, -0.1, -38.38, 66.37, 3.0, 330.703))))), max(float(_GLF_IDENTITY(mat4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(0.4)), float(injectionSwitch.x), bool(true)))), float(_GLF_FUZZED((- 6382.3827))), bool(false))), injectionSwitch.x))), max((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(0.4)), float(injectionSwitch.x), bool(true)))), float(_GLF_FUZZED((- 6382.3827))), bool(false))), injectionSwitch.x))), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(0.4)), float(injectionSwitch.x), bool(true)))), float(_GLF_FUZZED((- 6382.3827))), bool(false))), injectionSwitch.x))))), 1.0, 1.0, 1.0, 1.0, 1.0, length(log(vec3(1.0, 1.0, 1.0))), 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), abs(1.0), log(1.0), abs(1.0), 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0)), (true ? mat4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(0.4)), float(injectionSwitch.x), bool(true)))), float(_GLF_FUZZED((- 6382.3827))), bool(false))), injectionSwitch.x))), max((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(0.4)), float(injectionSwitch.x), bool(true)))), float(_GLF_FUZZED((- 6382.3827))), bool(false))), injectionSwitch.x))), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(0.4)), float(injectionSwitch.x), bool(true)))), float(_GLF_FUZZED((- 6382.3827))), bool(false))), injectionSwitch.x))))), 1.0, 1.0, 1.0, 1.0, 1.0, length(log(vec3(1.0, 1.0, 1.0))), 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), abs(1.0), log(1.0), abs(1.0), 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0)) : _GLF_FUZZED(mat4(2824.4097, -7.8, -181.597, 95.37, 2.2, -793.257, -3456.0530, -0.3, -2.0, 1.1, -3.9, -0.1, -38.38, 66.37, 3.0, 330.703))))), float(_GLF_IDENTITY(mat4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(0.4)), float(injectionSwitch.x), bool(true)))), float(_GLF_FUZZED((- 6382.3827))), bool(false))), injectionSwitch.x))), max((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(0.4)), float(injectionSwitch.x), bool(true)))), float(_GLF_FUZZED((- 6382.3827))), bool(false))), injectionSwitch.x))), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(0.4)), float(injectionSwitch.x), bool(true)))), float(_GLF_FUZZED((- 6382.3827))), bool(false))), injectionSwitch.x))))), 1.0, 1.0, 1.0, 1.0, 1.0, length(log(vec3(1.0, 1.0, 1.0))), 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), abs(1.0), log(1.0), abs(1.0), 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0)), (true ? mat4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(0.4)), float(injectionSwitch.x), bool(true)))), float(_GLF_FUZZED((- 6382.3827))), bool(false))), injectionSwitch.x))), max((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(0.4)), float(injectionSwitch.x), bool(true)))), float(_GLF_FUZZED((- 6382.3827))), bool(false))), injectionSwitch.x))), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(0.4)), float(injectionSwitch.x), bool(true)))), float(_GLF_FUZZED((- 6382.3827))), bool(false))), injectionSwitch.x))))), 1.0, 1.0, 1.0, 1.0, 1.0, length(log(vec3(1.0, 1.0, 1.0))), 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), abs(1.0), log(1.0), abs(1.0), 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0)) : _GLF_FUZZED(mat4(2824.4097, -7.8, -181.597, 95.37, 2.2, -793.257, -3456.0530, -0.3, -2.0, 1.1, -3.9, -0.1, -38.38, 66.37, 3.0, 330.703)))))))) / 1.0) > injectionSwitch.y), _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0) > injectionSwitch.y)), (((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0) > injectionSwitch.y))) || false) && true), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0) > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(4598.4268), _GLF_FUZZED(0.1)), bvec2(false, false))))).y)) && true))), true, false)))))) || false)))))))))))))) && true)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3x4(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, log(1.0), 0.0, abs(1.0)), mat4(1.0) * (mat3x4(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, log(1.0), 0.0, abs(1.0)))))) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false)))))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false)))))), false))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(vec4(537.141, -4.8, 60.61, 5.4).y)), bool(false))))) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-24.71)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, false, true)), true && (_GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 1.0), (true ? mat2x3(injectionSwitch, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 1.0) : _GLF_FUZZED(mat2x3(mat3x4(-1770.6977, 4.9, 29.61, 0.7, -5.0, -989.447, -4.3, 7.6, 9.7, -14.25, -907.503, -367.991)))))), clamp(vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 1.0), (true ? mat2x3(injectionSwitch, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 1.0) : _GLF_FUZZED(mat2x3(mat3x4(-1770.6977, 4.9, 29.61, 0.7, -5.0, -989.447, -4.3, 7.6, 9.7, -14.25, -907.503, -367.991)))))), vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 1.0), (true ? mat2x3(injectionSwitch, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 1.0) : _GLF_FUZZED(mat2x3(mat3x4(-1770.6977, 4.9, 29.61, 0.7, -5.0, -989.447, -4.3, 7.6, 9.7, -14.25, -907.503, -367.991)))))), vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 1.0), (true ? mat2x3(injectionSwitch, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 1.0) : _GLF_FUZZED(mat2x3(mat3x4(-1770.6977, 4.9, 29.61, 0.7, -5.0, -989.447, -4.3, 7.6, 9.7, -14.25, -907.503, -367.991))))))))).y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, false, true)), false || (bool(bvec4(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, false, true)))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, false, true)), true && (_GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 1.0), (true ? mat2x3(injectionSwitch, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 1.0) : _GLF_FUZZED(mat2x3(mat3x4(-1770.6977, 4.9, 29.61, 0.7, -5.0, -989.447, -4.3, 7.6, 9.7, -14.25, -907.503, -367.991)))))), clamp(vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 1.0), (true ? mat2x3(injectionSwitch, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 1.0) : _GLF_FUZZED(mat2x3(mat3x4(-1770.6977, 4.9, 29.61, 0.7, -5.0, -989.447, -4.3, 7.6, 9.7, -14.25, -907.503, -367.991)))))), vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 1.0), (true ? mat2x3(injectionSwitch, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 1.0) : _GLF_FUZZED(mat2x3(mat3x4(-1770.6977, 4.9, 29.61, 0.7, -5.0, -989.447, -4.3, 7.6, 9.7, -14.25, -907.503, -367.991)))))), vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 1.0), (true ? mat2x3(injectionSwitch, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 1.0) : _GLF_FUZZED(mat2x3(mat3x4(-1770.6977, 4.9, 29.61, 0.7, -5.0, -989.447, -4.3, 7.6, 9.7, -14.25, -907.503, -367.991))))))))).y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, false, true)), false || (bool(bvec4(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, false, true)))))), bool(bvec4(_GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, false, true)), true && (_GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 1.0), (true ? mat2x3(injectionSwitch, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 1.0) : _GLF_FUZZED(mat2x3(mat3x4(-1770.6977, 4.9, 29.61, 0.7, -5.0, -989.447, -4.3, 7.6, 9.7, -14.25, -907.503, -367.991)))))), clamp(vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 1.0), (true ? mat2x3(injectionSwitch, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 1.0) : _GLF_FUZZED(mat2x3(mat3x4(-1770.6977, 4.9, 29.61, 0.7, -5.0, -989.447, -4.3, 7.6, 9.7, -14.25, -907.503, -367.991)))))), vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 1.0), (true ? mat2x3(injectionSwitch, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 1.0) : _GLF_FUZZED(mat2x3(mat3x4(-1770.6977, 4.9, 29.61, 0.7, -5.0, -989.447, -4.3, 7.6, 9.7, -14.25, -907.503, -367.991)))))), vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 1.0), (true ? mat2x3(injectionSwitch, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 1.0) : _GLF_FUZZED(mat2x3(mat3x4(-1770.6977, 4.9, 29.61, 0.7, -5.0, -989.447, -4.3, 7.6, 9.7, -14.25, -907.503, -367.991))))))))).y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, false, true)), false || (bool(bvec4(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, false, true)))))), true, false, false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), true && ((! (false)))))))))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, ! (! (false))))), (bool(bool(_GLF_IDENTITY(false, ! (! (false)))))) || false)))))) && true))));
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, false || (false)))))), (true && (_GLF_IDENTITY(false, false || (false)))) && true))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x4(injectionSwitch.x, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-49.20))), 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), (float(mat3x4(injectionSwitch.x, 1.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(834.219) : _GLF_IDENTITY(1.0, (1.0) / sqrt(1.0)))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0))) / 1.0)), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), false), bvec3(bvec3(bvec3(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), (float(mat3x4(injectionSwitch.x, 1.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(834.219) : _GLF_IDENTITY(1.0, (1.0) / sqrt(1.0)))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0))) / 1.0)), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), false))))))), bool(bvec4(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(1.2) : injectionSwitch.y))))))), bvec2(bvec3(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, false), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))))))), ((injectionSwitch.x > injectionSwitch.y)) || false)))))), false)))), true, false, false))))), (bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true)))), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true)))))))), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), bvec2(bvec3(bvec2(bvec3(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(bvec4(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))), true && (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), bvec2(bvec3(bvec2(bvec3(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))), true && (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-5172.7250, -6.6)) : injectionSwitch)).y))), false)), true))))), true, false, false)))))) || false))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(-82208) : 2))), 4, 64, _GLF_IDENTITY(4, clamp(4, 4, 4)));
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))))).x > injectionSwitch.y))))
    barrier();
   subgroupAll(_GLF_IDENTITY(true, _GLF_IDENTITY((true), true && (_GLF_IDENTITY((true), ! (! (_GLF_IDENTITY((true), false || ((true)))))))) && true));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), bool(_GLF_IDENTITY(bvec2(! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), bool(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true), bvec2(bvec2(bvec2(! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)).x < injectionSwitch.y))))))), true))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (false) || false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), (! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), false || (! ((injectionSwitch.x > injectionSwitch.y)))))) && _GLF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec4(true, false, true, true)))))), (injectionSwitch.x < injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true))))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, bool(bvec2(_GLF_IDENTITY((_GLF_DEAD(false)) && true, bool(bvec2((_GLF_DEAD(false)) && true, true))), false))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
