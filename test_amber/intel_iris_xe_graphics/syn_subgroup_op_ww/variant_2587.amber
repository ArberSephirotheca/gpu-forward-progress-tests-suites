#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   switch(_GLF_SWITCH(0))
    {
     case 40:
     for(mat3x4 _GLF_SWITCH_0_0v[91]; true; mat3x2(-78.56, -9.5, 411.245, -5304.1637, 9.0, -521.642))
      {
       if((uvec2(130729u, 84512u) != _GLF_IDENTITY(uvec2(14158u, 34918u), ~ (_GLF_IDENTITY(~ (uvec2(14158u, 34918u)), (~ (uvec2(14158u, 34918u))) << uvec2(0u, 0u))))))
        {
         mat3x4 _GLF_SWITCH_0_1v, _GLF_SWITCH_0_2v, _GLF_SWITCH_0_3v[37];
         if(true)
          {
           mat3x4 _GLF_SWITCH_0_4v;
           uvec3 _GLF_SWITCH_0_5v, _GLF_SWITCH_0_6v, _GLF_SWITCH_0_7v;
           if(_GLF_DEAD(false))
            barrier();
           ivec2(-74540, -88497);
           vec3 _GLF_SWITCH_0_8v;
           ivec4 _GLF_SWITCH_0_9v, _GLF_SWITCH_0_10v[90];
          }
         for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(12218) : _injected_loop_counter)))) != ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)))); _injected_loop_counter ++)
          {
           ivec3 _GLF_SWITCH_0_11v;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         {
          if(_GLF_DEAD(false))
           return;
          if(_GLF_DEAD(false))
           {
            do
             {
              barrier();
             }
            while(_GLF_WRAPPED_LOOP(false));
           }
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))))))
           {
            if(_GLF_WRAPPED_IF_TRUE(true))
             {
              barrier();
              if(_GLF_DEAD(false))
               barrier();
             }
            else
             {
             }
           }
          ;
          if(_GLF_DEAD(false))
           barrier();
          do
           {
            switch(_GLF_SWITCH(0))
             {
              case 76:
              if(_GLF_DEAD(false))
               break;
              vec2 _GLF_SWITCH_2_0v, _GLF_SWITCH_2_1v[18], _GLF_SWITCH_2_2v;
              case 0:
              case 31:
              case 44:
              case 11:
              case 52:
              case 41:
              case 30:
              if(_GLF_DEAD(false))
               barrier();
              outerProduct(_GLF_IDENTITY(vec4(-830.995, 7.3, -39.93, -2119.3934), mix(vec4((vec4(-830.995, 7.3, -39.93, -2119.3934))[0], (vec4(-830.995, 7.3, -39.93, -2119.3934))[1], (vec4(-830.995, 7.3, -39.93, -2119.3934))[2], (vec4(-830.995, 7.3, -39.93, -2119.3934))[3]), vec4(_GLF_FUZZED(8.6), _GLF_FUZZED(-5.0), _GLF_FUZZED(27.45), _GLF_FUZZED(6.7)), bvec4(false, false, false, false))), vec4(7.4, -5.1, 7.9, 58.67));
              break;
              case 29:
              mat4x3(214.293);
              case 18:
              if(_GLF_DEAD(false))
               barrier();
              mat2 _GLF_SWITCH_2_3v, _GLF_SWITCH_2_4v;
              default:
              1;
              if(_GLF_DEAD(false))
               return;
             }
            if(_GLF_DEAD(false))
             barrier();
           }
          while(_GLF_WRAPPED_LOOP(false));
          mat4x2(378.442, -13.53, 5.7, 9.5, -2.4, 0.0, -9.0, -7.4);
          if(_GLF_DEAD(false))
           break;
          if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7.8), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(96.68)), bvec2(true, false))).x > injectionSwitch.y))))
           barrier();
         }
         {
          for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)))); _injected_loop_counter ++)
           {
            if(_GLF_DEAD(false))
             barrier();
           }
          if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
           break;
          if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
           barrier();
          switch(_GLF_SWITCH(0))
           {
            case 0:
            case 6:
            if(_GLF_DEAD(false))
             barrier();
            case 22:
            bvec2 _GLF_SWITCH_0_12v;
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            case 84:
            do
             {
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
             }
            while(_GLF_WRAPPED_LOOP(false));
            case 9:
            if(_GLF_DEAD(false))
             continue;
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            (128723u ^ (uvec4(15942u, 60815u, 12416u, 188139u) / uvec4(66538u, _GLF_IDENTITY(96065u, 1u * (96065u)), 196760u, 47464u)));
            vec2 _GLF_SWITCH_0_13v[67];
            bvec4 _GLF_SWITCH_0_14v;
            mat2x3 _GLF_SWITCH_0_15v[98], _GLF_SWITCH_0_16v, _GLF_SWITCH_0_17v;
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            case 93:
            mat4x2 _GLF_SWITCH_0_18v, _GLF_SWITCH_0_19v;
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(false))
               {
                for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                 {
                  barrier();
                 }
               }
              return;
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               continue;
             }
            do
             {
              ivec3(35881, 94498, 80928);
             }
            while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(false))
               continue;
              barrier();
             }
            case 30:
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             break;
            vec3 _GLF_SWITCH_0_20v[4], _GLF_SWITCH_0_21v;
            ;
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             continue;
            break;
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             return;
            case 38:
            float _GLF_SWITCH_2_0v[73];
            default:
            1;
           }
         }
         {
          switch(_GLF_SWITCH(0))
           {
            case 0:
            case 30:
            case 22:
            mat3x2 _GLF_SWITCH_0_22v, _GLF_SWITCH_0_23v;
            case 91:
            if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
             return;
            case 39:
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             return;
            case 37:
            uvec4 _GLF_SWITCH_0_24v[35], _GLF_SWITCH_0_25v, _GLF_SWITCH_0_26v;
            case 42:
            case 72:
            case 43:
            if(_GLF_DEAD(false))
             break;
            if(_GLF_DEAD(false))
             barrier();
            break;
            case 90:
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            uvec3(60864u, 111880u, 160961u);
            default:
            1;
           }
         }
         if(_GLF_DEAD(false))
          return;
        }
       else
        {
        }
       mat3x4 _GLF_SWITCH_0_27v, _GLF_SWITCH_0_28v, _GLF_SWITCH_0_29v[70];
       if(_GLF_DEAD(false))
        barrier();
       if(false)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (((0 ^ int(_GLF_ONE(1.0, injectionSwitch.y))) << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0)))); _injected_loop_counter ++)
            {
             barrier();
            }
          }
         do
          {
           for(           ldexp(uintBitsToFloat(uvec2(42746u, 73860u)), ivec2(78009, 92810));
 (mat3x2(-817.381, -3014.8500, -4493.0160, 0.6, -2.8, -584.015) != mat3x2(3.2, 6.1, 8.5, -4459.0569, 64.27, 89.63)); _GLF_SWITCH_0_28v)
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             ;
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               continue;
              }
             ((ivec3(84613, 25246, -79179) , mat2x4(7225.6978, 9.1, -6.5, 8.1, -77.58, 2.7, 3498.6038, -972.046)) / mat2x4(224.288, 7748.1005, _GLF_IDENTITY(7.7, min(7.7, _GLF_IDENTITY(7.7, (7.7) * cos(0.0)))), 5011.2653, -7038.9666, -73.40, 2.8, 4.9));
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
             mat2x4 _GLF_SWITCH_0_30v[15], _GLF_SWITCH_0_31v[13];
             ivec4 _GLF_SWITCH_0_32v[6], _GLF_SWITCH_0_33v, _GLF_SWITCH_0_34v;
             ((uvec3(171616u, 180767u, 94446u) & uvec3(100009u, 119612u, 65100u)) & 182789u);
             if(_GLF_DEAD(false))
              break;
             mat3 _GLF_SWITCH_0_35v[57], _GLF_SWITCH_0_36v[50], _GLF_SWITCH_0_37v;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(false))
                return;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             else
              {
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
         vec2 _GLF_SWITCH_0_38v, _GLF_SWITCH_0_39v[69];
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
           barrier();
          }
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
         ;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       while((mat3x2(925.752, -22.20, 13.83, -99.98, -962.727, -2313.1837) == mat3x2(-4052.5265, -5.1, -4891.9062, -9024.4782, -16.75, 55.90)))
        {
         mat3x2 _GLF_SWITCH_0_40v, _GLF_SWITCH_0_41v, _GLF_SWITCH_0_42v[89];
         if(_GLF_DEAD(false))
          barrier();
         while(equal(vec4(5.5, -61.68, 0.8, 721.705), vec4(_GLF_IDENTITY(7823.0649, max(_GLF_IDENTITY(7823.0649, (7823.0649) / 1.0), 7823.0649)), -6019.0455, -3.8, 81.74))[2])
          {
           false;
           if(_GLF_DEAD(false))
            barrier();
           mat4(-16.25, -267.880, 15.09, -80.95, -1.9, 5.2, 1654.3839, 7.5, -7.0, -51.03, -691.130, 5.3, 2.1, -4.9, -719.039, -6.9);
           bvec2(bvec4(true, false, true, true));
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))))))))
              barrier();
            }
           uvec4(194046u, 73854u, 71307u, 160411u);
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(false))
            barrier();
          }
         ;
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           do
            {
             if(_GLF_DEAD(false))
              barrier();
             for(bvec4 _GLF_SWITCH_0_43v[69], _GLF_SWITCH_0_44v, _GLF_SWITCH_0_45v[45]; (mat4x2(-8369.4935, 795.118, -5.0, 3428.3643, 72.25, -9020.0246, 366.500, 24.49) != mat4x2(-932.715, 0.4, 2.5, -7.5, -1.3, 6.3, _GLF_IDENTITY(5.3, mix(float(5.3), float(_GLF_FUZZED(5.1)), bool(false))), 0.8)); 67992)
              {
               true;
               uvec4(39381u, 33508u, 103078u, 171309u);
               5743.5332;
               mat4x2 _GLF_SWITCH_0_46v[85];
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
               if(_GLF_DEAD(false))
                barrier();
               clamp(-79665, 62171, 47788);
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          barrier();
         {
          bvec3 _GLF_SWITCH_0_47v, _GLF_SWITCH_0_48v;
          mat2 _GLF_SWITCH_0_49v[3], _GLF_SWITCH_0_50v;
          ;
          45298;
         }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         uvec2(158536u, 142520u);
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         while(all(bvec2(false, false)))
          {
           if((clamp(vec2(-5608.8818, -338.245), injectionSwitch, vec2(73.44, -63.85)) != vec2(-4.2, 6.5)))
            {
             bvec2 _GLF_SWITCH_0_51v, _GLF_SWITCH_0_52v, _GLF_SWITCH_0_53v;
             do
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (false))));
             vec4(-96.53, 1.6, -5415.1182, 0.8);
             58732;
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               continue;
              }
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
             ;
            }
           if(true)
            {
             mat3x4 _GLF_SWITCH_0_54v, _GLF_SWITCH_0_55v, _GLF_SWITCH_0_56v;
             true;
             mat4(mat3(-9127.8175, -6.7, -6.0, 58.79, -750.500, 68.84, 4.6, -369.916, 7661.5463));
             vec3 _GLF_SWITCH_0_57v[4], _GLF_SWITCH_0_58v, _GLF_SWITCH_0_59v[84];
            }
           for(uvec4 _GLF_SWITCH_0_60v; false; greaterThanEqual(uvec3(14038u, 147979u, 78778u), uvec3(_GLF_IDENTITY(191778u, (_GLF_IDENTITY(191778u, ~ (~ (191778u)))) / (1u & 1u)), 98898u, 146591u)))
            {
             (7.4 / mat3x2(5.4, 3956.2912, -2112.4323, 5.0, -883.486, -7.5));
             vec4 _GLF_SWITCH_0_61v, _GLF_SWITCH_0_62v[20], _GLF_SWITCH_0_63v[87];
             mat4 _GLF_SWITCH_0_64v, _GLF_SWITCH_0_65v, _GLF_SWITCH_0_66v;
             if(_GLF_DEAD(false))
              barrier();
            }
          }
        }
       else
        {
        }
       float _GLF_SWITCH_0_67v, _GLF_SWITCH_0_68v[81], _GLF_SWITCH_0_69v;
       mat2x4 _GLF_SWITCH_0_70v[6], _GLF_SWITCH_0_71v;
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       {
        if(_GLF_DEAD(false))
         {
          if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
           {
            barrier();
            if(_GLF_DEAD(false))
             continue;
           }
          else
           {
           }
          if(_GLF_DEAD(false))
           {
            if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
             {
              return;
             }
            else
             {
             }
           }
         }
        mat3(-778.748, -9205.7149, 17.38, _GLF_IDENTITY(5544.4153, (true ? 5544.4153 : _GLF_FUZZED(_GLF_SWITCH_0_67v))), 8581.2483, 5.6, -14.57, 3.1, 3142.3772);
        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
         return;
        if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
         barrier();
        if(_GLF_DEAD(false))
         break;
       }
      }
     case 0:
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
          }
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     case 4:
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     case 74:
     case 19:
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       barrier();
      }
     case 98:
     case 67:
     barrier();
     if(_GLF_DEAD(false))
      return;
     break;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     case 71:
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     (true ? mat4x2(-4.1, 8.4, _GLF_IDENTITY(4569.9208, (_GLF_IDENTITY(4569.9208, min(_GLF_IDENTITY(4569.9208, mix(float(_GLF_FUZZED(3.7)), float(4569.9208), bool(true))), 4569.9208))) - 0.0), 29.90, -772.531, 955.970, -5.8, -3579.6760) : mat4x2(mat4(4149.2512, 3.0, -8.7, 68.53, 569.441, -7.4, -8.0, -6.9, 4249.7638, 635.695, -55.94, 1880.7310, -693.895, -1681.9145, -294.475, -6.2)));
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     case 14:
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
        {
         case 0:
         case 4:
         if(_GLF_DEAD(false))
          return;
         case 37:
         case 95:
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          return;
         case 71:
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         case 33:
         if(_GLF_DEAD(false))
          barrier();
         case 78:
         if((mat2x4(828.804, 5535.2707, -66.67, 736.048, 227.396, 7.4, -5.2, 5.7) == (+ mat2x4(3268.9408, _GLF_IDENTITY(6.3, max(6.3, 6.3)), -26.86, 0.1, -0.0, -376.640, -9.9, -3.5))))
          {
           while((_GLF_IDENTITY(uvec2(84691u, 58808u) == (uvec2(95130u, 45401u) / 41577u), (uvec2(84691u, 58808u) == (uvec2(95130u, 45401u) / 41577u)) && true)))
            {
             (max(ivec3(63865, -74964, -17735), (ivec3(72638, -50582, -34678) % 61655)));
             if(_GLF_DEAD(false))
              continue;
             ;
             uvec3 _GLF_SWITCH_0_72v, _GLF_SWITCH_0_73v;
             ivec4(_GLF_IDENTITY(-70910, _GLF_IDENTITY(int(_GLF_IDENTITY(int(-70910), min(int(-70910), _GLF_IDENTITY(int(-70910), (false ? _GLF_FUZZED(-33200) : int(-70910)))))), 0 + (int(_GLF_IDENTITY(int(-70910), min(int(-70910), _GLF_IDENTITY(int(-70910), (false ? _GLF_FUZZED(-33200) : int(-70910))))))))), -49253, 80519, _GLF_IDENTITY(2539, max(_GLF_IDENTITY(2539, int(ivec2(2539, 0))), 2539)));
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               ;
               if(_GLF_DEAD(false))
                barrier();
              }
             do
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 bvec3(true, bvec2(true, true));
                }
               else
                {
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                barrier();
               break;
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                barrier();
               break;
              }
            }
           uint _GLF_SWITCH_0_74v, _GLF_SWITCH_0_75v[41], _GLF_SWITCH_0_76v;
           bitfieldInsert(uvec3(66721u, 161534u, 9119u), uvec3(146962u, 49178u, 150358u), 8991, -55428);
           if(_GLF_DEAD(false))
            barrier();
           while(true)
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             uint _GLF_SWITCH_0_77v;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(2), int(2)))); _injected_loop_counter --)
                {
                 barrier();
                }
              }
             (74115u + _GLF_SWITCH_0_74v);
             if(_GLF_DEAD(false))
              return;
             uvec4(_GLF_IDENTITY(85105u, (85105u) | 0u), 126043u, 90578u, 25166u);
             if(_GLF_DEAD(false))
              {
               do
                {
                 barrier();
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
              }
             -47144;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             matrixCompMult(mat2x4(-797.166, -473.231, _GLF_IDENTITY(-4.5, (_GLF_IDENTITY(-4.5, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-3241.5789) : -4.5))) / _GLF_IDENTITY(dot(vec2(0.0, _GLF_ONE(1.0, injectionSwitch.y)), vec2(abs(0.0), 1.0)), dot(vec2(0.0, _GLF_ONE(1.0, injectionSwitch.y)), vec2(abs(0.0), 1.0)))), -618.662, 0.5, -21.55, -61.09, -478.102), mat2x4(6.4, -7.0, 8.5, -28.58, 462.346, 657.312, 7022.7078, -7.7));
             if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (false))))
              {
              }
             else
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
              }
             for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
              {
               for(               uvec2(198580u, 135530u);
 false; mat2x4(vec4(895.892, 6863.3056, 7.4, -1.1), vec4(9.5, 5.8, 9413.3677, -24.76)))
                {
                 if(_GLF_DEAD(false))
                  break;
                }
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             uvec4 _GLF_SWITCH_0_78v;
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
            }
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           for(           mat2x3(-660.127, 386.586, -72.65, 25.70, -7441.9657, 3.3);
 false; notEqual(ivec4(17175, 16952, -18746, -70844), ivec4(-47730, -26116, -6168, -32252)))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(false)
              {
               if(_GLF_DEAD(false))
                break;
               ivec4 _GLF_SWITCH_0_79v, _GLF_SWITCH_0_80v[88], _GLF_SWITCH_0_81v;
               if(_GLF_DEAD(false))
                barrier();
               _GLF_SWITCH_0_74v;
               (9.3 + mat4x2(1801.3805, 70.74, 6512.3068, 6.4, -19.77, -44.60, -2326.1338, -8.4));
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               mat3x2 _GLF_SWITCH_0_82v, _GLF_SWITCH_0_83v, _GLF_SWITCH_0_84v;
               mat3x4(-755.592, -9.1, -95.55, -6.2, 7600.2257, -320.554, -77.64, 1868.1286, -239.486, 26.39, -82.58, 2.8);
               if(_GLF_DEAD(false))
                continue;
               if(_GLF_DEAD(false))
                barrier();
               mat2 _GLF_SWITCH_0_85v[77], _GLF_SWITCH_0_86v;
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 _GLF_SWITCH_0_86v;
                }
               else
                {
                 if(_GLF_DEAD(false))
                  break;
                }
              }
             else
              {
               if(_GLF_DEAD(false))
                barrier();
               (3175.0852 + mat2(-611.896, -6.5, 8.4, -2878.4558));
               uvec2 _GLF_SWITCH_0_87v, _GLF_SWITCH_0_88v, _GLF_SWITCH_0_89v;
               false;
               (mat4x3(_GLF_IDENTITY(3.2, (3.2) / 1.0), 0.1, -2.3, -38.30, 8229.9453, -7.1, -24.49, 1302.0831, 7.2, -3.9, 18.31, 5041.1602) * mat2x4(mat3x2(2.7, -0.7, -4407.8755, 36.33, 27.70, 8.5)));
               (_GLF_SWITCH_0_88v % 197355u);
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    return;
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     barrier();
                    }
                  }
                }
               mat2x4 _GLF_SWITCH_0_90v, _GLF_SWITCH_0_91v;
               if(_GLF_DEAD(false))
                break;
               if(_GLF_DEAD(false))
                barrier();
               ivec3 _GLF_SWITCH_0_92v, _GLF_SWITCH_0_93v[15];
              }
             ;
             for(             ivec2(-2570, -3013);
 (uvec2(112445u, 165114u) == uvec2(146482u, 164043u)); bvec4(true, bvec3(false, true, false)))
              {
               mat4(-8.9, 4472.4979, 0.5, -4.3, 21.19, -32.74, -30.89, -1.1, -3605.6362, 53.66, 46.63, _GLF_IDENTITY(-132.253, min(-132.253, -132.253)), -13.29, 185.244, 2.5, 7.9);
               do
                {
                 if(_GLF_DEAD(false))
                  return;
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
               atomicAdd(_GLF_SWITCH_0_74v, _GLF_SWITCH_0_74v);
               ;
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 ;
                }
               else
                {
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             mat3x2(vec2(-9977.2061, 542.851), vec2(-8.1, 5.7), injectionSwitch);
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             bvec3(true, true, false);
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   barrier();
                  }
                }
               if((4.3 > 5.4))
                {
                 vec4 _GLF_SWITCH_0_94v;
                }
               else
                {
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, (0) >> 0)))); _injected_loop_counter --)
                  {
                   switch(_GLF_SWITCH((_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), clamp(~ (0), ~ (0), _GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))))))) >> _GLF_IDENTITY(int(5), int(5)))))
                    {
                     case 0:
                     if(_GLF_DEAD(false))
                      return;
                     case 43:
                     case 72:
                     case 92:
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     if(_GLF_DEAD(false))
                      continue;
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + sqrt(0.0)))))))))
                      {
                       for(int _injected_loop_counter = ((0 ^ 0) & -76677); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                        {
                         barrier();
                        }
                      }
                     break;
                     case 7:
                     ivec4(ivec2(-87188, 36776), ivec2(24076, 83060));
                     default:
                     1;
                    }
                  }
                 uvec2 _GLF_SWITCH_0_95v;
                 mat4x2 _GLF_SWITCH_0_96v[32], _GLF_SWITCH_0_97v, _GLF_SWITCH_0_98v[50];
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     switch(_GLF_SWITCH(0))
                      {
                       case 67:
                       if(_GLF_DEAD(false))
                        return;
                       uvec3(196769u, 25988u, _GLF_IDENTITY(52423u, (52423u) | (52423u)));
                       case 0:
                       case 56:
                       case 21:
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                       case 96:
                       return;
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                       break;
                       default:
                       1;
                      }
                    }
                   if(_GLF_DEAD(false))
                    return;
                  }
                 for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(0), int(0))); _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, (1) | (1))); _injected_loop_counter ++)
                  {
                   (mat2(2192.1776, -75.65, -550.640, -6.5) - mat2(-91.96, 539.345, 773.911, -0.4));
                  }
                 (ivec3(-67123, -72878, 65292) | 33152);
                 mat3x2(2.7, -8210.4712, 593.949, 8.9, -648.142, -4.5);
                 if(_GLF_DEAD(false))
                  return;
                 for(int _injected_loop_counter = (int(_GLF_ONE(1.0, injectionSwitch.y)) | 1); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0))))), ! (! (bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0))))))))), bool(bvec4(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), ! (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter)) > 0))))), ! (! (bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0))))))))), true, false, true)))); _injected_loop_counter --)
                  {
                   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                    barrier();
                   not(bvec2(false, false));
                  }
                 for(int _injected_loop_counter = (int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                  {
                   if(_GLF_DEAD(false))
                    return;
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                }
              }
            }
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            return;
           ;
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             for(             matrixCompMult(mat2x3(-531.995, -6.5, 3.0, -4848.1811, -422.398, 582.868), mat2x3(-3.6, -630.815, 427.577, _GLF_IDENTITY(3735.0955, max(3735.0955, _GLF_IDENTITY(3735.0955, float(mat2(3735.0955, 1.0, 1.0, 0.0))))), -737.510, -20.69));
 bool(-61.93); greaterThanEqual((bitfieldExtract(100265u, -3898, 65716) ^ uvec4(167682u, 165505u, 43534u, _GLF_IDENTITY(10961u, 0u | (_GLF_IDENTITY(10961u, clamp(10961u, 10961u, 10961u)))))), uvec4(143638u, 21095u, 45555u, 40759u)))
              {
               injectionSwitch;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               uvec4 _GLF_SWITCH_0_99v[91], _GLF_SWITCH_0_100v;
               do
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  continue;
                 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
                  barrier();
                 mat4(4.6, -2382.2867, 4.3, -2.5, -6.7, 399.911, -8.2, -5.7, 510.223, 8.0, _GLF_IDENTITY(637.780, (false ? _GLF_FUZZED(-7.2) : 637.780)), 150.451, 80.18, -2.6, 7.7, 2943.5965);
                }
               while((25484u >= 60695u));
               if(_GLF_DEAD(false))
                break;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
               ivec2(29923, -57233);
               while(false)
                {
                }
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
                  barrier();
                }
               {
                if(_GLF_WRAPPED_IF_TRUE(true))
                 {
                  ;
                 }
                else
                 {
                  if(_GLF_DEAD(false))
                   barrier();
                 }
                mat4x3(944.246, -306.011, 8304.3928, -75.43, -33.03, -470.846, 5559.1880, -6.8, -8606.9108, 23.49, 3544.9035, -7366.5347);
                mat2x3(mat3(1.4, -87.24, 6015.1515, _GLF_IDENTITY(-4.9, (true ? -4.9 : _GLF_FUZZED(mix(8.8, 969.704, 9.4)))), -7.0, 8.8, 24.96, -913.905, -1.1));
                if(_GLF_DEAD(false))
                 return;
                mat4 _GLF_SWITCH_0_101v, _GLF_SWITCH_0_102v, _GLF_SWITCH_0_103v;
                bvec3(true, true, true);
                if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))))))))
                 {
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   barrier();
                  if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                   {
                    barrier();
                   }
                  else
                   {
                    if(_GLF_DEAD(false))
                     {
                      if(_GLF_WRAPPED_IF_TRUE(true))
                       {
                        barrier();
                       }
                      else
                       {
                       }
                     }
                   }
                 }
                mat3x2 _GLF_SWITCH_0_104v, _GLF_SWITCH_0_105v, _GLF_SWITCH_0_106v;
                if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
                 break;
                mat2x3 _GLF_SWITCH_0_107v, _GLF_SWITCH_0_108v;
                mat2x3 _GLF_SWITCH_0_109v[17], _GLF_SWITCH_0_110v;
                if(_GLF_DEAD(false))
                 break;
               }
               do
                {
                 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
                  barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
               ivec2 _GLF_SWITCH_0_111v, _GLF_SWITCH_0_112v, _GLF_SWITCH_0_113v[44];
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                break;
               if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                barrier();
               if(false)
                {
                 do
                  {
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     barrier();
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                 mat4x2 _GLF_SWITCH_0_114v[11];
                 if(_GLF_DEAD(false))
                  return;
                 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     barrier();
                    }
                  }
                 bool _GLF_SWITCH_0_115v, _GLF_SWITCH_0_116v[35];
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  continue;
                 int _GLF_SWITCH_0_117v[86];
                 mat3x4(-0.2, 845.146, 9151.7116, -2273.1471, 5.7, 8.1, -7.7, -6.6, 218.004, -7700.2202, -8.0, -76.03);
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  return;
                 mat2 _GLF_SWITCH_0_118v;
                 (mat2x4(5.9, 4.6, 7.7, 5281.8692, -6504.9954, -1.5, -2.6, 18.16) * mat4x2(0.1, 824.944, 83.69, 8.8, 47.76, 3.8, -309.501, -529.902));
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    continue;
                   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                    barrier();
                   for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), 0 + (int(0))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 & 96749)); _injected_loop_counter --)
                    {
                     barrier();
                    }
                  }
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                      {
                       ;
                       if(_GLF_DEAD(false))
                        barrier();
                      }
                    }
                  }
                 else
                  {
                  }
                 if(_GLF_DEAD(false))
                  break;
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       barrier();
                      }
                     else
                      {
                      }
                    }
                   barrier();
                  }
                }
               else
                {
                 mat2x3 _GLF_SWITCH_0_119v;
                 if(_GLF_DEAD(false))
                  break;
                 mat2(587.312, 7.3, -2.6, _GLF_IDENTITY(-7.8, (-7.8) + 0.0));
                 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                  barrier();
                 uvec4 _GLF_SWITCH_0_120v[57], _GLF_SWITCH_0_121v[91], _GLF_SWITCH_0_122v;
                }
               if(_GLF_DEAD(false))
                barrier();
               equal(vec4(-32.91, -612.323, 53.75, -5.1), vec4(-8.2, -14.69, -4.2, 2.5));
              }
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           if(_GLF_DEAD(false))
            return;
           {
            for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 ^ 0)); _injected_loop_counter ++)
             {
              for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), ~ (~ (int(4))))))); _injected_loop_counter --)
               {
                if(_GLF_WRAPPED_IF_TRUE(true))
                 {
                  if(_GLF_DEAD(false))
                   barrier();
                  if(_GLF_DEAD(false))
                   barrier();
                 }
                else
                 {
                 }
               }
             }
           }
           if(_GLF_DEAD(false))
            return;
           137861u;
           mat4x2(6.1, 2.9, -1843.8936, 280.835, 297.271, 0.5, 1.4, -1.1);
           if((mat2x3(-1.1, -0.1, 3432.9269, 8.8, -337.744, -77.28) != (- (false ? mat2x3(99.19, -648.798, 8.6, 612.598, -393.022, 935.378) : mat2x3(681.663, -45.37, 5.2, -3.0, -120.755, -0.7)))))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               uvec4(20632u, 25794u, 98079u, 109816u);
               if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
                barrier();
              }
             do
              {
               if(_GLF_DEAD(false))
                {
                 do
                  {
                   return;
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
             do
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > 0, false || (_injected_loop_counter > 0))); _injected_loop_counter --)
                  {
                   barrier();
                  }
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
             vec3(0.5, -7.9, 59.91);
             mat2x3 _GLF_SWITCH_0_123v[30], _GLF_SWITCH_0_124v;
             if(_GLF_DEAD(false))
              return;
             ;
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
             {
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               return;
              (mat4x2(-3368.9299, 78.88, -7.5, 3052.4042, -9.9, 2228.9901, 2.5, 9.9) * mat3x4(_GLF_IDENTITY(-6.9, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? -6.9 : _GLF_FUZZED(-91.75))), -795.123, 7.0, 9.9, -8.5, 7.9, -5737.7630, 5331.0489, -0.9, 4417.8635, -999.225, -4936.9064));
             }
            }
           for(           bvec2(false, true);
 true; (false ? bvec4(true, true, false, true) : bvec4(false, true, false, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false))))))
            {
            }
          }
         break;
         case 3:
         uvec3(138976u, 108737u, 11840u);
         case 54:
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               barrier();
              }
            }
           return;
          }
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 & -89708)); _injected_loop_counter --)
          {
           mat4x2(-86.82, -8.9, 40.94, 84.84, 8741.3421, _GLF_IDENTITY(-9.8, 0.0 + (_GLF_IDENTITY(-9.8, (-9.8) - sqrt(0.0)))), -9.9, 74.41);
          }
         default:
         1;
        }
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
      return;
     default:
     1;
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) * ((1u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), min(uint(4u), uint(4u))))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (false ? _GLF_FUZZED(subgroup_id) : uint(4u))))));
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + 1)))) - 0u))) % subgroup_size), ~ (~ (workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + 1)))) - 0u))) % subgroup_size))));
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[virtual_gid], _GLF_IDENTITY(uint(1), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? uint(1) : _GLF_FUZZED(((137504u % num_workgroup) + subgroup_id)))), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))
  {
   if(_GLF_DEAD(false))
    return;
   for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   do
    {
     switch(_GLF_SWITCH(0))
      {
       case 79:
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         (mat2x3(34.05, 5.5, 60.90, _GLF_IDENTITY(-1.2, 1.0 * (-1.2)), -7.7, 1.9) + 9.7)[1];
        }
       else
        {
        }
       case 90:
       if(_GLF_DEAD(false))
        barrier();
       for(ivec2 _GLF_SWITCH_1_0v[81]; false; true)
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec3(true, true, true)))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           ;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             continue;
            }
          }
         else
          {
          }
         vec2 _GLF_SWITCH_1_1v;
         if(true)
          {
           if(_GLF_DEAD(false))
            barrier();
           ;
           subgroup_local_id;
           mat4 _GLF_SWITCH_1_2v, _GLF_SWITCH_1_3v;
          }
         else
          {
           for(           (mat4x3(-32.14, -9.2, 45.57, 97.89, 668.685, 5.5, 4.3, -86.39, 815.722, -6160.1421, 692.541, -3.6));
 (false ? false : false); mat2x3(7.8, -3248.3542, -388.366, -51.81, -16.86, -8.0))
            {
             mat4x3 _GLF_SWITCH_1_4v, _GLF_SWITCH_1_5v[36], _GLF_SWITCH_1_6v;
             ivec2(56023, 71023);
             outerProduct(_GLF_SWITCH_1_1v, vec3(2.8, 45.89, -798.034));
             if(_GLF_DEAD(false))
              return;
             uvec2(199134u, 161805u);
             mat4x2(8.7, 3.5, -9.0, -3452.9819, -6118.0411, -8.3, -1.1, -1.1);
             -16677;
            }
           if(_GLF_DEAD(false))
            break;
           uvec3(uvec2(next_virtual_gid, subgroup_id), 137100u);
           mat4x3 _GLF_SWITCH_1_7v, _GLF_SWITCH_1_8v, _GLF_SWITCH_1_9v[28];
           {
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             continue;
            ivec3 _GLF_SWITCH_1_10v, _GLF_SWITCH_1_11v;
            mat4x2 _GLF_SWITCH_1_12v, _GLF_SWITCH_1_13v, _GLF_SWITCH_1_14v;
           }
           matrixCompMult(mat3x2(-9.6, -3100.0279, 4833.8230, 2.9, -381.833, 34.18), mat3x2(-76.40, -911.139, 7.8, -86.79, 326.061, 705.238));
           false;
           mat4x3 _GLF_SWITCH_1_15v[87], _GLF_SWITCH_1_16v, _GLF_SWITCH_1_17v;
          }
         floor((vec3(34.67, -7503.7721, -678.912)));
         while(false)
          {
          }
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       case 0:
       case 4:
       case 76:
       if(_GLF_DEAD(false))
        return;
       for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 & (92969 / -42944))); _injected_loop_counter --)
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
          }
        }
       break;
       case 86:
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           barrier();
          }
        }
       do
        {
         for(mat2x4 _GLF_SWITCH_1_18v; false; mat3x2(-54.58, 9892.1996, 4.4, 9.4, 4.6, 4.3))
          {
           {
            if(_GLF_WRAPPED_IF_TRUE(true))
             {
              for(bvec4 _GLF_SWITCH_1_19v[82], _GLF_SWITCH_1_20v[74]; (mat2x4(_GLF_IDENTITY(0.4, float(_GLF_IDENTITY(mat4(0.4, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0, 0.0, 0.0, sqrt(0.0)), transpose(transpose(mat4(0.4, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0, 0.0, 0.0, sqrt(0.0))))))), -87.52, 54.10, 6.8, 1.0, 2.3, 4.8, -1.8) == mat2x4(0.9, -67.61, 880.362, 7377.7063, -747.452, 918.480, 8.9, -5748.5479)); uvec4(163050u, 115866u, 48779u, 32539u))
               {
                bvec2(true, false);
                -6.4;
                mat4x2(-9102.8170, 317.325, 45.46, -8695.9240, -23.54, 2575.7813, -61.81, -1.3);
                ;
                uvec2 _GLF_SWITCH_1_21v, _GLF_SWITCH_1_22v, _GLF_SWITCH_1_23v;
                if(_GLF_DEAD(false))
                 return;
                ivec2(79471, 5479);
                vec3 _GLF_SWITCH_1_24v, _GLF_SWITCH_1_25v[16];
               }
             }
            else
             {
             }
            mat3x4 _GLF_SWITCH_1_26v, _GLF_SWITCH_1_27v[58];
            if(_GLF_DEAD(false))
             continue;
            mat4 _GLF_SWITCH_1_28v, _GLF_SWITCH_1_29v, _GLF_SWITCH_1_30v[59];
            injectionSwitch;
            if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
             barrier();
            {
             ;
             if(_GLF_DEAD(false))
              barrier();
             mat2 _GLF_SWITCH_1_31v, _GLF_SWITCH_1_32v, _GLF_SWITCH_1_33v[52];
             for(int _injected_loop_counter = (1 ^ (0 | 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
              {
               workgroup_size;
              }
             bvec3 _GLF_SWITCH_1_34v[26], _GLF_SWITCH_1_35v;
             uvec2 _GLF_SWITCH_1_36v, _GLF_SWITCH_1_37v[39], _GLF_SWITCH_1_38v;
             if(_GLF_DEAD(false))
              break;
             ;
             mat2x3 _GLF_SWITCH_1_39v, _GLF_SWITCH_1_40v;
             ivec4 _GLF_SWITCH_1_41v;
             mat4x3(4854.9187, -85.38, -7.8, -3558.7518, 2838.6391, 306.999, 97.29, 993.931, 559.923, 25.21, 8.0, 838.936);
            }
            inverse((true ? mat2(-5.7, -9.1, 3397.4900, 7151.3149) : mat2(-3.1, 6006.5562, -41.05, 162.781)));
            if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
             {
              if(_GLF_DEAD(false))
               barrier();
              if(_GLF_WRAPPED_IF_FALSE(false))
               {
               }
              else
               {
                bvec3(bvec2(false, true), bool(80545u));
               }
              mat3x2(_GLF_SWITCH_1_26v);
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
              if(_GLF_WRAPPED_IF_TRUE(true))
               {
                ;
               }
              else
               {
               }
             }
            else
             {
              if(_GLF_DEAD(false))
               barrier();
             }
            mat4x2 _GLF_SWITCH_1_42v[12];
            injectionSwitch;
           }
           for(mat4x3 _GLF_SWITCH_1_43v[92], _GLF_SWITCH_1_44v; false; (uvec3(113578u, 159670u, 139u) == uvec3(97295u, 78414u, 38763u)))
            {
             if(_GLF_DEAD(false))
              barrier();
             for(bvec4 _GLF_SWITCH_1_45v[61], _GLF_SWITCH_1_46v[4]; true; lessThan(ivec3(-65159, -51406, 13905), ivec3(-26847, 233, 7815)))
              {
               if(_GLF_DEAD(false))
                barrier();
               mat3x2 _GLF_SWITCH_1_47v, _GLF_SWITCH_1_48v[41], _GLF_SWITCH_1_49v;
               uvec3 _GLF_SWITCH_1_50v, _GLF_SWITCH_1_51v;
               bvec2 _GLF_SWITCH_1_52v;
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(8), int(8)))); _injected_loop_counter --)
                {
                 mat2(-3.3, -9.1, -9072.9749, -4.9);
                }
               vec3 _GLF_SWITCH_1_53v[80], _GLF_SWITCH_1_54v, _GLF_SWITCH_1_55v;
              }
             mat2(-91.88, -56.28, -573.480, 2.7);
             if(_GLF_DEAD(false))
              barrier();
             for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(2), int(2)))); _injected_loop_counter --)
              {
               vec4(3.5, -6.2, 443.133, -506.891);
              }
             ivec4 _GLF_SWITCH_1_56v, _GLF_SWITCH_1_57v;
             uvec4(workgroup_size, (uvec2(144033u, 108726u) % uvec2(87305u, 114993u)), (next_virtual_gid | next_virtual_gid));
             if((bvec4(false, false, false, true) == bvec4(false, true, true, false)))
              {
               uvec3 _GLF_SWITCH_1_58v;
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                {
                 do
                  {
                   mat4x2(mat2x3(-4765.7127, 44.29, 1886.0990, 2.7, -5265.1462, -4530.3959));
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                }
               if(_GLF_DEAD(false))
                barrier();
               mat3x4(-85.15, 0.4, 5.8, 4.4, 6.5, 6.7, -8.6, -9907.5608, -2.9, 7.9, -1.8, -432.778);
               (mat2x4(-299.061, 740.290, -884.967, 8.1, _GLF_IDENTITY(-34.69, (-34.69) * 1.0), 92.93, 4197.0160, -29.18) , mat2x3(3.1, -2.2, 6085.2828, 15.00, -2.2, 5.8));
               (false ? mat2(6.9, 9110.9111, 33.56, -51.24) : mat2(17.64, 1.1, 9569.4428, 1.9));
              }
            }
           bvec2 _GLF_SWITCH_1_59v[70], _GLF_SWITCH_1_60v;
           if(_GLF_DEAD(false))
            barrier();
           uvec2(64726u, 189199u);
           ivec2 _GLF_SWITCH_1_61v, _GLF_SWITCH_1_62v[35];
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
       case 58:
       mat3x2 _GLF_SWITCH_1_63v[60];
       default:
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       1;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    return;
  }
 if(subgroup_local_id + 1 < subgroup_size)
  {
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         return;
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - 0) != 0); _injected_loop_counter --)
        {
         barrier();
        }
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   subgroupAll(false);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   do
    {
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec2(_GLF_WRAPPED_IF_FALSE(false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y)))))) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(bvec2(true, false))))), (bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(bvec2(true, false)))))) && true)), bool(bvec3((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec2(_GLF_WRAPPED_IF_FALSE(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true, true, true)))))
      {
       if(_GLF_DEAD(false))
        continue;
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       if(_GLF_DEAD(false))
        {
         do
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
         break;
        }
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       atomicStore(buf[next_virtual_gid], uint(2), 4, _GLF_IDENTITY(64, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(64, (64) >> 0))), int(int(~ (~ (_GLF_IDENTITY(64, (64) >> 0))))))), 4);
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    barrier();
   subgroupAll(true);
   if(_GLF_DEAD(false))
    barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
