#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_9 {
 uint _f0;
 mat2 _f1;
 uvec2 _f2;
 ivec4 _f3;
 mat4x3 _f4;
} ;

struct _GLF_struct_8 {
 mat2x4 _f0;
} ;

struct _GLF_struct_10 {
 _GLF_struct_8 _f0;
 _GLF_struct_9 _f1;
} ;

struct _GLF_struct_6 {
 mat3 _f0;
 ivec4 _f1;
} ;

struct _GLF_struct_5 {
 mat4 _f0;
 float _f1;
 int _f2;
} ;

struct _GLF_struct_7 {
 _GLF_struct_5 _f0;
 _GLF_struct_6 _f1;
 uvec4 _f2;
 mat3x2 _f3;
 bool _f4;
} ;

struct _GLF_struct_11 {
 uint workgroup_size;
 _GLF_struct_7 _f0;
 mat4x3 _f1;
 vec4 _f2;
 _GLF_struct_10 _f3;
 ivec2 _f4;
} ;

struct _GLF_struct_2 {
 float _f0;
} ;

struct _GLF_struct_1 {
 mat3 _f0;
 uvec2 _f1;
 vec3 _f2;
 vec3 _f3;
 uvec4 _f4;
 vec4 _f5;
} ;

struct _GLF_struct_3 {
 _GLF_struct_1 _f0;
 _GLF_struct_2 _f1;
 uint num_workgroup;
} ;

struct _GLF_struct_0 {
 ivec3 _f0;
 mat4x3 _f1;
 uvec4 _f2;
 int _f3;
} ;

struct _GLF_struct_4 {
 _GLF_struct_0 _f0;
 _GLF_struct_3 _f1;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 _GLF_struct_4 _GLF_struct_replacement_4 = _GLF_struct_4(_GLF_struct_0(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), 0 | (_GLF_IDENTITY(clamp(1, 1, 1), min(clamp(1, 1, 1), clamp(1, 1, 1))))))), ivec3(0, 0, 0) ^ (ivec3(_GLF_IDENTITY(1, clamp(1, 1, 1))))), ivec3(0, 0, 0) + (ivec3(1))), mat4x3(1.0), uvec4(_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec4(1u, 0u, _GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, min(1u, 1u)) : _GLF_FUZZED(packHalf2x16(injectionSwitch)))), 0u), (uvec4(1u, 0u, 1u, 0u)) | uvec4(0u, 0u, _GLF_IDENTITY(0u, 0u | (0u)), _GLF_IDENTITY(0u, (0u) | (0u & 165258u))))))), 1), _GLF_struct_3(_GLF_struct_1(mat3(1.0), uvec2(_GLF_IDENTITY(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_size) : 1u)), uint(_GLF_ONE(_GLF_IDENTITY(1.0, (1.0) * 1.0), injectionSwitch.y)) * _GLF_IDENTITY((1u), min(_GLF_IDENTITY((1u), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2((1u), 1u), (uvec2((1u), 1u)) >> uvec2(0u, 0u)), clamp(_GLF_IDENTITY(uvec2((1u), 1u), (uvec2(_GLF_IDENTITY((1u), ((1u)) - 0u), 1u)) >> uvec2(0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(uvec2((1u), 1u), (uvec2((1u), 1u)) >> uvec2(0u, 0u)), uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(_GLF_IDENTITY(uvec2((1u), 1u), (uvec2((1u), 1u)) >> uvec2(_GLF_IDENTITY(0u, (0u) << (0u >> _GLF_IDENTITY(uint(7u), uint(7u)))), 0u)), (_GLF_IDENTITY(uvec2((1u), 1u), (uvec2((1u), 1u)) >> uvec2(0u, 0u))) - uvec2(0u, 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(uvec2((1u), 1u), (uvec2((1u), 1u)) >> uvec2(0u, 0u)), uvec2(0u, 0u) | (_GLF_IDENTITY(uvec2((1u), 1u), (uvec2((1u), 1u)) >> uvec2(0u, 0u)))))))), (1u))))), vec3(1.0), vec3(1.0), uvec4(1u), vec4(1.0)), _GLF_struct_2(1.0), _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)).x));
 _GLF_struct_11 _GLF_struct_replacement_11 = _GLF_struct_11(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) >> (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(3u), uvec3(3u)))).x, uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) >> (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(3u), uvec3(3u)))).x, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) >> (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(3u), uvec3(3u)))).x)), 0u ^ (uint(uint(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) >> (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(3u), uvec3(3u)))).x))))), 1u, 0u, 1u))), min(gl_WorkGroupSize.x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])).x, max(_GLF_IDENTITY(gl_WorkGroupSize, (uvec3(124415u, _GLF_IDENTITY(43163u, 0u | _GLF_IDENTITY((43163u), clamp((43163u), (43163u), _GLF_IDENTITY((43163u), ((43163u)) | ((43163u)))))), 76654u) & uvec3(0u, 0u, 0u)) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)), _GLF_IDENTITY((gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u), max((gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u), (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), clamp((_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize), (true ? _GLF_IDENTITY((gl_WorkGroupSize), (_GLF_IDENTITY((gl_WorkGroupSize), uvec3(uvec3((gl_WorkGroupSize))))) + uvec3(0u, 0u, 0u)) : _GLF_FUZZED(uvec3(132572u, 189837u, 174380u)))) ^ uvec3(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) ^ 0u), _GLF_IDENTITY(0u, max(0u, 0u)))), 0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id))) : 0u))))), (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) / 1u)))), (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)))))), ((_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), clamp((_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize), (true ? _GLF_IDENTITY((gl_WorkGroupSize), (_GLF_IDENTITY((gl_WorkGroupSize), uvec3(uvec3((gl_WorkGroupSize))))) + uvec3(0u, 0u, 0u)) : _GLF_FUZZED(uvec3(132572u, 189837u, 174380u)))) ^ uvec3(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) ^ 0u), _GLF_IDENTITY(0u, max(0u, 0u)))), 0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id))) : 0u))))), (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) / 1u)))), (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))))))) | uvec3(0u, 0u, 0u)) - uvec3(0u, 0u, _GLF_IDENTITY(0u, uint(uvec3(0u, 0u, 0u)))))).x, _GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u)), max(~ (gl_WorkGroupSize), ~ (gl_WorkGroupSize)))))) >> uvec3(0u, 0u, 0u)).x)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) >> (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(3u), uvec3(3u)), (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(3u), uvec3(3u))) >> uvec3(0u, 0u, 0u)), min(_GLF_IDENTITY(uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(3u), uvec3(3u)), (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(3u), uvec3(3u))) >> uvec3(0u, 0u, 0u)), _GLF_IDENTITY(uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(3u), uvec3(3u)), (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(3u), uvec3(3u))) >> uvec3(0u, 0u, 0u))))), _GLF_IDENTITY(((gl_WorkGroupSize) >> (_GLF_IDENTITY(uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(3u), uvec3(3u)), (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(3u), uvec3(3u))) >> uvec3(0u, 0u, 0u)))) | uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), ((_GLF_IDENTITY((gl_WorkGroupSize), min((gl_WorkGroupSize), _GLF_IDENTITY((gl_WorkGroupSize), uvec3(uvec3((gl_WorkGroupSize)))))) >> (_GLF_IDENTITY(uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(3u), uvec3(3u)), (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(3u), uvec3(3u))) >> uvec3(0u, 0u, 0u)))) | uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) | (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))))).x, uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize))) >> (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(3u), uvec3(3u)))).x, uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)), uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u))[2])), (gl_WorkGroupSize) >> (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) ^ uvec3(0u, 0u, 0u)) >> _GLF_IDENTITY(uvec3(3u), uvec3(3u)), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) ^ uvec3(0u, 0u, 0u)) >> _GLF_IDENTITY(uvec3(3u), uvec3(3u)), (true ? _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) ^ uvec3(0u, 0u, 0u)) >> _GLF_IDENTITY(uvec3(3u), uvec3(3u)) : _GLF_FUZZED(uvec3(180503u, 197634u, 93502u))))) * uvec3(1u, 1u, 1u)))).x))), _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, min(1u, 1u)))), 0u, 1u))), min(gl_WorkGroupSize.x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])).x, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)), _GLF_IDENTITY((uvec3(124415u, 43163u, 76654u) & uvec3(0u, 0u, 0u)) | _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)), max(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))))))), (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize), ((gl_WorkGroupSize)) >> uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) ^ uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(0u), uvec3(0u))) >> _GLF_IDENTITY(uvec3(0u), uvec3(0u))) * (gl_WorkGroupSize)), (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)))))) - uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) | ((uvec3(124415u, 43163u, 76654u) & uvec3(0u, 0u, 0u)) | _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)), max(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))))))), (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize), ((gl_WorkGroupSize)) >> uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) ^ uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(0u), uvec3(0u))) >> _GLF_IDENTITY(uvec3(0u), uvec3(0u))) * (gl_WorkGroupSize)), (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)))))) - uvec3(0u, 0u, 0u))))).x, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((uvec3(124415u, 43163u, 76654u) & uvec3(0u, 0u, 0u)), uvec3(_GLF_IDENTITY(uvec3((uvec3(124415u, 43163u, 76654u) & uvec3(0u, 0u, 0u))), (uvec3((uvec3(124415u, 43163u, 76654u) & uvec3(0u, 0u, 0u)))) << (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u))))) | _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize), ((gl_WorkGroupSize)) - uvec3(0u, 0u, 0u)) ^ uvec3(0u, 0u, 0u))), clamp((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize), ((gl_WorkGroupSize)) >> uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x), _GLF_ZERO(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), injectionSwitch.x))) ^ uvec3(_GLF_IDENTITY(0u, 0u + (0u)), 0u, 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : 0u))) * uint(_GLF_ONE(1.0, injectionSwitch.y)))), uvec3(0u))) >> _GLF_IDENTITY(uvec3(0u), uvec3(0u))) * (gl_WorkGroupSize)), (gl_WorkGroupSize) ^ uvec3(0u, 0u, _GLF_IDENTITY(0u, min(0u, 0u)))))))) - uvec3(0u, 0u, 0u))).x, uint(uvec4(_GLF_IDENTITY(gl_WorkGroupSize, (uvec3(124415u, 43163u, 76654u) & uvec3(0u, 0u, 0u)) | _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), clamp((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize), ((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u)), ((uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))) >> uvec3(0u, 0u, 0u)) ^ (gl_WorkGroupSize)), (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u)), ((uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))) >> uvec3(0u, 0u, 0u)) ^ (gl_WorkGroupSize))) - uvec3(0u, 0u, 0u)))) >> uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(mat2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(3022.0562))), 1.0)))))) ^ uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(0u), uvec3(0u))) >> _GLF_IDENTITY(uvec3(0u), uvec3(0u))) * (gl_WorkGroupSize)), (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)))))) - uvec3(_GLF_IDENTITY(0u, uint(uint(0u))), 0u, 0u))).x, 0u, 0u, 0u))))), min(uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((uvec3(124415u, 43163u, 76654u) & uvec3(0u, 0u, 0u)), uvec3(_GLF_IDENTITY(uvec3((uvec3(124415u, 43163u, 76654u) & uvec3(0u, 0u, 0u))), (uvec3((uvec3(124415u, 43163u, 76654u) & uvec3(0u, 0u, 0u)))) << (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u))))) | _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize), ((gl_WorkGroupSize)) - uvec3(0u, 0u, 0u)) ^ uvec3(0u, 0u, 0u))), clamp((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize), ((gl_WorkGroupSize)) >> uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x), _GLF_ZERO(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), injectionSwitch.x))) ^ uvec3(_GLF_IDENTITY(0u, 0u + (0u)), 0u, 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : 0u))) * uint(_GLF_ONE(1.0, injectionSwitch.y)))), uvec3(0u))) >> _GLF_IDENTITY(uvec3(0u), uvec3(0u))) * (gl_WorkGroupSize)), (gl_WorkGroupSize) ^ uvec3(0u, 0u, _GLF_IDENTITY(0u, min(0u, 0u)))))))) - uvec3(0u, 0u, 0u))).x, uint(uvec4(_GLF_IDENTITY(gl_WorkGroupSize, (uvec3(124415u, 43163u, 76654u) & uvec3(0u, 0u, 0u)) | _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), clamp((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize), ((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u)), ((uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))) >> uvec3(0u, 0u, 0u)) ^ (gl_WorkGroupSize)), (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u)), ((uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))) >> uvec3(0u, 0u, 0u)) ^ (gl_WorkGroupSize))) - uvec3(0u, 0u, 0u)))) >> uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(mat2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(3022.0562))), 1.0)))))) ^ uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(0u), uvec3(0u))) >> _GLF_IDENTITY(uvec3(0u), uvec3(0u))) * (gl_WorkGroupSize)), (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)))))) - uvec3(_GLF_IDENTITY(0u, uint(uint(0u))), 0u, 0u))).x, 0u, 0u, 0u))))), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((uvec3(124415u, 43163u, 76654u) & uvec3(0u, 0u, 0u)), uvec3(_GLF_IDENTITY(uvec3((uvec3(124415u, 43163u, 76654u) & uvec3(0u, 0u, 0u))), (uvec3((uvec3(124415u, 43163u, 76654u) & uvec3(0u, 0u, 0u)))) << (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u))))) | _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize), ((gl_WorkGroupSize)) - uvec3(0u, 0u, 0u)) ^ uvec3(0u, 0u, 0u))), clamp((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize), ((gl_WorkGroupSize)) >> uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x), _GLF_ZERO(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), injectionSwitch.x))) ^ uvec3(_GLF_IDENTITY(0u, 0u + (0u)), 0u, 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : 0u))) * uint(_GLF_ONE(1.0, injectionSwitch.y)))), uvec3(0u))) >> _GLF_IDENTITY(uvec3(0u), uvec3(0u))) * (gl_WorkGroupSize)), (gl_WorkGroupSize) ^ uvec3(0u, 0u, _GLF_IDENTITY(0u, min(0u, 0u)))))))) - uvec3(0u, 0u, 0u))).x, uint(uvec4(_GLF_IDENTITY(gl_WorkGroupSize, (uvec3(124415u, 43163u, 76654u) & uvec3(0u, 0u, 0u)) | _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), clamp((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize), ((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u)), ((uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))) >> uvec3(0u, 0u, 0u)) ^ (gl_WorkGroupSize)), (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u)), ((uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))) >> uvec3(0u, 0u, 0u)) ^ (gl_WorkGroupSize))) - uvec3(0u, 0u, 0u)))) >> uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(mat2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(3022.0562))), 1.0)))))) ^ uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(0u), uvec3(0u))) >> _GLF_IDENTITY(uvec3(0u), uvec3(0u))) * (gl_WorkGroupSize)), (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)))))) - uvec3(_GLF_IDENTITY(0u, uint(uint(0u))), 0u, 0u))).x, 0u, 0u, 0u)))))))), gl_WorkGroupSize.x))))) >> 0u), _GLF_struct_7(_GLF_struct_5(mat4(1.0), 1.0, 1), _GLF_struct_6(mat3(1.0), ivec4(1)), uvec4(1u), mat3x2(1.0), true), mat4x3(1.0), vec4(1.0), _GLF_struct_10(_GLF_struct_8(mat2x4(1.0)), _GLF_struct_9(1u, mat2(1.0), uvec2(1u), ivec4(_GLF_IDENTITY(1, max(1, 1))), mat4x3(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), float(mat2x4((1.0), exp(sqrt(0.0)), 1.0, 1.0, 0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0))) * 1.0)))), _GLF_IDENTITY(ivec2(1), _GLF_IDENTITY((ivec2(1)) * ivec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)), (ivec2(1, 1) ^ ivec2(1, 1)) ^ (_GLF_IDENTITY((ivec2(1)) * ivec2(_GLF_ONE(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-9.4)), _GLF_IDENTITY(bool(false), false || (_GLF_IDENTITY(bool(false), (bool(false)) || false))))), _GLF_IDENTITY(dot(vec2(log(1.0), tan(0.0)), vec2(1.0, _GLF_ONE(1.0, injectionSwitch.y))), dot(vec2(log(1.0), tan(0.0)), vec2(1.0, _GLF_ONE(1.0, injectionSwitch.y)))), 1.0, 1.0), max(vec4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-9.4)), bool(false))), _GLF_IDENTITY(dot(vec2(log(1.0), tan(0.0)), vec2(1.0, _GLF_ONE(1.0, injectionSwitch.y))), dot(vec2(log(1.0), tan(0.0)), vec2(1.0, _GLF_ONE(1.0, injectionSwitch.y)))), 1.0, 1.0), vec4(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), float(_GLF_FUZZED(-9.4)), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(log(1.0), tan(0.0)), vec2(1.0, _GLF_ONE(1.0, injectionSwitch.y))), mix(float(_GLF_FUZZED(749.333)), float(dot(vec2(log(1.0), tan(0.0)), vec2(1.0, _GLF_ONE(1.0, injectionSwitch.y)))), bool(true))), dot(vec2(log(1.0), tan(0.0)), vec2(1.0, _GLF_ONE(1.0, injectionSwitch.y)))), 1.0, 1.0))))), injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)), ~ _GLF_IDENTITY((~ ((ivec2(_GLF_IDENTITY(1, 0 + (1)))) * ivec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))), ((~ ((ivec2(_GLF_IDENTITY(1, 0 + (1)))) * ivec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))) | ((~ ((ivec2(_GLF_IDENTITY(1, 0 + (1)))) * ivec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))))))))));
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = _GLF_struct_replacement_11.workgroup_size * workgroup_id;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))) || _GLF_IDENTITY((false), false || ((false)))))) || false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) + subgroup_id * subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) + subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) + subgroup_id * subgroup_size))) << 0u), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), _GLF_IDENTITY(vec4(0.0, 1.0, 0.0, 0.0), clamp(_GLF_IDENTITY(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(0.0, 1.0, 0.0, 0.0))), vec4(0.0, 1.0, 0.0, 0.0), _GLF_IDENTITY(vec4(0.0, 1.0, 0.0, 0.0), (vec4(0.0, 1.0, 0.0, 0.0)) / vec4(1.0, 1.0, 1.0, 1.0)))))), 1.0, 0.0, sqrt(0.0), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0)), 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(determinant(mat4(1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0)), 0.0, 0.0))), 0.0, 1.0, 0.0))), 0.0, 0.0), vec3(mat3(_GLF_IDENTITY(vec3(injectionSwitch.x, 0.0, 0.0), (_GLF_IDENTITY(vec3(injectionSwitch.x, 0.0, 0.0), (false ? _GLF_FUZZED(vec3(-519.434, -74.07, -60.48)) : vec3(injectionSwitch.x, 0.0, 0.0)))) + vec3(0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED((1.2 + -87.34)))))), 0.0, 1.0)))))))) + subgroup_id * subgroup_size), ((_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ uint(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x, float(_GLF_IDENTITY(vec3(injectionSwitch.x, 0.0, 0.0), vec3(mat3(_GLF_IDENTITY(vec3(injectionSwitch.x, 0.0, 0.0), (vec3(injectionSwitch.x, 0.0, 0.0)) + vec3(0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(4.8)), bool(false))))), 0.0, 1.0)))))), (true ? _GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) * (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-0.9, -22.24)) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))))))).x, float(_GLF_IDENTITY(vec3(injectionSwitch.x, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))), vec3(mat3(_GLF_IDENTITY(_GLF_IDENTITY(vec3(injectionSwitch.x, 0.0, 0.0), _GLF_IDENTITY((vec3(injectionSwitch.x, 0.0, 0.0)) * mat3(1.0), ((vec3(injectionSwitch.x, 0.0, 0.0)) * mat3(1.0)) - log(vec3(1.0, 1.0, 1.0)))), (vec3(injectionSwitch.x, 0.0, 0.0)) + vec3(0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(4.8)), bool(false))))), 0.0, 1.0)))))) : _GLF_FUZZED(injectionSwitch.r))))) + subgroup_id * subgroup_size)) >> (0u >> _GLF_IDENTITY(uint(8u), uint(8u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)), (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))))) << 0u)) ^ _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u * (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) / _GLF_IDENTITY(1u, (1u) ^ 0u))))) + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), ((0u)) ^ 0u) << 0u) << _GLF_IDENTITY(uint(1u), uint(1u))) ^ (subgroup_id * subgroup_size)), clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), ~ (~ (uint(1u)))), uint(1u))) ^ (subgroup_id * subgroup_size)), _GLF_IDENTITY(subgroup_id * subgroup_size, (0u << _GLF_IDENTITY(uint(1u), uint(1u))) ^ (subgroup_id * subgroup_size)), _GLF_IDENTITY(subgroup_id * subgroup_size, (0u << _GLF_IDENTITY(uint(1u), uint(1u))) ^ (subgroup_id * subgroup_size))))), (true ? (_GLF_IDENTITY(subgroup_id * subgroup_size, (0u << _GLF_IDENTITY(uint(1u), uint(1u))) ^ (subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)))) : _GLF_FUZZED(subgroup_size))) << 0u), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) + 0u), _GLF_IDENTITY((workgroup_base) ^ uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x))), float(float(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_ZERO(0.0, injectionSwitch.x)))), ((workgroup_base) ^ uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x))), float(float(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_ZERO(0.0, injectionSwitch.x))))) | 0u)) + subgroup_id * subgroup_size), ((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) + 0u), (workgroup_base) ^ uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x))), float(float(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) + 0.0), injectionSwitch.x)))), _GLF_ZERO(0.0, injectionSwitch.x))))) + subgroup_id * subgroup_size)) - 0u) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))) + subgroup_local_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(false, (false) && true))), (bool(bvec2(false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))) && _GLF_IDENTITY(true, false || (true))))))
  barrier();
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id))) - 0u)) / 1u) * subgroup_size + _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u))) + 1) % subgroup_size), 0u | (((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) - 0u, max(_GLF_IDENTITY((subgroup_local_id) - 0u, max((subgroup_local_id) - 0u, _GLF_IDENTITY((subgroup_local_id) - 0u, ((subgroup_local_id) - 0u) - 0u))), (subgroup_local_id) - 0u))))) + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-19891) : 1))) % subgroup_size)));
 atomicStore(buf[_GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED(next_virtual_gid) : virtual_gid))], _GLF_IDENTITY(uint(1), uint(uint(_GLF_IDENTITY(uint(1), (uint(1)) * 1u)))), 4, 64, 4);
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false)))))))
    barrier();
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, 0u | (next_virtual_gid))], uint(2), 4, _GLF_IDENTITY(64, max(64, 64)), _GLF_IDENTITY(4, min(4, 4)));
   subgroupAll(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true, true)))))), bool(bvec2(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-52.40)))) + 0.0), float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-9.9, -1.7)) : _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4782.6405), _GLF_FUZZED(797.940)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))), 1.0, 0.0, 0.0, 0.0))), (injectionSwitch) - vec2(0.0, 0.0)).x, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (! (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x < injectionSwitch.y)))))) || false))) ? 0.0 : _GLF_FUZZED(90.56))), 0.0, determinant(mat4(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))), injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y))))));
  }
 else
  {
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) | (next_virtual_gid))) >> 0u)], _GLF_IDENTITY(uint(2), (uint(2)) | (uint(_GLF_IDENTITY(2, (2) + 0)))), 4, _GLF_IDENTITY(64, 0 | (64)), _GLF_IDENTITY(4, (4) - 0));
   subgroupAll(_GLF_IDENTITY(true, ! (! (true))));
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, bool(bool(true))), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))))), false || (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((-6.5 / -7879.6641))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((-6.5 / -7879.6641))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))))))))) || false)))))))), _GLF_IDENTITY(true && (bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(bool(_GLF_IDENTITY(true && (bool(bvec3(false, false, _GLF_TRUE(_GLF_IDENTITY(true, (true) && true), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec3((injectionSwitch.x < injectionSwitch.y), true, false)))))))))), (true && (bool(bvec3(false, false, _GLF_TRUE(_GLF_IDENTITY(true, (true) && true), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec3((injectionSwitch.x < injectionSwitch.y), true, false))))))))))) && true))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true))))), true)))))))), true && (bool(bvec3(false, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true))))))), true && (_GLF_IDENTITY(bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(log2((-9.4 / 5.6))))), min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3372.0680)), float(injectionSwitch.y), bool(true))))), min(injectionSwitch.y, injectionSwitch.y)))))))), true && (bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false)))))), true, false, false)), (bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), true, false, false))) && true)) || (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) < injectionSwitch.y))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))))) || false))))), true && (! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 0.0))).y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || false, true && (_GLF_IDENTITY((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 0.0))).y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || false, true && ((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(log(injectionSwitch)))), injectionSwitch, injectionSwitch)), vec2(mat2(injectionSwitch, 0.0, 0.0))).y))), _GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y)))))))) || false)))))), bool(bvec3(false || (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 0.0))).y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || false, true && (_GLF_IDENTITY((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 0.0))).y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || false, true && ((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(log(injectionSwitch)))), injectionSwitch, injectionSwitch)), vec2(mat2(injectionSwitch, 0.0, 0.0))).y))), _GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y)))))))) || false)))))), false, false))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(true && (bool(bvec3(_GLF_IDENTITY(false, (false) && true), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true && (true && (bool(bvec3(_GLF_IDENTITY(false, (false) && true), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), bool(bool(true && (bool(bvec3(false, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))))))))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(65.62, 39.42)))).x, float(vec3(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(65.62, 39.42)))).x, 1.0, 0.0))) < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) - vec2(0.0, 0.0)))).y, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) - vec2(0.0, 0.0)))).y) - 0.0), false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (true ? mat2(1.0) * (injectionSwitch) : _GLF_FUZZED(injectionSwitch)))))).y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), true && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(false || (injectionSwitch.x < injectionSwitch.y), ! (! (false || (injectionSwitch.x < injectionSwitch.y))))))))))))), true && (bool(bvec3(false, false, _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true))), true && _GLF_IDENTITY((_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(0.0 + (injectionSwitch.x), 1.0 * (_GLF_IDENTITY(0.0 + (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(mat2x4(0.0 + (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(sin(0.0), 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(sin(0.0), 1.0, 0.0))) * (injectionSwitch.x))), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0)))))) < injectionSwitch.y, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(34.88) : injectionSwitch.y))) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) || false))))), bool(bvec2((_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(0.0 + (injectionSwitch.x), 1.0 * (_GLF_IDENTITY(0.0 + (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(mat2x4(0.0 + (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(sin(0.0), 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(sin(0.0), 1.0, 0.0))) * (injectionSwitch.x))), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0)))))) < injectionSwitch.y, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(34.88) : injectionSwitch.y))) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) || false))))), false)))))))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(log2((-9.4 / 5.6))))), min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))), bvec3(bvec4(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(log2((-9.4 / 5.6))))), min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))), false)))), true && (bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(3.5, max(3.5, 3.5)))), bool(_GLF_IDENTITY(false, (false) || false)))) > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) + tan(0.0)), mix(float(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) + tan(0.0))), float(_GLF_FUZZED(76.47)), bool(_GLF_IDENTITY(false, bool(bvec2(false, true)))))))) || (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x < injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(bool(bvec3(injectionSwitch.x < injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)))))), ! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y)))), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))))), false, false))))))), false || (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-6.9)), float(injectionSwitch.y), bool(true)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(9710.3449) : mix(float(_GLF_FUZZED(-6.9)), float(injectionSwitch.y), bool(true))))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(427.960), _GLF_FUZZED(float(186941u))), vec2(_GLF_IDENTITY((injectionSwitch)[0], float(vec2((injectionSwitch)[0], 0.0))), (injectionSwitch)[1]), bvec2(true, true))).y)), ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true)))), _GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-6.9)), float(injectionSwitch.y), bool(true)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(9710.3449) : mix(float(_GLF_FUZZED(-6.9)), float(injectionSwitch.y), bool(true))))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(427.960), _GLF_FUZZED(float(186941u))), vec2(_GLF_IDENTITY((injectionSwitch)[0], float(vec2((injectionSwitch)[0], 0.0))), (injectionSwitch)[1]), bvec2(true, true))).y)), ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true)))), _GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))))))))) || false)))), ((_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y)))), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))))), false, false))))))), false || (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-6.9)), float(injectionSwitch.y), bool(true)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(9710.3449) : mix(float(_GLF_FUZZED(-6.9)), float(injectionSwitch.y), bool(true))))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(427.960), _GLF_FUZZED(float(186941u))), vec2(_GLF_IDENTITY((injectionSwitch)[0], float(vec2((injectionSwitch)[0], 0.0))), (injectionSwitch)[1]), bvec2(true, true))).y)), ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true)))), _GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-6.9)), float(injectionSwitch.y), bool(true)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(9710.3449) : mix(float(_GLF_FUZZED(-6.9)), float(injectionSwitch.y), bool(true))))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(427.960), _GLF_FUZZED(float(186941u))), vec2(_GLF_IDENTITY((injectionSwitch)[0], float(vec2((injectionSwitch)[0], 0.0))), (injectionSwitch)[1]), bvec2(true, true))).y)), ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true)))), _GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))))))))) || false))))) || false)), ((! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))), false || (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true), bool(bvec2(_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).y, mix(float(_GLF_FUZZED(-6.9)), float(injectionSwitch.y), _GLF_IDENTITY(bool(true), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), (bool(true)) && true)), (bool(_GLF_IDENTITY(bool(true), (bool(true)) && true))) || false))))), injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY((4317.9435), mix(float((4317.9435)), float(_GLF_FUZZED(-761.515)), bool(false)))), _GLF_FUZZED((-8367.9715))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))) && true)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 0.0))) > injectionSwitch.y)))))))) || false)))))) || false)))), _GLF_IDENTITY(true && (bool(bvec3(false, _GLF_IDENTITY(false, false || (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(bool(_GLF_IDENTITY(true, (true) && true) && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x < injectionSwitch.y)), false || (_GLF_IDENTITY(bool((injectionSwitch.x < injectionSwitch.y)), (bool((injectionSwitch.x < injectionSwitch.y))) && _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), true, false)))))))))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x < injectionSwitch.y)), false || (_GLF_IDENTITY(bool((injectionSwitch.x < injectionSwitch.y)), (bool((injectionSwitch.x < injectionSwitch.y))) && _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), true, false)))))))))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x < injectionSwitch.y)), false || (_GLF_IDENTITY(bool((injectionSwitch.x < injectionSwitch.y)), (bool((injectionSwitch.x < injectionSwitch.y))) && _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), true, false)))))))))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x < injectionSwitch.y)), false || (_GLF_IDENTITY(bool((injectionSwitch.x < injectionSwitch.y)), (bool((injectionSwitch.x < injectionSwitch.y))) && _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), true, false)))))))))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))))))), true))))))))), ! (! (bool(_GLF_IDENTITY(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x < injectionSwitch.y)), false || (_GLF_IDENTITY(bool((injectionSwitch.x < injectionSwitch.y)), (bool((injectionSwitch.x < injectionSwitch.y))) && _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), true, false)))))))))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x < injectionSwitch.y)), false || (_GLF_IDENTITY(bool((injectionSwitch.x < injectionSwitch.y)), (bool((injectionSwitch.x < injectionSwitch.y))) && _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), true, false)))))))))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x < injectionSwitch.y)), false || (_GLF_IDENTITY(bool((injectionSwitch.x < injectionSwitch.y)), (bool((injectionSwitch.x < injectionSwitch.y))) && _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), true, false)))))))))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x < injectionSwitch.y)), false || (_GLF_IDENTITY(bool((injectionSwitch.x < injectionSwitch.y)), (bool((injectionSwitch.x < injectionSwitch.y))) && _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), true, false)))))))))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))))))), true))))))))))))))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (_GLF_IDENTITY(! (bool(bvec3(false, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))))))), bool(bvec4(_GLF_IDENTITY(! (bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (! (bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], float(mat3x2(_GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])), determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, 0.0, 1.0, 0.0))))).y)))))) || false), true, true, false))))), true && (bool(_GLF_IDENTITY(bvec3(false, false, _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true)))), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true)))))), bvec3(bvec3(bvec3(bvec3(bvec3(false, false, _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true))))))))))))), true && (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, (true ? injectionSwitch.y : _GLF_FUZZED(log2((-9.4 / 5.6))))), min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0))))), _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)))).y)))))))), _GLF_IDENTITY(true, ! (! (true))) && (bool(bvec3(false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y)))), ! (! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y)))))))))))))))))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(3.5)), bool(false))) > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), mix(float(injectionSwitch.x), float(_GLF_FUZZED(3.5)), _GLF_IDENTITY(bool(false), bool(bvec4(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), true, true, true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))) > injectionSwitch.y, _GLF_IDENTITY(false, false || (false)) || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x, mix(float(injectionSwitch.x), _GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(3.5, clamp(_GLF_IDENTITY(3.5, clamp(3.5, 3.5, 3.5)), 3.5, 3.5)))), (float(_GLF_FUZZED(3.5))) * 1.0), bool(false))) > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-30.44), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(float(false))), bvec2(true, false)))) / cos(vec2(0.0, 0.0))).y))), ! (! ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(3.5)), bool(false))) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))), ! (! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(3.5)), bool(false))) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(3.5)), bool(false))) > injectionSwitch.y) || false)), ! (! ((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), _GLF_IDENTITY(float(_GLF_FUZZED(3.5)), min(_GLF_IDENTITY(float(_GLF_FUZZED(3.5)), (_GLF_IDENTITY(float(_GLF_FUZZED(3.5)), float(mat2(float(_GLF_FUZZED(3.5)), 1.0, 0.0, 0.0)))) * 1.0), float(_GLF_FUZZED(3.5)))), bool(false))) > injectionSwitch.y)))))))))))))))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
