#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(false || (! (false)), bool(bool(false || (! (false))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(33.35), _GLF_FUZZED(-8808.9174)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))).x, (true ? injectionSwitch.x : _GLF_FUZZED(-494.350))) > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(float(103771u))), bool(false)))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), bool(bool(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))))), ((injectionSwitch.x > injectionSwitch.y)) && true), false))))))), false, false, true))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5.6), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(465.882)), bvec2(true, false))).y)), false, true, true)))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, ! (! ((true) || false)))) && (false)), (injectionSwitch.x > injectionSwitch.y))), false)), ! (_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, sin(0.0), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))).y)), (! ((injectionSwitch.x > injectionSwitch.y))) || false))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, sin(0.0), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))).y)), (! ((injectionSwitch.x > injectionSwitch.y))) || false))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, sin(0.0), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))).y)), (! ((injectionSwitch.x > injectionSwitch.y))) || false))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, sin(0.0), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))).y)), (! ((injectionSwitch.x > injectionSwitch.y))) || false))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, sin(0.0), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))).y)), (! ((injectionSwitch.x > injectionSwitch.y))) || false))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, sin(0.0), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))).y)), (! ((injectionSwitch.x > injectionSwitch.y))) || false))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, sin(0.0), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))).y)), (! ((injectionSwitch.x > injectionSwitch.y))) || false))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, sin(0.0), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))).y)), (! ((injectionSwitch.x > injectionSwitch.y))) || false))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, sin(0.0), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))).y)), (! ((injectionSwitch.x > injectionSwitch.y))) || false))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), true, true))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((+ -98.02)), _GLF_FUZZED(234.134)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, sin(0.0), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, abs(1.0), sqrt(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, sqrt(1.0), 0.0, 0.0, 0.0)) + (1.0))))).y)), (! ((injectionSwitch.x > injectionSwitch.y))) || false))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, sin(0.0), length(vec4(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)), 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))).y)), (! ((injectionSwitch.x > injectionSwitch.y))) || false))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(-82.91)), float(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(256.521)), float(_GLF_ONE(1.0, injectionSwitch.y)), bool(true)))), bool(true))), 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, sin(0.0), length(vec4(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(float(0.0)), max(_GLF_IDENTITY(float(float(0.0)), min(float(float(0.0)), float(float(0.0)))), float(float(0.0))))), 1.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))).y)), (! ((injectionSwitch.x > injectionSwitch.y))) || false))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, sin(0.0), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))).y)), (! ((injectionSwitch.x > injectionSwitch.y))) || false))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, determinant(_GLF_IDENTITY(mat3(1.0, 1.0, 1.0, 0.0, 1.0, sin(0.0), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(1.0, 1.0, 1.0, 0.0, 1.0, sin(0.0), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0)))), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))).y)), (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (((injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (((injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), true)))))) || false))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, sin(0.0), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0)), _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec2(0.0, sin(0.0)), vec2(mat2x3(vec2(0.0, sin(0.0)), cos(0.0), 1.0, 0.0, 1.0))))), 1.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-8.8))))), 1.0, 0.0, 1.0))).y)), (! ((injectionSwitch.x > injectionSwitch.y))) || false))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), bool(bvec3(bool(bvec4(false, true, false, false)), true, true)))), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))))))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, sqrt(vec2(1.0, 1.0)) * (injectionSwitch)), vec2(mat3x4(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, sin(0.0), length(vec4(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, float(mat4(0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0))))), 0.0, 0.0)), 0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, float(mat4x3(0.0, abs(1.0), determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), sqrt(1.0), 0.0, round(length(normalize(vec2(1.0, 1.0))))))), 1.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))).y)), (! ((injectionSwitch.x > injectionSwitch.y))) || false))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, sin(0.0), length(vec4(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0)), 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))).y)), (! ((injectionSwitch.x > injectionSwitch.y))) || false))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(! (! (bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, sin(0.0), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))).y)), (! ((injectionSwitch.x > injectionSwitch.y))) || false))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! (! (! (! (bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, determinant(mat3(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-2146.9546)), float(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))))), bool(true))), 1.0, 0.0, 1.0, sin(0.0), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-1397.5065) : 1.0)))), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))).y)), _GLF_IDENTITY((! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))), ((! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))))) && true) || false))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), true, true)))))))))), false))), _GLF_IDENTITY((! (bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), (bool(bvec3(false, false, true))) && true)), true)), bvec3(bvec4(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, true)), false))))))))), false), bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))))), ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! ((! (bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), false))))), (! (_GLF_IDENTITY((! (bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), false)))), bool(bvec4((! (bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-457.972) : _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), false)))), true, true, false))))) && true), (_GLF_IDENTITY(_GLF_IDENTITY(! ((! (bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), false))))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, 0.0)))))), bool(bvec2((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, 0.0)))))), true)))) && (! ((! (bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))), false)), bool(bvec2(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))), false)), true)))))))), false))))))), bool(bvec2(_GLF_IDENTITY(! ((! (bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), false))))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, 0.0)))))), bool(bvec2((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, 0.0)))))), true)))) && (! ((! (bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))), false)), bool(bvec2(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))), false)), true)))))))), false))))))), false)))) && true)), ((_GLF_IDENTITY(_GLF_IDENTITY(! ((! (bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), false))))), (! (_GLF_IDENTITY((! (bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), false)))), bool(bvec4((! (bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-457.972) : _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), false)))), true, true, false))))) && true), (_GLF_IDENTITY(_GLF_IDENTITY(! ((! (bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), false))))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, 0.0)))))), bool(bvec2((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, 0.0)))))), true)))) && (! ((! (bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))), false)), bool(bvec2(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))), false)), true)))))))), false))))))), bool(bvec2(_GLF_IDENTITY(! ((! (bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), false))))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, 0.0)))))), bool(bvec2((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, 0.0)))))), true)))) && (! ((! (bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))), false)), bool(bvec2(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))), false)), true)))))))), false))))))), false)))) && true))) || false)) || false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(_GLF_IDENTITY(2.7, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(2.7, (2.7) - 0.0) : _GLF_FUZZED(-1404.8911))), _GLF_IDENTITY(-1436.2577, max(-1436.2577, -1436.2577)))) : injectionSwitch)), injectionSwitch)).y))))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, clamp(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)) : _GLF_FUZZED(uvec3(173958u, 2692u, 65176u)))))).x, _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) << uvec3(0u, 0u, 0u)), max(gl_NumWorkGroups, gl_NumWorkGroups)).x) - 0u)));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(gl_WorkGroupSize.x, 1u), _GLF_IDENTITY((_GLF_IDENTITY(uvec2(gl_WorkGroupSize.x, 1u), (uvec2(gl_WorkGroupSize.x, 1u)) | uvec2(0u, 0u))) + uvec2(0u, 0u), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(uvec2(gl_WorkGroupSize.x, 1u), _GLF_IDENTITY((uvec2(gl_WorkGroupSize.x, 1u)) | uvec2(0u, 0u), ((uvec2(gl_WorkGroupSize.x, 1u)) | uvec2(0u, 0u)) - uvec2(0u, 0u)))) + uvec2(0u, 0u), ((_GLF_IDENTITY(uvec2(gl_WorkGroupSize.x, 1u), _GLF_IDENTITY((uvec2(gl_WorkGroupSize.x, 1u)), ((uvec2(gl_WorkGroupSize.x, 1u))) | ((uvec2(gl_WorkGroupSize.x, 1u)))) | uvec2(0u, 0u))) + uvec2(0u, 0u)) << uvec2(0u, 0u))) << uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), min((_GLF_IDENTITY((_GLF_IDENTITY(uvec2(gl_WorkGroupSize.x, 1u), (uvec2(gl_WorkGroupSize.x, 1u)) | uvec2(0u, 0u))) + uvec2(0u, 0u), ((_GLF_IDENTITY(uvec2(gl_WorkGroupSize.x, 1u), (uvec2(gl_WorkGroupSize.x, 1u)) | uvec2(0u, 0u))) + uvec2(0u, 0u)) << uvec2(0u, 0u))) << uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY((_GLF_IDENTITY(uvec2(gl_WorkGroupSize.x, 1u), (uvec2(gl_WorkGroupSize.x, 1u)) | uvec2(0u, 0u))) + uvec2(0u, 0u), ((_GLF_IDENTITY(uvec2(gl_WorkGroupSize.x, 1u), (uvec2(gl_WorkGroupSize.x, 1u)) | uvec2(0u, 0u))) + uvec2(0u, 0u)) << uvec2(0u, 0u))) << uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))), (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))).x, 1u), (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) ^ 0u), 1u), (uvec2(gl_WorkGroupSize.x, 1u)) | uvec2(0u, 0u))) + uvec2(0u, 0u))) | (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(gl_WorkGroupSize.x, 0u ^ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)))), 1u), (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(gl_WorkGroupSize, (true ? _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize), min((gl_WorkGroupSize), (gl_WorkGroupSize))) - uvec3(0u, 0u, 0u)) : _GLF_FUZZED(uvec3(93773u, 171563u, _GLF_IDENTITY(78037u, 0u ^ (78037u)))))).x, 1u), (uvec2(gl_WorkGroupSize.x, 1u)) | uvec2(0u, 0u))) + uvec2(0u, 0u)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec2(gl_WorkGroupSize.x, 1u), (_GLF_IDENTITY(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(gl_WorkGroupSize.x, 0u + (gl_WorkGroupSize.x)), 1u), (_GLF_IDENTITY(uvec2(gl_WorkGroupSize.x, 1u), ~ (~ (_GLF_IDENTITY(uvec2(gl_WorkGroupSize.x, 1u), min(uvec2(gl_WorkGroupSize.x, 1u), uvec2(gl_WorkGroupSize.x, 1u))))))) | uvec2(0u, _GLF_IDENTITY(0u, (0u) ^ 0u))), (true ? _GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, max(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)))), _GLF_IDENTITY(gl_WorkGroupSize, (true ? gl_WorkGroupSize : _GLF_FUZZED(uvec3(81789u, 157587u, 97310u)))))).x, 0u + (gl_WorkGroupSize.x)), 1u), (_GLF_IDENTITY(uvec2(gl_WorkGroupSize.x, 1u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec2(gl_WorkGroupSize.x, 1u), ~ (~ (_GLF_IDENTITY(uvec2(gl_WorkGroupSize.x, 1u), uvec2(0u, 0u) ^ (_GLF_IDENTITY(uvec2(gl_WorkGroupSize.x, 1u), (uvec2(gl_WorkGroupSize.x, 1u)) * uvec2(1u, 1u))))))), min(uvec2(gl_WorkGroupSize.x, 1u), uvec2(gl_WorkGroupSize.x, 1u))))))) | uvec2(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) ^ 0u), (true ? _GLF_IDENTITY(0u, (0u) ^ 0u) : _GLF_FUZZED(subgroup_size))))) : _GLF_FUZZED(uvec2(71067u, 113287u))))) + uvec2(_GLF_IDENTITY(0u, (0u) / _GLF_IDENTITY(1u, uint(uint(_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_size) : 1u))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_size) : 1u))), (true ? uint(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_size) : 1u))) : _GLF_FUZZED(num_workgroup)))) - 0u)), (uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_size) : 1u))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_size) : 1u))), (true ? uint(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_size) : 1u))) : _GLF_FUZZED(num_workgroup)))) - 0u))) | (uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_size) : 1u))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_size) : 1u))), (true ? uint(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_size) : 1u))) : _GLF_FUZZED(num_workgroup)))) - 0u))))), 1u)), 1u)))))), 0u))), uvec2(uvec2(~ (_GLF_IDENTITY(uvec2(gl_WorkGroupSize.x, 1u), (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(gl_WorkGroupSize.x, 0u + (gl_WorkGroupSize.x)), 1u), (_GLF_IDENTITY(uvec2(gl_WorkGroupSize.x, 1u), ~ (~ (_GLF_IDENTITY(uvec2(gl_WorkGroupSize.x, 1u), _GLF_IDENTITY(min(uvec2(gl_WorkGroupSize.x, 1u), uvec2(gl_WorkGroupSize.x, 1u)), (min(uvec2(gl_WorkGroupSize.x, 1u), uvec2(gl_WorkGroupSize.x, 1u))) | uvec2(0u, 0u))))))) | uvec2(0u, _GLF_IDENTITY(0u, (0u) ^ 0u)))) + uvec2(_GLF_IDENTITY(0u, (0u) / _GLF_IDENTITY(1u, uint(uint(_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, max(1u, 1u)), 1u)))))), 0u))))))))));
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, 0u | (gl_WorkGroupID.x));
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(bool(false))) || (false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)) * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), _GLF_IDENTITY(true && ((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))), (true && ((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))) && true)), true, false)), bool(bvec4(bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), true && ((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))), true, false)), true, true, true))))), _GLF_IDENTITY(bool(bvec4((! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_DEAD(false)), bool(bvec4(true && (_GLF_DEAD(false)), false, true, true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)), _GLF_IDENTITY(true && (bool(bvec4((! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))), ! (! (_GLF_IDENTITY(true, ! (! (true))) && (bool(bvec4((! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_DEAD(false)), ! (! (true && (_GLF_DEAD(false))))))), ((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_DEAD(false)), ! (! (true && (_GLF_DEAD(false)))))))) && true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | _GLF_IDENTITY((workgroup_base), 1u * ((workgroup_base)))), (_GLF_IDENTITY(workgroup_base, 0u | _GLF_IDENTITY((workgroup_base), 1u * ((workgroup_base))))) | (_GLF_IDENTITY(workgroup_base, 0u | _GLF_IDENTITY((workgroup_base), 1u * ((workgroup_base)))))) + subgroup_id * subgroup_size + (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)), (subgroup_local_id + 1) | 0u), (subgroup_local_id + 1) | _GLF_IDENTITY(0u, (0u) >> 0u))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)), (subgroup_local_id + 1) | 0u), (subgroup_local_id + 1) | _GLF_IDENTITY(0u, (0u) >> 0u)))) | 0u) % subgroup_size);
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), true)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[virtual_gid], uint(1), 4, 64, _GLF_IDENTITY(4, _GLF_IDENTITY((4) / ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))), min((4) / ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))), (4) / ((_GLF_IDENTITY(1, (1) | 0) << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, _GLF_IDENTITY(4, (4) | (4)));
   subgroupAll(false);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), false, false, true))))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    barrier();
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(2, _GLF_IDENTITY((_GLF_IDENTITY(2, min(2, 2))) | _GLF_IDENTITY((_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (2) ^ _GLF_IDENTITY(0, _GLF_IDENTITY((0), (_GLF_IDENTITY((0), ((0)) | ((0)))) | ((0))) + 0)), 2))), (_GLF_IDENTITY((_GLF_IDENTITY(2, _GLF_IDENTITY(_GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) ^ 0), min(_GLF_IDENTITY(2, (2) ^ 0), _GLF_IDENTITY(2, (2) ^ 0))), 2), min(max(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) ^ 0), min(_GLF_IDENTITY(2, (2) ^ 0), _GLF_IDENTITY(2, (2) ^ 0))), 2), max(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) ^ 0), min(_GLF_IDENTITY(2, (2) ^ 0), _GLF_IDENTITY(2, (2) ^ 0))), 2))), (_GLF_IDENTITY(_GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) ^ 0), min(_GLF_IDENTITY(2, (2) ^ 0), _GLF_IDENTITY(2, (2) ^ 0))), 2), min(max(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) ^ 0), min(_GLF_IDENTITY(2, (2) ^ 0), _GLF_IDENTITY(2, (2) ^ 0))), 2), max(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) ^ 0), min(_GLF_IDENTITY(2, (2) ^ 0), _GLF_IDENTITY(2, (2) ^ 0))), 2))), (_GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) ^ 0), min(_GLF_IDENTITY(2, (2) ^ 0), _GLF_IDENTITY(2, (2) ^ 0))), 2), min(max(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) ^ 0), min(_GLF_IDENTITY(2, (2) ^ 0), _GLF_IDENTITY(2, (2) ^ 0))), 2), max(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) ^ 0), min(_GLF_IDENTITY(2, (2) ^ 0), _GLF_IDENTITY(2, (2) ^ 0))), 2)))) | 0)) | (_GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) ^ 0), min(_GLF_IDENTITY(2, (2) ^ 0), _GLF_IDENTITY(2, (2) ^ 0))), 2), min(max(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) ^ 0), min(_GLF_IDENTITY(2, (2) ^ 0), _GLF_IDENTITY(2, (2) ^ 0))), 2), max(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) ^ 0), min(_GLF_IDENTITY(2, (2) ^ 0), _GLF_IDENTITY(2, (2) ^ 0))), 2))))))), _GLF_IDENTITY(1, min(1, 1)) * ((_GLF_IDENTITY(2, _GLF_IDENTITY(_GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) ^ 0), min(_GLF_IDENTITY(2, (2) ^ 0), _GLF_IDENTITY(2, (2) ^ 0))), 2), min(max(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) ^ 0), min(_GLF_IDENTITY(2, (2) ^ 0), _GLF_IDENTITY(2, (2) ^ 0))), 2), max(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) ^ 0), min(_GLF_IDENTITY(2, (2) ^ 0), _GLF_IDENTITY(2, (2) ^ 0))), 2))), (_GLF_IDENTITY(_GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) ^ 0), min(_GLF_IDENTITY(2, (2) ^ 0), _GLF_IDENTITY(2, (2) ^ 0))), 2), min(max(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) ^ 0), min(_GLF_IDENTITY(2, (2) ^ 0), _GLF_IDENTITY(2, (2) ^ 0))), 2), max(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) ^ 0), min(_GLF_IDENTITY(2, (2) ^ 0), _GLF_IDENTITY(2, (2) ^ 0))), 2))), (_GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) ^ 0), min(_GLF_IDENTITY(2, (2) ^ 0), _GLF_IDENTITY(2, (2) ^ 0))), 2), min(max(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) ^ 0), min(_GLF_IDENTITY(2, (2) ^ 0), _GLF_IDENTITY(2, (2) ^ 0))), 2), max(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) ^ 0), min(_GLF_IDENTITY(2, (2) ^ 0), _GLF_IDENTITY(2, (2) ^ 0))), 2)))) | 0)) | (_GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) ^ 0), min(_GLF_IDENTITY(2, (2) ^ 0), _GLF_IDENTITY(2, (2) ^ 0))), 2), min(max(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) ^ 0), min(_GLF_IDENTITY(2, (2) ^ 0), _GLF_IDENTITY(2, (2) ^ 0))), 2), max(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) ^ 0), min(_GLF_IDENTITY(2, (2) ^ 0), _GLF_IDENTITY(2, (2) ^ 0))), 2)))))))))) | int(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), max((injectionSwitch.x), _GLF_IDENTITY((injectionSwitch.x), max((injectionSwitch.x), (injectionSwitch.x))))) - 0.0)))))), (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY((_GLF_IDENTITY(2, min(2, 2))) | _GLF_IDENTITY((_GLF_IDENTITY(2, max(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) ^ 0), max(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) ^ 0), int(ivec4(_GLF_IDENTITY(2, (2) ^ 0), int(_GLF_ONE(1.0, injectionSwitch.y)), 1, 1))), _GLF_IDENTITY(2, (2) ^ 0))), 2))), ((_GLF_IDENTITY(_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (2) ^ 0), 2)), (_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (2) ^ 0), 2))) << 0))) | int(_GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY((false ? _GLF_FUZZED(452.864) : _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0))), mix(float((false ? _GLF_FUZZED(452.864) : _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0)))), float(_GLF_FUZZED(-52.41)), bool(false)))), injectionSwitch.x))), _GLF_IDENTITY(0, ~ (~ (0))) ^ _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(2, min(2, 2))) | _GLF_IDENTITY((_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (2) ^ 0), 2))), ((_GLF_IDENTITY(_GLF_IDENTITY(2, max(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) ^ 0), 0 + (_GLF_IDENTITY(_GLF_IDENTITY(2, (2) ^ 0), max(_GLF_IDENTITY(2, (2) ^ 0), _GLF_IDENTITY(2, (2) ^ 0))))), 2)), clamp(_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (2) ^ 0), 2)), _GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (2) ^ 0), 2)), _GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (2) ^ 0), 2)))))) | int(_GLF_ZERO(0.0, injectionSwitch.x))), min((_GLF_IDENTITY(2, min(2, 2))) | _GLF_IDENTITY((_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (2) ^ 0), 2))), ((_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (2) ^ 0), 2)))) | int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(6.0) : _GLF_ZERO(0.0, injectionSwitch.x)))), (false ? _GLF_FUZZED(35.85) : min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(6.0) : _GLF_ZERO(0.0, injectionSwitch.x))))))))), (_GLF_IDENTITY(2, min(_GLF_IDENTITY(2, (2) * 1), _GLF_IDENTITY(2, 1 * (2))))) | _GLF_IDENTITY((_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (2) ^ 0), _GLF_IDENTITY(2, (2) | 0)))), ((_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (2) ^ 0), 2)))) | int(_GLF_ZERO(0.0, injectionSwitch.x)))))), _GLF_IDENTITY(max((_GLF_IDENTITY((_GLF_IDENTITY(2, min(2, 2))) | _GLF_IDENTITY((_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (2) ^ 0), 2))), ((_GLF_IDENTITY(_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (2) ^ 0), 2)), clamp(_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (2) ^ 0), 2)), _GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (2) ^ 0), 2)), _GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (2) ^ 0), 2)))))) | int(_GLF_ZERO(0.0, injectionSwitch.x))), min((_GLF_IDENTITY(2, min(2, 2))) | _GLF_IDENTITY((_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (2) ^ 0), 2))), ((_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (2) ^ 0), 2)))) | int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(6.0) : _GLF_ZERO(0.0, injectionSwitch.x))))))), (_GLF_IDENTITY(2, min(_GLF_IDENTITY(2, (2) * 1), _GLF_IDENTITY(2, 1 * (2))))) | _GLF_IDENTITY((_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (2) ^ 0), _GLF_IDENTITY(2, (2) | 0)))), ((_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (2) ^ 0), 2)))) | int(_GLF_ZERO(0.0, injectionSwitch.x)))))), (_GLF_IDENTITY((_GLF_IDENTITY(2, min(2, 2))) | _GLF_IDENTITY((_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (2) ^ 0), 2))), ((_GLF_IDENTITY(_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (2) ^ 0), 2)), clamp(_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (2) ^ 0), 2)), _GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (2) ^ 0), 2)), _GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (2) ^ 0), 2)))))) | int(_GLF_ZERO(0.0, injectionSwitch.x))), min((_GLF_IDENTITY(2, min(2, 2))) | _GLF_IDENTITY((_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (2) ^ 0), 2))), ((_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (2) ^ 0), 2)))) | int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(6.0) : _GLF_ZERO(0.0, injectionSwitch.x))))))), (_GLF_IDENTITY(2, min(_GLF_IDENTITY(2, (2) * 1), _GLF_IDENTITY(2, 1 * (2))))) | _GLF_IDENTITY((_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (2) ^ 0), _GLF_IDENTITY(2, (2) | 0)))), ((_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (2) ^ 0), 2)))) | int(_GLF_ZERO(0.0, injectionSwitch.x))))))), (true ? max((_GLF_IDENTITY((_GLF_IDENTITY(2, min(2, 2))) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (2) ^ 0), 2)), (_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (2) ^ 0), 2))) ^ 0)), ((_GLF_IDENTITY(_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (2) ^ 0), 2)), clamp(_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (2) ^ 0), 2)), _GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (2) ^ 0), 2)), _GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (2) ^ 0), 2)))))) | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))), injectionSwitch.x, injectionSwitch.x))))), min((_GLF_IDENTITY(2, min(2, 2))) | _GLF_IDENTITY((_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (2) ^ 0), 2))), ((_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (2) ^ 0), 2)))) | int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_IDENTITY(_GLF_FUZZED(6.0), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))) * (_GLF_FUZZED(6.0))) : _GLF_ZERO(0.0, injectionSwitch.x))))))), (_GLF_IDENTITY(2, min(_GLF_IDENTITY(2, (2) * 1), _GLF_IDENTITY(2, 1 * (2))))) | _GLF_IDENTITY((_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, _GLF_IDENTITY((2) ^ 0, max((2) ^ 0, (2) ^ 0))), _GLF_IDENTITY(2, (2) | 0)))), ((_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (2) ^ 0), _GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(-53702))))))) | int(_GLF_ZERO(0.0, injectionSwitch.x)))))), (_GLF_IDENTITY((_GLF_IDENTITY(2, _GLF_IDENTITY(min(2, 2), (_GLF_IDENTITY(min(2, 2), (min(2, 2)) / 1)) | (_GLF_IDENTITY(min(2, 2), 0 | (min(2, 2))))))) | _GLF_IDENTITY((_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, _GLF_IDENTITY((2) ^ 0, (_GLF_IDENTITY((2) ^ 0, max((2) ^ 0, _GLF_IDENTITY((2) ^ 0, ((2) ^ 0) | 0)))) >> 0)), 2))), ((_GLF_IDENTITY(_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (2) ^ 0), 2)), clamp(_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (2) ^ 0), 2)), _GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (2) ^ 0), 2)), _GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (2) ^ 0), 2)))))) | int(_GLF_ZERO(0.0, injectionSwitch.x))), min((_GLF_IDENTITY(2, min(2, 2))) | _GLF_IDENTITY((_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (2) ^ 0), 2))), ((_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (2) ^ 0), 2)))) | int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(6.0) : _GLF_ZERO(0.0, injectionSwitch.x))))))), (_GLF_IDENTITY(2, min(_GLF_IDENTITY(2, (2) * 1), _GLF_IDENTITY(2, 1 * (2))))) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(2, (2) >> 0), max(_GLF_IDENTITY(2, (2) ^ 0), _GLF_IDENTITY(2, (2) | 0)))), ((_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) << 0)) ^ 0), 2)))) | int(_GLF_ZERO(0.0, injectionSwitch.x))))))) : _GLF_FUZZED(-6169))))) : _GLF_FUZZED(-92290))))), _GLF_IDENTITY((uint(_GLF_IDENTITY(2, (_GLF_IDENTITY(_GLF_IDENTITY(2, 0 ^ (2)), min(2, 2))) | _GLF_IDENTITY((_GLF_IDENTITY(2, max(_GLF_IDENTITY(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, 0 ^ (2))) ^ 0), (2) ^ 0), 2))), ((_GLF_IDENTITY(2, max(_GLF_IDENTITY(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, 0 ^ (2))) ^ 0), (_GLF_IDENTITY(2, int(ivec4(2, 0, 1, 0)))) ^ 0), 2)))) << 0)))), 0u | (_GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, min(2, _GLF_IDENTITY(2, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(2, min(_GLF_IDENTITY(2, max(2, 2)), 2)) : _GLF_FUZZED(26923)))))) | (_GLF_IDENTITY(2, max(_GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY((2), 0 | ((_GLF_IDENTITY(2, (_GLF_IDENTITY(2, _GLF_IDENTITY((2) / 1, ~ (~ ((2) / 1))))) * 1)))) ^ 0), (2) ^ 0), 2))))), (uint(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, min(2, _GLF_IDENTITY(2, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(2, min(_GLF_IDENTITY(2, max(2, 2)), 2)) : _GLF_FUZZED(26923)))))) | (_GLF_IDENTITY(2, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY((2), 0 | ((_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) / 1)) * 1)))) ^ 0), 0 | (_GLF_IDENTITY(2, _GLF_IDENTITY((2), 0 | ((_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) / 1)) * 1)))) ^ 0))), (2) ^ 0), 2)))))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, min(2, _GLF_IDENTITY(2, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(2, min(_GLF_IDENTITY(2, max(2, 2)), 2)) : _GLF_FUZZED(26923)))))) | (_GLF_IDENTITY(2, max(_GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY(_GLF_IDENTITY((2), 0 | ((_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) / 1)) * 1)))) ^ 0, ~ (~ (_GLF_IDENTITY((2), 0 | ((_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) / 1)) * 1)))) ^ 0)))), (2) ^ 0), 2))))), min(uint(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, _GLF_IDENTITY(min(2, _GLF_IDENTITY(2, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(2, min(_GLF_IDENTITY(2, max(2, 2)), 2)) : _GLF_FUZZED(26923)))), (min(_GLF_IDENTITY(2, (2) * 1), _GLF_IDENTITY(2, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(2, min(_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) ^ 0)) | 0), 2)), 2)) : _GLF_FUZZED(26923))))) - 0))) | (_GLF_IDENTITY(2, max(_GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY((2), 0 | ((_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) / 1)) * 1)))) ^ 0), (2) ^ 0), 2))))), uint(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, min(2, _GLF_IDENTITY(2, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(2, min(_GLF_IDENTITY(2, max(2, 2)), 2)) : _GLF_FUZZED(26923)))))) | (_GLF_IDENTITY(2, max(_GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY((2), 0 | ((_GLF_IDENTITY(2, (_GLF_IDENTITY(2, _GLF_IDENTITY((2), ((2)) - 0) / 1)) * 1)))) ^ 0), (2) ^ 0), 2)))))))))), ((uint(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, min(2, 2))) | (_GLF_IDENTITY(2, max(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) ^ 0), (2) ^ 0), 2))))))) - 0u))) << _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, _GLF_IDENTITY(max(0u, 0u), (max(0u, 0u)) << 0u)), _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (0u) | (0u))))))), 4, 64, 4);
   subgroupAll(true);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
