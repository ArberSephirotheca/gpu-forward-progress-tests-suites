#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).y, mix(float(_GLF_FUZZED((+ -92.85))), float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).y), bool(true)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, false)))) || false)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, true)))))), (_GLF_DEAD(false)) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, true)))))), (_GLF_DEAD(false)) || false)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(46.89), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(float(vec3((injectionSwitch)[0], 1.0, 1.0)), (float(vec3((injectionSwitch)[0], 1.0, 1.0))) - 0.0)), _GLF_FUZZED(-45.25)), bvec2(true, false))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(7.7)), vec2(_GLF_FUZZED(751.007), (injectionSwitch)[1]), bvec2(false, true))))).y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))) || false)))))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(762.843)))))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(762.843)))))), false, true, false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))), _GLF_ONE(1.0, injectionSwitch.y), cos(sin(0.0)), 1.0, 0.0, 0.0, 0.0, 0.0), (mat2x4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))), _GLF_ONE(1.0, injectionSwitch.y), cos(sin(0.0)), 1.0, 0.0, 0.0, 0.0, 0.0)) * mat2(1.0)))) > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(524.234) : injectionSwitch.x)))) > injectionSwitch.y, true, true, true)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   barrier();
  }
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u) + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), max((_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1))) % subgroup_size), (_GLF_IDENTITY((subgroup_local_id + 1), clamp((subgroup_local_id + 1), (subgroup_local_id + 1), (subgroup_local_id + 1))) % subgroup_size))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u), (workgroup_base) >> 0u) + subgroup_id * _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)) + ((subgroup_local_id + 1) % subgroup_size)) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))) + _GLF_IDENTITY(subgroup_id, 0u ^ (_GLF_IDENTITY(subgroup_id, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_id : _GLF_FUZZED(workgroup_id))))) * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) / 1u, min((subgroup_size) / 1u, (subgroup_size) / 1u))) + _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (true ? (subgroup_local_id + 1) % subgroup_size : _GLF_FUZZED(num_workgroup)))), _GLF_IDENTITY(max(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size)), (_GLF_IDENTITY(max(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size)), (max(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size))) * 1u)) >> 0u)), max(((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)), clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size))), (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, clamp(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size)) + _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, int(int(1)))))), (~ (_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, int(int(1))))))) | (~ (_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, int(int(1))))))))))) % subgroup_size), min(((subgroup_local_id + _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, int(int(1)))))), (~ (_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, int(int(1))))))) | (~ (_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, int(int(1))))))))))) % subgroup_size), _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, int(int(1)))))), (~ (_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, int(int(1))))))) | (~ (_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, int(int(1))))))))))) % subgroup_size), (true ? ((subgroup_local_id + _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, int(int(1)))))), (~ (_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, int(int(1))))))) | (~ (_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, int(int(1))))))))))) % subgroup_size) : _GLF_FUZZED(workgroup_id)))))) << 0u), ~ (~ (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) << ((0u << _GLF_IDENTITY(uint(3u), uint(3u))) << _GLF_IDENTITY(uint(7u), uint(7u)))) * _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u) + _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)), _GLF_IDENTITY(max((_GLF_IDENTITY((subgroup_local_id + 1), 1u * (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), (false ? _GLF_FUZZED(workgroup_size) : (subgroup_local_id + 1))), ~ (~ (_GLF_IDENTITY((subgroup_local_id + 1), (false ? _GLF_FUZZED(workgroup_size) : (subgroup_local_id + 1)))))))) % subgroup_size), ((subgroup_local_id + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1)))))) % _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u))), _GLF_IDENTITY(0u, (0u) | (0u)) ^ (_GLF_IDENTITY(max(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))))), ((subgroup_local_id + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1)))))) % subgroup_size)), clamp(max(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1)))))) % subgroup_size), (((subgroup_local_id + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1)))))) % subgroup_size)) / ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), min(uint(3u), uint(3u))))))), max(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u)), ((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, 1 * (0)))) | (_GLF_IDENTITY(1, ~ (~ (1)))))) % subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(max(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1)))))) % subgroup_size)), ~ (_GLF_IDENTITY(~ (max(((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1) % _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))), ((subgroup_local_id + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1)))))) % subgroup_size))), (true ? ~ (max(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), ~ (~ (1)))))) % _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))))) : _GLF_FUZZED(8498u))))), 0u ^ (max(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) + 0), 0 | (_GLF_IDENTITY(1, ~ (~ (1)))))), min((subgroup_local_id + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1)))))), (subgroup_local_id + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1)))))))) % subgroup_size), uint(uvec3((_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1)))))), min((subgroup_local_id + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1)))))), (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + _GLF_IDENTITY(1, 0 | _GLF_IDENTITY((_GLF_IDENTITY(1, ~ (~ (1)))), (_GLF_IDENTITY((_GLF_IDENTITY(1, ~ (~ (1)))), clamp((_GLF_IDENTITY(1, ~ (~ (1)))), (_GLF_IDENTITY(1, ~ (~ (1)))), (_GLF_IDENTITY(1, ~ (~ (1))))))) / int(_GLF_ONE(1.0, injectionSwitch.y))))))) % subgroup_size), 1u, (0u << _GLF_IDENTITY(uint(0u), uint(0u)))))))))))))), (_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)), _GLF_IDENTITY(max((_GLF_IDENTITY((subgroup_local_id + 1), 1u * (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u)), (false ? _GLF_FUZZED(workgroup_size) : (subgroup_local_id + 1))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_local_id + 1), (false ? _GLF_FUZZED(workgroup_size) : (subgroup_local_id + 1)))), min(~ (_GLF_IDENTITY((subgroup_local_id + 1), (false ? _GLF_FUZZED(workgroup_size) : (subgroup_local_id + 1)))), ~ (_GLF_IDENTITY((subgroup_local_id + 1), (false ? _GLF_FUZZED(workgroup_size) : (subgroup_local_id + 1)))))))))) % subgroup_size), ((subgroup_local_id + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1)))))) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u), _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))), (subgroup_size) / 1u))), _GLF_IDENTITY(0u, (0u) | (0u)) ^ (_GLF_IDENTITY(max(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(min(subgroup_size, _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))), (min(subgroup_size, _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))) | 0u))), ((subgroup_local_id + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1)))))) % _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u))), _GLF_IDENTITY(clamp(max(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1)))))) % subgroup_size), (((subgroup_local_id + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1)))))) % subgroup_size)) / ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), min(uint(3u), uint(3u))))))), max(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u)), ((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, 1 * (0)))) | (_GLF_IDENTITY(1, ~ (~ (1)))))) % subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(max(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1)))))) % subgroup_size)), ~ (_GLF_IDENTITY(~ (max(((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1) % _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))), ((subgroup_local_id + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1)))))) % subgroup_size))), (true ? ~ (max(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), ~ (~ (1)))))) % _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))))) : _GLF_FUZZED(8498u))))), 0u ^ (max(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) + 0), 0 | (_GLF_IDENTITY(1, ~ (~ (1)))))), min((subgroup_local_id + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1)))))), (subgroup_local_id + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1)))))))) % subgroup_size), uint(uvec3((_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1)))))), min((subgroup_local_id + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1)))))), (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + _GLF_IDENTITY(1, 0 | _GLF_IDENTITY((_GLF_IDENTITY(1, ~ (~ (1)))), (_GLF_IDENTITY((_GLF_IDENTITY(1, ~ (~ (1)))), clamp((_GLF_IDENTITY(1, ~ (~ (1)))), (_GLF_IDENTITY(1, ~ (~ (1)))), (_GLF_IDENTITY(1, ~ (~ (1))))))) / int(_GLF_ONE(1.0, injectionSwitch.y))))))) % subgroup_size), 1u, (0u << _GLF_IDENTITY(uint(0u), uint(0u)))))))))), max(_GLF_IDENTITY(clamp(max(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1)))))) % subgroup_size), (((subgroup_local_id + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1)))))) % subgroup_size)) / ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), min(uint(3u), uint(3u))))))), max(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u)), ((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, 1 * (0)))) | (_GLF_IDENTITY(1, ~ (~ (1)))))) % subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(max(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1)))))) % subgroup_size)), ~ (_GLF_IDENTITY(~ (max(((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1) % _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))), ((subgroup_local_id + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1)))))) % subgroup_size))), (true ? ~ (max(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), ~ (~ (1)))))) % _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))))) : _GLF_FUZZED(8498u))))), 0u ^ (max(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) + 0), 0 | (_GLF_IDENTITY(1, ~ (~ (1)))))), min((subgroup_local_id + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1)))))), (subgroup_local_id + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1)))))))) % subgroup_size), uint(uvec3((_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1)))))), min((subgroup_local_id + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1)))))), (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + _GLF_IDENTITY(1, 0 | _GLF_IDENTITY((_GLF_IDENTITY(1, ~ (~ (1)))), (_GLF_IDENTITY((_GLF_IDENTITY(1, ~ (~ (1)))), clamp((_GLF_IDENTITY(1, ~ (~ (1)))), (_GLF_IDENTITY(1, ~ (~ (1)))), (_GLF_IDENTITY(1, ~ (~ (1))))))) / int(_GLF_ONE(1.0, injectionSwitch.y))))))) % subgroup_size), 1u, (0u << _GLF_IDENTITY(uint(0u), uint(0u)))))))))), clamp(clamp(max(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1)))))) % subgroup_size), (((subgroup_local_id + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1)))))) % subgroup_size)) / ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), min(uint(3u), uint(3u))))))), max(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u)), ((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, 1 * (0)))) | (_GLF_IDENTITY(1, ~ (~ (1)))))) % subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(max(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1)))))) % subgroup_size)), ~ (_GLF_IDENTITY(~ (max(((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1) % _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))), ((subgroup_local_id + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1)))))) % subgroup_size))), (true ? ~ (max(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), ~ (~ (1)))))) % _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))))) : _GLF_FUZZED(8498u))))), 0u ^ (max(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) + 0), 0 | (_GLF_IDENTITY(1, ~ (~ (1)))))), min((subgroup_local_id + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1)))))), (subgroup_local_id + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1)))))))) % subgroup_size), uint(uvec3((_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1)))))), min((subgroup_local_id + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1)))))), (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + _GLF_IDENTITY(1, 0 | _GLF_IDENTITY((_GLF_IDENTITY(1, ~ (~ (1)))), (_GLF_IDENTITY((_GLF_IDENTITY(1, ~ (~ (1)))), clamp((_GLF_IDENTITY(1, ~ (~ (1)))), (_GLF_IDENTITY(1, ~ (~ (1)))), (_GLF_IDENTITY(1, ~ (~ (1))))))) / int(_GLF_ONE(1.0, injectionSwitch.y))))))) % subgroup_size), 1u, (0u << _GLF_IDENTITY(uint(0u), uint(0u)))))))))), clamp(max(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1)))))) % subgroup_size), (((subgroup_local_id + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1)))))) % subgroup_size)) / ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), min(uint(3u), uint(3u))))))), max(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u)), ((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, 1 * (0)))) | (_GLF_IDENTITY(1, ~ (~ (1)))))) % subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(max(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1)))))) % subgroup_size)), ~ (_GLF_IDENTITY(~ (max(((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1) % _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))), ((subgroup_local_id + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1)))))) % subgroup_size))), (true ? ~ (max(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), ~ (~ (1)))))) % _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))))) : _GLF_FUZZED(8498u))))), 0u ^ (max(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) + 0), 0 | (_GLF_IDENTITY(1, ~ (~ (1)))))), min((subgroup_local_id + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1)))))), (subgroup_local_id + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1)))))))) % subgroup_size), uint(uvec3((_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1)))))), min((subgroup_local_id + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1)))))), (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + _GLF_IDENTITY(1, 0 | _GLF_IDENTITY((_GLF_IDENTITY(1, ~ (~ (1)))), (_GLF_IDENTITY((_GLF_IDENTITY(1, ~ (~ (1)))), clamp((_GLF_IDENTITY(1, ~ (~ (1)))), (_GLF_IDENTITY(1, ~ (~ (1)))), (_GLF_IDENTITY(1, ~ (~ (1))))))) / int(_GLF_ONE(1.0, injectionSwitch.y))))))) % subgroup_size), 1u, (0u << _GLF_IDENTITY(uint(0u), uint(0u)))))))))), clamp(max(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1)))))) % subgroup_size), (((subgroup_local_id + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1)))))) % subgroup_size)) / ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), min(uint(3u), uint(3u))))))), max(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u)), ((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, 1 * (0)))) | (_GLF_IDENTITY(1, ~ (~ (1)))))) % subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(max(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1)))))) % subgroup_size)), ~ (_GLF_IDENTITY(~ (max(((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1) % _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))), ((subgroup_local_id + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1)))))) % subgroup_size))), (true ? ~ (max(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), ~ (~ (1)))))) % _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))))) : _GLF_FUZZED(8498u))))), 0u ^ (max(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) + 0), 0 | (_GLF_IDENTITY(1, ~ (~ (1)))))), min((subgroup_local_id + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1)))))), (subgroup_local_id + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1)))))))) % subgroup_size), uint(uvec3((_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1)))))), min((subgroup_local_id + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1)))))), (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + _GLF_IDENTITY(1, 0 | _GLF_IDENTITY((_GLF_IDENTITY(1, ~ (~ (1)))), (_GLF_IDENTITY((_GLF_IDENTITY(1, ~ (~ (1)))), clamp((_GLF_IDENTITY(1, ~ (~ (1)))), (_GLF_IDENTITY(1, ~ (~ (1)))), (_GLF_IDENTITY(1, ~ (~ (1))))))) / int(_GLF_ONE(1.0, injectionSwitch.y))))))) % subgroup_size), 1u, (0u << _GLF_IDENTITY(uint(0u), uint(0u)))))))))))), clamp(max(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1)))))) % subgroup_size), (((subgroup_local_id + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1)))))) % subgroup_size)) / ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), min(uint(3u), uint(3u))))))), max(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u)), ((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, 1 * (0)))) | (_GLF_IDENTITY(1, ~ (~ (1)))))) % subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(max(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1)))))) % subgroup_size)), ~ (_GLF_IDENTITY(~ (max(((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1) % _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))), ((subgroup_local_id + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1)))))) % subgroup_size))), (true ? ~ (max(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), ~ (~ (1)))))) % _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))))) : _GLF_FUZZED(8498u))))), 0u ^ (max(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) + 0), 0 | (_GLF_IDENTITY(1, ~ (~ (1)))))), min((subgroup_local_id + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1)))))), (subgroup_local_id + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1)))))))) % subgroup_size), uint(uvec3((_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1)))))), min((subgroup_local_id + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1)))))), (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + _GLF_IDENTITY(1, 0 | _GLF_IDENTITY((_GLF_IDENTITY(1, ~ (~ (1)))), (_GLF_IDENTITY((_GLF_IDENTITY(1, ~ (~ (1)))), clamp((_GLF_IDENTITY(1, ~ (~ (1)))), (_GLF_IDENTITY(1, ~ (~ (1)))), (_GLF_IDENTITY(1, ~ (~ (1))))))) / int(_GLF_ONE(1.0, injectionSwitch.y))))))) % subgroup_size), 1u, (0u << _GLF_IDENTITY(uint(0u), uint(0u))))))))))))))))) + 0u), (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), (_GLF_IDENTITY(_GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), uint(uint(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)))), min(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)))) | (max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)))), (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u), 1u, (0u ^ 1u))), (_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u), 1u, (0u ^ 1u))), (uint(uvec3(_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u), 1u, (0u ^ 1u)))) ^ 0u)) >> 0u))) | (subgroup_id))) : _GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), subgroup_id * subgroup_size)))), subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u))) + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u + (subgroup_local_id), max(0u + (subgroup_local_id), 0u + (subgroup_local_id)))) + 1) % subgroup_size, ((_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)) + 1) % subgroup_size) | ((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u + (subgroup_local_id), (0u + (subgroup_local_id)) >> 0u)) + 1) % subgroup_size)))) << 0u))))) / _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(num_workgroup) : 1u)));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))))))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[virtual_gid], uint(1), _GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec4(4, 1, 0, 0)), (int(ivec4(4, 1, 0, _GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, 0)), clamp(_GLF_IDENTITY(0, clamp(0, 0, 0)), _GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, 0)), (false ? _GLF_FUZZED(30665) : _GLF_IDENTITY(0, clamp(0, 0, 0)))), _GLF_IDENTITY(0, clamp(0, 0, 0))))))) | 0)), 4)), 64, 4);
 if(_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, ~ (~ (next_virtual_gid)))) - _GLF_IDENTITY(0u, (0u) >> 0u))), max(_GLF_IDENTITY((next_virtual_gid), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2((next_virtual_gid), 0u), _GLF_IDENTITY((_GLF_IDENTITY(uvec2(_GLF_IDENTITY((next_virtual_gid), uint(_GLF_IDENTITY(uvec3((next_virtual_gid), uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED((mat2(504.100, -1.6, -0.0, -357.607) * (- vec2(-5024.6323, 8.6)))))).y)), 1u), (uvec3((next_virtual_gid), uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED((mat2(504.100, -1.6, -0.0, -357.607) * (- vec2(-5024.6323, 8.6)))))).y)), 1u)) << uvec3(0u, 0u, 0u)))), _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) | 0u), 0u, 0u))), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, uint(uvec2(0u, 1u))), _GLF_IDENTITY(0u, (0u) | (0u)))), 0u) + (uvec2(_GLF_IDENTITY((next_virtual_gid), (_GLF_IDENTITY((next_virtual_gid), ((next_virtual_gid)) + 0u)) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u)), uvec2(0u, 0u) ^ (_GLF_IDENTITY(uvec2(0u, 0u) + (uvec2((next_virtual_gid), 0u)), uvec2(0u, 0u) ^ (uvec2(0u, 0u) + (uvec2((next_virtual_gid), 0u)))))))) + uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), (true ? _GLF_IDENTITY((_GLF_IDENTITY(uvec2((next_virtual_gid), _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(num_workgroup)))), uvec2(0u, 0u) + (uvec2((next_virtual_gid), 0u)))) + uvec2(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x), _GLF_ZERO(0.0, injectionSwitch.x)), max((_GLF_IDENTITY(uvec2((next_virtual_gid), 0u), _GLF_IDENTITY(uvec2(0u, 0u) + (uvec2((next_virtual_gid), 0u)), clamp(uvec2(0u, 0u) + (uvec2((next_virtual_gid), 0u)), _GLF_IDENTITY(uvec2(0u, 0u) + (uvec2((next_virtual_gid), 0u)), uvec2(uvec2(uvec2(0u, 0u) + (uvec2((next_virtual_gid), 0u))))), _GLF_IDENTITY(uvec2(0u, 0u) + (uvec2((next_virtual_gid), 0u)), max(uvec2(0u, 0u) + (uvec2((next_virtual_gid), 0u)), uvec2(0u, 0u) + (uvec2((next_virtual_gid), 0u)))))))) + uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(_GLF_IDENTITY(uvec2((next_virtual_gid), 0u), min(_GLF_IDENTITY(uvec2((next_virtual_gid), 0u), max(_GLF_IDENTITY(uvec2((next_virtual_gid), 0u), uvec2(uvec2(uvec2((next_virtual_gid), 0u)))), uvec2((next_virtual_gid), 0u))), _GLF_IDENTITY(uvec2((next_virtual_gid), 0u), clamp(uvec2((next_virtual_gid), 0u), _GLF_IDENTITY(uvec2((next_virtual_gid), 0u), (uvec2((next_virtual_gid), 0u)) / uvec2(1u, 1u)), uvec2((next_virtual_gid), 0u))))), uvec2(0u, 0u) + (uvec2((next_virtual_gid), _GLF_IDENTITY(0u, (0u) ^ 0u))))) + uvec2(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED(316.825)), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(true))), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x)))) : _GLF_FUZZED(uvec2(172626u, 157118u))))), (true ? uvec2((next_virtual_gid), 0u) : _GLF_FUZZED(uvec2(174737u, 181932u))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2((next_virtual_gid), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) ^ 0u)), (true ? uvec2((next_virtual_gid), 0u) : _GLF_FUZZED(uvec2(174737u, _GLF_IDENTITY(181932u, max(_GLF_IDENTITY(181932u, ~ (~ (181932u))), _GLF_IDENTITY(181932u, (181932u) | (181932u))))))))), min(uint(_GLF_IDENTITY(uvec2((next_virtual_gid), 0u), (true ? uvec2((next_virtual_gid), 0u) : _GLF_FUZZED(uvec2(174737u, 181932u))))), uint(_GLF_IDENTITY(uvec2((_GLF_IDENTITY(next_virtual_gid, 0u ^ (next_virtual_gid))), 0u), (true ? uvec2((next_virtual_gid), _GLF_IDENTITY(0u, (0u) ^ 0u)) : _GLF_FUZZED(uvec2(_GLF_IDENTITY(174737u, min(174737u, 174737u)), 181932u)))))))) - 0u)), (next_virtual_gid)))) : subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(0, _GLF_IDENTITY((0) >> 0, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY((0) >> 0, min((0) >> 0, (0) >> 0)), 0, 0)), (int(ivec3(_GLF_IDENTITY((0) >> 0, min((0) >> 0, (0) >> 0)), 0, 0))) + 0))) | (1)))) < subgroup_size)
  {
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false))))), ! (! (_GLF_IDENTITY(false, false || (false))))), ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))), false))))))))))
    return;
   subgroupAll(false);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(true, ! (! (true)))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(true, ! (! (true)))), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, _GLF_IDENTITY(true, ! (! (true))))), bvec3(bvec4(bvec3(bvec3(false, false, _GLF_IDENTITY(true, ! (! (true))))), true))))), false)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))), _GLF_IDENTITY(true, ! (! (true)))), bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, (true) || false))))))))))), false)), false)))))), (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(false)))))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), false || (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))))))))) && true))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, determinant(mat4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)), 0.0, 0.0, 0.0, 0.0, 1.0)) * (injectionSwitch.x)) < injectionSwitch.y)) && (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(80.16))) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-913.781)), bool(false))) > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)), bool(bvec2(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(float(injectionSwitch.x)), (_GLF_IDENTITY(float(float(injectionSwitch.x)), mix(float(float(float(injectionSwitch.x))), float(_GLF_FUZZED(-1.5)), bool(false)))) / exp(0.0))) > injectionSwitch.y))))), true)))))))))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
    }
   atomicStore(buf[next_virtual_gid], uint(2), 4, _GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(_GLF_IDENTITY((-86404 << 50540), max((-86404 << 50540), _GLF_IDENTITY((-86404 << 50540), clamp((-86404 << 50540), (-86404 << 50540), (-86404 << 50540)))))) : 64)), (_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(_GLF_IDENTITY((-86404 << 50540), max((-86404 << 50540), _GLF_IDENTITY((-86404 << 50540), clamp((-86404 << _GLF_IDENTITY(50540, (50540) * 1)), (-86404 << 50540), (_GLF_IDENTITY(-86404, int(_GLF_IDENTITY(ivec2(-86404, 1), (ivec2(-86404, 1)) << ivec2(0, 0)))) << 50540)))))) : 64)), min(_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(_GLF_IDENTITY((-86404 << 50540), max((-86404 << 50540), _GLF_IDENTITY((-86404 << 50540), clamp((-86404 << 50540), (-86404 << 50540), (-86404 << 50540)))))) : 64)), (_GLF_IDENTITY(64, (_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(_GLF_IDENTITY((-86404 << 50540), max((-86404 << 50540), _GLF_IDENTITY((-86404 << 50540), clamp((-86404 << 50540), (-86404 << 50540), (-86404 << 50540)))))) : 64))) | (_GLF_IDENTITY(64, (_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(_GLF_IDENTITY((-86404 << 50540), max((-86404 << 50540), _GLF_IDENTITY((-86404 << 50540), clamp((-86404 << 50540), (-86404 << 50540), (-86404 << 50540)))))) : 64)))), _GLF_IDENTITY(64, (_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY((-86404 << 50540), clamp(_GLF_IDENTITY((-86404 << 50540), (true ? _GLF_IDENTITY((-86404 << 50540), 0 | ((-86404 << 50540))) : _GLF_FUZZED(-70820))), (-86404 << 50540), (-86404 << 50540))), max((-86404 << 50540), _GLF_IDENTITY((-86404 << 50540), clamp((-86404 << 50540), (-86404 << 50540), (-86404 << 50540)))))) : 64))))) << 0), 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   subgroupAll(true);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        return;
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), sin(0.0), 1.0, 1.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, _GLF_IDENTITY(sqrt(1.0), (sqrt(1.0)) * 1.0))), 1.0, 1.0))) > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(false, (false) || false)))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y)), bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y), (min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], float(vec4(injectionSwitch[1], 0.0, 0.0, tan(0.0)))))), vec2(injectionSwitch[0], injectionSwitch[1])) : _GLF_FUZZED(injectionSwitch))).y)) / 1.0)))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))), false))))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
