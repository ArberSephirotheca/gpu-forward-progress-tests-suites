#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(277.837))) > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ! (! ((! (injectionSwitch.x > injectionSwitch.y)))))))))), ! _GLF_IDENTITY((! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), ((! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(-939.382, -86.65)))).x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))) || false), false)), (bool(bvec2(_GLF_IDENTITY((! ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-4.8)), bvec2(true, false))).y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(((! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))) || false, bool(bvec2(((! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))) || false, true)))), false))) || false))))) && _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y)))))))), false))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, false), true)))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true)))), true)))), _GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true)))), true)))), false)), ! (! (bool(bvec2(bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true)))), true)))), false)))))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, true)))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), false)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), true && ((false))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), _GLF_IDENTITY(((false)) && true, ! (! (((false)) && true)))))))
    barrier();
   return;
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_DEAD(false)), (_GLF_IDENTITY(false || (_GLF_DEAD(false)), (false || (_GLF_DEAD(false))) || false)) || false)), false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, true && (false)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)))), _GLF_IDENTITY(true && (bool(bvec2(_GLF_IDENTITY(false, true && (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)) && (bool(bvec2(_GLF_IDENTITY(false, true && (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (bool(_GLF_IDENTITY(bool(true && (bool(bvec2(_GLF_IDENTITY(false, true && (false)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_FUZZED(-411.072)), float((injectionSwitch)[0]), bool(true))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-2228.5736), _GLF_FUZZED(67.30)), bvec2(false, false))).y)))))), bool(_GLF_IDENTITY(bool(bool(true && (bool(bvec2(_GLF_IDENTITY(false, true && (false)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_FUZZED(-411.072)), float((injectionSwitch)[0]), bool(true))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-2228.5736), _GLF_FUZZED(67.30)), bvec2(false, false))).y))))))), (bool(bool(true && (bool(bvec2(_GLF_IDENTITY(false, true && (false)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_FUZZED(-411.072)), float((injectionSwitch)[0]), bool(true))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-2228.5736), _GLF_FUZZED(67.30)), bvec2(false, false))).y)))))))) || false))))) && true)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(false, true && (false)))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)))), _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec4(true, true, false, false)))))) && (bool(bvec2(_GLF_IDENTITY(false, true && (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(bool(bool(true && (bool(bvec2(_GLF_IDENTITY(false, true && (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (bool(bool(true && (bool(bvec2(_GLF_IDENTITY(false, true && (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) && true))))), (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, true && (false)), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, float(vec2(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x4(1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0), mat2x4(mat3x4(mat2x4(1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)))))), 0.0))), (1.0) / cos(0.0)), 1.0)), 1.0)).y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, float(vec2(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x4(1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0), mat2x4(mat3x4(mat2x4(1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)))))), 0.0))), (1.0) / cos(0.0)), 1.0)), 1.0)).y)))))), _GLF_IDENTITY(_GLF_IDENTITY(true && (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, true && (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec2(_GLF_IDENTITY(false, true && (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), _GLF_IDENTITY(bool(bool(true && (bool(bvec2(_GLF_IDENTITY(false, true && (false)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-7813.2127)), vec2(_GLF_FUZZED((4.3 + -9662.5494)), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y))))))), (bool(bool(true && (bool(bvec2(_GLF_IDENTITY(false, true && (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) && true)), (_GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, true && (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec2(_GLF_IDENTITY(false, true && (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, true && (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec2(_GLF_IDENTITY(false, true && (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, false, true)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, true && (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec2(_GLF_IDENTITY(false, true && (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, false, true)), true, true))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, ! (! (true))) && (bool(bvec2(_GLF_IDENTITY(false, true && (false)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-7813.2127)), vec2(_GLF_FUZZED((4.3 + -9662.5494)), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-7813.2127)), vec2(_GLF_FUZZED((4.3 + -9662.5494)), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-7813.2127)), vec2(_GLF_FUZZED((4.3 + -9662.5494)), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-7813.2127)), vec2(_GLF_FUZZED((4.3 + -9662.5494)), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-7813.2127)), vec2(_GLF_FUZZED((4.3 + -9662.5494)), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-7813.2127)), vec2(_GLF_FUZZED((4.3 + -9662.5494)), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))).y))))))), (bool(bool(_GLF_IDENTITY(true && (bool(bvec2(_GLF_IDENTITY(false, true && (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (true && (bool(bvec2(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false, true)))))))))) && true)))) && true))) || false))))) && true)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) && true), false)), bool(bvec2(bool(bvec2(_GLF_IDENTITY(false, (false) && true), false)), true))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(float(subgroup_local_id)) : injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)), bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(injectionSwitch, 0.0, 1.0, 1.0, 0.0, sqrt(0.0), 1.0, 1.0, 0.0, 1.0, log(1.0), abs(0.0), 0.0, 1.0, 1.0)), vec2(mat2(vec2(mat4(injectionSwitch, 0.0, 1.0, 1.0, 0.0, sqrt(0.0), 1.0, 1.0, 0.0, 1.0, log(1.0), abs(0.0), 0.0, 1.0, 1.0)), 1.0, 1.0)))).x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(float(false))), float(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(_GLF_IDENTITY(642.060, max(642.060, _GLF_IDENTITY(642.060, 1.0 * (642.060)))))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(_GLF_IDENTITY(642.060, max(642.060, _GLF_IDENTITY(642.060, 1.0 * (642.060)))))))) : _GLF_FUZZED(9085.0558))) / 1.0)), bool(true))))))) && true)))))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), true, true, false)), ! (! (bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), true, true, false)))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), true, true, true)))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0)))) * vec2(1.0, 1.0)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false))))), false || (bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false))))))))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), (injectionSwitch.x > injectionSwitch.y)), false, true, true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, true, true))))))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-6.2) : injectionSwitch.x)) > injectionSwitch.y)))) && true, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-6.2) : injectionSwitch.x)) > injectionSwitch.y)))) && true, ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-6.2) : _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec4(injectionSwitch.x, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))), mix(float(float(vec4(injectionSwitch.x, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))), float(_GLF_FUZZED(544.392)), bool(false)))))) > injectionSwitch.y)))) && true) && true), true, false)), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-6.2) : injectionSwitch.x)) > injectionSwitch.y)))) && true, ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(false ? _GLF_FUZZED(-6.2) : injectionSwitch.x, max(false ? _GLF_FUZZED(-6.2) : injectionSwitch.x, false ? _GLF_FUZZED(-6.2) : injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y)))).y)))) && true) && _GLF_IDENTITY(true, (true) && true)), true, false)), _GLF_IDENTITY(bool(bvec2(bool(bvec3(_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-6.2) : injectionSwitch.x)) > injectionSwitch.y)))) && true, ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(_GLF_IDENTITY(-6.2, min(-6.2, -6.2))) : injectionSwitch.x)) > injectionSwitch.y)))) && true) && true), true, false)), false)), (bool(bvec2(bool(bvec3(_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-6.2) : injectionSwitch.x)) > injectionSwitch.y)))) && true, ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(_GLF_IDENTITY(-6.2, min(-6.2, -6.2))) : injectionSwitch.x)) > injectionSwitch.y)))) && true) && true), true, false)), false))) || false))) || false))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), ! (! (bool(bool(_GLF_DEAD(false))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, ! (! (false)))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (0u << _GLF_IDENTITY(uint(1u), uint(1u))) ^ (subgroup_id * subgroup_size)), 0u ^ (_GLF_IDENTITY(subgroup_id * subgroup_size, (0u << _GLF_IDENTITY(uint(1u), uint(1u))) ^ (subgroup_id * subgroup_size)))) + subgroup_local_id, min(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), ! (! ((_GLF_IDENTITY(true, true && (true)))))))) ? subgroup_size : _GLF_FUZZED(subgroup_local_id))) + subgroup_local_id));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(max(subgroup_size, subgroup_size), (_GLF_IDENTITY(max(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u)), max(max(subgroup_size, subgroup_size), max(subgroup_size, subgroup_size)))) << 0u))))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))) + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1), 0u ^ ((subgroup_local_id + 1))) % subgroup_size), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))) + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1), 0u ^ ((subgroup_local_id + 1))) % subgroup_size), min(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))) + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1), 0u ^ ((subgroup_local_id + 1))) % subgroup_size), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))) + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1), 0u ^ ((subgroup_local_id + 1))) % subgroup_size), (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))) + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1), 0u ^ ((subgroup_local_id + 1))) % subgroup_size)) | (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))) + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1), 0u ^ ((subgroup_local_id + 1))) % subgroup_size))))))), (uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))) + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1), 0u ^ ((subgroup_local_id + 1))) % subgroup_size), min(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))) + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1), 0u ^ ((subgroup_local_id + 1))) % subgroup_size), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))) + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1), 0u ^ ((subgroup_local_id + 1))) % subgroup_size), (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))) + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1), 0u ^ ((subgroup_local_id + 1))) % subgroup_size)) | (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))) + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1), 0u ^ ((subgroup_local_id + 1))) % subgroup_size)))))))) / (1u ^ 0u))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size))), (0u | 0u), 0u)), ~ (~ (uint(uvec3(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size))), (0u | 0u), 0u))))))))) + ((subgroup_local_id + 1) % subgroup_size), min(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), uint(uint(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), 0u | (workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size)))))))))), max(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size))), (0u | 0u), 0u)), ~ (~ (uint(uvec3(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size))), (0u | 0u), 0u))))))))) + ((subgroup_local_id + 1) % subgroup_size), min(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), uint(uint(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), 0u | (workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size)))))))))), max(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size))), (0u | 0u), 0u)), ~ (~ (uint(uvec3(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size))), (0u | 0u), 0u))))))))) + ((subgroup_local_id + 1) % subgroup_size), min(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), uint(uint(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), 0u | (workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size)))))))))), max(~ (~ (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size))), (0u | 0u), 0u)), ~ (~ (uint(uvec3(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size))), (0u | 0u), 0u))))))))) + ((subgroup_local_id + 1) % subgroup_size), min(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), uint(uint(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), 0u | (workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size)))))))))), ~ (~ (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size))), (0u | 0u), 0u)), ~ (~ (uint(uvec3(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size))), (0u | 0u), 0u))))))))) + ((subgroup_local_id + 1) % subgroup_size), min(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), uint(uint(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), 0u | (workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size)))))))))))), ~ (~ (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size))), (0u | 0u), 0u)), ~ (~ (uint(uvec3(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size))), (0u | 0u), 0u))))))))) + ((subgroup_local_id + 1) % subgroup_size), min(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), uint(uint(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), 0u | (workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size)))))))))))), ~ (~ (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size))), (0u | 0u), 0u)), ~ (~ (uint(uvec3(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size))), (0u | 0u), 0u))))))))) + ((subgroup_local_id + 1) % subgroup_size), min(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), uint(uint(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), 0u | (workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size))))))))))))), min(workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) * 1u))) % subgroup_size), workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))), clamp((_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))), (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))), (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))))) | (subgroup_id)), subgroup_id)) * subgroup_size, max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))), clamp((_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))), (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))), (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))))) | (subgroup_id)), subgroup_id)) * subgroup_size, (_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))), clamp((_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))), (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))), (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))))) | (subgroup_id)), subgroup_id)) * subgroup_size) / 1u), _GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))), clamp((_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))), (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))), (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))))) | (subgroup_id)), subgroup_id)) * subgroup_size)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, 0u + (subgroup_id))) ^ 0u)) | 0u), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(clamp(subgroup_id, subgroup_id, subgroup_id), max(clamp(subgroup_id, subgroup_id, subgroup_id), clamp(subgroup_id, subgroup_id, subgroup_id))))), clamp((_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), (true ? _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u), subgroup_id)), subgroup_id)) : _GLF_FUZZED(workgroup_size)))), (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))))) | (subgroup_id)), subgroup_id)) * subgroup_size, 0u, 0u)), uint(uvec3(uint(uvec3(_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), 0u ^ (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))))) / 1u)))), (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), clamp(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), 1u * (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))))))))) | (subgroup_id)), min(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), 0u ^ (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))))) / 1u)))), (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), clamp(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), 1u * (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))))))))) | (subgroup_id)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), 0u ^ (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))))) / 1u)))), (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), clamp(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), 1u * (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))))))))) | (subgroup_id)), (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), 0u ^ (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))))) / 1u)))), (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), clamp(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), 1u * (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))))))))) | (subgroup_id))) | (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), 0u ^ (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))))) / 1u)))), (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), clamp(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), 1u * (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))))))))) | (subgroup_id)))))), subgroup_id)) * subgroup_size, 0u, 0u)), 1u, 1u)))) + ((subgroup_local_id + 1) % subgroup_size))), workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u))) + ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u)) % subgroup_size)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (! (! (false))))), bool(bvec4(! (_GLF_IDENTITY(! (false), ! (! (! (false))))), false, true, true)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec3(2.2, -9.1, -9995.6634).r), _GLF_FUZZED(_GLF_IDENTITY(42.64, clamp(42.64, _GLF_IDENTITY(_GLF_IDENTITY(42.64, min(42.64, 42.64)), float(mat4(42.64, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))), 42.64)))), vec2(_GLF_IDENTITY((injectionSwitch)[0], (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! (_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), bool(_GLF_IDENTITY(bvec3((true), false, true), bvec3(bvec3(bvec3((true), false, true))))))))))) ? (injectionSwitch)[0] : _GLF_FUZZED(-6.0))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(39.20, 37.00)) : injectionSwitch)))[_GLF_IDENTITY(1, 0 ^ (1))], (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).x < _GLF_IDENTITY(injectionSwitch.y, float(mat4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, 1.0, 0.0, 1.0, determinant(mat2(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, 0.0)), injectionSwitch.x), 0.0, 1.0, 0.0)), exp(0.0), length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, tan(0.0), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(493.948)), bool(false))))), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(2.9)), float(1.0), bool(true))))), 1.0))), round(length(normalize(1.0)))))))) ? _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2(1.0), (true ? mat2(1.0) : _GLF_FUZZED(mat2(mat4(-7.5, -4.0, -62.21, 8.6, 26.91, -3.2, -5.9, 95.60, 230.794, 8.9, -0.6, 4.8, 51.88, -5.3, -69.02, -87.10))))) * (injectionSwitch)), _GLF_IDENTITY(min(vec2(mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(vec2(mat2(1.0) * (injectionSwitch)), (vec2(mat2(1.0) * (injectionSwitch))) * mat2(1.0))), (false ? _GLF_FUZZED(vec2(-1642.5690, -626.790)) : min(vec2(_GLF_IDENTITY(mat2(1.0), (true ? mat2(1.0) : _GLF_FUZZED(mat2(-1.0, 4259.9849, 571.648, 32.76)))) * _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED((+ 31.23)), ((injectionSwitch))[1]), vec2(((injectionSwitch))[0], _GLF_FUZZED(-7.3)), bvec2(true, false)))), vec2(mat2(1.0) * (injectionSwitch))))))))) - vec2(0.0, 0.0)))) - vec2(0.0, 0.0)))[1], max(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mat2(1.0) * (mat2(1.0) * (injectionSwitch))), (_GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))), vec2(_GLF_IDENTITY(vec2(mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(min(vec2(mat2(1.0) * (injectionSwitch)), vec2(mat2(1.0) * (injectionSwitch))), (false ? _GLF_FUZZED(vec2(-1642.5690, -626.790)) : min(_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))), (true ? mat2(1.0) : _GLF_FUZZED(mat2(-1.0, 4259.9849, 571.648, 32.76)))) * (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))), (vec2(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))), (true ? mat2(1.0) : _GLF_FUZZED(mat2(-1.0, 4259.9849, 571.648, 32.76)))) * (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))))) / vec2(1.0, 1.0)), vec2(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))))))))) - vec2(0.0, 0.0)))) - vec2(0.0, 0.0))), min((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mat2(1.0) * (mat2(1.0) * (injectionSwitch))), (_GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))), vec2(_GLF_IDENTITY(vec2(mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(min(vec2(mat2(1.0) * (injectionSwitch)), vec2(mat2(1.0) * (injectionSwitch))), (false ? _GLF_FUZZED(vec2(-1642.5690, -626.790)) : min(_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))), (true ? mat2(1.0) : _GLF_FUZZED(mat2(-1.0, 4259.9849, 571.648, 32.76)))) * (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))), (vec2(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))), (true ? mat2(1.0) : _GLF_FUZZED(mat2(-1.0, 4259.9849, 571.648, 32.76)))) * (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))))) / vec2(1.0, 1.0)), vec2(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))))))))) - vec2(0.0, 0.0)))) - vec2(0.0, 0.0))), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mat2(1.0) * (mat2(1.0) * (injectionSwitch))), (_GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))), vec2(_GLF_IDENTITY(vec2(mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(min(vec2(mat2(1.0) * (injectionSwitch)), vec2(mat2(1.0) * (injectionSwitch))), (false ? _GLF_FUZZED(vec2(-1642.5690, -626.790)) : min(_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))), (true ? mat2(1.0) : _GLF_FUZZED(mat2(-1.0, 4259.9849, 571.648, 32.76)))) * (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))), (vec2(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))), (true ? mat2(1.0) : _GLF_FUZZED(mat2(-1.0, 4259.9849, 571.648, 32.76)))) * (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))))) / vec2(1.0, 1.0)), vec2(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))))))))) - vec2(0.0, 0.0)))) - vec2(0.0, 0.0)))))[1], (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, (1.0) * 1.0)) * (injectionSwitch), vec2(_GLF_IDENTITY(vec2(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(_GLF_IDENTITY(min(vec2(mat2(1.0) * (injectionSwitch)), vec2(mat2(1.0) * (injectionSwitch))), vec2(0.0, 0.0) + (_GLF_IDENTITY(min(vec2(mat2(1.0) * (injectionSwitch)), vec2(mat2(1.0) * (injectionSwitch))), (false ? _GLF_FUZZED(injectionSwitch) : min(vec2(mat2(1.0) * (injectionSwitch)), vec2(mat2(1.0) * (injectionSwitch))))))), (false ? _GLF_FUZZED(vec2(-1642.5690, -626.790)) : min(vec2(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0)), (true ? mat2(1.0) : _GLF_FUZZED(mat2(-1.0, 4259.9849, 571.648, 32.76)))) * (injectionSwitch)), vec2(mat2(1.0) * (injectionSwitch))))))))) - vec2(0.0, 0.0)))) - vec2(0.0, 0.0)))[1])) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-16.74, (-16.74) - 0.0)), (_GLF_FUZZED(_GLF_IDENTITY(-16.74, (-16.74) - 0.0))) / 1.0)))), bvec2(true, true))).x, (false ? _GLF_FUZZED(6220.4273) : _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec3(_GLF_IDENTITY(2.2, (2.2) - length(vec4(0.0, 0.0, 0.0, 0.0))), -9.1, -9995.6634).r), _GLF_FUZZED(_GLF_IDENTITY(42.64, clamp(42.64, _GLF_IDENTITY(42.64, float(mat4(42.64, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))), 42.64)))), vec2(_GLF_IDENTITY((injectionSwitch)[0], (_GLF_IDENTITY(true, ! (! (true))) ? (injectionSwitch)[0] : _GLF_FUZZED(-6.0))), _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, 0 ^ (1))], (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), float(mat4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, 1.0, 0.0, 1.0, determinant(mat2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0)), exp(0.0), length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(16.71)), bool(false))))), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, tan(0.0), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), mix(float(_GLF_FUZZED(-7767.1423)), float(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))), bool(true))), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))), round(length(normalize(1.0)))))))) ? _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))), (_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec2(mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(min(vec2(mat2(1.0) * (injectionSwitch)), vec2(mat2(1.0) * (injectionSwitch))), (false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(-1642.5690, -626.790), vec2(mat2(vec2(-1642.5690, -626.790), sqrt(0.0), 0.0)))) : min(vec2(_GLF_IDENTITY(mat2(1.0), (true ? mat2(1.0) : _GLF_FUZZED(mat2(-1.0, 4259.9849, 571.648, 32.76)))) * (injectionSwitch)), vec2(mat2(1.0) * (injectionSwitch))))))), max(vec2(_GLF_IDENTITY(vec2(mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(min(vec2(mat2(1.0) * (injectionSwitch)), vec2(mat2(1.0) * (injectionSwitch))), (false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(-1642.5690, -626.790), vec2(mat2(vec2(-1642.5690, -626.790), sqrt(0.0), 0.0)))) : min(vec2(_GLF_IDENTITY(mat2(1.0), (true ? mat2(1.0) : _GLF_FUZZED(mat2(-1.0, 4259.9849, 571.648, 32.76)))) * (injectionSwitch)), vec2(mat2(1.0) * (injectionSwitch))))))), vec2(_GLF_IDENTITY(vec2(mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(min(vec2(mat2(1.0) * (injectionSwitch)), vec2(mat2(1.0) * (injectionSwitch))), (false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(-1642.5690, -626.790), vec2(mat2(vec2(-1642.5690, -626.790), sqrt(0.0), 0.0)))) : min(vec2(_GLF_IDENTITY(mat2(1.0), (true ? mat2(1.0) : _GLF_FUZZED(mat2(-1.0, 4259.9849, 571.648, 32.76)))) * (injectionSwitch)), vec2(mat2(1.0) * (injectionSwitch))))))))))) - vec2(0.0, 0.0)))) - vec2(0.0, 0.0))), vec2(mat2x4((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))), (_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec2(mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(min(vec2(mat2(1.0) * (injectionSwitch)), vec2(mat2(1.0) * (injectionSwitch))), (false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(-1642.5690, -626.790), vec2(mat2(vec2(-1642.5690, -626.790), sqrt(0.0), 0.0)))) : min(vec2(_GLF_IDENTITY(mat2(1.0), (true ? mat2(1.0) : _GLF_FUZZED(mat2(-1.0, 4259.9849, 571.648, 32.76)))) * (injectionSwitch)), vec2(mat2(1.0) * (injectionSwitch))))))), max(vec2(_GLF_IDENTITY(vec2(mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(min(vec2(mat2(1.0) * (injectionSwitch)), vec2(mat2(1.0) * (injectionSwitch))), (false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(-1642.5690, -626.790), vec2(mat2(vec2(-1642.5690, -626.790), sqrt(0.0), 0.0)))) : min(vec2(_GLF_IDENTITY(mat2(1.0), (true ? mat2(1.0) : _GLF_FUZZED(mat2(-1.0, 4259.9849, 571.648, 32.76)))) * (injectionSwitch)), vec2(mat2(1.0) * (injectionSwitch))))))), vec2(_GLF_IDENTITY(vec2(mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(min(vec2(mat2(1.0) * (injectionSwitch)), vec2(mat2(1.0) * (injectionSwitch))), (false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(-1642.5690, -626.790), vec2(mat2(vec2(-1642.5690, -626.790), sqrt(0.0), 0.0)))) : min(vec2(_GLF_IDENTITY(mat2(1.0), (true ? mat2(1.0) : _GLF_FUZZED(mat2(-1.0, 4259.9849, 571.648, 32.76)))) * (injectionSwitch)), vec2(mat2(1.0) * (injectionSwitch))))))))))) - vec2(0.0, 0.0)))) - vec2(0.0, 0.0))), abs(0.0), 0.0, 0.0, 1.0, 1.0, 1.0)))[1], max((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) - mat2(0.0, 0.0, 0.0, 0.0)) * (injectionSwitch), (_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(_GLF_IDENTITY(vec2(mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(min(vec2(mat2(1.0) * (injectionSwitch)), vec2(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))))), (_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(-1642.5690, -626.790)) : min(vec2(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (true ? mat2(1.0) : _GLF_FUZZED(mat2(-1.0, 4259.9849, 571.648, 32.76)))), transpose(transpose(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (true ? mat2(1.0) : _GLF_FUZZED(mat2(-1.0, 4259.9849, 571.648, 32.76)))), (false ? _GLF_FUZZED(mat2(9.9, 2285.8460, 596.988, 1.2)) : _GLF_IDENTITY(mat2(1.0), (true ? mat2(1.0) : _GLF_FUZZED(mat2(-1.0, 4259.9849, 571.648, 32.76))))))))) * (injectionSwitch)), vec2(mat2(1.0) * (injectionSwitch))), (false ? _GLF_FUZZED(vec2(-1642.5690, -626.790)) : min(vec2(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (true ? mat2(1.0) : _GLF_FUZZED(mat2(-1.0, 4259.9849, 571.648, 32.76)))), transpose(transpose(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (true ? mat2(1.0) : _GLF_FUZZED(mat2(-1.0, 4259.9849, 571.648, 32.76)))), (false ? _GLF_FUZZED(mat2(9.9, 2285.8460, 596.988, 1.2)) : _GLF_IDENTITY(mat2(1.0), (true ? mat2(1.0) : _GLF_FUZZED(mat2(-1.0, 4259.9849, 571.648, 32.76))))))))) * (injectionSwitch)), vec2(mat2(1.0) * (injectionSwitch)))) - sqrt(sqrt(vec2(0.0, 0.0)))))))))) - vec2(0.0, 0.0)))) - vec2(0.0, 0.0)))[1], (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), abs(vec2(0.0, 0.0)) + (_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2(_GLF_FUZZED(6825.2331), (mat2(1.0) * (injectionSwitch))[1]), vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED(-2476.8347)), bvec2(true, false))))), (_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(_GLF_IDENTITY(vec2(mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(min(vec2(mat2(1.0) * (injectionSwitch)), vec2(mat2(1.0) * (injectionSwitch))), (false ? _GLF_FUZZED(vec2(-1642.5690, -626.790)) : _GLF_IDENTITY(min(vec2(_GLF_IDENTITY(mat2(1.0), (true ? mat2(1.0) : _GLF_FUZZED(mat2(-1.0, 4259.9849, 571.648, 32.76)))) * (injectionSwitch)), vec2(mat2(1.0) * (injectionSwitch))), (false ? _GLF_FUZZED(ceil(vec2(7.2, -457.512))) : min(vec2(_GLF_IDENTITY(mat2(1.0), (true ? mat2(1.0) : _GLF_FUZZED(_GLF_IDENTITY(mat2(-1.0, 4259.9849, 571.648, 32.76), (false ? _GLF_FUZZED(mat2(-7.4, -8.9, 879.399, -3.7)) : mat2(-1.0, 4259.9849, 571.648, 32.76)))))) * (injectionSwitch)), vec2(mat2(1.0) * (injectionSwitch))))))))))) - vec2(0.0, 0.0)))) - vec2(0.0, 0.0)))[1])) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-16.74, (-16.74) - 0.0)), min(_GLF_FUZZED(_GLF_IDENTITY(-16.74, (-16.74) - 0.0)), _GLF_FUZZED(_GLF_IDENTITY(-16.74, (-16.74) - 0.0))))))), bvec2(true, true))).x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   barrier();
  }
 atomicStore(buf[virtual_gid], uint(1), 4, 64, _GLF_IDENTITY(4, _GLF_IDENTITY((4), clamp(_GLF_IDENTITY((4), min((4), (4))), (4), (4))) - ((0 | 0) << _GLF_IDENTITY(int(3), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(3, 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(3, clamp(3, 3, _GLF_IDENTITY(3, _GLF_IDENTITY(1, ~ (~ (1))) * _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(3, (_GLF_IDENTITY(3, 0 | (3))) << 0), min(3, 3))), 0 ^ ((_GLF_IDENTITY(_GLF_IDENTITY(3, min(3, 3)), (_GLF_IDENTITY(3, min(3, 3))) * 1))))))), (3) ^ 0)))), (true ? _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(3, 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(3, clamp(3, 3, _GLF_IDENTITY(3, 1 * (_GLF_IDENTITY(3, min(3, 3)))))), (3) ^ 0))), (false ? _GLF_FUZZED(36430) : _GLF_IDENTITY(3, 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(3, clamp(3, 3, _GLF_IDENTITY(3, 1 * (_GLF_IDENTITY(3, min(3, 3)))))), 0 + (_GLF_IDENTITY(3, _GLF_IDENTITY(clamp(3, 3, _GLF_IDENTITY(3, 1 * (_GLF_IDENTITY(3, min(3, 3))))), (0 << _GLF_IDENTITY(int(8), int(8))) | (clamp(3, 3, _GLF_IDENTITY(3, 1 * (_GLF_IDENTITY(3, min(3, 3)))))))))), (3) ^ 0)))))), 0 | (int(_GLF_IDENTITY(3, 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(3, clamp(3, 3, _GLF_IDENTITY(3, 1 * (_GLF_IDENTITY(3, min(3, 3)))))), (3) ^ 0), int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(3, clamp(3, 3, _GLF_IDENTITY(3, 1 * (_GLF_IDENTITY(3, min(3, 3)))))), (3) ^ 0), (0 & 90515))))))))) : _GLF_FUZZED(-6109))), ~ (~ (int(_GLF_IDENTITY(3, 0 ^ _GLF_IDENTITY((_GLF_IDENTITY(3, (3) ^ 0)), ((_GLF_IDENTITY(3, (3) ^ 0))) + (0 & 91726)))))))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-826.513), _GLF_FUZZED(879.937)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), (_GLF_IDENTITY(false ? _GLF_FUZZED(-54822) : _GLF_IDENTITY(1, (1) ^ 0), ~ (~ (_GLF_IDENTITY(false ? _GLF_FUZZED(-54822) : _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) + 0), (1) ^ 0), (1 ^ 0) * (_GLF_IDENTITY(false ? _GLF_FUZZED(-54822) : _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) + 0), (1) ^ 0), min(false ? _GLF_FUZZED(-54822) : _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) + 0), (1) ^ 0), false ? _GLF_FUZZED(-54822) : _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) + 0), (1) ^ 0)))))))))) < subgroup_size)
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (_GLF_IDENTITY(false, bool(bool(false))))))))), _GLF_IDENTITY(bool(bvec4(false, false, _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))), true)), ! _GLF_IDENTITY((! (bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), ((! (bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 1.0, 0.0))))), true))))) || false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (bool(false))))), true, true)))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(dot(vec3(0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) + 0.0)), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           return;
          }
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))), false))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, ! (! (true)))) && (_GLF_IDENTITY(false, ! (! (false)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), true))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (false) || false)))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), 0.0, 0.0, 1.0, abs(0.0), 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 1.0, 1.0, 0.0, 1.0)), min(float(mat3x4(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), 0.0, 0.0, 1.0, abs(0.0), 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 1.0, 1.0, 0.0, 1.0)), float(mat3x4(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), 0.0, 0.0, 1.0, abs(0.0), 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 1.0, 1.0, 0.0, 1.0)))))))))))
      barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(2), _GLF_IDENTITY(4, _GLF_IDENTITY(min(_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, 0 ^ (4)) : _GLF_FUZZED(4848))), 4), max(min(_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, 0 ^ (4)) : _GLF_FUZZED(4848))), 4), _GLF_IDENTITY(min(_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, 0 ^ (4)) : _GLF_FUZZED(4848))), 4), max(_GLF_IDENTITY(min(_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, 0 ^ (4)) : _GLF_FUZZED(4848))), 4), ~ (~ (min(_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, 0 ^ (4)) : _GLF_FUZZED(4848))), 4)))), min(_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, 0 ^ (4)) : _GLF_FUZZED(4848))), 4)))))), 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), true, false)))))
    barrier();
   subgroupAll(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)), true))), bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)), true)))))));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(vec2(0.0, 0.0), vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), _GLF_IDENTITY(vec2(0.0, 0.0), (_GLF_IDENTITY(true ? vec2(0.0, 0.0) : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), vec2(_GLF_IDENTITY(vec4(_GLF_FUZZED(injectionSwitch), 0.0, 0.0), mix(vec4(_GLF_FUZZED(-3085.1486), _GLF_FUZZED(-576.048), _GLF_FUZZED(3.1), (vec4(_GLF_FUZZED(injectionSwitch), 0.0, 0.0))[3]), vec4((vec4(_GLF_FUZZED(injectionSwitch), 0.0, 0.0))[0], (vec4(_GLF_FUZZED(injectionSwitch), 0.0, 0.0))[1], _GLF_IDENTITY((vec4(_GLF_FUZZED(injectionSwitch), 0.0, 0.0))[2], mix(float(_GLF_FUZZED(-98.79)), float((vec4(_GLF_FUZZED(injectionSwitch), 0.0, 0.0))[2]), bool(true))), _GLF_FUZZED(75.08)), bvec4(true, true, true, false))))), mix(vec2((true ? vec2(0.0, 0.0) : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), vec2(_GLF_IDENTITY(vec4(_GLF_FUZZED(injectionSwitch), 0.0, 0.0), mix(vec4(_GLF_FUZZED(-3085.1486), _GLF_FUZZED(-576.048), _GLF_FUZZED(3.1), (vec4(_GLF_FUZZED(injectionSwitch), 0.0, 0.0))[3]), vec4((vec4(_GLF_FUZZED(injectionSwitch), 0.0, 0.0))[0], (vec4(_GLF_FUZZED(injectionSwitch), 0.0, 0.0))[1], _GLF_IDENTITY((vec4(_GLF_FUZZED(injectionSwitch), 0.0, 0.0))[2], mix(float(_GLF_FUZZED(-98.79)), float((vec4(_GLF_FUZZED(injectionSwitch), 0.0, 0.0))[2]), bool(true))), _GLF_FUZZED(75.08)), bvec4(true, true, true, false))))))[0], _GLF_FUZZED(639.387)), vec2(_GLF_FUZZED(-525.966), (true ? vec2(0.0, 0.0) : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), vec2(_GLF_IDENTITY(vec4(_GLF_FUZZED(injectionSwitch), 0.0, 0.0), mix(vec4(_GLF_FUZZED(-3085.1486), _GLF_FUZZED(-576.048), _GLF_FUZZED(3.1), (vec4(_GLF_FUZZED(injectionSwitch), 0.0, 0.0))[3]), vec4((vec4(_GLF_FUZZED(injectionSwitch), 0.0, 0.0))[0], (vec4(_GLF_FUZZED(injectionSwitch), 0.0, 0.0))[1], _GLF_IDENTITY((vec4(_GLF_FUZZED(injectionSwitch), 0.0, 0.0))[2], mix(float(_GLF_FUZZED(-98.79)), float((vec4(_GLF_FUZZED(injectionSwitch), 0.0, 0.0))[2]), bool(true))), _GLF_FUZZED(75.08)), bvec4(true, true, true, false))))))[1]), bvec2(false, true)))))))), vec2(mat2x4(_GLF_IDENTITY(vec2(vec2(0.0, 0.0)), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (vec2(vec2(0.0, 0.0)))), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)))))).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(2), 4, _GLF_IDENTITY(_GLF_IDENTITY(64, (64) + _GLF_IDENTITY((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(8), clamp(int(8), int(8), int(8))), int(8))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3((0 << _GLF_IDENTITY(int(8), int(8))), 0, 1), min(ivec3((0 << _GLF_IDENTITY(int(8), int(8))), 0, 1), ivec3((0 << _GLF_IDENTITY(int(8), int(8))), 0, 1)))), clamp(int(ivec3(_GLF_IDENTITY((0 << _GLF_IDENTITY(int(8), int(8))), int(_GLF_IDENTITY(ivec4((0 << _GLF_IDENTITY(int(8), int(8))), ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))), 0, 1), (ivec4((0 << _GLF_IDENTITY(int(8), int(8))), ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))), 0, 1)) - ivec4(0, 0, 0, 0)))), 0, 1)), int(ivec3((_GLF_IDENTITY(0, (0) >> 0) << _GLF_IDENTITY(int(8), int(8))), _GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec4(0, 1, 0, 0)), 1 * (int(ivec4(0, 1, 0, 0))))), 1)), int(ivec3((0 << _GLF_IDENTITY(int(8), int(8))), 0, 1)))))), _GLF_IDENTITY(_GLF_IDENTITY(min(64, 64), max(min(64, _GLF_IDENTITY(64, (64) | (64))), min(64, 64))), clamp(_GLF_IDENTITY(min(64, 64), max(min(64, _GLF_IDENTITY(64, (64) | (64))), min(64, 64))), _GLF_IDENTITY(min(64, 64), max(min(64, _GLF_IDENTITY(64, (64) | (64))), min(64, 64))), _GLF_IDENTITY(min(64, 64), max(min(64, _GLF_IDENTITY(64, (64) | (64))), min(64, 64)))))), 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), mix(float(_GLF_FUZZED(3.0)), float(max(injectionSwitch.x, injectionSwitch.x)), bool(true))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 0.0, 1.0), mat2(_GLF_IDENTITY(mat2(mat2(_GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), mix(float(_GLF_FUZZED(3.0)), float(max(injectionSwitch.x, injectionSwitch.x)), bool(true))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 0.0, 1.0)), (true ? mat2(mat2(_GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), mix(float(_GLF_FUZZED(3.0)), float(max(injectionSwitch.x, injectionSwitch.x)), bool(true))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 0.0, 1.0)) : _GLF_FUZZED(mat2(-873.974, -713.787, 4.0, -9.2))))))))))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (_GLF_IDENTITY(! (! (false)), false || (! (! (false))))))))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (false)), (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, true), bvec2(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, true), true)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), false, false, false))))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, true), true), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, true), true), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, true), true), false)))))))), true)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), false, false, false)))))) || false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     return;
    }
   subgroupAll(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), ! (! (true))));
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
