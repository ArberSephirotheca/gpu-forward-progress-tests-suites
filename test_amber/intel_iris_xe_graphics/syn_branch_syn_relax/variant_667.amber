#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 430

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_7 {
 mat3x2 _f0;
 uvec4 _f1;
 vec3 _f2;
 vec2 _f3;
 bvec3 _f4;
 bvec2 _f5;
} ;

struct _GLF_struct_6 {
 vec3 _f0;
 uvec4 _f1;
 bvec4 _f2;
 ivec4 _f3;
 vec3 _f4;
 mat3x4 _f5;
 mat3 _f6;
} ;

struct _GLF_struct_8 {
 _GLF_struct_6 _f0;
 _GLF_struct_7 _f1;
} ;

struct _GLF_struct_4 {
 ivec3 _f0;
 bvec3 _f1;
} ;

struct _GLF_struct_3 {
 bvec3 _f0;
 bool _f1;
 uvec2 _f2;
} ;

struct _GLF_struct_5 {
 _GLF_struct_3 _f0;
 ivec3 _f1;
 _GLF_struct_4 _f2;
 mat2 _f3;
 ivec2 _f4;
} ;

struct _GLF_struct_1 {
 vec4 _f0;
} ;

struct _GLF_struct_0 {
 int _f0;
 mat2 _f1;
 ivec3 _f2;
 mat4x3 _f3;
 uint _f4;
 mat2x3 _f5;
 mat4x2 _f6;
} ;

struct _GLF_struct_2 {
 int _f0;
 _GLF_struct_0 _f1;
 _GLF_struct_1 _f2;
} ;

struct _GLF_struct_9 {
 _GLF_struct_2 _f0;
 _GLF_struct_5 _f1;
 uint num_workgroup;
 mat3x4 _f2;
 mat2 _f3;
 mat4 _f4;
 _GLF_struct_8 _f5;
 mat4 _f6;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 _GLF_struct_9 _GLF_struct_replacement_9 = _GLF_struct_9(_GLF_struct_2(1, _GLF_struct_0(1, mat2(1.0), ivec3(1), mat4x3(1.0), 1u, mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 1.0 * (1.0)), float(mat2x4(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 0.0, cos(0.0), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), tan(0.0), 0.0))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 1.0 * (1.0)), float(mat2x4(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 0.0, cos(0.0), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), tan(0.0), 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 1.0 * (1.0)), float(mat2x4(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 0.0, cos(0.0), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), tan(0.0), 0.0))), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, 1.0 * (1.0)), float(mat2x4(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 0.0, cos(0.0), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), tan(0.0), 0.0)))) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(1.0, 1.0 * (1.0)), float(mat2x4(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 0.0, cos(0.0), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), tan(0.0), 0.0)))))), mat4x2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))))), _GLF_struct_1(vec4(1.0))), _GLF_struct_5(_GLF_struct_3(_GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(bvec4(bvec3(true), true)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(true), true))), bvec3(bvec4(bvec3(bvec3(bvec4(bvec3(true), true))), _GLF_IDENTITY(false, (false) || false))))))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (_GLF_IDENTITY(! (! (true)), ! (! (! (! (true))))))))), _GLF_IDENTITY(uvec2(1u), uvec2(uvec2(uvec2(1u))))), _GLF_IDENTITY(ivec3(1), max(ivec3(1), ivec3(1))), _GLF_struct_4(ivec3(1), bvec3(true)), mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0))), _GLF_IDENTITY(ivec2(1), (_GLF_IDENTITY(ivec2(0, 0), _GLF_IDENTITY(_GLF_IDENTITY((ivec2(0, 0)), max((ivec2(0, 0)), (ivec2(0, 0)))) << ivec2(0, 0), (_GLF_IDENTITY(_GLF_IDENTITY((ivec2(0, 0)), max((ivec2(0, 0)), (ivec2(0, 0)))) << _GLF_IDENTITY(ivec2(0, 0), _GLF_IDENTITY(ivec2(ivec2(ivec2(0, 0))), (true ? ivec2(ivec2(ivec2(0, 0))) : _GLF_FUZZED(ivec2(-94961, 82441))))), clamp(_GLF_IDENTITY((ivec2(0, 0)), max((ivec2(0, 0)), (ivec2(0, 0)))) << ivec2(0, 0), _GLF_IDENTITY((ivec2(0, 0)), max((ivec2(0, 0)), (ivec2(0, 0)))) << ivec2(_GLF_IDENTITY(0, (0) | (0)), 0), _GLF_IDENTITY(_GLF_IDENTITY((ivec2(0, 0)), max((ivec2(0, 0)), (ivec2(0, 0)))) << ivec2(0, 0), clamp(_GLF_IDENTITY((ivec2(0, 0)), max((ivec2(0, 0)), (ivec2(0, 0)))) << ivec2(0, 0), _GLF_IDENTITY((ivec2(0, 0)), max((ivec2(0, 0)), (ivec2(0, 0)))) << ivec2(0, 0), _GLF_IDENTITY((ivec2(0, 0)), max((ivec2(0, 0)), (ivec2(0, 0)))) << ivec2(0, 0)))))) * ivec2(1, 1))) << _GLF_IDENTITY(ivec2(5), ivec2(5))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, (_GLF_IDENTITY(true ? 0 : _GLF_IDENTITY(_GLF_FUZZED(-91722), min(_GLF_FUZZED(-91722), _GLF_FUZZED(-91722))), 0 ^ (true ? 0 : _GLF_FUZZED(-91722))))))) | 0), 0 | (_GLF_IDENTITY((_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(true ? 0 : _GLF_FUZZED(_GLF_IDENTITY(-91722, int(_GLF_IDENTITY(ivec2(-91722, (0 ^ 0)), (ivec2(-91722, (0 ^ 0))) ^ ivec2(0, 0))))), 0 ^ (true ? 0 : _GLF_FUZZED(-91722)))), ~ (~ ((_GLF_IDENTITY(true ? 0 : _GLF_FUZZED(_GLF_IDENTITY(-91722, int(_GLF_IDENTITY(ivec2(-91722, (0 ^ 0)), (ivec2(-91722, (_GLF_IDENTITY(0, (0) >> int(_GLF_ZERO(0.0, injectionSwitch.x))) ^ 0))) ^ ivec2(0, 0))))), 0 ^ (true ? 0 : _GLF_FUZZED(-91722)))))))))) | 0), (_GLF_IDENTITY((_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, (_GLF_IDENTITY(true ? 0 : _GLF_FUZZED(-91722), 0 ^ (true ? 0 : _GLF_FUZZED(-91722))))))) | _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, ~ (~ (0)))))), ((_GLF_IDENTITY(0, _GLF_IDENTITY(0 ^ (_GLF_IDENTITY(0, (_GLF_IDENTITY(true ? 0 : _GLF_FUZZED(-91722), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, true, false, true))) ? 0 : _GLF_FUZZED(-91722), int(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, true, false, true))) ? 0 : _GLF_FUZZED(-91722), (_GLF_IDENTITY(true, bool(bvec4(true, true, false, true))) ? 0 : _GLF_FUZZED(-91722)) << 0)))))))), (0 & -80615) | (0 ^ (_GLF_IDENTITY(0, (_GLF_IDENTITY(true ? _GLF_IDENTITY(0, int(ivec4(0, 0, 0, 0))) : _GLF_FUZZED(-91722), 0 ^ (true ? 0 : _GLF_FUZZED(-91722))))))))) | 0)) - 0)) | ((_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, (_GLF_IDENTITY(true ? 0 : _GLF_FUZZED(-91722), 0 ^ (true ? 0 : _GLF_IDENTITY(_GLF_FUZZED(-91722), (_GLF_FUZZED(-91722)) << 0))))))) | 0))))) | (1))), _GLF_IDENTITY((ivec2(1)) + ivec2(0, 0), (false ? _GLF_FUZZED(ivec2(92063, 19652)) : (ivec2(1)) + ivec2(0, 0)))), ivec2(ivec4(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (0 | 0) | (1))), (ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, min(1, 1)), _GLF_IDENTITY(1, min(1, 1)))), ~ (~ (1))))) + ivec2(0, 0)), 1, 0))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec3(1, 1, 1))), (0 | 0) | (1))), (ivec2(1)) + ivec2(0, 0))), ivec2(0, 0) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec3(1, 1, 1))), (0 | 0) | (1))), (ivec2(1)) + ivec2(0, 0))), (~ (_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec3(1, 1, 1))), (0 | 0) | (1))), (ivec2(1)) + ivec2(0, 0)))) - ivec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), ((ivec2(1, 1) << _GLF_IDENTITY(ivec2(6), ivec2(6))) >> _GLF_IDENTITY(ivec2(_GLF_IDENTITY(6, (_GLF_IDENTITY(6, clamp(_GLF_IDENTITY(_GLF_IDENTITY(6, (6) | (_GLF_IDENTITY(6, (true ? 6 : _GLF_FUZZED(52930))))), (6) ^ 0), _GLF_IDENTITY(6, max(6, 6)), _GLF_IDENTITY(6, clamp(_GLF_IDENTITY(6, (_GLF_IDENTITY(_GLF_IDENTITY(6, int(_GLF_IDENTITY(ivec4(6, 0, 1, 1), (_GLF_IDENTITY(ivec4(6, 0, 1, 1), (true ? ivec4(6, 0, 1, 1) : _GLF_FUZZED(ivec4(-34313, -17157, 39015, 95767))))) - (ivec4(-6554, 9063, 50123, 52781) & ivec4(0, 0, 0, 0))))), min(6, 6))) >> 0), _GLF_IDENTITY(6, (6) - 0), 6))))) * 1)), ivec2(6))) * (~ (_GLF_IDENTITY(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, max(0, 0)), 0)) | 0) | _GLF_IDENTITY((_GLF_IDENTITY(1, min(1, 1))), int(_GLF_IDENTITY(ivec4((_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, _GLF_IDENTITY((1) | (_GLF_IDENTITY(1, (1) * 1)), int(_GLF_IDENTITY(ivec4((1) | (_GLF_IDENTITY(1, (1) * 1)), 1, 1, 1), (ivec4((1) | (_GLF_IDENTITY(1, (1) * 1)), 1, 1, 1)) + ivec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))))), 1))), 0, 1, 0), (ivec4((_GLF_IDENTITY(1, min(1, 1))), 0, 1, 0)) | _GLF_IDENTITY((ivec4((_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), ~ (~ (_GLF_IDENTITY(1, min(1, 1)))))), 0, 1, _GLF_IDENTITY(0, int(int(0))))), ((ivec4((_GLF_IDENTITY(1, min(1, 1))), _GLF_IDENTITY(0, (false ? _GLF_FUZZED(56089) : 0)), 1, 0))) << ivec4(0, 0, _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (0) | (0)))), 0))))))), (_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) | (1))), ivec2(1, 1) * (ivec2(_GLF_IDENTITY(1, (1) | (1)))))) + _GLF_IDENTITY(ivec2(0, 0), ivec2(0, 0) ^ (ivec2(0, 0)))), (_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(0, min(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), max(0, 0)), 0)) | 0, ~ (~ (_GLF_IDENTITY(0, min(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), max(0, 0)), 0)) | 0)))) | _GLF_IDENTITY((_GLF_IDENTITY(1, min(1, 1))), int(_GLF_IDENTITY(ivec4((_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) * 1))))), 1))), 0, 1, 0), (ivec4((_GLF_IDENTITY(1, min(1, 1))), 0, 1, 0)) | _GLF_IDENTITY((ivec4((_GLF_IDENTITY(1, min(1, 1))), 0, 1, 0)), ((ivec4((_GLF_IDENTITY(1, min(1, 1))), 0, 1, 0))) << ivec4(0, 0, 0, 0))))))), (ivec2(_GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), max((1) | (1), (1) | (1)))))) + _GLF_IDENTITY(_GLF_IDENTITY(ivec2(0, 0), ivec2(0, 0) ^ (ivec2(0, 0))), (_GLF_IDENTITY(ivec2(0, 0), ivec2(0, 0) ^ (ivec2(0, 0)))) << ivec2(_GLF_IDENTITY(0, min(0, 0)), 0)))) ^ ivec2(0, 0)))))))))), gl_NumWorkGroups.x, mat3x4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(exp(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(6.5) : 0.0))), _GLF_IDENTITY(float(mat3(exp(0.0), 1.0, 0.0, 1.0, determinant(mat2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), clamp(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0)))), _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0))))) - 0.0), 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)))))), abs(1.0), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0))), 0.0, 1.0)), (float(mat3(exp(0.0), 1.0, 0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), abs(1.0), _GLF_IDENTITY(dot(vec4(0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, float(mat2x3(0.0, sin(0.0), determinant(mat2(1.0, 0.0, 0.0, 1.0)), log(1.0), 0.0, 0.0))), _GLF_IDENTITY(0.0, 1.0 * (0.0)))), 1.0), vec4(1.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0))), 0.0, 1.0))) + 0.0)) * (_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-813.747) : 1.0)), 1.0))))), _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0)))), mat2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat4(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) - mat2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-143.823) : injectionSwitch.x)))))), (true ? mat4(mat2(1.0)) : _GLF_FUZZED(mat4(_GLF_IDENTITY(-381.579, clamp(-381.579, -381.579, _GLF_IDENTITY(-381.579, clamp(-381.579, -381.579, -381.579)))), 4.7, 1.2, 9.6, 4715.5772, -263.337, 4.4, 33.78, 5779.8836, -6.4, 2726.3486, 131.085, 8.0, -0.1, -75.31, 6277.3493)))), mat4(1.0) * (_GLF_IDENTITY(mat4(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) - mat2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-143.823) : injectionSwitch.x)))))), _GLF_IDENTITY((true ? mat4(mat2(1.0)) : _GLF_FUZZED(mat4(_GLF_IDENTITY(_GLF_IDENTITY(-381.579, (-381.579) / 1.0), clamp(-381.579, -381.579, _GLF_IDENTITY(-381.579, clamp(-381.579, -381.579, -381.579)))), 4.7, 1.2, 9.6, 4715.5772, -263.337, 4.4, 33.78, 5779.8836, -6.4, 2726.3486, 131.085, 8.0, -0.1, -75.31, 6277.3493))), mat4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + ((true ? mat4(mat2(1.0)) : _GLF_FUZZED(mat4(_GLF_IDENTITY(_GLF_IDENTITY(-381.579, (-381.579) / 1.0), clamp(-381.579, -381.579, _GLF_IDENTITY(-381.579, clamp(-381.579, -381.579, -381.579)))), 4.7, 1.2, 9.6, 4715.5772, -263.337, 4.4, 33.78, 5779.8836, -6.4, 2726.3486, 131.085, 8.0, -0.1, -75.31, 6277.3493)))))))), (_GLF_IDENTITY(mat4(mat2(1.0)), _GLF_IDENTITY((true ? mat4(mat2(1.0)) : _GLF_FUZZED(_GLF_IDENTITY(mat4(_GLF_IDENTITY(-381.579, clamp(-381.579, -381.579, _GLF_IDENTITY(-381.579, clamp(_GLF_IDENTITY(-381.579, (-381.579) - _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)))), -381.579, -381.579)))), 4.7, 1.2, 9.6, 4715.5772, -263.337, 4.4, 33.78, 5779.8836, -6.4, 2726.3486, 131.085, 8.0, _GLF_IDENTITY(-0.1, clamp(_GLF_IDENTITY(-0.1, (true ? -0.1 : _GLF_FUZZED(830.985))), -0.1, -0.1)), -75.31, 6277.3493), transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(_GLF_IDENTITY(mat4(_GLF_IDENTITY(-381.579, clamp(-381.579, -381.579, _GLF_IDENTITY(-381.579, clamp(-381.579, -381.579, -381.579)))), 4.7, 1.2, 9.6, 4715.5772, -263.337, 4.4, 33.78, 5779.8836, -6.4, 2726.3486, 131.085, 8.0, _GLF_IDENTITY(-0.1, clamp(_GLF_IDENTITY(-0.1, (true ? -0.1 : _GLF_FUZZED(830.985))), -0.1, -0.1)), -75.31, 6277.3493), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4(_GLF_IDENTITY(-381.579, clamp(-381.579, -381.579, _GLF_IDENTITY(-381.579, clamp(-381.579, -381.579, -381.579)))), 4.7, 1.2, 9.6, 4715.5772, -263.337, 4.4, 33.78, 5779.8836, -6.4, 2726.3486, 131.085, 8.0, _GLF_IDENTITY(-0.1, clamp(_GLF_IDENTITY(-0.1, (true ? -0.1 : _GLF_FUZZED(830.985))), -0.1, -0.1)), -75.31, 6277.3493))), (true ? _GLF_IDENTITY(mat4(_GLF_IDENTITY(-381.579, clamp(-381.579, _GLF_IDENTITY(-381.579, min(-381.579, -381.579)), _GLF_IDENTITY(-381.579, clamp(-381.579, -381.579, -381.579)))), 4.7, 1.2, 9.6, 4715.5772, -263.337, 4.4, 33.78, 5779.8836, -6.4, 2726.3486, 131.085, 8.0, _GLF_IDENTITY(-0.1, clamp(_GLF_IDENTITY(-0.1, (true ? -0.1 : _GLF_FUZZED(830.985))), -0.1, -0.1)), -75.31, 6277.3493), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(373.979) : 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4(_GLF_IDENTITY(-381.579, clamp(-381.579, -381.579, _GLF_IDENTITY(-381.579, clamp(-381.579, -381.579, -381.579)))), 4.7, 1.2, 9.6, 4715.5772, -263.337, 4.4, 33.78, 5779.8836, -6.4, 2726.3486, 131.085, 8.0, _GLF_IDENTITY(-0.1, clamp(_GLF_IDENTITY(-0.1, (true ? -0.1 : _GLF_FUZZED(830.985))), -0.1, -0.1)), _GLF_IDENTITY(-75.31, (-75.31) + log(1.0)), 6277.3493))) : _GLF_FUZZED(mat4(-0.2, -7.0, -6.6, 7509.6962, 599.738, -515.716, 5.8, -4103.8184, -7.0, 45.01, -4.3, 5886.6256, 3.5, 3.7, 8.7, -8903.0689))))), mat4(1.0) * (transpose(_GLF_IDENTITY(mat4(_GLF_IDENTITY(-381.579, clamp(-381.579, -381.579, _GLF_IDENTITY(-381.579, clamp(-381.579, -381.579, -381.579)))), 4.7, 1.2, 9.6, 4715.5772, -263.337, 4.4, 33.78, 5779.8836, -6.4, 2726.3486, 131.085, 8.0, _GLF_IDENTITY(-0.1, clamp(_GLF_IDENTITY(-0.1, (true ? -0.1 : _GLF_FUZZED(830.985))), -0.1, -0.1)), -75.31, 6277.3493), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4(_GLF_IDENTITY(-381.579, clamp(-381.579, -381.579, _GLF_IDENTITY(-381.579, clamp(-381.579, -381.579, -381.579)))), 4.7, 1.2, 9.6, 4715.5772, -263.337, 4.4, 33.78, 5779.8836, -6.4, 2726.3486, 131.085, 8.0, _GLF_IDENTITY(-0.1, clamp(_GLF_IDENTITY(-0.1, (true ? -0.1 : _GLF_FUZZED(830.985))), -0.1, -0.1)), -75.31, 6277.3493)))))))))), (false ? _GLF_FUZZED(mat4(-9.9, -31.00, 40.63, 922.487, 8192.7422, 262.258, 99.49, -0.1, -884.216, -1002.3926, -5314.6670, -3.2, 5.2, 476.229, -10.35, -7111.4228)) : (true ? mat4(mat2(1.0)) : _GLF_FUZZED(_GLF_IDENTITY(mat4(_GLF_IDENTITY(-381.579, clamp(-381.579, -381.579, _GLF_IDENTITY(-381.579, clamp(_GLF_IDENTITY(-381.579, (-381.579) - _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)))), -381.579, -381.579)))), 4.7, 1.2, 9.6, 4715.5772, -263.337, 4.4, 33.78, 5779.8836, -6.4, 2726.3486, 131.085, 8.0, _GLF_IDENTITY(-0.1, clamp(_GLF_IDENTITY(-0.1, (true ? -0.1 : _GLF_FUZZED(830.985))), -0.1, -0.1)), -75.31, 6277.3493), transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(_GLF_IDENTITY(mat4(_GLF_IDENTITY(-381.579, clamp(-381.579, -381.579, _GLF_IDENTITY(-381.579, clamp(-381.579, -381.579, -381.579)))), 4.7, 1.2, 9.6, 4715.5772, -263.337, 4.4, 33.78, 5779.8836, -6.4, 2726.3486, 131.085, 8.0, _GLF_IDENTITY(-0.1, clamp(_GLF_IDENTITY(-0.1, (true ? -0.1 : _GLF_FUZZED(830.985))), -0.1, -0.1)), -75.31, 6277.3493), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4(_GLF_IDENTITY(-381.579, clamp(-381.579, -381.579, _GLF_IDENTITY(-381.579, clamp(-381.579, -381.579, -381.579)))), 4.7, 1.2, 9.6, 4715.5772, -263.337, 4.4, 33.78, 5779.8836, -6.4, 2726.3486, 131.085, 8.0, _GLF_IDENTITY(-0.1, clamp(_GLF_IDENTITY(-0.1, (true ? -0.1 : _GLF_FUZZED(830.985))), -0.1, -0.1)), -75.31, 6277.3493))), (true ? _GLF_IDENTITY(mat4(_GLF_IDENTITY(-381.579, clamp(-381.579, _GLF_IDENTITY(-381.579, min(-381.579, -381.579)), _GLF_IDENTITY(-381.579, clamp(-381.579, -381.579, -381.579)))), 4.7, 1.2, 9.6, 4715.5772, -263.337, 4.4, 33.78, 5779.8836, -6.4, 2726.3486, 131.085, 8.0, _GLF_IDENTITY(-0.1, clamp(_GLF_IDENTITY(-0.1, (true ? -0.1 : _GLF_FUZZED(830.985))), -0.1, -0.1)), -75.31, 6277.3493), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(373.979) : 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4(_GLF_IDENTITY(-381.579, clamp(-381.579, -381.579, _GLF_IDENTITY(-381.579, clamp(-381.579, -381.579, -381.579)))), 4.7, 1.2, 9.6, 4715.5772, -263.337, 4.4, 33.78, 5779.8836, -6.4, 2726.3486, 131.085, 8.0, _GLF_IDENTITY(-0.1, clamp(_GLF_IDENTITY(-0.1, (true ? -0.1 : _GLF_FUZZED(830.985))), -0.1, -0.1)), _GLF_IDENTITY(-75.31, (-75.31) + log(1.0)), 6277.3493))) : _GLF_FUZZED(mat4(-0.2, -7.0, -6.6, 7509.6962, 599.738, -515.716, 5.8, -4103.8184, -7.0, 45.01, -4.3, 5886.6256, 3.5, 3.7, 8.7, -8903.0689))))), mat4(1.0) * (transpose(_GLF_IDENTITY(mat4(_GLF_IDENTITY(-381.579, clamp(-381.579, -381.579, _GLF_IDENTITY(-381.579, clamp(-381.579, -381.579, -381.579)))), 4.7, 1.2, 9.6, 4715.5772, -263.337, 4.4, 33.78, 5779.8836, -6.4, 2726.3486, 131.085, 8.0, _GLF_IDENTITY(-0.1, clamp(_GLF_IDENTITY(-0.1, (true ? -0.1 : _GLF_FUZZED(830.985))), -0.1, -0.1)), -75.31, 6277.3493), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4(_GLF_IDENTITY(-381.579, clamp(-381.579, -381.579, _GLF_IDENTITY(-381.579, clamp(-381.579, -381.579, -381.579)))), 4.7, 1.2, 9.6, 4715.5772, -263.337, 4.4, 33.78, 5779.8836, -6.4, 2726.3486, 131.085, 8.0, _GLF_IDENTITY(-0.1, clamp(_GLF_IDENTITY(-0.1, (true ? -0.1 : _GLF_FUZZED(830.985))), -0.1, -0.1)), -75.31, 6277.3493)))))))))))))) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-9.1) : 0.0)), 0.0, _GLF_IDENTITY(0.0, (0.0) - tan(0.0)), 0.0, 0.0, 0.0)))), mat4(1.0), _GLF_struct_8(_GLF_struct_6(vec3(1.0), uvec4(1u), bvec4(true), ivec4(1), vec3(1.0), mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) - 0.0, clamp((1.0) - 0.0, (1.0) - 0.0, (1.0) - 0.0))), 1.0, 1.0)), 1.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / 1.0), clamp(1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(3.7) : 1.0)), (1.0) - 0.0), 1.0, 1.0)), 1.0)), _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) + sqrt(0.0)), 1.0)), clamp(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) + sqrt(0.0)), 1.0)), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) + sqrt(0.0)), 1.0)), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) + sqrt(0.0)), 1.0)))), (1.0) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), clamp(1.0, 1.0, 1.0)), 1.0)), 1.0))))), mat3(1.0)), _GLF_struct_7(mat3x2(1.0), uvec4(_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, uint(uvec2(1u, 1u)))))), vec3(1.0), _GLF_IDENTITY(vec2(1.0), cos(vec2(0.0, 0.0)) * (vec2(1.0))), bvec3(true), bvec2(true))), mat4(1.0));
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2])).x;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 1.0, determinant(mat4(0.0, 1.0, 1.0, 0.0, log(1.0), 0.0, 0.0, 0.0, 0.0, sin(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))), mat4x3(mat4x3(mat4x3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 1.0, determinant(mat4(0.0, 1.0, 1.0, 0.0, log(1.0), 0.0, 0.0, 0.0, 0.0, sin(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))))))))), (false ? _GLF_FUZZED(vec2(3.6, -83.42)) : injectionSwitch)).y), bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(log(vec2(-8685.9065, -8.2))))).y), false))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) && true)), false || (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) && true)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, uint(uvec4(_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id))) >> 0u), 0u, 1u, 0u))), min(_GLF_IDENTITY(workgroup_id, uint(uvec4(_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id))) >> 0u), 0u, 1u, 0u))), _GLF_IDENTITY(workgroup_id, uint(uvec4(_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id))) >> 0u), 0u, 1u, 0u)))));
 uint virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) >> uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) * 1.0), injectionSwitch.x))))) + subgroup_local_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), true && (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), false || (false)))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) + vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) / vec2(1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)))), injectionSwitch)).x > injectionSwitch.y), true, true), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (true) || false), true, false, false))))), true), true))))), true, true))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), (workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size)) | 0u);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 buf[virtual_gid] = _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) << 0)) / (1 & 1));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) || false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   return;
  }
 if(_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), max(~ (subgroup_local_id), ~ (subgroup_local_id))))) + 1 < _GLF_IDENTITY(subgroup_size, 0u | (_GLF_IDENTITY(subgroup_size, uint(uvec3(subgroup_size, 1u, _GLF_IDENTITY(0u, max(0u, 0u))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (! (! (_GLF_IDENTITY(false, true && (false)))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (! (! (_GLF_IDENTITY(false, true && (false)))))))))))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0))).x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y, injectionSwitch.y)), injectionSwitch.y))))) && true, (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y, injectionSwitch.y)), injectionSwitch.y))))) && true, true && ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y, injectionSwitch.y)), injectionSwitch.y)), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + length(vec2(0.0, 0.0))), max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) + 0.0)))))))) && true)), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y, injectionSwitch.y)), injectionSwitch.y))))) && true, true && ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y, injectionSwitch.y)), injectionSwitch.y)), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + length(vec2(0.0, 0.0))), max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) + 0.0)))))))) && true)), ! (! (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])))).y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) - 0.0)))))) && true, true && ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))[0], injectionSwitch[1])))).y, injectionSwitch.y)), injectionSwitch.y)), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + length(vec2(0.0, 0.0))), max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) + 0.0)))))))) && true)))))) && true)) && true))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), true, false))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), ! (! (! (_GLF_IDENTITY(false, false || (false)))))))))) || false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   int i = 0;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 0);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))), ((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))) || false))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))), ((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))) || false))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false))), (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))))), (! (_GLF_DEAD(false))) || false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            return;
           return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), false), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), true, false)), bvec2(bvec2(bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), false))), true, false))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)), false)))))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), true && (bool(bvec2(false, true))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)))))))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), 1.0 * ((injectionSwitch.x))) - 0.0) > injectionSwitch.y)))))))))), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), _GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))), bool(bvec2(bool(bool(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))), true)))))), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((false), false), bvec2(bvec3(bvec2((false), false), false)))), true && (bool(_GLF_IDENTITY(bvec2((false), false), bvec2(bvec3(bvec2((false), false), false))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sqrt(0.0)) > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sqrt(0.0)) > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)))))))))) && true), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y))), ! (! (bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, abs(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(tan(-8.4)) : 0.0)), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(95.80) : 0.0))))) + (injectionSwitch.y))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, abs(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(tan(-8.4)) : 0.0)), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(95.80) : 0.0))))) + (injectionSwitch.y)))) && true))))))), ! (! ((_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y))), ! (! (bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, abs(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(tan(-8.4)) : 0.0)), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(95.80) : 0.0))))) + (injectionSwitch.y))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, abs(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(tan(-8.4)) : 0.0)), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(95.80) : 0.0))))) + (injectionSwitch.y)))) && true)))))))))))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0)), max((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) * mat2(1.0), (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) - _GLF_IDENTITY(mat2(0.0, 0.0, 0.0, 0.0), (true ? _GLF_IDENTITY(mat2(0.0, 0.0, 0.0, 0.0), (mat2(0.0, 0.0, 0.0, 0.0)) + mat2(0.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(mat2(2.9, -321.565, 371.733, 199.409)))))))).x > injectionSwitch.y)) || (_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(2), (uint(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) + 0), _GLF_IDENTITY((2) << 0, max((2) << 0, (2) << _GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) | (_GLF_IDENTITY(0, 0 | (0)))), (_GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, (0) | (0))), ((_GLF_IDENTITY(0, (0) | (0)))) | (0 & 52538)) | (_GLF_IDENTITY(0, 0 | (0)))), max(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, int(ivec2(0, 1)))) | (0))) | (0))) | (_GLF_IDENTITY(0, 0 | (0)))), _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) | (_GLF_IDENTITY(0, 0 | (0))))))) << 0)))))) | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY(1u, min(1u, 1u)) * _GLF_IDENTITY((0u), (_GLF_IDENTITY((0u), ~ (~ ((0u))))) / 1u))) * uint(_GLF_ONE(1.0, injectionSwitch.y)))), 4, 64, 0);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
