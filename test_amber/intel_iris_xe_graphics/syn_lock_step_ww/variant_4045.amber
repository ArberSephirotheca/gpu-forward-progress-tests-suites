#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false, true))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-723.004)), float(injectionSwitch.y), bool(true))), true && (injectionSwitch.x > injectionSwitch.y))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, max(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, ~ (_GLF_IDENTITY(~ (gl_NumWorkGroups.x), min(~ (gl_NumWorkGroups.x), ~ (gl_NumWorkGroups.x)))))));
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(max(gl_WorkGroupID, gl_WorkGroupID), uvec3(uvec4(_GLF_IDENTITY(max(gl_WorkGroupID, gl_WorkGroupID), clamp(_GLF_IDENTITY(max(gl_WorkGroupID, gl_WorkGroupID), (max(gl_WorkGroupID, gl_WorkGroupID)) ^ uvec3(0u, 0u, 0u)), _GLF_IDENTITY(max(gl_WorkGroupID, gl_WorkGroupID), max(max(gl_WorkGroupID, gl_WorkGroupID), max(gl_WorkGroupID, gl_WorkGroupID))), max(gl_WorkGroupID, gl_WorkGroupID))), 1u)))), uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)))), _GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID)).x;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(min(workgroup_size, workgroup_size), (min(workgroup_size, workgroup_size)) ^ 0u), (false ? _GLF_FUZZED(subgroup_id) : min(workgroup_size, workgroup_size)))) * workgroup_id;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))))) && true), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true))))), true, false, true))) && (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) && true)))))) && true)))) && true))), ! (! ((! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))))) && true), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true))))), true, false, true))) && (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) && true)))))) && true)))) && true))))))))
  return;
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ (0u | 0u))) | (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)))) + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u) + (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) ^ (0u | (0u << _GLF_IDENTITY(uint(8u), uint(8u))))) % subgroup_size), (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u) + (_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(((subgroup_local_id + 1)), (((subgroup_local_id + 1))) | (((subgroup_local_id + 1)))) ^ (0u | (0u << _GLF_IDENTITY(uint(8u), uint(8u))))) % subgroup_size)) | (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) / 1u, ((subgroup_size) / 1u) << 0u)) + (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), max(_GLF_IDENTITY((subgroup_local_id + 1), uint(uvec2((subgroup_local_id + 1), 1u))), (subgroup_local_id + 1))), ((subgroup_local_id + 1)) ^ (0u | (0u << _GLF_IDENTITY(uint(8u), uint(8u))))) % subgroup_size)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 atomicStore(buf[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid), ~ (_GLF_IDENTITY(~ ((virtual_gid)), (~ ((virtual_gid))) - 0u))) + _GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), clamp(0u, _GLF_IDENTITY(0u, ~ (~ (0u))), 0u)))) | (virtual_gid))], uint(1), _GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) << 0), 4, 4)), 64, 4);
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(2), 0u | (uint(2))), _GLF_IDENTITY(4, min(4, 4)), 64, _GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(4, _GLF_IDENTITY((4), (true ? _GLF_IDENTITY((4), max((4), _GLF_IDENTITY((4), min((4), (4))))) : _GLF_FUZZED(36580))) | (4)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (4)), (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (4)), 0 + (_GLF_IDENTITY(4, (4) | (4))))) | int(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x, float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x)), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, log(sqrt(1.0)))))))), _GLF_IDENTITY((_GLF_IDENTITY(4, _GLF_IDENTITY((4), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(_GLF_IDENTITY((4), ~ (~ ((4)))), 1), (ivec2(_GLF_IDENTITY((4), ~ (~ ((4)))), 1)) << ivec2(0, 0)), clamp(ivec2(_GLF_IDENTITY((4), ~ (~ ((4)))), 1), _GLF_IDENTITY(ivec2(_GLF_IDENTITY((4), ~ (~ _GLF_IDENTITY(((4)), clamp(((4)), ((4)), ((4)))))), 1), ivec2(0, 0) | (ivec2(_GLF_IDENTITY((4), ~ (~ ((4)))), 1))), ivec2(_GLF_IDENTITY((4), ~ (~ ((4)))), 1)))), (int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(_GLF_IDENTITY((4), ~ (~ ((4)))), 1), (ivec2(_GLF_IDENTITY((4), ~ (~ ((4)))), 1)) << ivec2(0, 0)), clamp(ivec2(_GLF_IDENTITY((4), ~ (~ ((4)))), 1), _GLF_IDENTITY(ivec2(_GLF_IDENTITY((4), ~ (~ _GLF_IDENTITY(((4)), clamp(((4)), ((4)), ((4)))))), 1), ivec2(0, 0) | (ivec2(_GLF_IDENTITY((4), ~ (~ ((4)))), 1))), ivec2(_GLF_IDENTITY((4), ~ (~ ((4)))), 1))))) >> 0), 0 ^ (int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY((4), ~ (~ ((4)))), 1), clamp(ivec2(_GLF_IDENTITY((4), ~ (~ ((4)))), 1), _GLF_IDENTITY(ivec2(_GLF_IDENTITY((4), ~ _GLF_IDENTITY((~ ((4))), min((~ ((4))), (~ ((4)))))), 1), ivec2(0, 0) | (ivec2(_GLF_IDENTITY((4), ~ (~ ((4)))), 1))), ivec2(_GLF_IDENTITY((4), ~ (~ ((4)))), 1))))))) | (4))), int(ivec3(_GLF_IDENTITY((_GLF_IDENTITY(4, (4) | (4))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(4, (4) | _GLF_IDENTITY((_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec4(4, 1, 0, 0), ivec4(0, 0, 0, 0) + (ivec4(_GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(4, (false ? _GLF_FUZZED(-46818) : 4)))), _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) * 1), 1)), 0, 0))))) : _GLF_FUZZED(14068)))), 0 ^ _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | (4))) | (_GLF_IDENTITY(4, max(4, 4)))), int(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(4, 1, 0, 0), ivec4(0, 0, 0, 0) + (_GLF_IDENTITY(ivec4(4, 1, 0, 0), ~ (~ (ivec4(4, 1, 0, 0)))))), ivec4(0, 0, 0, _GLF_IDENTITY(0, (0) | 0)) + (ivec4(4, 1, 0, 0))))) : _GLF_FUZZED(14068)))), 0 | (_GLF_IDENTITY((_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec4(4, 1, 0, 0), _GLF_IDENTITY(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), max(_GLF_IDENTITY(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), min(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)))), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0))))), clamp(~ (_GLF_IDENTITY(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), max(_GLF_IDENTITY(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), min(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)))), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0))))), ~ (_GLF_IDENTITY(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), max(_GLF_IDENTITY(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), min(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)))), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), max(_GLF_IDENTITY(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), min(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)))), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0))))), clamp(~ (_GLF_IDENTITY(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), max(_GLF_IDENTITY(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), min(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)))), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0))))), ~ (_GLF_IDENTITY(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), max(_GLF_IDENTITY(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), min(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)))), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0))))), ~ (_GLF_IDENTITY(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), max(_GLF_IDENTITY(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), min(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)))), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)))))))))))))) : _GLF_FUZZED(14068)))), ((_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec4(4, 1, 0, 0), _GLF_IDENTITY(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), max(_GLF_IDENTITY(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), min(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)))), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0))))), clamp(~ (_GLF_IDENTITY(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), max(_GLF_IDENTITY(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), min(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)))), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0))))), ~ (_GLF_IDENTITY(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), max(_GLF_IDENTITY(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), min(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)))), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), max(_GLF_IDENTITY(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), min(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)))), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0))))), clamp(~ (_GLF_IDENTITY(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), max(_GLF_IDENTITY(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), min(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)))), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0))))), ~ (_GLF_IDENTITY(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), max(_GLF_IDENTITY(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), min(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)))), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0))))), ~ (_GLF_IDENTITY(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), max(_GLF_IDENTITY(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), min(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)))), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)))))))))))))) : _GLF_FUZZED(14068))))) << 0)))), clamp((_GLF_IDENTITY((_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | (4))) | (_GLF_IDENTITY(4, max(4, 4)))), int(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(4, 1, 0, 0), ivec4(0, 0, 0, 0) + (_GLF_IDENTITY(ivec4(4, 1, 0, 0), ~ (~ (ivec4(4, 1, 0, 0)))))), ivec4(0, 0, 0, _GLF_IDENTITY(0, (0) | 0)) + (ivec4(4, 1, 0, 0))))) : _GLF_FUZZED(14068)))), 0 | (_GLF_IDENTITY((_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec4(4, 1, 0, 0), _GLF_IDENTITY(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), max(_GLF_IDENTITY(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), min(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)))), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0))))), clamp(~ (_GLF_IDENTITY(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), max(_GLF_IDENTITY(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), min(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)))), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0))))), ~ (_GLF_IDENTITY(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), max(_GLF_IDENTITY(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), min(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)))), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), max(_GLF_IDENTITY(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), min(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)))), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0))))), clamp(~ (_GLF_IDENTITY(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), max(_GLF_IDENTITY(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), min(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)))), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0))))), ~ (_GLF_IDENTITY(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), max(_GLF_IDENTITY(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), min(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)))), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0))))), ~ (_GLF_IDENTITY(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), max(_GLF_IDENTITY(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), min(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)))), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)))))))))))))) : _GLF_FUZZED(14068)))), ((_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec4(4, 1, 0, 0), _GLF_IDENTITY(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), max(_GLF_IDENTITY(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), min(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)))), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0))))), clamp(~ (_GLF_IDENTITY(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), max(_GLF_IDENTITY(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), min(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)))), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0))))), ~ (_GLF_IDENTITY(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), max(_GLF_IDENTITY(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), min(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)))), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), max(_GLF_IDENTITY(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), min(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)))), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0))))), clamp(~ (_GLF_IDENTITY(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), max(_GLF_IDENTITY(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), min(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)))), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0))))), ~ (_GLF_IDENTITY(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), max(_GLF_IDENTITY(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), min(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)))), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0))))), ~ (_GLF_IDENTITY(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), max(_GLF_IDENTITY(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), min(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)))), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)))))))))))))) : _GLF_FUZZED(14068))))) << 0)))), (_GLF_IDENTITY((_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | (4))) | (_GLF_IDENTITY(4, max(4, 4)))), int(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(4, 1, 0, 0), ivec4(0, 0, 0, 0) + (_GLF_IDENTITY(ivec4(4, 1, 0, 0), ~ (~ (ivec4(4, 1, 0, 0)))))), ivec4(0, 0, 0, _GLF_IDENTITY(0, (0) | 0)) + (ivec4(4, 1, 0, 0))))) : _GLF_FUZZED(14068)))), 0 | (_GLF_IDENTITY((_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec4(4, 1, 0, 0), _GLF_IDENTITY(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), max(_GLF_IDENTITY(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), min(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)))), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0))))), clamp(~ (_GLF_IDENTITY(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), max(_GLF_IDENTITY(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), min(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)))), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0))))), ~ (_GLF_IDENTITY(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), max(_GLF_IDENTITY(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), min(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)))), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), max(_GLF_IDENTITY(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), min(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)))), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0))))), clamp(~ (_GLF_IDENTITY(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), max(_GLF_IDENTITY(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), min(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)))), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0))))), ~ (_GLF_IDENTITY(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), max(_GLF_IDENTITY(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), min(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)))), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0))))), ~ (_GLF_IDENTITY(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), max(_GLF_IDENTITY(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), min(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)))), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)))))))))))))) : _GLF_FUZZED(14068)))), ((_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec4(4, 1, 0, 0), _GLF_IDENTITY(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), max(_GLF_IDENTITY(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), min(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)))), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0))))), clamp(~ (_GLF_IDENTITY(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), max(_GLF_IDENTITY(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), min(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)))), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0))))), ~ (_GLF_IDENTITY(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), max(_GLF_IDENTITY(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), min(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)))), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), max(_GLF_IDENTITY(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), min(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)))), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0))))), clamp(~ (_GLF_IDENTITY(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), max(_GLF_IDENTITY(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), min(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)))), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0))))), ~ (_GLF_IDENTITY(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), max(_GLF_IDENTITY(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), min(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)))), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0))))), ~ (_GLF_IDENTITY(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), max(_GLF_IDENTITY(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), min(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)))), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)))))))))))))) : _GLF_FUZZED(14068))))) << 0)))), (_GLF_IDENTITY((_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | (4))) | (_GLF_IDENTITY(4, max(4, 4)))), int(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(4, 1, 0, 0), ivec4(0, 0, 0, 0) + (_GLF_IDENTITY(ivec4(4, 1, 0, 0), ~ (~ (ivec4(4, 1, 0, 0)))))), ivec4(0, 0, 0, _GLF_IDENTITY(0, (0) | 0)) + (ivec4(4, 1, 0, 0))))) : _GLF_FUZZED(14068)))), 0 | (_GLF_IDENTITY((_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec4(4, 1, 0, 0), _GLF_IDENTITY(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), max(_GLF_IDENTITY(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), min(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)))), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0))))), clamp(~ (_GLF_IDENTITY(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), max(_GLF_IDENTITY(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), min(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)))), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0))))), ~ (_GLF_IDENTITY(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), max(_GLF_IDENTITY(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), min(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)))), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), max(_GLF_IDENTITY(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), min(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)))), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0))))), clamp(~ (_GLF_IDENTITY(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), max(_GLF_IDENTITY(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), min(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)))), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0))))), ~ (_GLF_IDENTITY(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), max(_GLF_IDENTITY(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), min(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)))), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0))))), ~ (_GLF_IDENTITY(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), max(_GLF_IDENTITY(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), min(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)))), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)))))))))))))) : _GLF_FUZZED(14068)))), ((_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec4(4, 1, 0, 0), _GLF_IDENTITY(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), max(_GLF_IDENTITY(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), min(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)))), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0))))), clamp(~ (_GLF_IDENTITY(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), max(_GLF_IDENTITY(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), min(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)))), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0))))), ~ (_GLF_IDENTITY(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), max(_GLF_IDENTITY(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), min(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)))), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), max(_GLF_IDENTITY(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), min(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)))), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0))))), clamp(~ (_GLF_IDENTITY(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), max(_GLF_IDENTITY(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), min(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)))), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0))))), ~ (_GLF_IDENTITY(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), max(_GLF_IDENTITY(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), min(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)))), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0))))), ~ (_GLF_IDENTITY(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), max(_GLF_IDENTITY(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), min(ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)))), ivec4(0, 0, 0, 0) + (ivec4(4, 1, 0, 0)))))))))))))) : _GLF_FUZZED(14068))))) << 0))))))))), ((_GLF_IDENTITY(4, (4) | (4)))) | 0), _GLF_IDENTITY((_GLF_IDENTITY(4, (4) | (4))), ((_GLF_IDENTITY(4, (4) | (4)))) / 1), (_GLF_IDENTITY(4, (4) | (4))))), 0, 0))) + 0)) | (_GLF_IDENTITY(_GLF_IDENTITY(4, 0 ^ (4)), (4) | (4)))));
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
