#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, 0.0)))), (_GLF_IDENTITY(max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, 0.0)))), min(max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, 0.0)))), max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, 0.0))))))) - 0.0)))), bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, 0.0))))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) - 0.0, float(float((_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)) - 0.0))))))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) - 0.0, float(float((_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)) - 0.0))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))) && true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((injectionSwitch / -9917.2640)) : injectionSwitch)).y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y) || false))), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, true)))))
    barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_ZERO(0.0, injectionSwitch.x)))) > injectionSwitch.y))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bvec4(true, false, true, false))))) ? _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(21.07, 4.0)))) : _GLF_FUZZED(injectionSwitch))).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, min(_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (workgroup_id) >> 0u)) | 0u), workgroup_id));
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), true && (bool(_GLF_DEAD(false))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))) + subgroup_id * subgroup_size, (workgroup_base + _GLF_IDENTITY(subgroup_id, (true ? _GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)) : _GLF_FUZZED(workgroup_size))) * subgroup_size) >> _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) - 0u)) | _GLF_IDENTITY((0u), ~ (_GLF_IDENTITY(~ ((0u)), (~ ((0u))) - 0u))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) - 0u), 0u, 0u))))) | _GLF_IDENTITY((0u), ((0u)) * 1u), 0u | ((0u) | (0u))), (_GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) - 0u), 0u, 0u))))) | _GLF_IDENTITY((0u), ((0u)) * 1u), 0u | ((0u) | (0u)))) ^ (0u & 148967u))), clamp((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) - 0u), 0u, 0u))))) | _GLF_IDENTITY((0u), ((0u)) * 1u), 0u | _GLF_IDENTITY(((0u) | (0u)), 0u | (((0u) | (0u))))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) - 0u), 0u, 0u))))) | _GLF_IDENTITY((0u), ((0u)) * 1u), (false ? _GLF_FUZZED(workgroup_size) : (_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) - 0u), 0u, 0u))))) | _GLF_IDENTITY((0u), ((0u)) * 1u))), 0u | ((0u) | (0u)))) ^ (0u & 148967u))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) - 0u), 0u, 0u))))) | _GLF_IDENTITY((0u), ((0u)) * 1u), 0u | ((0u) | (0u))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) - 0u), 0u, 0u))))) | _GLF_IDENTITY((0u), ((0u)) * 1u), 0u | ((0u) | (0u))), 0u | (_GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) - 0u), 0u, 0u))))) | _GLF_IDENTITY((0u), ((0u)) * 1u), 0u | ((0u) | (0u)))))), min((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) - 0u), 0u, 0u))))) | _GLF_IDENTITY((0u), ((0u)) * 1u), 0u | ((0u) | (0u))), 0u | (_GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) - 0u), 0u, 0u))))) | _GLF_IDENTITY((0u), ((0u)) * 1u), 0u | ((0u) | (0u)))))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) - 0u), 0u, 0u))))) | _GLF_IDENTITY((0u), ((0u)) * 1u), 0u | ((0u) | (0u))), 0u | (_GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) - 0u), 0u, 0u))))) | _GLF_IDENTITY((0u), ((0u)) * 1u), 0u | ((0u) | (0u)))))))) ^ (0u & 148967u))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) - 0u), 0u, 0u))))) | _GLF_IDENTITY((0u), ((0u)) * 1u), 0u | ((0u) | (0u))), (_GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) - 0u), 0u, 0u))))) | _GLF_IDENTITY((0u), ((0u)) * 1u), 0u | ((0u) | (0u)))) ^ (0u & 148967u))))) ^ 0u))) + subgroup_local_id, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))) + subgroup_id * subgroup_size, _GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, uint(uvec2(subgroup_id, 1u))), subgroup_id, subgroup_id)) * subgroup_size), (_GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, uint(uvec2(subgroup_id, 1u))), subgroup_id, subgroup_id)) * subgroup_size), max((workgroup_base + _GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, uint(uvec2(subgroup_id, 1u))), subgroup_id, subgroup_id)) * subgroup_size), (workgroup_base + _GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, uint(uvec2(subgroup_id, 1u))), subgroup_id, subgroup_id)) * subgroup_size)))) / 1u) >> _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) - 0u)) | _GLF_IDENTITY((0u), ~ (_GLF_IDENTITY(~ ((0u)), (~ ((0u))) - 0u))), (_GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) - 0u), 0u, 0u))))) | _GLF_IDENTITY((0u), ((0u)) * 1u), 0u | ((0u) | (0u)))) ^ 0u))) + subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))) + subgroup_id * subgroup_size, (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) << 0u)))) >> _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) - 0u)) | _GLF_IDENTITY((0u), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ ((0u)), (~ ((0u))) - 0u), clamp(_GLF_IDENTITY(~ ((0u)), (~ ((0u))) - 0u), _GLF_IDENTITY(~ ((0u)), (~ ((0u))) - 0u), _GLF_IDENTITY(~ ((0u)), (~ ((0u))) - 0u))))), (_GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - 0u), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - 0u), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(0u, (0u) - 0u), 0u)), 0u ^ (uint(uvec2(_GLF_IDENTITY(0u, (0u) - 0u), 0u))))))), 0u, 0u))))) | _GLF_IDENTITY(_GLF_IDENTITY((0u), (_GLF_IDENTITY((0u), (true ? (0u) : _GLF_FUZZED(workgroup_id)))) * uint(_GLF_ONE(1.0, injectionSwitch.y))), ((0u)) * 1u), 0u | ((0u) | (0u)))) ^ _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, max(0u, 0u)) : _GLF_FUZZED(subgroup_local_id)))))) + subgroup_local_id) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ _GLF_IDENTITY((workgroup_base), (true ? (workgroup_base) : _GLF_FUZZED(workgroup_base))))) + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) >> _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) - 0u)) | _GLF_IDENTITY((0u), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ ((0u)), (0u | 0u) | (~ ((0u)))), (~ ((0u))) - 0u))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | (_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) - 0u), 0u, 0u))), max(_GLF_IDENTITY((0u) | (_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) - 0u), 0u, 0u))), min(_GLF_IDENTITY((0u) | (_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) - 0u), 0u, 0u))), ((0u) | (_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) - 0u), 0u, 0u)))) | 0u), (0u) | (_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) - 0u), 0u, 0u))))), _GLF_IDENTITY((0u) | (_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) - 0u), 0u, 0u))), (true ? (0u) | (_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) - 0u), 0u, 0u))) : _GLF_FUZZED(subgroup_id))))))) | _GLF_IDENTITY((0u), ((0u)) * 1u), 0u | ((0u) | (0u)))) ^ 0u, ~ (~ ((_GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - 0u), (_GLF_IDENTITY(0u, (0u) - 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - 0u), (true ? _GLF_IDENTITY(0u, (0u) - 0u) : _GLF_FUZZED(subgroup_id))))), 0u, 0u))))) | _GLF_IDENTITY((0u), ((_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 1u))))) * 1u), 0u | ((0u) | (0u)))) ^ 0u)))))) + subgroup_local_id));
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u) * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, clamp((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size) ^ 0u, ~ (~ (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size) ^ 0u, clamp(((subgroup_local_id + 1) % subgroup_size) ^ 0u, ((subgroup_local_id + 1) % subgroup_size) ^ 0u, ((subgroup_local_id + 1) % subgroup_size) ^ 0u)))))))), max(uint(uint(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))))), uint(uvec4((subgroup_local_id + 1) % subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 0u))), ((subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))) % subgroup_size) ^ 0u))), uint(uint(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / (1u & 1u)))) + 1) % subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), (false ? _GLF_FUZZED(subgroup_size) : (subgroup_local_id + 1))), (_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))) / 1u) + 1))))) | 0u) % subgroup_size) ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), clamp(_GLF_IDENTITY(0u, 0u ^ (0u)), _GLF_IDENTITY(0u, _GLF_IDENTITY(0u ^ (0u), (0u ^ (0u)) - 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), (_GLF_IDENTITY(0u, 0u ^ (0u))) | (_GLF_IDENTITY(0u, 0u ^ (0u)))))))))))), (subgroup_local_id + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(6428) : 1)), 1, _GLF_IDENTITY(1, _GLF_IDENTITY(~ (~ (1)), clamp(~ (~ (1)), ~ (~ (1)), ~ (~ (1)))))))) % subgroup_size)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, clamp((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(subgroup_local_id + 1, 0u)))), min((_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) / 1u) | 0u) + 1, _GLF_IDENTITY(0u, (0u) | 0u))))), (_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)), 0u)))))) % _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) ^ 0u), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | (1)), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | (1))) >> 0)) % subgroup_size) ^ 0u), 0u | (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED((++ virtual_gid)) : _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED((++ virtual_gid)) : _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u)))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED((++ virtual_gid)) : _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u)))), (~ (_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED((++ virtual_gid)) : _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u))))) >> 0u)) << 0u))) + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) ^ 0u))), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, ~ (~ (1u)))))))) + 0u)), uvec2(1u, 1u) * (uvec2(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) ^ 0u), 0u | _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) ^ 0u)), ((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | 0u) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) ^ 0u))) / 1u)), 1u))))))), max(uint(uint(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) ^ 0u))), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1))))) | 0u, ((_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1))))) | 0u) | 0u)) % subgroup_size) ^ 0u, uint(uvec3((_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1))))) | 0u) % subgroup_size) ^ 0u, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), (_GLF_IDENTITY(uint(1u), (false ? _GLF_FUZZED(subgroup_id) : uint(1u)))) | (uint(1u))), (uint(1u)) | (uint(1u))))), 0u)))))), (_GLF_IDENTITY(uint(uint(_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1))))) | 0u) % subgroup_size) ^ 0u, uint(uvec3((_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1))))) | 0u) % subgroup_size) ^ 0u, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (uint(1u)) | (uint(1u))))), 0u)))))), ~ (~ (uint(uint(_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1))))) | 0u) % subgroup_size) ^ 0u, uint(uvec3((_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1))))) | 0u) % subgroup_size) ^ 0u, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (uint(1u)) | (uint(1u))))), 0u)))))))))) ^ 0u)))), _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (_GLF_IDENTITY(false ? _GLF_FUZZED(6428) : 1, (true ? false ? _GLF_FUZZED(6428) : 1 : _GLF_FUZZED(-20757))))), 1, _GLF_IDENTITY(1, ~ (~ (1))))), clamp(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (_GLF_IDENTITY(false ? _GLF_FUZZED(6428) : 1, min(false ? _GLF_FUZZED(6428) : 1, false ? _GLF_FUZZED(6428) : 1)))), 1, _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) | (0 << _GLF_IDENTITY(int(5), int(5)))))))), _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(6428) : 1)), 1, _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) / 1))), ~ (~ (1))))), _GLF_IDENTITY(0 + (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(6428) : 1)), 1, _GLF_IDENTITY(1, ~ (~ (1)))))), max(0 + (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(6428) : 1)), 1, _GLF_IDENTITY(1, ~ (~ (1)))))), _GLF_IDENTITY(0 + (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(6428) : 1)), 1, _GLF_IDENTITY(1, ~ (~ (1)))))), (0 + (_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(6428) : 1)), 1, _GLF_IDENTITY(1, ~ (~ (1)))), min(clamp(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(6428) : 1)), 1, _GLF_IDENTITY(1, ~ (~ (1)))), clamp(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(6428) : 1)), 1, _GLF_IDENTITY(1, ~ (~ (1))))))))) / 1)))), _GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), clamp(_GLF_IDENTITY(1, (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(6428) : 1)), _GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(1, int(ivec4(1, 0, 0, 0))), 0)), min(_GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(1, int(ivec4(1, 0, 0, 0))), 0)), (false ? _GLF_FUZZED(-7108) : int(ivec2(_GLF_IDENTITY(1, int(ivec4(1, 0, 0, 0))), 0)))), int(ivec2(_GLF_IDENTITY(1, int(ivec4(1, 0, 0, 0))), 0))))), _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((1), int(_GLF_IDENTITY(ivec4((1), 0, 0, 1), (ivec4((1), 0, 0, 1)) ^ ivec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), max(~ _GLF_IDENTITY((1), int(_GLF_IDENTITY(ivec4((1), 0, 0, 1), (ivec4((1), 0, 0, 1)) ^ ivec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), ~ _GLF_IDENTITY((1), int(_GLF_IDENTITY(ivec4((1), 0, 0, 1), (ivec4((1), 0, 0, 1)) ^ ivec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))))))))))) % subgroup_size, 1u * ((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(6428) : 1)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(6428) : 1)), int(ivec2(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(_GLF_IDENTITY(6428, (6428) | 0)) : 1)), 0)))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(6428) : 1)), int(ivec2(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(6428) : 1)), 0)))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(6428) : 1)), int(ivec2(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(6428) : 1)), 0))))) | 0)) + 0))), 1, _GLF_IDENTITY(1, ~ (~ (1))))), clamp(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (_GLF_IDENTITY(false ? _GLF_FUZZED(6428) : _GLF_IDENTITY(1, int(ivec3(1, 1, 0))), min(false ? _GLF_FUZZED(6428) : 1, false ? _GLF_FUZZED(6428) : 1)))), 1, _GLF_IDENTITY(1, ~ (~ (1))))), _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(6428) : 1)), 1, _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, _GLF_IDENTITY((1) / 1, ((1) / 1) | ((1) / 1))))), ~ (~ (1))))), _GLF_IDENTITY(_GLF_IDENTITY(0 + (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(6428) : 1)), 1, _GLF_IDENTITY(1, ~ (~ (1)))))), 0 | (0 + (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(6428) : 1)), 1, _GLF_IDENTITY(1, ~ (~ (1)))))))), max(0 + (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(6428) : 1)), 1, _GLF_IDENTITY(1, ~ (~ (1)))))), _GLF_IDENTITY(_GLF_IDENTITY(0, (0) << (_GLF_IDENTITY((0 ^ 0), ((0 ^ 0)) << 0) << _GLF_IDENTITY(int(0), int(0)))) + (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(_GLF_IDENTITY(6428, (6428) >> 0)) : 1)), 1, _GLF_IDENTITY(1, ~ (~ (1)))))), (0 + (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(6428) : 1)), 1, _GLF_IDENTITY(1, ~ (~ (1))))))) / 1)))), _GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), clamp(_GLF_IDENTITY(1, (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(6428) : 1)), _GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec4(1, 0, 0, 0)), (0 >> _GLF_IDENTITY(int(7), int(7))) | (int(ivec4(1, 0, 0, 0))))), 0)), min(_GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(1, int(ivec4(1, 0, 0, 0))), 0)), (false ? _GLF_FUZZED(-7108) : int(ivec2(_GLF_IDENTITY(1, int(ivec4(1, 0, 0, 0))), 0)))), int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec4(1, 0, 0, 0))), (_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec4(1, 0, 0, 0))), ~ (~ (_GLF_IDENTITY(1, int(ivec4(1, 0, 0, 0))))))) + 0), 0))))), _GLF_IDENTITY(1, ~ (~ _GLF_IDENTITY((1), int(_GLF_IDENTITY(ivec4((1), 0, 0, 1), (ivec4((1), 0, 0, 1)) ^ _GLF_IDENTITY(ivec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(4.8)), bool(false)))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), ivec4(1, 1, 1, 1) * (_GLF_IDENTITY(ivec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-73.95)), bool(false)))), float(_GLF_FUZZED(4.8)), bool(false)))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), ivec4(_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, (0) ^ 0))), 0, 0, 0) + (ivec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(4.8)), bool(false)))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))))))))))))) % subgroup_size)))) : _GLF_FUZZED(num_workgroup)))) << 0u));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, injectionSwitch.x, injectionSwitch.x)) < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) - 0.0, (true ? (injectionSwitch.y) - 0.0 : _GLF_FUZZED(-94.37))))) / round(length(normalize(1.0)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((5.8))), bool(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))))) / round(length(normalize(1.0)))), _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) / _GLF_IDENTITY(round(length(normalize(1.0))), (_GLF_IDENTITY(round(length(normalize(1.0))), (round(length(normalize(1.0)))) / 1.0)) + 0.0)), _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) / round(length(normalize(1.0)))))))) && (false))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))), (min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))) * vec2(1.0, 1.0))).y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((true ? 13.20 : 373.721))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! ((false)))))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, sin(tan(0.0)), 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0))), 1.0 * (injectionSwitch.x)), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-9.0)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), true && (bool(bvec4(false, false, true, _GLF_IDENTITY(true, (true) || false))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, false)))))
    barrier();
   barrier();
  }
 atomicStore(buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid) << 0u, ((virtual_gid) << 0u) << 0u))], _GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), (uint(1)) | 0u)) >> 0u), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false), false), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false), false), true)))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false), false), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false))), false), false), true)))))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false), false), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false))), false), false), true)))))))))))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false), false), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false), false), true)))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false), false), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false))), false), false), true)))))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false), false), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false))), false), false), true)))))))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false), false), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false), false), true)))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false), false), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false))), false), false), true)))))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false), false), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false))), false), false), true))))))))))))))))))), ! (! (bool(_GLF_IDENTITY(true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false), false), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false), false), true)))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false), false), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false))), false), false), true)))))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false), false), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false))), false), false), true)))))))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false), false), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false), false), true)))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false), false), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false))), false), false), true)))))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false), false), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false))), false), false), true)))))))))))))))))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), bool(bvec4(bool(bool((injectionSwitch.x > injectionSwitch.y))), false, false, true)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false), ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, true, false)), ! (! (bool(bvec4(true, true, true, false)))))) && (! (false))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (false), true && (! (false))), false)), (bool(bvec2(_GLF_IDENTITY(! (false), true && (! (false))), false))) && true))), bool(bvec2(! (_GLF_IDENTITY(! (false), true && (! (false)))), false)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(2, min(2, _GLF_IDENTITY(_GLF_IDENTITY(2, (2) ^ (0 & 2965)), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(2, min(2, _GLF_IDENTITY(2, ~ (~ (2)))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(ivec3((2), 1, 1)), _GLF_IDENTITY((int(ivec3((2), 1, 1))), ((int(ivec3((2), 1, 1)))) | (0 & -31078)) + (1 ^ 1)), clamp(int(ivec3((2), 1, 1)), _GLF_IDENTITY(int(ivec3((2), 1, 1)), ~ (_GLF_IDENTITY(~ (int(ivec3((2), 1, 1))), (~ (int(ivec3((2), 1, 1)))) | (~ (int(ivec3((2), 1, 1))))))), int(ivec3((2), 1, 1)))), max(_GLF_IDENTITY(_GLF_IDENTITY(int(ivec3((2), 1, 1)), (int(ivec3((2), 1, 1))) + (1 ^ 1)), clamp(int(ivec3((2), 1, 1)), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3((2), 1, 1), (ivec3((2), 1, 1)) ^ ivec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (int(ivec3((2), 1, 1))), (~ (int(ivec3((2), 1, 1)))) | (~ (int(ivec3((2), 1, 1)))))), int(_GLF_IDENTITY(ivec4((_GLF_IDENTITY(~ (int(ivec3((2), 1, 1))), (~ (int(ivec3((2), 1, 1)))) | (~ (int(ivec3((2), 1, 1)))))), 1, (0 | 0), 1), ivec4(0, 0, 0, 0) | (ivec4((_GLF_IDENTITY(~ (int(ivec3((2), 1, 1))), (~ (int(ivec3((2), 1, 1)))) | (~ (int(ivec3((2), 1, 1)))))), 1, (0 | 0), 1)))))), int(ivec3(_GLF_IDENTITY((2), ((2)) - 0), 1, 1)))), _GLF_IDENTITY(_GLF_IDENTITY(int(ivec3((2), 1, 1)), (int(ivec3((2), 1, 1))) + (1 ^ 1)), clamp(int(ivec3((2), 1, 1)), _GLF_IDENTITY(int(ivec3((2), 1, 1)), ~ (_GLF_IDENTITY(~ (int(ivec3((2), 1, 1))), (~ (int(ivec3((2), 1, 1)))) | (~ (int(ivec3((2), 1, 1))))))), int(ivec3((2), 1, 1)))))), max(int(ivec3((2), 1, 1)), int(ivec3(_GLF_IDENTITY((2), (_GLF_IDENTITY((2), ((2)) * 1)) | 0), 1, 1)))))))))), 4, _GLF_IDENTITY(64, 1 * (64)), 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
