#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_IDENTITY(false, bool(bvec2(false, true))), true)))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec4((_GLF_DEAD(false)), true, true, true))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(4.6)), vec2(_GLF_FUZZED(float(91116u)), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))[0], _GLF_FUZZED(4.6)), vec2(_GLF_FUZZED(float(91116u)), _GLF_IDENTITY((injectionSwitch)[1], (false ? _GLF_FUZZED(84.00) : (injectionSwitch)[1]))), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y) && true)))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), bool(bool(! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), (! (false)) && true)))))))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, _GLF_IDENTITY(0.0, _GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(1.0, min(1.0, 1.0))), 0.0, 0.0), sin(length(vec3(0.0, 0.0, 0.0))) + (clamp(_GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0), ((0.0)) - 0.0) / 1.0), 0.0, 0.0))), max(_GLF_IDENTITY(clamp(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0), sin(_GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), float(_GLF_IDENTITY(mat3x4(length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, log(1.0), 0.0, _GLF_IDENTITY(dot(vec4(0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0, 0.0), vec4(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0)), dot(vec4(0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0, 0.0), vec4(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0))), 0.0, 1.0, determinant(mat4(1.0, 0.0, sqrt(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), 0.0, 1.0), (false ? _GLF_FUZZED(mat3x4(7.3, -189.170, -6.9, 5.0, -3.6, -4503.0269, -46.54, 2777.7421, 9.7, 6.7, 7003.2481, 1398.4606)) : mat3x4(length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, log(1.0), 0.0, _GLF_IDENTITY(dot(vec4(0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0, 0.0), vec4(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0)), dot(vec4(0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0, 0.0), vec4(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0))), 0.0, 1.0, determinant(mat4(1.0, 0.0, sqrt(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), 0.0, 1.0)))))) + (clamp(_GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0), ((0.0)) - 0.0) / 1.0), 0.0, 0.0))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0), sin(length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))) + (clamp(_GLF_IDENTITY(0.0, _GLF_IDENTITY((_GLF_IDENTITY(0.0, float(float(0.0)))), ((0.0)) - 0.0) / 1.0), 0.0, 0.0)))))), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, abs(0.0)))).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ! (! ((false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec2(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))), false)))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       barrier();
      }
     barrier();
    }
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && _GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true))), ((_GLF_DEAD(false))) || false), ((_GLF_DEAD(false))) || false)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, true))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), injectionSwitch)).x > injectionSwitch.y, _GLF_IDENTITY(true && (injectionSwitch.x > injectionSwitch.y), ! (! (true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x < injectionSwitch.y), false), bvec2(bvec2(_GLF_IDENTITY(bvec2((injectionSwitch.x < injectionSwitch.y), false), bvec2(bvec2(bvec2((injectionSwitch.x < injectionSwitch.y), false)))))))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false, false || (false)) || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), false || (bool(bvec2(false, true))))))), false || (false))))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)) || false)))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)) || (false)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (! (_GLF_IDENTITY(false, ! (! (false)))))))))) || false), ! (! (false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)) || false))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec4(true, true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))))), false)), (bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false))) && true), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false)), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false)), ! (_GLF_IDENTITY(! (bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false))), true && (! (bool(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), true, false)))))))) && true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false)), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false)), ! (_GLF_IDENTITY(! (bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false))), true && (! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) && true), true, false)))))))) && true), false, true), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false)), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false)), ! (_GLF_IDENTITY(! (bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false))), true && (! (bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false)))))))) && true), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false)), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false)), ! (_GLF_IDENTITY(! (bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false))), true && (! (bool(bvec3(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false)))))))) && true), false, true), false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) && true), true, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) && true), true, false), true)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) && true), true, false), true))))))), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false)), ! (_GLF_IDENTITY(! (bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY((false), false || ((false))) && true), true, _GLF_IDENTITY(false, bool(bvec2(false, false)))))), true && (! (bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false)))))))) && true), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false)), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false) && true))), true, false)), ! (_GLF_IDENTITY(! (bool(bvec3(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(true, bool(bool(true))), false))), true && (! (bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false)))))))) && true), false, true), false)))))))))), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false)), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false)), ! (_GLF_IDENTITY(! (bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false))), true && (! (bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false)))))))) && true), false, true), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false)), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false)), ! (_GLF_IDENTITY(! (bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false))), true && (! (bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false)))))))) && true), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false)), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false)), ! (_GLF_IDENTITY(! (bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false))), true && (! (bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false)))))))) && true), false, true), false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false)), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false)), ! (_GLF_IDENTITY(! (bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false))), true && (! (bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false)))))))) && true), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false)), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false)), ! (_GLF_IDENTITY(! (bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false))), true && (! (bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false)))))))) && true), false, true), false))))))))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false)), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false)), ! (_GLF_IDENTITY(! (bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false))), true && (! (bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false)))))))) && true), false, true), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false)), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false)), ! (_GLF_IDENTITY(! (bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false))), true && (! (bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false)))))))) && true), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false)), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false)), ! (_GLF_IDENTITY(! (bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false))), true && (! (bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false)))))))) && true), false, true), false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false)), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false)), ! (_GLF_IDENTITY(! (bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false))), true && (! (bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false)))))))) && true), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false)), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false)), ! (_GLF_IDENTITY(! (bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false))), true && (! (bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false)))))))) && true), false, true), false)))))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false)), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false)), ! (_GLF_IDENTITY(! (bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false))), true && (! (bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false)))))))) && true), false, true), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false)), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false)), ! (_GLF_IDENTITY(! (bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false))), true && (! (bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false)))))))) && true), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false)), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false)), ! (_GLF_IDENTITY(! (bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false))), true && (! (bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false)))))))) && true), false, true), false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false)), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false)), ! (_GLF_IDENTITY(! (bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false))), true && (! (bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false)))))))) && true), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false)), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false)), ! (_GLF_IDENTITY(! (bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false))), true && (! (bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false)))))))) && true), false, true), false)))))))))), true))))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false)), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false)), ! (_GLF_IDENTITY(! _GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false))), ! (! ((bool(bvec3(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), false || (bool(bvec2(true, true))))), false)))))), _GLF_IDENTITY(true && (! (bool(bvec3(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(true, false || (true)), false)))), (true && _GLF_IDENTITY((! (bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false)))), ! (! ((! (bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false)))))))) && true))))) && true)), _GLF_IDENTITY(true, (true) || false) && (bool(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false)), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, false))))))) && true), true, false)), ! (_GLF_IDENTITY(! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) && true), true, false))), true && (! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false)), bool(bvec4(bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))) && true, false || ((_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), _GLF_IDENTITY(! (! (bool(bvec3(false, false, false)))), true && (! (! (bool(bvec3(false, false, false))))))))) && true), true, false)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) && true), true, false))), true && (! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false)), bool(bvec4(bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) && true), true, false))), true && (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) && true), true, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) && true), true, false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) && true), true, false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true))))), bool(bvec4(bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, true && ((false) && true))), true, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).x < injectionSwitch.y))))))))))))) && true))))))))) && true))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (true ? max(injectionSwitch, injectionSwitch) : _GLF_FUZZED(vec2(-41.74, 4.6))))).x, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, mix(float(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x), float(_GLF_FUZZED(-37.31)), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-7.5) : injectionSwitch.x)) > injectionSwitch.y))))) : _GLF_IDENTITY(_GLF_FUZZED(fract(-7.2)), min(_GLF_FUZZED(fract(-7.2)), _GLF_FUZZED(fract(-7.2)))))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), false || (_GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec2((_GLF_DEAD(false)), true))))), (_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) || false)) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))))) && true), false, _GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), false || (_GLF_IDENTITY(false, (false) || false))), (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y)), _GLF_IDENTITY(true, (true) || false))))) && true))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)), ! (! (bool(false))))), (bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))) && true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))), ! (! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, true), true)), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, true), true)), false))))))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(8u), uvec3(8u)))))), uvec3(gl_WorkGroupID[0], _GLF_IDENTITY(gl_WorkGroupID[1], (gl_WorkGroupID[1]) | (gl_WorkGroupID[1])), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - uvec3(0u, 0u, 0u)), (gl_WorkGroupID) + uvec3(0u, 0u, 0u))[2])).x, (gl_WorkGroupID.x) >> 0u);
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) | (_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) << 0u))), (workgroup_size * workgroup_id) >> 0u);
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), _GLF_IDENTITY(0u + ((workgroup_base)), clamp(0u + ((workgroup_base)), 0u + ((workgroup_base)), 0u + ((workgroup_base))))) / 1u) + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, (true ? subgroup_id * subgroup_size : _GLF_FUZZED(subgroup_size)))) ^ 0u, ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, 1u * (subgroup_id)))) * subgroup_size, (true ? subgroup_id * subgroup_size : _GLF_FUZZED(subgroup_size)))) ^ 0u, ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)) * subgroup_size, (true ? subgroup_id * subgroup_size : _GLF_FUZZED(subgroup_size)))) ^ 0u) ^ 0u))))) + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(90.36), _GLF_FUZZED(-6.1)), bvec2(false, false))), clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(injectionSwitch)))[1]), vec2(_GLF_FUZZED(90.36), _GLF_FUZZED(-6.1)), bvec2(false, false))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(90.36), _GLF_FUZZED(-6.1)), bvec2(false, false))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(90.36), _GLF_FUZZED(-6.1)), bvec2(false, false))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(90.36), _GLF_FUZZED(-6.1)), bvec2(false, false))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(injectionSwitch)))[1]), vec2(_GLF_FUZZED(90.36), _GLF_FUZZED(-6.1)), bvec2(false, false))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(_GLF_IDENTITY(90.36, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4(90.36, tan(0.0), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0, 0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, sqrt(0.0), 0.0, exp(0.0))), 1.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0), transpose(transpose(mat4(90.36, tan(0.0), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0, 0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, sqrt(0.0), 0.0, exp(0.0))), 1.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0))))), float(mat3(float(_GLF_IDENTITY(mat4(90.36, tan(0.0), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0, 0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, sqrt(0.0), 0.0, exp(0.0))), 1.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0), transpose(transpose(mat4(90.36, tan(0.0), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0, 0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, sqrt(0.0), 0.0, exp(0.0))), 1.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0))))), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, sin(0.0), 1.0))))), _GLF_FUZZED(_GLF_IDENTITY(-6.1, (-6.1) + 0.0))), _GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(90.36), _GLF_FUZZED(_GLF_IDENTITY(-6.1, max(-6.1, -6.1)))), bvec2(false, false))))) : _GLF_FUZZED(injectionSwitch))).y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), false || (bool(bvec2(_GLF_DEAD(false), false))))))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), mix(float((injectionSwitch.x)), float(_GLF_FUZZED(float(76308))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) - 0.0) > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(8757.8482, 8.6)) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(0.3), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], float(vec3(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))))), max((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))))), (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))))))[0], (injectionSwitch)[0])), 1.0, log(sqrt(1.0))))), _GLF_FUZZED(-3676.9281)), bvec2(true, false))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(8757.8482, 8.6)) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(0.3), (injectionSwitch)[1]), (true ? vec2(_GLF_FUZZED(0.3), (injectionSwitch)[1]) : _GLF_FUZZED(vec2(69.36, -6.0)))), vec2(_GLF_IDENTITY((injectionSwitch)[0], float(vec3(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), 1.0, log(sqrt(1.0))))), _GLF_FUZZED(-3676.9281)), bvec2(true, false))))))), (_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(8757.8482, 8.6)) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - sqrt(vec2(0.0, 0.0))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(0.3), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], float(vec3(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), 1.0, log(sqrt(1.0))))), _GLF_FUZZED(-3676.9281)), bvec2(true, false)))))))) / vec2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-1.1)), bool(false))), 1.0)), _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(8757.8482, 8.6)) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(0.3), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], float(vec3(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), 1.0, log(sqrt(1.0))))), _GLF_FUZZED(-3676.9281)), bvec2(true, false)), mat2(1.0) * (mix(vec2(_GLF_FUZZED(0.3), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], float(vec3(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), 1.0, log(sqrt(1.0))))), _GLF_FUZZED(-3676.9281)), bvec2(true, false))))))))))).y, (true ? _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(vec2(8757.8482, _GLF_IDENTITY(8.6, mix(float(_GLF_FUZZED((+ 1.5))), float(8.6), bool(true)))), (vec2(8757.8482, 8.6)) - sin(vec2(0.0, 0.0)))) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), mix(vec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), clamp(injectionSwitch, injectionSwitch, injectionSwitch)))[0], (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))[1]), vec2(_GLF_FUZZED(5406.4668), _GLF_FUZZED(-6961.1581)), bvec2(false, false))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(0.3), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], float(vec2((injectionSwitch)[0], 1.0))), _GLF_IDENTITY(_GLF_FUZZED(-3676.9281), mix(float(_GLF_FUZZED(166.102)), float(_GLF_IDENTITY(_GLF_FUZZED(-3676.9281), float(mat3x4(_GLF_FUZZED(-3676.9281), 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(sin(0.0), 1.0, log(1.0)), vec3(tan(0.0), 1.0, 0.0)), dot(vec3(sin(0.0), 1.0, log(1.0)), vec3(tan(0.0), 1.0, 0.0))), 1.0, 0.0, abs(0.0), 0.0, 0.0, exp(0.0), 1.0)))), bool(true)))), bvec2(true, false))))))).y : _GLF_FUZZED(-83.64)))))))))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(clamp(workgroup_base, workgroup_base, _GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), min(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), min(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), ~ (~ (~ (workgroup_base))))))) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)) / 1u))))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / _GLF_IDENTITY(1u, (1u) / 1u)), (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))))), workgroup_base))), clamp(_GLF_IDENTITY(clamp(workgroup_base, workgroup_base, _GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), min(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), min(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), ~ (~ (~ (workgroup_base))))))) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)) / 1u))))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / _GLF_IDENTITY(1u, (1u) / 1u)), (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))))), workgroup_base))), (_GLF_IDENTITY(clamp(workgroup_base, workgroup_base, _GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), min(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), min(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), ~ (~ (~ (workgroup_base))))))) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)) / 1u))))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / _GLF_IDENTITY(1u, (1u) / 1u)), (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))))), workgroup_base))), (clamp(workgroup_base, workgroup_base, _GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), min(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), min(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), ~ (~ (~ (workgroup_base))))))) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)) / 1u))))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / _GLF_IDENTITY(1u, (1u) / 1u)), (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))))), workgroup_base)))) * 1u)) | (clamp(workgroup_base, workgroup_base, _GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), min(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), min(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), ~ (~ (~ (workgroup_base))))))) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)) / 1u))))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / _GLF_IDENTITY(1u, (1u) / 1u)), (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))))), workgroup_base))))), _GLF_IDENTITY(clamp(workgroup_base, workgroup_base, _GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), min(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), min(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), ~ (~ (~ (workgroup_base))))))) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)) / 1u))))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / _GLF_IDENTITY(1u, (1u) / 1u)), (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))))), workgroup_base))), (clamp(workgroup_base, workgroup_base, _GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), min(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), min(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), ~ (~ (~ (workgroup_base))))))) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)) / 1u))))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / _GLF_IDENTITY(1u, (1u) / 1u)), (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))))), workgroup_base)))) | (clamp(workgroup_base, workgroup_base, _GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), min(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), min(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), ~ (~ (~ (workgroup_base))))))) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)) / 1u))))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / _GLF_IDENTITY(1u, (1u) / 1u)), (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))))), workgroup_base))))), clamp(workgroup_base, workgroup_base, _GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), min(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), min(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), ~ (~ (~ (workgroup_base))))))) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)) / 1u))))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / _GLF_IDENTITY(1u, (1u) / 1u)), (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))))), workgroup_base)))))), workgroup_base)) + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false || (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))))))))) ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, _GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), min(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), min(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))))), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), min(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), min(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), min(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), min(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))))))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), uint(uvec3(_GLF_IDENTITY((workgroup_base), ((workgroup_base)) << 0u), 0u, 0u))) / 1u)) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))))), _GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u))))), workgroup_base)), _GLF_IDENTITY(min(_GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, _GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), min(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), min(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))))), workgroup_base)))), workgroup_base)), _GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, _GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), min(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), min(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))))), workgroup_base)))), workgroup_base))), ~ (_GLF_IDENTITY(~ (min(_GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, _GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), min(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), min(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))))), workgroup_base)))), workgroup_base)), _GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, _GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), min(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), min(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))))), workgroup_base)))), workgroup_base)))), (false ? _GLF_FUZZED(atomicAnd(num_workgroup, num_workgroup)) : ~ (min(_GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, _GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), ~ (~ (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)))), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) / 1u, min((workgroup_base) / 1u, (workgroup_base) / 1u))), min(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), min(_GLF_IDENTITY(workgroup_base, (workgroup_base) / _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) * 1u)) << 0u)), _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, 1u, 1u))), (workgroup_base) / 1u), (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))))), workgroup_base)))), workgroup_base)), _GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, _GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), max((workgroup_base), (workgroup_base))) / 1u), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), min(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), min(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))))), workgroup_base)))), workgroup_base))))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, _GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), min(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), min(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))))), workgroup_base)))), workgroup_base)), min(_GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, _GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) / 1u, (_GLF_IDENTITY((workgroup_base), ((workgroup_base)) | ((workgroup_base))) / 1u) - 0u)), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), clamp(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), max(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))), _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), min(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(virtual_gid) : workgroup_base))) / 1u), (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)) | _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) / 1u, ~ (~ ((workgroup_base) / 1u))))), (true ? (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) / 1u, ~ (~ ((workgroup_base) / 1u))))) : _GLF_FUZZED(125945u)))))), workgroup_base)))), workgroup_base)), _GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, _GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), min(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), min(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), ~ (~ (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)))), (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))))), workgroup_base)))), workgroup_base)))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, _GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / _GLF_IDENTITY(1u, (1u) ^ (0u | (0u << _GLF_IDENTITY(uint(6u), uint(6u)))))), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) / 1u, (false ? _GLF_FUZZED(packSnorm4x8(vec4(-5876.2323, 1.5, 94.71, 69.66))) : (workgroup_base) / _GLF_IDENTITY(1u, min(1u, 1u))))), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), min(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), (_GLF_IDENTITY((workgroup_base), ((workgroup_base)) + 0u)) | ((workgroup_base))) / 1u), (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) / _GLF_IDENTITY(1u, (1u) << 0u)))))), workgroup_base)))), workgroup_base)), min(_GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, _GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), min(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), min(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u), workgroup_base)), (workgroup_base) / 1u))))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))))), workgroup_base)))), workgroup_base)), _GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, _GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uint(workgroup_base)), 0u | (uint(uint(workgroup_base))))), (workgroup_base) / 1u), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) / 1u, ((workgroup_base) / 1u) | 0u)), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), min(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)))) - 0u), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), min(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)) | _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)), ((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))) | 0u)))), workgroup_base)))), workgroup_base)))))) + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size) : _GLF_FUZZED(num_workgroup)));
 atomicStore(buf[virtual_gid], uint(1), _GLF_IDENTITY(4, 0 | (4)), 64, _GLF_IDENTITY(_GLF_IDENTITY(4, int(int(4))), _GLF_IDENTITY(1 * (4), (1 * (4)) ^ 0)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(max(620.709, -57.38)) : 1.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 1.0))))).x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))) && true)), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * abs(vec2(1.0, 1.0))).y)))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))))))) || false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))))))) || false)), false || ((_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))))))) || false)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))))))) || false)), false || ((_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))))))) || false)))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))))))) || false)), false || ((_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))))))) || false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), bool(bvec4(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))))))) || false)), false || ((_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))))))) || false)))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))))))) || false)), false || ((_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))))))) || false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), false, false, false))))))) && true), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))))), _GLF_IDENTITY((bool(bvec2(false, true))) && true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((bool(bvec2(false, true))) && true))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(2), _GLF_IDENTITY(~ _GLF_IDENTITY((~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uint(2), (uint(2)) | (uint(2)))), ((_GLF_IDENTITY(_GLF_IDENTITY(uint(2), (true ? uint(2) : _GLF_FUZZED(virtual_gid))), (uint(2)) | (uint(2))))) << 0u), 0u | (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uint(2), (uint(2)) | (_GLF_IDENTITY(uint(2), ~ (~ (uint(2))))))), ((_GLF_IDENTITY(uint(2), (uint(2)) | (_GLF_IDENTITY(uint(2), ~ (~ (uint(2)))))))) / uint(_GLF_ONE(1.0, injectionSwitch.y))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(2), (true ? uint(2) : _GLF_FUZZED(virtual_gid))), (uint(2)) | (uint(2))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(2), (true ? uint(2) : _GLF_FUZZED(virtual_gid))), (uint(2)) | (uint(2))), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(2), (true ? uint(2) : _GLF_FUZZED(virtual_gid))), (uint(2)) | (uint(2)))))))))) << 0u)))), ((~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uint(2), (uint(2)) | (uint(2)))), ((_GLF_IDENTITY(_GLF_IDENTITY(uint(2), (true ? uint(2) : _GLF_FUZZED(virtual_gid))), (uint(2)) | (uint(2))))) << 0u), 0u | (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uint(2), (uint(2)) | (_GLF_IDENTITY(uint(2), ~ (~ (uint(2))))))), ((_GLF_IDENTITY(uint(2), (uint(2)) | (_GLF_IDENTITY(uint(2), ~ (~ (uint(2)))))))) / uint(_GLF_ONE(1.0, injectionSwitch.y))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(2), (true ? uint(2) : _GLF_FUZZED(virtual_gid))), (uint(2)) | (uint(2))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(2), (true ? uint(2) : _GLF_FUZZED(virtual_gid))), (uint(2)) | (uint(2))), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(2), (true ? uint(2) : _GLF_FUZZED(virtual_gid))), (uint(2)) | (uint(2)))))))))) << 0u))))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(_GLF_IDENTITY(~ (~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uint(2), (uint(2)) | (uint(2)))), ((_GLF_IDENTITY(_GLF_IDENTITY(uint(2), _GLF_IDENTITY((true ? uint(2) : _GLF_FUZZED(virtual_gid)), uint(uvec3((true ? uint(2) : _GLF_FUZZED(virtual_gid)), 0u, 0u)))), (uint(2)) | (uint(2))))) << 0u), 0u | (_GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_IDENTITY(2, max(2, _GLF_IDENTITY(2, (2) | (2))))), (uint(2)) | _GLF_IDENTITY((uint(2)), ~ (~ (_GLF_IDENTITY((uint(2)), ((uint(2))) + 0u)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, max(2, 2)), 2, 2))) / ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))))), (true ? uint(2) : _GLF_FUZZED(virtual_gid))), (uint(2)) | (uint(2))))) << 0u)))), (~ (~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_IDENTITY(2, min(2, 2))), (uint(2)) | (uint(2)))), ((_GLF_IDENTITY(_GLF_IDENTITY(uint(2), (true ? uint(2) : _GLF_FUZZED(virtual_gid))), (uint(2)) | (uint(2))))) << 0u), 0u | (_GLF_IDENTITY((_GLF_IDENTITY(uint(2), (uint(2)) | (uint(2)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(2), (true ? uint(2) : _GLF_FUZZED(virtual_gid))), (uint(2)) | _GLF_IDENTITY((uint(2)), max(_GLF_IDENTITY((uint(2)), ((uint(2))) * 1u), (uint(2)))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(2), (true ? uint(2) : _GLF_FUZZED(virtual_gid))), (uint(2)) | _GLF_IDENTITY((uint(2)), max(_GLF_IDENTITY((uint(2)), ((uint(2))) * 1u), (uint(2)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(uint(2), (true ? uint(2) : _GLF_FUZZED(virtual_gid))), (uint(2)) | _GLF_IDENTITY((uint(2)), max(_GLF_IDENTITY((uint(2)), ((uint(2))) * 1u), (uint(2))))))) << 0u)) - 0u)) << 0u))))) | (~ (~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uint(2), (uint(2)) | (uint(2)))), ((_GLF_IDENTITY(_GLF_IDENTITY(uint(2), (true ? uint(2) : _GLF_FUZZED(virtual_gid))), (uint(2)) | (uint(2))))) << 0u), 0u | (_GLF_IDENTITY((_GLF_IDENTITY(uint(2), (uint(2)) | (uint(2)))), ((_GLF_IDENTITY(_GLF_IDENTITY(uint(2), (true ? uint(_GLF_IDENTITY(2, min(2, 2))) : _GLF_FUZZED(virtual_gid))), (uint(2)) | (uint(2))))) << 0u)))))), ~ (~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uint(2), (uint(2)) | (uint(2)))), ((_GLF_IDENTITY(_GLF_IDENTITY(uint(2), (true ? uint(2) : _GLF_FUZZED(virtual_gid))), (uint(2)) | (uint(2))))) << 0u), 0u | (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uint(2), _GLF_IDENTITY((uint(2)), 0u + (_GLF_IDENTITY((uint(2)), max((uint(2)), (uint(2)))))) | (uint(2)))), 0u + (_GLF_IDENTITY((_GLF_IDENTITY(uint(2), _GLF_IDENTITY((uint(2)), 0u + (_GLF_IDENTITY((uint(2)), max((uint(2)), (uint(2)))))) | (uint(2)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (_GLF_IDENTITY(uint(2), _GLF_IDENTITY((uint(2)), 0u + (_GLF_IDENTITY((uint(2)), max((uint(2)), (uint(2)))))) | (uint(2)))) : _GLF_FUZZED(packSnorm4x8(vec4(3.8, 8400.6288, -8.1, 9.6))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(2), (true ? uint(_GLF_IDENTITY(2, 0 ^ (2))) : _GLF_FUZZED(virtual_gid))), (uint(2)) | (uint(2)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3((_GLF_IDENTITY(_GLF_IDENTITY(uint(2), (true ? uint(_GLF_IDENTITY(2, 0 ^ (2))) : _GLF_FUZZED(virtual_gid))), (uint(2)) | (uint(2)))), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), 0u), (uvec3((_GLF_IDENTITY(_GLF_IDENTITY(uint(2), (true ? uint(_GLF_IDENTITY(2, 0 ^ (2))) : _GLF_FUZZED(virtual_gid))), (uint(2)) | (uint(2)))), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), 0u)) - uvec3(0u, 0u, 0u))), clamp(uint(_GLF_IDENTITY(uvec3((_GLF_IDENTITY(_GLF_IDENTITY(uint(2), (true ? uint(_GLF_IDENTITY(2, 0 ^ (2))) : _GLF_FUZZED(virtual_gid))), (uint(2)) | (uint(2)))), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), 0u), (uvec3((_GLF_IDENTITY(_GLF_IDENTITY(uint(2), (true ? uint(_GLF_IDENTITY(2, 0 ^ (2))) : _GLF_FUZZED(virtual_gid))), (uint(2)) | (uint(2)))), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), 0u)) - uvec3(0u, 0u, 0u))), uint(_GLF_IDENTITY(uvec3((_GLF_IDENTITY(_GLF_IDENTITY(uint(2), (true ? uint(_GLF_IDENTITY(2, 0 ^ (2))) : _GLF_FUZZED(virtual_gid))), (uint(2)) | (uint(2)))), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), 0u), (uvec3((_GLF_IDENTITY(_GLF_IDENTITY(uint(2), (true ? uint(_GLF_IDENTITY(2, 0 ^ (2))) : _GLF_FUZZED(virtual_gid))), (uint(2)) | (uint(2)))), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), 0u)) - uvec3(0u, 0u, 0u))), uint(_GLF_IDENTITY(uvec3((_GLF_IDENTITY(_GLF_IDENTITY(uint(2), (true ? uint(_GLF_IDENTITY(2, 0 ^ (2))) : _GLF_FUZZED(virtual_gid))), (uint(2)) | (uint(2)))), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), 0u), (uvec3((_GLF_IDENTITY(_GLF_IDENTITY(uint(2), (true ? uint(_GLF_IDENTITY(2, 0 ^ (2))) : _GLF_FUZZED(virtual_gid))), (uint(2)) | (uint(2)))), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), 0u)) - uvec3(0u, 0u, 0u))))))) << 0u)))), _GLF_IDENTITY(~ _GLF_IDENTITY((~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uint(2), (uint(2)) | (uint(2)))), ((_GLF_IDENTITY(_GLF_IDENTITY(uint(2), (true ? uint(2) : _GLF_FUZZED(virtual_gid))), _GLF_IDENTITY((uint(2)), ((uint(2))) * uint(_GLF_ONE(1.0, injectionSwitch.y))) | (uint(2))))) << 0u), 0u | (_GLF_IDENTITY((_GLF_IDENTITY(uint(2), _GLF_IDENTITY((uint(2)), (true ? (uint(2)) : _GLF_FUZZED(workgroup_size))) | (uint(2)))), ((_GLF_IDENTITY(_GLF_IDENTITY(uint(2), (true ? uint(2) : _GLF_FUZZED(virtual_gid))), (uint(2)) | (uint(2))))) << 0u)))), ~ (~ (_GLF_IDENTITY((~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uint(2), (uint(2)) | (uint(2)))), ((_GLF_IDENTITY(_GLF_IDENTITY(uint(2), (true ? uint(2) : _GLF_FUZZED(virtual_gid))), _GLF_IDENTITY((uint(2)), ((uint(2))) * uint(_GLF_ONE(1.0, injectionSwitch.y))) | (uint(2))))) << 0u), 0u | (_GLF_IDENTITY((_GLF_IDENTITY(uint(2), _GLF_IDENTITY((uint(2)), (true ? (uint(2)) : _GLF_FUZZED(workgroup_size))) | (uint(2)))), ((_GLF_IDENTITY(_GLF_IDENTITY(uint(2), (true ? uint(2) : _GLF_FUZZED(virtual_gid))), (uint(2)) | (uint(2))))) << 0u)))), ((~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uint(2), (uint(2)) | (uint(2)))), ((_GLF_IDENTITY(_GLF_IDENTITY(uint(2), (true ? uint(2) : _GLF_FUZZED(virtual_gid))), _GLF_IDENTITY((uint(2)), ((uint(2))) * uint(_GLF_ONE(1.0, injectionSwitch.y))) | (uint(2))))) << 0u), 0u | (_GLF_IDENTITY((_GLF_IDENTITY(uint(2), _GLF_IDENTITY((uint(2)), (true ? (uint(2)) : _GLF_FUZZED(workgroup_size))) | (uint(2)))), ((_GLF_IDENTITY(_GLF_IDENTITY(uint(2), (true ? uint(2) : _GLF_FUZZED(virtual_gid))), (uint(2)) | (uint(2))))) << 0u))))) | ((~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uint(2), (uint(2)) | (uint(2)))), ((_GLF_IDENTITY(_GLF_IDENTITY(uint(2), (true ? uint(2) : _GLF_FUZZED(virtual_gid))), _GLF_IDENTITY((uint(2)), ((uint(2))) * uint(_GLF_ONE(1.0, injectionSwitch.y))) | (uint(2))))) << 0u), 0u | (_GLF_IDENTITY((_GLF_IDENTITY(uint(2), _GLF_IDENTITY((uint(2)), (true ? (uint(2)) : _GLF_FUZZED(workgroup_size))) | (uint(2)))), ((_GLF_IDENTITY(_GLF_IDENTITY(uint(2), (true ? uint(2) : _GLF_FUZZED(virtual_gid))), (uint(2)) | (uint(2))))) << 0u))))))))), (~ (~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uint(2), (uint(2)) | (uint(2)))), ((_GLF_IDENTITY(_GLF_IDENTITY(uint(2), (true ? uint(2) : _GLF_FUZZED(virtual_gid))), (uint(2)) | (uint(2))))) << 0u), 0u | _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(uint(2), (uint(2)) | (uint(2)))), ((_GLF_IDENTITY(_GLF_IDENTITY(uint(2), (true ? uint(2) : _GLF_FUZZED(virtual_gid))), _GLF_IDENTITY((uint(2)) | (uint(2)), ((uint(2)) | (uint(2))) | 0u)))) << 0u)), min((_GLF_IDENTITY((_GLF_IDENTITY(uint(2), (uint(2)) | (uint(2)))), ((_GLF_IDENTITY(_GLF_IDENTITY(uint(2), (true ? uint(2) : _GLF_FUZZED(virtual_gid))), _GLF_IDENTITY((uint(2)) | (uint(2)), ((uint(2)) | (uint(2))) | 0u)))) << 0u)), (_GLF_IDENTITY((_GLF_IDENTITY(uint(2), (uint(2)) | (uint(2)))), ((_GLF_IDENTITY(_GLF_IDENTITY(uint(2), (true ? uint(2) : _GLF_FUZZED(virtual_gid))), _GLF_IDENTITY((uint(2)) | (uint(2)), ((uint(2)) | (uint(2))) | 0u)))) << 0u))))))) << 0u)))), _GLF_IDENTITY(4, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, (4) / 1), _GLF_IDENTITY(4, 0 ^ (4))))), (~ (4)) / 1), (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, (4) / 1), _GLF_IDENTITY(4, 0 ^ (4))))), (~ (4)) / 1)) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, (4) / 1), _GLF_IDENTITY(4, 0 ^ (4))))), (~ (4)) / 1))))), 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))))))))), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))))) || false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(8.9)), bool(false)))), true && ((injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(8.9)), bool(false)))), true && ((injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(8.9)), bool(false)))), true && ((injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(8.9)), bool(false)))), true && ((injectionSwitch.x > injectionSwitch.y)))))), false, true)))), (bool(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(8.9)), bool(false)))), true && ((injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(8.9)), bool(false)))), true && ((injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(8.9)), bool(false)))), true && ((injectionSwitch.x > injectionSwitch.y)))))), false, true))))) && true))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch)))) - vec2(0.0, 0.0)) + vec2(0.0, 0.0)).y), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch)))) - vec2(0.0, 0.0)) + vec2(0.0, 0.0)).y), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch)))) - vec2(0.0, 0.0)) + vec2(0.0, 0.0)).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch)))) - vec2(0.0, 0.0)) + vec2(0.0, 0.0)).y))))) || false))))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
