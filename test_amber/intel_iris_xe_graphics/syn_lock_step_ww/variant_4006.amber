#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_1 {
 mat2x4 _f0;
 mat2x3 _f1;
 bvec2 _f2;
 vec2 _f3;
} ;

struct _GLF_struct_0 {
 uvec2 _f0;
 uvec4 _f1;
 bool _f2;
 bvec3 _f3;
} ;

struct _GLF_struct_2 {
 mat3x2 _f0;
 ivec2 _f1;
 _GLF_struct_0 _f2;
 _GLF_struct_1 _f3;
} ;

struct _GLF_struct_3 {
 _GLF_struct_2 _f0;
 int _f1;
 uint workgroup_base;
 mat2 _f2;
 mat2x3 _f3;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (! (! (false))))), true && (! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))))) || false)), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / sqrt(exp(vec2(0.0, 0.0)))).y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) && true))) || false)) || false))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (! ((_GLF_IDENTITY(false, ! (! (false))))))) || false), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), bool(_GLF_IDENTITY(bool(bool(bool(true))), false || (bool(bool(bool(true)))))))), true, false))), ! (! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), true, true, false)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)).y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), false, false, true)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bvec2(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), false)))), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(976.985)), bool(false)), _GLF_IDENTITY((mix(float(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x), float(_GLF_FUZZED(976.985)), bool(false))) * 1.0, mix(float(_GLF_IDENTITY((mix(float(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x), float(_GLF_FUZZED(976.985)), bool(false))) * 1.0, (true ? (mix(float(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x), float(_GLF_FUZZED(976.985)), bool(false))) * 1.0 : _GLF_FUZZED((-4.6 * 4.0))))), float(_GLF_FUZZED((- 6508.7646))), bool(false)))))) + 0.0) > injectionSwitch.y)), true)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uvec2 GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-73.87), _GLF_FUZZED(578.378)), bvec2(false, false))).x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-73.87), _GLF_FUZZED(578.378)), bvec2(false, false))).x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-73.87), _GLF_FUZZED(578.378)), bvec2(false, false))).x > injectionSwitch.y)), false)))), (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-73.87), _GLF_FUZZED(578.378)), bvec2(false, false))).x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-73.87), _GLF_FUZZED(578.378)), bvec2(false, false))).x > injectionSwitch.y)), false))))) || false)))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)))) && (false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bool(((injectionSwitch.x > injectionSwitch.y))))))))))), ! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, sqrt(vec2(1.0, 1.0)) * (injectionSwitch)).x)) < injectionSwitch.y)), _GLF_IDENTITY(true, false || (true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)), _GLF_IDENTITY(true, false || (true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)), _GLF_IDENTITY(true, false || (true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)), _GLF_IDENTITY(true, false || (true)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)), _GLF_IDENTITY(true, false || (true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)), _GLF_IDENTITY(true, false || (true)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0))) > injectionSwitch.y)))))))), (_GLF_IDENTITY((! (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)), _GLF_IDENTITY(true, false || (true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)), _GLF_IDENTITY(true, false || (true)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0))) > injectionSwitch.y)))))))), false || ((! (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)), _GLF_IDENTITY(true, false || (true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)), _GLF_IDENTITY(true, false || (true)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0))) > injectionSwitch.y))))))))))) && true)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, 1.0, 1.0, determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, abs(1.0), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 1.0))), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, _GLF_IDENTITY(dot(vec4(0.0, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - 0.0), 0.0, 1.0), vec4(1.0, 1.0, abs(1.0), 0.0)), dot(vec4(0.0, _GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(_GLF_IDENTITY(1755.0772, float(mat2(1755.0772, 0.0, 0.0, 0.0))))), bool(false))), 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, float(mat2x3(1.0, 1.0, 1.0, 1.0, 0.0, 1.0))), sqrt(1.0), 1.0, 0.0)), 1.0, 1.0, 1.0), mat3(1.0) * (mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(1755.0772)), bool(false))), 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, sqrt(1.0), 1.0, 0.0)), 1.0, 1.0, 1.0)))), float(mat4x2(float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(1755.0772)), bool(false))), 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-5.6) : 1.0)))), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, sqrt(1.0), 1.0, 0.0)), 1.0, 1.0, 1.0), mat3(1.0) * (mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(1755.0772)), bool(false))), 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), 1.0, sqrt(1.0), 1.0, 0.0)), 1.0, 1.0, 1.0)))), cos(0.0), 0.0, 0.0, 0.0, 1.0, 1.0, sin(0.0))))), injectionSwitch.x), 0.0, 1.0), vec4(1.0, 1.0, _GLF_IDENTITY(abs(1.0), mix(float(abs(1.0)), float(_GLF_FUZZED(-4.4)), bool(false))), 0.0))), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, sqrt(1.0)), vec4(1.0, 1.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 0.0, sqrt(1.0)), vec4(1.0, 1.0, 1.0, 0.0))), 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, log(1.0)), vec4(0.0, 1.0, 0.0, 1.0)), dot(vec4(1.0, 0.0, 1.0, log(1.0)), vec4(0.0, 1.0, 0.0, 1.0))), 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(sqrt(0.0), 0.0)), dot(vec2(1.0, 1.0), vec2(sqrt(0.0), 0.0))), determinant(mat3(1.0, 0.0, 1.0, sqrt(0.0), determinant(mat2(1.0, 0.0, 1.0, 1.0)), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(_GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) - vec2(0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) / 1.0))))), vec2(0.0, 0.0))), 0.0, 1.0))))))), _GLF_IDENTITY(true, false || (true)), _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))) || false))), bool(bvec3(bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(true, false || (true)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, false))))), false, false)))), ! (! (! (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), _GLF_IDENTITY(false || (true), (false || (true)) || false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, (true) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), bool(bvec3(_GLF_IDENTITY(true, (true) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(true, (true) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), false, false)), false || (bool(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), false, false))))))))))))))), (bool(_GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, true && ((true) && true))))) && true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false)))))))))))) && true)))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false || (injectionSwitch.x > injectionSwitch.y), ! (! (false || (injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2(bool(injectionSwitch.x > injectionSwitch.y), true), bvec2(bvec3(bvec2(bool(injectionSwitch.x > injectionSwitch.y), true), false)))))))))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize)))))).x;
 for(int _injected_loop_counter = ((0 | 0) ^ _GLF_IDENTITY(1, (1) | 0)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, 0 + (_injected_loop_counter)) != 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))
    return;
   if(_GLF_DEAD(false))
    break;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    continue;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    continue;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        break;
       continue;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        break;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      break;
     continue;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        break;
       continue;
      }
     break;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.y = workgroup_size;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        break;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
      }
     break;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      break;
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), (! (! ((injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, (false) || false)))), (injectionSwitch.x > injectionSwitch.y)))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) && true))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-19.74)), vec2(_GLF_FUZZED(-937.732), _GLF_IDENTITY((injectionSwitch)[1], 0.0 + ((injectionSwitch)[1]))), bvec2(false, true))).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), true, true, false))))))))))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), clamp(_GLF_IDENTITY((injectionSwitch.y), mix(float(_GLF_FUZZED(5436.2127)), float((_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x3(injectionSwitch.y, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), min(float(mat4x3(injectionSwitch.y, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), float(mat4x3(injectionSwitch.y, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))))))), bool(true))), (injectionSwitch.y), (injectionSwitch.y))) - tan(0.0)), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_IDENTITY(1.0, float(mat2x3(1.0, 1.0, log(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))), 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), abs(determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))))))), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), 0.0, 0.0, 0.0))))), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY((true ? mat2(1.0) * (injectionSwitch) : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), vec2(vec4(_GLF_FUZZED(injectionSwitch), 1.0, sin(0.0))))), vec2(_GLF_IDENTITY(vec2((true ? mat2(1.0) * (injectionSwitch) : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), vec2(vec4(_GLF_FUZZED(injectionSwitch), 1.0, sin(0.0)))))), _GLF_IDENTITY(mat2(1.0) * (vec2((_GLF_IDENTITY(true ? mat2(1.0) * _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), vec2(vec4(_GLF_FUZZED(injectionSwitch), 1.0, sin(0.0)))), clamp(_GLF_IDENTITY(true ? mat2(1.0) * _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), vec2(vec4(_GLF_FUZZED(injectionSwitch), 1.0, sin(0.0)))), clamp(true ? mat2(1.0) * _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), vec2(vec4(_GLF_FUZZED(injectionSwitch), 1.0, sin(0.0)))), true ? mat2(1.0) * _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), vec2(vec4(_GLF_FUZZED(injectionSwitch), 1.0, sin(0.0)))), true ? mat2(1.0) * _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), vec2(vec4(_GLF_FUZZED(injectionSwitch), 1.0, sin(0.0)))))), true ? mat2(1.0) * _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), vec2(vec4(_GLF_FUZZED(injectionSwitch), 1.0, sin(0.0)))), _GLF_IDENTITY(true ? mat2(1.0) * _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), vec2(vec4(_GLF_FUZZED(injectionSwitch), 1.0, sin(0.0)))), (true ? mat2(1.0) * _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), vec2(vec4(_GLF_FUZZED(injectionSwitch), 1.0, sin(0.0))))) * mat2(1.0))))))), clamp(mat2(1.0) * (vec2((true ? mat2(1.0) * (injectionSwitch) : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), vec2(vec4(_GLF_FUZZED(injectionSwitch), 1.0, sin(0.0))))))), mat2(1.0) * (vec2((true ? _GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))) * (injectionSwitch) : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), vec2(vec4(_GLF_FUZZED(injectionSwitch), 1.0, sin(0.0))))))), mat2(1.0) * (vec2((true ? mat2(1.0) * (injectionSwitch) : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), vec2(vec4(_GLF_FUZZED(injectionSwitch), 1.0, sin(0.0)))))))))))))).x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (_GLF_IDENTITY(false, true && (false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(140.589))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(140.589))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(140.589)))) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))) || false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 _GLF_struct_3 _GLF_struct_replacement_3 = _GLF_struct_3(_GLF_struct_2(mat3x2(1.0), ivec2(1), _GLF_struct_0(uvec2(1u), uvec4(_GLF_IDENTITY(1u, max(1u, 1u))), true, bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, ! (! ((true) && true)))))), _GLF_struct_1(mat2x4(1.0), mat2x3(1.0), bvec2(true), vec2(1.0))), _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (1) ^ 0))), GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.y * _GLF_IDENTITY(workgroup_id, (true ? workgroup_id : _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u), (_GLF_IDENTITY(workgroup_size, (workgroup_size) + 0u)) | 0u)))), mat2(1.0), mat2x3(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))) : _GLF_FUZZED(-80.18)))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec3(bool(bool(false)), true, false)))) || (false)), (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 _GLF_IDENTITY(GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x = _GLF_struct_replacement_3.workgroup_base, (GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x = _GLF_struct_replacement_3.workgroup_base) + 0u);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(480.607, 4551.2307)) : injectionSwitch)), injectionSwitch)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint virtual_gid = _GLF_IDENTITY(GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x + _GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)) * subgroup_size + _GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size, min(GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size, GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size)).x, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x, (GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x) ^ 0u)), (_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x, (GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x) ^ 0u)), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x, (_GLF_IDENTITY(GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size, ~ (~ (GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size))).x) ^ 0u))), min(~ ((_GLF_IDENTITY(GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x, (GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x) ^ 0u))), ~ ((_GLF_IDENTITY(GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size, (GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size) | (GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size)), min(GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size, _GLF_IDENTITY(GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size, (_GLF_IDENTITY(GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size, (GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size) / uvec2(1u, 1u))) ^ uvec2(0u, 0u)))).x) ^ 0u)))))))) / 1u))) + subgroup_id * subgroup_size + subgroup_local_id, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x, ~ (~ (GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x))) + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u), (true ? _GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) : _GLF_FUZZED(usubBorrow(subgroup_size, workgroup_size, workgroup_size)))), (subgroup_local_id) - _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, (0u) >> 0u)), 0u ^ (~ (_GLF_IDENTITY(0u, (0u) >> 0u)))))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size, (GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size) >> uvec2(0u, 0u)).x + subgroup_id * subgroup_size + subgroup_local_id, min(GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x + subgroup_id * subgroup_size + subgroup_local_id, _GLF_IDENTITY(GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x, (GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x) | (GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x)) + subgroup_id * subgroup_size + subgroup_local_id)), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size, (GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size) >> uvec2(0u, 0u)).x + subgroup_id * subgroup_size + subgroup_local_id, min(GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x + subgroup_id * subgroup_size + subgroup_local_id, _GLF_IDENTITY(GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x, (GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x) | (GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x)) + subgroup_id * subgroup_size + subgroup_local_id))) / 1u)), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size, _GLF_IDENTITY((GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size), ((GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size)) | uvec2(0u, 0u)) >> uvec2(0u, 0u)).x + subgroup_id * subgroup_size + subgroup_local_id, min(GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x + subgroup_id * subgroup_size + subgroup_local_id, GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec2(subgroup_id * subgroup_size, (0u << _GLF_IDENTITY(uint(3u), uint(3u))))))), (false ? _GLF_FUZZED(subgroup_id) : (_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec2(subgroup_id * subgroup_size, (0u << _GLF_IDENTITY(uint(3u), uint(3u))))))))) - 0u) + subgroup_local_id)), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size, (GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size) >> uvec2(0u, 0u)).x + subgroup_id * subgroup_size + subgroup_local_id, min(GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x + subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), max((subgroup_size), _GLF_IDENTITY((subgroup_size), uint(uint((subgroup_size)))))) - 0u) + subgroup_local_id, GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x + subgroup_id * subgroup_size + subgroup_local_id))) >> 0u))) - 0u) ^ _GLF_IDENTITY(0u, (0u | 0u) | (0u)))))), (true ? _GLF_IDENTITY(GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x + subgroup_id * subgroup_size + subgroup_local_id, ~ (_GLF_IDENTITY(~ (GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x + subgroup_id * subgroup_size + subgroup_local_id), 0u | (~ (_GLF_IDENTITY(GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x, (GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x) >> 0u) + subgroup_id * subgroup_size + subgroup_local_id))))) : _GLF_FUZZED(workgroup_id)))), max(~ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x + subgroup_id * subgroup_size + subgroup_local_id, ~ (~ (GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_FUZZED(121519u))) << _GLF_IDENTITY(uint(5u), uint(5u))) ^ (subgroup_id)) * subgroup_size + _GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x + _GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)) * subgroup_size, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x + _GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)) * subgroup_size, (GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x + _GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)) * subgroup_size) | 0u), 1u, 1u)), ~ (~ _GLF_IDENTITY((uint(uvec3(_GLF_IDENTITY(GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x + _GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)) * subgroup_size, (GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x + _GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), subgroup_id)))))) * subgroup_size) | 0u), 1u, 1u))), (0u << _GLF_IDENTITY(uint(0u), uint(0u))) ^ ((uint(uvec3(_GLF_IDENTITY(GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x + _GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)) * subgroup_size, (GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x + _GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), subgroup_id)))))) * subgroup_size) | 0u), 1u, 1u)))))))) + subgroup_local_id, ~ (~ (GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x + subgroup_id * subgroup_size + subgroup_local_id))), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x + subgroup_id * subgroup_size + subgroup_local_id, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x, 0u | (_GLF_IDENTITY(GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x, 0u | (GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x)))) + subgroup_id * subgroup_size + subgroup_local_id)), (_GLF_IDENTITY(~ (~ (GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x + subgroup_id * subgroup_size + subgroup_local_id)), 0u ^ (~ (~ (GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x + subgroup_id * subgroup_size + subgroup_local_id))))) >> 0u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x + subgroup_id * subgroup_size + subgroup_local_id, (_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x, ~ (_GLF_IDENTITY(~ (GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x), _GLF_IDENTITY(max(~ (GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x), ~ (GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x)), max(_GLF_IDENTITY(max(~ (GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x), ~ (GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x)), ~ (~ (max(~ (GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x), ~ (GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x))))), max(~ (GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x), ~ (GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x))))))), (GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x) | 0u) + subgroup_id * subgroup_size + subgroup_local_id, clamp(_GLF_IDENTITY(GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x + subgroup_id * subgroup_size + subgroup_local_id, (false ? _GLF_FUZZED(178267u) : _GLF_IDENTITY(GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x + subgroup_id * subgroup_size + subgroup_local_id, clamp(_GLF_IDENTITY(GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x, (GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x) ^ 0u) + subgroup_id * subgroup_size + subgroup_local_id, GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x + subgroup_id * subgroup_size + subgroup_local_id, GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x + subgroup_id * subgroup_size + subgroup_local_id)))), GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id)))) + 0u) * subgroup_size + subgroup_local_id, GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x + subgroup_id * subgroup_size + subgroup_local_id)) : _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), clamp(_GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(num_workgroup), 0u | (_GLF_FUZZED(num_workgroup))), 1u * (_GLF_FUZZED(num_workgroup)))) >> 0u), _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, (num_workgroup) | (num_workgroup))), _GLF_FUZZED(num_workgroup))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x, (GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x) | 0u) + subgroup_id * subgroup_size + subgroup_local_id, clamp(GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x + subgroup_id * subgroup_size + subgroup_local_id, GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x + _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * subgroup_size + subgroup_local_id, GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x + subgroup_id * subgroup_size + subgroup_local_id)) : _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), clamp(_GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_IDENTITY(_GLF_FUZZED(num_workgroup), 1u * (_GLF_FUZZED(num_workgroup)))) >> 0u), _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, (num_workgroup) | (num_workgroup))), _GLF_FUZZED(num_workgroup)))) / 1u))), ~ (~ (GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u))))))), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x + subgroup_id * subgroup_size + subgroup_local_id, ~ (~ (GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x + subgroup_id * subgroup_size + subgroup_local_id))), min(_GLF_IDENTITY(GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x + subgroup_id * subgroup_size + subgroup_local_id, ~ (~ (GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x + subgroup_id * subgroup_size + subgroup_local_id))), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x + subgroup_id * subgroup_size, (false ? _GLF_FUZZED(uvec4(38634u, 120193u, 58756u, 95485u)[0]) : GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x + subgroup_id * subgroup_size)) + subgroup_local_id, ~ (_GLF_IDENTITY(~ (GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x + subgroup_id * subgroup_size + subgroup_local_id), uint(uvec2(_GLF_IDENTITY(~ (GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x + subgroup_id * subgroup_size + subgroup_local_id), ~ (~ (~ (_GLF_IDENTITY(GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x + subgroup_id * subgroup_size, (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) ? GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x + subgroup_id * subgroup_size : _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec4(subgroup_size, ((_GLF_IDENTITY(1u, _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(0u), uint(0u))), min((0u >> _GLF_IDENTITY(uint(0u), uint(0u))), _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(0u), uint(0u))), min((0u >> _GLF_IDENTITY(uint(0u), uint(0u))), (0u >> _GLF_IDENTITY(uint(0u), uint(0u))))))) + (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) / 1u)) >> 0u))) << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), _GLF_IDENTITY((uint(7u)) / 1u, ~ (~ (_GLF_IDENTITY((uint(7u)) / 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + ((uint(7u)) / 1u)))))))) >> _GLF_IDENTITY(uint(7u), uint(7u))), 0u, 1u), (_GLF_IDENTITY(false ? _GLF_FUZZED(uvec4(25121u, 139368u, 93292u, 111952u)) : uvec4(subgroup_size, (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (uint(7u)) / 1u))), (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (uint(7u)) / 1u))), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (uint(7u)) / 1u))), max((1u << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (uint(7u)) / 1u))), (1u << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (uint(7u)) / 1u))))), 0u, 1u)), (uint(uvec3(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (uint(7u)) / 1u))), max((1u << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (uint(7u)) / 1u))), (1u << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (uint(7u)) / 1u))))), 0u, 1u))) / 1u), (_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (uint(7u)) / 1u))), max((1u << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (uint(7u)) / 1u))), (1u << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (uint(7u)) / 1u))))), 0u, 1u)), (uint(uvec3(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (uint(7u)) / 1u))), max((1u << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (uint(7u)) / 1u))), (1u << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (uint(7u)) / 1u))))), 0u, 1u))) / 1u)) + 0u))) ^ 0u) >> _GLF_IDENTITY(uint(7u), uint(7u))), 0u, 1u), min(false ? _GLF_FUZZED(uvec4(25121u, 139368u, 93292u, 111952u)) : uvec4(subgroup_size, (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (uint(7u)) / 1u))), (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (uint(7u)) / _GLF_IDENTITY(1u, (1u) >> 0u)))), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (uint(7u)) / 1u))), clamp((1u << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (uint(7u)) / 1u))), (1u << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (uint(7u)) / 1u))), _GLF_IDENTITY((1u << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (uint(7u)) / 1u))), ((1u << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (uint(7u)) / 1u)))) | ((1u << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (uint(7u)) / 1u))))))), max((1u << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (uint(7u)) / 1u))), (1u << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (uint(7u)) / 1u))))), 0u, 1u)), (uint(uvec3(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (uint(7u)) / 1u))), max((1u << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (uint(7u)) / 1u))), (1u << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (uint(7u)) / 1u))))), 0u, 1u))) / 1u))) ^ 0u) >> _GLF_IDENTITY(uint(7u), uint(7u))), 0u, 1u), false ? _GLF_FUZZED(uvec4(25121u, 139368u, 93292u, 111952u)) : uvec4(subgroup_size, (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (uint(7u)) / 1u))), (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (uint(7u)) / 1u))), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (uint(7u)) / 1u))), max((1u << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (uint(7u)) / 1u))), (1u << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (uint(7u)) / 1u))))), 0u, 1u)), (uint(uvec3(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(_GLF_IDENTITY(7u, 0u + (7u))), (uint(7u)) / 1u))), max((1u << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (uint(7u)) / 1u))), (1u << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (uint(7u)) / 1u))))), 0u, 1u))) / 1u))) ^ 0u) >> _GLF_IDENTITY(uint(7u), uint(7u))), 0u, 1u)))))))))) + subgroup_local_id)))), 0u)))))))))), ~ (_GLF_IDENTITY(GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, uint(uvec4(subgroup_local_id, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u))), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x + subgroup_id * subgroup_size, max(_GLF_IDENTITY(GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x + subgroup_id * subgroup_size, (GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x + subgroup_id * subgroup_size) | (GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x + subgroup_id * subgroup_size)), GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x + _GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u) * subgroup_size)) + subgroup_local_id, uint(uvec3(_GLF_IDENTITY(GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x + subgroup_id * subgroup_size, max(_GLF_IDENTITY(GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x + subgroup_id * subgroup_size, (GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x + subgroup_id * subgroup_size) | (GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x + subgroup_id * subgroup_size)), GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x + _GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u) * subgroup_size)) + subgroup_local_id, 0u, 0u)))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x, (_GLF_IDENTITY(11837u & uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ (_GLF_IDENTITY(11837u & uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u + (11837u & uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))) ^ (GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x)) + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))), (true ? subgroup_id * subgroup_size : _GLF_FUZZED(workgroup_size)))) * 1u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (true ? subgroup_id * subgroup_size : _GLF_FUZZED(workgroup_size)))) * 1u))), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (true ? subgroup_id * subgroup_size : _GLF_FUZZED(workgroup_size)))) * 1u), (_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (true ? subgroup_id * subgroup_size : _GLF_FUZZED(workgroup_size)))) * 1u)) | (_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (true ? subgroup_id * subgroup_size : _GLF_FUZZED(workgroup_size)))) * 1u))), _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (true ? subgroup_id * subgroup_size : _GLF_FUZZED(workgroup_size)))) * 1u))) + subgroup_local_id, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x, (_GLF_IDENTITY(11837u, uint(uvec4(11837u, 1u, 1u, 1u))) & uint(_GLF_ZERO(0.0, injectionSwitch.x))) ^ (GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x)) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (true ? subgroup_id * subgroup_size : _GLF_FUZZED(workgroup_size)))) * 1u), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, (true ? subgroup_id * subgroup_size : _GLF_FUZZED(workgroup_size)))) * 1u, ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(subgroup_id * subgroup_size, (true ? subgroup_id * subgroup_size : _GLF_FUZZED(workgroup_size)))) * 1u), 0u | (~ ((_GLF_IDENTITY(subgroup_id * subgroup_size, (true ? subgroup_id * subgroup_size : _GLF_FUZZED(workgroup_size)))) * 1u)))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (true ? subgroup_id * subgroup_size : _GLF_FUZZED(workgroup_size)))) * 1u), ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (true ? subgroup_id * subgroup_size : _GLF_FUZZED(workgroup_size)))) * 1u))))), 0u ^ ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (true ? subgroup_id * subgroup_size : _GLF_FUZZED(workgroup_size)))) * 1u), ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (true ? subgroup_id * subgroup_size : _GLF_FUZZED(workgroup_size)))) * 1u))))))) ^ _GLF_IDENTITY(0u, (0u) | (0u))), _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (true ? subgroup_id * subgroup_size : _GLF_FUZZED(workgroup_size)))) * 1u))) + subgroup_local_id, 1u), max(uvec2(_GLF_IDENTITY(GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x, (_GLF_IDENTITY(11837u, (11837u) / 1u) & _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x))))) ^ (GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x)) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (true ? subgroup_id * subgroup_size : _GLF_FUZZED(workgroup_size)))) * 1u), _GLF_IDENTITY(min(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (true ? subgroup_id * subgroup_size : _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)))))) * 1u), _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(true, bool(bvec4(true, true, true, false))) ? subgroup_id * subgroup_size : _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), uint(uint(_GLF_FUZZED(workgroup_size))))))) * 1u)), max(min(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (true ? subgroup_id * subgroup_size : _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)))))) * 1u), _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(true, bool(bvec4(true, true, true, false))) ? subgroup_id * subgroup_size : _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), uint(uint(_GLF_FUZZED(workgroup_size))))))) * 1u)), _GLF_IDENTITY(min(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (true ? subgroup_id * subgroup_size : _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)))))) * 1u), _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(true, bool(bvec4(true, true, true, false))) ? subgroup_id * subgroup_size : _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), uint(uint(_GLF_FUZZED(workgroup_size))))))) * 1u)), (min(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (true ? subgroup_id * subgroup_size : _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)))))) * 1u), _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(true, bool(bvec4(true, true, true, false))) ? subgroup_id * subgroup_size : _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), uint(uint(_GLF_FUZZED(workgroup_size))))))) * 1u))) << 0u)))) + subgroup_local_id, 1u), uvec2(_GLF_IDENTITY(GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x, (11837u & uint(_GLF_ZERO(0.0, injectionSwitch.x))) ^ (GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x)) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (true ? subgroup_id * subgroup_size : _GLF_FUZZED(subgroup_local_id))), (true ? subgroup_id * subgroup_size : _GLF_FUZZED(workgroup_size)))) * 1u), min(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)))) * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)) : _GLF_FUZZED(workgroup_size)))) * 1u), _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, (true ? subgroup_id * subgroup_size : _GLF_FUZZED(workgroup_size)))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, (true ? subgroup_id * subgroup_size : _GLF_FUZZED(workgroup_size)))), _GLF_IDENTITY((false ? _GLF_FUZZED((workgroup_id - subgroup_id)) : _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, (true ? subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), 0u, 1u))) : _GLF_FUZZED(workgroup_size)))), ~ (~ ((_GLF_IDENTITY(subgroup_id * subgroup_size, (true ? subgroup_id * subgroup_size : _GLF_FUZZED(workgroup_size))))))), min((_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((true ? subgroup_id * subgroup_size : _GLF_FUZZED(workgroup_size)), 0u | ((true ? subgroup_id * subgroup_size : _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (_GLF_FUZZED(workgroup_size)) << (0u & 171978u))))))), (_GLF_IDENTITY(subgroup_id * subgroup_size, (true ? subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u) : _GLF_FUZZED(workgroup_size))))))), ((false ? _GLF_FUZZED((workgroup_id - subgroup_id)) : _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(true ? subgroup_id * subgroup_size : _GLF_FUZZED(workgroup_size), max(true ? subgroup_id * subgroup_size : _GLF_FUZZED(workgroup_size), true ? subgroup_id * subgroup_size : _GLF_FUZZED(workgroup_size)))))), ~ (~ ((_GLF_IDENTITY(subgroup_id * subgroup_size, (true ? subgroup_id * subgroup_size : _GLF_FUZZED(workgroup_size))))))), min((_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((true ? subgroup_id * subgroup_size : _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (_GLF_FUZZED(workgroup_size)) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))), 0u | ((true ? subgroup_id * subgroup_size : _GLF_FUZZED(workgroup_size)))))), (_GLF_IDENTITY(subgroup_id * subgroup_size, (true ? subgroup_id * subgroup_size : _GLF_FUZZED(workgroup_size)))))))) >> 0u))) ^ 0u) * 1u))) + subgroup_local_id, 1u)))))), max(_GLF_IDENTITY((GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x + subgroup_id * subgroup_size + subgroup_local_id), ((GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x + _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec2(subgroup_id * subgroup_size, uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-5.0)))))))) + subgroup_local_id)) / 1u), (GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x + subgroup_id * subgroup_size + subgroup_local_id))), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x + subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x + subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), subgroup_size)))), 0u | (GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x + subgroup_id * subgroup_size))))), 0u ^ (_GLF_IDENTITY(GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x + subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)) | (GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x + subgroup_id * subgroup_size), ~ (_GLF_IDENTITY(~ (0u | (GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x + subgroup_id * subgroup_size)), (_GLF_IDENTITY(~ (0u | (GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x + subgroup_id * subgroup_size)), max(~ (0u | (GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x + subgroup_id * subgroup_size)), ~ (0u | (GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x + subgroup_id * subgroup_size))))) | (~ (0u | (GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x + subgroup_id * subgroup_size))))))))) + subgroup_local_id), _GLF_IDENTITY((GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) - 0u), clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(min(subgroup_id, _GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uvec4(subgroup_id, 0u, 0u, 1u), uvec4(1u, 1u, 1u, 1u) * (uvec4(subgroup_id, 0u, 0u, 1u)))))), min(min(subgroup_id, _GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uvec4(subgroup_id, 0u, 0u, 1u), uvec4(1u, 1u, 1u, 1u) * (uvec4(subgroup_id, 0u, 0u, 1u)))))), min(subgroup_id, _GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uvec4(subgroup_id, 0u, 0u, 1u), uvec4(1u, 1u, 1u, 1u) * (uvec4(subgroup_id, 0u, 0u, 1u))))))))) * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | 0u)) << 0u, 0u | (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | 0u)) << 0u, ((_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | 0u)) << 0u) << 0u)))))) + subgroup_local_id), (false ? _GLF_FUZZED(subgroup_id) : (GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x + subgroup_id * subgroup_size + subgroup_local_id))))))))))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))))
    return;
   return;
  }
 uint next_virtual_gid = _GLF_IDENTITY(GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x + subgroup_id * subgroup_size, uint(uvec2(GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x + subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(num_workgroup) : 0u)), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(num_workgroup) : 0u)))), max(_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, clamp(num_workgroup, num_workgroup, num_workgroup))) : 0u)))), (true ? uint(uint(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, clamp(_GLF_IDENTITY(num_workgroup, (num_workgroup) | (num_workgroup)), num_workgroup, num_workgroup))) : 0u)))) : _GLF_FUZZED(subgroup_local_id))), uint(uint(_GLF_IDENTITY(0u, _GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : 0u), ((false ? _GLF_FUZZED(num_workgroup) : 0u)) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))))))) + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, 0u | ((subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1))) % subgroup_size)));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bool(bvec2(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true), false)), false)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
  }
 atomicStore(buf[virtual_gid], uint(1), _GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, int(ivec3(4, _GLF_IDENTITY(int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((+ 77.03)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(vec2(-8490.9150, -7.9).s)), bvec2(true, false))).y)), 0 | (int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-62.70), _GLF_FUZZED(-0.2)), vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(827.984, 56.37)) : injectionSwitch)))).y)))), (1 | 1))))), _GLF_IDENTITY(int(ivec3((4), 1, _GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (0))), max(_GLF_IDENTITY(0, ~ (~ (0))), _GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (0))), min(_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (0))), (true ? _GLF_IDENTITY(0, ~ (~ (0))) : _GLF_FUZZED(37649))), _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, (0) << 0))))))))))), clamp(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, ~ (~ (0)))))), _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, ~ (~ (0)))))), _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, ~ (~ (0)))))))))), ~ (~ (int(ivec3((4), 1, 0)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(4, 0 ^ (4)), min(_GLF_IDENTITY(4, 0 ^ _GLF_IDENTITY((4), (_GLF_IDENTITY((4), min((4), (4)))) << int(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(4, 0 ^ (_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), (_GLF_IDENTITY(~ (4), min(~ (4), ~ (4)))) | (~ (4))))))))))), 64, 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y)))))))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))), vec2(vec4((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0))) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0))).x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
  }
 atomicStore(buf[next_virtual_gid], uint(2), 4, _GLF_IDENTITY(64, (64) * _GLF_IDENTITY(1, (1) | (0 & (-90446 / -16513)))), 4);
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
