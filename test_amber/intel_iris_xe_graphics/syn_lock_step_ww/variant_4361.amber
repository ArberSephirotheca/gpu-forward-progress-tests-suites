#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)), true && (_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)), (bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true))) && true)))))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false)), (bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), false))) || false))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true))), true && (_GLF_IDENTITY(true && (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true))), false || (true && (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)))))))), false || (_GLF_DEAD(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), bool(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), false, false)))))), true && (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), true && ((! (false)))) || false), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), true && ((! (false)))) || false), bool(bvec2(_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), true && ((! (false)))) || false), true))), true, false)))))))), false || (_GLF_DEAD(false))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, sqrt(0.0), 1.0, 0.0)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))) - vec2(0.0, 0.0)).x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false)))))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), _GLF_IDENTITY(((false)), bool(bvec2(_GLF_IDENTITY(((false)), (((false))) && true), false))) && true))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-1540.3341) : _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0), vec4(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0)), dot(vec4(1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0), vec4(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0))), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), abs(0.0), 1.0, 0.0))).y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))).x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(8.9, 7.2)))).y)))), (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))).x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(8.9, 7.2)))).y)))), true && ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))).x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(8.9, 7.2)))).y))))))) && true)))))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))).x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(8.9, 7.2)))).y)))), (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))).x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(8.9, 7.2)))).y)))), true && ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))).x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(8.9, 7.2)))).y))))))) && true)))))), false, true))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && _GLF_IDENTITY(true, bool(bvec3(true, true, false)))), false || (_GLF_IDENTITY(false, ! (! (false)))))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))) && true)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec4(injectionSwitch.y, 1.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))), (true ? vec4(injectionSwitch.y, 1.0, 0.0, 1.0) : _GLF_FUZZED(vec4(-2.4, 9836.9883, -895.756, 1.3))))))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize), ((gl_WorkGroupSize)) << uvec3(0u, 0u, 0u)), (_GLF_IDENTITY((gl_WorkGroupSize), ((gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY((gl_WorkGroupSize), ((gl_WorkGroupSize)) << uvec3(0u, 0u, 0u)))) | (gl_WorkGroupSize)).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(float(true))), bool(false)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(float(true))), bool(false)))), ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(float(true))), bool(false))), mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(float(true))), bool(false)))), float(_GLF_FUZZED(-3642.0051)), bool(false))))) || false))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uvec3(workgroup_base, ((1u ^ 1u) << _GLF_IDENTITY(uint(2u), uint(2u))), 1u)), (false ? _GLF_FUZZED(subgroup_id) : uint(uvec3(workgroup_base, (_GLF_IDENTITY((1u ^ 1u), clamp(_GLF_IDENTITY((1u ^ 1u), ((1u ^ 1u)) ^ 0u), (1u ^ 1u), (1u ^ 1u))) << _GLF_IDENTITY(uint(2u), uint(2u))), 1u))))) + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, false || (false)), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, false || (false)), false, true), true))))), bool(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, false || (false)), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, false || (false)), false, true), true))))), true))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec3(false, true, true))) || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.9), _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) * 1.0)), vec2((injectionSwitch)[0], _GLF_FUZZED(-8.7)), bvec2(true, false))).x > injectionSwitch.y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))))))))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-5.5)), float(injectionSwitch.y), bool(true)))), ! _GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), (_GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), max((injectionSwitch) / vec2(1.0, 1.0), (injectionSwitch) / vec2(1.0, 1.0)))) * sqrt(vec2(1.0, 1.0)))).x, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), (_GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), max((injectionSwitch) / vec2(1.0, 1.0), (injectionSwitch) / vec2(1.0, 1.0)))) * sqrt(vec2(1.0, 1.0)))).x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), (_GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), max((injectionSwitch) / vec2(1.0, 1.0), (injectionSwitch) / vec2(1.0, 1.0)))) * sqrt(vec2(1.0, 1.0)))).x)) > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), (_GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), max((injectionSwitch) / vec2(1.0, 1.0), (injectionSwitch) / vec2(1.0, 1.0)))) * sqrt(vec2(1.0, 1.0)))).x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(_GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), (_GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), max((injectionSwitch) / vec2(1.0, 1.0), _GLF_IDENTITY((injectionSwitch), vec2(0.0, 0.0) + ((injectionSwitch))) / vec2(1.0, 1.0)))) * sqrt(vec2(1.0, 1.0)))).x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), ((! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), max((injectionSwitch) / vec2(1.0, 1.0), (injectionSwitch) / vec2(1.0, 1.0)))), min((_GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), max((injectionSwitch) / vec2(1.0, 1.0), (injectionSwitch) / vec2(1.0, 1.0)))), _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), max((injectionSwitch) / vec2(1.0, 1.0), (injectionSwitch) / vec2(1.0, 1.0)))), ((_GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), max((injectionSwitch) / vec2(1.0, 1.0), (injectionSwitch) / vec2(1.0, 1.0))))) * mat2(1.0)))) * sqrt(vec2(1.0, 1.0)))).x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (true))))), false, false))))), bool(bvec3(bool(bool(_GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), (_GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), max((injectionSwitch) / vec2(1.0, 1.0), (injectionSwitch) / vec2(1.0, 1.0)))) * sqrt(vec2(1.0, 1.0)))).x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(_GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), (_GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), max((injectionSwitch) / vec2(1.0, 1.0), _GLF_IDENTITY((injectionSwitch), vec2(0.0, 0.0) + ((injectionSwitch))) / vec2(1.0, 1.0)))) * sqrt(vec2(1.0, 1.0)))).x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), ((! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), max((injectionSwitch) / vec2(1.0, 1.0), (injectionSwitch) / vec2(1.0, 1.0)))), min((_GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), max((injectionSwitch) / vec2(1.0, 1.0), (injectionSwitch) / vec2(1.0, 1.0)))), _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), max((injectionSwitch) / vec2(1.0, 1.0), (injectionSwitch) / vec2(1.0, 1.0)))), ((_GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), max((injectionSwitch) / vec2(1.0, 1.0), (injectionSwitch) / vec2(1.0, 1.0))))) * mat2(1.0)))) * sqrt(vec2(1.0, 1.0)))).x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (true))))), false, false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), _GLF_IDENTITY(bool(bvec3(bool(bool(_GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), (_GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), max(_GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(vec2(0.3, -3072.3755)))) / vec2(1.0, 1.0), (injectionSwitch) / vec2(1.0, 1.0)))) * sqrt(vec2(1.0, 1.0)))).x > injectionSwitch.y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))), bool(bvec3(_GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), (_GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), max((injectionSwitch) / vec2(1.0, 1.0), (injectionSwitch) / vec2(1.0, 1.0)))) * sqrt(vec2(1.0, 1.0)))).x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), ((! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(_GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0), (_GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), max((injectionSwitch) / vec2(1.0, 1.0), (injectionSwitch) / vec2(1.0, 1.0)))) * sqrt(vec2(1.0, 1.0)))).x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))) && true), false, false))))), true, true)), true && (bool(bvec3(bool(bool(_GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), (_GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), max(_GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(vec2(0.3, -3072.3755)))) / vec2(1.0, 1.0), (injectionSwitch) / vec2(1.0, 1.0)))) * sqrt(vec2(1.0, 1.0)))).x > injectionSwitch.y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))), bool(bvec3(_GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), (_GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), max((injectionSwitch) / vec2(1.0, 1.0), (injectionSwitch) / vec2(1.0, 1.0)))) * sqrt(vec2(1.0, 1.0)))).x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), ((! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(_GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0), (_GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), max((injectionSwitch) / vec2(1.0, 1.0), (injectionSwitch) / vec2(1.0, 1.0)))) * sqrt(vec2(1.0, 1.0)))).x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))) && true), false, false))))), true, true)))))))))) || false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (_GLF_IDENTITY(subgroup_id * subgroup_size, (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (0u | 0u) | (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)))) * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(workgroup_base) : subgroup_id * subgroup_size)), 1u, 0u, 1u)), (uint(uvec4(_GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(workgroup_base) : subgroup_id * subgroup_size)), 1u, 0u, _GLF_IDENTITY(1u, 0u ^ (1u))))) ^ 0u), (_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(workgroup_base) : subgroup_id * subgroup_size)), 1u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(num_workgroup))), 1u)), (uint(uvec4(_GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(workgroup_base) : subgroup_id * subgroup_size)), 1u, 0u, 1u))) ^ 0u)) >> 0u)), subgroup_id * subgroup_size)), (0u >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), 0u ^ (uint(4u))))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (0u | 0u) | (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(clamp(subgroup_id, subgroup_id, subgroup_id), ~ (~ (_GLF_IDENTITY(clamp(subgroup_id, subgroup_id, subgroup_id), (clamp(subgroup_id, subgroup_id, subgroup_id)) - 0u))))))) * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(workgroup_base) : subgroup_id * subgroup_size)), 1u, 0u, 1u)), _GLF_IDENTITY((uint(uvec4(_GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(workgroup_base) : subgroup_id * subgroup_size)), 1u, 0u, 1u))), 0u ^ (_GLF_IDENTITY((uint(uvec4(_GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(workgroup_base) : subgroup_id * subgroup_size)), 1u, 0u, 1u))), 0u + ((uint(uvec4(_GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(workgroup_base) : subgroup_id * subgroup_size)), 1u, 0u, 1u))))))) ^ 0u), (_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(workgroup_base) : subgroup_id * subgroup_size)), 1u, 0u, 1u)), (uint(uvec4(_GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(workgroup_base) : subgroup_id * subgroup_size)), 1u, 0u, 1u))) ^ 0u)) >> 0u)), subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (0u | 0u) | (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(clamp(subgroup_id, subgroup_id, subgroup_id), ~ (~ (_GLF_IDENTITY(clamp(subgroup_id, subgroup_id, subgroup_id), (clamp(subgroup_id, subgroup_id, subgroup_id)) - 0u))))))) * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(workgroup_base) : subgroup_id * subgroup_size)), 1u, 0u, 1u)), _GLF_IDENTITY((uint(uvec4(_GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(workgroup_base) : subgroup_id * subgroup_size)), 1u, 0u, 1u))), 0u ^ (_GLF_IDENTITY((uint(uvec4(_GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(workgroup_base) : subgroup_id * subgroup_size)), 1u, 0u, 1u))), 0u + ((uint(uvec4(_GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(workgroup_base) : subgroup_id * subgroup_size)), 1u, 0u, 1u))))))) ^ 0u), (_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(workgroup_base) : subgroup_id * subgroup_size)), 1u, 0u, 1u)), (uint(uvec4(_GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(workgroup_base) : subgroup_id * subgroup_size)), 1u, 0u, 1u))) ^ 0u)) >> 0u)), subgroup_id * subgroup_size))) >> 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u), (0u | 0u) | (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), subgroup_id)))) * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(workgroup_base) : subgroup_id * subgroup_size)), 1u, 0u, 1u)), (uint(uvec4(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_base) : subgroup_id * subgroup_size), ((false ? _GLF_FUZZED(workgroup_base) : subgroup_id * subgroup_size)) * 1u)), 1u, 0u, 1u))) ^ 0u), (_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(workgroup_base) : subgroup_id * subgroup_size)), 1u, 0u, 1u)), (uint(uvec4(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(workgroup_base) : subgroup_id * subgroup_size)), 1u, 0u, 1u))) ^ 0u)) >> 0u)), subgroup_id * subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) | 0u, max((subgroup_id) | 0u, (subgroup_id) | 0u))), (0u | 0u) | (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), subgroup_id)))) * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(workgroup_base) : subgroup_id * subgroup_size)), 1u, 0u, 1u)), (uint(uvec4(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_base) : subgroup_id * subgroup_size), ((false ? _GLF_FUZZED(workgroup_base) : subgroup_id * subgroup_size)) * 1u)), 1u, 0u, 1u))) ^ 0u), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(workgroup_base) : subgroup_id * subgroup_size)), 1u, 0u, 1u), clamp(uvec4(_GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(workgroup_base) : subgroup_id * subgroup_size)), 1u, 0u, 1u), uvec4(_GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(workgroup_base) : subgroup_id * subgroup_size)), 1u, 0u, 1u), uvec4(_GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(workgroup_base) : subgroup_id * subgroup_size)), 1u, 0u, 1u)))), (uint(uvec4(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(workgroup_base) : subgroup_id * subgroup_size)), _GLF_IDENTITY(1u, (1u) ^ 0u), 0u, 1u))) ^ 0u)) >> 0u)), subgroup_id * subgroup_size))) / 1u)) >> 0u))) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))))))) + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, max(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)) : _GLF_FUZZED(num_workgroup))), _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, max(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)) : _GLF_FUZZED(num_workgroup))), _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u))), (_GLF_IDENTITY(subgroup_local_id + 1, max(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)) : _GLF_FUZZED(num_workgroup))), _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u)))) - 0u) : _GLF_FUZZED(subgroup_id)))) % subgroup_size), clamp(((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, max(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)) : _GLF_FUZZED(num_workgroup))), _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u))), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, max(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)) : _GLF_FUZZED(num_workgroup))), _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u))), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, max(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)) : _GLF_FUZZED(num_workgroup))), _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u))), (_GLF_IDENTITY(subgroup_local_id + 1, max(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)) : _GLF_FUZZED(num_workgroup))), _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u)))) | (_GLF_IDENTITY(subgroup_local_id + 1, max(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)) : _GLF_FUZZED(num_workgroup))), _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u))))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, max(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)) : _GLF_FUZZED(num_workgroup))), _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, max(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)) : _GLF_FUZZED(num_workgroup))), _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u))), (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(subgroup_local_id + 1, max(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)) : _GLF_FUZZED(num_workgroup))), _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u))))))))))) % subgroup_size), ((_GLF_IDENTITY(subgroup_local_id + 1, max(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)) : _GLF_FUZZED(num_workgroup))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / (1u | 1u))) | 0u)))) % subgroup_size), ((_GLF_IDENTITY(subgroup_local_id + 1, max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)) : _GLF_FUZZED(num_workgroup))), (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(subgroup_local_id + 1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)) : _GLF_FUZZED(num_workgroup))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))) - 0u), subgroup_local_id)) + 1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((workgroup_id ++)) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))) - 0u), subgroup_local_id)) + 1, min(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))) - 0u), subgroup_local_id)) + 1, _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))) - 0u), subgroup_local_id)) + 1)))), (subgroup_local_id + 1) | 0u)))) % subgroup_size))), (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, max(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)) : _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, 1u * (num_workgroup))))), _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, ~ (~ (1)))), _GLF_IDENTITY(int(_GLF_IDENTITY(int(int(_GLF_IDENTITY(1, ~ (~ (1))))), (int(int(_GLF_IDENTITY(1, ~ (~ (1)))))) | (int(int(_GLF_IDENTITY(1, ~ (~ (1)))))))), (int(_GLF_IDENTITY(int(int(_GLF_IDENTITY(1, ~ (~ (1))))), (int(int(_GLF_IDENTITY(1, ~ (~ (1)))))) | (int(int(_GLF_IDENTITY(1, ~ (~ (1))))))))) | (int(_GLF_IDENTITY(int(int(_GLF_IDENTITY(1, ~ (~ (1))))), (int(int(_GLF_IDENTITY(1, ~ (~ (1)))))) | (int(int(_GLF_IDENTITY(1, ~ (~ (1))))))))))))), (subgroup_local_id + 1) | 0u)))), clamp((_GLF_IDENTITY(subgroup_local_id + 1, max(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)) : _GLF_FUZZED(num_workgroup))), _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u)))), (_GLF_IDENTITY(subgroup_local_id + 1, max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)) : _GLF_FUZZED(num_workgroup))), ~ (~ (_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)) : _GLF_FUZZED(num_workgroup)))))), _GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1) | 0u, ((subgroup_local_id + 1) | 0u) ^ 0u))))), (_GLF_IDENTITY(subgroup_local_id + 1, max(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)) : _GLF_FUZZED(num_workgroup))), _GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1), max(_GLF_IDENTITY((subgroup_local_id + 1), clamp((subgroup_local_id + 1), (subgroup_local_id + 1), (subgroup_local_id + 1))), _GLF_IDENTITY((subgroup_local_id + 1), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | ((subgroup_local_id + 1))))) | 0u)))))) % subgroup_size), clamp((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uint(subgroup_local_id + 1)), (uint(uint(subgroup_local_id + 1))) << 0u)), max(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).y)) ? subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)) : _GLF_FUZZED(num_workgroup))), _GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u), subgroup_local_id)) + 1) | 0u)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uint(subgroup_local_id + 1)), (uint(uint(subgroup_local_id + 1))) << 0u)), max(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).y)) ? subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)) : _GLF_FUZZED(num_workgroup))), _GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u), subgroup_local_id)) + 1) | 0u)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uint(subgroup_local_id + 1)), (uint(uint(subgroup_local_id + 1))) << 0u)), max(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).y)) ? subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)) : _GLF_FUZZED(num_workgroup))), _GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u), subgroup_local_id)) + 1) | 0u)))), (true ? (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uint(subgroup_local_id + 1)), (uint(uint(subgroup_local_id + 1))) << 0u)), max(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).y)) ? subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)) : _GLF_FUZZED(num_workgroup))), _GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u), subgroup_local_id)) + 1) | 0u)))) : _GLF_FUZZED(workgroup_base)))) | ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uint(subgroup_local_id + 1)), (uint(uint(subgroup_local_id + 1))) << 0u)), max(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).y)) ? subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)) : _GLF_FUZZED(num_workgroup))), _GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u), subgroup_local_id)) + 1) | 0u))))))), (true ? _GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uint(subgroup_local_id + 1)), (uint(uint(subgroup_local_id + 1))) << 0u)), max(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).y)) ? subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)) : _GLF_FUZZED(num_workgroup))), _GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u), subgroup_local_id)) + 1) | 0u)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uint(subgroup_local_id + 1)), (uint(uint(subgroup_local_id + 1))) << 0u)), max(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).y)) ? subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)) : _GLF_FUZZED(num_workgroup))), _GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u), subgroup_local_id)) + 1) | 0u)))), (true ? (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uint(subgroup_local_id + 1)), (uint(uint(subgroup_local_id + 1))) << 0u)), max(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).y)) ? subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)) : _GLF_FUZZED(num_workgroup))), _GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u), subgroup_local_id)) + 1) | 0u)))) : _GLF_FUZZED(workgroup_base)))) | ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uint(subgroup_local_id + 1)), (uint(uint(subgroup_local_id + 1))) << 0u)), max(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).y)) ? subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)) : _GLF_FUZZED(num_workgroup))), _GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u), subgroup_local_id)) + 1) | 0u))))))), ~ (~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uint(subgroup_local_id + 1)), (uint(uint(subgroup_local_id + 1))) << 0u)), max(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).y)) ? subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)) : _GLF_FUZZED(num_workgroup))), _GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u), subgroup_local_id)) + 1) | 0u)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uint(subgroup_local_id + 1)), (uint(uint(subgroup_local_id + 1))) << 0u)), max(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).y)) ? subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)) : _GLF_FUZZED(num_workgroup))), _GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u), subgroup_local_id)) + 1) | 0u)))), (true ? (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uint(subgroup_local_id + 1)), (uint(uint(subgroup_local_id + 1))) << 0u)), max(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).y)) ? subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)) : _GLF_FUZZED(num_workgroup))), _GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u), subgroup_local_id)) + 1) | 0u)))) : _GLF_FUZZED(workgroup_base)))) | ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uint(subgroup_local_id + 1)), (uint(uint(subgroup_local_id + 1))) << 0u)), max(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).y)) ? subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)) : _GLF_FUZZED(num_workgroup))), _GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u), subgroup_local_id)) + 1) | 0u)))))))))) : _GLF_FUZZED(subgroup_local_id))))) % subgroup_size), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, max(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, log(1.0), 0.0, 0.0, sqrt(sin(0.0))), mat3x2(_GLF_IDENTITY(mat4(mat3x2(injectionSwitch, log(1.0), 0.0, 0.0, sqrt(sin(0.0)))), (mat4(mat3x2(injectionSwitch, log(1.0), 0.0, 0.0, sqrt(sin(0.0))))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))), vec2(mat3x4(vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, log(1.0), 0.0, 0.0, sqrt(sin(0.0))), mat3x2(_GLF_IDENTITY(mat4(mat3x2(injectionSwitch, log(1.0), 0.0, 0.0, sqrt(sin(0.0)))), (mat4(mat3x2(injectionSwitch, log(1.0), 0.0, 0.0, sqrt(sin(0.0))))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0)))).y)) ? subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)) : _GLF_FUZZED(num_workgroup))), _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u))), (_GLF_IDENTITY(subgroup_local_id + 1, max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)) : _GLF_FUZZED(num_workgroup))), max(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)) : _GLF_FUZZED(num_workgroup))), _GLF_IDENTITY(subgroup_local_id + 1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)) : _GLF_FUZZED(num_workgroup))))), _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u)))) | (_GLF_IDENTITY(subgroup_local_id + 1, max(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)), (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)), (subgroup_local_id + _GLF_IDENTITY(1, max(1, 1))) | (subgroup_local_id + _GLF_IDENTITY(1, max(1, 1))))) >> 0u) : _GLF_FUZZED(num_workgroup)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)), (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)), (subgroup_local_id + _GLF_IDENTITY(1, max(1, 1))) | (subgroup_local_id + _GLF_IDENTITY(1, max(1, 1))))) >> 0u) : _GLF_FUZZED(num_workgroup)), 1u), (_GLF_IDENTITY(uvec2((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)), (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)), (subgroup_local_id + _GLF_IDENTITY(1, max(1, 1))) | (subgroup_local_id + _GLF_IDENTITY(1, max(1, 1))))) >> 0u) : _GLF_FUZZED(num_workgroup)), 1u), uvec2(uvec3(uvec2((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)), (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)), (subgroup_local_id + _GLF_IDENTITY(1, max(1, 1))) | (subgroup_local_id + _GLF_IDENTITY(1, max(1, 1))))) >> 0u) : _GLF_FUZZED(num_workgroup)), 1u), 0u)))) | (uvec2((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)), (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)), (subgroup_local_id + _GLF_IDENTITY(1, max(1, 1))) | (subgroup_local_id + _GLF_IDENTITY(1, max(1, 1))))) >> 0u) : _GLF_FUZZED(num_workgroup)), 1u)))), (true ? uint(_GLF_IDENTITY(uvec2((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)), (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)), (subgroup_local_id + _GLF_IDENTITY(1, max(1, 1))) | (subgroup_local_id + _GLF_IDENTITY(1, max(1, 1))))) >> 0u) : _GLF_FUZZED(num_workgroup)), 1u), (_GLF_IDENTITY(uvec2((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)), (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)), (subgroup_local_id + _GLF_IDENTITY(1, max(1, 1))) | (subgroup_local_id + _GLF_IDENTITY(1, max(1, 1))))) >> 0u) : _GLF_FUZZED(num_workgroup)), 1u), uvec2(uvec3(uvec2((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)), (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)), (subgroup_local_id + _GLF_IDENTITY(1, max(1, 1))) | (subgroup_local_id + _GLF_IDENTITY(1, max(1, 1))))) >> 0u) : _GLF_FUZZED(num_workgroup)), 1u), 0u)))) | (uvec2((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)), (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)), (subgroup_local_id + _GLF_IDENTITY(1, max(1, 1))) | (subgroup_local_id + _GLF_IDENTITY(1, max(1, 1))))) >> 0u) : _GLF_FUZZED(num_workgroup)), 1u)))) : _GLF_FUZZED(subgroup_id))))), _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(ivec2(-32721, -90368).t) : 1)), (subgroup_local_id + 1) | 0u)))))) % subgroup_size), ((_GLF_IDENTITY(subgroup_local_id + 1, max(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)) : _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), 0u + (_GLF_FUZZED(num_workgroup))))), _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u)))) % subgroup_size)))) | (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, max(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y)) ? subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)) : _GLF_FUZZED(num_workgroup))), _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u)))) % _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)), clamp(((_GLF_IDENTITY(subgroup_local_id + 1, max(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) ? subgroup_local_id + _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec4(1, 1, 0, 1)), min(int(ivec4(1, 1, 0, 1)), int(ivec4(1, 1, 0, 1)))))) - ((0 >> _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))), ((_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec4(1, 1, 0, 1)), min(int(ivec4(1, 1, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(46251) : 0)), 1)), int(ivec4(1, 1, 0, 1)))))) - ((0 >> _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))) / 1)))) : _GLF_FUZZED(num_workgroup))), _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u)))) % subgroup_size), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))) + 1, max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true), (injectionSwitch.x < injectionSwitch.y)) ? subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)) : _GLF_FUZZED(num_workgroup))), 0u | (_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)) : _GLF_FUZZED(num_workgroup))))), _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u)))) % subgroup_size), ((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))), (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))))) || false)))) ? subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)) : _GLF_FUZZED(num_workgroup))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(91732u) : subgroup_local_id + 1)))), (subgroup_local_id + 1) | 0u)), (_GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))), (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))))) || false)))) ? subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)) : _GLF_FUZZED(num_workgroup))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(91732u) : subgroup_local_id + 1)))), (subgroup_local_id + 1) | 0u)), min(max(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))), (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))))) || false)))) ? subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)) : _GLF_FUZZED(num_workgroup))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(91732u) : subgroup_local_id + 1)))), (subgroup_local_id + 1) | 0u)), max(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))), (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))))) || false)))) ? subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)) : _GLF_FUZZED(num_workgroup))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(91732u) : subgroup_local_id + 1)))), (subgroup_local_id + 1) | 0u))))) | (max(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))), (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))))) || false)))) ? subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)) : _GLF_FUZZED(num_workgroup))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(91732u) : subgroup_local_id + 1)))), (subgroup_local_id + 1) | 0u)))))) % subgroup_size))))), max(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_local_id + 1), 0u ^ ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)))))), _GLF_IDENTITY((~ (_GLF_IDENTITY((subgroup_local_id + 1), 0u ^ ((subgroup_local_id + 1))))), _GLF_IDENTITY(uint(uvec2((~ (_GLF_IDENTITY((subgroup_local_id + 1), 0u ^ ((subgroup_local_id + 1))))), 0u)), (false ? _GLF_FUZZED(7560u) : uint(uvec2((~ (_GLF_IDENTITY((subgroup_local_id + 1), 0u ^ ((subgroup_local_id + 1))))), 0u))))) + 0u), 0u | (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), 0u ^ ((subgroup_local_id + 1))), max(_GLF_IDENTITY((subgroup_local_id + 1), 0u ^ ((subgroup_local_id + 1))), _GLF_IDENTITY((subgroup_local_id + 1), 0u ^ ((subgroup_local_id + 1)))))), _GLF_IDENTITY((~ (_GLF_IDENTITY((subgroup_local_id + 1), 0u ^ ((subgroup_local_id + 1))))), _GLF_IDENTITY(uint(uvec2((~ (_GLF_IDENTITY((subgroup_local_id + 1), 0u ^ ((subgroup_local_id + 1))))), 0u)), (false ? _GLF_FUZZED(7560u) : _GLF_IDENTITY(uint(uvec2((~ (_GLF_IDENTITY((subgroup_local_id + 1), 0u ^ ((subgroup_local_id + 1))))), 0u)), clamp(uint(uvec2((~ (_GLF_IDENTITY((subgroup_local_id + 1), 0u ^ ((subgroup_local_id + 1))))), 0u)), _GLF_IDENTITY(uint(uvec2((~ (_GLF_IDENTITY((subgroup_local_id + 1), 0u ^ ((subgroup_local_id + 1))))), 0u)), (uint(uvec2((~ (_GLF_IDENTITY((subgroup_local_id + 1), 0u ^ ((subgroup_local_id + 1))))), 0u))) / 1u), _GLF_IDENTITY(uint(uvec2((~ (_GLF_IDENTITY((subgroup_local_id + 1), 0u ^ ((subgroup_local_id + 1))))), 0u)), ~ (~ (uint(uvec2((~ (_GLF_IDENTITY((subgroup_local_id + 1), 0u ^ ((subgroup_local_id + 1))))), 0u)))))))))) + 0u))))))) % subgroup_size), (((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), subgroup_size, subgroup_size)))) | 0u), ((subgroup_local_id + 1) % subgroup_size)));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(false, bool(bvec3(false, true, true))) || (_GLF_IDENTITY(false, (false) || false)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), max(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), mat2(1.0) * ((injectionSwitch) * mat2(1.0))), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))))).y, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), max(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), mat2(1.0) * ((injectionSwitch) * mat2(1.0))), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))))).y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), max(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), mat2(1.0) * ((injectionSwitch) * mat2(1.0))), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))))).y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), max(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), mat2(1.0) * ((injectionSwitch) * mat2(1.0))), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))))).y)), injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(injectionSwitch.y), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-6891.1171) : _GLF_IDENTITY(float(injectionSwitch.y), max(float(injectionSwitch.y), float(injectionSwitch.y))))), float(_GLF_FUZZED(8.0)), bool(false))), injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_FUZZED(179.155)), float(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(injectionSwitch.y), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-6891.1171) : _GLF_IDENTITY(float(injectionSwitch.y), max(float(injectionSwitch.y), float(injectionSwitch.y))))), float(_GLF_FUZZED(8.0)), bool(false))), injectionSwitch.y, injectionSwitch.y))), bool(true)))))))), _GLF_IDENTITY(false, (false) && true) || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), bool(bvec4((! (true)), false, true, _GLF_IDENTITY(false, ! (! (false)))))))), (! (_GLF_IDENTITY(true, ! (! (true))))) || false))), false, false))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), (injectionSwitch.x > injectionSwitch.y) || false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-4272.2457)), _GLF_IDENTITY(vec2(_GLF_FUZZED(-2.4), (injectionSwitch)[1]), (false ? _GLF_FUZZED(vec2(-0.3, -27.79)) : vec2(_GLF_FUZZED(-2.4), (injectionSwitch)[1]))), bvec2(false, true))))).x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1.7), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((6280.6785))), bvec2(true, false))), injectionSwitch, injectionSwitch)).y) || false))), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.x > injectionSwitch.y) || false))), true)), ! (! (bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), true))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false)))), false || (false)))) && true))
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))))), (bool(_GLF_DEAD(false))) || false)), _GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))), (bool(_GLF_DEAD(false))) || false)), false)), bool(bvec4(bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(false, ! (! (false))))))), (bool(_GLF_DEAD(false))) || false)), (bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))), (bool(_GLF_DEAD(false))) || false))) && _GLF_IDENTITY(true, true && (true))), false)), true, _GLF_IDENTITY(false, true && (false)), true)))), _GLF_IDENTITY(! (! (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) || false)))), ! (! (! (! (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) || false))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))) && true))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(vec3(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), 1.0, sqrt(0.0)))), injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, min(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u), min(_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid), (_GLF_IDENTITY((virtual_gid), clamp((virtual_gid), (virtual_gid), (virtual_gid)))) ^ 0u) >> 0u), (virtual_gid) ^ 0u))))), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) << 0u)) ^ 0u) | _GLF_IDENTITY((virtual_gid), 0u | (_GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), ((virtual_gid)) ^ 0u), clamp((virtual_gid), (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ (_GLF_IDENTITY(0u, min(0u, 0u)) << _GLF_IDENTITY(uint(1u), uint(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(1u), uint(1u)), ~ (_GLF_IDENTITY(~ (0u << _GLF_IDENTITY(uint(1u), uint(1u))), clamp(_GLF_IDENTITY(~ (0u << _GLF_IDENTITY(uint(1u), uint(1u))), min(~ (0u << _GLF_IDENTITY(uint(1u), uint(1u))), ~ (0u << _GLF_IDENTITY(uint(1u), uint(1u))))), ~ (0u << _GLF_IDENTITY(uint(1u), uint(1u))), _GLF_IDENTITY(~ (0u << _GLF_IDENTITY(uint(1u), uint(1u))), clamp(~ (0u << _GLF_IDENTITY(uint(1u), uint(1u))), ~ (0u << _GLF_IDENTITY(uint(1u), uint(1u))), ~ (0u << _GLF_IDENTITY(uint(1u), uint(1u))))))))))), (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(bitfieldInsert(virtual_gid, 73964u, 34382, 81080)) : _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid) ^ (0u << _GLF_IDENTITY(uint(1u), uint(1u))), max(_GLF_IDENTITY((virtual_gid) ^ (0u << _GLF_IDENTITY(uint(1u), uint(1u))), ~ (~ ((virtual_gid) ^ (0u << _GLF_IDENTITY(uint(1u), uint(1u)))))), (virtual_gid) ^ (0u << _GLF_IDENTITY(uint(1u), uint(1u)))))), uint(uint(_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(1u), uint(1u))), ((0u << _GLF_IDENTITY(uint(1u), uint(1u)))) | ((0u << _GLF_IDENTITY(uint(1u), uint(1u))))))))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(virtual_gid, (virtual_gid) ^ (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), (uint(1u)) | (uint(1u))), uint(1u)))) : _GLF_FUZZED(56239u)))) - 0u)), _GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, uint(uvec2(virtual_gid, 0u)))), 0u | ((_GLF_IDENTITY(virtual_gid, uint(uvec2(virtual_gid, 0u))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, min(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u), min(_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid), (_GLF_IDENTITY((virtual_gid), clamp((virtual_gid), (virtual_gid), (virtual_gid)))) ^ 0u) >> 0u), (virtual_gid) ^ 0u))))), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) << 0u)) ^ 0u) | _GLF_IDENTITY((virtual_gid), 0u | (_GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), ((virtual_gid)) ^ 0u), clamp((virtual_gid), (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ (_GLF_IDENTITY(0u, min(0u, 0u)) << _GLF_IDENTITY(uint(1u), uint(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(1u), uint(1u)), ~ (_GLF_IDENTITY(~ (0u << _GLF_IDENTITY(uint(1u), uint(1u))), clamp(_GLF_IDENTITY(~ (0u << _GLF_IDENTITY(uint(1u), uint(1u))), min(~ (0u << _GLF_IDENTITY(uint(1u), uint(1u))), ~ (0u << _GLF_IDENTITY(uint(1u), uint(1u))))), ~ (0u << _GLF_IDENTITY(uint(1u), uint(1u))), _GLF_IDENTITY(~ (0u << _GLF_IDENTITY(uint(1u), uint(1u))), clamp(~ (0u << _GLF_IDENTITY(uint(1u), uint(1u))), ~ (0u << _GLF_IDENTITY(uint(1u), uint(1u))), ~ (0u << _GLF_IDENTITY(uint(1u), uint(1u))))))))))), (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(bitfieldInsert(virtual_gid, 73964u, 34382, 81080)) : _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid) ^ (0u << _GLF_IDENTITY(uint(1u), uint(1u))), max(_GLF_IDENTITY((virtual_gid) ^ (0u << _GLF_IDENTITY(uint(1u), uint(1u))), ~ (~ ((virtual_gid) ^ (0u << _GLF_IDENTITY(uint(1u), uint(1u)))))), (virtual_gid) ^ (0u << _GLF_IDENTITY(uint(1u), uint(1u)))))), uint(uint(_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(1u), uint(1u))), ((0u << _GLF_IDENTITY(uint(1u), uint(1u)))) | ((0u << _GLF_IDENTITY(uint(1u), uint(1u))))))))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(virtual_gid, (virtual_gid) ^ (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), (uint(1u)) | (uint(1u))), uint(1u)))) : _GLF_FUZZED(56239u)))) - 0u)), _GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, uint(uvec2(virtual_gid, 0u)))), 0u | ((_GLF_IDENTITY(virtual_gid, uint(uvec2(virtual_gid, 0u)))))))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, min(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u), min(_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid), (_GLF_IDENTITY((virtual_gid), clamp((virtual_gid), (virtual_gid), (virtual_gid)))) ^ 0u) >> 0u), (virtual_gid) ^ 0u))))), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) << 0u)) ^ 0u) | _GLF_IDENTITY((virtual_gid), 0u | (_GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), ((virtual_gid)) ^ 0u), clamp((virtual_gid), (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ (_GLF_IDENTITY(0u, min(0u, 0u)) << _GLF_IDENTITY(uint(1u), uint(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(1u), uint(1u)), ~ (_GLF_IDENTITY(~ (0u << _GLF_IDENTITY(uint(1u), uint(1u))), clamp(_GLF_IDENTITY(~ (0u << _GLF_IDENTITY(uint(1u), uint(1u))), min(~ (0u << _GLF_IDENTITY(uint(1u), uint(1u))), ~ (0u << _GLF_IDENTITY(uint(1u), uint(1u))))), ~ (0u << _GLF_IDENTITY(uint(1u), uint(1u))), _GLF_IDENTITY(~ (0u << _GLF_IDENTITY(uint(1u), uint(1u))), clamp(~ (0u << _GLF_IDENTITY(uint(1u), uint(1u))), ~ (0u << _GLF_IDENTITY(uint(1u), uint(1u))), ~ (0u << _GLF_IDENTITY(uint(1u), uint(1u))))))))))), (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(bitfieldInsert(virtual_gid, 73964u, 34382, 81080)) : _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid) ^ (0u << _GLF_IDENTITY(uint(1u), uint(1u))), max(_GLF_IDENTITY((virtual_gid) ^ (0u << _GLF_IDENTITY(uint(1u), uint(1u))), ~ (~ ((virtual_gid) ^ (0u << _GLF_IDENTITY(uint(1u), uint(1u)))))), (virtual_gid) ^ (0u << _GLF_IDENTITY(uint(1u), uint(1u)))))), uint(uint(_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(1u), uint(1u))), ((0u << _GLF_IDENTITY(uint(1u), uint(1u)))) | ((0u << _GLF_IDENTITY(uint(1u), uint(1u))))))))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(virtual_gid, (virtual_gid) ^ (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), (uint(1u)) | (uint(1u))), uint(1u)))) : _GLF_FUZZED(56239u)))) - 0u)), _GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, uint(uvec2(virtual_gid, 0u)))), 0u | ((_GLF_IDENTITY(virtual_gid, uint(uvec2(virtual_gid, 0u)))))))))))))], _GLF_IDENTITY(uint(1), (uint(1)) - (0u | 0u)), 4, 64, _GLF_IDENTITY(4, 0 | (4)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, _GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid), (clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid)) | 0u)))), min(_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid), (clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid)) | 0u)))), (true ? _GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid), (clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid)) | 0u)))) : _GLF_FUZZED(subgroup_id))), _GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid), (clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid)) | 0u)))), (_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid), (clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid)) | 0u))))) << 0u)))))], uint(2), 4, 64, 4);
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
